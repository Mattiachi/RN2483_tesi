

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Mon Aug 08 19:02:18 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   255                           	psect	text229,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258  0000                     
   259 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   260  0000                     
   261 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   262  0000                     
   263 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   264 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   265 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   266 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   267 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   268 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   269 ;;_LORAWAN_LinkCheckCallback$3516	offset	0
   270 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   271 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   272 ;;_DutyCycleCallback$2268	offset	0
   273 ;;DutyCycleCallback@minim	offset	4
   274 ;;DutyCycleCallback@i	offset	8
   275 ;;DutyCycleCallback@found	offset	9
   276 ;;DutyCycleCallback@param	offset=-1 (param)
   277 ;;AutomaticReplyCallback@param	offset=-1 (param)
   278 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   279 ;;AckRetransmissionCallback@param	offset=-1 (param)
   280 ;;_param	offset=-1 (param)
   281 ;;_UpdateJoinSuccessState$3533	offset	0
   282 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   283                           
   284                           	psect	idataCOMRAM
   285  007874                     __pidataCOMRAM:
   286                           	opt stack 0
   287                           
   288                           ;initializer for _randx
   289  007874  0001               	dw	1
   290  007876  0000               	dw	0
   291                           
   292                           ;initializer for _ticksToScheduledInterrupt
   293  007878  FFFF               	dw	65535
   294  00787A  FFFF               	dw	65535
   295                           
   296                           	psect	idataBANK1
   297  00739A                     __pidataBANK1:
   298                           	opt stack 0
   299                           
   300                           ;initializer for GenerateSubkey@F7870
   301  00739A  00                 	db	0
   302  00739B  00                 	db	0
   303  00739C  00                 	db	0
   304  00739D  00                 	db	0
   305  00739E  00                 	db	0
   306  00739F  00                 	db	0
   307  0073A0  00                 	db	0
   308  0073A1  00                 	db	0
   309  0073A2  00                 	db	0
   310  0073A3  00                 	db	0
   311  0073A4  00                 	db	0
   312  0073A5  00                 	db	0
   313  0073A6  00                 	db	0
   314  0073A7  00                 	db	0
   315  0073A8  00                 	db	0
   316  0073A9  87                 	db	135
   317                           
   318                           ;initializer for _portNumber
   319  0073AA  01                 	db	1
   320                           
   321                           ;initializer for _nwkSKey
   322  0073AB  75                 	db	117
   323  0073AC  E0                 	db	224
   324  0073AD  66                 	db	102
   325  0073AE  1A                 	db	26
   326  0073AF  A0                 	db	160
   327  0073B0  BC                 	db	188
   328  0073B1  21                 	db	33
   329  0073B2  E4                 	db	228
   330  0073B3  4B                 	db	75
   331  0073B4  57                 	db	87
   332  0073B5  21                 	db	33
   333  0073B6  B0                 	db	176
   334  0073B7  D6                 	db	214
   335  0073B8  30                 	db	48
   336  0073B9  F7                 	db	247
   337  0073BA  B2                 	db	178
   338                           
   339                           	psect	idataBANK3
   340  007732                     __pidataBANK3:
   341                           	opt stack 0
   342                           
   343                           ;initializer for _appSKey
   344  007732  DD                 	db	221
   345  007733  32                 	db	50
   346  007734  54                 	db	84
   347  007735  F0                 	db	240
   348  007736  8D                 	db	141
   349  007737  55                 	db	85
   350  007738  D6                 	db	214
   351  007739  52                 	db	82
   352  00773A  E7                 	db	231
   353  00773B  73                 	db	115
   354  00773C  0B                 	db	11
   355  00773D  BC                 	db	188
   356  00773E  26                 	db	38
   357  00773F  3E                 	db	62
   358  007740  0A                 	db	10
   359  007741  DA                 	db	218
   360                           
   361                           	psect	mediumconst
   362  00FE6C                     __pmediumconst:
   363                           	opt stack 0
   364  00FE6C  00                 	db	0
   365  00FE6D                     _STable:
   366                           	opt stack 0
   367  00FE6D  63                 	db	99
   368  00FE6E  7C                 	db	124
   369  00FE6F  77                 	db	119
   370  00FE70  7B                 	db	123
   371  00FE71  F2                 	db	242
   372  00FE72  6B                 	db	107
   373  00FE73  6F                 	db	111
   374  00FE74  C5                 	db	197
   375  00FE75  30                 	db	48
   376  00FE76  01                 	db	1
   377  00FE77  67                 	db	103
   378  00FE78  2B                 	db	43
   379  00FE79  FE                 	db	254
   380  00FE7A  D7                 	db	215
   381  00FE7B  AB                 	db	171
   382  00FE7C  76                 	db	118
   383  00FE7D  CA                 	db	202
   384  00FE7E  82                 	db	130
   385  00FE7F  C9                 	db	201
   386  00FE80  7D                 	db	125
   387  00FE81  FA                 	db	250
   388  00FE82  59                 	db	89
   389  00FE83  47                 	db	71
   390  00FE84  F0                 	db	240
   391  00FE85  AD                 	db	173
   392  00FE86  D4                 	db	212
   393  00FE87  A2                 	db	162
   394  00FE88  AF                 	db	175
   395  00FE89  9C                 	db	156
   396  00FE8A  A4                 	db	164
   397  00FE8B  72                 	db	114
   398  00FE8C  C0                 	db	192
   399  00FE8D  B7                 	db	183
   400  00FE8E  FD                 	db	253
   401  00FE8F  93                 	db	147
   402  00FE90  26                 	db	38
   403  00FE91  36                 	db	54
   404  00FE92  3F                 	db	63
   405  00FE93  F7                 	db	247
   406  00FE94  CC                 	db	204
   407  00FE95  34                 	db	52
   408  00FE96  A5                 	db	165
   409  00FE97  E5                 	db	229
   410  00FE98  F1                 	db	241
   411  00FE99  71                 	db	113
   412  00FE9A  D8                 	db	216
   413  00FE9B  31                 	db	49
   414  00FE9C  15                 	db	21
   415  00FE9D  04                 	db	4
   416  00FE9E  C7                 	db	199
   417  00FE9F  23                 	db	35
   418  00FEA0  C3                 	db	195
   419  00FEA1  18                 	db	24
   420  00FEA2  96                 	db	150
   421  00FEA3  05                 	db	5
   422  00FEA4  9A                 	db	154
   423  00FEA5  07                 	db	7
   424  00FEA6  12                 	db	18
   425  00FEA7  80                 	db	128
   426  00FEA8  E2                 	db	226
   427  00FEA9  EB                 	db	235
   428  00FEAA  27                 	db	39
   429  00FEAB  B2                 	db	178
   430  00FEAC  75                 	db	117
   431  00FEAD  09                 	db	9
   432  00FEAE  83                 	db	131
   433  00FEAF  2C                 	db	44
   434  00FEB0  1A                 	db	26
   435  00FEB1  1B                 	db	27
   436  00FEB2  6E                 	db	110
   437  00FEB3  5A                 	db	90
   438  00FEB4  A0                 	db	160
   439  00FEB5  52                 	db	82
   440  00FEB6  3B                 	db	59
   441  00FEB7  D6                 	db	214
   442  00FEB8  B3                 	db	179
   443  00FEB9  29                 	db	41
   444  00FEBA  E3                 	db	227
   445  00FEBB  2F                 	db	47
   446  00FEBC  84                 	db	132
   447  00FEBD  53                 	db	83
   448  00FEBE  D1                 	db	209
   449  00FEBF  00                 	db	0
   450  00FEC0  ED                 	db	237
   451  00FEC1  20                 	db	32
   452  00FEC2  FC                 	db	252
   453  00FEC3  B1                 	db	177
   454  00FEC4  5B                 	db	91
   455  00FEC5  6A                 	db	106
   456  00FEC6  CB                 	db	203
   457  00FEC7  BE                 	db	190
   458  00FEC8  39                 	db	57
   459  00FEC9  4A                 	db	74
   460  00FECA  4C                 	db	76
   461  00FECB  58                 	db	88
   462  00FECC  CF                 	db	207
   463  00FECD  D0                 	db	208
   464  00FECE  EF                 	db	239
   465  00FECF  AA                 	db	170
   466  00FED0  FB                 	db	251
   467  00FED1  43                 	db	67
   468  00FED2  4D                 	db	77
   469  00FED3  33                 	db	51
   470  00FED4  85                 	db	133
   471  00FED5  45                 	db	69
   472  00FED6  F9                 	db	249
   473  00FED7  02                 	db	2
   474  00FED8  7F                 	db	127
   475  00FED9  50                 	db	80
   476  00FEDA  3C                 	db	60
   477  00FEDB  9F                 	db	159
   478  00FEDC  A8                 	db	168
   479  00FEDD  51                 	db	81
   480  00FEDE  A3                 	db	163
   481  00FEDF  40                 	db	64
   482  00FEE0  8F                 	db	143
   483  00FEE1  92                 	db	146
   484  00FEE2  9D                 	db	157
   485  00FEE3  38                 	db	56
   486  00FEE4  F5                 	db	245
   487  00FEE5  BC                 	db	188
   488  00FEE6  B6                 	db	182
   489  00FEE7  DA                 	db	218
   490  00FEE8  21                 	db	33
   491  00FEE9  10                 	db	16
   492  00FEEA  FF                 	db	255
   493  00FEEB  F3                 	db	243
   494  00FEEC  D2                 	db	210
   495  00FEED  CD                 	db	205
   496  00FEEE  0C                 	db	12
   497  00FEEF  13                 	db	19
   498  00FEF0  EC                 	db	236
   499  00FEF1  5F                 	db	95
   500  00FEF2  97                 	db	151
   501  00FEF3  44                 	db	68
   502  00FEF4  17                 	db	23
   503  00FEF5  C4                 	db	196
   504  00FEF6  A7                 	db	167
   505  00FEF7  7E                 	db	126
   506  00FEF8  3D                 	db	61
   507  00FEF9  64                 	db	100
   508  00FEFA  5D                 	db	93
   509  00FEFB  19                 	db	25
   510  00FEFC  73                 	db	115
   511  00FEFD  60                 	db	96
   512  00FEFE  81                 	db	129
   513  00FEFF  4F                 	db	79
   514  00FF00  DC                 	db	220
   515  00FF01  22                 	db	34
   516  00FF02  2A                 	db	42
   517  00FF03  90                 	db	144
   518  00FF04  88                 	db	136
   519  00FF05  46                 	db	70
   520  00FF06  EE                 	db	238
   521  00FF07  B8                 	db	184
   522  00FF08  14                 	db	20
   523  00FF09  DE                 	db	222
   524  00FF0A  5E                 	db	94
   525  00FF0B  0B                 	db	11
   526  00FF0C  DB                 	db	219
   527  00FF0D  E0                 	db	224
   528  00FF0E  32                 	db	50
   529  00FF0F  3A                 	db	58
   530  00FF10  0A                 	db	10
   531  00FF11  49                 	db	73
   532  00FF12  06                 	db	6
   533  00FF13  24                 	db	36
   534  00FF14  5C                 	db	92
   535  00FF15  C2                 	db	194
   536  00FF16  D3                 	db	211
   537  00FF17  AC                 	db	172
   538  00FF18  62                 	db	98
   539  00FF19  91                 	db	145
   540  00FF1A  95                 	db	149
   541  00FF1B  E4                 	db	228
   542  00FF1C  79                 	db	121
   543  00FF1D  E7                 	db	231
   544  00FF1E  C8                 	db	200
   545  00FF1F  37                 	db	55
   546  00FF20  6D                 	db	109
   547  00FF21  8D                 	db	141
   548  00FF22  D5                 	db	213
   549  00FF23  4E                 	db	78
   550  00FF24  A9                 	db	169
   551  00FF25  6C                 	db	108
   552  00FF26  56                 	db	86
   553  00FF27  F4                 	db	244
   554  00FF28  EA                 	db	234
   555  00FF29  65                 	db	101
   556  00FF2A  7A                 	db	122
   557  00FF2B  AE                 	db	174
   558  00FF2C  08                 	db	8
   559  00FF2D  BA                 	db	186
   560  00FF2E  78                 	db	120
   561  00FF2F  25                 	db	37
   562  00FF30  2E                 	db	46
   563  00FF31  1C                 	db	28
   564  00FF32  A6                 	db	166
   565  00FF33  B4                 	db	180
   566  00FF34  C6                 	db	198
   567  00FF35  E8                 	db	232
   568  00FF36  DD                 	db	221
   569  00FF37  74                 	db	116
   570  00FF38  1F                 	db	31
   571  00FF39  4B                 	db	75
   572  00FF3A  BD                 	db	189
   573  00FF3B  8B                 	db	139
   574  00FF3C  8A                 	db	138
   575  00FF3D  70                 	db	112
   576  00FF3E  3E                 	db	62
   577  00FF3F  B5                 	db	181
   578  00FF40  66                 	db	102
   579  00FF41  48                 	db	72
   580  00FF42  03                 	db	3
   581  00FF43  F6                 	db	246
   582  00FF44  0E                 	db	14
   583  00FF45  61                 	db	97
   584  00FF46  35                 	db	53
   585  00FF47  57                 	db	87
   586  00FF48  B9                 	db	185
   587  00FF49  86                 	db	134
   588  00FF4A  C1                 	db	193
   589  00FF4B  1D                 	db	29
   590  00FF4C  9E                 	db	158
   591  00FF4D  E1                 	db	225
   592  00FF4E  F8                 	db	248
   593  00FF4F  98                 	db	152
   594  00FF50  11                 	db	17
   595  00FF51  69                 	db	105
   596  00FF52  D9                 	db	217
   597  00FF53  8E                 	db	142
   598  00FF54  94                 	db	148
   599  00FF55  9B                 	db	155
   600  00FF56  1E                 	db	30
   601  00FF57  87                 	db	135
   602  00FF58  E9                 	db	233
   603  00FF59  CE                 	db	206
   604  00FF5A  55                 	db	85
   605  00FF5B  28                 	db	40
   606  00FF5C  DF                 	db	223
   607  00FF5D  8C                 	db	140
   608  00FF5E  A1                 	db	161
   609  00FF5F  89                 	db	137
   610  00FF60  0D                 	db	13
   611  00FF61  BF                 	db	191
   612  00FF62  E6                 	db	230
   613  00FF63  42                 	db	66
   614  00FF64  68                 	db	104
   615  00FF65  41                 	db	65
   616  00FF66  99                 	db	153
   617  00FF67  2D                 	db	45
   618  00FF68  0F                 	db	15
   619  00FF69  B0                 	db	176
   620  00FF6A  54                 	db	84
   621  00FF6B  BB                 	db	187
   622  00FF6C  16                 	db	22
   623  00FF6D                     __end_of_STable:
   624                           	opt stack 0
   625  00FF6D                     _maxPayloadSize:
   626                           	opt stack 0
   627  00FF6D  33                 	db	51
   628  00FF6E  33                 	db	51
   629  00FF6F  33                 	db	51
   630  00FF70  73                 	db	115
   631  00FF71  F2                 	db	242
   632  00FF72  F2                 	db	242
   633  00FF73  F2                 	db	242
   634  00FF74  38                 	db	56
   635  00FF75                     __end_of_maxPayloadSize:
   636                           	opt stack 0
   637  00FF75                     _modulation:
   638                           	opt stack 0
   639  00FF75  01                 	db	1
   640  00FF76  01                 	db	1
   641  00FF77  01                 	db	1
   642  00FF78  01                 	db	1
   643  00FF79  01                 	db	1
   644  00FF7A  01                 	db	1
   645  00FF7B  01                 	db	1
   646  00FF7C  00                 	db	0
   647  00FF7D                     __end_of_modulation:
   648                           	opt stack 0
   649  00FF7D                     _rxWindowOffset:
   650                           	opt stack 0
   651  00FF7D  DF                 	db	223
   652  00FF7E  CE                 	db	206
   653  00FF7F  C6                 	db	198
   654  00FF80  C2                 	db	194
   655  00FF81  BE                 	db	190
   656  00FF82  BC                 	db	188
   657  00FF83  F1                 	db	241
   658  00FF84  FE                 	db	254
   659  00FF85                     __end_of_rxWindowOffset:
   660                           	opt stack 0
   661  00FF85                     _rxWindowSize:
   662                           	opt stack 0
   663  00FF85  08                 	db	8
   664  00FF86  0A                 	db	10
   665  00FF87  0E                 	db	14
   666  00FF88  1A                 	db	26
   667  00FF89  31                 	db	49
   668  00FF8A  58                 	db	88
   669  00FF8B  3C                 	db	60
   670  00FF8C  08                 	db	8
   671  00FF8D                     __end_of_rxWindowSize:
   672                           	opt stack 0
   673  00FF8D                     _bandwidth:
   674                           	opt stack 0
   675  00FF8D  07                 	db	7
   676  00FF8E  07                 	db	7
   677  00FF8F  07                 	db	7
   678  00FF90  07                 	db	7
   679  00FF91  07                 	db	7
   680  00FF92  07                 	db	7
   681  00FF93  08                 	db	8
   682  00FF94                     __end_of_bandwidth:
   683                           	opt stack 0
   684  00FF94                     _macEndDevCmdReplyLen:
   685                           	opt stack 0
   686  00FF94  01                 	db	1
   687  00FF95  02                 	db	2
   688  00FF96  01                 	db	1
   689  00FF97  02                 	db	2
   690  00FF98  03                 	db	3
   691  00FF99  02                 	db	2
   692  00FF9A  01                 	db	1
   693  00FF9B                     __end_of_macEndDevCmdReplyLen:
   694                           	opt stack 0
   695  00FF9B                     _spreadingFactor:
   696                           	opt stack 0
   697  00FF9B  0C                 	db	12
   698  00FF9C  0B                 	db	11
   699  00FF9D  0A                 	db	10
   700  00FF9E  09                 	db	9
   701  00FF9F  08                 	db	8
   702  00FFA0  07                 	db	7
   703  00FFA1  07                 	db	7
   704  00FFA2                     __end_of_spreadingFactor:
   705                           	opt stack 0
   706  00FFA2                     _txPower868:
   707                           	opt stack 0
   708  00FFA2  14                 	db	20
   709  00FFA3  0E                 	db	14
   710  00FFA4  0B                 	db	11
   711  00FFA5  08                 	db	8
   712  00FFA6  05                 	db	5
   713  00FFA7  02                 	db	2
   714  00FFA8                     __end_of_txPower868:
   715                           	opt stack 0
   716  00FFA8                     _DefaultChannels433:
   717                           	opt stack 0
   718  00FFA8  B9D8               	dw	47576
   719  00FFAA  19D1               	dw	6609
   720  00FFAC  01                 	db	1
   721  00FFAD  50                 	db	80
   722  00FFAE  012E               	dw	302
   723  00FFB0  0000               	dw	0
   724  00FFB2  0000               	dw	0
   725  00FFB4  01                 	db	1
   726  00FFB5  FF                 	db	255
   727  00FFB6  C718               	dw	50968
   728  00FFB8  19D4               	dw	6612
   729  00FFBA  01                 	db	1
   730  00FFBB  50                 	db	80
   731  00FFBC  012E               	dw	302
   732  00FFBE  0000               	dw	0
   733  00FFC0  0000               	dw	0
   734  00FFC2  01                 	db	1
   735  00FFC3  FF                 	db	255
   736  00FFC4  D458               	dw	54360
   737  00FFC6  19D7               	dw	6615
   738  00FFC8  01                 	db	1
   739  00FFC9  50                 	db	80
   740  00FFCA  012E               	dw	302
   741  00FFCC  0000               	dw	0
   742  00FFCE  0000               	dw	0
   743  00FFD0  01                 	db	1
   744  00FFD1  FF                 	db	255
   745  00FFD2                     __end_of_DefaultChannels433:
   746                           	opt stack 0
   747  00FFD2                     _DefaultChannels868:
   748                           	opt stack 0
   749  00FFD2  27A0               	dw	10144
   750  00FFD4  33BE               	dw	13246
   751  00FFD6  01                 	db	1
   752  00FFD7  50                 	db	80
   753  00FFD8  012E               	dw	302
   754  00FFDA  0000               	dw	0
   755  00FFDC  0000               	dw	0
   756  00FFDE  01                 	db	1
   757  00FFDF  FF                 	db	255
   758  00FFE0  34E0               	dw	13536
   759  00FFE2  33C1               	dw	13249
   760  00FFE4  01                 	db	1
   761  00FFE5  50                 	db	80
   762  00FFE6  012E               	dw	302
   763  00FFE8  0000               	dw	0
   764  00FFEA  0000               	dw	0
   765  00FFEC  01                 	db	1
   766  00FFED  FF                 	db	255
   767  00FFEE  4220               	dw	16928
   768  00FFF0  33C4               	dw	13252
   769  00FFF2  01                 	db	1
   770  00FFF3  50                 	db	80
   771  00FFF4  012E               	dw	302
   772  00FFF6  0000               	dw	0
   773  00FFF8  0000               	dw	0
   774  00FFFA  01                 	db	1
   775  00FFFB  FF                 	db	255
   776  00FFFC                     __end_of_DefaultChannels868:
   777                           	opt stack 0
   778  00FFFC                     _FskSyncWordBuff:
   779                           	opt stack 0
   780  00FFFC  C1                 	db	193
   781  00FFFD  94                 	db	148
   782  00FFFE  C1                 	db	193
   783  00FFFF                     __end_of_FskSyncWordBuff:
   784                           	opt stack 0
   785  00FFFF  00                 	db	0	; dummy byte at the end
   786  0000                     
   787                           	psect	nvCOMRAM
   788  00005A                     __pnvCOMRAM:
   789                           	opt stack 0
   790  00005A                     _INT1_InterruptHandler:
   791                           	opt stack 0
   792  00005A                     	ds	2
   793  00005C                     _timer1ReloadVal:
   794                           	opt stack 0
   795  00005C                     	ds	2
   796  00005E                     _timer3ReloadVal:
   797                           	opt stack 0
   798  00005E                     	ds	2
   799                           
   800                           	psect	nvBANK1
   801  0001E9                     __pnvBANK1:
   802                           	opt stack 0
   803  0001E9                     _INT2_InterruptHandler:
   804                           	opt stack 0
   805  0001E9                     	ds	2
   806  0001EB                     _IOCB4_InterruptHandler:
   807                           	opt stack 0
   808  0001EB                     	ds	2
   809  0001ED                     _TMR1_InterruptHandler:
   810                           	opt stack 0
   811  0001ED                     	ds	2
   812  0001EF                     _TMR3_InterruptHandler:
   813                           	opt stack 0
   814  0001EF                     	ds	2
   815  0000                     _ANSELA	set	3896
   816  0000                     _ANSELB	set	3897
   817  0000                     _ANSELC	set	3898
   818  0000                     _ANSELCbits	set	3898
   819  0000                     _ANSELD	set	3899
   820  0000                     _ANSELDbits	set	3899
   821  0000                     _ANSELE	set	3900
   822  0000                     _ANSD0	set	31192
   823  0000                     _ANSD1	set	31193
   824  0000                     _ANSD3	set	31195
   825  0000                     _ANSD4	set	31196
   826  0000                     _CCP1MD	set	31216
   827  0000                     _CCP2MD	set	31217
   828  0000                     _CCP3MD	set	31218
   829  0000                     _CCP4MD	set	31219
   830  0000                     _CCP5MD	set	31220
   831  0000                     _CMP1MD	set	31209
   832  0000                     _CMP2MD	set	31210
   833  0000                     _CTMUMD	set	31211
   834  0000                     _MSSP1MD	set	31222
   835  0000                     _MSSP2MD	set	31223
   836  0000                     _TMR2MD	set	31225
   837  0000                     _TMR4MD	set	31227
   838  0000                     _TMR5MD	set	31228
   839  0000                     _TMR6MD	set	31229
   840  0000                     _UART1MD	set	31230
   841  0000                     _UART2MD	set	31231
   842  0000                     _TMR1	set	4046
   843  0000                     _TMR3	set	4018
   844  0000                     _ADCON0bits	set	4034
   845  0000                     _ADCON2bits	set	4032
   846  0000                     _ADRESH	set	4036
   847  0000                     _ADRESL	set	4035
   848  0000                     _INTCON2bits	set	4081
   849  0000                     _INTCON3bits	set	4080
   850  0000                     _INTCONbits	set	4082
   851  0000                     _IOCBbits	set	3938
   852  0000                     _LATA	set	3977
   853  0000                     _LATB	set	3978
   854  0000                     _LATBbits	set	3978
   855  0000                     _LATC	set	3979
   856  0000                     _LATCbits	set	3979
   857  0000                     _LATD	set	3980
   858  0000                     _LATDbits	set	3980
   859  0000                     _LATE	set	3981
   860  0000                     _LATEbits	set	3981
   861  0000                     _OSCCON	set	4051
   862  0000                     _OSCCON2	set	4050
   863  0000                     _OSCTUNE	set	3995
   864  0000                     _PIE1bits	set	3997
   865  0000                     _PIE2bits	set	4000
   866  0000                     _PIR1bits	set	3998
   867  0000                     _PIR2bits	set	4001
   868  0000                     _PORTBbits	set	3969
   869  0000                     _PORTCbits	set	3970
   870  0000                     _PORTDbits	set	3971
   871  0000                     _RCONbits	set	4048
   872  0000                     _SSP2ADD	set	3950
   873  0000                     _SSP2BUF	set	3951
   874  0000                     _SSP2CON1	set	3948
   875  0000                     _SSP2CON1bits	set	3948
   876  0000                     _SSP2STAT	set	3949
   877  0000                     _SSP2STATbits	set	3949
   878  0000                     _T1CON	set	4045
   879  0000                     _T1CONbits	set	4045
   880  0000                     _T1GCON	set	4044
   881  0000                     _T3CON	set	4017
   882  0000                     _T3CONbits	set	4017
   883  0000                     _T3GCON	set	4020
   884  0000                     _TMR1H	set	4047
   885  0000                     _TMR1L	set	4046
   886  0000                     _TMR3H	set	4019
   887  0000                     _TMR3L	set	4018
   888  0000                     _TRISA	set	3986
   889  0000                     _TRISB	set	3987
   890  0000                     _TRISBbits	set	3987
   891  0000                     _TRISC	set	3988
   892  0000                     _TRISCbits	set	3988
   893  0000                     _TRISD	set	3989
   894  0000                     _TRISDbits	set	3989
   895  0000                     _TRISE	set	3990
   896  0000                     _TRISEbits	set	3990
   897  0000                     _WPUB	set	3937
   898  0000                     _IDLEN	set	32415
   899  0000                     _LATC2	set	31834
   900  0000                     _LATD0	set	31840
   901  0000                     _LATD1	set	31841
   902  0000                     _LATD3	set	31843
   903  0000                     _LATD4	set	31844
   904  0000                     _TRISC2	set	31906
   905  0000                     _TRISD0	set	31912
   906  0000                     _TRISD1	set	31913
   907  0000                     _TRISD3	set	31915
   908  0000                     _TRISD4	set	31916
   909                           
   910                           ; #config settings
   911  0000                     
   912                           	psect	cinit
   913  0053FC                     __pcinit:
   914                           	opt stack 0
   915  0053FC                     start_initialization:
   916                           	opt stack 0
   917  0053FC                     __initialization:
   918                           	opt stack 0
   919                           
   920                           ; Initialize objects allocated to BANK3 (16 bytes)
   921                           ; load TBLPTR registers with __pidataBANK3
   922  0053FC  0E32               	movlw	low __pidataBANK3
   923  0053FE  6EF6               	movwf	tblptrl,c
   924  005400  0E77               	movlw	high __pidataBANK3
   925  005402  6EF7               	movwf	tblptrh,c
   926  005404  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   927  005406  6EF8               	movwf	tblptru,c
   928  005408  EE03  F0A0         	lfsr	0,__pdataBANK3
   929  00540C  EE20 F010          	lfsr	2,16
   930  005410                     copy_data0:
   931  005410  0009               	tblrd		*+
   932  005412  CFF5 FFEE          	movff	tablat,postinc0
   933  005416  50DD               	movf	postdec2,w,c
   934  005418  50D9               	movf	fsr2l,w,c
   935  00541A  E1FA               	bnz	copy_data0
   936                           
   937                           ; Initialize objects allocated to BANK1 (33 bytes)
   938                           ; load TBLPTR registers with __pidataBANK1
   939  00541C  0E9A               	movlw	low __pidataBANK1
   940  00541E  6EF6               	movwf	tblptrl,c
   941  005420  0E73               	movlw	high __pidataBANK1
   942  005422  6EF7               	movwf	tblptrh,c
   943  005424  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   944  005426  6EF8               	movwf	tblptru,c
   945  005428  EE01  F0C8         	lfsr	0,__pdataBANK1
   946  00542C  EE20 F021          	lfsr	2,33
   947  005430                     copy_data1:
   948  005430  0009               	tblrd		*+
   949  005432  CFF5 FFEE          	movff	tablat,postinc0
   950  005436  50DD               	movf	postdec2,w,c
   951  005438  50D9               	movf	fsr2l,w,c
   952  00543A  E1FA               	bnz	copy_data1
   953                           
   954                           ; Initialize objects allocated to COMRAM (8 bytes)
   955                           ; load TBLPTR registers with __pidataCOMRAM
   956  00543C  0E74               	movlw	low __pidataCOMRAM
   957  00543E  6EF6               	movwf	tblptrl,c
   958  005440  0E78               	movlw	high __pidataCOMRAM
   959  005442  6EF7               	movwf	tblptrh,c
   960  005444  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   961  005446  6EF8               	movwf	tblptru,c
   962  005448  EE00  F052         	lfsr	0,__pdataCOMRAM
   963  00544C  EE20 F008          	lfsr	2,8
   964  005450                     copy_data2:
   965  005450  0009               	tblrd		*+
   966  005452  CFF5 FFEE          	movff	tablat,postinc0
   967  005456  50DD               	movf	postdec2,w,c
   968  005458  50D9               	movf	fsr2l,w,c
   969  00545A  E1FA               	bnz	copy_data2
   970                           
   971                           ; Clear objects allocated to BIGRAM (542 bytes)
   972  00545C  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   973  005460  EE22 F01E          	lfsr	2,542
   974  005464                     clear_0:
   975  005464  6AEE               	clrf	postinc0,c
   976  005466  50DD               	movf	postdec2,w,c
   977  005468  50D9               	movf	fsr2l,w,c
   978  00546A  E1FC               	bnz	clear_0
   979  00546C  50DA               	movf	fsr2h,w,c
   980  00546E  E1FA               	bnz	clear_0
   981                           
   982                           ; Clear objects allocated to BANK4 (224 bytes)
   983  005470  EE04  F000         	lfsr	0,__pbssBANK4
   984  005474  0EE0               	movlw	224
   985  005476                     clear_1:
   986  005476  6AEE               	clrf	postinc0,c
   987  005478  06E8               	decf	wreg,f,c
   988  00547A  E1FD               	bnz	clear_1
   989                           
   990                           ; Clear objects allocated to BANK3 (160 bytes)
   991  00547C  EE03  F000         	lfsr	0,__pbssBANK3
   992  005480  0EA0               	movlw	160
   993  005482                     clear_2:
   994  005482  6AEE               	clrf	postinc0,c
   995  005484  06E8               	decf	wreg,f,c
   996  005486  E1FD               	bnz	clear_2
   997                           
   998                           ; Clear objects allocated to BANK2 (245 bytes)
   999  005488  EE02  F000         	lfsr	0,__pbssBANK2
  1000  00548C  0EF5               	movlw	245
  1001  00548E                     clear_3:
  1002  00548E  6AEE               	clrf	postinc0,c
  1003  005490  06E8               	decf	wreg,f,c
  1004  005492  E1FD               	bnz	clear_3
  1005                           
  1006                           ; Clear objects allocated to BANK1 (75 bytes)
  1007  005494  EE01  F07D         	lfsr	0,__pbssBANK1
  1008  005498  0E4B               	movlw	75
  1009  00549A                     clear_4:
  1010  00549A  6AEE               	clrf	postinc0,c
  1011  00549C  06E8               	decf	wreg,f,c
  1012  00549E  E1FD               	bnz	clear_4
  1013                           
  1014                           ; Clear objects allocated to BANK0 (11 bytes)
  1015  0054A0  EE00  F0E8         	lfsr	0,__pbssBANK0
  1016  0054A4  0E0B               	movlw	11
  1017  0054A6                     clear_5:
  1018  0054A6  6AEE               	clrf	postinc0,c
  1019  0054A8  06E8               	decf	wreg,f,c
  1020  0054AA  E1FD               	bnz	clear_5
  1021                           
  1022                           ; Clear objects allocated to COMRAM (20 bytes)
  1023  0054AC  EE00  F032         	lfsr	0,__pbssCOMRAM
  1024  0054B0  0E14               	movlw	20
  1025  0054B2                     clear_6:
  1026  0054B2  6AEE               	clrf	postinc0,c
  1027  0054B4  06E8               	decf	wreg,f,c
  1028  0054B6  E1FD               	bnz	clear_6
  1029  0054B8                     end_of_initialization:
  1030                           	opt stack 0
  1031  0054B8                     __end_of__initialization:
  1032                           	opt stack 0
  1033  0054B8  0100               	movlb	0
  1034  0054BA  EF7E  F02D         	goto	_main	;jump to C main() function
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec2	equ	0xFDD
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           
  1045                           	psect	bssCOMRAM
  1046  000032                     __pbssCOMRAM:
  1047                           	opt stack 0
  1048  000032                     TMR_GetDeltaTime@retVal:
  1049                           	opt stack 0
  1050  000032                     	ds	4
  1051  000036                     _ticksAccounted:
  1052                           	opt stack 0
  1053  000036                     	ds	4
  1054  00003A                     _ticksAdded:
  1055                           	opt stack 0
  1056  00003A                     	ds	4
  1057  00003E                     TMR_GetDeltaTime@tmrVal:
  1058                           	opt stack 0
  1059  00003E                     	ds	2
  1060  000040                     TMR_SwapTimer@oldVal:
  1061                           	opt stack 0
  1062  000040                     	ds	2
  1063  000042                     TMR_SwapTimer@retVal:
  1064                           	opt stack 0
  1065  000042                     	ds	2
  1066  000044                     __roundCounter:
  1067                           	opt stack 0
  1068  000044                     	ds	1
  1069  000045                     handle16sInterrupt@counterSleepTimeout:
  1070                           	opt stack 0
  1071  000045                     	ds	1
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec2	equ	0xFDD
  1079                           fsr2h	equ	0xFDA
  1080                           fsr2l	equ	0xFD9
  1081                           
  1082                           	psect	dataCOMRAM
  1083  000052                     __pdataCOMRAM:
  1084                           	opt stack 0
  1085  000052                     _randx:
  1086                           	opt stack 0
  1087  000052                     	ds	4
  1088  000056                     _ticksToScheduledInterrupt:
  1089                           	opt stack 0
  1090  000056                     	ds	4
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec2	equ	0xFDD
  1098                           fsr2h	equ	0xFDA
  1099                           fsr2l	equ	0xFD9
  1100                           
  1101                           	psect	bssBANK0
  1102  0000E8                     __pbssBANK0:
  1103                           	opt stack 0
  1104  0000E8                     _rxPayload:
  1105                           	opt stack 0
  1106  0000E8                     	ds	4
  1107  0000EC                     _reloadVal:
  1108                           	opt stack 0
  1109  0000EC                     	ds	2
  1110  0000EE                     __rcon:
  1111                           	opt stack 0
  1112  0000EE                     	ds	1
  1113  0000EF                     _allocatedTimers:
  1114                           	opt stack 0
  1115  0000EF                     	ds	1
  1116  0000F0                     _dioStatus:
  1117                           	opt stack 0
  1118  0000F0                     	ds	1
  1119  0000F1                     _localDioStatus:
  1120                           	opt stack 0
  1121  0000F1                     	ds	1
  1122  0000F2                     _timerOverflow:
  1123                           	opt stack 0
  1124  0000F2                     	ds	1
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec2	equ	0xFDD
  1132                           fsr2h	equ	0xFDA
  1133                           fsr2l	equ	0xFD9
  1134                           
  1135                           	psect	bssBANK1
  1136  00017D                     __pbssBANK1:
  1137                           	opt stack 0
  1138  00017D                     _TimeToSend:
  1139                           	opt stack 0
  1140  00017D                     	ds	1
  1141  00017E                     _RadioConfiguration:
  1142                           	opt stack 0
  1143  00017E                     	ds	54
  1144  0001B4                     _aesBuffer:
  1145                           	opt stack 0
  1146  0001B4                     	ds	16
  1147  0001C4                     _payload:
  1148                           	opt stack 0
  1149  0001C4                     	ds	4
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec2	equ	0xFDD
  1157                           fsr2h	equ	0xFDA
  1158                           fsr2l	equ	0xFD9
  1159                           
  1160                           	psect	dataBANK1
  1161  0001C8                     __pdataBANK1:
  1162                           	opt stack 0
  1163  0001C8                     GenerateSubkey@F7870:
  1164                           	opt stack 0
  1165  0001C8                     	ds	16
  1166  0001D8                     _portNumber:
  1167                           	opt stack 0
  1168  0001D8                     	ds	1
  1169  0001D9                     _nwkSKey:
  1170                           	opt stack 0
  1171  0001D9                     	ds	16
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec2	equ	0xFDD
  1179                           fsr2h	equ	0xFDA
  1180                           fsr2l	equ	0xFD9
  1181                           
  1182                           	psect	bssBANK2
  1183  000200                     __pbssBANK2:
  1184                           	opt stack 0
  1185  000200                     _loRa:
  1186                           	opt stack 0
  1187  000200                     	ds	245
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           postdec2	equ	0xFDD
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           
  1198                           	psect	bssBANK3
  1199  000300                     __pbssBANK3:
  1200                           	opt stack 0
  1201  000300                     _swTimers:
  1202                           	opt stack 0
  1203  000300                     	ds	160
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           postdec2	equ	0xFDD
  1211                           fsr2h	equ	0xFDA
  1212                           fsr2l	equ	0xFD9
  1213                           
  1214                           	psect	dataBANK3
  1215  0003A0                     __pdataBANK3:
  1216                           	opt stack 0
  1217  0003A0                     _appSKey:
  1218                           	opt stack 0
  1219  0003A0                     	ds	16
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           postdec2	equ	0xFDD
  1227                           fsr2h	equ	0xFDA
  1228                           fsr2l	equ	0xFD9
  1229                           
  1230                           	psect	bssBANK4
  1231  000400                     __pbssBANK4:
  1232                           	opt stack 0
  1233  000400                     _Channels:
  1234                           	opt stack 0
  1235  000400                     	ds	224
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           postdec2	equ	0xFDD
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           
  1246                           	psect	bssBIGRAM
  1247  0004E0                     __pbssBIGRAM:
  1248                           	opt stack 0
  1249  0004E0                     _macBuffer:
  1250                           	opt stack 0
  1251  0004E0                     	ds	271
  1252  0005EF                     _radioBuffer:
  1253                           	opt stack 0
  1254  0005EF                     	ds	271
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           postinc0	equ	0xFEE
  1260                           wreg	equ	0xFE8
  1261                           postdec2	equ	0xFDD
  1262                           fsr2h	equ	0xFDA
  1263                           fsr2l	equ	0xFD9
  1264                           
  1265                           	psect	cstackBANK1
  1266  000100                     __pcstackBANK1:
  1267                           	opt stack 0
  1268  000100                     AESCmac@k2:
  1269                           	opt stack 0
  1270                           
  1271                           ; 16 bytes @ 0x0
  1272  000100                     	ds	16
  1273  000110                     AESCmac@k1:
  1274                           	opt stack 0
  1275                           
  1276                           ; 16 bytes @ 0x10
  1277  000110                     	ds	16
  1278  000120                     AESCmac@mLast:
  1279                           	opt stack 0
  1280                           
  1281                           ; 16 bytes @ 0x20
  1282  000120                     	ds	16
  1283  000130                     AESCmac@padded:
  1284                           	opt stack 0
  1285                           
  1286                           ; 16 bytes @ 0x30
  1287  000130                     	ds	16
  1288  000140                     AESCmac@y:
  1289                           	opt stack 0
  1290                           
  1291                           ; 16 bytes @ 0x40
  1292  000140                     	ds	16
  1293  000150                     AESCmac@x:
  1294                           	opt stack 0
  1295                           
  1296                           ; 16 bytes @ 0x50
  1297  000150                     	ds	16
  1298  000160                     AESCmac@ptr:
  1299                           	opt stack 0
  1300                           
  1301                           ; 2 bytes @ 0x60
  1302  000160                     	ds	2
  1303  000162                     AESCmac@flag:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x62
  1307  000162                     	ds	1
  1308  000163                     AESCmac@n:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x63
  1312  000163                     	ds	1
  1313  000164                     AESCmac@j:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x64
  1317  000164                     	ds	1
  1318  000165                     AESCmac@i:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0x65
  1322  000165                     	ds	1
  1323  000166                     LORAWAN_RxDone@buffer:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0x66
  1327  000166                     	ds	2
  1328  000168                     LORAWAN_RxDone@bufferLength:
  1329                           	opt stack 0
  1330                           
  1331                           ; 1 bytes @ 0x68
  1332  000168                     	ds	1
  1333  000169                     LORAWAN_RxDone@fPort:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x69
  1337  000169                     	ds	1
  1338  00016A                     LORAWAN_RxDone@channelIndex:
  1339                           	opt stack 0
  1340                           
  1341                           ; 1 bytes @ 0x6A
  1342  00016A                     	ds	1
  1343  00016B                     LORAWAN_RxDone@mhdr:
  1344                           	opt stack 0
  1345                           
  1346                           ; 1 bytes @ 0x6B
  1347  00016B                     	ds	1
  1348  00016C                     LORAWAN_RxDone@extractedMic:
  1349                           	opt stack 0
  1350                           
  1351                           ; 4 bytes @ 0x6C
  1352  00016C                     	ds	4
  1353  000170                     LORAWAN_RxDone@bufferIndex:
  1354                           	opt stack 0
  1355                           
  1356                           ; 1 bytes @ 0x70
  1357  000170                     	ds	1
  1358  000171                     LORAWAN_RxDone@temp:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0x71
  1362  000171                     	ds	1
  1363  000172                     LORAWAN_RxDone@packet:
  1364                           	opt stack 0
  1365                           
  1366                           ; 2 bytes @ 0x72
  1367  000172                     	ds	2
  1368  000174                     LORAWAN_RxDone@computedMic:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x74
  1372  000174                     	ds	4
  1373  000178                     LORAWAN_RxDone@joinAccept:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x78
  1377  000178                     	ds	2
  1378  00017A                     LORAWAN_RxDone@frmPayloadLength:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0x7A
  1382  00017A                     	ds	1
  1383  00017B                     LORAWAN_RxDone@hdr:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x7B
  1387  00017B                     	ds	2
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec2	equ	0xFDD
  1395                           fsr2h	equ	0xFDA
  1396                           fsr2l	equ	0xFD9
  1397                           
  1398                           	psect	cstackBANK0
  1399  000060                     __pcstackBANK0:
  1400                           	opt stack 0
  1401  000060                     	ds	4
  1402  000064                     ??_UpdateMinMaxChDataRate:
  1403  000064                     ??_FindSmallestDataRate:
  1404  000064                     ??_UpdateReceiveDelays:
  1405  000064                     ??_CountfOptsLength:
  1406  000064                     ??_ADC_SelChannel:
  1407  000064                     ?_TMR1_ReadTimer:
  1408                           	opt stack 0
  1409  000064                     ?_ExecuteLinkCheck:
  1410                           	opt stack 0
  1411  000064                     ?_ExecuteDutyCycle:
  1412                           	opt stack 0
  1413  000064                     ?_ExecuteDevStatus:
  1414                           	opt stack 0
  1415  000064                     ?_GetRx1Freq:
  1416                           	opt stack 0
  1417  000064                     ?___lmul:
  1418                           	opt stack 0
  1419  000064                     ?___lldiv:
  1420                           	opt stack 0
  1421  000064                     ?___llmod:
  1422                           	opt stack 0
  1423  000064                     SwTimerCreate@retVal:
  1424                           	opt stack 0
  1425  000064                     SwTimerIsRunning@timerId:
  1426                           	opt stack 0
  1427  000064                     SwTimerStop@timerId:
  1428                           	opt stack 0
  1429  000064                     SPI2_Exchange8bit@data:
  1430                           	opt stack 0
  1431  000064                     HALResetPinOutputValue@value:
  1432                           	opt stack 0
  1433  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1434                           	opt stack 0
  1435  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1436                           	opt stack 0
  1437  000064                     RADIO_SetOutputPower@power:
  1438                           	opt stack 0
  1439  000064                     RADIO_SetCRC@crc:
  1440                           	opt stack 0
  1441  000064                     RADIO_SetIQInverted@iqInverted:
  1442                           	opt stack 0
  1443  000064                     RADIO_SetBandwidth@bandwidth:
  1444                           	opt stack 0
  1445  000064                     RADIO_SetModulation@modulation:
  1446                           	opt stack 0
  1447  000064                     ValidateDataRate@dataRate:
  1448                           	opt stack 0
  1449  000064                     ValidateTxPower@result:
  1450                           	opt stack 0
  1451  000064                     UpdateDLSettings@dlRx1DrOffset:
  1452                           	opt stack 0
  1453  000064                     UpdateDataRange@dataRangeNew:
  1454                           	opt stack 0
  1455  000064                     UpdateChannelIdStatus@statusNew:
  1456                           	opt stack 0
  1457  000064                     ValidateRxOffset@rxOffset:
  1458                           	opt stack 0
  1459  000064                     ValidateChannelId@allowedForDefaultChannels:
  1460                           	opt stack 0
  1461  000064                     ValidateChannelMaskCntl@result:
  1462                           	opt stack 0
  1463  000064                     UpdateCurrentDataRate@valueNew:
  1464                           	opt stack 0
  1465  000064                     UpdateTxPower@txPowerNew:
  1466                           	opt stack 0
  1467  000064                     UpdateJoinInProgress@state:
  1468                           	opt stack 0
  1469  000064                     INTERRUPT_GetDioStatus@a:
  1470                           	opt stack 0
  1471  000064                     EncKeySchedule@key:
  1472                           	opt stack 0
  1473  000064                     ___abdiv@divisor:
  1474                           	opt stack 0
  1475  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1476                           	opt stack 0
  1477  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1478                           	opt stack 0
  1479  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1480                           	opt stack 0
  1481  000064                     SwTimerSetCallback@callback:
  1482                           	opt stack 0
  1483  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1484                           	opt stack 0
  1485  000064                     ExecuteDutyCycle@ptr:
  1486                           	opt stack 0
  1487  000064                     ExecuteDevStatus@ptr:
  1488                           	opt stack 0
  1489  000064                     UpdateDutyCycle@dutyCycleNew:
  1490                           	opt stack 0
  1491  000064                     ValidateChannelMask@channelMask:
  1492                           	opt stack 0
  1493  000064                     TMR1_WriteTimer@timerVal:
  1494                           	opt stack 0
  1495  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1496                           	opt stack 0
  1497  000064                     TMR3_SetInterruptHandler@InterruptHandler:
  1498                           	opt stack 0
  1499  000064                     FillSubKey@source:
  1500                           	opt stack 0
  1501  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1502                           	opt stack 0
  1503  000064                     ExecuteLinkCheck@ptr:
  1504                           	opt stack 0
  1505  000064                     IncludeMacCommandsResponse@macBuffer:
  1506                           	opt stack 0
  1507  000064                     CheckFlags@hdr:
  1508                           	opt stack 0
  1509  000064                     CheckMcastFlags@hdr:
  1510                           	opt stack 0
  1511  000064                     EncodeShiftRow@stateTable:
  1512                           	opt stack 0
  1513  000064                     RxDataDone@pData:
  1514                           	opt stack 0
  1515  000064                     memcpy@d1:
  1516                           	opt stack 0
  1517  000064                     memset@p1:
  1518                           	opt stack 0
  1519  000064                     SystemBlockingWaitMs@ms:
  1520                           	opt stack 0
  1521  000064                     RADIO_SetChannelFrequency@frequency:
  1522                           	opt stack 0
  1523  000064                     ValidateFrequency@frequencyNew:
  1524                           	opt stack 0
  1525  000064                     UpdateFrequency@frequencyNew:
  1526                           	opt stack 0
  1527  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1528                           	opt stack 0
  1529  000064                     UpdateReceiveWindow2Parameters@frequency:
  1530                           	opt stack 0
  1531  000064                     ___lmul@multiplier:
  1532                           	opt stack 0
  1533  000064                     ___lldiv@dividend:
  1534                           	opt stack 0
  1535  000064                     ___llmod@dividend:
  1536                           	opt stack 0
  1537                           
  1538                           ; 4 bytes @ 0x4
  1539  000064                     	ds	1
  1540  000065                     ??_UpdateDataRange:
  1541  000065                     ??_UpdateChannelIdStatus:
  1542  000065                     ??_EncKeySchedule:
  1543  000065                     SwTimerIsRunning@isRunning:
  1544                           	opt stack 0
  1545  000065                     HALSPISend@data:
  1546                           	opt stack 0
  1547  000065                     ValidateDataRate@result:
  1548                           	opt stack 0
  1549  000065                     ValidateTxPower@txPowerNew:
  1550                           	opt stack 0
  1551  000065                     UpdateDLSettings@dlRx2Dr:
  1552                           	opt stack 0
  1553  000065                     ValidateRxOffset@result:
  1554                           	opt stack 0
  1555  000065                     ValidateChannelId@result:
  1556                           	opt stack 0
  1557  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1558                           	opt stack 0
  1559  000065                     UpdateMinMaxChDataRate@i:
  1560                           	opt stack 0
  1561  000065                     FindSmallestDataRate@found:
  1562                           	opt stack 0
  1563  000065                     ADC_SelChannel@c:
  1564                           	opt stack 0
  1565  000065                     ___abdiv@counter:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x5
  1569  000065                     	ds	1
  1570  000066                     ??_TMR1_ReadTimer:
  1571  000066                     ??_ExecuteDutyCycle:
  1572  000066                     ?_ADC_Read:
  1573                           	opt stack 0
  1574  000066                     SwTimerSetCallback@callbackParameter:
  1575                           	opt stack 0
  1576  000066                     RADIO_RegisterWrite@value:
  1577                           	opt stack 0
  1578  000066                     RADIO_RegisterRead@reg:
  1579                           	opt stack 0
  1580  000066                     UpdateDataRange@channelId:
  1581                           	opt stack 0
  1582  000066                     UpdateChannelIdStatus@channelId:
  1583                           	opt stack 0
  1584  000066                     ValidateDataRange@result:
  1585                           	opt stack 0
  1586  000066                     ValidateChannelId@channelId:
  1587                           	opt stack 0
  1588  000066                     UpdateDutyCycle@channelId:
  1589                           	opt stack 0
  1590  000066                     ValidateChannelMask@i:
  1591                           	opt stack 0
  1592  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1593                           	opt stack 0
  1594  000066                     FindSmallestDataRate@i:
  1595                           	opt stack 0
  1596  000066                     EncodeShiftRow@temp:
  1597                           	opt stack 0
  1598  000066                     RxDataDone@dataLength:
  1599                           	opt stack 0
  1600  000066                     ___abdiv@sign:
  1601                           	opt stack 0
  1602  000066                     FillSubKey@key:
  1603                           	opt stack 0
  1604  000066                     memcpy@s1:
  1605                           	opt stack 0
  1606  000066                     memset@c:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x6
  1610  000066                     	ds	1
  1611  000067                     SwTimerSetCallback@timerId:
  1612                           	opt stack 0
  1613  000067                     RADIO_RegisterWrite@reg:
  1614                           	opt stack 0
  1615  000067                     RADIO_RegisterRead@readValue:
  1616                           	opt stack 0
  1617  000067                     UpdateDataRange@i:
  1618                           	opt stack 0
  1619  000067                     UpdateChannelIdStatus@i:
  1620                           	opt stack 0
  1621  000067                     ValidateDataRange@dataRangeNew:
  1622                           	opt stack 0
  1623  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1624                           	opt stack 0
  1625  000067                     FindSmallestDataRate@dataRate:
  1626                           	opt stack 0
  1627  000067                     RxDataDone@status:
  1628                           	opt stack 0
  1629  000067                     ___abdiv@quotient:
  1630                           	opt stack 0
  1631                           
  1632                           ; 1 bytes @ 0x7
  1633  000067                     	ds	1
  1634  000068                     ??_IncludeMacCommandsResponse:
  1635  000068                     ??_RxDataDone:
  1636  000068                     ??_ADC_Read:
  1637  000068                     ??_SystemBlockingWaitMs:
  1638  000068                     RADIO_WritePower@ocp:
  1639                           	opt stack 0
  1640  000068                     RADIO_UnhandledInterrupt@modulation:
  1641                           	opt stack 0
  1642  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1643                           	opt stack 0
  1644  000068                     ValidateFrequency@result:
  1645                           	opt stack 0
  1646  000068                     ValidateDataRange@dataRateMax:
  1647                           	opt stack 0
  1648  000068                     UpdateFrequency@channelId:
  1649                           	opt stack 0
  1650  000068                     FillSubKey@size:
  1651                           	opt stack 0
  1652  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1653                           	opt stack 0
  1654  000068                     UpdateReceiveDelays@delay:
  1655                           	opt stack 0
  1656  000068                     ___abdiv@dividend:
  1657                           	opt stack 0
  1658  000068                     EnableChannels1@channelMask:
  1659                           	opt stack 0
  1660  000068                     TMR1_ReadTimer@readVal:
  1661                           	opt stack 0
  1662  000068                     _EncKeySchedule$4148:
  1663                           	opt stack 0
  1664  000068                     memcpy@n:
  1665                           	opt stack 0
  1666  000068                     memset@n:
  1667                           	opt stack 0
  1668  000068                     ___lmul@multiplicand:
  1669                           	opt stack 0
  1670  000068                     ___lldiv@divisor:
  1671                           	opt stack 0
  1672  000068                     ___llmod@divisor:
  1673                           	opt stack 0
  1674                           
  1675                           ; 4 bytes @ 0x8
  1676  000068                     	ds	1
  1677  000069                     ??_FillSubKey:
  1678  000069                     ??_RADIO_DIO3:
  1679  000069                     ??_RADIO_DIO4:
  1680  000069                     ??_RADIO_DIO5:
  1681  000069                     ?_ExecuteRxTimingSetup:
  1682                           	opt stack 0
  1683  000069                     RADIO_WriteMode@newModulation:
  1684                           	opt stack 0
  1685  000069                     RADIO_WritePower@paDac:
  1686                           	opt stack 0
  1687  000069                     ExecuteDutyCycle@maxDCycle:
  1688                           	opt stack 0
  1689  000069                     ValidateDataRange@dataRateMin:
  1690                           	opt stack 0
  1691  000069                     ExecuteRxTimingSetup@ptr:
  1692                           	opt stack 0
  1693                           
  1694                           ; 2 bytes @ 0x9
  1695  000069                     	ds	1
  1696  00006A                     RADIO_WriteMode@blocking:
  1697                           	opt stack 0
  1698  00006A                     RADIO_WritePower@power:
  1699                           	opt stack 0
  1700  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1701                           	opt stack 0
  1702  00006A                     EnableChannels1@channelMaskCntl:
  1703                           	opt stack 0
  1704  00006A                     TMR1_ReadTimer@readValHigh:
  1705                           	opt stack 0
  1706  00006A                     FillSubKey@carry:
  1707                           	opt stack 0
  1708  00006A                     CountfOptsLength@macCommandLength:
  1709                           	opt stack 0
  1710  00006A                     ADC_Read@channel:
  1711                           	opt stack 0
  1712  00006A                     AESEncode@block:
  1713                           	opt stack 0
  1714  00006A                     memcpy@d:
  1715                           	opt stack 0
  1716  00006A                     memset@p:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0xA
  1720  00006A                     	ds	1
  1721  00006B                     RADIO_WriteMode@currentModulation:
  1722                           	opt stack 0
  1723  00006B                     EnableChannels1@channelIndexMin:
  1724                           	opt stack 0
  1725  00006B                     TMR1_ReadTimer@readValLow:
  1726                           	opt stack 0
  1727  00006B                     FillSubKey@i:
  1728                           	opt stack 0
  1729  00006B                     ExecuteRxTimingSetup@delay:
  1730                           	opt stack 0
  1731  00006B                     CountfOptsLength@i:
  1732                           	opt stack 0
  1733  00006B                     ADC_Read@result:
  1734                           	opt stack 0
  1735                           
  1736                           ; 2 bytes @ 0xB
  1737  00006B                     	ds	1
  1738  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1739  00006C                     ?_TMR_SwapTimer:
  1740                           	opt stack 0
  1741  00006C                     ?_TMR_GetDeltaTime:
  1742                           	opt stack 0
  1743  00006C                     RADIO_WriteMode@dioMapping:
  1744                           	opt stack 0
  1745  00006C                     EnableChannels1@channelIndexMax:
  1746                           	opt stack 0
  1747  00006C                     AESEncode@key:
  1748                           	opt stack 0
  1749  00006C                     ___llmod@counter:
  1750                           	opt stack 0
  1751  00006C                     TMR_SwapTimer@timerVal:
  1752                           	opt stack 0
  1753  00006C                     memcpy@s:
  1754                           	opt stack 0
  1755  00006C                     ___lmul@product:
  1756                           	opt stack 0
  1757  00006C                     ___lldiv@quotient:
  1758                           	opt stack 0
  1759                           
  1760                           ; 4 bytes @ 0xC
  1761  00006C                     	ds	1
  1762  00006D                     ??_AESEncode:
  1763  00006D                     RADIO_WriteMode@currentMode:
  1764                           	opt stack 0
  1765  00006D                     EnableChannels1@i:
  1766                           	opt stack 0
  1767  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1768                           	opt stack 0
  1769                           
  1770                           ; 1 bytes @ 0xD
  1771  00006D                     	ds	1
  1772  00006E                     ?_ExtractMic:
  1773                           	opt stack 0
  1774  00006E                     RADIO_WriteMode@newMode:
  1775                           	opt stack 0
  1776  00006E                     InitDefault868Channels@i:
  1777                           	opt stack 0
  1778  00006E                     InitDefault433Channels@i:
  1779                           	opt stack 0
  1780  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1781                           	opt stack 0
  1782  00006E                     IncludeMacCommandsResponse@i:
  1783                           	opt stack 0
  1784  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1785                           	opt stack 0
  1786  00006E                     EnableChannels@channelMask:
  1787                           	opt stack 0
  1788  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1789                           	opt stack 0
  1790  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1791                           	opt stack 0
  1792  00006E                     PrepareSessionKeys@sessionKey:
  1793                           	opt stack 0
  1794  00006E                     ExtractMic@buffer:
  1795                           	opt stack 0
  1796  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1797                           	opt stack 0
  1798  00006E                     AssembleEncryptionBlock@frameCounter:
  1799                           	opt stack 0
  1800                           
  1801                           ; 4 bytes @ 0xE
  1802  00006E                     	ds	1
  1803  00006F                     RADIO_WriteMode@opMode:
  1804                           	opt stack 0
  1805  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0xF
  1809  00006F                     	ds	1
  1810  000070                     ??_TMR_GetDeltaTime:
  1811  000070                     ?_rand:
  1812                           	opt stack 0
  1813  000070                     ?_RADIO_ReadRandom:
  1814                           	opt stack 0
  1815  000070                     ?_ExecuteNewChannel:
  1816                           	opt stack 0
  1817  000070                     ?_ExecuteRxParamSetupReq:
  1818                           	opt stack 0
  1819  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1820                           	opt stack 0
  1821  000070                     EnableChannels@channelMaskCntl:
  1822                           	opt stack 0
  1823  000070                     ExtractMic@bufferLength:
  1824                           	opt stack 0
  1825  000070                     ___lldiv@counter:
  1826                           	opt stack 0
  1827  000070                     ExecuteNewChannel@ptr:
  1828                           	opt stack 0
  1829  000070                     ExecuteRxParamSetupReq@ptr:
  1830                           	opt stack 0
  1831  000070                     UpdateCfList@joinAccept:
  1832                           	opt stack 0
  1833  000070                     PrepareSessionKeys@appNonce:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x10
  1837  000070                     	ds	1
  1838  000071                     ?_ExecuteLinkAdr:
  1839                           	opt stack 0
  1840  000071                     ExecuteLinkAdr@ptr:
  1841                           	opt stack 0
  1842  000071                     SwTimerSetTimeout@timeout:
  1843                           	opt stack 0
  1844  000071                     RADIO_WriteFrequency@frequency:
  1845                           	opt stack 0
  1846  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1847                           	opt stack 0
  1848  000071                     RADIO_WriteFSKBitRate@bitRate:
  1849                           	opt stack 0
  1850  000071                     ConfigureRadio@freq:
  1851                           	opt stack 0
  1852                           
  1853                           ; 4 bytes @ 0x11
  1854  000071                     	ds	1
  1855  000072                     ??_ExtractMic:
  1856  000072                     ??_TMR_OverrideRemaining:
  1857  000072                     ??_UpdateCfList:
  1858  000072                     ?___lwmod:
  1859                           	opt stack 0
  1860  000072                     ExecuteNewChannel@drRange:
  1861                           	opt stack 0
  1862  000072                     AssembleEncryptionBlock@blockId:
  1863                           	opt stack 0
  1864  000072                     RADIO_ReadRandom@retVal:
  1865                           	opt stack 0
  1866  000072                     PrepareSessionKeys@networkId:
  1867                           	opt stack 0
  1868  000072                     ___lwmod@dividend:
  1869                           	opt stack 0
  1870  000072                     ExecuteRxParamSetupReq@frequency:
  1871                           	opt stack 0
  1872                           
  1873                           ; 4 bytes @ 0x12
  1874  000072                     	ds	1
  1875  000073                     ??_ExecuteLinkAdr:
  1876  000073                     AssembleEncryptionBlock@firstByte:
  1877                           	opt stack 0
  1878  000073                     ExecuteNewChannel@frequency:
  1879                           	opt stack 0
  1880                           
  1881                           ; 4 bytes @ 0x13
  1882  000073                     	ds	1
  1883  000074                     RADIO_ReadRandom@i:
  1884                           	opt stack 0
  1885  000074                     UpdateCfList@bufferLength:
  1886                           	opt stack 0
  1887  000074                     PrepareSessionKeys@index:
  1888                           	opt stack 0
  1889  000074                     AssembleEncryptionBlock@multicastStatus:
  1890                           	opt stack 0
  1891  000074                     TMR_OverrideRemaining@tmrVal:
  1892                           	opt stack 0
  1893  000074                     ExecuteLinkAdr@channelMask:
  1894                           	opt stack 0
  1895  000074                     ___lwmod@divisor:
  1896                           	opt stack 0
  1897  000074                     ExtractMic@mic:
  1898                           	opt stack 0
  1899                           
  1900                           ; 4 bytes @ 0x14
  1901  000074                     	ds	1
  1902  000075                     ??_SwTimerSetTimeout:
  1903  000075                     ConfigureRadio@dataRate:
  1904                           	opt stack 0
  1905  000075                     AssembleEncryptionBlock@dir:
  1906                           	opt stack 0
  1907  000075                     _AESEncode$4143:
  1908                           	opt stack 0
  1909  000075                     srand@x:
  1910                           	opt stack 0
  1911  000075                     RADIO_WriteFrequency@num_mod:
  1912                           	opt stack 0
  1913  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1914                           	opt stack 0
  1915  000075                     RADIO_WriteFSKBitRate@num:
  1916                           	opt stack 0
  1917  000075                     UpdateCfList@frequency:
  1918                           	opt stack 0
  1919                           
  1920                           ; 4 bytes @ 0x15
  1921  000075                     	ds	1
  1922  000076                     ExecuteLinkAdr@txPower:
  1923                           	opt stack 0
  1924  000076                     ExecuteRxParamSetupReq@dlSettings:
  1925                           	opt stack 0
  1926  000076                     AssembleEncryptionBlock@bufferIndex:
  1927                           	opt stack 0
  1928  000076                     ___lwmod@counter:
  1929                           	opt stack 0
  1930  000076                     TMR_OverrideRemaining@oldReloadVal:
  1931                           	opt stack 0
  1932  000076                     ConfigureRadioTx@freq:
  1933                           	opt stack 0
  1934  000076                     ConfigureRadioRx@freq:
  1935                           	opt stack 0
  1936                           
  1937                           ; 4 bytes @ 0x16
  1938  000076                     	ds	1
  1939  000077                     ?_Random:
  1940                           	opt stack 0
  1941  000077                     ExecuteNewChannel@channelIndex:
  1942                           	opt stack 0
  1943  000077                     ExecuteLinkAdr@redundancy:
  1944                           	opt stack 0
  1945  000077                     Random@max:
  1946                           	opt stack 0
  1947  000077                     _AESEncode$4144:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x17
  1951  000077                     	ds	2
  1952  000079                     SwTimerSetTimeout@timerId:
  1953                           	opt stack 0
  1954  000079                     ExecuteLinkAdr@dataRate:
  1955                           	opt stack 0
  1956  000079                     SearchAvailableChannel@transmissionType:
  1957                           	opt stack 0
  1958  000079                     UpdateCfList@channelIndex:
  1959                           	opt stack 0
  1960  000079                     _AESEncode$4145:
  1961                           	opt stack 0
  1962  000079                     RADIO_WriteFrequency@num:
  1963                           	opt stack 0
  1964                           
  1965                           ; 4 bytes @ 0x19
  1966  000079                     	ds	1
  1967  00007A                     ?_MacExecuteCommands:
  1968                           	opt stack 0
  1969  00007A                     UpdateCfList@i:
  1970                           	opt stack 0
  1971  00007A                     ConfigureRadioTx@dataRate:
  1972                           	opt stack 0
  1973  00007A                     ConfigureRadioRx@dataRate:
  1974                           	opt stack 0
  1975  00007A                     SearchAvailableChannel@channelIndex:
  1976                           	opt stack 0
  1977  00007A                     MacExecuteCommands@buffer:
  1978                           	opt stack 0
  1979                           
  1980                           ; 2 bytes @ 0x1A
  1981  00007A                     	ds	1
  1982  00007B                     ConfigureRadioTx@txPower:
  1983                           	opt stack 0
  1984  00007B                     AESEncode@aux:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0x1B
  1988  00007B                     	ds	1
  1989  00007C                     ??_SearchAvailableChannel:
  1990  00007C                     ?_SwTimersInterrupt:
  1991                           	opt stack 0
  1992  00007C                     MacExecuteCommands@fOptsLen:
  1993                           	opt stack 0
  1994  00007C                     AESEncode@aux2:
  1995                           	opt stack 0
  1996                           
  1997                           ; 1 bytes @ 0x1C
  1998  00007C                     	ds	1
  1999  00007D                     ??_MacExecuteCommands:
  2000  00007D                     ??_RADIO_DIO2:
  2001  00007D                     AESEncode@aux1:
  2002                           	opt stack 0
  2003  00007D                     RADIO_Init@radioBuffer:
  2004                           	opt stack 0
  2005  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  2006                           	opt stack 0
  2007                           
  2008                           ; 2 bytes @ 0x1D
  2009  00007D                     	ds	1
  2010  00007E                     RADIO_DIO2@dioMapping:
  2011                           	opt stack 0
  2012  00007E                     AESEncode@aux3:
  2013                           	opt stack 0
  2014                           
  2015                           ; 1 bytes @ 0x1E
  2016  00007E                     	ds	1
  2017  00007F                     ??_RADIO_WriteConfiguration:
  2018  00007F                     MacExecuteCommands@done:
  2019                           	opt stack 0
  2020  00007F                     AESEncode@i:
  2021                           	opt stack 0
  2022  00007F                     RADIO_Init@frequency:
  2023                           	opt stack 0
  2024                           
  2025                           ; 4 bytes @ 0x1F
  2026  00007F                     	ds	1
  2027  000080                     SearchAvailableChannel@randomNumberCopy:
  2028                           	opt stack 0
  2029  000080                     MacExecuteCommands@ptr:
  2030                           	opt stack 0
  2031  000080                     AESEncodeLoRa@block:
  2032                           	opt stack 0
  2033                           
  2034                           ; 2 bytes @ 0x20
  2035  000080                     	ds	1
  2036  000081                     RADIO_WriteConfiguration@i:
  2037                           	opt stack 0
  2038  000081                     SearchAvailableChannel@result:
  2039                           	opt stack 0
  2040                           
  2041                           ; 1 bytes @ 0x21
  2042  000081                     	ds	1
  2043  000082                     SearchAvailableChannel@maxChannels:
  2044                           	opt stack 0
  2045  000082                     AESEncodeLoRa@key:
  2046                           	opt stack 0
  2047  000082                     RADIO_WriteConfiguration@tempValue:
  2048                           	opt stack 0
  2049                           
  2050                           ; 4 bytes @ 0x22
  2051  000082                     	ds	1
  2052  000083                     ??_RADIO_Init:
  2053  000083                     SearchAvailableChannel@randomNumber:
  2054                           	opt stack 0
  2055                           
  2056                           ; 1 bytes @ 0x23
  2057  000083                     	ds	1
  2058  000084                     SearchAvailableChannel@i:
  2059                           	opt stack 0
  2060  000084                     SwTimersInterrupt@timeElapsed:
  2061                           	opt stack 0
  2062  000084                     AESEncodeLoRa@useKey:
  2063                           	opt stack 0
  2064                           
  2065                           ; 16 bytes @ 0x24
  2066  000084                     	ds	1
  2067  000085                     SelectChannelForTransmission@transmissionType:
  2068                           	opt stack 0
  2069                           
  2070                           ; 1 bytes @ 0x25
  2071  000085                     	ds	1
  2072  000086                     RADIO_WriteConfiguration@regValue:
  2073                           	opt stack 0
  2074  000086                     SelectChannelForTransmission@result:
  2075                           	opt stack 0
  2076                           
  2077                           ; 1 bytes @ 0x26
  2078  000086                     	ds	1
  2079  000087                     SelectChannelForTransmission@channelIndex:
  2080                           	opt stack 0
  2081                           
  2082                           ; 1 bytes @ 0x27
  2083  000087                     	ds	1
  2084  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2085                           	opt stack 0
  2086                           
  2087                           ; 4 bytes @ 0x28
  2088  000088                     	ds	4
  2089  00008C                     SwTimersInterrupt@i:
  2090                           	opt stack 0
  2091                           
  2092                           ; 1 bytes @ 0x2C
  2093  00008C                     	ds	1
  2094  00008D                     ?_SwTimerReadValue:
  2095                           	opt stack 0
  2096                           
  2097                           ; 4 bytes @ 0x2D
  2098  00008D                     	ds	4
  2099  000091                     SwTimerReadValue@ticksCount:
  2100                           	opt stack 0
  2101  000091                     SwTimerStart@ticksRemaining:
  2102                           	opt stack 0
  2103                           
  2104                           ; 4 bytes @ 0x31
  2105  000091                     	ds	3
  2106  000094                     GenerateSubkey@key:
  2107                           	opt stack 0
  2108  000094                     ComputeSessionKeys@joinAcceptBuffer:
  2109                           	opt stack 0
  2110  000094                     EncryptFRMPayload@buffer:
  2111                           	opt stack 0
  2112                           
  2113                           ; 2 bytes @ 0x34
  2114  000094                     	ds	1
  2115  000095                     SwTimerReadValue@timerId:
  2116                           	opt stack 0
  2117  000095                     SwTimerStart@timerId:
  2118                           	opt stack 0
  2119                           
  2120                           ; 1 bytes @ 0x35
  2121  000095                     	ds	1
  2122  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2123  000096                     ??_StartReTxTimer:
  2124  000096                     ?_RADIO_Transmit:
  2125                           	opt stack 0
  2126  000096                     ?_RADIO_ReceiveStart:
  2127                           	opt stack 0
  2128  000096                     EncryptFRMPayload@bufferLength:
  2129                           	opt stack 0
  2130  000096                     RADIO_Transmit@buffer:
  2131                           	opt stack 0
  2132  000096                     RADIO_ReceiveStart@rxWindowSize:
  2133                           	opt stack 0
  2134  000096                     GenerateSubkey@k1:
  2135                           	opt stack 0
  2136  000096                     LORAWAN_LinkCheckConfigure@period:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x36
  2140  000096                     	ds	1
  2141  000097                     EncryptFRMPayload@dir:
  2142                           	opt stack 0
  2143                           
  2144                           ; 1 bytes @ 0x37
  2145  000097                     	ds	1
  2146  000098                     ??_LORAWAN_LinkCheckConfigure:
  2147  000098                     ??_RADIO_ReceiveStart:
  2148  000098                     RADIO_Transmit@bufferLen:
  2149                           	opt stack 0
  2150  000098                     GenerateSubkey@k2:
  2151                           	opt stack 0
  2152  000098                     EncryptFRMPayload@frameCounter:
  2153                           	opt stack 0
  2154                           
  2155                           ; 4 bytes @ 0x38
  2156  000098                     	ds	1
  2157  000099                     ??_RADIO_Transmit:
  2158                           
  2159                           ; 1 bytes @ 0x39
  2160  000099                     	ds	1
  2161  00009A                     ??_GenerateSubkey:
  2162  00009A                     StartReTxTimer@minim:
  2163                           	opt stack 0
  2164                           
  2165                           ; 4 bytes @ 0x3A
  2166  00009A                     	ds	1
  2167  00009B                     GenerateSubkey@const_Rb:
  2168                           	opt stack 0
  2169                           
  2170                           ; 16 bytes @ 0x3B
  2171  00009B                     	ds	1
  2172  00009C                     EncryptFRMPayload@key:
  2173                           	opt stack 0
  2174  00009C                     _RADIO_ReceiveStart$1199:
  2175                           	opt stack 0
  2176                           
  2177                           ; 4 bytes @ 0x3C
  2178  00009C                     	ds	2
  2179  00009E                     StartReTxTimer@i:
  2180                           	opt stack 0
  2181  00009E                     EncryptFRMPayload@macBufferIndex:
  2182                           	opt stack 0
  2183                           
  2184                           ; 1 bytes @ 0x3E
  2185  00009E                     	ds	1
  2186  00009F                     EncryptFRMPayload@bufferToBeEncrypted:
  2187                           	opt stack 0
  2188                           
  2189                           ; 2 bytes @ 0x3F
  2190  00009F                     	ds	1
  2191  0000A0                     LORAWAN_TxDone@timeOnAir:
  2192                           	opt stack 0
  2193  0000A0                     _LORAWAN_LinkCheckConfigure$3502:
  2194                           	opt stack 0
  2195                           
  2196                           ; 4 bytes @ 0x40
  2197  0000A0                     	ds	1
  2198  0000A1                     EncryptFRMPayload@multicastStatus:
  2199                           	opt stack 0
  2200  0000A1                     _RADIO_Transmit$1196:
  2201                           	opt stack 0
  2202                           
  2203                           ; 4 bytes @ 0x41
  2204  0000A1                     	ds	1
  2205  0000A2                     ??_LORAWAN_TxDone:
  2206  0000A2                     ??_EncryptFRMPayload:
  2207                           
  2208                           ; 1 bytes @ 0x42
  2209  0000A2                     	ds	2
  2210  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2211                           	opt stack 0
  2212                           
  2213                           ; 1 bytes @ 0x44
  2214  0000A4                     	ds	1
  2215  0000A5                     RADIO_Transmit@regValue:
  2216                           	opt stack 0
  2217  0000A5                     LORAWAN_Reset@ismBandNew:
  2218                           	opt stack 0
  2219                           
  2220                           ; 1 bytes @ 0x45
  2221  0000A5                     	ds	1
  2222  0000A6                     RADIO_Transmit@i:
  2223                           	opt stack 0
  2224  0000A6                     LORAWAN_Init@RxPayload:
  2225                           	opt stack 0
  2226                           
  2227                           ; 2 bytes @ 0x46
  2228  0000A6                     	ds	1
  2229  0000A7                     ??_LORAWAN_RxTimeout:
  2230  0000A7                     EncryptFRMPayload@k:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0x47
  2234  0000A7                     	ds	1
  2235  0000A8                     EncryptFRMPayload@i:
  2236                           	opt stack 0
  2237  0000A8                     LORAWAN_Init@RxJoinResponse:
  2238                           	opt stack 0
  2239                           
  2240                           ; 2 bytes @ 0x48
  2241  0000A8                     	ds	1
  2242  0000A9                     EncryptFRMPayload@j:
  2243                           	opt stack 0
  2244                           
  2245                           ; 1 bytes @ 0x49
  2246  0000A9                     	ds	1
  2247  0000AA                     
  2248                           ; 1 bytes @ 0x4A
  2249  0000AA                     	ds	1
  2250  0000AB                     LORAWAN_RxTimeout@minim:
  2251                           	opt stack 0
  2252  0000AB                     GenerateSubkey@l:
  2253                           	opt stack 0
  2254                           
  2255                           ; 16 bytes @ 0x4B
  2256  0000AB                     	ds	4
  2257  0000AF                     LORAWAN_RxTimeout@i:
  2258                           	opt stack 0
  2259                           
  2260                           ; 1 bytes @ 0x4F
  2261  0000AF                     	ds	1
  2262  0000B0                     ??_RADIO_DIO1:
  2263                           
  2264                           ; 1 bytes @ 0x50
  2265  0000B0                     	ds	1
  2266  0000B1                     RADIO_DIO1@dioMapping:
  2267                           	opt stack 0
  2268                           
  2269                           ; 1 bytes @ 0x51
  2270  0000B1                     	ds	10
  2271  0000BB                     GenerateSubkey@i:
  2272                           	opt stack 0
  2273                           
  2274                           ; 1 bytes @ 0x5B
  2275  0000BB                     	ds	1
  2276  0000BC                     AESCmac@key:
  2277                           	opt stack 0
  2278  0000BC                     _LORAWAN_TxDone$2092:
  2279                           	opt stack 0
  2280                           
  2281                           ; 4 bytes @ 0x5C
  2282  0000BC                     	ds	2
  2283  0000BE                     AESCmac@output:
  2284                           	opt stack 0
  2285                           
  2286                           ; 2 bytes @ 0x5E
  2287  0000BE                     	ds	2
  2288  0000C0                     AESCmac@input:
  2289                           	opt stack 0
  2290  0000C0                     _LORAWAN_TxDone$2093:
  2291                           	opt stack 0
  2292                           
  2293                           ; 4 bytes @ 0x60
  2294  0000C0                     	ds	2
  2295  0000C2                     AESCmac@size:
  2296                           	opt stack 0
  2297                           
  2298                           ; 1 bytes @ 0x62
  2299  0000C2                     	ds	1
  2300  0000C3                     ??_AESCmac:
  2301                           
  2302                           ; 1 bytes @ 0x63
  2303  0000C3                     	ds	1
  2304  0000C4                     LORAWAN_TxDone@found:
  2305                           	opt stack 0
  2306                           
  2307                           ; 1 bytes @ 0x64
  2308  0000C4                     	ds	1
  2309  0000C5                     LORAWAN_TxDone@delta:
  2310                           	opt stack 0
  2311                           
  2312                           ; 4 bytes @ 0x65
  2313  0000C5                     	ds	4
  2314  0000C9                     LORAWAN_TxDone@ticks:
  2315                           	opt stack 0
  2316                           
  2317                           ; 4 bytes @ 0x69
  2318  0000C9                     	ds	1
  2319  0000CA                     ?_ComputeMic:
  2320                           	opt stack 0
  2321  0000CA                     AssemblePacket@port:
  2322                           	opt stack 0
  2323  0000CA                     ComputeMic@key:
  2324                           	opt stack 0
  2325                           
  2326                           ; 2 bytes @ 0x6A
  2327  0000CA                     	ds	1
  2328  0000CB                     AssemblePacket@buffer:
  2329                           	opt stack 0
  2330                           
  2331                           ; 2 bytes @ 0x6B
  2332  0000CB                     	ds	1
  2333  0000CC                     ComputeMic@buffer:
  2334                           	opt stack 0
  2335                           
  2336                           ; 2 bytes @ 0x6C
  2337  0000CC                     	ds	1
  2338  0000CD                     AssemblePacket@bufferLength:
  2339                           	opt stack 0
  2340  0000CD                     LORAWAN_TxDone@minim:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x6D
  2344  0000CD                     	ds	1
  2345  0000CE                     ComputeMic@bufferLength:
  2346                           	opt stack 0
  2347                           
  2348                           ; 1 bytes @ 0x6E
  2349  0000CE                     	ds	1
  2350  0000CF                     ??_AssemblePacket:
  2351  0000CF                     ComputeMic@mic:
  2352                           	opt stack 0
  2353                           
  2354                           ; 4 bytes @ 0x6F
  2355  0000CF                     	ds	2
  2356  0000D1                     LORAWAN_TxDone@i:
  2357                           	opt stack 0
  2358  0000D1                     AssemblePacket@confirmed:
  2359                           	opt stack 0
  2360                           
  2361                           ; 1 bytes @ 0x71
  2362  0000D1                     	ds	1
  2363  0000D2                     ??_RADIO_TxDone:
  2364  0000D2                     ??_RADIO_FSKPacketSent:
  2365  0000D2                     AssemblePacket@mhdr:
  2366                           	opt stack 0
  2367                           
  2368                           ; 1 bytes @ 0x72
  2369  0000D2                     	ds	1
  2370  0000D3                     ??_PrepareJoinRequestFrame:
  2371  0000D3                     AssemblePacket@fCtrl:
  2372                           	opt stack 0
  2373                           
  2374                           ; 1 bytes @ 0x73
  2375  0000D3                     	ds	1
  2376  0000D4                     AssemblePacket@macCmdIdx:
  2377                           	opt stack 0
  2378                           
  2379                           ; 1 bytes @ 0x74
  2380  0000D4                     	ds	1
  2381  0000D5                     AssemblePacket@bufferIndex:
  2382                           	opt stack 0
  2383  0000D5                     PrepareJoinRequestFrame@mic:
  2384                           	opt stack 0
  2385                           
  2386                           ; 4 bytes @ 0x75
  2387  0000D5                     	ds	1
  2388  0000D6                     LORAWAN_Send@port:
  2389                           	opt stack 0
  2390  0000D6                     RADIO_TxDone@timeOnAir:
  2391                           	opt stack 0
  2392  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2393                           	opt stack 0
  2394                           
  2395                           ; 4 bytes @ 0x76
  2396  0000D6                     	ds	1
  2397  0000D7                     LORAWAN_Send@buffer:
  2398                           	opt stack 0
  2399                           
  2400                           ; 2 bytes @ 0x77
  2401  0000D7                     	ds	2
  2402  0000D9                     LORAWAN_Send@bufferLength:
  2403                           	opt stack 0
  2404  0000D9                     PrepareJoinRequestFrame@mhdr:
  2405                           	opt stack 0
  2406                           
  2407                           ; 1 bytes @ 0x79
  2408  0000D9                     	ds	1
  2409  0000DA                     ??_LORAWAN_Send:
  2410  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2411                           	opt stack 0
  2412  0000DA                     _RADIO_TxDone$1211:
  2413                           	opt stack 0
  2414  0000DA                     _RADIO_FSKPacketSent$1215:
  2415                           	opt stack 0
  2416                           
  2417                           ; 4 bytes @ 0x7A
  2418  0000DA                     	ds	1
  2419  0000DB                     LORAWAN_Send@result:
  2420                           	opt stack 0
  2421  0000DB                     PrepareJoinRequestFrame@iCtr:
  2422                           	opt stack 0
  2423                           
  2424                           ; 1 bytes @ 0x7B
  2425  0000DB                     	ds	1
  2426  0000DC                     LORAWAN_Join@bufferIndex:
  2427                           	opt stack 0
  2428  0000DC                     LORAWAN_Send@confirmed:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x7C
  2432  0000DC                     	ds	1
  2433  0000DD                     ??_LORAWAN_RxDone:
  2434  0000DD                     ??_readAndSend:
  2435  0000DD                     ??_SwTimersExecute:
  2436  0000DD                     LORAWAN_Join@result:
  2437                           	opt stack 0
  2438                           
  2439                           ; 1 bytes @ 0x7D
  2440  0000DD                     	ds	1
  2441  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2442                           	opt stack 0
  2443  0000DE                     LORAWAN_Join@activationTypeNew:
  2444                           	opt stack 0
  2445  0000DE                     readAndSend@j:
  2446                           	opt stack 0
  2447                           
  2448                           ; 2 bytes @ 0x7E
  2449  0000DE                     	ds	3
  2450  0000E1                     SwTimersExecute@i:
  2451                           	opt stack 0
  2452                           
  2453                           ; 1 bytes @ 0x81
  2454  0000E1                     	ds	1
  2455  0000E2                     RADIO_RxDone@irqFlags:
  2456                           	opt stack 0
  2457  0000E2                     RADIO_FSKPayloadReady@irqFlags:
  2458                           	opt stack 0
  2459                           
  2460                           ; 1 bytes @ 0x82
  2461  0000E2                     	ds	1
  2462  0000E3                     RADIO_RxDone@i:
  2463                           	opt stack 0
  2464  0000E3                     RADIO_FSKPayloadReady@i:
  2465                           	opt stack 0
  2466                           
  2467                           ; 1 bytes @ 0x83
  2468  0000E3                     	ds	1
  2469  0000E4                     ??_RADIO_DIO0:
  2470                           
  2471                           ; 1 bytes @ 0x84
  2472  0000E4                     	ds	2
  2473  0000E6                     RADIO_DIO0@dioMapping:
  2474                           	opt stack 0
  2475                           
  2476                           ; 1 bytes @ 0x86
  2477  0000E6                     	ds	1
  2478  0000E7                     RADIO_DIO0@opMode:
  2479                           	opt stack 0
  2480                           
  2481                           ; 1 bytes @ 0x87
  2482  0000E7                     	ds	1
  2483  0000E8                     tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           postdec2	equ	0xFDD
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           
  2493                           ; 1 bytes @ 0x88
  2494                           
  2495                           	psect	cstackCOMRAM
  2496  000001                     __pcstackCOMRAM:
  2497                           	opt stack 0
  2498  000001                     ?i2_TMR1_ReadTimer:
  2499                           	opt stack 0
  2500  000001                     i2TMR1_WriteTimer@timerVal:
  2501                           	opt stack 0
  2502                           
  2503                           ; 2 bytes @ 0x0
  2504  000001                     	ds	2
  2505  000003                     ??i2_TMR1_ReadTimer:
  2506  000003                     
  2507                           ; 1 bytes @ 0x2
  2508  000003                     	ds	2
  2509  000005                     i2TMR1_ReadTimer@readVal:
  2510                           	opt stack 0
  2511                           
  2512                           ; 2 bytes @ 0x4
  2513  000005                     	ds	2
  2514  000007                     i2TMR1_ReadTimer@readValHigh:
  2515                           	opt stack 0
  2516                           
  2517                           ; 1 bytes @ 0x6
  2518  000007                     	ds	1
  2519  000008                     i2TMR1_ReadTimer@readValLow:
  2520                           	opt stack 0
  2521                           
  2522                           ; 1 bytes @ 0x7
  2523  000008                     	ds	1
  2524  000009                     ?i2_TMR_SwapTimer:
  2525                           	opt stack 0
  2526  000009                     ?i2_TMR_GetDeltaTime:
  2527                           	opt stack 0
  2528  000009                     i2TMR_SwapTimer@timerVal:
  2529                           	opt stack 0
  2530                           
  2531                           ; 2 bytes @ 0x8
  2532  000009                     	ds	2
  2533  00000B                     
  2534                           ; 1 bytes @ 0xA
  2535  00000B                     	ds	2
  2536  00000D                     ??i2_TMR_GetDeltaTime:
  2537                           
  2538                           ; 1 bytes @ 0xC
  2539  00000D                     	ds	12
  2540  000019                     ?i2_SwTimersInterrupt:
  2541                           	opt stack 0
  2542                           
  2543                           ; 4 bytes @ 0x18
  2544  000019                     	ds	4
  2545  00001D                     
  2546                           ; 1 bytes @ 0x1C
  2547  00001D                     	ds	4
  2548  000021                     i2SwTimersInterrupt@timeElapsed:
  2549                           	opt stack 0
  2550                           
  2551                           ; 4 bytes @ 0x20
  2552  000021                     	ds	4
  2553  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2554                           	opt stack 0
  2555                           
  2556                           ; 4 bytes @ 0x24
  2557  000025                     	ds	4
  2558  000029                     i2SwTimersInterrupt@i:
  2559                           	opt stack 0
  2560                           
  2561                           ; 1 bytes @ 0x28
  2562  000029                     	ds	1
  2563  00002A                     ??_INTERRUPT_InterruptManager:
  2564                           
  2565                           ; 1 bytes @ 0x29
  2566  00002A                     	ds	8
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           postdec2	equ	0xFDD
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           
  2577 ;;
  2578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2579 ;;
  2580 ;; *************** function _main *****************
  2581 ;; Defined at:
  2582 ;;		line 45 in file "main.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels required when called:   19
  2602 ;; This function calls:
  2603 ;;		_ADC_Init
  2604 ;;		_IO_pins_init
  2605 ;;		_LORAWAN_GetState
  2606 ;;		_LORAWAN_Init
  2607 ;;		_LORAWAN_Join
  2608 ;;		_LORAWAN_Mainloop
  2609 ;;		_LORAWAN_SetApplicationSessionKey
  2610 ;;		_LORAWAN_SetDeviceAddress
  2611 ;;		_LORAWAN_SetNetworkSessionKey
  2612 ;;		_LoRaSleep
  2613 ;;		_LoRaWakeUp
  2614 ;;		_SYSTEM_Initialize
  2615 ;;		_SysConfigSleep
  2616 ;;		_TMR3_SetInterruptHandler
  2617 ;;		_readAndSend
  2618 ;; This function is called by:
  2619 ;;		Startup code after reset
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text0
  2624  005AFC                     __ptext0:
  2625                           	opt stack 0
  2626  005AFC                     _main:
  2627                           	opt stack 12
  2628                           
  2629                           ;main.c: 48: SYSTEM_Initialize();
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;incstack = 0
  2633  005AFC  ECDE  F039         	call	_SYSTEM_Initialize	;wreg free
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;main.c: 51: PORTCbits.RC5 = 1;
  2637  005B00  8A82               	bsf	3970,5,c	;volatile
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;main.c: 53: (INTCONbits.GIE = 1);
  2641  005B02  8EF2               	bsf	intcon,7,c	;volatile
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;main.c: 54: (INTCONbits.PEIE = 1);
  2645  005B04  8CF2               	bsf	intcon,6,c	;volatile
  2646                           
  2647                           ;main.c: 55: TMR3_SetInterruptHandler(handle16sInterrupt);
  2648  005B06  0EFA               	movlw	low _handle16sInterrupt
  2649  005B08  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2650  005B0A  0E76               	movlw	high _handle16sInterrupt
  2651  005B0C  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2652  005B0E  ECFE  F03B         	call	_TMR3_SetInterruptHandler	;wreg free
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;main.c: 56: SysConfigSleep();
  2656  005B12  EC8F  F030         	call	_SysConfigSleep	;wreg free
  2657                           
  2658                           ; BSR set to: 15
  2659                           ;main.c: 57: ADC_Init();
  2660  005B16  ECC5  F03B         	call	_ADC_Init	;wreg free
  2661                           
  2662                           ; BSR set to: 15
  2663                           ;main.c: 58: IO_pins_init();
  2664  005B1A  EC90  F03B         	call	_IO_pins_init	;wreg free
  2665                           
  2666                           ; BSR set to: 15
  2667                           ;main.c: 60: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2668  005B1E  0EA2               	movlw	low _RxDataDone
  2669  005B20  0100               	movlb	0	; () banked
  2670  005B22  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2671  005B24  0E70               	movlw	high _RxDataDone
  2672  005B26  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2673  005B28  0E08               	movlw	low _RxJoinResponse
  2674  005B2A  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2675  005B2C  0E79               	movlw	high _RxJoinResponse
  2676  005B2E  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2677  005B30  EC86  F033         	call	_LORAWAN_Init	;wreg free
  2678                           
  2679                           ;main.c: 61: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2680  005B34  0ED9               	movlw	low _nwkSKey
  2681  005B36  0100               	movlb	0	; () banked
  2682  005B38  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2683  005B3A  0E01               	movlw	high _nwkSKey
  2684  005B3C  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2685  005B3E  ECAD  F038         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2686                           
  2687                           ;main.c: 62: LORAWAN_SetApplicationSessionKey(appSKey);
  2688  005B42  0EA0               	movlw	low _appSKey
  2689  005B44  0100               	movlb	0	; () banked
  2690  005B46  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2691  005B48  0E03               	movlw	high _appSKey
  2692  005B4A  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2693  005B4C  ECC2  F038         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2694                           
  2695                           ;main.c: 63: LORAWAN_SetDeviceAddress(devAddr);
  2696  005B50  0E78               	movlw	120
  2697  005B52  0100               	movlb	0	; () banked
  2698  005B54  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2699  005B56  0E56               	movlw	86
  2700  005B58  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2701  005B5A  0E34               	movlw	52
  2702  005B5C  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2703  005B5E  0E12               	movlw	18
  2704  005B60  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2705  005B62  EC0D  F03B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2706                           
  2707                           ; BSR set to: 2
  2708                           ;main.c: 64: LORAWAN_Join(ABP);
  2709  005B66  0E01               	movlw	1
  2710  005B68  EC13  F02E         	call	_LORAWAN_Join
  2711                           
  2712                           ;main.c: 67: TimeToSend = 1;
  2713  005B6C  0E01               	movlw	1
  2714  005B6E  0101               	movlb	1	; () banked
  2715  005B70  6F7D               	movwf	_TimeToSend& (0+255),b
  2716  005B72                     l16417:
  2717                           
  2718                           ;main.c: 70: {
  2719                           ;main.c: 71: LORAWAN_Mainloop();
  2720  005B72  EC0D  F037         	call	_LORAWAN_Mainloop	;wreg free
  2721                           
  2722                           ;main.c: 73: if(TimeToSend){
  2723  005B76  0101               	movlb	1	; () banked
  2724  005B78  517D               	movf	_TimeToSend& (0+255),w,b
  2725  005B7A  E006               	bz	l16427
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;main.c: 74: LoRaWakeUp();
  2729  005B7C  EC3E  F03C         	call	_LoRaWakeUp	;wreg free
  2730                           
  2731                           ;main.c: 75: readAndSend();
  2732  005B80  EC31  F031         	call	_readAndSend	;wreg free
  2733                           
  2734                           ;main.c: 76: TimeToSend = 0;
  2735  005B84  0101               	movlb	1	; () banked
  2736  005B86  6B7D               	clrf	_TimeToSend& (0+255),b
  2737  005B88                     l16427:
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;main.c: 78: }
  2741                           ;main.c: 80: if(LORAWAN_GetState() == IDLE){
  2742  005B88  EC5A  F03C         	call	_LORAWAN_GetState	;wreg free
  2743  005B8C  0900               	iorlw	0
  2744  005B8E  E1F1               	bnz	l16417
  2745                           
  2746                           ; BSR set to: 2
  2747                           ;main.c: 81: LoRaSleep();
  2748  005B90  ECFE  F039         	call	_LoRaSleep	;wreg free
  2749  005B94  0003               	sleep		;# 
  2750  005B96  D7ED               	goto	l16417
  2751  005B98                     __end_of_main:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           intcon	equ	0xFF2
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           
  2764 ;; *************** function _readAndSend *****************
  2765 ;; Defined at:
  2766 ;;		line 113 in file "main.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  j               2  126[BANK0 ] int 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/1
  2777 ;;		On exit  : D/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        3 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:   14
  2787 ;; This function calls:
  2788 ;;		_ADC_Read
  2789 ;;		_LORAWAN_Send
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text1
  2796  006262                     __ptext1:
  2797                           	opt stack 0
  2798  006262                     _readAndSend:
  2799                           	opt stack 16
  2800                           
  2801                           ;main.c: 114: PORTDbits.RD5 = 1;
  2802                           
  2803                           ;incstack = 0
  2804  006262  8A83               	bsf	3971,5,c	;volatile
  2805                           
  2806                           ;main.c: 115: for(int j = 1; j<100; j++) _delay((unsigned long)((1)*(16000000/4000.0)));
  2807  006264  0E00               	movlw	0
  2808  006266  0100               	movlb	0	; () banked
  2809  006268  6FDF               	movwf	(readAndSend@j+1)& (0+255),b
  2810  00626A  0E01               	movlw	1
  2811  00626C  6FDE               	movwf	readAndSend@j& (0+255),b
  2812  00626E                     l15891:
  2813                           
  2814                           ; BSR set to: 0
  2815  00626E  0E06               	movlw	6
  2816  006270  6FDD               	movwf	??_readAndSend& (0+255),b
  2817  006272  0E30               	movlw	48
  2818  006274                     u19727:
  2819  006274  2EE8               	decfsz	wreg,f,c
  2820  006276  D7FE               	goto	u19727
  2821  006278  2FDD               	decfsz	??_readAndSend& (0+255),f,b
  2822  00627A  D7FC               	goto	u19727
  2823  00627C  D000               	nop2	
  2824  00627E  0100               	movlb	0	; () banked
  2825  006280  4BDE               	infsnz	readAndSend@j& (0+255),f,b
  2826  006282  2BDF               	incf	(readAndSend@j+1)& (0+255),f,b
  2827  006284  BFDF               	btfsc	(readAndSend@j+1)& (0+255),7,b
  2828  006286  D7F3               	goto	l15891
  2829  006288  51DF               	movf	(readAndSend@j+1)& (0+255),w,b
  2830  00628A  E103               	bnz	u18490
  2831  00628C  0E64               	movlw	100
  2832  00628E  5DDE               	subwf	readAndSend@j& (0+255),w,b
  2833  006290  E3EE               	bnc	l15891
  2834  006292                     u18490:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;main.c: 116: payload[0] = ADC_Read(27);
  2838  006292  0E1B               	movlw	27
  2839  006294  EC9C  F037         	call	_ADC_Read
  2840  006298  C066  F1C4         	movff	?_ADC_Read,_payload
  2841  00629C  C067  F1C5         	movff	?_ADC_Read+1,_payload+1
  2842                           
  2843                           ;main.c: 117: payload[1] = ADC_Read(26);
  2844  0062A0  0E1A               	movlw	26
  2845  0062A2  EC9C  F037         	call	_ADC_Read
  2846  0062A6  C066  F1C6         	movff	?_ADC_Read,_payload+2
  2847  0062AA  C067  F1C7         	movff	?_ADC_Read+1,_payload+3
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;main.c: 118: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2851  0062AE  C1D8  F0D6         	movff	_portNumber,LORAWAN_Send@port
  2852  0062B2  0EC4               	movlw	low _payload
  2853  0062B4  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  2854  0062B6  0E01               	movlw	high _payload
  2855  0062B8  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2856  0062BA  0E04               	movlw	4
  2857  0062BC  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2858  0062BE  0E00               	movlw	0
  2859  0062C0  EC5F  F02A         	call	_LORAWAN_Send
  2860                           
  2861                           ;main.c: 119: PORTDbits.RD5 = 0;
  2862  0062C4  9A83               	bcf	3971,5,c	;volatile
  2863  0062C6  0012               	return		;funcret
  2864  0062C8                     __end_of_readAndSend:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           intcon	equ	0xFF2
  2871                           postinc0	equ	0xFEE
  2872                           wreg	equ	0xFE8
  2873                           postdec2	equ	0xFDD
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           
  2877 ;; *************** function _ADC_Read *****************
  2878 ;; Defined at:
  2879 ;;		line 140 in file "main.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  channel         1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  channel         1   10[BANK0 ] unsigned char 
  2884 ;;  result          2   11[BANK0 ] unsigned int 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2    6[BANK0 ] unsigned int 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : F/0
  2891 ;;		On exit  : F/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;Total ram usage:        7 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    8
  2901 ;; This function calls:
  2902 ;;		_ADC_SelChannel
  2903 ;; This function is called by:
  2904 ;;		_readAndSend
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text2
  2909  006F38                     __ptext2:
  2910                           	opt stack 0
  2911  006F38                     _ADC_Read:
  2912                           	opt stack 21
  2913                           
  2914                           ;incstack = 0
  2915                           ;ADC_Read@channel stored from wreg
  2916  006F38  6F6A               	movwf	ADC_Read@channel& (0+255),b
  2917                           
  2918                           ;main.c: 142: ADCON0bits.ADON = 1;
  2919  006F3A  80C2               	bsf	4034,0,c	;volatile
  2920                           
  2921                           ;main.c: 143: ADC_SelChannel(channel);
  2922  006F3C  0100               	movlb	0	; () banked
  2923  006F3E  516A               	movf	ADC_Read@channel& (0+255),w,b
  2924  006F40  EC01  F03B         	call	_ADC_SelChannel
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;main.c: 144: ADCON0bits.GO = 1;
  2928  006F44  82C2               	bsf	4034,1,c	;volatile
  2929  006F46                     l2744:
  2930  006F46  B2C2               	btfsc	4034,1,c	;volatile
  2931  006F48  D7FE               	goto	l2744
  2932                           
  2933                           ;main.c: 146: result = (ADRESH<<8) | ADRESL;
  2934  006F4A  50C3               	movf	4035,w,c	;volatile
  2935  006F4C  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  2936  006F50  0100               	movlb	0	; () banked
  2937  006F52  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  2938  006F54  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  2939  006F58  6B68               	clrf	??_ADC_Read& (0+255),b
  2940  006F5A  1168               	iorwf	??_ADC_Read& (0+255),w,b
  2941  006F5C  6F6B               	movwf	ADC_Read@result& (0+255),b
  2942  006F5E  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  2943  006F60  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;main.c: 147: ADCON0bits.ADON = 0;
  2947  006F62  90C2               	bcf	4034,0,c	;volatile
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;main.c: 148: return result;
  2951  006F64  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  2952  006F68  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  2953                           
  2954                           ; BSR set to: 0
  2955  006F6C  0012               	return		;funcret
  2956  006F6E                     __end_of_ADC_Read:
  2957                           	opt stack 0
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           intcon	equ	0xFF2
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           postdec2	equ	0xFDD
  2966                           fsr2h	equ	0xFDA
  2967                           fsr2l	equ	0xFD9
  2968                           
  2969 ;; *************** function _ADC_SelChannel *****************
  2970 ;; Defined at:
  2971 ;;		line 135 in file "main.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  c               1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  c               1    5[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : F/0
  2982 ;;		On exit  : F/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;Total ram usage:        2 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    7
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_ADC_Read
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text3
  3000  007602                     __ptext3:
  3001                           	opt stack 0
  3002  007602                     _ADC_SelChannel:
  3003                           	opt stack 21
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;incstack = 0
  3007                           ;ADC_SelChannel@c stored from wreg
  3008  007602  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  3009                           
  3010                           ;main.c: 136: ADCON0bits.CHS = c;
  3011  007604  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  3012  007608  0100               	movlb	0	; () banked
  3013  00760A  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  3014  00760C  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  3015  00760E  50C2               	movf	4034,w,c	;volatile
  3016  007610  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  3017  007612  0B83               	andlw	-125
  3018  007614  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  3019  007616  6EC2               	movwf	4034,c	;volatile
  3020                           
  3021                           ; BSR set to: 0
  3022  007618  0012               	return		;funcret
  3023  00761A                     __end_of_ADC_SelChannel:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           intcon	equ	0xFF2
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           postdec2	equ	0xFDD
  3033                           fsr2h	equ	0xFDA
  3034                           fsr2l	equ	0xFD9
  3035                           
  3036 ;; *************** function _SysConfigSleep *****************
  3037 ;; Defined at:
  3038 ;;		line 158 in file "main.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		None
  3047 ;; Tracked objects:
  3048 ;;		On entry : F/0
  3049 ;;		On exit  : F/F
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    7
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text4
  3067  00611E                     __ptext4:
  3068                           	opt stack 0
  3069  00611E                     _SysConfigSleep:
  3070                           	opt stack 23
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;main.c: 161: UART2MD = 1;
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;incstack = 0
  3077  00611E  010F               	movlb	15	; () banked
  3078  006120  8F3F               	bsf	63,7,b	;volatile
  3079                           
  3080                           ;main.c: 162: UART1MD = 1;
  3081  006122  8D3F               	bsf	63,6,b	;volatile
  3082                           
  3083                           ;main.c: 163: TMR6MD = 1;
  3084  006124  8B3F               	bsf	63,5,b	;volatile
  3085                           
  3086                           ;main.c: 164: TMR5MD = 1;
  3087  006126  893F               	bsf	63,4,b	;volatile
  3088                           
  3089                           ;main.c: 165: TMR4MD = 1;
  3090  006128  873F               	bsf	63,3,b	;volatile
  3091                           
  3092                           ;main.c: 166: TMR2MD = 1;
  3093  00612A  833F               	bsf	63,1,b	;volatile
  3094                           
  3095                           ;main.c: 167: MSSP1MD = 1;
  3096  00612C  8D3E               	bsf	62,6,b	;volatile
  3097                           
  3098                           ;main.c: 168: CCP5MD = 1;
  3099  00612E  893E               	bsf	62,4,b	;volatile
  3100                           
  3101                           ;main.c: 169: CCP4MD = 1;
  3102  006130  873E               	bsf	62,3,b	;volatile
  3103                           
  3104                           ;main.c: 170: CCP3MD = 1;
  3105  006132  853E               	bsf	62,2,b	;volatile
  3106                           
  3107                           ;main.c: 171: CCP2MD = 1;
  3108  006134  833E               	bsf	62,1,b	;volatile
  3109                           
  3110                           ;main.c: 172: CCP1MD = 1;
  3111  006136  813E               	bsf	62,0,b	;volatile
  3112                           
  3113                           ;main.c: 173: CTMUMD = 1;
  3114  006138  873D               	bsf	61,3,b	;volatile
  3115                           
  3116                           ;main.c: 174: CMP2MD = 1;
  3117  00613A  853D               	bsf	61,2,b	;volatile
  3118                           
  3119                           ;main.c: 175: CMP1MD = 1;
  3120  00613C  833D               	bsf	61,1,b	;volatile
  3121                           
  3122                           ;main.c: 178: IDLEN = 0;
  3123  00613E  9ED3               	bcf	4051,7,c	;volatile
  3124                           
  3125                           ;main.c: 182: TRISA = 0x00;
  3126  006140  6A92               	clrf	3986,c	;volatile
  3127                           
  3128                           ;main.c: 183: LATA = 0x00;
  3129  006142  6A89               	clrf	3977,c	;volatile
  3130                           
  3131                           ;main.c: 186: TRISBbits.RB4 = 0;
  3132  006144  9893               	bcf	3987,4,c	;volatile
  3133                           
  3134                           ;main.c: 187: TRISBbits.RB5 = 0;
  3135  006146  9A93               	bcf	3987,5,c	;volatile
  3136                           
  3137                           ;main.c: 188: TRISBbits.RB6 = 0;
  3138  006148  9C93               	bcf	3987,6,c	;volatile
  3139                           
  3140                           ;main.c: 189: TRISBbits.RB7 = 0;
  3141  00614A  9E93               	bcf	3987,7,c	;volatile
  3142                           
  3143                           ;main.c: 190: LATBbits.LATB4 = 0;
  3144  00614C  988A               	bcf	3978,4,c	;volatile
  3145                           
  3146                           ;main.c: 191: LATBbits.LATB5 = 0;
  3147  00614E  9A8A               	bcf	3978,5,c	;volatile
  3148                           
  3149                           ;main.c: 192: LATBbits.LATB6 = 0;
  3150  006150  9C8A               	bcf	3978,6,c	;volatile
  3151                           
  3152                           ;main.c: 193: LATBbits.LATB7 = 0;
  3153  006152  9E8A               	bcf	3978,7,c	;volatile
  3154                           
  3155                           ;main.c: 196: TRISCbits.RC0 = 0;
  3156  006154  9094               	bcf	3988,0,c	;volatile
  3157                           
  3158                           ;main.c: 197: TRISCbits.RC1 = 0;
  3159  006156  9294               	bcf	3988,1,c	;volatile
  3160                           
  3161                           ;main.c: 198: TRISCbits.RC3 = 0;
  3162  006158  9694               	bcf	3988,3,c	;volatile
  3163                           
  3164                           ;main.c: 199: TRISCbits.RC4 = 0;
  3165  00615A  9894               	bcf	3988,4,c	;volatile
  3166                           
  3167                           ;main.c: 201: TRISCbits.RC6 = 0;
  3168  00615C  9C94               	bcf	3988,6,c	;volatile
  3169                           
  3170                           ;main.c: 202: TRISCbits.RC7 = 0;
  3171  00615E  9E94               	bcf	3988,7,c	;volatile
  3172                           
  3173                           ;main.c: 203: LATCbits.LATC0 = 0;
  3174  006160  908B               	bcf	3979,0,c	;volatile
  3175                           
  3176                           ;main.c: 204: LATCbits.LATC1 = 0;
  3177  006162  928B               	bcf	3979,1,c	;volatile
  3178                           
  3179                           ;main.c: 205: LATCbits.LATC3 = 0;
  3180  006164  968B               	bcf	3979,3,c	;volatile
  3181                           
  3182                           ;main.c: 206: LATCbits.LATC4 = 0;
  3183  006166  988B               	bcf	3979,4,c	;volatile
  3184                           
  3185                           ;main.c: 208: LATCbits.LATC6 = 0;
  3186  006168  9C8B               	bcf	3979,6,c	;volatile
  3187                           
  3188                           ;main.c: 209: LATCbits.LATC7 = 0;
  3189  00616A  9E8B               	bcf	3979,7,c	;volatile
  3190                           
  3191                           ;main.c: 212: TRISDbits.RD0 = 0;
  3192  00616C  9095               	bcf	3989,0,c	;volatile
  3193                           
  3194                           ;main.c: 213: TRISDbits.RD1 = 0;
  3195  00616E  9295               	bcf	3989,1,c	;volatile
  3196                           
  3197                           ;main.c: 214: TRISDbits.RD2 = 0;
  3198  006170  9495               	bcf	3989,2,c	;volatile
  3199                           
  3200                           ;main.c: 215: TRISDbits.RD4 = 0;
  3201  006172  9895               	bcf	3989,4,c	;volatile
  3202                           
  3203                           ;main.c: 216: TRISDbits.RD5 = 0;
  3204  006174  9A95               	bcf	3989,5,c	;volatile
  3205                           
  3206                           ;main.c: 217: TRISDbits.RD7 = 0;
  3207  006176  9E95               	bcf	3989,7,c	;volatile
  3208                           
  3209                           ;main.c: 218: LATDbits.LATD0 = 0;
  3210  006178  908C               	bcf	3980,0,c	;volatile
  3211                           
  3212                           ;main.c: 219: LATDbits.LATD1 = 0;
  3213  00617A  928C               	bcf	3980,1,c	;volatile
  3214                           
  3215                           ;main.c: 220: LATDbits.LATD2 = 0;
  3216  00617C  948C               	bcf	3980,2,c	;volatile
  3217                           
  3218                           ;main.c: 221: LATDbits.LATD4 = 0;
  3219  00617E  988C               	bcf	3980,4,c	;volatile
  3220                           
  3221                           ;main.c: 226: TRISEbits.RE0 = 0;
  3222  006180  9096               	bcf	3990,0,c	;volatile
  3223                           
  3224                           ;main.c: 227: TRISEbits.RE1 = 0;
  3225  006182  9296               	bcf	3990,1,c	;volatile
  3226                           
  3227                           ;main.c: 228: TRISEbits.RE2 = 0;
  3228  006184  9496               	bcf	3990,2,c	;volatile
  3229                           
  3230                           ;main.c: 229: LATEbits.LATE0 = 0;
  3231  006186  908D               	bcf	3981,0,c	;volatile
  3232                           
  3233                           ;main.c: 230: LATEbits.LATE1 = 0;
  3234  006188  928D               	bcf	3981,1,c	;volatile
  3235                           
  3236                           ;main.c: 231: LATEbits.LATE2 = 0;
  3237  00618A  948D               	bcf	3981,2,c	;volatile
  3238                           
  3239                           ; BSR set to: 15
  3240  00618C  0012               	return		;funcret
  3241  00618E                     __end_of_SysConfigSleep:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           intcon	equ	0xFF2
  3248                           postinc0	equ	0xFEE
  3249                           wreg	equ	0xFE8
  3250                           postdec2	equ	0xFDD
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           
  3254 ;; *************** function _SYSTEM_Initialize *****************
  3255 ;; Defined at:
  3256 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : F/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:   10
  3277 ;; This function calls:
  3278 ;;		_EXT_INT_Initialize
  3279 ;;		_INTERRUPT_Initialize
  3280 ;;		_LORAWAN_PlatformInit
  3281 ;;		_OSCILLATOR_Initialize
  3282 ;;		_PIN_MANAGER_Initialize
  3283 ;;		_SPI2_Initialize
  3284 ;;		_TMR1_Initialize
  3285 ;;		_TMR3_Initialize
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text5
  3292  0073BC                     __ptext5:
  3293                           	opt stack 0
  3294  0073BC                     _SYSTEM_Initialize:
  3295                           	opt stack 20
  3296                           
  3297                           ;mcc.c: 114: INTERRUPT_Initialize();
  3298                           
  3299                           ; BSR set to: 15
  3300                           ;incstack = 0
  3301  0073BC  EC82  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3302                           
  3303                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3304  0073C0  ECC2  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3308  0073C4  ECDA  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;mcc.c: 117: SPI2_Initialize();
  3312  0073C8  ECF8  F03B         	call	_SPI2_Initialize	;wreg free
  3313                           
  3314                           ;mcc.c: 118: TMR3_Initialize();
  3315  0073CC  EC01  F039         	call	_TMR3_Initialize	;wreg free
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;mcc.c: 119: EXT_INT_Initialize();
  3319  0073D0  EC69  F038         	call	_EXT_INT_Initialize	;wreg free
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;mcc.c: 120: TMR1_Initialize();
  3323  0073D4  EC3D  F039         	call	_TMR1_Initialize	;wreg free
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;mcc.c: 121: LORAWAN_PlatformInit();
  3327  0073D8  EFEE  F039         	goto	_LORAWAN_PlatformInit	;wreg free
  3328  0073DC                     __end_of_SYSTEM_Initialize:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           intcon	equ	0xFF2
  3335                           postinc0	equ	0xFEE
  3336                           wreg	equ	0xFE8
  3337                           postdec2	equ	0xFDD
  3338                           fsr2h	equ	0xFDA
  3339                           fsr2l	equ	0xFD9
  3340                           
  3341 ;; *************** function _TMR3_Initialize *****************
  3342 ;; Defined at:
  3343 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : F/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    8
  3364 ;; This function calls:
  3365 ;;		_TMR3_SetInterruptHandler
  3366 ;;		_TMR3_StartTimer
  3367 ;; This function is called by:
  3368 ;;		_SYSTEM_Initialize
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text6
  3373  007202                     __ptext6:
  3374                           	opt stack 0
  3375  007202                     _TMR3_Initialize:
  3376                           	opt stack 21
  3377                           
  3378                           ;tmr3.c: 67: T3CON = 0xBC;
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;incstack = 0
  3382  007202  0EBC               	movlw	188
  3383  007204  6EB1               	movwf	4017,c	;volatile
  3384                           
  3385                           ;tmr3.c: 70: T3GCON = 0x00;
  3386  007206  6AB4               	clrf	4020,c	;volatile
  3387                           
  3388                           ;tmr3.c: 73: TMR3H = 0x00;
  3389  007208  6AB3               	clrf	4019,c	;volatile
  3390                           
  3391                           ;tmr3.c: 76: TMR3L = 0x00;
  3392  00720A  6AB2               	clrf	4018,c	;volatile
  3393                           
  3394                           ;tmr3.c: 79: timer3ReloadVal=TMR3;
  3395  00720C  CFB2 F05E          	movff	4018,_timer3ReloadVal	;volatile
  3396  007210  CFB3 F05F          	movff	4019,_timer3ReloadVal+1	;volatile
  3397                           
  3398                           ;tmr3.c: 82: PIR2bits.TMR3IF = 0;
  3399  007214  92A1               	bcf	4001,1,c	;volatile
  3400                           
  3401                           ;tmr3.c: 85: PIE2bits.TMR3IE = 1;
  3402  007216  82A0               	bsf	4000,1,c	;volatile
  3403                           
  3404                           ;tmr3.c: 88: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  3405  007218  0E22               	movlw	low _TMR3_DefaultInterruptHandler
  3406  00721A  0100               	movlb	0	; () banked
  3407  00721C  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3408  00721E  0E79               	movlw	high _TMR3_DefaultInterruptHandler
  3409  007220  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3410  007222  ECFE  F03B         	call	_TMR3_SetInterruptHandler	;wreg free
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;tmr3.c: 91: TMR3_StartTimer();
  3414  007226  EF7C  F03C         	goto	_TMR3_StartTimer	;wreg free
  3415  00722A                     __end_of_TMR3_Initialize:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           intcon	equ	0xFF2
  3422                           postinc0	equ	0xFEE
  3423                           wreg	equ	0xFE8
  3424                           postdec2	equ	0xFDD
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           
  3428 ;; *************** function _TMR3_StartTimer *****************
  3429 ;; Defined at:
  3430 ;;		line 94 in file "mcc_generated_files/tmr3.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		None
  3439 ;; Tracked objects:
  3440 ;;		On entry : F/0
  3441 ;;		On exit  : F/0
  3442 ;;		Unchanged: F/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    7
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_TMR3_Initialize
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text7
  3459  0078F8                     __ptext7:
  3460                           	opt stack 0
  3461  0078F8                     _TMR3_StartTimer:
  3462                           	opt stack 21
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;tmr3.c: 97: T3CONbits.TMR3ON = 1;
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;incstack = 0
  3469  0078F8  80B1               	bsf	4017,0,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472  0078FA  0012               	return		;funcret
  3473  0078FC                     __end_of_TMR3_StartTimer:
  3474                           	opt stack 0
  3475                           tblptru	equ	0xFF8
  3476                           tblptrh	equ	0xFF7
  3477                           tblptrl	equ	0xFF6
  3478                           tablat	equ	0xFF5
  3479                           intcon	equ	0xFF2
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           postdec2	equ	0xFDD
  3483                           fsr2h	equ	0xFDA
  3484                           fsr2l	equ	0xFD9
  3485                           
  3486 ;; *************** function _TMR3_SetInterruptHandler *****************
  3487 ;; Defined at:
  3488 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3491 ;;		 -> handle16sInterrupt(1), TMR3_DefaultInterruptHandler(1), 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : F/0
  3500 ;;		On exit  : F/0
  3501 ;;		Unchanged: F/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    7
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_TMR3_Initialize
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text8
  3519  0077FC                     __ptext8:
  3520                           	opt stack 0
  3521  0077FC                     _TMR3_SetInterruptHandler:
  3522                           	opt stack 23
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;tmr3.c: 184: TMR3_InterruptHandler = InterruptHandler;
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;incstack = 0
  3529  0077FC  C064  F1EF         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3530  007800  C065  F1F0         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3531                           
  3532                           ; BSR set to: 0
  3533  007804  0012               	return		;funcret
  3534  007806                     __end_of_TMR3_SetInterruptHandler:
  3535                           	opt stack 0
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           intcon	equ	0xFF2
  3541                           postinc0	equ	0xFEE
  3542                           wreg	equ	0xFE8
  3543                           postdec2	equ	0xFDD
  3544                           fsr2h	equ	0xFDA
  3545                           fsr2l	equ	0xFD9
  3546                           
  3547 ;; *************** function _TMR1_Initialize *****************
  3548 ;; Defined at:
  3549 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : F/0
  3560 ;;		On exit  : F/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    8
  3570 ;; This function calls:
  3571 ;;		_TMR1_SetInterruptHandler
  3572 ;;		_TMR1_StartTimer
  3573 ;; This function is called by:
  3574 ;;		_SYSTEM_Initialize
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text9
  3579  00727A                     __ptext9:
  3580                           	opt stack 0
  3581  00727A                     _TMR1_Initialize:
  3582                           	opt stack 21
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;tmr1.c: 67: T1CON = 0x8C;
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;incstack = 0
  3589  00727A  0E8C               	movlw	140
  3590  00727C  6ECD               	movwf	4045,c	;volatile
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;tmr1.c: 70: T1GCON = 0x00;
  3594  00727E  6ACC               	clrf	4044,c	;volatile
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;tmr1.c: 73: TMR1H = 0x00;
  3598  007280  6ACF               	clrf	4047,c	;volatile
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;tmr1.c: 76: TMR1L = 0x00;
  3602  007282  6ACE               	clrf	4046,c	;volatile
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3606  007284  CFCE F05C          	movff	4046,_timer1ReloadVal	;volatile
  3607  007288  CFCF F05D          	movff	4047,_timer1ReloadVal+1	;volatile
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3611  00728C  909E               	bcf	3998,0,c	;volatile
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3615  00728E  809D               	bsf	3997,0,c	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3619  007290  0E24               	movlw	low _TMR1_DefaultInterruptHandler
  3620  007292  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3621  007294  0E79               	movlw	high _TMR1_DefaultInterruptHandler
  3622  007296  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3623  007298  EC03  F03C         	call	_TMR1_SetInterruptHandler	;wreg free
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;tmr1.c: 91: TMR1_StartTimer();
  3627  00729C  EF7E  F03C         	goto	_TMR1_StartTimer	;wreg free
  3628  0072A0                     __end_of_TMR1_Initialize:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           intcon	equ	0xFF2
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec2	equ	0xFDD
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           
  3641 ;; *************** function _TMR1_StartTimer *****************
  3642 ;; Defined at:
  3643 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		None
  3652 ;; Tracked objects:
  3653 ;;		On entry : F/0
  3654 ;;		On exit  : F/0
  3655 ;;		Unchanged: F/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    7
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_TMR1_Initialize
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text10
  3672  0078FC                     __ptext10:
  3673                           	opt stack 0
  3674  0078FC                     _TMR1_StartTimer:
  3675                           	opt stack 21
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;incstack = 0
  3682  0078FC  80CD               	bsf	4045,0,c	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685  0078FE  0012               	return		;funcret
  3686  007900                     __end_of_TMR1_StartTimer:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           intcon	equ	0xFF2
  3693                           postinc0	equ	0xFEE
  3694                           wreg	equ	0xFE8
  3695                           postdec2	equ	0xFDD
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           
  3699 ;; *************** function _PIN_MANAGER_Initialize *****************
  3700 ;; Defined at:
  3701 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : F/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    8
  3722 ;; This function calls:
  3723 ;;		_IOCB4_SetInterruptHandler
  3724 ;; This function is called by:
  3725 ;;		_SYSTEM_Initialize
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text11
  3730  006B84                     __ptext11:
  3731                           	opt stack 0
  3732  006B84                     _PIN_MANAGER_Initialize:
  3733                           	opt stack 21
  3734                           
  3735                           ;pin_manager.c: 57: LATE = 0x00;
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;incstack = 0
  3739  006B84  6A8D               	clrf	3981,c	;volatile
  3740                           
  3741                           ;pin_manager.c: 58: LATD = 0x00;
  3742  006B86  6A8C               	clrf	3980,c	;volatile
  3743                           
  3744                           ;pin_manager.c: 59: LATA = 0x00;
  3745  006B88  6A89               	clrf	3977,c	;volatile
  3746                           
  3747                           ;pin_manager.c: 60: LATB = 0x00;
  3748  006B8A  6A8A               	clrf	3978,c	;volatile
  3749                           
  3750                           ;pin_manager.c: 61: LATC = 0x00;
  3751  006B8C  6A8B               	clrf	3979,c	;volatile
  3752                           
  3753                           ;pin_manager.c: 66: TRISE = 0x07;
  3754  006B8E  0E07               	movlw	7
  3755  006B90  6E96               	movwf	3990,c	;volatile
  3756                           
  3757                           ;pin_manager.c: 67: TRISA = 0xFF;
  3758  006B92  6892               	setf	3986,c	;volatile
  3759                           
  3760                           ;pin_manager.c: 68: TRISB = 0xFF;
  3761  006B94  6893               	setf	3987,c	;volatile
  3762                           
  3763                           ;pin_manager.c: 69: TRISC = 0xFE;
  3764  006B96  0EFE               	movlw	254
  3765  006B98  6E94               	movwf	3988,c	;volatile
  3766                           
  3767                           ;pin_manager.c: 70: TRISD = 0xE6;
  3768  006B9A  0EE6               	movlw	230
  3769  006B9C  6E95               	movwf	3989,c	;volatile
  3770                           
  3771                           ;pin_manager.c: 75: ANSELC = 0xF8;
  3772  006B9E  0EF8               	movlw	248
  3773  006BA0  010F               	movlb	15	; () banked
  3774  006BA2  6F3A               	movwf	58,b	;volatile
  3775                           
  3776                           ;pin_manager.c: 76: ANSELB = 0x28;
  3777  006BA4  0E28               	movlw	40
  3778  006BA6  6F39               	movwf	57,b	;volatile
  3779                           
  3780                           ;pin_manager.c: 77: ANSELD = 0xE4;
  3781  006BA8  0EE4               	movlw	228
  3782  006BAA  6F3B               	movwf	59,b	;volatile
  3783                           
  3784                           ;pin_manager.c: 78: ANSELE = 0x07;
  3785  006BAC  0E07               	movlw	7
  3786  006BAE  6F3C               	movwf	60,b	;volatile
  3787                           
  3788                           ;pin_manager.c: 79: ANSELA = 0x2F;
  3789  006BB0  0E2F               	movlw	47
  3790  006BB2  6F38               	movwf	56,b	;volatile
  3791                           
  3792                           ; BSR set to: 15
  3793                           ;pin_manager.c: 84: WPUB = 0xFF;
  3794  006BB4  6861               	setf	3937,c	;volatile
  3795                           
  3796                           ; BSR set to: 15
  3797                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  3798  006BB6  9EF1               	bcf	intcon2,7,c	;volatile
  3799                           
  3800                           ; BSR set to: 15
  3801                           ;pin_manager.c: 93: IOCBbits.IOCB4 = 1;
  3802  006BB8  8862               	bsf	3938,4,c	;volatile
  3803                           
  3804                           ; BSR set to: 15
  3805                           ;pin_manager.c: 96: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3806  006BBA  0E26               	movlw	low _IOCB4_DefaultInterruptHandler
  3807  006BBC  0100               	movlb	0	; () banked
  3808  006BBE  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3809  006BC0  0E79               	movlw	high _IOCB4_DefaultInterruptHandler
  3810  006BC2  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3811  006BC4  EC08  F03C         	call	_IOCB4_SetInterruptHandler	;wreg free
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;pin_manager.c: 99: INTCONbits.RBIE = 1;
  3815  006BC8  86F2               	bsf	intcon,3,c	;volatile
  3816                           
  3817                           ; BSR set to: 0
  3818  006BCA  0012               	return		;funcret
  3819  006BCC                     __end_of_PIN_MANAGER_Initialize:
  3820                           	opt stack 0
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           intcon	equ	0xFF2
  3826                           intcon2	equ	0xFF1
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           postdec2	equ	0xFDD
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           
  3833 ;; *************** function _OSCILLATOR_Initialize *****************
  3834 ;; Defined at:
  3835 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2
  3844 ;; Tracked objects:
  3845 ;;		On entry : F/0
  3846 ;;		On exit  : F/0
  3847 ;;		Unchanged: F/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;Total ram usage:        0 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    7
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_SYSTEM_Initialize
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text12
  3864  0077B4                     __ptext12:
  3865                           	opt stack 0
  3866  0077B4                     _OSCILLATOR_Initialize:
  3867                           	opt stack 22
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;mcc.c: 127: OSCCON = 0x70;
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;incstack = 0
  3874  0077B4  0E70               	movlw	112
  3875  0077B6  6ED3               	movwf	4051,c	;volatile
  3876                           
  3877                           ;mcc.c: 129: OSCCON2 = 0x04;
  3878  0077B8  0E04               	movlw	4
  3879  0077BA  6ED2               	movwf	4050,c	;volatile
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;mcc.c: 131: OSCTUNE = 0x00;
  3883  0077BC  6A9B               	clrf	3995,c	;volatile
  3884                           
  3885                           ; BSR set to: 0
  3886  0077BE  0012               	return		;funcret
  3887  0077C0                     __end_of_OSCILLATOR_Initialize:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           intcon	equ	0xFF2
  3894                           intcon2	equ	0xFF1
  3895                           postinc0	equ	0xFEE
  3896                           wreg	equ	0xFE8
  3897                           postdec2	equ	0xFDD
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           
  3901 ;; *************** function _LORAWAN_PlatformInit *****************
  3902 ;; Defined at:
  3903 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : F/0
  3914 ;;		On exit  : F/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;Total ram usage:        0 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    9
  3924 ;; This function calls:
  3925 ;;		_DIO0_ISR_Lora_Init
  3926 ;;		_DIO1_ISR_Lora_Init
  3927 ;;		_DIO2_ISR_Lora_Init
  3928 ;;		_DIO3_ISR_Lora_Init
  3929 ;;		_DIO4_ISR_Lora_Init
  3930 ;;		_DIO5_ISR_Lora_Init
  3931 ;;		_SystemTimerInit
  3932 ;;		_TMR_ISR_Lora_Init
  3933 ;; This function is called by:
  3934 ;;		_SYSTEM_Initialize
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text13
  3939  0073DC                     __ptext13:
  3940                           	opt stack 0
  3941  0073DC                     _LORAWAN_PlatformInit:
  3942                           	opt stack 20
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;incstack = 0
  3949  0073DC  ECE0  F03B         	call	_TMR_ISR_Lora_Init	;wreg free
  3950                           
  3951                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3952  0073E0  ECF2  F03B         	call	_DIO0_ISR_Lora_Init	;wreg free
  3953                           
  3954                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3955  0073E4  ECEC  F03B         	call	_DIO1_ISR_Lora_Init	;wreg free
  3956                           
  3957                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3958  0073E8  ECE6  F03B         	call	_DIO2_ISR_Lora_Init	;wreg free
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3962  0073EC  EC8F  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3966  0073F0  EC8E  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3967                           
  3968                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3969  0073F4  EC5E  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;lorawan_init.c: 81: SystemTimerInit();
  3973  0073F8  EF80  F03C         	goto	_SystemTimerInit	;wreg free
  3974  0073FC                     __end_of_LORAWAN_PlatformInit:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           intcon	equ	0xFF2
  3981                           intcon2	equ	0xFF1
  3982                           postinc0	equ	0xFEE
  3983                           wreg	equ	0xFE8
  3984                           postdec2	equ	0xFDD
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           
  3988 ;; *************** function _TMR_ISR_Lora_Init *****************
  3989 ;; Defined at:
  3990 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : F/0
  4001 ;;		On exit  : F/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    8
  4011 ;; This function calls:
  4012 ;;		_TMR1_SetInterruptHandler
  4013 ;; This function is called by:
  4014 ;;		_LORAWAN_PlatformInit
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text14
  4019  0077C0                     __ptext14:
  4020                           	opt stack 0
  4021  0077C0                     _TMR_ISR_Lora_Init:
  4022                           	opt stack 20
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;incstack = 0
  4029  0077C0  0E56               	movlw	low _TMR_ISR_lora
  4030  0077C2  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4031  0077C4  0E6A               	movlw	high _TMR_ISR_lora
  4032  0077C6  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4033  0077C8  EF03  F03C         	goto	_TMR1_SetInterruptHandler	;wreg free
  4034  0077CC                     __end_of_TMR_ISR_Lora_Init:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           intcon	equ	0xFF2
  4041                           intcon2	equ	0xFF1
  4042                           postinc0	equ	0xFEE
  4043                           wreg	equ	0xFE8
  4044                           postdec2	equ	0xFDD
  4045                           fsr2h	equ	0xFDA
  4046                           fsr2l	equ	0xFD9
  4047                           
  4048 ;; *************** function _TMR1_SetInterruptHandler *****************
  4049 ;; Defined at:
  4050 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4053 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : F/0
  4062 ;;		On exit  : F/0
  4063 ;;		Unchanged: F/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    7
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_TMR_ISR_Lora_Init
  4076 ;;		_TMR1_Initialize
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text15
  4081  007806                     __ptext15:
  4082                           	opt stack 0
  4083  007806                     _TMR1_SetInterruptHandler:
  4084                           	opt stack 21
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;incstack = 0
  4091  007806  C064  F1ED         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4092  00780A  C065  F1EE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4093                           
  4094                           ; BSR set to: 0
  4095  00780E  0012               	return		;funcret
  4096  007810                     __end_of_TMR1_SetInterruptHandler:
  4097                           	opt stack 0
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           intcon	equ	0xFF2
  4103                           intcon2	equ	0xFF1
  4104                           postinc0	equ	0xFEE
  4105                           wreg	equ	0xFE8
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           
  4110 ;; *************** function _SystemTimerInit *****************
  4111 ;; Defined at:
  4112 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		None
  4121 ;; Tracked objects:
  4122 ;;		On entry : F/0
  4123 ;;		On exit  : F/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    7
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_LORAWAN_PlatformInit
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text16
  4141  007900                     __ptext16:
  4142                           	opt stack 0
  4143  007900                     _SystemTimerInit:
  4144                           	opt stack 21
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;sw_timer.c: 137: allocatedTimers = 0;
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;incstack = 0
  4151  007900  6BEF               	clrf	_allocatedTimers& (0+255),b	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154  007902  0012               	return		;funcret
  4155  007904                     __end_of_SystemTimerInit:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           intcon	equ	0xFF2
  4162                           intcon2	equ	0xFF1
  4163                           postinc0	equ	0xFEE
  4164                           wreg	equ	0xFE8
  4165                           postdec2	equ	0xFDD
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           
  4169 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4170 ;; Defined at:
  4171 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : F/0
  4182 ;;		On exit  : F/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    8
  4192 ;; This function calls:
  4193 ;;		_INT0_SetInterruptHandler
  4194 ;; This function is called by:
  4195 ;;		_LORAWAN_PlatformInit
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text17
  4200  0078BC                     __ptext17:
  4201                           	opt stack 0
  4202  0078BC                     _DIO5_ISR_Lora_Init:
  4203                           	opt stack 20
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;incstack = 0
  4210  0078BC  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4211  0078BE  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4212  0078C0  0C00               	retlw	0	;wreg free
  4213  0078C2                     __end_of_DIO5_ISR_Lora_Init:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           intcon	equ	0xFF2
  4220                           intcon2	equ	0xFF1
  4221                           postinc0	equ	0xFEE
  4222                           wreg	equ	0xFE8
  4223                           postdec2	equ	0xFDD
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           
  4227 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4228 ;; Defined at:
  4229 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		None
  4238 ;; Tracked objects:
  4239 ;;		On entry : F/0
  4240 ;;		On exit  : F/0
  4241 ;;		Unchanged: F/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:        0 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    7
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_LORAWAN_PlatformInit
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text18
  4258  00791C                     __ptext18:
  4259                           	opt stack 0
  4260  00791C                     _DIO4_ISR_Lora_Init:
  4261                           	opt stack 21
  4262                           
  4263                           ; BSR set to: 0
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;incstack = 0
  4267  00791C  0012               	return		;funcret
  4268  00791E                     __end_of_DIO4_ISR_Lora_Init:
  4269                           	opt stack 0
  4270                           tblptru	equ	0xFF8
  4271                           tblptrh	equ	0xFF7
  4272                           tblptrl	equ	0xFF6
  4273                           tablat	equ	0xFF5
  4274                           intcon	equ	0xFF2
  4275                           intcon2	equ	0xFF1
  4276                           postinc0	equ	0xFEE
  4277                           wreg	equ	0xFE8
  4278                           postdec2	equ	0xFDD
  4279                           fsr2h	equ	0xFDA
  4280                           fsr2l	equ	0xFD9
  4281                           
  4282 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4283 ;; Defined at:
  4284 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		None
  4293 ;; Tracked objects:
  4294 ;;		On entry : F/0
  4295 ;;		On exit  : F/0
  4296 ;;		Unchanged: F/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        0 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    7
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_LORAWAN_PlatformInit
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text19
  4313  00791E                     __ptext19:
  4314                           	opt stack 0
  4315  00791E                     _DIO3_ISR_Lora_Init:
  4316                           	opt stack 21
  4317                           
  4318                           ; BSR set to: 0
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;incstack = 0
  4322  00791E  0012               	return		;funcret
  4323  007920                     __end_of_DIO3_ISR_Lora_Init:
  4324                           	opt stack 0
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           intcon	equ	0xFF2
  4330                           intcon2	equ	0xFF1
  4331                           postinc0	equ	0xFEE
  4332                           wreg	equ	0xFE8
  4333                           postdec2	equ	0xFDD
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           
  4337 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4338 ;; Defined at:
  4339 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : F/0
  4350 ;;		On exit  : F/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    8
  4360 ;; This function calls:
  4361 ;;		_IOCB4_SetInterruptHandler
  4362 ;; This function is called by:
  4363 ;;		_LORAWAN_PlatformInit
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text20
  4368  0077CC                     __ptext20:
  4369                           	opt stack 0
  4370  0077CC                     _DIO2_ISR_Lora_Init:
  4371                           	opt stack 20
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;incstack = 0
  4378  0077CC  0EDA               	movlw	low _DIO2_ISR_Lora
  4379  0077CE  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4380  0077D0  0E78               	movlw	high _DIO2_ISR_Lora
  4381  0077D2  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4382  0077D4  EF08  F03C         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4383  0077D8                     __end_of_DIO2_ISR_Lora_Init:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           intcon	equ	0xFF2
  4390                           intcon2	equ	0xFF1
  4391                           postinc0	equ	0xFEE
  4392                           wreg	equ	0xFE8
  4393                           postdec2	equ	0xFDD
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           
  4397 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4398 ;; Defined at:
  4399 ;;		line 133 in file "mcc_generated_files/pin_manager.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4402 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : F/0
  4411 ;;		On exit  : F/0
  4412 ;;		Unchanged: F/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:        2 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    7
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_PIN_MANAGER_Initialize
  4425 ;;		_DIO2_ISR_Lora_Init
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text21
  4430  007810                     __ptext21:
  4431                           	opt stack 0
  4432  007810                     _IOCB4_SetInterruptHandler:
  4433                           	opt stack 21
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;pin_manager.c: 134: IOCB4_InterruptHandler = InterruptHandler;
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;incstack = 0
  4440  007810  C064  F1EB         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4441  007814  C065  F1EC         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4442                           
  4443                           ; BSR set to: 0
  4444  007818  0012               	return		;funcret
  4445  00781A                     __end_of_IOCB4_SetInterruptHandler:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           intcon	equ	0xFF2
  4452                           intcon2	equ	0xFF1
  4453                           postinc0	equ	0xFEE
  4454                           wreg	equ	0xFE8
  4455                           postdec2	equ	0xFDD
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           
  4459 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4460 ;; Defined at:
  4461 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : F/0
  4472 ;;		On exit  : F/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    8
  4482 ;; This function calls:
  4483 ;;		_INT2_SetInterruptHandler
  4484 ;; This function is called by:
  4485 ;;		_LORAWAN_PlatformInit
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text22
  4490  0077D8                     __ptext22:
  4491                           	opt stack 0
  4492  0077D8                     _DIO1_ISR_Lora_Init:
  4493                           	opt stack 20
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;incstack = 0
  4500  0077D8  0EE6               	movlw	low _DIO1_ISR_Lora
  4501  0077DA  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4502  0077DC  0E78               	movlw	high _DIO1_ISR_Lora
  4503  0077DE  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4504  0077E0  EF0D  F03C         	goto	_INT2_SetInterruptHandler	;wreg free
  4505  0077E4                     __end_of_DIO1_ISR_Lora_Init:
  4506                           	opt stack 0
  4507                           tblptru	equ	0xFF8
  4508                           tblptrh	equ	0xFF7
  4509                           tblptrl	equ	0xFF6
  4510                           tablat	equ	0xFF5
  4511                           intcon	equ	0xFF2
  4512                           intcon2	equ	0xFF1
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           postdec2	equ	0xFDD
  4516                           fsr2h	equ	0xFDA
  4517                           fsr2l	equ	0xFD9
  4518                           
  4519 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4520 ;; Defined at:
  4521 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : F/0
  4532 ;;		On exit  : F/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;Total ram usage:        0 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    8
  4542 ;; This function calls:
  4543 ;;		_INT1_SetInterruptHandler
  4544 ;; This function is called by:
  4545 ;;		_LORAWAN_PlatformInit
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text23
  4550  0077E4                     __ptext23:
  4551                           	opt stack 0
  4552  0077E4                     _DIO0_ISR_Lora_Init:
  4553                           	opt stack 20
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;incstack = 0
  4560  0077E4  0EF2               	movlw	low _DIO0_ISR_Lora
  4561  0077E6  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4562  0077E8  0E78               	movlw	high _DIO0_ISR_Lora
  4563  0077EA  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4564  0077EC  EF12  F03C         	goto	_INT1_SetInterruptHandler	;wreg free
  4565  0077F0                     __end_of_DIO0_ISR_Lora_Init:
  4566                           	opt stack 0
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           intcon	equ	0xFF2
  4572                           intcon2	equ	0xFF1
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           postdec2	equ	0xFDD
  4576                           fsr2h	equ	0xFDA
  4577                           fsr2l	equ	0xFD9
  4578                           
  4579 ;; *************** function _INTERRUPT_Initialize *****************
  4580 ;; Defined at:
  4581 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		None
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    7
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_SYSTEM_Initialize
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text24
  4610  007904                     __ptext24:
  4611                           	opt stack 0
  4612  007904                     _INTERRUPT_Initialize:
  4613                           	opt stack 22
  4614                           
  4615                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;incstack = 0
  4619  007904  9ED0               	bcf	4048,7,c	;volatile
  4620  007906  0012               	return		;funcret
  4621  007908                     __end_of_INTERRUPT_Initialize:
  4622                           	opt stack 0
  4623                           tblptru	equ	0xFF8
  4624                           tblptrh	equ	0xFF7
  4625                           tblptrl	equ	0xFF6
  4626                           tablat	equ	0xFF5
  4627                           intcon	equ	0xFF2
  4628                           intcon2	equ	0xFF1
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           postdec2	equ	0xFDD
  4632                           fsr2h	equ	0xFDA
  4633                           fsr2l	equ	0xFD9
  4634                           
  4635 ;; *************** function _EXT_INT_Initialize *****************
  4636 ;; Defined at:
  4637 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : F/0
  4648 ;;		On exit  : F/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;Total ram usage:        0 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    8
  4658 ;; This function calls:
  4659 ;;		_INT0_SetInterruptHandler
  4660 ;;		_INT1_SetInterruptHandler
  4661 ;;		_INT2_SetInterruptHandler
  4662 ;; This function is called by:
  4663 ;;		_SYSTEM_Initialize
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text25
  4668  0070D2                     __ptext25:
  4669                           	opt stack 0
  4670  0070D2                     _EXT_INT_Initialize:
  4671                           	opt stack 21
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4675                           
  4676                           ;incstack = 0
  4677  0070D2  90F0               	bcf	intcon3,0,c	;volatile
  4678                           
  4679                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4680  0070D4  8AF1               	bsf	intcon2,5,c	;volatile
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4684  0070D6  0E2A               	movlw	low _INT1_DefaultInterruptHandler
  4685  0070D8  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4686  0070DA  0E79               	movlw	high _INT1_DefaultInterruptHandler
  4687  0070DC  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4688  0070DE  EC12  F03C         	call	_INT1_SetInterruptHandler	;wreg free
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4692  0070E2  86F0               	bsf	intcon3,3,c	;volatile
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4696  0070E4  92F0               	bcf	intcon3,1,c	;volatile
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4700  0070E6  88F1               	bsf	intcon2,4,c	;volatile
  4701                           
  4702                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4703  0070E8  0E28               	movlw	low _INT2_DefaultInterruptHandler
  4704  0070EA  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4705  0070EC  0E79               	movlw	high _INT2_DefaultInterruptHandler
  4706  0070EE  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4707  0070F0  EC0D  F03C         	call	_INT2_SetInterruptHandler	;wreg free
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4711  0070F4  88F0               	bsf	intcon3,4,c	;volatile
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4715  0070F6  92F2               	bcf	intcon,1,c	;volatile
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4719  0070F8  8CF1               	bsf	intcon2,6,c	;volatile
  4720                           
  4721                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4722  0070FA  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4723  0070FC  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4724  0070FE  0C00               	retlw	0	;wreg free
  4725  007100                     __end_of_EXT_INT_Initialize:
  4726                           	opt stack 0
  4727                           tblptru	equ	0xFF8
  4728                           tblptrh	equ	0xFF7
  4729                           tblptrl	equ	0xFF6
  4730                           tablat	equ	0xFF5
  4731                           intcon	equ	0xFF2
  4732                           intcon2	equ	0xFF1
  4733                           intcon3	equ	0xFF0
  4734                           postinc0	equ	0xFEE
  4735                           wreg	equ	0xFE8
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           
  4740 ;; *************** function _INT2_SetInterruptHandler *****************
  4741 ;; Defined at:
  4742 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4745 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : F/0
  4754 ;;		On exit  : F/0
  4755 ;;		Unchanged: F/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;Total ram usage:        2 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    7
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_EXT_INT_Initialize
  4768 ;;		_DIO1_ISR_Lora_Init
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text26
  4773  00781A                     __ptext26:
  4774                           	opt stack 0
  4775  00781A                     _INT2_SetInterruptHandler:
  4776                           	opt stack 20
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;incstack = 0
  4783  00781A  C064  F1E9         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4784  00781E  C065  F1EA         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4785                           
  4786                           ; BSR set to: 0
  4787  007822  0012               	return		;funcret
  4788  007824                     __end_of_INT2_SetInterruptHandler:
  4789                           	opt stack 0
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           intcon	equ	0xFF2
  4795                           intcon2	equ	0xFF1
  4796                           intcon3	equ	0xFF0
  4797                           postinc0	equ	0xFEE
  4798                           wreg	equ	0xFE8
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           
  4803 ;; *************** function _INT1_SetInterruptHandler *****************
  4804 ;; Defined at:
  4805 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4808 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : F/0
  4817 ;;		On exit  : F/0
  4818 ;;		Unchanged: F/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;Total ram usage:        2 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    7
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_EXT_INT_Initialize
  4831 ;;		_DIO0_ISR_Lora_Init
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text27
  4836  007824                     __ptext27:
  4837                           	opt stack 0
  4838  007824                     _INT1_SetInterruptHandler:
  4839                           	opt stack 20
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;incstack = 0
  4846  007824  C064  F05A         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4847  007828  C065  F05B         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4848                           
  4849                           ; BSR set to: 0
  4850  00782C  0012               	return		;funcret
  4851  00782E                     __end_of_INT1_SetInterruptHandler:
  4852                           	opt stack 0
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           intcon	equ	0xFF2
  4858                           intcon2	equ	0xFF1
  4859                           intcon3	equ	0xFF0
  4860                           postinc0	equ	0xFEE
  4861                           wreg	equ	0xFE8
  4862                           postdec2	equ	0xFDD
  4863                           fsr2h	equ	0xFDA
  4864                           fsr2l	equ	0xFD9
  4865                           
  4866 ;; *************** function _INT0_SetInterruptHandler *****************
  4867 ;; Defined at:
  4868 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4871 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		None
  4878 ;; Tracked objects:
  4879 ;;		On entry : F/0
  4880 ;;		On exit  : F/0
  4881 ;;		Unchanged: F/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;Total ram usage:        2 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    7
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_EXT_INT_Initialize
  4894 ;;		_DIO5_ISR_Lora_Init
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text28
  4899  007920                     __ptext28:
  4900                           	opt stack 0
  4901  007920                     _INT0_SetInterruptHandler:
  4902                           	opt stack 20
  4903                           
  4904                           ; BSR set to: 0
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;incstack = 0
  4908  007920  0012               	return		;funcret
  4909  007922                     __end_of_INT0_SetInterruptHandler:
  4910                           	opt stack 0
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           intcon	equ	0xFF2
  4916                           intcon2	equ	0xFF1
  4917                           intcon3	equ	0xFF0
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           postdec2	equ	0xFDD
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           
  4924 ;; *************** function _LoRaWakeUp *****************
  4925 ;; Defined at:
  4926 ;;		line 265 in file "main.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : F/1
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    8
  4947 ;; This function calls:
  4948 ;;		_SPI2_Initialize
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text29
  4955  00787C                     __ptext29:
  4956                           	opt stack 0
  4957  00787C                     _LoRaWakeUp:
  4958                           	opt stack 22
  4959                           
  4960                           ; BSR set to: 1
  4961                           ;main.c: 267: MSSP2MD = 0;
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;incstack = 0
  4965  00787C  010F               	movlb	15	; () banked
  4966  00787E  9F3E               	bcf	62,7,b	;volatile
  4967                           
  4968                           ; BSR set to: 15
  4969                           ;main.c: 268: SPI2_Initialize();
  4970  007880  EFF8  F03B         	goto	_SPI2_Initialize	;wreg free
  4971  007884                     __end_of_LoRaWakeUp:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           intcon	equ	0xFF2
  4978                           intcon2	equ	0xFF1
  4979                           intcon3	equ	0xFF0
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           postdec2	equ	0xFDD
  4983                           fsr2h	equ	0xFDA
  4984                           fsr2l	equ	0xFD9
  4985                           
  4986 ;; *************** function _SPI2_Initialize *****************
  4987 ;; Defined at:
  4988 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    7
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_SYSTEM_Initialize
  5013 ;;		_LoRaWakeUp
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text30
  5018  0077F0                     __ptext30:
  5019                           	opt stack 0
  5020  0077F0                     _SPI2_Initialize:
  5021                           	opt stack 22
  5022                           
  5023                           ;spi2.c: 68: SSP2STAT = 0x40;
  5024                           
  5025                           ;incstack = 0
  5026  0077F0  0E40               	movlw	64
  5027  0077F2  6E6D               	movwf	3949,c	;volatile
  5028                           
  5029                           ;spi2.c: 71: SSP2CON1 = 0x20;
  5030  0077F4  0E20               	movlw	32
  5031  0077F6  6E6C               	movwf	3948,c	;volatile
  5032                           
  5033                           ;spi2.c: 74: SSP2ADD = 0x00;
  5034  0077F8  6A6E               	clrf	3950,c	;volatile
  5035  0077FA  0012               	return		;funcret
  5036  0077FC                     __end_of_SPI2_Initialize:
  5037                           	opt stack 0
  5038                           tblptru	equ	0xFF8
  5039                           tblptrh	equ	0xFF7
  5040                           tblptrl	equ	0xFF6
  5041                           tablat	equ	0xFF5
  5042                           intcon	equ	0xFF2
  5043                           intcon2	equ	0xFF1
  5044                           intcon3	equ	0xFF0
  5045                           postinc0	equ	0xFEE
  5046                           wreg	equ	0xFE8
  5047                           postdec2	equ	0xFDD
  5048                           fsr2h	equ	0xFDA
  5049                           fsr2l	equ	0xFD9
  5050                           
  5051 ;; *************** function _LoRaSleep *****************
  5052 ;; Defined at:
  5053 ;;		line 235 in file "main.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;		None
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		None
  5062 ;; Tracked objects:
  5063 ;;		On entry : F/2
  5064 ;;		On exit  : F/F
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;Total ram usage:        0 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    7
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text31
  5082  0073FC                     __ptext31:
  5083                           	opt stack 0
  5084  0073FC                     _LoRaSleep:
  5085                           	opt stack 23
  5086                           
  5087                           ; BSR set to: 2
  5088                           ;main.c: 238: SSP2CON1 = 0x00;
  5089                           
  5090                           ;incstack = 0
  5091  0073FC  6A6C               	clrf	3948,c	;volatile
  5092                           
  5093                           ;main.c: 241: MSSP2MD = 1;
  5094  0073FE  010F               	movlb	15	; () banked
  5095  007400  8F3E               	bsf	62,7,b	;volatile
  5096                           
  5097                           ;main.c: 245: ANSD3 = 0;
  5098  007402  973B               	bcf	59,3,b	;volatile
  5099                           
  5100                           ;main.c: 246: TRISD3 = 0;
  5101  007404  9695               	bcf	3989,3,c	;volatile
  5102                           
  5103                           ;main.c: 247: LATD3 = 1;
  5104  007406  868C               	bsf	3980,3,c	;volatile
  5105                           
  5106                           ;main.c: 250: ANSD1 = 0;
  5107  007408  933B               	bcf	59,1,b	;volatile
  5108                           
  5109                           ;main.c: 251: TRISD1 = 0;
  5110  00740A  9295               	bcf	3989,1,c	;volatile
  5111                           
  5112                           ;main.c: 252: LATD1 = 0;
  5113  00740C  928C               	bcf	3980,1,c	;volatile
  5114                           
  5115                           ;main.c: 255: ANSD4 = 0;
  5116  00740E  993B               	bcf	59,4,b	;volatile
  5117                           
  5118                           ;main.c: 256: TRISD4 = 0;
  5119  007410  9895               	bcf	3989,4,c	;volatile
  5120                           
  5121                           ;main.c: 257: LATD4 = 0;
  5122  007412  988C               	bcf	3980,4,c	;volatile
  5123                           
  5124                           ;main.c: 260: ANSD0 = 0;
  5125  007414  913B               	bcf	59,0,b	;volatile
  5126                           
  5127                           ;main.c: 261: TRISD0 = 0;
  5128  007416  9095               	bcf	3989,0,c	;volatile
  5129                           
  5130                           ;main.c: 262: LATD0 = 0;
  5131  007418  908C               	bcf	3980,0,c	;volatile
  5132                           
  5133                           ; BSR set to: 15
  5134  00741A  0012               	return		;funcret
  5135  00741C                     __end_of_LoRaSleep:
  5136                           	opt stack 0
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           intcon	equ	0xFF2
  5142                           intcon2	equ	0xFF1
  5143                           intcon3	equ	0xFF0
  5144                           postinc0	equ	0xFEE
  5145                           wreg	equ	0xFE8
  5146                           postdec2	equ	0xFDD
  5147                           fsr2h	equ	0xFDA
  5148                           fsr2l	equ	0xFD9
  5149                           
  5150 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5151 ;; Defined at:
  5152 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5155 ;;		 -> nwkSKey(16), 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : F/0
  5164 ;;		On exit  : D/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;Total ram usage:        2 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    8
  5174 ;; This function calls:
  5175 ;;		_memcpy
  5176 ;; This function is called by:
  5177 ;;		_main
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text32
  5182  00715A                     __ptext32:
  5183                           	opt stack 0
  5184  00715A                     _LORAWAN_SetNetworkSessionKey:
  5185                           	opt stack 22
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5189                           
  5190                           ; BSR set to: 15
  5191                           ;incstack = 0
  5192  00715A  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5193  00715C  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5194  00715E  B4D8               	btfsc	status,2,c
  5195  007160  0012               	return	
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;lorawan.c: 382: {
  5199                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5200  007162  0E22               	movlw	low (_loRa+34)
  5201  007164  6F64               	movwf	memcpy@d1& (0+255),b
  5202  007166  0E02               	movlw	high (_loRa+34)
  5203  007168  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5204  00716A  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5205  00716E  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5206  007172  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5207  007174  0E10               	movlw	16
  5208  007176  6F68               	movwf	memcpy@n& (0+255),b
  5209  007178  EC0F  F034         	call	_memcpy	;wreg free
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5213  00717C  0102               	movlb	2	; () banked
  5214  00717E  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5215                           
  5216                           ; BSR set to: 2
  5217                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5218  007180  9902               	bcf	(_loRa+2)& (0+255),4,b
  5219  007182  0012               	return		;funcret
  5220  007184                     __end_of_LORAWAN_SetNetworkSessionKey:
  5221                           	opt stack 0
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           intcon	equ	0xFF2
  5227                           intcon2	equ	0xFF1
  5228                           intcon3	equ	0xFF0
  5229                           postinc0	equ	0xFEE
  5230                           wreg	equ	0xFE8
  5231                           postdec2	equ	0xFDD
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5237 ;; Defined at:
  5238 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		None
  5247 ;; Tracked objects:
  5248 ;;		On entry : F/0
  5249 ;;		On exit  : F/2
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5252 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;Total ram usage:        4 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    7
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_main
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text33
  5267  00761A                     __ptext33:
  5268                           	opt stack 0
  5269  00761A                     _LORAWAN_SetDeviceAddress:
  5270                           	opt stack 23
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5274                           
  5275                           ;incstack = 0
  5276  00761A  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5277  00761E  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5278  007622  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5279  007626  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5280                           
  5281                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5282  00762A  0102               	movlb	2	; () banked
  5283  00762C  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5284                           
  5285                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5286  00762E  9902               	bcf	(_loRa+2)& (0+255),4,b
  5287                           
  5288                           ; BSR set to: 2
  5289  007630  0012               	return		;funcret
  5290  007632                     __end_of_LORAWAN_SetDeviceAddress:
  5291                           	opt stack 0
  5292                           tblptru	equ	0xFF8
  5293                           tblptrh	equ	0xFF7
  5294                           tblptrl	equ	0xFF6
  5295                           tablat	equ	0xFF5
  5296                           intcon	equ	0xFF2
  5297                           intcon2	equ	0xFF1
  5298                           intcon3	equ	0xFF0
  5299                           postinc0	equ	0xFEE
  5300                           wreg	equ	0xFE8
  5301                           postdec2	equ	0xFDD
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5307 ;; Defined at:
  5308 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5311 ;;		 -> appSKey(16), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : F/0
  5320 ;;		On exit  : D/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;Total ram usage:        2 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    8
  5330 ;; This function calls:
  5331 ;;		_memcpy
  5332 ;; This function is called by:
  5333 ;;		_main
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text34
  5338  007184                     __ptext34:
  5339                           	opt stack 0
  5340  007184                     _LORAWAN_SetApplicationSessionKey:
  5341                           	opt stack 22
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5345                           
  5346                           ; BSR set to: 2
  5347                           ;incstack = 0
  5348  007184  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5349  007186  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5350  007188  B4D8               	btfsc	status,2,c
  5351  00718A  0012               	return	
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;lorawan.c: 397: {
  5355                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5356  00718C  0E32               	movlw	low (_loRa+50)
  5357  00718E  6F64               	movwf	memcpy@d1& (0+255),b
  5358  007190  0E02               	movlw	high (_loRa+50)
  5359  007192  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5360  007194  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5361  007198  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5362  00719C  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5363  00719E  0E10               	movlw	16
  5364  0071A0  6F68               	movwf	memcpy@n& (0+255),b
  5365  0071A2  EC0F  F034         	call	_memcpy	;wreg free
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5369  0071A6  0102               	movlb	2	; () banked
  5370  0071A8  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5371                           
  5372                           ; BSR set to: 2
  5373                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5374  0071AA  9902               	bcf	(_loRa+2)& (0+255),4,b
  5375  0071AC  0012               	return		;funcret
  5376  0071AE                     __end_of_LORAWAN_SetApplicationSessionKey:
  5377                           	opt stack 0
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           intcon	equ	0xFF2
  5383                           intcon2	equ	0xFF1
  5384                           intcon3	equ	0xFF0
  5385                           postinc0	equ	0xFEE
  5386                           wreg	equ	0xFE8
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function _LORAWAN_Mainloop *****************
  5393 ;; Defined at:
  5394 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/1
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:   18
  5415 ;; This function calls:
  5416 ;;		_INTERRUPT_GetDioStatus
  5417 ;;		_RADIO_DIO0
  5418 ;;		_RADIO_DIO1
  5419 ;;		_RADIO_DIO2
  5420 ;;		_RADIO_DIO3
  5421 ;;		_RADIO_DIO4
  5422 ;;		_RADIO_DIO5
  5423 ;;		_SwTimersExecute
  5424 ;; This function is called by:
  5425 ;;		_main
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text35
  5430  006E1A                     __ptext35:
  5431                           	opt stack 0
  5432  006E1A                     _LORAWAN_Mainloop:
  5433                           	opt stack 12
  5434                           
  5435                           ;lorawan.c: 2240: SwTimersExecute();
  5436                           
  5437                           ;incstack = 0
  5438  006E1A  EC2A  F02C         	call	_SwTimersExecute	;wreg free
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5442  006E1E  ECB7  F03B         	call	_INTERRUPT_GetDioStatus	;wreg free
  5443  006E22  6FF1               	movwf	_localDioStatus& (0+255),b
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5447  006E24  B1F1               	btfsc	_localDioStatus& (0+255),0,b
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;lorawan.c: 2246: {
  5451                           ;lorawan.c: 2247: RADIO_DIO0();
  5452  006E26  EC30  F032         	call	_RADIO_DIO0	;wreg free
  5453                           
  5454                           ;lorawan.c: 2248: }
  5455                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5456  006E2A  0100               	movlb	0	; () banked
  5457  006E2C  B3F1               	btfsc	_localDioStatus& (0+255),1,b
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;lorawan.c: 2250: {
  5461                           ;lorawan.c: 2251: RADIO_DIO1();
  5462  006E2E  EC2A  F037         	call	_RADIO_DIO1	;wreg free
  5463                           
  5464                           ;lorawan.c: 2252: }
  5465                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5466  006E32  0100               	movlb	0	; () banked
  5467  006E34  B5F1               	btfsc	_localDioStatus& (0+255),2,b
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;lorawan.c: 2254: {
  5471                           ;lorawan.c: 2255: RADIO_DIO2();
  5472  006E36  ECE6  F035         	call	_RADIO_DIO2	;wreg free
  5473                           
  5474                           ;lorawan.c: 2256: }
  5475                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5476  006E3A  0100               	movlb	0	; () banked
  5477  006E3C  B7F1               	btfsc	_localDioStatus& (0+255),3,b
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;lorawan.c: 2258: {
  5481                           ;lorawan.c: 2259: RADIO_DIO3();
  5482  006E3E  EC31  F03B         	call	_RADIO_DIO3	;wreg free
  5483                           
  5484                           ;lorawan.c: 2260: }
  5485                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5486  006E42  0100               	movlb	0	; () banked
  5487  006E44  B9F1               	btfsc	_localDioStatus& (0+255),4,b
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;lorawan.c: 2262: {
  5491                           ;lorawan.c: 2263: RADIO_DIO4();
  5492  006E46  EC25  F03B         	call	_RADIO_DIO4	;wreg free
  5493                           
  5494                           ;lorawan.c: 2264: }
  5495                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5496  006E4A  0100               	movlb	0	; () banked
  5497  006E4C  BBF1               	btfsc	_localDioStatus& (0+255),5,b
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;lorawan.c: 2266: {
  5501                           ;lorawan.c: 2267: RADIO_DIO5();
  5502  006E4E  EC19  F03B         	call	_RADIO_DIO5	;wreg free
  5503  006E52  0012               	return		;funcret
  5504  006E54                     __end_of_LORAWAN_Mainloop:
  5505                           	opt stack 0
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           intcon	equ	0xFF2
  5511                           intcon2	equ	0xFF1
  5512                           intcon3	equ	0xFF0
  5513                           postinc0	equ	0xFEE
  5514                           wreg	equ	0xFE8
  5515                           postdec2	equ	0xFDD
  5516                           fsr2h	equ	0xFDA
  5517                           fsr2l	equ	0xFD9
  5518                           status	equ	0xFD8
  5519                           
  5520 ;; *************** function _SwTimersExecute *****************
  5521 ;; Defined at:
  5522 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  i               1  129[BANK0 ] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/1
  5533 ;;		On exit  : F/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;Total ram usage:        5 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:   17
  5543 ;; This function calls:
  5544 ;;		Absolute function
  5545 ;;		_AckRetransmissionCallback
  5546 ;;		_AutomaticReplyCallback
  5547 ;;		_DutyCycleCallback
  5548 ;;		_LORAWAN_LinkCheckCallback
  5549 ;;		_LORAWAN_ReceiveWindow1Callback
  5550 ;;		_LORAWAN_ReceiveWindow2Callback
  5551 ;;		_RADIO_RxFSKTimeout
  5552 ;;		_RADIO_WatchdogTimeout
  5553 ;;		_UnconfirmedTransmissionCallback
  5554 ;;		_UpdateJoinSuccessState
  5555 ;; This function is called by:
  5556 ;;		_LORAWAN_Mainloop
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text36
  5561  005854                     __ptext36:
  5562                           	opt stack 0
  5563  005854                     _SwTimersExecute:
  5564                           	opt stack 12
  5565                           
  5566                           ;sw_timer.c: 262: uint8_t i;
  5567                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5568                           
  5569                           ;incstack = 0
  5570  005854  9EF2               	bcf	intcon,7,c	;volatile
  5571                           
  5572                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5573  005856  0100               	movlb	0	; () banked
  5574  005858  6BE1               	clrf	SwTimersExecute@i& (0+255),b
  5575  00585A  D050               	goto	l16301
  5576  00585C                     l16287:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;sw_timer.c: 266: {
  5580                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5581  00585C  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5582  00585E  0D08               	mullw	8
  5583  005860  0E04               	movlw	low (_swTimers+4)
  5584  005862  24F3               	addwf	prodl,w,c
  5585  005864  6ED9               	movwf	fsr2l,c
  5586  005866  0E03               	movlw	high (_swTimers+4)
  5587  005868  20F4               	addwfc	prodh,w,c
  5588  00586A  6EDA               	movwf	fsr2h,c
  5589  00586C  04DE               	decf	postinc2,w,c
  5590  00586E  E144               	bnz	l16299
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;sw_timer.c: 270: {
  5594                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5595  005870  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5596  005872  0D08               	mullw	8
  5597  005874  0E00               	movlw	low _swTimers
  5598  005876  24F3               	addwf	prodl,w,c
  5599  005878  6ED9               	movwf	fsr2l,c
  5600  00587A  0E03               	movlw	high _swTimers
  5601  00587C  20F4               	addwfc	prodh,w,c
  5602  00587E  6EDA               	movwf	fsr2h,c
  5603  005880  50DE               	movf	postinc2,w,c
  5604  005882  10DE               	iorwf	postinc2,w,c
  5605  005884  10DE               	iorwf	postinc2,w,c
  5606  005886  10DE               	iorwf	postinc2,w,c
  5607  005888  E137               	bnz	l16299
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;sw_timer.c: 272: {
  5611                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5612  00588A  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5613  00588C  0D08               	mullw	8
  5614  00588E  0E04               	movlw	low (_swTimers+4)
  5615  005890  24F3               	addwf	prodl,w,c
  5616  005892  6ED9               	movwf	fsr2l,c
  5617  005894  0E03               	movlw	high (_swTimers+4)
  5618  005896  20F4               	addwfc	prodh,w,c
  5619  005898  6EDA               	movwf	fsr2h,c
  5620  00589A  6ADF               	clrf	indf2,c
  5621                           
  5622                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5623  00589C  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5624  00589E  0D08               	mullw	8
  5625  0058A0  0E06               	movlw	low (_swTimers+6)
  5626  0058A2  24F3               	addwf	prodl,w,c
  5627  0058A4  6ED9               	movwf	fsr2l,c
  5628  0058A6  0E03               	movlw	high (_swTimers+6)
  5629  0058A8  20F4               	addwfc	prodh,w,c
  5630  0058AA  6EDA               	movwf	fsr2h,c
  5631  0058AC  50DE               	movf	postinc2,w,c
  5632  0058AE  10DE               	iorwf	postinc2,w,c
  5633  0058B0  E023               	bz	l16299
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;sw_timer.c: 275: {
  5637                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5638  0058B2  8EF2               	bsf	intcon,7,c	;volatile
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5642  0058B4  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5643  0058B6  0D08               	mullw	8
  5644  0058B8  0E05               	movlw	low (_swTimers+5)
  5645  0058BA  24F3               	addwf	prodl,w,c
  5646  0058BC  6ED9               	movwf	fsr2l,c
  5647  0058BE  0E03               	movlw	high (_swTimers+5)
  5648  0058C0  20F4               	addwfc	prodh,w,c
  5649  0058C2  6EDA               	movwf	fsr2h,c
  5650  0058C4  50DF               	movf	indf2,w,c
  5651  0058C6  6EE6               	movwf	postinc1,c
  5652  0058C8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5653  0058CA  0D08               	mullw	8
  5654  0058CC  0E06               	movlw	low (_swTimers+6)
  5655  0058CE  24F3               	addwf	prodl,w,c
  5656  0058D0  6ED9               	movwf	fsr2l,c
  5657  0058D2  0E03               	movlw	high (_swTimers+6)
  5658  0058D4  20F4               	addwfc	prodh,w,c
  5659  0058D6  6EDA               	movwf	fsr2h,c
  5660  0058D8  CFDE F0DD          	movff	postinc2,??_SwTimersExecute
  5661  0058DC  CFDD F0DE          	movff	postdec2,??_SwTimersExecute+1
  5662  0058E0  D801               	call	u19438
  5663  0058E2  D009               	goto	l16297
  5664  0058E4                     u19438:
  5665  0058E4  0005               	push	
  5666  0058E6  6EFA               	movwf	pclath,c
  5667  0058E8  51DD               	movf	??_SwTimersExecute& (0+255),w,b
  5668  0058EA  6EFD               	movwf	tosl,c
  5669  0058EC  51DE               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5670  0058EE  6EFE               	movwf	tosh,c
  5671  0058F0  6AFF               	clrf	tosu,c
  5672  0058F2  50FA               	movf	pclath,w,c
  5673  0058F4  0012               	return		;indir
  5674  0058F6                     l16297:
  5675                           
  5676                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5677  0058F6  9EF2               	bcf	intcon,7,c	;volatile
  5678  0058F8                     l16299:
  5679  0058F8  0100               	movlb	0	; () banked
  5680  0058FA  2BE1               	incf	SwTimersExecute@i& (0+255),f,b
  5681  0058FC                     l16301:
  5682                           
  5683                           ; BSR set to: 0
  5684  0058FC  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5685  0058FE  5DE1               	subwf	SwTimersExecute@i& (0+255),w,b
  5686  005900  E3AD               	bnc	l16287
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;sw_timer.c: 279: }
  5690                           ;sw_timer.c: 280: }
  5691                           ;sw_timer.c: 281: }
  5692                           ;sw_timer.c: 282: }
  5693                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5694  005902  8EF2               	bsf	intcon,7,c	;volatile
  5695                           
  5696                           ; BSR set to: 0
  5697  005904  0012               	return		;funcret
  5698  005906                     __end_of_SwTimersExecute:
  5699                           	opt stack 0
  5700                           tosu	equ	0xFFF
  5701                           tosh	equ	0xFFE
  5702                           tosl	equ	0xFFD
  5703                           pclath	equ	0xFFA
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           intcon2	equ	0xFF1
  5712                           intcon3	equ	0xFF0
  5713                           postinc0	equ	0xFEE
  5714                           wreg	equ	0xFE8
  5715                           postinc1	equ	0xFE6
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _DutyCycleCallback *****************
  5724 ;; Defined at:
  5725 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  param           1  [STACK] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  minim           4  [STACK] unsigned long 
  5730 ;;  i               1  [STACK] unsigned char 
  5731 ;;  found           1  [STACK] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1  [STACK] void 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : F/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:   11
  5748 ;; This function calls:
  5749 ;;		_SwTimerSetTimeout
  5750 ;;		_SwTimerStart
  5751 ;;		___lldiv
  5752 ;; This function is called by:
  5753 ;;		_SetCallbackSoftwareTimers
  5754 ;;		_SwTimersExecute
  5755 ;; This function uses a reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text37
  5759  002102                     __ptext37:
  5760                           	opt stack 0
  5761  002102                     _DutyCycleCallback:
  5762                           	opt stack 0
  5763                           
  5764                           ; BSR set to: 0
  5765                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5766  002102  0E0A               	movlw	10
  5767  002104  26E1               	addwf	fsr1l,f,c
  5768  002106  0E00               	movlw	0
  5769  002108  22E2               	addwfc	fsr1h,f,c
  5770                           
  5771                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5772                           
  5773                           ;incstack = 0
  5774  00210A  684E               	setf	btemp+8,c
  5775  00210C  684F               	setf	btemp+9,c
  5776  00210E  6850               	setf	btemp+10,c
  5777  002110  6851               	setf	btemp+11,c
  5778                           
  5779                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5780  002112  0EFA               	movlw	-6
  5781  002114  C04E  FFE3         	movff	btemp+8,plusw1
  5782  002118  0EFB               	movlw	-5
  5783  00211A  C04F  FFE3         	movff	btemp+9,plusw1
  5784  00211E  0EFC               	movlw	-4
  5785  002120  C050  FFE3         	movff	btemp+10,plusw1
  5786  002124  0EFD               	movlw	-3
  5787  002126  C051  FFE3         	movff	btemp+11,plusw1
  5788                           
  5789                           ;lorawan_eu.c: 1224: bool found = 0;
  5790                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5791  00212A  0EFF               	movlw	-1
  5792  00212C  6AE3               	clrf	plusw1,c
  5793                           
  5794                           ;lorawan_eu.c: 1225: uint8_t i;
  5795                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5796                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5797  00212E  0EFE               	movlw	-2
  5798  002130  6AE3               	clrf	plusw1,c
  5799  002132                     l15117:
  5800                           
  5801                           ;lorawan_eu.c: 1228: {
  5802                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5803                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5804  002132  0EFE               	movlw	-2
  5805  002134  50E3               	movf	plusw1,w,c
  5806  002136  0D0E               	mullw	14
  5807  002138  0E04               	movlw	low (_Channels+4)
  5808  00213A  24F3               	addwf	prodl,w,c
  5809  00213C  6ED9               	movwf	fsr2l,c
  5810  00213E  0E04               	movlw	high (_Channels+4)
  5811  002140  20F4               	addwfc	prodh,w,c
  5812  002142  6EDA               	movwf	fsr2h,c
  5813  002144  04DE               	decf	postinc2,w,c
  5814  002146  E001 D0AA          	bnz	l15135
  5815                           
  5816                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5817  00214A  0EFE               	movlw	-2
  5818  00214C  50E3               	movf	plusw1,w,c
  5819  00214E  0D0E               	mullw	14
  5820  002150  0E08               	movlw	low (_Channels+8)
  5821  002152  24F3               	addwf	prodl,w,c
  5822  002154  6ED9               	movwf	fsr2l,c
  5823  002156  0E04               	movlw	high (_Channels+8)
  5824  002158  20F4               	addwfc	prodh,w,c
  5825  00215A  6EDA               	movwf	fsr2h,c
  5826  00215C  50DE               	movf	postinc2,w,c
  5827  00215E  10DE               	iorwf	postinc2,w,c
  5828  002160  10DE               	iorwf	postinc2,w,c
  5829  002162  10DE               	iorwf	postinc2,w,c
  5830  002164  E101 D09B          	bz	l15135
  5831                           
  5832                           ;lorawan_eu.c: 1231: {
  5833                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5834                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5835  002168  0EFE               	movlw	-2
  5836  00216A  50E3               	movf	plusw1,w,c
  5837  00216C  0D0E               	mullw	14
  5838  00216E  0E08               	movlw	low (_Channels+8)
  5839  002170  24F3               	addwf	prodl,w,c
  5840  002172  6ED9               	movwf	fsr2l,c
  5841  002174  0E04               	movlw	high (_Channels+8)
  5842  002176  20F4               	addwfc	prodh,w,c
  5843  002178  6EDA               	movwf	fsr2h,c
  5844  00217A  50DE               	movf	postinc2,w,c
  5845  00217C  0102               	movlb	2	; () banked
  5846  00217E  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5847  002180  50DE               	movf	postinc2,w,c
  5848  002182  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5849  002184  50DE               	movf	postinc2,w,c
  5850  002186  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5851  002188  50DE               	movf	postinc2,w,c
  5852  00218A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5853  00218C  E22F               	bc	l15125
  5854                           
  5855                           ; BSR set to: 2
  5856                           ;lorawan_eu.c: 1233: {
  5857                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5858                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5859  00218E  0EFE               	movlw	-2
  5860  002190  50E3               	movf	plusw1,w,c
  5861  002192  0D0E               	mullw	14
  5862  002194  0E08               	movlw	low (_Channels+8)
  5863  002196  24F3               	addwf	prodl,w,c
  5864  002198  6ED9               	movwf	fsr2l,c
  5865  00219A  0E04               	movlw	high (_Channels+8)
  5866  00219C  20F4               	addwfc	prodh,w,c
  5867  00219E  6EDA               	movwf	fsr2h,c
  5868  0021A0  CFDE F04E          	movff	postinc2,btemp+8
  5869  0021A4  CFDE F04F          	movff	postinc2,btemp+9
  5870  0021A8  CFDE F050          	movff	postinc2,btemp+10
  5871  0021AC  CFDE F051          	movff	postinc2,btemp+11
  5872  0021B0  51C8               	movf	(_loRa+200)& (0+255),w,b
  5873  0021B2  5C4E               	subwf	btemp+8,w,c
  5874  0021B4  6E4A               	movwf	btemp+4,c
  5875  0021B6  51C9               	movf	(_loRa+201)& (0+255),w,b
  5876  0021B8  584F               	subwfb	btemp+9,w,c
  5877  0021BA  6E4B               	movwf	btemp+5,c
  5878  0021BC  51CA               	movf	(_loRa+202)& (0+255),w,b
  5879  0021BE  5850               	subwfb	btemp+10,w,c
  5880  0021C0  6E4C               	movwf	btemp+6,c
  5881  0021C2  51CB               	movf	(_loRa+203)& (0+255),w,b
  5882  0021C4  5851               	subwfb	btemp+11,w,c
  5883  0021C6  6E4D               	movwf	btemp+7,c
  5884                           
  5885                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5886  0021C8  0EFE               	movlw	-2
  5887  0021CA  50E3               	movf	plusw1,w,c
  5888  0021CC  0D0E               	mullw	14
  5889  0021CE  0E08               	movlw	low (_Channels+8)
  5890  0021D0  24F3               	addwf	prodl,w,c
  5891  0021D2  6ED9               	movwf	fsr2l,c
  5892  0021D4  0E04               	movlw	high (_Channels+8)
  5893  0021D6  20F4               	addwfc	prodh,w,c
  5894  0021D8  6EDA               	movwf	fsr2h,c
  5895  0021DA  C04A  FFDE         	movff	btemp+4,postinc2
  5896  0021DE  C04B  FFDE         	movff	btemp+5,postinc2
  5897  0021E2  C04C  FFDE         	movff	btemp+6,postinc2
  5898  0021E6  C04D  FFDE         	movff	btemp+7,postinc2
  5899                           
  5900                           ;lorawan_eu.c: 1235: }
  5901  0021EA  D00D               	goto	l15127
  5902  0021EC                     l15125:
  5903                           
  5904                           ; BSR set to: 2
  5905                           ;lorawan_eu.c: 1236: else
  5906                           ;lorawan_eu.c: 1237: {
  5907                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5908                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5909  0021EC  0EFE               	movlw	-2
  5910  0021EE  50E3               	movf	plusw1,w,c
  5911  0021F0  0D0E               	mullw	14
  5912  0021F2  0E08               	movlw	low (_Channels+8)
  5913  0021F4  24F3               	addwf	prodl,w,c
  5914  0021F6  6ED9               	movwf	fsr2l,c
  5915  0021F8  0E04               	movlw	high (_Channels+8)
  5916  0021FA  20F4               	addwfc	prodh,w,c
  5917  0021FC  6EDA               	movwf	fsr2h,c
  5918  0021FE  6ADE               	clrf	postinc2,c
  5919  002200  6ADE               	clrf	postinc2,c
  5920  002202  6ADE               	clrf	postinc2,c
  5921  002204  6ADD               	clrf	postdec2,c
  5922  002206                     l15127:
  5923                           
  5924                           ; BSR set to: 2
  5925                           ;lorawan_eu.c: 1239: }
  5926                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5927                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5928  002206  0EFE               	movlw	-2
  5929  002208  50E3               	movf	plusw1,w,c
  5930  00220A  0D0E               	mullw	14
  5931  00220C  0E08               	movlw	low (_Channels+8)
  5932  00220E  24F3               	addwf	prodl,w,c
  5933  002210  6ED9               	movwf	fsr2l,c
  5934  002212  0E04               	movlw	high (_Channels+8)
  5935  002214  20F4               	addwfc	prodh,w,c
  5936  002216  6EDA               	movwf	fsr2h,c
  5937                           
  5938                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5939  002218  0EFA               	movlw	-6
  5940  00221A  CFE3 F047          	movff	plusw1,btemp+1
  5941  00221E  50DE               	movf	postinc2,w,c
  5942  002220  5C47               	subwf	btemp+1,w,c
  5943  002222  0EFB               	movlw	-5
  5944  002224  CFE3 F047          	movff	plusw1,btemp+1
  5945  002228  50DE               	movf	postinc2,w,c
  5946  00222A  5847               	subwfb	btemp+1,w,c
  5947  00222C  0EFC               	movlw	-4
  5948  00222E  CFE3 F047          	movff	plusw1,btemp+1
  5949  002232  50DE               	movf	postinc2,w,c
  5950  002234  5847               	subwfb	btemp+1,w,c
  5951  002236  0EFD               	movlw	-3
  5952  002238  CFE3 F047          	movff	plusw1,btemp+1
  5953  00223C  50DE               	movf	postinc2,w,c
  5954  00223E  5847               	subwfb	btemp+1,w,c
  5955  002240  E32E               	bnc	l15135
  5956                           
  5957                           ; BSR set to: 2
  5958                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5959  002242  0EFE               	movlw	-2
  5960  002244  50E3               	movf	plusw1,w,c
  5961  002246  0D0E               	mullw	14
  5962  002248  0E08               	movlw	low (_Channels+8)
  5963  00224A  24F3               	addwf	prodl,w,c
  5964  00224C  6ED9               	movwf	fsr2l,c
  5965  00224E  0E04               	movlw	high (_Channels+8)
  5966  002250  20F4               	addwfc	prodh,w,c
  5967  002252  6EDA               	movwf	fsr2h,c
  5968  002254  50DE               	movf	postinc2,w,c
  5969  002256  10DE               	iorwf	postinc2,w,c
  5970  002258  10DE               	iorwf	postinc2,w,c
  5971  00225A  10DE               	iorwf	postinc2,w,c
  5972  00225C  E020               	bz	l15135
  5973                           
  5974                           ; BSR set to: 2
  5975                           ;lorawan_eu.c: 1241: {
  5976                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5977                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5978  00225E  0EFE               	movlw	-2
  5979  002260  50E3               	movf	plusw1,w,c
  5980  002262  0D0E               	mullw	14
  5981  002264  0E08               	movlw	low (_Channels+8)
  5982  002266  24F3               	addwf	prodl,w,c
  5983  002268  6ED9               	movwf	fsr2l,c
  5984  00226A  0E04               	movlw	high (_Channels+8)
  5985  00226C  20F4               	addwfc	prodh,w,c
  5986  00226E  6EDA               	movwf	fsr2h,c
  5987  002270  CFDE F04E          	movff	postinc2,btemp+8
  5988  002274  CFDE F04F          	movff	postinc2,btemp+9
  5989  002278  CFDE F050          	movff	postinc2,btemp+10
  5990  00227C  CFDE F051          	movff	postinc2,btemp+11
  5991                           
  5992                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5993  002280  0EFA               	movlw	-6
  5994  002282  C04E  FFE3         	movff	btemp+8,plusw1
  5995  002286  0EFB               	movlw	-5
  5996  002288  C04F  FFE3         	movff	btemp+9,plusw1
  5997  00228C  0EFC               	movlw	-4
  5998  00228E  C050  FFE3         	movff	btemp+10,plusw1
  5999  002292  0EFD               	movlw	-3
  6000  002294  C051  FFE3         	movff	btemp+11,plusw1
  6001                           
  6002                           ; BSR set to: 2
  6003                           ;lorawan_eu.c: 1243: found = 1;
  6004                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6005  002298  0EFF               	movlw	-1
  6006  00229A  6AE3               	clrf	plusw1,c
  6007  00229C  2AE3               	incf	plusw1,f,c
  6008  00229E                     l15135:
  6009                           
  6010                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6011  00229E  0EFE               	movlw	-2
  6012  0022A0  2AE3               	incf	plusw1,f,c
  6013                           
  6014                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6015  0022A2  CFE3 F047          	movff	plusw1,btemp+1
  6016  0022A6  0E0F               	movlw	15
  6017  0022A8  6447               	cpfsgt	btemp+1,c
  6018  0022AA  D743               	goto	l15117
  6019                           
  6020                           ;lorawan_eu.c: 1244: }
  6021                           ;lorawan_eu.c: 1245: }
  6022                           ;lorawan_eu.c: 1246: }
  6023                           ;lorawan_eu.c: 1247: if ( found == 1 )
  6024                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6025  0022AC  0EFF               	movlw	-1
  6026  0022AE  04E3               	decf	plusw1,w,c
  6027  0022B0  E001 D096          	bnz	l1297
  6028                           
  6029                           ;lorawan_eu.c: 1248: {
  6030                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  6031                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6032  0022B4  50E1               	movf	fsr1l,w,c
  6033  0022B6  0FFA               	addlw	-6
  6034  0022B8  6ED9               	movwf	fsr2l,c
  6035  0022BA  50E2               	movf	fsr1h,w,c
  6036  0022BC  6EDA               	movwf	fsr2h,c
  6037  0022BE  0EFF               	movlw	255
  6038  0022C0  22DA               	addwfc	fsr2h,f,c
  6039  0022C2  CFDE F2C8          	movff	postinc2,_loRa+200
  6040  0022C6  CFDE F2C9          	movff	postinc2,_loRa+201
  6041  0022CA  CFDE F2CA          	movff	postinc2,_loRa+202
  6042  0022CE  CFDE F2CB          	movff	postinc2,_loRa+203
  6043                           
  6044                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6045                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6046  0022D2  0EFD               	movlw	-3
  6047  0022D4  50E3               	movf	plusw1,w,c
  6048  0022D6  E10D               	bnz	u17630
  6049  0022D8  0EFA               	movlw	-6
  6050  0022DA  28E3               	incf	plusw1,w,c
  6051  0022DC  0EFB               	movlw	-5
  6052  0022DE  CFE3 F047          	movff	plusw1,btemp+1
  6053  0022E2  0EFF               	movlw	255
  6054  0022E4  5A47               	subwfb	btemp+1,f,c
  6055  0022E6  0EFC               	movlw	-4
  6056  0022E8  CFE3 F047          	movff	plusw1,btemp+1
  6057  0022EC  0E0F               	movlw	15
  6058  0022EE  5A47               	subwfb	btemp+1,f,c
  6059  0022F0  E328               	bnc	l15147
  6060  0022F2                     u17630:
  6061                           
  6062                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6063  0022F2  50E1               	movf	fsr1l,w,c
  6064  0022F4  0FFA               	addlw	-6
  6065  0022F6  6ED9               	movwf	fsr2l,c
  6066  0022F8  50E2               	movf	fsr1h,w,c
  6067  0022FA  6EDA               	movwf	fsr2h,c
  6068  0022FC  0EFF               	movlw	255
  6069  0022FE  22DA               	addwfc	fsr2h,f,c
  6070  002300  CFDE F064          	movff	postinc2,___lldiv@dividend
  6071  002304  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6072  002308  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6073  00230C  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6074  002310  0E7D               	movlw	125
  6075  002312  0100               	movlb	0	; () banked
  6076  002314  6F68               	movwf	___lldiv@divisor& (0+255),b
  6077  002316  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6078  002318  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6079  00231A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6080  00231C  EC1B  F030         	call	___lldiv	;wreg free
  6081  002320  C064  F04E         	movff	?___lldiv,btemp+8
  6082  002324  C065  F04F         	movff	?___lldiv+1,btemp+9
  6083  002328  C066  F050         	movff	?___lldiv+2,btemp+10
  6084  00232C  C067  F051         	movff	?___lldiv+3,btemp+11
  6085  002330  0E0C               	movlw	12
  6086  002332                     u17645:
  6087  002332  90D8               	bcf	status,0,c
  6088  002334  364E               	rlcf	btemp+8,f,c
  6089  002336  364F               	rlcf	btemp+9,f,c
  6090  002338  3650               	rlcf	btemp+10,f,c
  6091  00233A  3651               	rlcf	btemp+11,f,c
  6092  00233C  2EE8               	decfsz	wreg,f,c
  6093  00233E  D7F9               	goto	u17645
  6094  002340  D02C               	goto	L1
  6095  002342                     l15147:
  6096                           
  6097                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6098  002342  0EFA               	movlw	-6
  6099  002344  CFE3 F04E          	movff	plusw1,btemp+8
  6100  002348  0EFB               	movlw	-5
  6101  00234A  CFE3 F04F          	movff	plusw1,btemp+9
  6102  00234E  0EFC               	movlw	-4
  6103  002350  CFE3 F050          	movff	plusw1,btemp+10
  6104  002354  0EFD               	movlw	-3
  6105  002356  CFE3 F051          	movff	plusw1,btemp+11
  6106  00235A  0E0C               	movlw	12
  6107  00235C                     u17655:
  6108  00235C  90D8               	bcf	status,0,c
  6109  00235E  364E               	rlcf	btemp+8,f,c
  6110  002360  364F               	rlcf	btemp+9,f,c
  6111  002362  3650               	rlcf	btemp+10,f,c
  6112  002364  3651               	rlcf	btemp+11,f,c
  6113  002366  2EE8               	decfsz	wreg,f,c
  6114  002368  D7F9               	goto	u17655
  6115  00236A  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6116  00236E  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6117  002372  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6118  002376  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6119  00237A  0E7D               	movlw	125
  6120  00237C  0100               	movlb	0	; () banked
  6121  00237E  6F68               	movwf	___lldiv@divisor& (0+255),b
  6122  002380  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6123  002382  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6124  002384  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6125  002386  EC1B  F030         	call	___lldiv	;wreg free
  6126  00238A  C064  F04E         	movff	?___lldiv,btemp+8
  6127  00238E  C065  F04F         	movff	?___lldiv+1,btemp+9
  6128  002392  C066  F050         	movff	?___lldiv+2,btemp+10
  6129  002396  C067  F051         	movff	?___lldiv+3,btemp+11
  6130  00239A                     L1:
  6131                           
  6132                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6133  00239A  0EF6               	movlw	-10
  6134  00239C  C04E  FFE3         	movff	btemp+8,plusw1
  6135  0023A0  0EF7               	movlw	-9
  6136  0023A2  C04F  FFE3         	movff	btemp+9,plusw1
  6137  0023A6  0EF8               	movlw	-8
  6138  0023A8  C050  FFE3         	movff	btemp+10,plusw1
  6139  0023AC  0EF9               	movlw	-7
  6140  0023AE  C051  FFE3         	movff	btemp+11,plusw1
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6144  0023B2  50E1               	movf	fsr1l,w,c
  6145  0023B4  0FF6               	addlw	-10
  6146  0023B6  6ED9               	movwf	fsr2l,c
  6147  0023B8  50E2               	movf	fsr1h,w,c
  6148  0023BA  6EDA               	movwf	fsr2h,c
  6149  0023BC  0EFF               	movlw	255
  6150  0023BE  22DA               	addwfc	fsr2h,f,c
  6151  0023C0  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6152  0023C4  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6153  0023C8  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6154  0023CC  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6155  0023D0  0102               	movlb	2	; () banked
  6156  0023D2  51E9               	movf	(_loRa+233)& (0+255),w,b
  6157  0023D4  EC70  F036         	call	_SwTimerSetTimeout
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6161  0023D8  0102               	movlb	2	; () banked
  6162  0023DA  51E9               	movf	(_loRa+233)& (0+255),w,b
  6163  0023DC  EC59  F02E         	call	_SwTimerStart
  6164  0023E0                     l1297:
  6165                           
  6166                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6167  0023E0  0EF5               	movlw	245
  6168  0023E2  26E1               	addwf	fsr1l,f,c
  6169  0023E4  0EFF               	movlw	255
  6170  0023E6  22E2               	addwfc	fsr1h,f,c
  6171  0023E8  0CFF               	retlw	255	;funcret
  6172  0023EA                     __end_of_DutyCycleCallback:
  6173                           	opt stack 0
  6174                           tosu	equ	0xFFF
  6175                           tosh	equ	0xFFE
  6176                           tosl	equ	0xFFD
  6177                           pclath	equ	0xFFA
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           intcon2	equ	0xFF1
  6186                           intcon3	equ	0xFF0
  6187                           postinc0	equ	0xFEE
  6188                           wreg	equ	0xFE8
  6189                           postinc1	equ	0xFE6
  6190                           plusw1	equ	0xFE3
  6191                           fsr1h	equ	0xFE2
  6192                           fsr1l	equ	0xFE1
  6193                           indf2	equ	0xFDF
  6194                           postinc2	equ	0xFDE
  6195                           postdec2	equ	0xFDD
  6196                           fsr2h	equ	0xFDA
  6197                           fsr2l	equ	0xFD9
  6198                           status	equ	0xFD8
  6199                           
  6200 ;; *************** function _UpdateJoinSuccessState *****************
  6201 ;; Defined at:
  6202 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  param           1  [STACK] unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1  [STACK] void 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : F/0
  6213 ;;		On exit  : F/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;Total ram usage:        0 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:   11
  6223 ;; This function calls:
  6224 ;;		_RxJoinResponse
  6225 ;;		_SwTimerSetTimeout
  6226 ;;		_SwTimerStart
  6227 ;;		___lldiv
  6228 ;; This function is called by:
  6229 ;;		_SetCallbackSoftwareTimers
  6230 ;;		_LORAWAN_RxDone
  6231 ;;		_SwTimersExecute
  6232 ;; This function uses a reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text38
  6236  004506                     __ptext38:
  6237                           	opt stack 0
  6238  004506                     _UpdateJoinSuccessState:
  6239                           	opt stack 0
  6240                           
  6241                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6242  004506  52E6               	movf	postinc1,f,c
  6243  004508  52E6               	movf	postinc1,f,c
  6244  00450A  52E6               	movf	postinc1,f,c
  6245  00450C  52E6               	movf	postinc1,f,c
  6246                           
  6247                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6248                           
  6249                           ;incstack = 0
  6250  00450E  0102               	movlb	2	; () banked
  6251  004510  9500               	bcf	_loRa& (0+255),2,b
  6252                           
  6253                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6254  004512  8902               	bsf	(_loRa+2)& (0+255),4,b
  6255                           
  6256                           ; BSR set to: 2
  6257                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6258  004514  0EF0               	movlw	-16
  6259  004516  1702               	andwf	(_loRa+2)& (0+255),f,b
  6260                           
  6261                           ; BSR set to: 2
  6262                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6263  004518  6BD0               	clrf	(_loRa+208)& (0+255),b
  6264  00451A  6BD1               	clrf	(_loRa+209)& (0+255),b
  6265                           
  6266                           ; BSR set to: 2
  6267                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6268  00451C  6BEE               	clrf	(_loRa+238)& (0+255),b
  6269                           
  6270                           ; BSR set to: 2
  6271                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6272  00451E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6273  004520  D074               	goto	l13985
  6274                           
  6275                           ; BSR set to: 2
  6276                           ;lorawan.c: 1052: {
  6277                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6278  004522  51CF               	movf	(_loRa+207)& (0+255),w,b
  6279  004524  E106               	bnz	u15580
  6280  004526  29CC               	incf	(_loRa+204)& (0+255),w,b
  6281  004528  0EFF               	movlw	255
  6282  00452A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6283  00452C  0E0F               	movlw	15
  6284  00452E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6285  004530  E321               	bnc	l13979
  6286  004532                     u15580:
  6287                           
  6288                           ; BSR set to: 2
  6289  004532  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6290  004536  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6291  00453A  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6292  00453E  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6293  004542  0E7D               	movlw	125
  6294  004544  0100               	movlb	0	; () banked
  6295  004546  6F68               	movwf	___lldiv@divisor& (0+255),b
  6296  004548  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6297  00454A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6298  00454C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6299  00454E  EC1B  F030         	call	___lldiv	;wreg free
  6300  004552  C064  F04E         	movff	?___lldiv,btemp+8
  6301  004556  C065  F04F         	movff	?___lldiv+1,btemp+9
  6302  00455A  C066  F050         	movff	?___lldiv+2,btemp+10
  6303  00455E  C067  F051         	movff	?___lldiv+3,btemp+11
  6304  004562  0E0C               	movlw	12
  6305  004564                     u15595:
  6306  004564  90D8               	bcf	status,0,c
  6307  004566  364E               	rlcf	btemp+8,f,c
  6308  004568  364F               	rlcf	btemp+9,f,c
  6309  00456A  3650               	rlcf	btemp+10,f,c
  6310  00456C  3651               	rlcf	btemp+11,f,c
  6311  00456E  2EE8               	decfsz	wreg,f,c
  6312  004570  D7F9               	goto	u15595
  6313  004572  D028               	goto	L2
  6314  004574                     l13979:
  6315                           
  6316                           ; BSR set to: 2
  6317  004574  C2CC  F04E         	movff	_loRa+204,btemp+8
  6318  004578  C2CD  F04F         	movff	_loRa+205,btemp+9
  6319  00457C  C2CE  F050         	movff	_loRa+206,btemp+10
  6320  004580  C2CF  F051         	movff	_loRa+207,btemp+11
  6321  004584  0E0C               	movlw	12
  6322  004586                     u15605:
  6323  004586  90D8               	bcf	status,0,c
  6324  004588  364E               	rlcf	btemp+8,f,c
  6325  00458A  364F               	rlcf	btemp+9,f,c
  6326  00458C  3650               	rlcf	btemp+10,f,c
  6327  00458E  3651               	rlcf	btemp+11,f,c
  6328  004590  2EE8               	decfsz	wreg,f,c
  6329  004592  D7F9               	goto	u15605
  6330  004594  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6331  004598  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6332  00459C  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6333  0045A0  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6334  0045A4  0E7D               	movlw	125
  6335  0045A6  0100               	movlb	0	; () banked
  6336  0045A8  6F68               	movwf	___lldiv@divisor& (0+255),b
  6337  0045AA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6338  0045AC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6339  0045AE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6340  0045B0  EC1B  F030         	call	___lldiv	;wreg free
  6341  0045B4  C064  F04E         	movff	?___lldiv,btemp+8
  6342  0045B8  C065  F04F         	movff	?___lldiv+1,btemp+9
  6343  0045BC  C066  F050         	movff	?___lldiv+2,btemp+10
  6344  0045C0  C067  F051         	movff	?___lldiv+3,btemp+11
  6345  0045C4                     L2:
  6346                           
  6347                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6348  0045C4  0EFC               	movlw	-4
  6349  0045C6  C04E  FFE3         	movff	btemp+8,plusw1
  6350  0045CA  0EFD               	movlw	-3
  6351  0045CC  C04F  FFE3         	movff	btemp+9,plusw1
  6352  0045D0  0EFE               	movlw	-2
  6353  0045D2  C050  FFE3         	movff	btemp+10,plusw1
  6354  0045D6  0EFF               	movlw	-1
  6355  0045D8  C051  FFE3         	movff	btemp+11,plusw1
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6359  0045DC  50E1               	movf	fsr1l,w,c
  6360  0045DE  0FFC               	addlw	-4
  6361  0045E0  6ED9               	movwf	fsr2l,c
  6362  0045E2  50E2               	movf	fsr1h,w,c
  6363  0045E4  6EDA               	movwf	fsr2h,c
  6364  0045E6  0EFF               	movlw	255
  6365  0045E8  22DA               	addwfc	fsr2h,f,c
  6366  0045EA  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6367  0045EE  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6368  0045F2  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6369  0045F6  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6370  0045FA  0102               	movlb	2	; () banked
  6371  0045FC  51E7               	movf	(_loRa+231)& (0+255),w,b
  6372  0045FE  EC70  F036         	call	_SwTimerSetTimeout
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6376  004602  0102               	movlb	2	; () banked
  6377  004604  51E7               	movf	(_loRa+231)& (0+255),w,b
  6378  004606  EC59  F02E         	call	_SwTimerStart
  6379  00460A                     l13985:
  6380                           
  6381                           ;lorawan.c: 1055: }
  6382                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6383  00460A  0100               	movlb	0	; () banked
  6384  00460C  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6385  00460E  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
  6386  004610  E00B               	bz	l2090
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;lorawan.c: 1058: {
  6390                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6391  004612  D801               	call	u15628
  6392  004614  D009               	goto	l2090
  6393  004616                     u15628:
  6394  004616  0005               	push	
  6395  004618  6EFA               	movwf	pclath,c
  6396  00461A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6397  00461C  6EFD               	movwf	tosl,c
  6398  00461E  51EB               	movf	(_rxPayload+3)& (0+255),w,b
  6399  004620  6EFE               	movwf	tosh,c
  6400  004622  6AFF               	clrf	tosu,c
  6401  004624  50FA               	movf	pclath,w,c
  6402  004626  0C01               	retlw	1	;indir
  6403  004628                     l2090:
  6404                           
  6405                           ; BSR set to: 0
  6406                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6407  004628  0EFB               	movlw	251
  6408  00462A  26E1               	addwf	fsr1l,f,c
  6409  00462C  0EFF               	movlw	255
  6410  00462E  22E2               	addwfc	fsr1h,f,c
  6411  004630  0CFF               	retlw	255	;funcret
  6412  004632                     __end_of_UpdateJoinSuccessState:
  6413                           	opt stack 0
  6414                           tosu	equ	0xFFF
  6415                           tosh	equ	0xFFE
  6416                           tosl	equ	0xFFD
  6417                           pclath	equ	0xFFA
  6418                           tblptru	equ	0xFF8
  6419                           tblptrh	equ	0xFF7
  6420                           tblptrl	equ	0xFF6
  6421                           tablat	equ	0xFF5
  6422                           prodh	equ	0xFF4
  6423                           prodl	equ	0xFF3
  6424                           intcon	equ	0xFF2
  6425                           intcon2	equ	0xFF1
  6426                           intcon3	equ	0xFF0
  6427                           postinc0	equ	0xFEE
  6428                           wreg	equ	0xFE8
  6429                           postinc1	equ	0xFE6
  6430                           plusw1	equ	0xFE3
  6431                           fsr1h	equ	0xFE2
  6432                           fsr1l	equ	0xFE1
  6433                           indf2	equ	0xFDF
  6434                           postinc2	equ	0xFDE
  6435                           postdec2	equ	0xFDD
  6436                           fsr2h	equ	0xFDA
  6437                           fsr2l	equ	0xFD9
  6438                           status	equ	0xFD8
  6439                           
  6440 ;; *************** function _AutomaticReplyCallback *****************
  6441 ;; Defined at:
  6442 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  param           1  [STACK] unsigned char 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1  [STACK] void 
  6449 ;; Registers used:
  6450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : F/0
  6453 ;;		On exit  : F/2
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;Total ram usage:        0 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:   14
  6463 ;; This function calls:
  6464 ;;		_LORAWAN_Send
  6465 ;; This function is called by:
  6466 ;;		_SetCallbackSoftwareTimers
  6467 ;;		_SwTimersExecute
  6468 ;; This function uses a reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text39
  6472  00743C                     __ptext39:
  6473                           	opt stack 0
  6474  00743C                     _AutomaticReplyCallback:
  6475                           	opt stack 14
  6476                           
  6477                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6478                           
  6479                           ; BSR set to: 0
  6480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6481                           ;incstack = 0
  6482  00743C  0EF0               	movlw	-16
  6483  00743E  0102               	movlb	2	; () banked
  6484  007440  1702               	andwf	(_loRa+2)& (0+255),f,b
  6485                           
  6486                           ; BSR set to: 2
  6487                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6488  007442  0E00               	movlw	0
  6489  007444  0100               	movlb	0	; () banked
  6490  007446  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  6491  007448  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  6492  00744A  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6493  00744C  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6494  00744E  EC5F  F02A         	call	_LORAWAN_Send
  6495                           
  6496                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6497  007452  0102               	movlb	2	; () banked
  6498  007454  9700               	bcf	_loRa& (0+255),3,b
  6499                           
  6500                           ; BSR set to: 2
  6501                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6502  007456  52E5               	movf	postdec1,f,c
  6503  007458  0012               	return		;funcret
  6504  00745A                     __end_of_AutomaticReplyCallback:
  6505                           	opt stack 0
  6506                           tosu	equ	0xFFF
  6507                           tosh	equ	0xFFE
  6508                           tosl	equ	0xFFD
  6509                           pclath	equ	0xFFA
  6510                           tblptru	equ	0xFF8
  6511                           tblptrh	equ	0xFF7
  6512                           tblptrl	equ	0xFF6
  6513                           tablat	equ	0xFF5
  6514                           prodh	equ	0xFF4
  6515                           prodl	equ	0xFF3
  6516                           intcon	equ	0xFF2
  6517                           intcon2	equ	0xFF1
  6518                           intcon3	equ	0xFF0
  6519                           postinc0	equ	0xFEE
  6520                           wreg	equ	0xFE8
  6521                           postinc1	equ	0xFE6
  6522                           postdec1	equ	0xFE5
  6523                           plusw1	equ	0xFE3
  6524                           fsr1h	equ	0xFE2
  6525                           fsr1l	equ	0xFE1
  6526                           indf2	equ	0xFDF
  6527                           postinc2	equ	0xFDE
  6528                           postdec2	equ	0xFDD
  6529                           fsr2h	equ	0xFDA
  6530                           fsr2l	equ	0xFD9
  6531                           status	equ	0xFD8
  6532                           
  6533 ;; *************** function _AckRetransmissionCallback *****************
  6534 ;; Defined at:
  6535 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  param           1  [STACK] unsigned char 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  maximumPacke    1  [STACK] unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1  [STACK] void 
  6542 ;; Registers used:
  6543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : F/0
  6546 ;;		On exit  : D/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:   13
  6556 ;; This function calls:
  6557 ;;		_FindSmallestDataRate
  6558 ;;		_LORAWAN_GetMaxPayloadSize
  6559 ;;		_RADIO_Transmit
  6560 ;;		_ResetParametersForConfirmedTransmission
  6561 ;;		_RxDataDone
  6562 ;;		_SelectChannelForTransmission
  6563 ;;		_UpdateRetransmissionAckTimeoutState
  6564 ;; This function is called by:
  6565 ;;		_SetCallbackSoftwareTimers
  6566 ;;		_SwTimersExecute
  6567 ;; This function uses a reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text40
  6571  004A5C                     __ptext40:
  6572                           	opt stack 0
  6573  004A5C                     _AckRetransmissionCallback:
  6574                           	opt stack 0
  6575                           
  6576                           ; BSR set to: 2
  6577                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6578  004A5C  52E6               	movf	postinc1,f,c
  6579                           
  6580                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6581                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6582                           
  6583                           ;incstack = 0
  6584  004A5E  0102               	movlb	2	; () banked
  6585  004A60  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6586  004A62  D070               	goto	l15259
  6587                           
  6588                           ; BSR set to: 2
  6589                           ;lorawan.c: 939: {
  6590                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6591  004A64  51D9               	movf	(_loRa+217)& (0+255),w,b
  6592  004A66  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6593  004A68  E352               	bnc	l15249
  6594                           
  6595                           ; BSR set to: 2
  6596                           ;lorawan.c: 941: {
  6597                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6598  004A6A  EC52  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6599  004A6E  6E51               	movwf	btemp+11,c
  6600  004A70  0E0D               	movlw	13
  6601  004A72  2651               	addwf	btemp+11,f,c
  6602                           
  6603                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6604  004A74  0EFF               	movlw	-1
  6605  004A76  C051  FFE3         	movff	btemp+11,plusw1
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6609                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6610  004A7A  50E3               	movf	plusw1,w,c
  6611  004A7C  6E47               	movwf	btemp+1,c
  6612  004A7E  6A48               	clrf	btemp+2,c
  6613  004A80  0102               	movlb	2	; () banked
  6614  004A82  51D4               	movf	(_loRa+212)& (0+255),w,b
  6615  004A84  5C47               	subwf	btemp+1,w,c
  6616  004A86  51D5               	movf	(_loRa+213)& (0+255),w,b
  6617  004A88  5848               	subwfb	btemp+2,w,c
  6618  004A8A  E333               	bnc	l15243
  6619                           
  6620                           ; BSR set to: 2
  6621                           ;lorawan.c: 946: {
  6622                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6623  004A8C  0E01               	movlw	1
  6624  004A8E  EC27  F033         	call	_SelectChannelForTransmission
  6625  004A92  0900               	iorlw	0
  6626  004A94  E12B               	bnz	l15239
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;lorawan.c: 948: {
  6630                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6631  004A96  0EF0               	movlw	low (_macBuffer+16)
  6632  004A98  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6633  004A9A  0E04               	movlw	high (_macBuffer+16)
  6634  004A9C  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6635  004A9E  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6636  004AA2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
  6637  004AA6  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  6638  004AAA  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  6639  004AAE  5047               	movf	btemp+1,w,c
  6640  004AB0  1048               	iorwf	btemp+2,w,c
  6641  004AB2  E11C               	bnz	l15239
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;lorawan.c: 951: {
  6645                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6646  004AB4  0102               	movlb	2	; () banked
  6647  004AB6  5102               	movf	(_loRa+2)& (0+255),w,b
  6648  004AB8  0BF0               	andlw	-16
  6649  004ABA  0901               	iorlw	1
  6650  004ABC  6F02               	movwf	(_loRa+2)& (0+255),b
  6651                           
  6652                           ; BSR set to: 2
  6653                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6654  004ABE  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6655                           
  6656                           ; BSR set to: 2
  6657                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6658  004AC0  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6659  004AC2  D042               	goto	l2063
  6660                           
  6661                           ; BSR set to: 2
  6662  004AC4  51DF               	movf	(_loRa+223)& (0+255),w,b
  6663  004AC6  E040               	bz	l2063
  6664                           
  6665                           ; BSR set to: 2
  6666  004AC8  51D9               	movf	(_loRa+217)& (0+255),w,b
  6667  004ACA  6E47               	movwf	btemp+1,c
  6668  004ACC  6A48               	clrf	btemp+2,c
  6669  004ACE  51D7               	movf	(_loRa+215)& (0+255),w,b
  6670  004AD0  6E50               	movwf	btemp+10,c
  6671  004AD2  6A51               	clrf	btemp+11,c
  6672  004AD4  2A50               	incf	btemp+10,f,c
  6673  004AD6  0E00               	movlw	0
  6674  004AD8  2251               	addwfc	btemp+11,f,c
  6675  004ADA  5047               	movf	btemp+1,w,c
  6676  004ADC  1850               	xorwf	btemp+10,w,c
  6677  004ADE  E103               	bnz	u17860
  6678  004AE0  5048               	movf	btemp+2,w,c
  6679  004AE2  1851               	xorwf	btemp+11,w,c
  6680  004AE4  E031               	bz	l2063
  6681  004AE6                     u17860:
  6682                           
  6683                           ; BSR set to: 2
  6684                           ;lorawan.c: 957: {
  6685                           ;lorawan.c: 958: FindSmallestDataRate();
  6686  004AE6  ECDC  F02C         	call	_FindSmallestDataRate	;wreg free
  6687  004AEA  D02E               	goto	l2063
  6688  004AEC                     l15239:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;lorawan.c: 961: else
  6692                           ;lorawan.c: 962: {
  6693                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6694  004AEC  ECC7  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6695  004AF0  D02B               	goto	l2063
  6696  004AF2                     l15243:
  6697                           
  6698                           ; BSR set to: 2
  6699                           ;lorawan.c: 973: else
  6700                           ;lorawan.c: 974: {
  6701                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6702  004AF2  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6703                           
  6704                           ; BSR set to: 2
  6705                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6706  004AF6  0100               	movlb	0	; () banked
  6707  004AF8  51E8               	movf	_rxPayload& (0+255),w,b
  6708  004AFA  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6709  004AFC  E025               	bz	l2063
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;lorawan.c: 977: {
  6713                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6714  004AFE  6B64               	clrf	RxDataDone@pData& (0+255),b
  6715  004B00  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  6716  004B02  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  6717  004B04  0E04               	movlw	4
  6718  004B06  6F67               	movwf	RxDataDone@status& (0+255),b
  6719  004B08  D801               	call	u17888
  6720  004B0A  D01E               	goto	l2063
  6721  004B0C                     u17888:
  6722  004B0C  D012               	goto	u17928
  6723  004B0E                     l15249:
  6724                           
  6725                           ; BSR set to: 2
  6726                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6727  004B0E  51D9               	movf	(_loRa+217)& (0+255),w,b
  6728  004B10  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6729  004B12  E21A               	bc	l2063
  6730                           
  6731                           ; BSR set to: 2
  6732  004B14  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6733  004B16  D018               	goto	l2063
  6734                           
  6735                           ; BSR set to: 2
  6736                           ;lorawan.c: 983: {
  6737                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6738  004B18  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6739                           
  6740                           ; BSR set to: 2
  6741                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6742  004B1C  0100               	movlb	0	; () banked
  6743  004B1E  51E8               	movf	_rxPayload& (0+255),w,b
  6744  004B20  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6745  004B22  E012               	bz	l2063
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;lorawan.c: 986: {
  6749                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6750  004B24  0E00               	movlw	0
  6751  004B26  6B64               	clrf	RxDataDone@pData& (0+255),b
  6752  004B28  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  6753  004B2A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  6754  004B2C  6B67               	clrf	RxDataDone@status& (0+255),b
  6755  004B2E  D801               	call	u17928
  6756  004B30  D00B               	goto	l2063
  6757  004B32                     u17928:
  6758  004B32  0005               	push	
  6759  004B34  6EFA               	movwf	pclath,c
  6760  004B36  51E8               	movf	_rxPayload& (0+255),w,b
  6761  004B38  6EFD               	movwf	tosl,c
  6762  004B3A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  6763  004B3C  6EFE               	movwf	tosh,c
  6764  004B3E  6AFF               	clrf	tosu,c
  6765  004B40  50FA               	movf	pclath,w,c
  6766  004B42  0012               	return		;indir
  6767  004B44                     l15259:
  6768                           
  6769                           ; BSR set to: 2
  6770                           ;lorawan.c: 991: else
  6771                           ;lorawan.c: 992: {
  6772                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6773  004B44  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6774  004B48                     l2063:
  6775                           
  6776                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6777  004B48  52E5               	movf	postdec1,f,c
  6778  004B4A  52E5               	movf	postdec1,f,c
  6779  004B4C  0012               	return		;funcret
  6780  004B4E                     __end_of_AckRetransmissionCallback:
  6781                           	opt stack 0
  6782                           tosu	equ	0xFFF
  6783                           tosh	equ	0xFFE
  6784                           tosl	equ	0xFFD
  6785                           pclath	equ	0xFFA
  6786                           tblptru	equ	0xFF8
  6787                           tblptrh	equ	0xFF7
  6788                           tblptrl	equ	0xFF6
  6789                           tablat	equ	0xFF5
  6790                           prodh	equ	0xFF4
  6791                           prodl	equ	0xFF3
  6792                           intcon	equ	0xFF2
  6793                           intcon2	equ	0xFF1
  6794                           intcon3	equ	0xFF0
  6795                           postinc0	equ	0xFEE
  6796                           wreg	equ	0xFE8
  6797                           postinc1	equ	0xFE6
  6798                           postdec1	equ	0xFE5
  6799                           plusw1	equ	0xFE3
  6800                           fsr1h	equ	0xFE2
  6801                           fsr1l	equ	0xFE1
  6802                           indf2	equ	0xFDF
  6803                           postinc2	equ	0xFDE
  6804                           postdec2	equ	0xFDD
  6805                           fsr2h	equ	0xFDA
  6806                           fsr2l	equ	0xFD9
  6807                           status	equ	0xFD8
  6808                           
  6809 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6810 ;; Defined at:
  6811 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  param           1  [STACK] unsigned char 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  iCtr            1  [STACK] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1  [STACK] void 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6820 ;; Tracked objects:
  6821 ;;		On entry : F/0
  6822 ;;		On exit  : D/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;Total ram usage:        0 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:   11
  6832 ;; This function calls:
  6833 ;;		_SwTimerSetTimeout
  6834 ;;		_SwTimerStart
  6835 ;;		___lldiv
  6836 ;; This function is called by:
  6837 ;;		_SetCallbackSoftwareTimers
  6838 ;;		_SwTimersExecute
  6839 ;; This function uses a reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text41
  6843  003FDE                     __ptext41:
  6844                           	opt stack 0
  6845  003FDE                     _LORAWAN_LinkCheckCallback:
  6846                           	opt stack 0
  6847                           
  6848                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6849  003FDE  0E05               	movlw	5
  6850  003FE0  26E1               	addwf	fsr1l,f,c
  6851  003FE2  0E00               	movlw	0
  6852  003FE4  22E2               	addwfc	fsr1h,f,c
  6853                           
  6854                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6855                           
  6856                           ;incstack = 0
  6857  003FE6  0102               	movlb	2	; () banked
  6858  003FE8  A103               	btfss	(_loRa+3)& (0+255),0,b
  6859                           
  6860                           ; BSR set to: 2
  6861  003FEA  A503               	btfss	(_loRa+3)& (0+255),2,b
  6862  003FEC  D029               	goto	l15203
  6863                           
  6864                           ; BSR set to: 2
  6865                           ;lorawan.c: 886: {
  6866                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6867                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6868  003FEE  0EFF               	movlw	-1
  6869  003FF0  6AE3               	clrf	plusw1,c
  6870  003FF2  D00E               	goto	l15193
  6871  003FF4                     l15187:
  6872                           
  6873                           ; BSR set to: 2
  6874                           ;lorawan.c: 889: {
  6875                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6876                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6877  003FF4  0EFF               	movlw	-1
  6878  003FF6  50E3               	movf	plusw1,w,c
  6879  003FF8  0D02               	mullw	2
  6880  003FFA  0EA8               	movlw	low (_loRa+168)
  6881  003FFC  24F3               	addwf	prodl,w,c
  6882  003FFE  6ED9               	movwf	fsr2l,c
  6883  004000  0E02               	movlw	high (_loRa+168)
  6884  004002  20F4               	addwfc	prodh,w,c
  6885  004004  6EDA               	movwf	fsr2h,c
  6886  004006  0E02               	movlw	2
  6887  004008  18DE               	xorwf	postinc2,w,c
  6888  00400A  E008               	bz	l15195
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6892  00400C  0EFF               	movlw	-1
  6893  00400E  2AE3               	incf	plusw1,f,c
  6894  004010                     l15193:
  6895                           
  6896                           ; BSR set to: 2
  6897                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6898  004010  0EFF               	movlw	-1
  6899  004012  CFE3 F047          	movff	plusw1,btemp+1
  6900  004016  51A7               	movf	(_loRa+167)& (0+255),w,b
  6901  004018  5C47               	subwf	btemp+1,w,c
  6902  00401A  E3EC               	bnc	l15187
  6903  00401C                     l15195:
  6904                           
  6905                           ; BSR set to: 2
  6906                           ;lorawan.c: 893: }
  6907                           ;lorawan.c: 894: }
  6908                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6909                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6910  00401C  0EFF               	movlw	-1
  6911  00401E  50E3               	movf	plusw1,w,c
  6912  004020  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6913  004022  E10E               	bnz	l15203
  6914                           
  6915                           ; BSR set to: 2
  6916                           ;lorawan.c: 897: {
  6917                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6918  004024  51A7               	movf	(_loRa+167)& (0+255),w,b
  6919  004026  0D02               	mullw	2
  6920  004028  0EA8               	movlw	low (_loRa+168)
  6921  00402A  24F3               	addwf	prodl,w,c
  6922  00402C  6ED9               	movwf	fsr2l,c
  6923  00402E  0E02               	movlw	high (_loRa+168)
  6924  004030  20F4               	addwfc	prodh,w,c
  6925  004032  6EDA               	movwf	fsr2h,c
  6926  004034  0E02               	movlw	2
  6927  004036  6EDF               	movwf	indf2,c
  6928                           
  6929                           ; BSR set to: 2
  6930                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6931  004038  0E10               	movlw	16
  6932  00403A  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6933  00403C  D001               	goto	l15203
  6934                           
  6935                           ; BSR set to: 2
  6936                           ;lorawan.c: 901: {
  6937                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6938  00403E  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6939  004040                     l15203:
  6940                           
  6941                           ; BSR set to: 2
  6942                           ;lorawan.c: 903: }
  6943                           ;lorawan.c: 904: }
  6944                           ;lorawan.c: 905: }
  6945                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6946  004040  A503               	btfss	(_loRa+3)& (0+255),2,b
  6947  004042  D074               	goto	l2041
  6948                           
  6949                           ; BSR set to: 2
  6950                           ;lorawan.c: 909: {
  6951                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6952  004044  51CF               	movf	(_loRa+207)& (0+255),w,b
  6953  004046  E106               	bnz	u17760
  6954  004048  29CC               	incf	(_loRa+204)& (0+255),w,b
  6955  00404A  0EFF               	movlw	255
  6956  00404C  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6957  00404E  0E0F               	movlw	15
  6958  004050  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6959  004052  E321               	bnc	l15209
  6960  004054                     u17760:
  6961                           
  6962                           ; BSR set to: 2
  6963  004054  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6964  004058  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6965  00405C  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6966  004060  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6967  004064  0E7D               	movlw	125
  6968  004066  0100               	movlb	0	; () banked
  6969  004068  6F68               	movwf	___lldiv@divisor& (0+255),b
  6970  00406A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6971  00406C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6972  00406E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6973  004070  EC1B  F030         	call	___lldiv	;wreg free
  6974  004074  C064  F04E         	movff	?___lldiv,btemp+8
  6975  004078  C065  F04F         	movff	?___lldiv+1,btemp+9
  6976  00407C  C066  F050         	movff	?___lldiv+2,btemp+10
  6977  004080  C067  F051         	movff	?___lldiv+3,btemp+11
  6978  004084  0E0C               	movlw	12
  6979  004086                     u17775:
  6980  004086  90D8               	bcf	status,0,c
  6981  004088  364E               	rlcf	btemp+8,f,c
  6982  00408A  364F               	rlcf	btemp+9,f,c
  6983  00408C  3650               	rlcf	btemp+10,f,c
  6984  00408E  3651               	rlcf	btemp+11,f,c
  6985  004090  2EE8               	decfsz	wreg,f,c
  6986  004092  D7F9               	goto	u17775
  6987  004094  D028               	goto	L3
  6988  004096                     l15209:
  6989                           
  6990                           ; BSR set to: 2
  6991  004096  C2CC  F04E         	movff	_loRa+204,btemp+8
  6992  00409A  C2CD  F04F         	movff	_loRa+205,btemp+9
  6993  00409E  C2CE  F050         	movff	_loRa+206,btemp+10
  6994  0040A2  C2CF  F051         	movff	_loRa+207,btemp+11
  6995  0040A6  0E0C               	movlw	12
  6996  0040A8                     u17785:
  6997  0040A8  90D8               	bcf	status,0,c
  6998  0040AA  364E               	rlcf	btemp+8,f,c
  6999  0040AC  364F               	rlcf	btemp+9,f,c
  7000  0040AE  3650               	rlcf	btemp+10,f,c
  7001  0040B0  3651               	rlcf	btemp+11,f,c
  7002  0040B2  2EE8               	decfsz	wreg,f,c
  7003  0040B4  D7F9               	goto	u17785
  7004  0040B6  C04E  F064         	movff	btemp+8,___lldiv@dividend
  7005  0040BA  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  7006  0040BE  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  7007  0040C2  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  7008  0040C6  0E7D               	movlw	125
  7009  0040C8  0100               	movlb	0	; () banked
  7010  0040CA  6F68               	movwf	___lldiv@divisor& (0+255),b
  7011  0040CC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  7012  0040CE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  7013  0040D0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  7014  0040D2  EC1B  F030         	call	___lldiv	;wreg free
  7015  0040D6  C064  F04E         	movff	?___lldiv,btemp+8
  7016  0040DA  C065  F04F         	movff	?___lldiv+1,btemp+9
  7017  0040DE  C066  F050         	movff	?___lldiv+2,btemp+10
  7018  0040E2  C067  F051         	movff	?___lldiv+3,btemp+11
  7019  0040E6                     L3:
  7020                           
  7021                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  7022  0040E6  0EFB               	movlw	-5
  7023  0040E8  C04E  FFE3         	movff	btemp+8,plusw1
  7024  0040EC  0EFC               	movlw	-4
  7025  0040EE  C04F  FFE3         	movff	btemp+9,plusw1
  7026  0040F2  0EFD               	movlw	-3
  7027  0040F4  C050  FFE3         	movff	btemp+10,plusw1
  7028  0040F8  0EFE               	movlw	-2
  7029  0040FA  C051  FFE3         	movff	btemp+11,plusw1
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  7033  0040FE  50E1               	movf	fsr1l,w,c
  7034  004100  0FFB               	addlw	-5
  7035  004102  6ED9               	movwf	fsr2l,c
  7036  004104  50E2               	movf	fsr1h,w,c
  7037  004106  6EDA               	movwf	fsr2h,c
  7038  004108  0EFF               	movlw	255
  7039  00410A  22DA               	addwfc	fsr2h,f,c
  7040  00410C  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  7041  004110  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7042  004114  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7043  004118  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7044  00411C  0102               	movlb	2	; () banked
  7045  00411E  51E7               	movf	(_loRa+231)& (0+255),w,b
  7046  004120  EC70  F036         	call	_SwTimerSetTimeout
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7050  004124  0102               	movlb	2	; () banked
  7051  004126  51E7               	movf	(_loRa+231)& (0+255),w,b
  7052  004128  EC59  F02E         	call	_SwTimerStart
  7053  00412C                     l2041:
  7054                           
  7055                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7056  00412C  0EFA               	movlw	250
  7057  00412E  26E1               	addwf	fsr1l,f,c
  7058  004130  0EFF               	movlw	255
  7059  004132  22E2               	addwfc	fsr1h,f,c
  7060  004134  0CFF               	retlw	255	;funcret
  7061  004136                     __end_of_LORAWAN_LinkCheckCallback:
  7062                           	opt stack 0
  7063                           tosu	equ	0xFFF
  7064                           tosh	equ	0xFFE
  7065                           tosl	equ	0xFFD
  7066                           pclath	equ	0xFFA
  7067                           tblptru	equ	0xFF8
  7068                           tblptrh	equ	0xFF7
  7069                           tblptrl	equ	0xFF6
  7070                           tablat	equ	0xFF5
  7071                           prodh	equ	0xFF4
  7072                           prodl	equ	0xFF3
  7073                           intcon	equ	0xFF2
  7074                           intcon2	equ	0xFF1
  7075                           intcon3	equ	0xFF0
  7076                           postinc0	equ	0xFEE
  7077                           wreg	equ	0xFE8
  7078                           postinc1	equ	0xFE6
  7079                           postdec1	equ	0xFE5
  7080                           plusw1	equ	0xFE3
  7081                           fsr1h	equ	0xFE2
  7082                           fsr1l	equ	0xFE1
  7083                           indf2	equ	0xFDF
  7084                           postinc2	equ	0xFDE
  7085                           postdec2	equ	0xFDD
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8
  7089                           
  7090 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7091 ;; Defined at:
  7092 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  param           1  [STACK] unsigned char 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  freq            4  [STACK] unsigned long 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1  [STACK] void 
  7099 ;; Registers used:
  7100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : F/0
  7103 ;;		On exit  : D/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;Total ram usage:        0 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:   13
  7113 ;; This function calls:
  7114 ;;		_ConfigureRadioRx
  7115 ;;		_GetRx1Freq
  7116 ;;		_RADIO_ReceiveStart
  7117 ;;		_RADIO_ReceiveStop
  7118 ;;		_RADIO_ReleaseData
  7119 ;; This function is called by:
  7120 ;;		_SetCallbackSoftwareTimers
  7121 ;;		_SwTimersExecute
  7122 ;; This function uses a reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text42
  7126  0056EC                     __ptext42:
  7127                           	opt stack 0
  7128  0056EC                     _LORAWAN_ReceiveWindow1Callback:
  7129                           	opt stack 0
  7130                           
  7131                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7132  0056EC  52E6               	movf	postinc1,f,c
  7133  0056EE  52E6               	movf	postinc1,f,c
  7134  0056F0  52E6               	movf	postinc1,f,c
  7135  0056F2  52E6               	movf	postinc1,f,c
  7136                           
  7137                           ;lorawan.c: 798: uint32_t freq;
  7138                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7139                           
  7140                           ;incstack = 0
  7141  0056F4  0102               	movlb	2	; () banked
  7142  0056F6  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7143  0056F8  D04E               	goto	l2014
  7144                           
  7145                           ; BSR set to: 2
  7146                           ;lorawan.c: 801: {
  7147                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7148  0056FA  0E02               	movlw	2
  7149  0056FC  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7150  0056FE  E102               	bnz	l15165
  7151                           
  7152                           ; BSR set to: 2
  7153                           ;lorawan.c: 803: {
  7154                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7155  005700  EC3C  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7156  005704                     l15165:
  7157                           
  7158                           ;lorawan.c: 805: }
  7159                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7160  005704  0102               	movlb	2	; () banked
  7161  005706  51EF               	movf	(_loRa+239)& (0+255),w,b
  7162  005708  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7163  00570A  E304               	bnc	l2012
  7164                           
  7165                           ; BSR set to: 2
  7166                           ;lorawan.c: 807: {
  7167                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7168  00570C  51EF               	movf	(_loRa+239)& (0+255),w,b
  7169  00570E  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7170  005710  6F17               	movwf	(_loRa+23)& (0+255),b
  7171                           
  7172                           ;lorawan.c: 809: }
  7173  005712  D001               	goto	l15169
  7174  005714                     l2012:
  7175                           
  7176                           ; BSR set to: 2
  7177                           ;lorawan.c: 810: else
  7178                           ;lorawan.c: 811: {
  7179                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7180  005714  6B17               	clrf	(_loRa+23)& (0+255),b
  7181  005716                     l15169:
  7182                           
  7183                           ; BSR set to: 2
  7184                           ;lorawan.c: 813: }
  7185                           ;lorawan.c: 815: freq = GetRx1Freq();
  7186  005716  EC87  F03B         	call	_GetRx1Freq	;wreg free
  7187  00571A  C064  F04E         	movff	?_GetRx1Freq,btemp+8
  7188  00571E  C065  F04F         	movff	?_GetRx1Freq+1,btemp+9
  7189  005722  C066  F050         	movff	?_GetRx1Freq+2,btemp+10
  7190  005726  C067  F051         	movff	?_GetRx1Freq+3,btemp+11
  7191                           
  7192                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7193  00572A  0EFC               	movlw	-4
  7194  00572C  C04E  FFE3         	movff	btemp+8,plusw1
  7195  005730  0EFD               	movlw	-3
  7196  005732  C04F  FFE3         	movff	btemp+9,plusw1
  7197  005736  0EFE               	movlw	-2
  7198  005738  C050  FFE3         	movff	btemp+10,plusw1
  7199  00573C  0EFF               	movlw	-1
  7200  00573E  C051  FFE3         	movff	btemp+11,plusw1
  7201                           
  7202                           ; BSR set to: 2
  7203                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7204  005742  5102               	movf	(_loRa+2)& (0+255),w,b
  7205  005744  0BF0               	andlw	-16
  7206  005746  0903               	iorlw	3
  7207  005748  6F02               	movwf	(_loRa+2)& (0+255),b
  7208                           
  7209                           ; BSR set to: 2
  7210                           ;lorawan.c: 819: RADIO_ReleaseData();
  7211  00574A  EC67  F03C         	call	_RADIO_ReleaseData	;wreg free
  7212                           
  7213                           ; BSR set to: 1
  7214                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7215                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7216  00574E  50E1               	movf	fsr1l,w,c
  7217  005750  0FFC               	addlw	-4
  7218  005752  6ED9               	movwf	fsr2l,c
  7219  005754  50E2               	movf	fsr1h,w,c
  7220  005756  6EDA               	movwf	fsr2h,c
  7221  005758  0EFF               	movlw	255
  7222  00575A  22DA               	addwfc	fsr2h,f,c
  7223  00575C  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7224  005760  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7225  005764  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7226  005768  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7227  00576C  0102               	movlb	2	; () banked
  7228  00576E  5117               	movf	(_loRa+23)& (0+255),w,b
  7229  005770  EC50  F039         	call	_ConfigureRadioRx
  7230                           
  7231                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7232  005774  0E85               	movlw	low _rxWindowSize
  7233  005776  0102               	movlb	2	; () banked
  7234  005778  2517               	addwf	(_loRa+23)& (0+255),w,b
  7235  00577A  6EF6               	movwf	tblptrl,c
  7236  00577C  6AF7               	clrf	tblptrh,c
  7237  00577E  0EFF               	movlw	high _rxWindowSize
  7238  005780  22F7               	addwfc	tblptrh,f,c
  7239  005782                     	if	1	;There are 3 active tblptr bytes
  7240  005782  6AF8               	clrf	tblptru,c
  7241  005784  0E00               	movlw	low (__mediumconst shr (0+16))
  7242  005786  22F8               	addwfc	tblptru,f,c
  7243  005788                     	endif
  7244  005788  0008               	tblrd		*
  7245  00578A  50F5               	movf	tablat,w,c
  7246  00578C  0100               	movlb	0	; () banked
  7247  00578E  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7248  005790  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7249  005792  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
  7250  005796                     l2014:
  7251                           
  7252                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7253  005796  0EFB               	movlw	251
  7254  005798  26E1               	addwf	fsr1l,f,c
  7255  00579A  0EFF               	movlw	255
  7256  00579C  22E2               	addwfc	fsr1h,f,c
  7257  00579E  0CFF               	retlw	255	;funcret
  7258  0057A0                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7259                           	opt stack 0
  7260                           tosu	equ	0xFFF
  7261                           tosh	equ	0xFFE
  7262                           tosl	equ	0xFFD
  7263                           pclath	equ	0xFFA
  7264                           tblptru	equ	0xFF8
  7265                           tblptrh	equ	0xFF7
  7266                           tblptrl	equ	0xFF6
  7267                           tablat	equ	0xFF5
  7268                           prodh	equ	0xFF4
  7269                           prodl	equ	0xFF3
  7270                           intcon	equ	0xFF2
  7271                           intcon2	equ	0xFF1
  7272                           intcon3	equ	0xFF0
  7273                           postinc0	equ	0xFEE
  7274                           wreg	equ	0xFE8
  7275                           postinc1	equ	0xFE6
  7276                           postdec1	equ	0xFE5
  7277                           plusw1	equ	0xFE3
  7278                           fsr1h	equ	0xFE2
  7279                           fsr1l	equ	0xFE1
  7280                           indf2	equ	0xFDF
  7281                           postinc2	equ	0xFDE
  7282                           postdec2	equ	0xFDD
  7283                           fsr2h	equ	0xFDA
  7284                           fsr2l	equ	0xFD9
  7285                           status	equ	0xFD8
  7286                           
  7287 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7288 ;; Defined at:
  7289 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  param           1  [STACK] unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  1  [STACK] void 
  7296 ;; Registers used:
  7297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7298 ;; Tracked objects:
  7299 ;;		On entry : D/0
  7300 ;;		On exit  : D/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7307 ;;Total ram usage:        0 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:   14
  7310 ;; This function calls:
  7311 ;;		_ConfigureRadioRx
  7312 ;;		_LORAWAN_EnterContinuousReceive
  7313 ;;		_RADIO_GetStatus
  7314 ;;		_RADIO_ReceiveStart
  7315 ;;		_RADIO_ReceiveStop
  7316 ;;		_RADIO_ReleaseData
  7317 ;;		_ResetParametersForConfirmedTransmission
  7318 ;;		_ResetParametersForUnconfirmedTransmission
  7319 ;;		_RxDataDone
  7320 ;; This function is called by:
  7321 ;;		_LORAWAN_RxTimeout
  7322 ;;		_SetCallbackSoftwareTimers
  7323 ;;		_SwTimersExecute
  7324 ;; This function uses a reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text43
  7328  005334                     __ptext43:
  7329                           	opt stack 0
  7330  005334                     _LORAWAN_ReceiveWindow2Callback:
  7331                           	opt stack 12
  7332                           
  7333                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7334                           
  7335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7336                           ;incstack = 0
  7337  005334  0102               	movlb	2	; () banked
  7338  005336  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7339  005338  D057               	goto	l2017
  7340                           
  7341                           ; BSR set to: 2
  7342                           ;lorawan.c: 831: {
  7343                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7344  00533A  EC64  F03C         	call	_RADIO_GetStatus	;wreg free
  7345  00533E  6E51               	movwf	btemp+11,c
  7346  005340  B251               	btfsc	btemp+11,1,c
  7347  005342  D04E               	goto	l13833
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;lorawan.c: 833: {
  7351                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7352  005344  0102               	movlb	2	; () banked
  7353  005346  5102               	movf	(_loRa+2)& (0+255),w,b
  7354  005348  0BF0               	andlw	-16
  7355  00534A  0905               	iorlw	5
  7356  00534C  6F02               	movwf	(_loRa+2)& (0+255),b
  7357                           
  7358                           ; BSR set to: 2
  7359                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7360  00534E  EC3C  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7361                           
  7362                           ; BSR set to: 1
  7363                           ;lorawan.c: 837: RADIO_ReleaseData();
  7364  005352  EC67  F03C         	call	_RADIO_ReleaseData	;wreg free
  7365                           
  7366                           ; BSR set to: 1
  7367                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7368  005356  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7369  00535A  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7370  00535E  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7371  005362  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7372  005366  0102               	movlb	2	; () banked
  7373  005368  511C               	movf	(_loRa+28)& (0+255),w,b
  7374  00536A  EC50  F039         	call	_ConfigureRadioRx
  7375                           
  7376                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7377  00536E  0102               	movlb	2	; () banked
  7378  005370  5112               	movf	(_loRa+18)& (0+255),w,b
  7379  005372  E12F               	bnz	l13829
  7380                           
  7381                           ; BSR set to: 2
  7382                           ;lorawan.c: 842: {
  7383                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7384  005374  0E85               	movlw	low _rxWindowSize
  7385  005376  251C               	addwf	(_loRa+28)& (0+255),w,b
  7386  005378  6EF6               	movwf	tblptrl,c
  7387  00537A  6AF7               	clrf	tblptrh,c
  7388  00537C  0EFF               	movlw	high _rxWindowSize
  7389  00537E  22F7               	addwfc	tblptrh,f,c
  7390  005380                     	if	1	;There are 3 active tblptr bytes
  7391  005380  6AF8               	clrf	tblptru,c
  7392  005382  0E00               	movlw	low (__mediumconst shr (0+16))
  7393  005384  22F8               	addwfc	tblptru,f,c
  7394  005386                     	endif
  7395  005386  0008               	tblrd		*
  7396  005388  50F5               	movf	tablat,w,c
  7397  00538A  0100               	movlb	0	; () banked
  7398  00538C  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7399  00538E  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7400  005390  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
  7401  005394  C096  F047         	movff	?_RADIO_ReceiveStart,btemp+1
  7402  005398  C097  F048         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7403  00539C  5047               	movf	btemp+1,w,c
  7404  00539E  1048               	iorwf	btemp+2,w,c
  7405  0053A0  E02B               	bz	l2026
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;lorawan.c: 844: {
  7409                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7410  0053A2  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7411                           
  7412                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7413  0053A6  ECA9  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7414                           
  7415                           ; BSR set to: 2
  7416                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7417  0053AA  0100               	movlb	0	; () banked
  7418  0053AC  51E8               	movf	_rxPayload& (0+255),w,b
  7419  0053AE  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7420  0053B0  E023               	bz	l2026
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;lorawan.c: 848: {
  7424                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7425  0053B2  0E00               	movlw	0
  7426  0053B4  6B64               	clrf	RxDataDone@pData& (0+255),b
  7427  0053B6  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7428  0053B8  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7429  0053BA  6B67               	clrf	RxDataDone@status& (0+255),b
  7430  0053BC  D801               	call	u15268
  7431  0053BE  D01C               	goto	l2026
  7432  0053C0                     u15268:
  7433  0053C0  0005               	push	
  7434  0053C2  6EFA               	movwf	pclath,c
  7435  0053C4  51E8               	movf	_rxPayload& (0+255),w,b
  7436  0053C6  6EFD               	movwf	tosl,c
  7437  0053C8  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7438  0053CA  6EFE               	movwf	tosh,c
  7439  0053CC  6AFF               	clrf	tosu,c
  7440  0053CE  50FA               	movf	pclath,w,c
  7441  0053D0  0012               	return		;indir
  7442  0053D2                     l13829:
  7443                           
  7444                           ; BSR set to: 2
  7445                           ;lorawan.c: 853: else
  7446                           ;lorawan.c: 854: {
  7447                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7448  0053D2  5102               	movf	(_loRa+2)& (0+255),w,b
  7449  0053D4  0BF0               	andlw	-16
  7450  0053D6  0909               	iorlw	9
  7451  0053D8  6F02               	movwf	(_loRa+2)& (0+255),b
  7452                           
  7453                           ; BSR set to: 2
  7454                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7455  0053DA  EC94  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7456  0053DE  D00C               	goto	l2026
  7457  0053E0                     l13833:
  7458                           
  7459                           ; BSR set to: 1
  7460                           ;lorawan.c: 859: else
  7461                           ;lorawan.c: 860: {
  7462                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7463  0053E0  0E01               	movlw	1
  7464  0053E2  0102               	movlb	2	; () banked
  7465  0053E4  6FF1               	movwf	(_loRa+241)& (0+255),b
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;lorawan.c: 864: }
  7469                           ;lorawan.c: 865: }
  7470  0053E6  D008               	goto	l2026
  7471  0053E8                     l2017:
  7472                           
  7473                           ; BSR set to: 2
  7474                           ;lorawan.c: 866: else
  7475                           ;lorawan.c: 867: {
  7476                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7477  0053E8  A500               	btfss	_loRa& (0+255),2,b
  7478  0053EA  D002               	goto	l13837
  7479                           
  7480                           ; BSR set to: 2
  7481                           ;lorawan.c: 871: {
  7482                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7483  0053EC  9500               	bcf	_loRa& (0+255),2,b
  7484                           
  7485                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7486  0053EE  9902               	bcf	(_loRa+2)& (0+255),4,b
  7487  0053F0                     l13837:
  7488                           
  7489                           ; BSR set to: 2
  7490                           ;lorawan.c: 874: }
  7491                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7492  0053F0  ECA9  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7493                           
  7494                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7495  0053F4  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7496  0053F8                     l2026:
  7497                           
  7498                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7499  0053F8  52E5               	movf	postdec1,f,c
  7500  0053FA  0012               	return		;funcret
  7501  0053FC                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7502                           	opt stack 0
  7503                           tosu	equ	0xFFF
  7504                           tosh	equ	0xFFE
  7505                           tosl	equ	0xFFD
  7506                           pclath	equ	0xFFA
  7507                           tblptru	equ	0xFF8
  7508                           tblptrh	equ	0xFF7
  7509                           tblptrl	equ	0xFF6
  7510                           tablat	equ	0xFF5
  7511                           prodh	equ	0xFF4
  7512                           prodl	equ	0xFF3
  7513                           intcon	equ	0xFF2
  7514                           intcon2	equ	0xFF1
  7515                           intcon3	equ	0xFF0
  7516                           postinc0	equ	0xFEE
  7517                           wreg	equ	0xFE8
  7518                           postinc1	equ	0xFE6
  7519                           postdec1	equ	0xFE5
  7520                           plusw1	equ	0xFE3
  7521                           fsr1h	equ	0xFE2
  7522                           fsr1l	equ	0xFE1
  7523                           indf2	equ	0xFDF
  7524                           postinc2	equ	0xFDE
  7525                           postdec2	equ	0xFDD
  7526                           fsr2h	equ	0xFDA
  7527                           fsr2l	equ	0xFD9
  7528                           status	equ	0xFD8
  7529                           
  7530 ;; *************** function _RADIO_WatchdogTimeout *****************
  7531 ;; Defined at:
  7532 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  param           1  [STACK] unsigned char 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1  [STACK] void 
  7539 ;; Registers used:
  7540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7541 ;; Tracked objects:
  7542 ;;		On entry : F/0
  7543 ;;		On exit  : C/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used:    1
  7552 ;; Hardware stack levels required when called:   16
  7553 ;; This function calls:
  7554 ;;		_LORAWAN_RxTimeout
  7555 ;;		_LORAWAN_TxDone
  7556 ;;		_RADIO_WriteMode
  7557 ;; This function is called by:
  7558 ;;		_RADIO_Init
  7559 ;;		_SwTimersExecute
  7560 ;; This function uses a reentrant model
  7561 ;;
  7562                           
  7563                           	psect	text44
  7564  006C5C                     __ptext44:
  7565                           	opt stack 0
  7566  006C5C                     _RADIO_WatchdogTimeout:
  7567                           	opt stack 12
  7568                           
  7569                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7570                           
  7571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7572                           ;incstack = 0
  7573  006C5C  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7574  006C60  0E01               	movlw	1
  7575  006C62  0100               	movlb	0	; () banked
  7576  006C64  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7577  006C66  EC5F  F028         	call	_RADIO_WriteMode
  7578                           
  7579                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7580  006C6A  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7581  006C6E  0E00               	movlw	0
  7582  006C70  0100               	movlb	0	; () banked
  7583  006C72  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7584  006C74  EC5F  F028         	call	_RADIO_WriteMode
  7585                           
  7586                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7587  006C78  0101               	movlb	1	; () banked
  7588  006C7A  89A1               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7589                           
  7590                           ; BSR set to: 1
  7591                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7592  006C7C  A3A1               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7593  006C7E  D004               	goto	l673
  7594                           
  7595                           ; BSR set to: 1
  7596                           ;radio_driver_SX1276.c: 1414: {
  7597                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7598  006C80  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7599                           
  7600                           ; BSR set to: 1
  7601                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7602  006C82  EC62  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7603                           
  7604                           ;radio_driver_SX1276.c: 1417: }
  7605  006C86  D009               	goto	l676
  7606  006C88                     l673:
  7607                           
  7608                           ; BSR set to: 1
  7609                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7610  006C88  A1A1               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7611  006C8A  D007               	goto	l676
  7612                           
  7613                           ; BSR set to: 1
  7614                           ;radio_driver_SX1276.c: 1419: {
  7615                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7616  006C8C  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7617                           
  7618                           ; BSR set to: 1
  7619                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7620  006C8E  C1A8  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7621  006C92  C1A9  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7622  006C96  EC7D  F005         	call	_LORAWAN_TxDone	;wreg free
  7623  006C9A                     l676:
  7624                           
  7625                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7626  006C9A  52E5               	movf	postdec1,f,c
  7627  006C9C  0012               	return		;funcret
  7628  006C9E                     __end_of_RADIO_WatchdogTimeout:
  7629                           	opt stack 0
  7630                           tosu	equ	0xFFF
  7631                           tosh	equ	0xFFE
  7632                           tosl	equ	0xFFD
  7633                           pclath	equ	0xFFA
  7634                           tblptru	equ	0xFF8
  7635                           tblptrh	equ	0xFF7
  7636                           tblptrl	equ	0xFF6
  7637                           tablat	equ	0xFF5
  7638                           prodh	equ	0xFF4
  7639                           prodl	equ	0xFF3
  7640                           intcon	equ	0xFF2
  7641                           intcon2	equ	0xFF1
  7642                           intcon3	equ	0xFF0
  7643                           postinc0	equ	0xFEE
  7644                           wreg	equ	0xFE8
  7645                           postinc1	equ	0xFE6
  7646                           postdec1	equ	0xFE5
  7647                           plusw1	equ	0xFE3
  7648                           fsr1h	equ	0xFE2
  7649                           fsr1l	equ	0xFE1
  7650                           indf2	equ	0xFDF
  7651                           postinc2	equ	0xFDE
  7652                           postdec2	equ	0xFDD
  7653                           fsr2h	equ	0xFDA
  7654                           fsr2l	equ	0xFD9
  7655                           status	equ	0xFD8
  7656                           
  7657 ;; *************** function _RADIO_RxFSKTimeout *****************
  7658 ;; Defined at:
  7659 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  param           1  [STACK] unsigned char 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  irqFlags        1  [STACK] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1  [STACK] void 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : F/0
  7670 ;;		On exit  : D/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:   16
  7680 ;; This function calls:
  7681 ;;		_LORAWAN_RxTimeout
  7682 ;;		_RADIO_RegisterRead
  7683 ;;		_RADIO_WriteMode
  7684 ;;		_SwTimerStop
  7685 ;; This function is called by:
  7686 ;;		_RADIO_Init
  7687 ;;		_SwTimersExecute
  7688 ;; This function uses a reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text45
  7692  006F6E                     __ptext45:
  7693                           	opt stack 0
  7694  006F6E                     _RADIO_RxFSKTimeout:
  7695                           	opt stack 0
  7696                           
  7697                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7698  006F6E  52E6               	movf	postinc1,f,c
  7699                           
  7700                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7701                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7702                           
  7703                           ;incstack = 0
  7704  006F70  0E3E               	movlw	62
  7705  006F72  EC63  F039         	call	_RADIO_RegisterRead
  7706  006F76  6E51               	movwf	btemp+11,c
  7707                           
  7708                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7709  006F78  0EFF               	movlw	-1
  7710  006F7A  C051  FFE3         	movff	btemp+11,plusw1
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7714                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7715  006F7E  B0E3               	btfsc	plusw1,0,c
  7716  006F80  D00E               	goto	l670
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;radio_driver_SX1276.c: 1397: {
  7720                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7721  006F82  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7722  006F86  0E00               	movlw	0
  7723  006F88  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7724  006F8A  EC5F  F028         	call	_RADIO_WriteMode
  7725                           
  7726                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7727  006F8E  0101               	movlb	1	; () banked
  7728  006F90  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7729  006F92  EC78  F03A         	call	_SwTimerStop
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7733  006F96  0101               	movlb	1	; () banked
  7734  006F98  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7735                           
  7736                           ; BSR set to: 1
  7737                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7738  006F9A  EC62  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7739  006F9E                     l670:
  7740                           
  7741                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7742  006F9E  52E5               	movf	postdec1,f,c
  7743  006FA0  52E5               	movf	postdec1,f,c
  7744  006FA2  0012               	return		;funcret
  7745  006FA4                     __end_of_RADIO_RxFSKTimeout:
  7746                           	opt stack 0
  7747                           tosu	equ	0xFFF
  7748                           tosh	equ	0xFFE
  7749                           tosl	equ	0xFFD
  7750                           pclath	equ	0xFFA
  7751                           tblptru	equ	0xFF8
  7752                           tblptrh	equ	0xFF7
  7753                           tblptrl	equ	0xFF6
  7754                           tablat	equ	0xFF5
  7755                           prodh	equ	0xFF4
  7756                           prodl	equ	0xFF3
  7757                           intcon	equ	0xFF2
  7758                           intcon2	equ	0xFF1
  7759                           intcon3	equ	0xFF0
  7760                           postinc0	equ	0xFEE
  7761                           wreg	equ	0xFE8
  7762                           postinc1	equ	0xFE6
  7763                           postdec1	equ	0xFE5
  7764                           plusw1	equ	0xFE3
  7765                           fsr1h	equ	0xFE2
  7766                           fsr1l	equ	0xFE1
  7767                           indf2	equ	0xFDF
  7768                           postinc2	equ	0xFDE
  7769                           postdec2	equ	0xFDD
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7775 ;; Defined at:
  7776 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  param           1  [STACK] unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;		None
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1  [STACK] void 
  7783 ;; Registers used:
  7784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : F/0
  7787 ;;		On exit  : D/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;Total ram usage:        0 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:   13
  7797 ;; This function calls:
  7798 ;;		_RADIO_Transmit
  7799 ;;		_ResetParametersForUnconfirmedTransmission
  7800 ;;		_RxDataDone
  7801 ;;		_SelectChannelForTransmission
  7802 ;; This function is called by:
  7803 ;;		_SetCallbackSoftwareTimers
  7804 ;;		_SwTimersExecute
  7805 ;; This function uses a reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text46
  7809  0062C8                     __ptext46:
  7810                           	opt stack 0
  7811  0062C8                     _UnconfirmedTransmissionCallback:
  7812                           	opt stack 15
  7813                           
  7814                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7815                           
  7816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7817                           ;incstack = 0
  7818  0062C8  0E01               	movlw	1
  7819  0062CA  EC27  F033         	call	_SelectChannelForTransmission
  7820  0062CE  0900               	iorlw	0
  7821  0062D0  E116               	bnz	l15269
  7822                           
  7823                           ; BSR set to: 0
  7824  0062D2  0EF0               	movlw	low (_macBuffer+16)
  7825  0062D4  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  7826  0062D6  0E04               	movlw	high (_macBuffer+16)
  7827  0062D8  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7828  0062DA  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7829  0062DE  ECD3  F017         	call	_RADIO_Transmit	;wreg free
  7830  0062E2  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  7831  0062E6  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  7832  0062EA  5047               	movf	btemp+1,w,c
  7833  0062EC  1048               	iorwf	btemp+2,w,c
  7834  0062EE  E107               	bnz	l15269
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;lorawan.c: 1001: {
  7838                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7839  0062F0  0102               	movlb	2	; () banked
  7840  0062F2  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7841                           
  7842                           ; BSR set to: 2
  7843                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7844  0062F4  5102               	movf	(_loRa+2)& (0+255),w,b
  7845  0062F6  0BF0               	andlw	-16
  7846  0062F8  0901               	iorlw	1
  7847  0062FA  6F02               	movwf	(_loRa+2)& (0+255),b
  7848                           
  7849                           ;lorawan.c: 1005: }
  7850  0062FC  D016               	goto	l2069
  7851  0062FE                     l15269:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;lorawan.c: 1006: else
  7855                           ;lorawan.c: 1008: {
  7856                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7857  0062FE  ECA9  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7858                           
  7859                           ; BSR set to: 2
  7860                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7861  006302  0100               	movlb	0	; () banked
  7862  006304  51E8               	movf	_rxPayload& (0+255),w,b
  7863  006306  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7864  006308  E010               	bz	l2069
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;lorawan.c: 1011: {
  7868                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7869  00630A  0E00               	movlw	0
  7870  00630C  6B64               	clrf	RxDataDone@pData& (0+255),b
  7871  00630E  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7872  006310  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7873  006312  6B67               	clrf	RxDataDone@status& (0+255),b
  7874  006314  D801               	call	u17968
  7875  006316  D009               	goto	l2069
  7876  006318                     u17968:
  7877  006318  0005               	push	
  7878  00631A  6EFA               	movwf	pclath,c
  7879  00631C  51E8               	movf	_rxPayload& (0+255),w,b
  7880  00631E  6EFD               	movwf	tosl,c
  7881  006320  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7882  006322  6EFE               	movwf	tosh,c
  7883  006324  6AFF               	clrf	tosu,c
  7884  006326  50FA               	movf	pclath,w,c
  7885  006328  0012               	return		;indir
  7886  00632A                     l2069:
  7887                           
  7888                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7889  00632A  52E5               	movf	postdec1,f,c
  7890  00632C  0012               	return		;funcret
  7891  00632E                     __end_of_UnconfirmedTransmissionCallback:
  7892                           	opt stack 0
  7893                           tosu	equ	0xFFF
  7894                           tosh	equ	0xFFE
  7895                           tosl	equ	0xFFD
  7896                           pclath	equ	0xFFA
  7897                           tblptru	equ	0xFF8
  7898                           tblptrh	equ	0xFF7
  7899                           tblptrl	equ	0xFF6
  7900                           tablat	equ	0xFF5
  7901                           prodh	equ	0xFF4
  7902                           prodl	equ	0xFF3
  7903                           intcon	equ	0xFF2
  7904                           intcon2	equ	0xFF1
  7905                           intcon3	equ	0xFF0
  7906                           postinc0	equ	0xFEE
  7907                           wreg	equ	0xFE8
  7908                           postinc1	equ	0xFE6
  7909                           postdec1	equ	0xFE5
  7910                           plusw1	equ	0xFE3
  7911                           fsr1h	equ	0xFE2
  7912                           fsr1l	equ	0xFE1
  7913                           indf2	equ	0xFDF
  7914                           postinc2	equ	0xFDE
  7915                           postdec2	equ	0xFDD
  7916                           fsr2h	equ	0xFDA
  7917                           fsr2l	equ	0xFD9
  7918                           status	equ	0xFD8
  7919                           
  7920 ;; *************** function _GetRx1Freq *****************
  7921 ;; Defined at:
  7922 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  4    4[BANK0 ] unsigned long 
  7929 ;; Registers used:
  7930 ;;		None
  7931 ;; Tracked objects:
  7932 ;;		On entry : F/2
  7933 ;;		On exit  : F/2
  7934 ;;		Unchanged: F/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;Total ram usage:        4 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    7
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_LORAWAN_ReceiveWindow1Callback
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text47
  7951  00770E                     __ptext47:
  7952                           	opt stack 0
  7953  00770E                     _GetRx1Freq:
  7954                           	opt stack 20
  7955                           
  7956                           ; BSR set to: 2
  7957                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7958                           
  7959                           ;incstack = 0
  7960  00770E  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7961  007712  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7962  007716  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7963  00771A  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7964                           
  7965                           ; BSR set to: 2
  7966  00771E  0012               	return		;funcret
  7967  007720                     __end_of_GetRx1Freq:
  7968                           	opt stack 0
  7969                           tosu	equ	0xFFF
  7970                           tosh	equ	0xFFE
  7971                           tosl	equ	0xFFD
  7972                           pclath	equ	0xFFA
  7973                           tblptru	equ	0xFF8
  7974                           tblptrh	equ	0xFF7
  7975                           tblptrl	equ	0xFF6
  7976                           tablat	equ	0xFF5
  7977                           prodh	equ	0xFF4
  7978                           prodl	equ	0xFF3
  7979                           intcon	equ	0xFF2
  7980                           intcon2	equ	0xFF1
  7981                           intcon3	equ	0xFF0
  7982                           postinc0	equ	0xFEE
  7983                           wreg	equ	0xFE8
  7984                           postinc1	equ	0xFE6
  7985                           postdec1	equ	0xFE5
  7986                           plusw1	equ	0xFE3
  7987                           fsr1h	equ	0xFE2
  7988                           fsr1l	equ	0xFE1
  7989                           indf2	equ	0xFDF
  7990                           postinc2	equ	0xFDE
  7991                           postdec2	equ	0xFDD
  7992                           fsr2h	equ	0xFDA
  7993                           fsr2l	equ	0xFD9
  7994                           status	equ	0xFD8
  7995                           
  7996 ;; *************** function _RADIO_DIO5 *****************
  7997 ;; Defined at:
  7998 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;		None
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  dioMapping      1    0        unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      void 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : F/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;Total ram usage:        1 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:   11
  8019 ;; This function calls:
  8020 ;;		_RADIO_RegisterRead
  8021 ;;		_RADIO_UnhandledInterrupt
  8022 ;; This function is called by:
  8023 ;;		_LORAWAN_Mainloop
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text48
  8028  007632                     __ptext48:
  8029                           	opt stack 0
  8030  007632                     _RADIO_DIO5:
  8031                           	opt stack 18
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8035                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8036                           
  8037                           ; BSR set to: 2
  8038                           ;incstack = 0
  8039  007632  0E41               	movlw	65
  8040  007634  EC63  F039         	call	_RADIO_RegisterRead
  8041                           
  8042                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8043  007638  0E01               	movlw	1
  8044  00763A  EC63  F039         	call	_RADIO_RegisterRead
  8045  00763E  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8046  007640  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8047  007642  0012               	return	
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8051  007644  0E01               	movlw	1
  8052  007646  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8053  00764A                     __end_of_RADIO_DIO5:
  8054                           	opt stack 0
  8055                           tosu	equ	0xFFF
  8056                           tosh	equ	0xFFE
  8057                           tosl	equ	0xFFD
  8058                           pclath	equ	0xFFA
  8059                           tblptru	equ	0xFF8
  8060                           tblptrh	equ	0xFF7
  8061                           tblptrl	equ	0xFF6
  8062                           tablat	equ	0xFF5
  8063                           prodh	equ	0xFF4
  8064                           prodl	equ	0xFF3
  8065                           intcon	equ	0xFF2
  8066                           intcon2	equ	0xFF1
  8067                           intcon3	equ	0xFF0
  8068                           postinc0	equ	0xFEE
  8069                           wreg	equ	0xFE8
  8070                           postinc1	equ	0xFE6
  8071                           postdec1	equ	0xFE5
  8072                           plusw1	equ	0xFE3
  8073                           fsr1h	equ	0xFE2
  8074                           fsr1l	equ	0xFE1
  8075                           indf2	equ	0xFDF
  8076                           postinc2	equ	0xFDE
  8077                           postdec2	equ	0xFDD
  8078                           fsr2h	equ	0xFDA
  8079                           fsr2l	equ	0xFD9
  8080                           status	equ	0xFD8
  8081                           
  8082 ;; *************** function _RADIO_DIO4 *****************
  8083 ;; Defined at:
  8084 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  dioMapping      1    0        unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : F/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;Total ram usage:        1 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:   11
  8105 ;; This function calls:
  8106 ;;		_RADIO_RegisterRead
  8107 ;;		_RADIO_UnhandledInterrupt
  8108 ;; This function is called by:
  8109 ;;		_LORAWAN_Mainloop
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text49
  8114  00764A                     __ptext49:
  8115                           	opt stack 0
  8116  00764A                     _RADIO_DIO4:
  8117                           	opt stack 18
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8121                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8122                           
  8123                           ;incstack = 0
  8124  00764A  0E41               	movlw	65
  8125  00764C  EC63  F039         	call	_RADIO_RegisterRead
  8126                           
  8127                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8128  007650  0E01               	movlw	1
  8129  007652  EC63  F039         	call	_RADIO_RegisterRead
  8130  007656  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8131  007658  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8132  00765A  0012               	return	
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8136  00765C  0E01               	movlw	1
  8137  00765E  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8138  007662                     __end_of_RADIO_DIO4:
  8139                           	opt stack 0
  8140                           tosu	equ	0xFFF
  8141                           tosh	equ	0xFFE
  8142                           tosl	equ	0xFFD
  8143                           pclath	equ	0xFFA
  8144                           tblptru	equ	0xFF8
  8145                           tblptrh	equ	0xFF7
  8146                           tblptrl	equ	0xFF6
  8147                           tablat	equ	0xFF5
  8148                           prodh	equ	0xFF4
  8149                           prodl	equ	0xFF3
  8150                           intcon	equ	0xFF2
  8151                           intcon2	equ	0xFF1
  8152                           intcon3	equ	0xFF0
  8153                           postinc0	equ	0xFEE
  8154                           wreg	equ	0xFE8
  8155                           postinc1	equ	0xFE6
  8156                           postdec1	equ	0xFE5
  8157                           plusw1	equ	0xFE3
  8158                           fsr1h	equ	0xFE2
  8159                           fsr1l	equ	0xFE1
  8160                           indf2	equ	0xFDF
  8161                           postinc2	equ	0xFDE
  8162                           postdec2	equ	0xFDD
  8163                           fsr2h	equ	0xFDA
  8164                           fsr2l	equ	0xFD9
  8165                           status	equ	0xFD8
  8166                           
  8167 ;; *************** function _RADIO_DIO3 *****************
  8168 ;; Defined at:
  8169 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  dioMapping      1    0        unsigned char 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : F/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;Total ram usage:        1 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:   11
  8190 ;; This function calls:
  8191 ;;		_RADIO_RegisterRead
  8192 ;;		_RADIO_UnhandledInterrupt
  8193 ;; This function is called by:
  8194 ;;		_LORAWAN_Mainloop
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text50
  8199  007662                     __ptext50:
  8200                           	opt stack 0
  8201  007662                     _RADIO_DIO3:
  8202                           	opt stack 18
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8206                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8207                           
  8208                           ;incstack = 0
  8209  007662  0E40               	movlw	64
  8210  007664  EC63  F039         	call	_RADIO_RegisterRead
  8211                           
  8212                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8213  007668  0E01               	movlw	1
  8214  00766A  EC63  F039         	call	_RADIO_RegisterRead
  8215  00766E  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8216  007670  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8217  007672  0012               	return	
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8221  007674  0E01               	movlw	1
  8222  007676  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8223  00767A                     __end_of_RADIO_DIO3:
  8224                           	opt stack 0
  8225                           tosu	equ	0xFFF
  8226                           tosh	equ	0xFFE
  8227                           tosl	equ	0xFFD
  8228                           pclath	equ	0xFFA
  8229                           tblptru	equ	0xFF8
  8230                           tblptrh	equ	0xFF7
  8231                           tblptrl	equ	0xFF6
  8232                           tablat	equ	0xFF5
  8233                           prodh	equ	0xFF4
  8234                           prodl	equ	0xFF3
  8235                           intcon	equ	0xFF2
  8236                           intcon2	equ	0xFF1
  8237                           intcon3	equ	0xFF0
  8238                           postinc0	equ	0xFEE
  8239                           wreg	equ	0xFE8
  8240                           postinc1	equ	0xFE6
  8241                           postdec1	equ	0xFE5
  8242                           plusw1	equ	0xFE3
  8243                           fsr1h	equ	0xFE2
  8244                           fsr1l	equ	0xFE1
  8245                           indf2	equ	0xFDF
  8246                           postinc2	equ	0xFDE
  8247                           postdec2	equ	0xFDD
  8248                           fsr2h	equ	0xFDA
  8249                           fsr2l	equ	0xFD9
  8250                           status	equ	0xFD8
  8251                           
  8252 ;; *************** function _RADIO_DIO2 *****************
  8253 ;; Defined at:
  8254 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8259 ;;  opMode          1    0        unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : F/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;Total ram usage:        2 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:   12
  8276 ;; This function calls:
  8277 ;;		_RADIO_FHSSChangeChannel
  8278 ;;		_RADIO_RegisterRead
  8279 ;;		_RADIO_UnhandledInterrupt
  8280 ;; This function is called by:
  8281 ;;		_LORAWAN_Mainloop
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text51
  8286  006BCC                     __ptext51:
  8287                           	opt stack 0
  8288  006BCC                     _RADIO_DIO2:
  8289                           	opt stack 17
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8293                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8294                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8295                           
  8296                           ;incstack = 0
  8297  006BCC  0E40               	movlw	64
  8298  006BCE  EC63  F039         	call	_RADIO_RegisterRead
  8299  006BD2  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8300  006BD4  90D8               	bcf	status,0,c
  8301  006BD6  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8302  006BD8  90D8               	bcf	status,0,c
  8303  006BDA  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8304  006BDC  0B03               	andlw	3
  8305  006BDE  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8306                           
  8307                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8308  006BE0  0E01               	movlw	1
  8309  006BE2  EC63  F039         	call	_RADIO_RegisterRead
  8310                           
  8311                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8312  006BE6  0E01               	movlw	1
  8313  006BE8  EC63  F039         	call	_RADIO_RegisterRead
  8314  006BEC  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8315  006BEE  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8316  006BF0  0012               	return	
  8317  006BF2  D003               	goto	l15467
  8318  006BF4                     l15463:
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8322  006BF4  0E01               	movlw	1
  8323  006BF6  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8324  006BFA                     l15467:
  8325                           
  8326                           ; BSR set to: 0
  8327  006BFA  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8328                           
  8329                           ; Switch size 1, requested type "speed"
  8330                           ; Number of cases is 3, Range of values is 0 to 2
  8331                           ; switch strategies available:
  8332                           ; Name         Instructions Cycles
  8333                           ; simple_byte           10     6 (average)
  8334                           ;	Chosen strategy is simple_byte
  8335  006BFC  E102 EF80  F038    	bz	_RADIO_FHSSChangeChannel
  8336  006C02  0A01               	xorlw	1	; case 1
  8337  006C04  E102 EF80  F038    	bz	_RADIO_FHSSChangeChannel
  8338  006C0A  0A03               	xorlw	3	; case 2
  8339  006C0C  E102 EF80  F038    	bz	_RADIO_FHSSChangeChannel
  8340  006C12  D7F0               	goto	l15463
  8341  006C14                     __end_of_RADIO_DIO2:
  8342                           	opt stack 0
  8343                           tosu	equ	0xFFF
  8344                           tosh	equ	0xFFE
  8345                           tosl	equ	0xFFD
  8346                           pclath	equ	0xFFA
  8347                           tblptru	equ	0xFF8
  8348                           tblptrh	equ	0xFF7
  8349                           tblptrl	equ	0xFF6
  8350                           tablat	equ	0xFF5
  8351                           prodh	equ	0xFF4
  8352                           prodl	equ	0xFF3
  8353                           intcon	equ	0xFF2
  8354                           intcon2	equ	0xFF1
  8355                           intcon3	equ	0xFF0
  8356                           postinc0	equ	0xFEE
  8357                           wreg	equ	0xFE8
  8358                           postinc1	equ	0xFE6
  8359                           postdec1	equ	0xFE5
  8360                           plusw1	equ	0xFE3
  8361                           fsr1h	equ	0xFE2
  8362                           fsr1l	equ	0xFE1
  8363                           indf2	equ	0xFDF
  8364                           postinc2	equ	0xFDE
  8365                           postdec2	equ	0xFDD
  8366                           fsr2h	equ	0xFDA
  8367                           fsr2l	equ	0xFD9
  8368                           status	equ	0xFD8
  8369                           
  8370 ;; *************** function _RADIO_DIO1 *****************
  8371 ;; Defined at:
  8372 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;		None
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      void 
  8379 ;; Registers used:
  8380 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8381 ;; Tracked objects:
  8382 ;;		On entry : F/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;Total ram usage:        2 bytes
  8391 ;; Hardware stack levels used:    1
  8392 ;; Hardware stack levels required when called:   17
  8393 ;; This function calls:
  8394 ;;		_RADIO_FHSSChangeChannel
  8395 ;;		_RADIO_RegisterRead
  8396 ;;		_RADIO_RxTimeout
  8397 ;;		_RADIO_UnhandledInterrupt
  8398 ;; This function is called by:
  8399 ;;		_LORAWAN_Mainloop
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text52
  8404  006E54                     __ptext52:
  8405                           	opt stack 0
  8406  006E54                     _RADIO_DIO1:
  8407                           	opt stack 12
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8411                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8412                           
  8413                           ;incstack = 0
  8414  006E54  0E40               	movlw	64
  8415  006E56  EC63  F039         	call	_RADIO_RegisterRead
  8416  006E5A  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8417  006E5C  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8418  006E5E  0B0F               	andlw	15
  8419  006E60  0B03               	andlw	3
  8420  006E62  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8421                           
  8422                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8423  006E64  0E01               	movlw	1
  8424  006E66  EC63  F039         	call	_RADIO_RegisterRead
  8425  006E6A  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8426  006E6C  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8427  006E6E  D00D               	goto	l15455
  8428  006E70  D003               	goto	l15451
  8429  006E72                     l15447:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8433  006E72  0E01               	movlw	1
  8434  006E74  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8435  006E78                     l15451:
  8436                           
  8437                           ; BSR set to: 0
  8438  006E78  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8439                           
  8440                           ; Switch size 1, requested type "speed"
  8441                           ; Number of cases is 2, Range of values is 0 to 1
  8442                           ; switch strategies available:
  8443                           ; Name         Instructions Cycles
  8444                           ; simple_byte            7     4 (average)
  8445                           ;	Chosen strategy is simple_byte
  8446  006E7A  E102 EF15  F039    	bz	_RADIO_RxTimeout
  8447  006E80  0A01               	xorlw	1	; case 1
  8448  006E82  E102 EF80  F038    	bz	_RADIO_FHSSChangeChannel
  8449  006E88  D7F4               	goto	l15447
  8450  006E8A                     l15455:
  8451                           
  8452                           ; BSR set to: 0
  8453  006E8A  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8454                           
  8455                           ; Switch size 1, requested type "speed"
  8456                           ; Number of cases is 1, Range of values is 0 to 0
  8457                           ; switch strategies available:
  8458                           ; Name         Instructions Cycles
  8459                           ; simple_byte            4     3 (average)
  8460                           ;	Chosen strategy is simple_byte
  8461  006E8C  0012               	return	
  8462  006E8E                     __end_of_RADIO_DIO1:
  8463                           	opt stack 0
  8464                           tosu	equ	0xFFF
  8465                           tosh	equ	0xFFE
  8466                           tosl	equ	0xFFD
  8467                           pclath	equ	0xFFA
  8468                           tblptru	equ	0xFF8
  8469                           tblptrh	equ	0xFF7
  8470                           tblptrl	equ	0xFF6
  8471                           tablat	equ	0xFF5
  8472                           prodh	equ	0xFF4
  8473                           prodl	equ	0xFF3
  8474                           intcon	equ	0xFF2
  8475                           intcon2	equ	0xFF1
  8476                           intcon3	equ	0xFF0
  8477                           postinc0	equ	0xFEE
  8478                           wreg	equ	0xFE8
  8479                           postinc1	equ	0xFE6
  8480                           postdec1	equ	0xFE5
  8481                           plusw1	equ	0xFE3
  8482                           fsr1h	equ	0xFE2
  8483                           fsr1l	equ	0xFE1
  8484                           indf2	equ	0xFDF
  8485                           postinc2	equ	0xFDE
  8486                           postdec2	equ	0xFDD
  8487                           fsr2h	equ	0xFDA
  8488                           fsr2l	equ	0xFD9
  8489                           status	equ	0xFD8
  8490                           
  8491 ;; *************** function _RADIO_RxTimeout *****************
  8492 ;; Defined at:
  8493 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : F/0
  8504 ;;		On exit  : D/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;Total ram usage:        0 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:   16
  8514 ;; This function calls:
  8515 ;;		_LORAWAN_RxTimeout
  8516 ;;		_RADIO_RegisterWrite
  8517 ;;		_RADIO_WriteMode
  8518 ;;		_SwTimerStop
  8519 ;; This function is called by:
  8520 ;;		_RADIO_DIO1
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text53
  8525  00722A                     __ptext53:
  8526                           	opt stack 0
  8527  00722A                     _RADIO_RxTimeout:
  8528                           	opt stack 12
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8532                           
  8533                           ;incstack = 0
  8534  00722A  0101               	movlb	1	; () banked
  8535  00722C  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8536  00722E  EC78  F03A         	call	_SwTimerStop
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8540  007232  0E80               	movlw	128
  8541  007234  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8542  007236  0E12               	movlw	18
  8543  007238  EC4B  F03A         	call	_RADIO_RegisterWrite
  8544                           
  8545                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8546  00723C  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8547  007240  0E00               	movlw	0
  8548  007242  0100               	movlb	0	; () banked
  8549  007244  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8550  007246  EC5F  F028         	call	_RADIO_WriteMode
  8551                           
  8552                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8553  00724A  0101               	movlb	1	; () banked
  8554  00724C  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8555                           
  8556                           ; BSR set to: 1
  8557                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8558  00724E  EF62  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8559  007252                     __end_of_RADIO_RxTimeout:
  8560                           	opt stack 0
  8561                           tosu	equ	0xFFF
  8562                           tosh	equ	0xFFE
  8563                           tosl	equ	0xFFD
  8564                           pclath	equ	0xFFA
  8565                           tblptru	equ	0xFF8
  8566                           tblptrh	equ	0xFF7
  8567                           tblptrl	equ	0xFF6
  8568                           tablat	equ	0xFF5
  8569                           prodh	equ	0xFF4
  8570                           prodl	equ	0xFF3
  8571                           intcon	equ	0xFF2
  8572                           intcon2	equ	0xFF1
  8573                           intcon3	equ	0xFF0
  8574                           postinc0	equ	0xFEE
  8575                           wreg	equ	0xFE8
  8576                           postinc1	equ	0xFE6
  8577                           postdec1	equ	0xFE5
  8578                           plusw1	equ	0xFE3
  8579                           fsr1h	equ	0xFE2
  8580                           fsr1l	equ	0xFE1
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8589 ;; Defined at:
  8590 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  irqFlags        1    0        unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : F/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;Total ram usage:        0 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:   11
  8611 ;; This function calls:
  8612 ;;		_RADIO_RegisterRead
  8613 ;;		_RADIO_RegisterWrite
  8614 ;;		_RADIO_WriteFrequency
  8615 ;; This function is called by:
  8616 ;;		_RADIO_DIO1
  8617 ;;		_RADIO_DIO2
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text54
  8622  007100                     __ptext54:
  8623                           	opt stack 0
  8624  007100                     _RADIO_FHSSChangeChannel:
  8625                           	opt stack 17
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8629                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8630                           
  8631                           ;incstack = 0
  8632  007100  0E12               	movlw	18
  8633  007102  EC63  F039         	call	_RADIO_RegisterRead
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8637  007106  0101               	movlb	1	; () banked
  8638  007108  519C               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8639  00710A  119D               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8640  00710C  E00A               	bz	l592
  8641                           
  8642                           ; BSR set to: 1
  8643                           ;radio_driver_SX1276.c: 1164: {
  8644                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8645  00710E  51AD               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8646  007110  11AE               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8647  007112  E007               	bz	l592
  8648                           
  8649                           ; BSR set to: 1
  8650                           ;radio_driver_SX1276.c: 1166: {
  8651                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8652  007114  0100               	movlb	0	; () banked
  8653  007116  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8654  007118  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8655  00711A  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8656  00711C  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8657  00711E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
  8658  007122                     l592:
  8659                           
  8660                           ;radio_driver_SX1276.c: 1168: }
  8661                           ;radio_driver_SX1276.c: 1169: }
  8662                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8663  007122  0E02               	movlw	2
  8664  007124  0100               	movlb	0	; () banked
  8665  007126  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8666  007128  0E12               	movlw	18
  8667  00712A  EF4B  F03A         	goto	_RADIO_RegisterWrite
  8668  00712E                     __end_of_RADIO_FHSSChangeChannel:
  8669                           	opt stack 0
  8670                           tosu	equ	0xFFF
  8671                           tosh	equ	0xFFE
  8672                           tosl	equ	0xFFD
  8673                           pclath	equ	0xFFA
  8674                           tblptru	equ	0xFF8
  8675                           tblptrh	equ	0xFF7
  8676                           tblptrl	equ	0xFF6
  8677                           tablat	equ	0xFF5
  8678                           prodh	equ	0xFF4
  8679                           prodl	equ	0xFF3
  8680                           intcon	equ	0xFF2
  8681                           intcon2	equ	0xFF1
  8682                           intcon3	equ	0xFF0
  8683                           postinc0	equ	0xFEE
  8684                           wreg	equ	0xFE8
  8685                           postinc1	equ	0xFE6
  8686                           postdec1	equ	0xFE5
  8687                           plusw1	equ	0xFE3
  8688                           fsr1h	equ	0xFE2
  8689                           fsr1l	equ	0xFE1
  8690                           indf2	equ	0xFDF
  8691                           postinc2	equ	0xFDE
  8692                           postdec2	equ	0xFDD
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function _RADIO_DIO0 *****************
  8698 ;; Defined at:
  8699 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;		None
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;  opMode          1  135[BANK0 ] unsigned char 
  8704 ;;  dioMapping      1  134[BANK0 ] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : F/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;Total ram usage:        4 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:   17
  8721 ;; This function calls:
  8722 ;;		_RADIO_FSKPacketSent
  8723 ;;		_RADIO_FSKPayloadReady
  8724 ;;		_RADIO_RegisterRead
  8725 ;;		_RADIO_RxDone
  8726 ;;		_RADIO_TxDone
  8727 ;;		_RADIO_UnhandledInterrupt
  8728 ;; This function is called by:
  8729 ;;		_LORAWAN_Mainloop
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text55
  8734  006460                     __ptext55:
  8735                           	opt stack 0
  8736  006460                     _RADIO_DIO0:
  8737                           	opt stack 12
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8741                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8742                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8743                           
  8744                           ;incstack = 0
  8745  006460  0E40               	movlw	64
  8746  006462  EC63  F039         	call	_RADIO_RegisterRead
  8747  006466  6FE4               	movwf	??_RADIO_DIO0& (0+255),b
  8748  006468  0E06               	movlw	6
  8749  00646A  6FE5               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8750  00646C                     u18065:
  8751  00646C  90D8               	bcf	status,0,c
  8752  00646E  33E4               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8753  006470  2FE5               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8754  006472  D7FC               	goto	u18065
  8755  006474  51E4               	movf	??_RADIO_DIO0& (0+255),w,b
  8756  006476  0B03               	andlw	3
  8757  006478  6FE6               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8758                           
  8759                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8760  00647A  0E01               	movlw	1
  8761  00647C  EC63  F039         	call	_RADIO_RegisterRead
  8762  006480  6FE7               	movwf	RADIO_DIO0@opMode& (0+255),b
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8766  006482  AFE7               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8767  006484  D01C               	goto	l15437
  8768  006486  D003               	goto	l15421
  8769  006488                     l15417:
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8773  006488  0E01               	movlw	1
  8774  00648A  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8775  00648E                     l15421:
  8776                           
  8777                           ; BSR set to: 0
  8778  00648E  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8779                           
  8780                           ; Switch size 1, requested type "speed"
  8781                           ; Number of cases is 2, Range of values is 0 to 1
  8782                           ; switch strategies available:
  8783                           ; Name         Instructions Cycles
  8784                           ; simple_byte            7     4 (average)
  8785                           ;	Chosen strategy is simple_byte
  8786  006490  E102 EFCB  F028    	bz	_RADIO_RxDone
  8787  006496  0A01               	xorlw	1	; case 1
  8788  006498  E102 EFCA  F01D    	bz	_RADIO_TxDone
  8789  00649E  D7F4               	goto	l15417
  8790  0064A0                     l15423:
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8794  0064A0  0E07               	movlw	7
  8795  0064A2  17E7               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8796                           
  8797                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8798  0064A4  0E03               	movlw	3
  8799  0064A6  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8800  0064A8  E102               	bnz	l15427
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;radio_driver_SX1276.c: 1209: {
  8804                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8805  0064AA  EF01  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8806  0064AE                     l15427:
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8810  0064AE  0E05               	movlw	5
  8811  0064B0  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8812  0064B2  E102               	bnz	l15433
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;radio_driver_SX1276.c: 1214: {
  8816                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8817  0064B4  EF2F  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8818  0064B8                     l15433:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8822  0064B8  0E00               	movlw	0
  8823  0064BA  EF9A  F039         	goto	_RADIO_UnhandledInterrupt
  8824  0064BE                     l15437:
  8825                           
  8826                           ; BSR set to: 0
  8827  0064BE  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8828                           
  8829                           ; Switch size 1, requested type "speed"
  8830                           ; Number of cases is 1, Range of values is 0 to 0
  8831                           ; switch strategies available:
  8832                           ; Name         Instructions Cycles
  8833                           ; simple_byte            4     3 (average)
  8834                           ;	Chosen strategy is simple_byte
  8835  0064C0  E0EF               	bz	l15423
  8836  0064C2  D7FA               	goto	l15433
  8837  0064C4                     __end_of_RADIO_DIO0:
  8838                           	opt stack 0
  8839                           tosu	equ	0xFFF
  8840                           tosh	equ	0xFFE
  8841                           tosl	equ	0xFFD
  8842                           pclath	equ	0xFFA
  8843                           tblptru	equ	0xFF8
  8844                           tblptrh	equ	0xFF7
  8845                           tblptrl	equ	0xFF6
  8846                           tablat	equ	0xFF5
  8847                           prodh	equ	0xFF4
  8848                           prodl	equ	0xFF3
  8849                           intcon	equ	0xFF2
  8850                           intcon2	equ	0xFF1
  8851                           intcon3	equ	0xFF0
  8852                           postinc0	equ	0xFEE
  8853                           wreg	equ	0xFE8
  8854                           postinc1	equ	0xFE6
  8855                           postdec1	equ	0xFE5
  8856                           plusw1	equ	0xFE3
  8857                           fsr1h	equ	0xFE2
  8858                           fsr1l	equ	0xFE1
  8859                           indf2	equ	0xFDF
  8860                           postinc2	equ	0xFDE
  8861                           postdec2	equ	0xFDD
  8862                           fsr2h	equ	0xFDA
  8863                           fsr2l	equ	0xFD9
  8864                           status	equ	0xFD8
  8865                           
  8866 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8867 ;; Defined at:
  8868 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  modulation      1    wreg     enum E7751
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  modulation      1    8[BANK0 ] enum E7751
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  1    wreg      void 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2, status,0, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : F/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8886 ;;Total ram usage:        1 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:   10
  8889 ;; This function calls:
  8890 ;;		_RADIO_RegisterWrite
  8891 ;; This function is called by:
  8892 ;;		_RADIO_DIO0
  8893 ;;		_RADIO_DIO1
  8894 ;;		_RADIO_DIO2
  8895 ;;		_RADIO_DIO3
  8896 ;;		_RADIO_DIO4
  8897 ;;		_RADIO_DIO5
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text56
  8902  007334                     __ptext56:
  8903                           	opt stack 0
  8904  007334                     _RADIO_UnhandledInterrupt:
  8905                           	opt stack 18
  8906                           
  8907                           ;incstack = 0
  8908                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8909  007334  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8910                           
  8911                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8912  007336  0100               	movlb	0	; () banked
  8913  007338  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8914  00733A  E104               	bnz	l14987
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;radio_driver_SX1276.c: 1145: {
  8918                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8919  00733C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8920  00733E  0E12               	movlw	18
  8921  007340  EF4B  F03A         	goto	_RADIO_RegisterWrite
  8922  007344                     l14987:
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;radio_driver_SX1276.c: 1148: else
  8926                           ;radio_driver_SX1276.c: 1149: {
  8927                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8928  007344  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8929  007346  0E3E               	movlw	62
  8930  007348  EC4B  F03A         	call	_RADIO_RegisterWrite
  8931                           
  8932                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8933  00734C  0100               	movlb	0	; () banked
  8934  00734E  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8935  007350  0E3F               	movlw	63
  8936  007352  EF4B  F03A         	goto	_RADIO_RegisterWrite
  8937  007356                     __end_of_RADIO_UnhandledInterrupt:
  8938                           	opt stack 0
  8939                           tosu	equ	0xFFF
  8940                           tosh	equ	0xFFE
  8941                           tosl	equ	0xFFD
  8942                           pclath	equ	0xFFA
  8943                           tblptru	equ	0xFF8
  8944                           tblptrh	equ	0xFF7
  8945                           tblptrl	equ	0xFF6
  8946                           tablat	equ	0xFF5
  8947                           prodh	equ	0xFF4
  8948                           prodl	equ	0xFF3
  8949                           intcon	equ	0xFF2
  8950                           intcon2	equ	0xFF1
  8951                           intcon3	equ	0xFF0
  8952                           postinc0	equ	0xFEE
  8953                           wreg	equ	0xFE8
  8954                           postinc1	equ	0xFE6
  8955                           postdec1	equ	0xFE5
  8956                           plusw1	equ	0xFE3
  8957                           fsr1h	equ	0xFE2
  8958                           fsr1l	equ	0xFE1
  8959                           indf2	equ	0xFDF
  8960                           postinc2	equ	0xFDE
  8961                           postdec2	equ	0xFDD
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966 ;; *************** function _RADIO_TxDone *****************
  8967 ;; Defined at:
  8968 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : F/0
  8979 ;;		On exit  : C/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8983 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;Total ram usage:       12 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:   15
  8989 ;; This function calls:
  8990 ;;		_LORAWAN_TxDone
  8991 ;;		_RADIO_RegisterWrite
  8992 ;;		_RADIO_WriteMode
  8993 ;;		_SwTimerReadValue
  8994 ;;		_SwTimerStop
  8995 ;; This function is called by:
  8996 ;;		_RADIO_DIO0
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text57
  9001  003B94                     __ptext57:
  9002                           	opt stack 0
  9003  003B94                     _RADIO_TxDone:
  9004                           	opt stack 13
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  9008                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9009                           
  9010                           ;incstack = 0
  9011  003B94  0101               	movlb	1	; () banked
  9012  003B96  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9013  003B98  EC78  F03A         	call	_SwTimerStop
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  9017  003B9C  0E08               	movlw	8
  9018  003B9E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9019  003BA0  0E12               	movlw	18
  9020  003BA2  EC4B  F03A         	call	_RADIO_RegisterWrite
  9021                           
  9022                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9023  003BA6  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9024  003BAA  0E00               	movlw	0
  9025  003BAC  0100               	movlb	0	; () banked
  9026  003BAE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9027  003BB0  EC5F  F028         	call	_RADIO_WriteMode
  9028                           
  9029                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  9030  003BB4  0101               	movlb	1	; () banked
  9031  003BB6  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9032                           
  9033                           ; BSR set to: 1
  9034                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9035  003BB8  B9A1               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9036  003BBA  0012               	return	
  9037                           
  9038                           ; BSR set to: 1
  9039                           ;radio_driver_SX1276.c: 1087: {
  9040                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9041  003BBC  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9042  003BBE  EC91  F036         	call	_SwTimerReadValue
  9043  003BC2  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9044  003BC4  E107               	bnz	u17280
  9045  003BC6  0E1F               	movlw	31
  9046  003BC8  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  9047  003BCA  0EAC               	movlw	172
  9048  003BCC  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9049  003BCE  0EDF               	movlw	223
  9050  003BD0  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9051  003BD2  E346               	bnc	l14953
  9052  003BD4                     u17280:
  9053                           
  9054                           ; BSR set to: 0
  9055  003BD4  0101               	movlb	1	; () banked
  9056  003BD6  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9057  003BD8  EC91  F036         	call	_SwTimerReadValue
  9058  003BDC  0E0D               	movlw	13
  9059  003BDE  D005               	goto	u17290
  9060  003BE0                     u17295:
  9061  003BE0  90D8               	bcf	status,0,c
  9062  003BE2  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9063  003BE4  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9064  003BE6  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9065  003BE8  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9066  003BEA                     u17290:
  9067  003BEA  2EE8               	decfsz	wreg,f,c
  9068  003BEC  D7F9               	goto	u17295
  9069  003BEE  0E7D               	movlw	125
  9070  003BF0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9071  003BF2  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9072  003BF6  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9073  003BFA  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9074  003BFC  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9075  003BFE  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9076  003C00  50F3               	movf	prodl,w,c
  9077  003C02  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9078  003C04  50F4               	movf	prodh,w,c
  9079  003C06  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9080  003C08  0E00               	movlw	0
  9081  003C0A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9082  003C0C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9083  003C0E  50F3               	movf	prodl,w,c
  9084  003C10  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9085  003C12  50F4               	movf	prodh,w,c
  9086  003C14  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9087  003C16  0E00               	movlw	0
  9088  003C18  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9089  003C1A  0E7D               	movlw	125
  9090  003C1C  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9091  003C1E  50F3               	movf	prodl,w,c
  9092  003C20  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9093  003C22  50F4               	movf	prodh,w,c
  9094  003C24  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9095  003C26  0E00               	movlw	0
  9096  003C28  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9097  003C2A  50F3               	movf	prodl,w,c
  9098  003C2C  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9099  003C2E  50F4               	movf	prodh,w,c
  9100  003C30  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9101  003C32  0E00               	movlw	0
  9102  003C34  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9103  003C36  50F3               	movf	prodl,w,c
  9104  003C38  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9105  003C3A  50F4               	movf	prodh,w,c
  9106  003C3C  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9107  003C3E  0E7D               	movlw	125
  9108  003C40  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9109  003C42  50F3               	movf	prodl,w,c
  9110  003C44  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9111  003C46  0E00               	movlw	0
  9112  003C48  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9113  003C4A  50F3               	movf	prodl,w,c
  9114  003C4C  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9115  003C4E  0E00               	movlw	0
  9116  003C50  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9117  003C52  50F3               	movf	prodl,w,c
  9118  003C54  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9119  003C56  0E00               	movlw	0
  9120  003C58  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9121  003C5A  50F3               	movf	prodl,w,c
  9122  003C5C  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9123  003C5E  D045               	goto	L4
  9124  003C60                     l14953:
  9125                           
  9126                           ; BSR set to: 0
  9127  003C60  0101               	movlb	1	; () banked
  9128  003C62  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9129  003C64  EC91  F036         	call	_SwTimerReadValue
  9130  003C68  0E7D               	movlw	125
  9131  003C6A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9132  003C6C  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9133  003C70  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9134  003C74  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9135  003C76  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9136  003C78  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9137  003C7A  50F3               	movf	prodl,w,c
  9138  003C7C  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9139  003C7E  50F4               	movf	prodh,w,c
  9140  003C80  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9141  003C82  0E00               	movlw	0
  9142  003C84  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9143  003C86  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9144  003C88  50F3               	movf	prodl,w,c
  9145  003C8A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9146  003C8C  50F4               	movf	prodh,w,c
  9147  003C8E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9148  003C90  0E00               	movlw	0
  9149  003C92  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9150  003C94  0E7D               	movlw	125
  9151  003C96  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9152  003C98  50F3               	movf	prodl,w,c
  9153  003C9A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9154  003C9C  50F4               	movf	prodh,w,c
  9155  003C9E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9156  003CA0  0E00               	movlw	0
  9157  003CA2  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9158  003CA4  50F3               	movf	prodl,w,c
  9159  003CA6  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9160  003CA8  50F4               	movf	prodh,w,c
  9161  003CAA  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9162  003CAC  0E00               	movlw	0
  9163  003CAE  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9164  003CB0  50F3               	movf	prodl,w,c
  9165  003CB2  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9166  003CB4  50F4               	movf	prodh,w,c
  9167  003CB6  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9168  003CB8  0E7D               	movlw	125
  9169  003CBA  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9170  003CBC  50F3               	movf	prodl,w,c
  9171  003CBE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9172  003CC0  0E00               	movlw	0
  9173  003CC2  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9174  003CC4  50F3               	movf	prodl,w,c
  9175  003CC6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9176  003CC8  0E00               	movlw	0
  9177  003CCA  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9178  003CCC  50F3               	movf	prodl,w,c
  9179  003CCE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9180  003CD0  0E00               	movlw	0
  9181  003CD2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9182  003CD4  50F3               	movf	prodl,w,c
  9183  003CD6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9184  003CD8  0E0D               	movlw	13
  9185  003CDA  D005               	goto	u17300
  9186  003CDC                     u17305:
  9187  003CDC  90D8               	bcf	status,0,c
  9188  003CDE  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9189  003CE0  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9190  003CE2  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9191  003CE4  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9192  003CE6                     u17300:
  9193  003CE6  2EE8               	decfsz	wreg,f,c
  9194  003CE8  D7F9               	goto	u17305
  9195  003CEA                     L4:
  9196  003CEA  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1211
  9197  003CEE  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1211+1
  9198  003CF2  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1211+2
  9199  003CF6  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1211+3
  9200                           
  9201                           ; BSR set to: 0
  9202  003CFA  51DA               	movf	_RADIO_TxDone$1211& (0+255),w,b
  9203  003CFC  0820               	sublw	32
  9204  003CFE  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9205  003D00  0E4E               	movlw	78
  9206  003D02  55DB               	subfwb	(_RADIO_TxDone$1211+1)& (0+255),w,b
  9207  003D04  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9208  003D06  0E00               	movlw	0
  9209  003D08  55DC               	subfwb	(_RADIO_TxDone$1211+2)& (0+255),w,b
  9210  003D0A  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9211  003D0C  0E00               	movlw	0
  9212  003D0E  55DD               	subfwb	(_RADIO_TxDone$1211+3)& (0+255),w,b
  9213  003D10  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9217  003D12  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9218  003D16  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9219  003D1A  EF7D  F005         	goto	_LORAWAN_TxDone	;wreg free
  9220  003D1E                     __end_of_RADIO_TxDone:
  9221                           	opt stack 0
  9222                           tosu	equ	0xFFF
  9223                           tosh	equ	0xFFE
  9224                           tosl	equ	0xFFD
  9225                           pclath	equ	0xFFA
  9226                           tblptru	equ	0xFF8
  9227                           tblptrh	equ	0xFF7
  9228                           tblptrl	equ	0xFF6
  9229                           tablat	equ	0xFF5
  9230                           prodh	equ	0xFF4
  9231                           prodl	equ	0xFF3
  9232                           intcon	equ	0xFF2
  9233                           intcon2	equ	0xFF1
  9234                           intcon3	equ	0xFF0
  9235                           postinc0	equ	0xFEE
  9236                           wreg	equ	0xFE8
  9237                           postinc1	equ	0xFE6
  9238                           postdec1	equ	0xFE5
  9239                           plusw1	equ	0xFE3
  9240                           fsr1h	equ	0xFE2
  9241                           fsr1l	equ	0xFE1
  9242                           indf2	equ	0xFDF
  9243                           postinc2	equ	0xFDE
  9244                           postdec2	equ	0xFDD
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _RADIO_RxDone *****************
  9250 ;; Defined at:
  9251 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  i               1  131[BANK0 ] unsigned char 
  9256 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  1    wreg      void 
  9259 ;; Registers used:
  9260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : F/0
  9263 ;;		On exit  : D/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9270 ;;Total ram usage:        2 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:   16
  9273 ;; This function calls:
  9274 ;;		_HALSPICSAssert
  9275 ;;		_HALSPICSDeassert
  9276 ;;		_HALSPISend
  9277 ;;		_LORAWAN_RxDone
  9278 ;;		_RADIO_RegisterRead
  9279 ;;		_RADIO_RegisterWrite
  9280 ;;		_RADIO_WriteMode
  9281 ;;		_SwTimerStop
  9282 ;;		___abdiv
  9283 ;; This function is called by:
  9284 ;;		_RADIO_DIO0
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text58
  9289  005196                     __ptext58:
  9290                           	opt stack 0
  9291  005196                     _RADIO_RxDone:
  9292                           	opt stack 12
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9296                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9297                           
  9298                           ;incstack = 0
  9299  005196  0E12               	movlw	18
  9300  005198  EC63  F039         	call	_RADIO_RegisterRead
  9301  00519C  6FE2               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9302                           
  9303                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9304  00519E  0E70               	movlw	112
  9305  0051A0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9306  0051A2  0E12               	movlw	18
  9307  0051A4  EC4B  F03A         	call	_RADIO_RegisterWrite
  9308                           
  9309                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9310  0051A8  0100               	movlb	0	; () banked
  9311  0051AA  51E2               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9312  0051AC  0B50               	andlw	80
  9313  0051AE  0A50               	xorlw	80
  9314  0051B0  A4D8               	btfss	status,2,c
  9315  0051B2  0012               	return	
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;radio_driver_SX1276.c: 969: {
  9319                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9320  0051B4  0101               	movlb	1	; () banked
  9321  0051B6  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9322  0051B8  EC78  F03A         	call	_SwTimerStop
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9326  0051BC  0E1C               	movlw	28
  9327  0051BE  EC63  F039         	call	_RADIO_RegisterRead
  9328  0051C2  6FE3               	movwf	RADIO_RxDone@i& (0+255),b
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9332  0051C4  0101               	movlb	1	; () banked
  9333  0051C6  519A               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9334  0051C8  E004               	bz	l14855
  9335                           
  9336                           ; BSR set to: 1
  9337  0051CA  0100               	movlb	0	; () banked
  9338  0051CC  ABE2               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9339                           
  9340                           ; BSR set to: 0
  9341  0051CE  ADE3               	btfss	RADIO_RxDone@i& (0+255),6,b
  9342  0051D0  D037               	goto	l14877
  9343  0051D2                     l14855:
  9344                           
  9345                           ;radio_driver_SX1276.c: 976: {
  9346                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9347  0051D2  0E13               	movlw	19
  9348  0051D4  EC63  F039         	call	_RADIO_RegisterRead
  9349  0051D8  0101               	movlb	1	; () banked
  9350  0051DA  6FA2               	movwf	(_RadioConfiguration+36)& (0+255),b
  9351                           
  9352                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9353  0051DC  0100               	movlb	0	; () banked
  9354  0051DE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9355  0051E0  0E0D               	movlw	13
  9356  0051E2  EC4B  F03A         	call	_RADIO_RegisterWrite
  9357                           
  9358                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9359  0051E6  EC88  F03C         	call	_HALSPICSAssert	;wreg free
  9360                           
  9361                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9362  0051EA  0E00               	movlw	0
  9363  0051EC  EC30  F03C         	call	_HALSPISend
  9364                           
  9365                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9366  0051F0  0100               	movlb	0	; () banked
  9367  0051F2  6BE3               	clrf	RADIO_RxDone@i& (0+255),b
  9368  0051F4  D00D               	goto	l14867
  9369  0051F6                     l14863:
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;radio_driver_SX1276.c: 990: {
  9373                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9374  0051F6  51E3               	movf	RADIO_RxDone@i& (0+255),w,b
  9375  0051F8  0101               	movlb	1	; () banked
  9376  0051FA  25A3               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9377  0051FC  6ED9               	movwf	fsr2l,c
  9378  0051FE  0E00               	movlw	0
  9379  005200  21A4               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9380  005202  6EDA               	movwf	fsr2h,c
  9381  005204  0EFF               	movlw	255
  9382  005206  EC30  F03C         	call	_HALSPISend
  9383  00520A  6EDF               	movwf	indf2,c
  9384  00520C  0100               	movlb	0	; () banked
  9385  00520E  2BE3               	incf	RADIO_RxDone@i& (0+255),f,b
  9386  005210                     l14867:
  9387                           
  9388                           ; BSR set to: 0
  9389  005210  0101               	movlb	1	; () banked
  9390  005212  51A2               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9391  005214  0100               	movlb	0	; () banked
  9392  005216  5DE3               	subwf	RADIO_RxDone@i& (0+255),w,b
  9393  005218  E3EE               	bnc	l14863
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;radio_driver_SX1276.c: 992: }
  9397                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9398  00521A  EC86  F03C         	call	_HALSPICSDeassert	;wreg free
  9399                           
  9400                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9401  00521E  0101               	movlb	1	; () banked
  9402  005220  85A1               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9403                           
  9404                           ; BSR set to: 1
  9405                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9406  005222  0E19               	movlw	25
  9407  005224  EC63  F039         	call	_RADIO_RegisterRead
  9408  005228  0101               	movlb	1	; () banked
  9409  00522A  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9413  00522C  0E04               	movlw	4
  9414  00522E  0100               	movlb	0	; () banked
  9415  005230  6F64               	movwf	___abdiv@divisor& (0+255),b
  9416  005232  0101               	movlb	1	; () banked
  9417  005234  51B0               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9418  005236  EC3B  F034         	call	___abdiv
  9419  00523A  0101               	movlb	1	; () banked
  9420  00523C  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9421                           
  9422                           ;radio_driver_SX1276.c: 998: }
  9423  00523E  D002               	goto	l14879
  9424  005240                     l14877:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;radio_driver_SX1276.c: 999: else
  9428                           ;radio_driver_SX1276.c: 1000: {
  9429                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9430  005240  0101               	movlb	1	; () banked
  9431  005242  87A1               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9432  005244                     l14879:
  9433                           
  9434                           ; BSR set to: 1
  9435                           ;radio_driver_SX1276.c: 1003: }
  9436                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9437  005244  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9438  005248  0E00               	movlw	0
  9439  00524A  0100               	movlb	0	; () banked
  9440  00524C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9441  00524E  EC5F  F028         	call	_RADIO_WriteMode
  9442                           
  9443                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9444  005252  0101               	movlb	1	; () banked
  9445  005254  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9446                           
  9447                           ; BSR set to: 1
  9448                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9449  005256  C1A3  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9450  00525A  C1A4  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9451  00525E  C1A2  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9452  005262  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9453  005266                     __end_of_RADIO_RxDone:
  9454                           	opt stack 0
  9455                           tosu	equ	0xFFF
  9456                           tosh	equ	0xFFE
  9457                           tosl	equ	0xFFD
  9458                           pclath	equ	0xFFA
  9459                           tblptru	equ	0xFF8
  9460                           tblptrh	equ	0xFF7
  9461                           tblptrl	equ	0xFF6
  9462                           tablat	equ	0xFF5
  9463                           prodh	equ	0xFF4
  9464                           prodl	equ	0xFF3
  9465                           intcon	equ	0xFF2
  9466                           intcon2	equ	0xFF1
  9467                           intcon3	equ	0xFF0
  9468                           postinc0	equ	0xFEE
  9469                           wreg	equ	0xFE8
  9470                           postinc1	equ	0xFE6
  9471                           postdec1	equ	0xFE5
  9472                           plusw1	equ	0xFE3
  9473                           fsr1h	equ	0xFE2
  9474                           fsr1l	equ	0xFE1
  9475                           indf2	equ	0xFDF
  9476                           postinc2	equ	0xFDE
  9477                           postdec2	equ	0xFDD
  9478                           fsr2h	equ	0xFDA
  9479                           fsr2l	equ	0xFD9
  9480                           status	equ	0xFD8
  9481                           
  9482 ;; *************** function ___abdiv *****************
  9483 ;; Defined at:
  9484 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  dividend        1    wreg     char 
  9487 ;;  divisor         1    4[BANK0 ] char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  dividend        1    8[BANK0 ] char 
  9490 ;;  quotient        1    7[BANK0 ] char 
  9491 ;;  sign            1    6[BANK0 ] unsigned char 
  9492 ;;  counter         1    5[BANK0 ] unsigned char 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      char 
  9495 ;; Registers used:
  9496 ;;		wreg, status,2, status,0
  9497 ;; Tracked objects:
  9498 ;;		On entry : F/1
  9499 ;;		On exit  : F/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9502 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;Total ram usage:        5 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; Hardware stack levels required when called:    7
  9509 ;; This function calls:
  9510 ;;		Nothing
  9511 ;; This function is called by:
  9512 ;;		_RADIO_RxDone
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text59
  9517  006876                     __ptext59:
  9518                           	opt stack 0
  9519  006876                     ___abdiv:
  9520                           	opt stack 20
  9521                           
  9522                           ;incstack = 0
  9523                           ;___abdiv@dividend stored from wreg
  9524  006876  0100               	movlb	0	; () banked
  9525  006878  6F68               	movwf	___abdiv@dividend& (0+255),b
  9526  00687A  6B66               	clrf	___abdiv@sign& (0+255),b
  9527                           
  9528                           ; BSR set to: 0
  9529  00687C  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9530  00687E  D003               	goto	l14751
  9531                           
  9532                           ; BSR set to: 0
  9533  006880  6D64               	negf	___abdiv@divisor& (0+255),b
  9534                           
  9535                           ; BSR set to: 0
  9536  006882  0E01               	movlw	1
  9537  006884  6F66               	movwf	___abdiv@sign& (0+255),b
  9538  006886                     l14751:
  9539                           
  9540                           ; BSR set to: 0
  9541  006886  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9542  006888  D003               	goto	l14757
  9543                           
  9544                           ; BSR set to: 0
  9545  00688A  6D68               	negf	___abdiv@dividend& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548  00688C  0E01               	movlw	1
  9549  00688E  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9550  006890                     l14757:
  9551                           
  9552                           ; BSR set to: 0
  9553  006890  6B67               	clrf	___abdiv@quotient& (0+255),b
  9554                           
  9555                           ; BSR set to: 0
  9556  006892  5164               	movf	___abdiv@divisor& (0+255),w,b
  9557  006894  E014               	bz	l14779
  9558                           
  9559                           ; BSR set to: 0
  9560  006896  0E01               	movlw	1
  9561  006898  6F65               	movwf	___abdiv@counter& (0+255),b
  9562  00689A  D003               	goto	l14767
  9563  00689C                     l14763:
  9564                           
  9565                           ; BSR set to: 0
  9566  00689C  90D8               	bcf	status,0,c
  9567  00689E  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9568                           
  9569                           ; BSR set to: 0
  9570  0068A0  2B65               	incf	___abdiv@counter& (0+255),f,b
  9571  0068A2                     l14767:
  9572                           
  9573                           ; BSR set to: 0
  9574  0068A2  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9575  0068A4  D7FB               	goto	l14763
  9576  0068A6                     l14769:
  9577                           
  9578                           ; BSR set to: 0
  9579  0068A6  90D8               	bcf	status,0,c
  9580  0068A8  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9581  0068AA  5164               	movf	___abdiv@divisor& (0+255),w,b
  9582  0068AC  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9583  0068AE  E303               	bnc	l14775
  9584                           
  9585                           ; BSR set to: 0
  9586  0068B0  5164               	movf	___abdiv@divisor& (0+255),w,b
  9587  0068B2  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9588                           
  9589                           ; BSR set to: 0
  9590  0068B4  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9591  0068B6                     l14775:
  9592                           
  9593                           ; BSR set to: 0
  9594  0068B6  90D8               	bcf	status,0,c
  9595  0068B8  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  0068BA  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9599  0068BC  D7F4               	goto	l14769
  9600  0068BE                     l14779:
  9601                           
  9602                           ; BSR set to: 0
  9603  0068BE  5166               	movf	___abdiv@sign& (0+255),w,b
  9604  0068C0  E001               	bz	l14783
  9605                           
  9606                           ; BSR set to: 0
  9607  0068C2  6D67               	negf	___abdiv@quotient& (0+255),b
  9608  0068C4                     l14783:
  9609                           
  9610                           ; BSR set to: 0
  9611  0068C4  5167               	movf	___abdiv@quotient& (0+255),w,b
  9612                           
  9613                           ; BSR set to: 0
  9614  0068C6  0012               	return		;funcret
  9615  0068C8                     __end_of___abdiv:
  9616                           	opt stack 0
  9617                           tosu	equ	0xFFF
  9618                           tosh	equ	0xFFE
  9619                           tosl	equ	0xFFD
  9620                           pclath	equ	0xFFA
  9621                           tblptru	equ	0xFF8
  9622                           tblptrh	equ	0xFF7
  9623                           tblptrl	equ	0xFF6
  9624                           tablat	equ	0xFF5
  9625                           prodh	equ	0xFF4
  9626                           prodl	equ	0xFF3
  9627                           intcon	equ	0xFF2
  9628                           intcon2	equ	0xFF1
  9629                           intcon3	equ	0xFF0
  9630                           postinc0	equ	0xFEE
  9631                           wreg	equ	0xFE8
  9632                           postinc1	equ	0xFE6
  9633                           postdec1	equ	0xFE5
  9634                           plusw1	equ	0xFE3
  9635                           fsr1h	equ	0xFE2
  9636                           fsr1l	equ	0xFE1
  9637                           indf2	equ	0xFDF
  9638                           postinc2	equ	0xFDE
  9639                           postdec2	equ	0xFDD
  9640                           fsr2h	equ	0xFDA
  9641                           fsr2l	equ	0xFD9
  9642                           status	equ	0xFD8
  9643                           
  9644 ;; *************** function _RADIO_FSKPayloadReady *****************
  9645 ;; Defined at:
  9646 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  i               1  131[BANK0 ] unsigned char 
  9651 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : F/0
  9658 ;;		On exit  : D/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;Total ram usage:        2 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:   16
  9668 ;; This function calls:
  9669 ;;		_HALSPICSAssert
  9670 ;;		_HALSPICSDeassert
  9671 ;;		_HALSPISend
  9672 ;;		_LORAWAN_RxDone
  9673 ;;		_LORAWAN_RxTimeout
  9674 ;;		_RADIO_RegisterRead
  9675 ;;		_RADIO_WriteMode
  9676 ;;		_SwTimerStop
  9677 ;; This function is called by:
  9678 ;;		_RADIO_DIO0
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text60
  9683  005A5E                     __ptext60:
  9684                           	opt stack 0
  9685  005A5E                     _RADIO_FSKPayloadReady:
  9686                           	opt stack 12
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9690                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9691                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;incstack = 0
  9695  005A5E  0E3F               	movlw	63
  9696  005A60  EC63  F039         	call	_RADIO_RegisterRead
  9697  005A64  6FE2               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9701  005A66  A5E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9702  005A68  0012               	return	
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;radio_driver_SX1276.c: 1017: {
  9706                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9707  005A6A  0101               	movlb	1	; () banked
  9708  005A6C  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9709  005A6E  EC78  F03A         	call	_SwTimerStop
  9710                           
  9711                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9712  005A72  0101               	movlb	1	; () banked
  9713  005A74  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9714  005A76  EC78  F03A         	call	_SwTimerStop
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9718  005A7A  EC88  F03C         	call	_HALSPICSAssert	;wreg free
  9719                           
  9720                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9721  005A7E  0E00               	movlw	0
  9722  005A80  EC30  F03C         	call	_HALSPISend
  9723                           
  9724                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9725  005A84  0EFF               	movlw	255
  9726  005A86  EC30  F03C         	call	_HALSPISend
  9727  005A8A  0101               	movlb	1	; () banked
  9728  005A8C  6FA2               	movwf	(_RadioConfiguration+36)& (0+255),b
  9729                           
  9730                           ; BSR set to: 1
  9731                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9732  005A8E  0100               	movlb	0	; () banked
  9733  005A90  6BE3               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9734  005A92  D00D               	goto	l14903
  9735  005A94                     l14899:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;radio_driver_SX1276.c: 1029: {
  9739                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9740  005A94  51E3               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9741  005A96  0101               	movlb	1	; () banked
  9742  005A98  25A3               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9743  005A9A  6ED9               	movwf	fsr2l,c
  9744  005A9C  0E00               	movlw	0
  9745  005A9E  21A4               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9746  005AA0  6EDA               	movwf	fsr2h,c
  9747  005AA2  0EFF               	movlw	255
  9748  005AA4  EC30  F03C         	call	_HALSPISend
  9749  005AA8  6EDF               	movwf	indf2,c
  9750  005AAA  0100               	movlb	0	; () banked
  9751  005AAC  2BE3               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9752  005AAE                     l14903:
  9753                           
  9754                           ; BSR set to: 0
  9755  005AAE  0101               	movlb	1	; () banked
  9756  005AB0  51A2               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9757  005AB2  0100               	movlb	0	; () banked
  9758  005AB4  5DE3               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9759  005AB6  E3EE               	bnc	l14899
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;radio_driver_SX1276.c: 1031: }
  9763                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9764  005AB8  EC86  F03C         	call	_HALSPICSDeassert	;wreg free
  9765                           
  9766                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9767  005ABC  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9768  005AC0  0E00               	movlw	0
  9769  005AC2  0100               	movlb	0	; () banked
  9770  005AC4  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9771  005AC6  EC5F  F028         	call	_RADIO_WriteMode
  9772                           
  9773                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9774  005ACA  0101               	movlb	1	; () banked
  9775  005ACC  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9776                           
  9777                           ; BSR set to: 1
  9778                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9779  005ACE  0E80               	movlw	128
  9780  005AD0  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9781                           
  9782                           ; BSR set to: 1
  9783                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9784  005AD2  059A               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9785  005AD4  E103               	bnz	l14917
  9786                           
  9787                           ; BSR set to: 1
  9788                           ;radio_driver_SX1276.c: 1040: {
  9789                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9790  005AD6  0100               	movlb	0	; () banked
  9791  005AD8  A3E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9792  005ADA  D003               	goto	l14919
  9793  005ADC                     l14917:
  9794                           
  9795                           ;radio_driver_SX1276.c: 1042: {
  9796                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9797  005ADC  0101               	movlb	1	; () banked
  9798  005ADE  85A1               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9799                           
  9800                           ;radio_driver_SX1276.c: 1044: }
  9801  005AE0  D002               	goto	l14923
  9802  005AE2                     l14919:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;radio_driver_SX1276.c: 1045: else
  9806                           ;radio_driver_SX1276.c: 1046: {
  9807                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9808  005AE2  0101               	movlb	1	; () banked
  9809  005AE4  95A1               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9810  005AE6                     l14923:
  9811                           
  9812                           ; BSR set to: 1
  9813                           ;radio_driver_SX1276.c: 1053: }
  9814                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9815  005AE6  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9816  005AE8  EF62  F013         	goto	_LORAWAN_RxTimeout
  9817                           
  9818                           ; BSR set to: 1
  9819                           ;radio_driver_SX1276.c: 1056: {
  9820                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9821  005AEC  C1A3  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9822  005AF0  C1A4  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9823  005AF4  C1A2  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9824  005AF8  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9825  005AFC                     __end_of_RADIO_FSKPayloadReady:
  9826                           	opt stack 0
  9827                           tosu	equ	0xFFF
  9828                           tosh	equ	0xFFE
  9829                           tosl	equ	0xFFD
  9830                           pclath	equ	0xFFA
  9831                           tblptru	equ	0xFF8
  9832                           tblptrh	equ	0xFF7
  9833                           tblptrl	equ	0xFF6
  9834                           tablat	equ	0xFF5
  9835                           prodh	equ	0xFF4
  9836                           prodl	equ	0xFF3
  9837                           intcon	equ	0xFF2
  9838                           intcon2	equ	0xFF1
  9839                           intcon3	equ	0xFF0
  9840                           postinc0	equ	0xFEE
  9841                           wreg	equ	0xFE8
  9842                           postinc1	equ	0xFE6
  9843                           postdec1	equ	0xFE5
  9844                           plusw1	equ	0xFE3
  9845                           fsr1h	equ	0xFE2
  9846                           fsr1l	equ	0xFE1
  9847                           indf2	equ	0xFDF
  9848                           postinc2	equ	0xFDE
  9849                           postdec2	equ	0xFDD
  9850                           fsr2h	equ	0xFDA
  9851                           fsr2l	equ	0xFD9
  9852                           status	equ	0xFD8
  9853                           
  9854 ;; *************** function _LORAWAN_RxTimeout *****************
  9855 ;; Defined at:
  9856 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;  minim           4   75[BANK0 ] unsigned long 
  9861 ;;  i               1   79[BANK0 ] unsigned char 
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : F/1
  9868 ;;		On exit  : D/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;Total ram usage:        9 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:   15
  9878 ;; This function calls:
  9879 ;;		_LORAWAN_ReceiveWindow2Callback
  9880 ;;		_RADIO_Transmit
  9881 ;;		_ResetParametersForConfirmedTransmission
  9882 ;;		_ResetParametersForUnconfirmedTransmission
  9883 ;;		_RxDataDone
  9884 ;;		_SelectChannelForTransmission
  9885 ;;		_SetJoinFailState
  9886 ;;		_SwTimerSetTimeout
  9887 ;;		_SwTimerStart
  9888 ;;		___lldiv
  9889 ;; This function is called by:
  9890 ;;		_RADIO_FSKPayloadReady
  9891 ;;		_RADIO_RxTimeout
  9892 ;;		_RADIO_RxFSKTimeout
  9893 ;;		_RADIO_WatchdogTimeout
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text61
  9898  0026C4                     __ptext61:
  9899                           	opt stack 0
  9900  0026C4                     _LORAWAN_RxTimeout:
  9901                           	opt stack 12
  9902                           
  9903                           ; BSR set to: 1
  9904                           ;lorawan_eu.c: 466: uint8_t i;
  9905                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9906                           
  9907                           ;incstack = 0
  9908  0026C4  0100               	movlb	0	; () banked
  9909  0026C6  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9910  0026C8  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9911  0026CA  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9912  0026CC  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9913                           
  9914                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9915  0026CE  0102               	movlb	2	; () banked
  9916  0026D0  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9917  0026D2  D134               	goto	l14639
  9918                           
  9919                           ; BSR set to: 2
  9920                           ;lorawan_eu.c: 470: {
  9921                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9922  0026D4  5102               	movf	(_loRa+2)& (0+255),w,b
  9923  0026D6  0B0F               	andlw	15
  9924  0026D8  0A03               	xorlw	3
  9925  0026DA  E10E               	bnz	l1049
  9926                           
  9927                           ; BSR set to: 2
  9928                           ;lorawan_eu.c: 473: {
  9929                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9930  0026DC  5112               	movf	(_loRa+18)& (0+255),w,b
  9931  0026DE  E105               	bnz	l14575
  9932                           
  9933                           ; BSR set to: 2
  9934                           ;lorawan_eu.c: 475: {
  9935                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9936  0026E0  5102               	movf	(_loRa+2)& (0+255),w,b
  9937  0026E2  0BF0               	andlw	-16
  9938  0026E4  0904               	iorlw	4
  9939  0026E6  6F02               	movwf	(_loRa+2)& (0+255),b
  9940                           
  9941                           ;lorawan_eu.c: 477: }
  9942  0026E8  0012               	return	
  9943  0026EA                     l14575:
  9944                           
  9945                           ; BSR set to: 2
  9946                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9947  0026EA  0E02               	movlw	2
  9948  0026EC  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9949  0026EE  A4D8               	btfss	status,2,c
  9950  0026F0  0012               	return	
  9951                           
  9952                           ; BSR set to: 2
  9953                           ;lorawan_eu.c: 479: {
  9954                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9955  0026F2  6AE6               	clrf	postinc1,c
  9956  0026F4  EF9A  F029         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9957  0026F8                     l1049:
  9958                           
  9959                           ; BSR set to: 2
  9960                           ;lorawan_eu.c: 483: else
  9961                           ;lorawan_eu.c: 484: {
  9962                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9963  0026F8  B500               	btfsc	_loRa& (0+255),2,b
  9964                           
  9965                           ; BSR set to: 2
  9966                           ;lorawan_eu.c: 487: {
  9967                           ;lorawan_eu.c: 488: SetJoinFailState();
  9968  0026FA  EF76  F039         	goto	_SetJoinFailState	;wreg free
  9969                           
  9970                           ; BSR set to: 2
  9971                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9972                           
  9973                           ;lorawan_eu.c: 489: }
  9974  0026FE  A902               	btfss	(_loRa+2)& (0+255),4,b
  9975  002700  0012               	return	
  9976                           
  9977                           ; BSR set to: 2
  9978                           ;lorawan_eu.c: 492: {
  9979                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9980  002702  A100               	btfss	_loRa& (0+255),0,b
  9981  002704  D04B               	goto	l14597
  9982                           
  9983                           ; BSR set to: 2
  9984                           ;lorawan_eu.c: 494: {
  9985                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9986  002706  51D9               	movf	(_loRa+217)& (0+255),w,b
  9987  002708  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9988  00270A  E334               	bnc	l14591
  9989                           
  9990                           ; BSR set to: 2
  9991                           ;lorawan_eu.c: 496: {
  9992                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9993  00270C  5102               	movf	(_loRa+2)& (0+255),w,b
  9994  00270E  0BF0               	andlw	-16
  9995  002710  0906               	iorlw	6
  9996  002712  6F02               	movwf	(_loRa+2)& (0+255),b
  9997                           
  9998                           ; BSR set to: 2
  9999                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 10000  002714  51A0               	movf	(_loRa+160)& (0+255),w,b
 10001  002716  0100               	movlb	0	; () banked
 10002  002718  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10003  00271A  0102               	movlb	2	; () banked
 10004  00271C  51A1               	movf	(_loRa+161)& (0+255),w,b
 10005  00271E  0100               	movlb	0	; () banked
 10006  002720  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 10007  002722  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 10008  002724  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 10009  002726  0E0C               	movlw	12
 10010  002728                     u16645:
 10011  002728  90D8               	bcf	status,0,c
 10012  00272A  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10013  00272C  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10014  00272E  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10015  002730  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10016  002732  2EE8               	decfsz	wreg,f,c
 10017  002734  D7F9               	goto	u16645
 10018  002736  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 10019  00273A  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 10020  00273E  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 10021  002742  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 10022  002746  0E7D               	movlw	125
 10023  002748  6F68               	movwf	___lldiv@divisor& (0+255),b
 10024  00274A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10025  00274C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10026  00274E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10027  002750  EC1B  F030         	call	___lldiv	;wreg free
 10028  002754  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10029  002758  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10030  00275C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10031  002760  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10032  002764  0102               	movlb	2	; () banked
 10033  002766  51E8               	movf	(_loRa+232)& (0+255),w,b
 10034  002768  EC70  F036         	call	_SwTimerSetTimeout
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10038  00276C  0102               	movlb	2	; () banked
 10039  00276E  51E8               	movf	(_loRa+232)& (0+255),w,b
 10040  002770  EF59  F02E         	goto	_SwTimerStart
 10041  002774                     l14591:
 10042                           
 10043                           ; BSR set to: 2
 10044                           ;lorawan_eu.c: 501: else
 10045                           ;lorawan_eu.c: 502: {
 10046                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10047  002774  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10048                           
 10049                           ; BSR set to: 2
 10050                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10051  002778  0100               	movlb	0	; () banked
 10052  00277A  51E8               	movf	_rxPayload& (0+255),w,b
 10053  00277C  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10054  00277E  B4D8               	btfsc	status,2,c
 10055  002780  0012               	return	
 10056  002782                     l14595:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;lorawan_eu.c: 505: {
 10060                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10061  002782  6B64               	clrf	RxDataDone@pData& (0+255),b
 10062  002784  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10063  002786  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10064  002788  6B67               	clrf	RxDataDone@status& (0+255),b
 10065  00278A  0005               	push	
 10066  00278C  6AFA               	clrf	pclath,c
 10067  00278E  51E8               	movf	_rxPayload& (0+255),w,b
 10068  002790  6EFD               	movwf	tosl,c
 10069  002792  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10070  002794  6EFE               	movwf	tosh,c
 10071  002796  6AFF               	clrf	tosu,c
 10072  002798  50FA               	movf	pclath,w,c
 10073  00279A  0012               	return		;indir
 10074  00279C                     l14597:
 10075                           
 10076                           ; BSR set to: 2
 10077                           ;lorawan_eu.c: 511: else
 10078                           ;lorawan_eu.c: 512: {
 10079                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10080  00279C  51D8               	movf	(_loRa+216)& (0+255),w,b
 10081  00279E  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10082  0027A0  E201 D0B7          	bnc	l14633
 10083                           
 10084                           ; BSR set to: 2
 10085                           ;lorawan_eu.c: 514: {
 10086                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10087  0027A4  5102               	movf	(_loRa+2)& (0+255),w,b
 10088  0027A6  0BF0               	andlw	-16
 10089  0027A8  0906               	iorlw	6
 10090  0027AA  6F02               	movwf	(_loRa+2)& (0+255),b
 10091                           
 10092                           ; BSR set to: 2
 10093                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10094  0027AC  0E01               	movlw	1
 10095  0027AE  EC27  F033         	call	_SelectChannelForTransmission
 10096  0027B2  0900               	iorlw	0
 10097  0027B4  E119               	bnz	l1063
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;lorawan_eu.c: 517: {
 10101                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10102  0027B6  0EF0               	movlw	low (_macBuffer+16)
 10103  0027B8  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10104  0027BA  0E04               	movlw	high (_macBuffer+16)
 10105  0027BC  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10106  0027BE  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10107  0027C2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 10108  0027C6  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10109  0027C8  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10110  0027CA  E107               	bnz	l14609
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;lorawan_eu.c: 520: {
 10114                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10115  0027CC  0102               	movlb	2	; () banked
 10116  0027CE  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10117                           
 10118                           ; BSR set to: 2
 10119                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10120  0027D0  5102               	movf	(_loRa+2)& (0+255),w,b
 10121  0027D2  0BF0               	andlw	-16
 10122  0027D4  0901               	iorlw	1
 10123  0027D6  6F02               	movwf	(_loRa+2)& (0+255),b
 10124                           
 10125                           ;lorawan_eu.c: 523: }
 10126  0027D8  0012               	return	
 10127  0027DA                     l14609:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;lorawan_eu.c: 524: else
 10131                           ;lorawan_eu.c: 526: {
 10132                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10133  0027DA  ECA9  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10134                           
 10135                           ; BSR set to: 2
 10136                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10137  0027DE  0100               	movlb	0	; () banked
 10138  0027E0  51E8               	movf	_rxPayload& (0+255),w,b
 10139  0027E2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10140  0027E4  E1CE               	bnz	l14595
 10141  0027E6  0012               	return	
 10142  0027E8                     l1063:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;lorawan_eu.c: 534: else
 10146                           ;lorawan_eu.c: 535: {
 10147                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10148  0027E8  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10149  0027EA  D05B               	goto	l14629
 10150  0027EC                     l14615:
 10151                           
 10152                           ; BSR set to: 2
 10153                           ;lorawan_eu.c: 538: {
 10154                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10155  0027EC  0100               	movlb	0	; () banked
 10156  0027EE  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10157  0027F0  0D0E               	mullw	14
 10158  0027F2  0E04               	movlw	low (_Channels+4)
 10159  0027F4  24F3               	addwf	prodl,w,c
 10160  0027F6  6ED9               	movwf	fsr2l,c
 10161  0027F8  0E04               	movlw	high (_Channels+4)
 10162  0027FA  20F4               	addwfc	prodh,w,c
 10163  0027FC  6EDA               	movwf	fsr2h,c
 10164  0027FE  04DE               	decf	postinc2,w,c
 10165  002800  E14E               	bnz	l14627
 10166                           
 10167                           ; BSR set to: 0
 10168  002802  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10169  002804  0D0E               	mullw	14
 10170  002806  0E08               	movlw	low (_Channels+8)
 10171  002808  24F3               	addwf	prodl,w,c
 10172  00280A  6ED9               	movwf	fsr2l,c
 10173  00280C  0E04               	movlw	high (_Channels+8)
 10174  00280E  20F4               	addwfc	prodh,w,c
 10175  002810  6EDA               	movwf	fsr2h,c
 10176  002812  50DE               	movf	postinc2,w,c
 10177  002814  10DE               	iorwf	postinc2,w,c
 10178  002816  10DE               	iorwf	postinc2,w,c
 10179  002818  10DE               	iorwf	postinc2,w,c
 10180  00281A  E041               	bz	l14627
 10181                           
 10182                           ; BSR set to: 0
 10183  00281C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10184  00281E  0D0E               	mullw	14
 10185  002820  0E08               	movlw	low (_Channels+8)
 10186  002822  24F3               	addwf	prodl,w,c
 10187  002824  6ED9               	movwf	fsr2l,c
 10188  002826  0E04               	movlw	high (_Channels+8)
 10189  002828  20F4               	addwfc	prodh,w,c
 10190  00282A  6EDA               	movwf	fsr2h,c
 10191  00282C  50DE               	movf	postinc2,w,c
 10192  00282E  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10193  002830  50DE               	movf	postinc2,w,c
 10194  002832  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10195  002834  50DE               	movf	postinc2,w,c
 10196  002836  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10197  002838  50DE               	movf	postinc2,w,c
 10198  00283A  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10199  00283C  E330               	bnc	l14627
 10200                           
 10201                           ; BSR set to: 0
 10202  00283E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10203  002840  0D0E               	mullw	14
 10204  002842  0E05               	movlw	low (_Channels+5)
 10205  002844  24F3               	addwf	prodl,w,c
 10206  002846  6ED9               	movwf	fsr2l,c
 10207  002848  0E04               	movlw	high (_Channels+5)
 10208  00284A  20F4               	addwfc	prodh,w,c
 10209  00284C  6EDA               	movwf	fsr2h,c
 10210  00284E  50DF               	movf	223,w,c
 10211  002850  0B0F               	andlw	15
 10212  002852  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10213  002854  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10214  002856  0102               	movlb	2	; () banked
 10215  002858  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10216  00285A  E321               	bnc	l14627
 10217                           
 10218                           ; BSR set to: 2
 10219  00285C  0100               	movlb	0	; () banked
 10220  00285E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10221  002860  0D0E               	mullw	14
 10222  002862  0E05               	movlw	low (_Channels+5)
 10223  002864  24F3               	addwf	prodl,w,c
 10224  002866  6ED9               	movwf	fsr2l,c
 10225  002868  0E04               	movlw	high (_Channels+5)
 10226  00286A  20F4               	addwfc	prodh,w,c
 10227  00286C  6EDA               	movwf	fsr2h,c
 10228  00286E  38DF               	swapf	223,w,c
 10229  002870  0B0F               	andlw	15
 10230  002872  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10231  002874  0102               	movlb	2	; () banked
 10232  002876  51DF               	movf	(_loRa+223)& (0+255),w,b
 10233  002878  0100               	movlb	0	; () banked
 10234  00287A  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10235  00287C  E310               	bnc	l14627
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;lorawan_eu.c: 540: {
 10239                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10240  00287E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10241  002880  0D0E               	mullw	14
 10242  002882  0E08               	movlw	low (_Channels+8)
 10243  002884  24F3               	addwf	prodl,w,c
 10244  002886  6ED9               	movwf	fsr2l,c
 10245  002888  0E04               	movlw	high (_Channels+8)
 10246  00288A  20F4               	addwfc	prodh,w,c
 10247  00288C  6EDA               	movwf	fsr2h,c
 10248  00288E  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10249  002892  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10250  002896  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10251  00289A  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10252  00289E                     l14627:
 10253  00289E  0100               	movlb	0	; () banked
 10254  0028A0  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10255  0028A2                     l14629:
 10256                           
 10257                           ; BSR set to: 0
 10258  0028A2  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10259  0028A4  0102               	movlb	2	; () banked
 10260  0028A6  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10261  0028A8  E2A1               	bc	l14615
 10262                           
 10263                           ; BSR set to: 2
 10264                           ;lorawan_eu.c: 542: }
 10265                           ;lorawan_eu.c: 543: }
 10266                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10267  0028AA  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10268  0028AE  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10269  0028B2  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10270  0028B6  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10271  0028BA  0E0C               	movlw	12
 10272  0028BC                     u16775:
 10273  0028BC  90D8               	bcf	status,0,c
 10274  0028BE  0100               	movlb	0	; () banked
 10275  0028C0  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10276  0028C2  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10277  0028C4  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10278  0028C6  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10279  0028C8  2EE8               	decfsz	wreg,f,c
 10280  0028CA  D7F8               	goto	u16775
 10281  0028CC  0E00               	movlw	0
 10282  0028CE  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10283  0028D0  6F64               	movwf	___lldiv@dividend& (0+255),b
 10284  0028D2  0E20               	movlw	32
 10285  0028D4  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10286  0028D6  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10287  0028D8  0E03               	movlw	3
 10288  0028DA  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10289  0028DC  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10290  0028DE  0E00               	movlw	0
 10291  0028E0  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10292  0028E2  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10293  0028E4  0E7D               	movlw	125
 10294  0028E6  6F68               	movwf	___lldiv@divisor& (0+255),b
 10295  0028E8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10296  0028EA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10297  0028EC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10298  0028EE  EC1B  F030         	call	___lldiv	;wreg free
 10299  0028F2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10300  0028F6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10301  0028FA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10302  0028FE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10303  002902  0102               	movlb	2	; () banked
 10304  002904  51EA               	movf	(_loRa+234)& (0+255),w,b
 10305  002906  EC70  F036         	call	_SwTimerSetTimeout
 10306                           
 10307                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10308  00290A  0102               	movlb	2	; () banked
 10309  00290C  51EA               	movf	(_loRa+234)& (0+255),w,b
 10310  00290E  EF59  F02E         	goto	_SwTimerStart
 10311  002912                     l14633:
 10312                           
 10313                           ; BSR set to: 2
 10314                           ;lorawan_eu.c: 548: else
 10315                           ;lorawan_eu.c: 549: {
 10316                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10317  002912  ECA9  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10318                           
 10319                           ; BSR set to: 2
 10320                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10321  002916  0100               	movlb	0	; () banked
 10322  002918  51E8               	movf	_rxPayload& (0+255),w,b
 10323  00291A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10324  00291C  B4D8               	btfsc	status,2,c
 10325  00291E  0012               	return	
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;lorawan_eu.c: 552: {
 10329                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10330  002920  6B64               	clrf	RxDataDone@pData& (0+255),b
 10331  002922  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10332  002924  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10333  002926  0E01               	movlw	1
 10334  002928  6F67               	movwf	RxDataDone@status& (0+255),b
 10335  00292A  0005               	push	
 10336  00292C  6EFA               	movwf	pclath,c
 10337  00292E  51E8               	movf	_rxPayload& (0+255),w,b
 10338  002930  6EFD               	movwf	tosl,c
 10339  002932  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10340  002934  6EFE               	movwf	tosh,c
 10341  002936  6AFF               	clrf	tosu,c
 10342  002938  50FA               	movf	pclath,w,c
 10343  00293A  0012               	return		;indir
 10344  00293C                     l14639:
 10345                           
 10346                           ; BSR set to: 2
 10347                           ;lorawan_eu.c: 560: else
 10348                           ;lorawan_eu.c: 561: {
 10349                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10350  00293C  0100               	movlb	0	; () banked
 10351  00293E  51E8               	movf	_rxPayload& (0+255),w,b
 10352  002940  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10353  002942  B4D8               	btfsc	status,2,c
 10354  002944  0012               	return	
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;lorawan_eu.c: 564: {
 10358                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10359  002946  6B64               	clrf	RxDataDone@pData& (0+255),b
 10360  002948  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10361  00294A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10362  00294C  0E02               	movlw	2
 10363  00294E  6F67               	movwf	RxDataDone@status& (0+255),b
 10364  002950  0005               	push	
 10365  002952  6EFA               	movwf	pclath,c
 10366  002954  51E8               	movf	_rxPayload& (0+255),w,b
 10367  002956  6EFD               	movwf	tosl,c
 10368  002958  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10369  00295A  6EFE               	movwf	tosh,c
 10370  00295C  6AFF               	clrf	tosu,c
 10371  00295E  50FA               	movf	pclath,w,c
 10372  002960  0012               	return		;indir
 10373  002962                     __end_of_LORAWAN_RxTimeout:
 10374                           	opt stack 0
 10375                           tosu	equ	0xFFF
 10376                           tosh	equ	0xFFE
 10377                           tosl	equ	0xFFD
 10378                           pclath	equ	0xFFA
 10379                           tblptru	equ	0xFF8
 10380                           tblptrh	equ	0xFF7
 10381                           tblptrl	equ	0xFF6
 10382                           tablat	equ	0xFF5
 10383                           prodh	equ	0xFF4
 10384                           prodl	equ	0xFF3
 10385                           intcon	equ	0xFF2
 10386                           intcon2	equ	0xFF1
 10387                           intcon3	equ	0xFF0
 10388                           postinc0	equ	0xFEE
 10389                           wreg	equ	0xFE8
 10390                           postinc1	equ	0xFE6
 10391                           postdec1	equ	0xFE5
 10392                           plusw1	equ	0xFE3
 10393                           fsr1h	equ	0xFE2
 10394                           fsr1l	equ	0xFE1
 10395                           indf2	equ	0xFDF
 10396                           postinc2	equ	0xFDE
 10397                           postdec2	equ	0xFDD
 10398                           fsr2h	equ	0xFDA
 10399                           fsr2l	equ	0xFD9
 10400                           status	equ	0xFD8
 10401                           
 10402 ;; *************** function _LORAWAN_RxDone *****************
 10403 ;; Defined at:
 10404 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10407 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10408 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  hdr             2  123[BANK1 ] PTR struct .
 10411 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10412 ;;  joinAccept      2  120[BANK1 ] PTR struct .
 10413 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10414 ;;  computedMic     4  116[BANK1 ] unsigned long 
 10415 ;;  extractedMic    4  108[BANK1 ] unsigned long 
 10416 ;;  packet          2  114[BANK1 ] PTR unsigned char 
 10417 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10418 ;;  frmPayloadLe    1  122[BANK1 ] unsigned char 
 10419 ;;  temp            1  113[BANK1 ] unsigned char 
 10420 ;;  bufferIndex     1  112[BANK1 ] unsigned char 
 10421 ;;  mhdr            1  107[BANK1 ] struct .
 10422 ;;  channelIndex    1  106[BANK1 ] unsigned char 
 10423 ;;  fPort           1  105[BANK1 ] unsigned char 
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  1    wreg      enum E8191
 10426 ;; Registers used:
 10427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10428 ;; Tracked objects:
 10429 ;;		On entry : F/1
 10430 ;;		On exit  : D/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10433 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10436 ;;      Totals:         0       5      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10437 ;;Total ram usage:       28 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:   15
 10440 ;; This function calls:
 10441 ;;		_AESCmac
 10442 ;;		_AESEncodeLoRa
 10443 ;;		_AssembleEncryptionBlock
 10444 ;;		_CheckFlags
 10445 ;;		_CheckMcastFlags
 10446 ;;		_ComputeMic
 10447 ;;		_ComputeSessionKeys
 10448 ;;		_EncryptFRMPayload
 10449 ;;		_ExtractMic
 10450 ;;		_LORAWAN_EnterContinuousReceive
 10451 ;;		_LORAWAN_Send
 10452 ;;		_MacExecuteCommands
 10453 ;;		_RADIO_GetStatus
 10454 ;;		_RADIO_ReleaseData
 10455 ;;		_RxDataDone
 10456 ;;		_SearchAvailableChannel
 10457 ;;		_SetJoinFailState
 10458 ;;		_SetReceptionNotOkState
 10459 ;;		_StartReTxTimer
 10460 ;;		_SwTimerStop
 10461 ;;		_UpdateCfList
 10462 ;;		_UpdateDLSettings
 10463 ;;		_UpdateJoinSuccessState
 10464 ;;		_UpdateReceiveDelays
 10465 ;;		_UpdateRetransmissionAckTimeoutState
 10466 ;;		_memcpy
 10467 ;; This function is called by:
 10468 ;;		_RADIO_RxDone
 10469 ;;		_RADIO_FSKPayloadReady
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           	psect	text62
 10474  000098                     __ptext62:
 10475                           	opt stack 0
 10476  000098                     _LORAWAN_RxDone:
 10477                           	opt stack 12
 10478                           
 10479                           ; BSR set to: 1
 10480                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10481                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10482                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10483                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10484                           ;lorawan.c: 1127: uint8_t *packet;
 10485                           ;lorawan.c: 1128: uint8_t temp;
 10486                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10487                           
 10488                           ;incstack = 0
 10489  000098  EC67  F03C         	call	_RADIO_ReleaseData	;wreg free
 10490                           
 10491                           ; BSR set to: 1
 10492                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10493  00009C  0102               	movlb	2	; () banked
 10494  00009E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10495  0000A0  EF50  F005         	goto	l14557
 10496                           
 10497                           ; BSR set to: 2
 10498                           ;lorawan.c: 1133: {
 10499                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10500  0000A4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10501  0000A8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10502  0000AC  50DF               	movf	indf2,w,c
 10503  0000AE  0101               	movlb	1	; () banked
 10504  0000B0  6F6B               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10505                           
 10506                           ; BSR set to: 1
 10507                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10508  0000B2  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10509  0000B4  32E8               	rrcf	wreg,f,c
 10510  0000B6  0B07               	andlw	7
 10511  0000B8  06E8               	decf	wreg,f,c
 10512  0000BA  E001 D0C5          	bnz	l14229
 10513                           
 10514                           ; BSR set to: 1
 10515  0000BE  0102               	movlb	2	; () banked
 10516  0000C0  511D               	movf	(_loRa+29)& (0+255),w,b
 10517  0000C2  E001 D0C1          	bnz	l14229
 10518                           
 10519                           ; BSR set to: 2
 10520                           ;lorawan.c: 1136: {
 10521                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10522  0000C6  0101               	movlb	1	; () banked
 10523  0000C8  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10524  0000CA  6F71               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10525                           
 10526                           ;lorawan.c: 1138: while (temp > 0)
 10527  0000CC  D01F               	goto	l14185
 10528  0000CE                     l14179:
 10529                           
 10530                           ; BSR set to: 1
 10531                           ;lorawan.c: 1139: {
 10532                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10533  0000CE  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10534  0000D0  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10535  0000D2  0100               	movlb	0	; () banked
 10536  0000D4  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 10537  0000D6  0E00               	movlw	0
 10538  0000D8  0101               	movlb	1	; () banked
 10539  0000DA  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10540  0000DC  0100               	movlb	0	; () banked
 10541  0000DE  6FDE               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10542  0000E0  0101               	movlb	1	; () banked
 10543  0000E2  5171               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10544  0000E4  0100               	movlb	0	; () banked
 10545  0000E6  5DDD               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10546  0000E8  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 10547  0000EA  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10548  0000EC  A0D8               	btfss	status,0,c
 10549  0000EE  05DE               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10550  0000F0  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10551  0000F2  0E42               	movlw	low (_loRa+66)
 10552  0000F4  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 10553  0000F6  0E02               	movlw	high (_loRa+66)
 10554  0000F8  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10555  0000FA  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;lorawan.c: 1142: if (temp > 16)
 10559  0000FE  0E10               	movlw	16
 10560  000100  0101               	movlb	1	; () banked
 10561  000102  6571               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10562  000104  D002               	goto	l2121
 10563                           
 10564                           ; BSR set to: 1
 10565                           ;lorawan.c: 1143: {
 10566                           ;lorawan.c: 1144: temp -= 16;
 10567  000106  5F71               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10568                           
 10569                           ;lorawan.c: 1145: }
 10570  000108  D001               	goto	l14185
 10571  00010A                     l2121:
 10572                           
 10573                           ; BSR set to: 1
 10574                           ;lorawan.c: 1146: else
 10575                           ;lorawan.c: 1147: {
 10576                           ;lorawan.c: 1148: temp = 0;
 10577  00010A  6B71               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10578  00010C                     l14185:
 10579                           
 10580                           ; BSR set to: 1
 10581  00010C  5171               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10582  00010E  E1DF               	bnz	l14179
 10583                           
 10584                           ; BSR set to: 1
 10585                           ;lorawan.c: 1149: }
 10586                           ;lorawan.c: 1150: }
 10587                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10588  000110  0E42               	movlw	low (_loRa+66)
 10589  000112  0100               	movlb	0	; () banked
 10590  000114  6FCA               	movwf	ComputeMic@key& (0+255),b
 10591  000116  0E02               	movlw	high (_loRa+66)
 10592  000118  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 10593  00011A  C166  F0CC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10594  00011E  C167  F0CD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10595  000122  0101               	movlb	1	; () banked
 10596  000124  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10597  000126  0FFC               	addlw	252
 10598  000128  0100               	movlb	0	; () banked
 10599  00012A  6FCE               	movwf	ComputeMic@bufferLength& (0+255),b
 10600  00012C  EC64  F034         	call	_ComputeMic	;wreg free
 10601  000130  C0CA  F174         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10602  000134  C0CB  F175         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10603  000138  C0CC  F176         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10604  00013C  C0CD  F177         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10608  000140  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10609  000144  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10610  000148  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10611  00014C  EC4F  F036         	call	_ExtractMic	;wreg free
 10612  000150  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10613  000154  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10614  000158  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10615  00015C  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10619  000160  0101               	movlb	1	; () banked
 10620  000162  5174               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10621  000164  196C               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10622  000166  E109               	bnz	u15900
 10623  000168  5175               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10624  00016A  196D               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10625  00016C  E106               	bnz	u15900
 10626  00016E  5176               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10627  000170  196E               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10628  000172  E103               	bnz	u15900
 10629  000174  5177               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10630  000176  196F               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10631  000178  E011               	bz	l14203
 10632  00017A                     u15900:
 10633                           
 10634                           ; BSR set to: 1
 10635                           ;lorawan.c: 1156: {
 10636                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10637  00017A  0102               	movlb	2	; () banked
 10638  00017C  5102               	movf	(_loRa+2)& (0+255),w,b
 10639  00017E  0B0F               	andlw	15
 10640  000180  0A05               	xorlw	5
 10641  000182  E102 EF76  F039    	bz	_SetJoinFailState
 10642                           
 10643                           ; BSR set to: 2
 10644  000188  5102               	movf	(_loRa+2)& (0+255),w,b
 10645  00018A  0B0F               	andlw	15
 10646  00018C  0A03               	xorlw	3
 10647  00018E  A4D8               	btfss	status,2,c
 10648  000190  0012               	return	
 10649                           
 10650                           ; BSR set to: 2
 10651  000192  51F1               	movf	(_loRa+241)& (0+255),w,b
 10652  000194  B4D8               	btfsc	status,2,c
 10653  000196  0012               	return	
 10654                           
 10655                           ; BSR set to: 2
 10656                           ;lorawan.c: 1158: {
 10657                           ;lorawan.c: 1159: SetJoinFailState();
 10658  000198  EF76  F039         	goto	_SetJoinFailState	;wreg free
 10659  00019C                     l14203:
 10660                           
 10661                           ; BSR set to: 1
 10662                           ;lorawan.c: 1163: }
 10663                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10664  00019C  0102               	movlb	2	; () banked
 10665  00019E  5102               	movf	(_loRa+2)& (0+255),w,b
 10666  0001A0  0B0F               	andlw	15
 10667  0001A2  0A03               	xorlw	3
 10668  0001A4  E103               	bnz	l14207
 10669                           
 10670                           ; BSR set to: 2
 10671                           ;lorawan.c: 1167: {
 10672                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10673  0001A6  51E3               	movf	(_loRa+227)& (0+255),w,b
 10674  0001A8  EC78  F03A         	call	_SwTimerStop
 10675  0001AC                     l14207:
 10676                           
 10677                           ;lorawan.c: 1169: }
 10678                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10679                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10680  0001AC  C166  F178         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10681  0001B0  C167  F179         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10682                           
 10683                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10684  0001B4  0101               	movlb	1	; () banked
 10685  0001B6  EE20 F007          	lfsr	2,7
 10686  0001BA  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10687  0001BC  26D9               	addwf	fsr2l,f,c
 10688  0001BE  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10689  0001C0  22DA               	addwfc	fsr2h,f,c
 10690  0001C2  CFDE F21E          	movff	postinc2,_loRa+30
 10691  0001C6  CFDE F21F          	movff	postinc2,_loRa+31
 10692  0001CA  CFDE F220          	movff	postinc2,_loRa+32
 10693  0001CE  CFDE F221          	movff	postinc2,_loRa+33
 10694                           
 10695                           ; BSR set to: 1
 10696                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10697  0001D2  EE20 F00C          	lfsr	2,12
 10698  0001D6  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10699  0001D8  26D9               	addwf	fsr2l,f,c
 10700  0001DA  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10701  0001DC  22DA               	addwfc	fsr2h,f,c
 10702  0001DE  50DF               	movf	indf2,w,c
 10703  0001E0  0B0F               	andlw	15
 10704  0001E2  EC78  F035         	call	_UpdateReceiveDelays
 10705                           
 10706                           ; BSR set to: 2
 10707                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10708  0001E6  0101               	movlb	1	; () banked
 10709  0001E8  EE20 F00B          	lfsr	2,11
 10710  0001EC  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10711  0001EE  26D9               	addwf	fsr2l,f,c
 10712  0001F0  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10713  0001F2  22DA               	addwfc	fsr2h,f,c
 10714  0001F4  38DF               	swapf	223,w,c
 10715  0001F6  0B07               	andlw	7
 10716  0001F8  0100               	movlb	0	; () banked
 10717  0001FA  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10718  0001FC  0101               	movlb	1	; () banked
 10719  0001FE  EE20 F00B          	lfsr	2,11
 10720  000202  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10721  000204  26D9               	addwf	fsr2l,f,c
 10722  000206  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10723  000208  22DA               	addwfc	fsr2h,f,c
 10724  00020A  50DF               	movf	223,w,c
 10725  00020C  0B0F               	andlw	15
 10726  00020E  ECDA  F03A         	call	_UpdateDLSettings
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10730  000212  C178  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10731  000216  C179  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10732  00021A  0101               	movlb	1	; () banked
 10733  00021C  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10734  00021E  ECCA  F018         	call	_UpdateCfList
 10735                           
 10736                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10737  000222  C178  F094         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10738  000226  C179  F095         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10739  00022A  EC21  F02F         	call	_ComputeSessionKeys	;wreg free
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10743  00022E  6AE6               	clrf	postinc1,c
 10744  000230  EC83  F022         	call	_UpdateJoinSuccessState	;wreg free
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10748  000234  0102               	movlb	2	; () banked
 10749  000236  6B06               	clrf	(_loRa+6)& (0+255),b
 10750  000238  6B07               	clrf	(_loRa+7)& (0+255),b
 10751  00023A  6B08               	clrf	(_loRa+8)& (0+255),b
 10752  00023C  6B09               	clrf	(_loRa+9)& (0+255),b
 10753                           
 10754                           ; BSR set to: 2
 10755                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10756  00023E  6B0A               	clrf	(_loRa+10)& (0+255),b
 10757  000240  6B0B               	clrf	(_loRa+11)& (0+255),b
 10758  000242  6B0C               	clrf	(_loRa+12)& (0+255),b
 10759  000244  6B0D               	clrf	(_loRa+13)& (0+255),b
 10760  000246  0012               	return	
 10761  000248                     l14229:
 10762                           
 10763                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10764  000248  0101               	movlb	1	; () banked
 10765  00024A  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10766  00024C  32E8               	rrcf	wreg,f,c
 10767  00024E  0B07               	andlw	7
 10768  000250  0A03               	xorlw	3
 10769  000252  E007               	bz	l2133
 10770                           
 10771                           ; BSR set to: 1
 10772  000254  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10773  000256  32E8               	rrcf	wreg,f,c
 10774  000258  0B07               	andlw	7
 10775  00025A  0A05               	xorlw	5
 10776  00025C  E002 EF97  F031    	bnz	_SetReceptionNotOkState
 10777  000262                     l2133:
 10778                           
 10779                           ; BSR set to: 1
 10780                           ;lorawan.c: 1192: {
 10781                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10782  000262  0102               	movlb	2	; () banked
 10783  000264  6BA7               	clrf	(_loRa+167)& (0+255),b
 10784                           
 10785                           ; BSR set to: 2
 10786                           ;lorawan.c: 1195: Hdr_t *hdr;
 10787                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10788  000266  C166  F17B         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10789  00026A  C167  F17C         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10790                           
 10791                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10792  00026E  0E02               	movlw	2
 10793  000270  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10794  000272  E001 D183          	bnz	l14347
 10795                           
 10796                           ; BSR set to: 2
 10797  000276  0101               	movlb	1	; () banked
 10798  000278  EE20 F001          	lfsr	2,1
 10799  00027C  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10800  00027E  26D9               	addwf	fsr2l,f,c
 10801  000280  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10802  000282  22DA               	addwfc	fsr2h,f,c
 10803  000284  0102               	movlb	2	; () banked
 10804  000286  5162               	movf	(_loRa+98)& (0+255),w,b
 10805  000288  18DE               	xorwf	postinc2,w,c
 10806  00028A  E109               	bnz	u15981
 10807  00028C  5163               	movf	(_loRa+99)& (0+255),w,b
 10808  00028E  18DE               	xorwf	postinc2,w,c
 10809  000290  E106               	bnz	u15981
 10810  000292  5164               	movf	(_loRa+100)& (0+255),w,b
 10811  000294  18DE               	xorwf	postinc2,w,c
 10812  000296  E103               	bnz	u15981
 10813  000298  5165               	movf	(_loRa+101)& (0+255),w,b
 10814  00029A  18DE               	xorwf	postinc2,w,c
 10815  00029C  A4D8               	btfss	status,2,c
 10816  00029E                     u15981:
 10817  00029E  D16E               	goto	l14347
 10818                           
 10819                           ; BSR set to: 2
 10820  0002A0  A504               	btfss	(_loRa+4)& (0+255),2,b
 10821  0002A2  D16C               	goto	l14347
 10822                           
 10823                           ; BSR set to: 2
 10824                           ;lorawan.c: 1200: {
 10825                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10826  0002A4  C17B  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10827  0002A8  C17C  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10828  0002AC  EC56  F030         	call	_CheckMcastFlags	;wreg free
 10829  0002B0  0900               	iorlw	0
 10830  0002B2  E107               	bnz	l14247
 10831  0002B4                     l14241:
 10832                           
 10833                           ;lorawan.c: 1203: {
 10834                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10835  0002B4  0102               	movlb	2	; () banked
 10836  0002B6  5102               	movf	(_loRa+2)& (0+255),w,b
 10837  0002B8  0BF0               	andlw	-16
 10838  0002BA  0909               	iorlw	9
 10839  0002BC  6F02               	movwf	(_loRa+2)& (0+255),b
 10840                           
 10841                           ; BSR set to: 2
 10842                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10843  0002BE  EF94  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10844  0002C2                     l14247:
 10845                           
 10846                           ;lorawan.c: 1207: }
 10847                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10848  0002C2  0101               	movlb	1	; () banked
 10849  0002C4  EE20 F006          	lfsr	2,6
 10850  0002C8  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10851  0002CA  26D9               	addwf	fsr2l,f,c
 10852  0002CC  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10853  0002CE  22DA               	addwfc	fsr2h,f,c
 10854  0002D0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10855  0002D4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10856  0002D8  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10857  0002DC  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10858  0002E0  0100               	movlb	0	; () banked
 10859  0002E2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10860  0002E4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10861  0002E6  0101               	movlb	1	; () banked
 10862  0002E8  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10863  0002EA  0FFC               	addlw	252
 10864  0002EC  0100               	movlb	0	; () banked
 10865  0002EE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10866  0002F0  0E49               	movlw	73
 10867  0002F2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10868  0002F4  0E01               	movlw	1
 10869  0002F6  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10870  0002F8  EC83  F02C         	call	_AssembleEncryptionBlock
 10871                           
 10872                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10873  0002FC  0EEF               	movlw	low _radioBuffer
 10874  0002FE  6F64               	movwf	memcpy@d1& (0+255),b
 10875  000300  0E05               	movlw	high _radioBuffer
 10876  000302  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10877  000304  0EB4               	movlw	low _aesBuffer
 10878  000306  6F66               	movwf	memcpy@s1& (0+255),b
 10879  000308  0E01               	movlw	high _aesBuffer
 10880  00030A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10881  00030C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10882  00030E  0E10               	movlw	16
 10883  000310  6F68               	movwf	memcpy@n& (0+255),b
 10884  000312  EC0F  F034         	call	_memcpy	;wreg free
 10885                           
 10886                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10887  000316  0EFF               	movlw	low (_radioBuffer+16)
 10888  000318  6F64               	movwf	memcpy@d1& (0+255),b
 10889  00031A  0E05               	movlw	high (_radioBuffer+16)
 10890  00031C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10891  00031E  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10892  000322  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10893  000326  0EFC               	movlw	252
 10894  000328  0101               	movlb	1	; () banked
 10895  00032A  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10896  00032C  0100               	movlb	0	; () banked
 10897  00032E  6F68               	movwf	memcpy@n& (0+255),b
 10898  000330  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10899  000332  0EFF               	movlw	255
 10900  000334  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10901  000336  EC0F  F034         	call	_memcpy	;wreg free
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10905  00033A  0E66               	movlw	low (_loRa+102)
 10906  00033C  6FBC               	movwf	AESCmac@key& (0+255),b
 10907  00033E  0E02               	movlw	high (_loRa+102)
 10908  000340  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 10909  000342  0EB4               	movlw	low _aesBuffer
 10910  000344  6FBE               	movwf	AESCmac@output& (0+255),b
 10911  000346  0E01               	movlw	high _aesBuffer
 10912  000348  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 10913  00034A  0EEF               	movlw	low _radioBuffer
 10914  00034C  6FC0               	movwf	AESCmac@input& (0+255),b
 10915  00034E  0E05               	movlw	high _radioBuffer
 10916  000350  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 10917  000352  0101               	movlb	1	; () banked
 10918  000354  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10919  000356  0F0C               	addlw	12
 10920  000358  0100               	movlb	0	; () banked
 10921  00035A  6FC2               	movwf	AESCmac@size& (0+255),b
 10922  00035C  ECFD  F00B         	call	_AESCmac	;wreg free
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10926  000360  0E74               	movlw	low LORAWAN_RxDone@computedMic
 10927  000362  6F64               	movwf	memcpy@d1& (0+255),b
 10928  000364  0E01               	movlw	high LORAWAN_RxDone@computedMic
 10929  000366  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10930  000368  0EB4               	movlw	low _aesBuffer
 10931  00036A  6F66               	movwf	memcpy@s1& (0+255),b
 10932  00036C  0E01               	movlw	high _aesBuffer
 10933  00036E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10934  000370  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10935  000372  0E04               	movlw	4
 10936  000374  6F68               	movwf	memcpy@n& (0+255),b
 10937  000376  EC0F  F034         	call	_memcpy	;wreg free
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10941  00037A  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10942  00037E  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10943  000382  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10944  000386  EC4F  F036         	call	_ExtractMic	;wreg free
 10945  00038A  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10946  00038E  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10947  000392  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10948  000396  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10952  00039A  0101               	movlb	1	; () banked
 10953  00039C  516C               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10954  00039E  1974               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10955  0003A0  E189               	bnz	l14241
 10956  0003A2  516D               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10957  0003A4  1975               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10958  0003A6  E186               	bnz	l14241
 10959  0003A8  516E               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10960  0003AA  1976               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10961  0003AC  E183               	bnz	l14241
 10962  0003AE  516F               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10963  0003B0  1977               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10964  0003B2  E180               	bnz	l14241
 10965                           
 10966                           ; BSR set to: 1
 10967                           ;lorawan.c: 1222: }
 10968                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10969  0003B4  EE20 F006          	lfsr	2,6
 10970  0003B8  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10971  0003BA  26D9               	addwf	fsr2l,f,c
 10972  0003BC  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10973  0003BE  22DA               	addwfc	fsr2h,f,c
 10974  0003C0  0102               	movlb	2	; () banked
 10975  0003C2  510E               	movf	(_loRa+14)& (0+255),w,b
 10976  0003C4  5CDE               	subwf	postinc2,w,c
 10977  0003C6  510F               	movf	(_loRa+15)& (0+255),w,b
 10978  0003C8  58DE               	subwfb	postinc2,w,c
 10979  0003CA  E334               	bnc	l14281
 10980                           
 10981                           ; BSR set to: 2
 10982                           ;lorawan.c: 1225: {
 10983                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10984  0003CC  0101               	movlb	1	; () banked
 10985  0003CE  EE20 F006          	lfsr	2,6
 10986  0003D2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10987  0003D4  26D9               	addwf	fsr2l,f,c
 10988  0003D6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10989  0003D8  22DA               	addwfc	fsr2h,f,c
 10990  0003DA  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10991  0003DE  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10992  0003E2  0102               	movlb	2	; () banked
 10993  0003E4  510E               	movf	(_loRa+14)& (0+255),w,b
 10994  0003E6  0100               	movlb	0	; () banked
 10995  0003E8  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10996  0003EA  0102               	movlb	2	; () banked
 10997  0003EC  510F               	movf	(_loRa+15)& (0+255),w,b
 10998  0003EE  0100               	movlb	0	; () banked
 10999  0003F0  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11000  0003F2  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11001  0003F4  0102               	movlb	2	; () banked
 11002  0003F6  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 11003  0003F8  0100               	movlb	0	; () banked
 11004  0003FA  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11005  0003FC  0102               	movlb	2	; () banked
 11006  0003FE  599F               	subwfb	(_loRa+159)& (0+255),w,b
 11007  000400  E20D               	bc	l14279
 11008  000402                     l14267:
 11009                           
 11010                           ; BSR set to: 2
 11011                           ;lorawan.c: 1227: {
 11012                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 11013  000402  0100               	movlb	0	; () banked
 11014  000404  51E8               	movf	_rxPayload& (0+255),w,b
 11015  000406  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11016  000408  E101 D754          	bz	l14241
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;lorawan.c: 1229: {
 11020                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11021  00040C  6B64               	clrf	RxDataDone@pData& (0+255),b
 11022  00040E  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 11023  000410  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 11024  000412  0E05               	movlw	5
 11025  000414  6F67               	movwf	RxDataDone@status& (0+255),b
 11026  000416  D801               	call	u16058
 11027  000418  D74D               	goto	l14241
 11028  00041A                     u16058:
 11029  00041A  D0A7               	goto	u16158
 11030  00041C                     l14279:
 11031                           
 11032                           ; BSR set to: 2
 11033                           ;lorawan.c: 1237: else
 11034                           ;lorawan.c: 1238: {
 11035                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11036  00041C  0101               	movlb	1	; () banked
 11037  00041E  EE20 F006          	lfsr	2,6
 11038  000422  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11039  000424  26D9               	addwf	fsr2l,f,c
 11040  000426  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11041  000428  22DA               	addwfc	fsr2h,f,c
 11042  00042A  CFDE F20E          	movff	postinc2,_loRa+14
 11043  00042E  CFDD F20F          	movff	postdec2,_loRa+15
 11044  000432  D013               	goto	l14299
 11045  000434                     l14281:
 11046                           
 11047                           ; BSR set to: 2
 11048                           ;lorawan.c: 1242: else
 11049                           ;lorawan.c: 1243: {
 11050                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11051  000434  0101               	movlb	1	; () banked
 11052  000436  EE20 F006          	lfsr	2,6
 11053  00043A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11054  00043C  26D9               	addwf	fsr2l,f,c
 11055  00043E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11056  000440  22DA               	addwfc	fsr2h,f,c
 11057  000442  50DE               	movf	postinc2,w,c
 11058  000444  10DE               	iorwf	postinc2,w,c
 11059  000446  E1DD               	bnz	l14267
 11060                           
 11061                           ; BSR set to: 1
 11062  000448  0102               	movlb	2	; () banked
 11063  00044A  290E               	incf	(_loRa+14)& (0+255),w,b
 11064  00044C  E1DA               	bnz	l14267
 11065  00044E  290F               	incf	(_loRa+15)& (0+255),w,b
 11066  000450  E1D8               	bnz	l14267
 11067                           
 11068                           ; BSR set to: 2
 11069                           ;lorawan.c: 1245: {
 11070                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11071  000452  6B0E               	clrf	(_loRa+14)& (0+255),b
 11072  000454  6B0F               	clrf	(_loRa+15)& (0+255),b
 11073                           
 11074                           ; BSR set to: 2
 11075                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11076  000456  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11077  000458  2B11               	incf	(_loRa+17)& (0+255),f,b
 11078  00045A                     l14299:
 11079                           
 11080                           ;lorawan.c: 1259: }
 11081                           ;lorawan.c: 1260: }
 11082                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11083  00045A  0102               	movlb	2	; () banked
 11084  00045C  290E               	incf	(_loRa+14)& (0+255),w,b
 11085  00045E  E107               	bnz	l14311
 11086  000460  290F               	incf	(_loRa+15)& (0+255),w,b
 11087  000462  E105               	bnz	l14311
 11088  000464  2910               	incf	(_loRa+16)& (0+255),w,b
 11089  000466  E103               	bnz	l14311
 11090  000468  2911               	incf	(_loRa+17)& (0+255),w,b
 11091  00046A  E101               	bnz	l14311
 11092  00046C  D7CA               	goto	l14267
 11093  00046E                     l14311:
 11094                           
 11095                           ; BSR set to: 2
 11096                           ;lorawan.c: 1272: }
 11097                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11098  00046E  5102               	movf	(_loRa+2)& (0+255),w,b
 11099  000470  0B0F               	andlw	15
 11100  000472  0A08               	xorlw	8
 11101  000474  E108               	bnz	l14315
 11102                           
 11103                           ; BSR set to: 2
 11104                           ;lorawan.c: 1275: {
 11105                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11106  000476  51E4               	movf	(_loRa+228)& (0+255),w,b
 11107  000478  EC78  F03A         	call	_SwTimerStop
 11108                           
 11109                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11110  00047C  0102               	movlb	2	; () banked
 11111  00047E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11112  000480  EC78  F03A         	call	_SwTimerStop
 11113                           
 11114                           ;lorawan.c: 1278: }
 11115  000484  D007               	goto	l14319
 11116  000486                     l14315:
 11117                           
 11118                           ; BSR set to: 2
 11119                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11120  000486  5102               	movf	(_loRa+2)& (0+255),w,b
 11121  000488  0B0F               	andlw	15
 11122  00048A  0A03               	xorlw	3
 11123  00048C  E103               	bnz	l14319
 11124                           
 11125                           ; BSR set to: 2
 11126                           ;lorawan.c: 1280: {
 11127                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11128  00048E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11129  000490  EC78  F03A         	call	_SwTimerStop
 11130  000494                     l14319:
 11131                           
 11132                           ;lorawan.c: 1282: }
 11133                           ;lorawan.c: 1284: buffer = buffer + 8;
 11134  000494  0E08               	movlw	8
 11135  000496  0101               	movlb	1	; () banked
 11136  000498  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11137  00049A  0E00               	movlw	0
 11138  00049C  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11139                           
 11140                           ; BSR set to: 1
 11141                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11142  00049E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11143  0004A0  0100               	movlb	0	; () banked
 11144  0004A2  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11145  0004A4  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11146  0004A6  0101               	movlb	1	; () banked
 11147  0004A8  EE20 F005          	lfsr	2,5
 11148  0004AC  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11149  0004AE  26D9               	addwf	fsr2l,f,c
 11150  0004B0  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11151  0004B2  22DA               	addwfc	fsr2h,f,c
 11152  0004B4  50DF               	movf	223,w,c
 11153  0004B6  0B0F               	andlw	15
 11154  0004B8  0100               	movlb	0	; () banked
 11155  0004BA  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11156  0004BC  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11157  0004BE  0E0C               	movlw	12
 11158  0004C0  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11159  0004C2  0E00               	movlw	0
 11160  0004C4  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11161  0004C6  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11162  0004C8  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11163  0004CA  E103               	bnz	u16130
 11164  0004CC  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11165  0004CE  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11166  0004D0  E035               	bz	l2150
 11167  0004D2                     u16130:
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;lorawan.c: 1287: {
 11171                           ;lorawan.c: 1288: fPort = *(buffer++);
 11172  0004D2  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11173  0004D6  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11174  0004DA  50DF               	movf	indf2,w,c
 11175  0004DC  0101               	movlb	1	; () banked
 11176  0004DE  6F69               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11177                           
 11178                           ; BSR set to: 1
 11179  0004E0  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11180  0004E2  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11181                           
 11182                           ; BSR set to: 1
 11183                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11184  0004E4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11185  0004E6  0FF4               	addlw	244
 11186  0004E8  6F7A               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11187                           
 11188                           ; BSR set to: 1
 11189                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11190  0004EA  0E19               	movlw	25
 11191  0004EC  6F70               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11192                           
 11193                           ; BSR set to: 1
 11194                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11195  0004EE  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11196  0004F2  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11197  0004F6  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11198  0004F8  0100               	movlb	0	; () banked
 11199  0004FA  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11200  0004FC  0E01               	movlw	1
 11201  0004FE  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11202  000500  C20E  F098         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11203  000504  C20F  F099         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11204  000508  C210  F09A         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11205  00050C  C211  F09B         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11206  000510  0E76               	movlw	low (_loRa+118)
 11207  000512  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11208  000514  0E02               	movlw	high (_loRa+118)
 11209  000516  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11210  000518  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11211  00051C  0EEF               	movlw	low _radioBuffer
 11212  00051E  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11213  000520  0E05               	movlw	high _radioBuffer
 11214  000522  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11215  000524  0E01               	movlw	1
 11216  000526  6FA1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11217  000528  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;lorawan.c: 1294: packet = buffer - 1;
 11221  00052C  0EFF               	movlw	255
 11222  00052E  0101               	movlb	1	; () banked
 11223  000530  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11224  000532  6F72               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11225  000534  0EFF               	movlw	255
 11226  000536  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11227  000538  6F73               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11228                           
 11229                           ;lorawan.c: 1295: }
 11230  00053A  D004               	goto	l2151
 11231  00053C                     l2150:
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;lorawan.c: 1296: else
 11235                           ;lorawan.c: 1297: {
 11236                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11237  00053C  0101               	movlb	1	; () banked
 11238  00053E  6B7A               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11239                           
 11240                           ;lorawan.c: 1299: packet = (0);
 11241  000540  6B72               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11242  000542  6B73               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11243  000544                     l2151:
 11244                           
 11245                           ; BSR set to: 1
 11246                           ;lorawan.c: 1300: }
 11247                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11248  000544  0102               	movlb	2	; () banked
 11249  000546  8303               	bsf	(_loRa+3)& (0+255),1,b
 11250                           
 11251                           ; BSR set to: 2
 11252                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11253  000548  0EF0               	movlw	-16
 11254  00054A  1702               	andwf	(_loRa+2)& (0+255),f,b
 11255                           
 11256                           ; BSR set to: 2
 11257                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11258  00054C  0100               	movlb	0	; () banked
 11259  00054E  51E8               	movf	_rxPayload& (0+255),w,b
 11260  000550  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11261  000552  E101 D6AF          	bz	l14241
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;lorawan.c: 1306: {
 11265                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11266  000556  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11267  00055A  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11268  00055E  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11269  000562  0E01               	movlw	1
 11270  000564  6F67               	movwf	RxDataDone@status& (0+255),b
 11271  000566  D801               	call	u16158
 11272  000568  D6A5               	goto	l14241
 11273  00056A                     u16158:
 11274  00056A  0005               	push	
 11275  00056C  6EFA               	movwf	pclath,c
 11276  00056E  51E8               	movf	_rxPayload& (0+255),w,b
 11277  000570  6EFD               	movwf	tosl,c
 11278  000572  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11279  000574  6EFE               	movwf	tosh,c
 11280  000576  6AFF               	clrf	tosu,c
 11281  000578  50FA               	movf	pclath,w,c
 11282  00057A  0012               	return		;indir
 11283  00057C                     l14347:
 11284                           
 11285                           ; BSR set to: 2
 11286                           ;lorawan.c: 1313: }
 11287                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11288  00057C  0101               	movlb	1	; () banked
 11289  00057E  EE20 F001          	lfsr	2,1
 11290  000582  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11291  000584  26D9               	addwf	fsr2l,f,c
 11292  000586  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11293  000588  22DA               	addwfc	fsr2h,f,c
 11294  00058A  0102               	movlb	2	; () banked
 11295  00058C  511E               	movf	(_loRa+30)& (0+255),w,b
 11296  00058E  18DE               	xorwf	postinc2,w,c
 11297  000590  E109               	bnz	u16160
 11298  000592  511F               	movf	(_loRa+31)& (0+255),w,b
 11299  000594  18DE               	xorwf	postinc2,w,c
 11300  000596  E106               	bnz	u16160
 11301  000598  5120               	movf	(_loRa+32)& (0+255),w,b
 11302  00059A  18DE               	xorwf	postinc2,w,c
 11303  00059C  E103               	bnz	u16160
 11304  00059E  5121               	movf	(_loRa+33)& (0+255),w,b
 11305  0005A0  18DE               	xorwf	postinc2,w,c
 11306  0005A2  E008               	bz	l14359
 11307  0005A4                     u16160:
 11308                           
 11309                           ; BSR set to: 2
 11310                           ;lorawan.c: 1317: {
 11311                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11312  0005A4  EC97  F031         	call	_SetReceptionNotOkState	;wreg free
 11313  0005A8                     l14351:
 11314                           
 11315                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11316  0005A8  0E02               	movlw	2
 11317  0005AA  0102               	movlb	2	; () banked
 11318  0005AC                     L5:
 11319  0005AC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11320  0005AE  E101 D681          	bz	l14241
 11321  0005B2  0012               	return	
 11322  0005B4                     l14359:
 11323                           
 11324                           ; BSR set to: 2
 11325                           ;lorawan.c: 1325: }
 11326                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11327  0005B4  0101               	movlb	1	; () banked
 11328  0005B6  EE20 F006          	lfsr	2,6
 11329  0005BA  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11330  0005BC  26D9               	addwf	fsr2l,f,c
 11331  0005BE  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11332  0005C0  22DA               	addwfc	fsr2h,f,c
 11333  0005C2  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11334  0005C6  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11335  0005CA  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11336  0005CE  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11337  0005D2  0100               	movlb	0	; () banked
 11338  0005D4  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11339  0005D6  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11340  0005D8  0101               	movlb	1	; () banked
 11341  0005DA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11342  0005DC  0FFC               	addlw	252
 11343  0005DE  0100               	movlb	0	; () banked
 11344  0005E0  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11345  0005E2  0E49               	movlw	73
 11346  0005E4  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11347  0005E6  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11348  0005E8  0E01               	movlw	1
 11349  0005EA  EC83  F02C         	call	_AssembleEncryptionBlock
 11350                           
 11351                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11352  0005EE  0EEF               	movlw	low _radioBuffer
 11353  0005F0  6F64               	movwf	memcpy@d1& (0+255),b
 11354  0005F2  0E05               	movlw	high _radioBuffer
 11355  0005F4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11356  0005F6  0EB4               	movlw	low _aesBuffer
 11357  0005F8  6F66               	movwf	memcpy@s1& (0+255),b
 11358  0005FA  0E01               	movlw	high _aesBuffer
 11359  0005FC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11360  0005FE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11361  000600  0E10               	movlw	16
 11362  000602  6F68               	movwf	memcpy@n& (0+255),b
 11363  000604  EC0F  F034         	call	_memcpy	;wreg free
 11364                           
 11365                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11366  000608  0EFF               	movlw	low (_radioBuffer+16)
 11367  00060A  6F64               	movwf	memcpy@d1& (0+255),b
 11368  00060C  0E05               	movlw	high (_radioBuffer+16)
 11369  00060E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11370  000610  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11371  000614  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11372  000618  0EFC               	movlw	252
 11373  00061A  0101               	movlb	1	; () banked
 11374  00061C  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11375  00061E  0100               	movlb	0	; () banked
 11376  000620  6F68               	movwf	memcpy@n& (0+255),b
 11377  000622  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11378  000624  0EFF               	movlw	255
 11379  000626  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11380  000628  EC0F  F034         	call	_memcpy	;wreg free
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11384  00062C  0E22               	movlw	low (_loRa+34)
 11385  00062E  6FBC               	movwf	AESCmac@key& (0+255),b
 11386  000630  0E02               	movlw	high (_loRa+34)
 11387  000632  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 11388  000634  0EB4               	movlw	low _aesBuffer
 11389  000636  6FBE               	movwf	AESCmac@output& (0+255),b
 11390  000638  0E01               	movlw	high _aesBuffer
 11391  00063A  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 11392  00063C  0EEF               	movlw	low _radioBuffer
 11393  00063E  6FC0               	movwf	AESCmac@input& (0+255),b
 11394  000640  0E05               	movlw	high _radioBuffer
 11395  000642  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 11396  000644  0101               	movlb	1	; () banked
 11397  000646  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11398  000648  0F0C               	addlw	12
 11399  00064A  0100               	movlb	0	; () banked
 11400  00064C  6FC2               	movwf	AESCmac@size& (0+255),b
 11401  00064E  ECFD  F00B         	call	_AESCmac	;wreg free
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11405  000652  0E74               	movlw	low LORAWAN_RxDone@computedMic
 11406  000654  6F64               	movwf	memcpy@d1& (0+255),b
 11407  000656  0E01               	movlw	high LORAWAN_RxDone@computedMic
 11408  000658  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11409  00065A  0EB4               	movlw	low _aesBuffer
 11410  00065C  6F66               	movwf	memcpy@s1& (0+255),b
 11411  00065E  0E01               	movlw	high _aesBuffer
 11412  000660  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11413  000662  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11414  000664  0E04               	movlw	4
 11415  000666  6F68               	movwf	memcpy@n& (0+255),b
 11416  000668  EC0F  F034         	call	_memcpy	;wreg free
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11420  00066C  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11421  000670  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11422  000674  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11423  000678  EC4F  F036         	call	_ExtractMic	;wreg free
 11424  00067C  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11425  000680  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11426  000684  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11427  000688  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11431  00068C  0101               	movlb	1	; () banked
 11432  00068E  516C               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11433  000690  1974               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11434  000692  E109               	bnz	u16180
 11435  000694  516D               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11436  000696  1975               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11437  000698  E106               	bnz	u16180
 11438  00069A  516E               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11439  00069C  1976               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11440  00069E  E103               	bnz	u16180
 11441  0006A0  516F               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11442  0006A2  1977               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11443  0006A4  E003               	bz	l14379
 11444  0006A6                     u16180:
 11445                           
 11446                           ; BSR set to: 1
 11447                           ;lorawan.c: 1337: {
 11448                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11449  0006A6  EC97  F031         	call	_SetReceptionNotOkState	;wreg free
 11450  0006AA  D77E               	goto	l14351
 11451  0006AC                     l14379:
 11452                           
 11453                           ; BSR set to: 1
 11454                           ;lorawan.c: 1345: }
 11455                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11456  0006AC  EE20 F006          	lfsr	2,6
 11457  0006B0  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11458  0006B2  26D9               	addwf	fsr2l,f,c
 11459  0006B4  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11460  0006B6  22DA               	addwfc	fsr2h,f,c
 11461  0006B8  0102               	movlb	2	; () banked
 11462  0006BA  510A               	movf	(_loRa+10)& (0+255),w,b
 11463  0006BC  5CDE               	subwf	postinc2,w,c
 11464  0006BE  510B               	movf	(_loRa+11)& (0+255),w,b
 11465  0006C0  58DE               	subwfb	postinc2,w,c
 11466  0006C2  E344               	bnc	l14409
 11467                           
 11468                           ; BSR set to: 2
 11469                           ;lorawan.c: 1349: {
 11470                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11471  0006C4  0101               	movlb	1	; () banked
 11472  0006C6  EE20 F006          	lfsr	2,6
 11473  0006CA  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11474  0006CC  26D9               	addwf	fsr2l,f,c
 11475  0006CE  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11476  0006D0  22DA               	addwfc	fsr2h,f,c
 11477  0006D2  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11478  0006D6  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11479  0006DA  0102               	movlb	2	; () banked
 11480  0006DC  510A               	movf	(_loRa+10)& (0+255),w,b
 11481  0006DE  0100               	movlb	0	; () banked
 11482  0006E0  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11483  0006E2  0102               	movlb	2	; () banked
 11484  0006E4  510B               	movf	(_loRa+11)& (0+255),w,b
 11485  0006E6  0100               	movlb	0	; () banked
 11486  0006E8  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11487  0006EA  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11488  0006EC  0102               	movlb	2	; () banked
 11489  0006EE  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11490  0006F0  0100               	movlb	0	; () banked
 11491  0006F2  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11492  0006F4  0102               	movlb	2	; () banked
 11493  0006F6  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11494  0006F8  E21D               	bc	l14407
 11495                           
 11496                           ; BSR set to: 2
 11497                           ;lorawan.c: 1351: {
 11498                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11499  0006FA  9100               	bcf	_loRa& (0+255),0,b
 11500                           
 11501                           ; BSR set to: 2
 11502                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11503  0006FC  0EF0               	movlw	-16
 11504  0006FE  1702               	andwf	(_loRa+2)& (0+255),f,b
 11505                           
 11506                           ; BSR set to: 2
 11507                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11508  000700  0100               	movlb	0	; () banked
 11509  000702  51E8               	movf	_rxPayload& (0+255),w,b
 11510  000704  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11511  000706  E013               	bz	l14393
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;lorawan.c: 1355: {
 11515                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11516  000708  0102               	movlb	2	; () banked
 11517  00070A  9B00               	bcf	_loRa& (0+255),5,b
 11518                           
 11519                           ; BSR set to: 2
 11520                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11521  00070C  0E00               	movlw	0
 11522  00070E  0100               	movlb	0	; () banked
 11523  000710  6B64               	clrf	RxDataDone@pData& (0+255),b
 11524  000712  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 11525  000714  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 11526  000716  6B67               	clrf	RxDataDone@status& (0+255),b
 11527  000718  D801               	call	u16238
 11528  00071A  D009               	goto	l14393
 11529  00071C                     u16238:
 11530  00071C  0005               	push	
 11531  00071E  6EFA               	movwf	pclath,c
 11532  000720  51E8               	movf	_rxPayload& (0+255),w,b
 11533  000722  6EFD               	movwf	tosl,c
 11534  000724  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11535  000726  6EFE               	movwf	tosh,c
 11536  000728  6AFF               	clrf	tosu,c
 11537  00072A  50FA               	movf	pclath,w,c
 11538  00072C  0012               	return		;indir
 11539  00072E                     l14393:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;lorawan.c: 1358: }
 11543                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11544  00072E  0102               	movlb	2	; () banked
 11545  000730  9303               	bcf	(_loRa+3)& (0+255),1,b
 11546  000732  D036               	goto	l14429
 11547  000734                     l14407:
 11548                           
 11549                           ; BSR set to: 2
 11550                           ;lorawan.c: 1370: else
 11551                           ;lorawan.c: 1371: {
 11552                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11553  000734  0101               	movlb	1	; () banked
 11554  000736  EE20 F006          	lfsr	2,6
 11555  00073A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11556  00073C  26D9               	addwf	fsr2l,f,c
 11557  00073E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11558  000740  22DA               	addwfc	fsr2h,f,c
 11559  000742  CFDE F20A          	movff	postinc2,_loRa+10
 11560  000746  CFDD F20B          	movff	postdec2,_loRa+11
 11561  00074A  D021               	goto	l14427
 11562  00074C                     l14409:
 11563                           
 11564                           ; BSR set to: 2
 11565                           ;lorawan.c: 1375: else
 11566                           ;lorawan.c: 1376: {
 11567                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11568  00074C  0101               	movlb	1	; () banked
 11569  00074E  EE20 F006          	lfsr	2,6
 11570  000752  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11571  000754  26D9               	addwf	fsr2l,f,c
 11572  000756  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11573  000758  22DA               	addwfc	fsr2h,f,c
 11574  00075A  50DE               	movf	postinc2,w,c
 11575  00075C  10DE               	iorwf	postinc2,w,c
 11576  00075E  E114               	bnz	l14417
 11577                           
 11578                           ; BSR set to: 1
 11579  000760  0102               	movlb	2	; () banked
 11580  000762  290A               	incf	(_loRa+10)& (0+255),w,b
 11581  000764  E111               	bnz	l14417
 11582  000766  290B               	incf	(_loRa+11)& (0+255),w,b
 11583  000768  E10F               	bnz	l14417
 11584                           
 11585                           ; BSR set to: 2
 11586                           ;lorawan.c: 1378: {
 11587                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11588  00076A  0101               	movlb	1	; () banked
 11589  00076C  EE20 F006          	lfsr	2,6
 11590  000770  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11591  000772  26D9               	addwf	fsr2l,f,c
 11592  000774  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11593  000776  22DA               	addwfc	fsr2h,f,c
 11594  000778  CFDE F20A          	movff	postinc2,_loRa+10
 11595  00077C  CFDD F20B          	movff	postdec2,_loRa+11
 11596                           
 11597                           ; BSR set to: 1
 11598                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11599  000780  0102               	movlb	2	; () banked
 11600  000782  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11601  000784  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11602                           
 11603                           ;lorawan.c: 1382: }
 11604  000786  D003               	goto	l14427
 11605  000788                     l14417:
 11606                           
 11607                           ;lorawan.c: 1383: else
 11608                           ;lorawan.c: 1384: {
 11609                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11610  000788  EC97  F031         	call	_SetReceptionNotOkState	;wreg free
 11611  00078C  D70D               	goto	l14351
 11612  00078E                     l14427:
 11613                           
 11614                           ;lorawan.c: 1393: }
 11615                           ;lorawan.c: 1394: }
 11616                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11617  00078E  0102               	movlb	2	; () banked
 11618  000790  290A               	incf	(_loRa+10)& (0+255),w,b
 11619  000792  E109               	bnz	l14439
 11620  000794  290B               	incf	(_loRa+11)& (0+255),w,b
 11621  000796  E107               	bnz	l14439
 11622  000798  290C               	incf	(_loRa+12)& (0+255),w,b
 11623  00079A  E105               	bnz	l14439
 11624  00079C  290D               	incf	(_loRa+13)& (0+255),w,b
 11625  00079E  E103               	bnz	l14439
 11626  0007A0                     l14429:
 11627                           
 11628                           ; BSR set to: 2
 11629                           ;lorawan.c: 1397: {
 11630                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11631  0007A0  8304               	bsf	(_loRa+4)& (0+255),1,b
 11632                           
 11633                           ; BSR set to: 2
 11634                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11635  0007A2  0E02               	movlw	2
 11636  0007A4  D703               	goto	L5
 11637  0007A6                     l14439:
 11638                           
 11639                           ; BSR set to: 2
 11640                           ;lorawan.c: 1407: }
 11641                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11642  0007A6  5102               	movf	(_loRa+2)& (0+255),w,b
 11643  0007A8  0B0F               	andlw	15
 11644  0007AA  0A03               	xorlw	3
 11645  0007AC  E103               	bnz	l14443
 11646                           
 11647                           ; BSR set to: 2
 11648                           ;lorawan.c: 1411: {
 11649                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11650  0007AE  51E5               	movf	(_loRa+229)& (0+255),w,b
 11651  0007B0  EC78  F03A         	call	_SwTimerStop
 11652  0007B4                     l14443:
 11653                           
 11654                           ;lorawan.c: 1413: }
 11655                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11656  0007B4  0E01               	movlw	1
 11657  0007B6  0102               	movlb	2	; () banked
 11658  0007B8  6FD8               	movwf	(_loRa+216)& (0+255),b
 11659                           
 11660                           ; BSR set to: 2
 11661                           ;lorawan.c: 1417: CheckFlags (hdr);
 11662  0007BA  C17B  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11663  0007BE  C17C  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11664  0007C2  EC57  F033         	call	_CheckFlags	;wreg free
 11665                           
 11666                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11667  0007C6  0101               	movlb	1	; () banked
 11668  0007C8  EE20 F005          	lfsr	2,5
 11669  0007CC  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11670  0007CE  26D9               	addwf	fsr2l,f,c
 11671  0007D0  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11672  0007D2  22DA               	addwfc	fsr2h,f,c
 11673  0007D4  50DF               	movf	223,w,c
 11674  0007D6  0B0F               	andlw	15
 11675  0007D8  E01B               	bz	l14451
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;lorawan.c: 1420: {
 11679                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11680  0007DA  0E08               	movlw	8
 11681  0007DC  257B               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11682  0007DE  0100               	movlb	0	; () banked
 11683  0007E0  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11684  0007E2  0E00               	movlw	0
 11685  0007E4  0101               	movlb	1	; () banked
 11686  0007E6  217C               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11687  0007E8  0100               	movlb	0	; () banked
 11688  0007EA  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11689  0007EC  0101               	movlb	1	; () banked
 11690  0007EE  EE20 F005          	lfsr	2,5
 11691  0007F2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11692  0007F4  26D9               	addwf	fsr2l,f,c
 11693  0007F6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11694  0007F8  22DA               	addwfc	fsr2h,f,c
 11695  0007FA  50DF               	movf	223,w,c
 11696  0007FC  0B0F               	andlw	15
 11697  0007FE  0100               	movlb	0	; () banked
 11698  000800  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11699  000802  ECDB  F016         	call	_MacExecuteCommands	;wreg free
 11700  000806  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11701  00080A  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11702                           
 11703                           ;lorawan.c: 1422: }
 11704  00080E  D004               	goto	l14453
 11705  000810                     l14451:
 11706                           
 11707                           ; BSR set to: 1
 11708                           ;lorawan.c: 1423: else
 11709                           ;lorawan.c: 1424: {
 11710                           ;lorawan.c: 1425: buffer = buffer + 8;
 11711  000810  0E08               	movlw	8
 11712  000812  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11713  000814  0E00               	movlw	0
 11714  000816  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11715  000818                     l14453:
 11716                           
 11717                           ;lorawan.c: 1426: }
 11718                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11719  000818  0101               	movlb	1	; () banked
 11720  00081A  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11721  00081C  0100               	movlb	0	; () banked
 11722  00081E  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11723  000820  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11724  000822  0101               	movlb	1	; () banked
 11725  000824  EE20 F005          	lfsr	2,5
 11726  000828  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11727  00082A  26D9               	addwf	fsr2l,f,c
 11728  00082C  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11729  00082E  22DA               	addwfc	fsr2h,f,c
 11730  000830  50DF               	movf	223,w,c
 11731  000832  0B0F               	andlw	15
 11732  000834  0100               	movlb	0	; () banked
 11733  000836  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11734  000838  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11735  00083A  0E0C               	movlw	12
 11736  00083C  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11737  00083E  0E00               	movlw	0
 11738  000840  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11739  000842  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11740  000844  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11741  000846  E104               	bnz	u16320
 11742  000848  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11743  00084A  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11744  00084C  E101 D094          	bz	l2171
 11745  000850                     u16320:
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;lorawan.c: 1428: {
 11749                           ;lorawan.c: 1429: fPort = *(buffer++);
 11750  000850  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11751  000854  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11752  000858  50DF               	movf	indf2,w,c
 11753  00085A  0101               	movlb	1	; () banked
 11754  00085C  6F69               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11755                           
 11756                           ; BSR set to: 1
 11757  00085E  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11758  000860  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11759                           
 11760                           ; BSR set to: 1
 11761                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11762  000862  EE20 F005          	lfsr	2,5
 11763  000866  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11764  000868  26D9               	addwf	fsr2l,f,c
 11765  00086A  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11766  00086C  22DA               	addwfc	fsr2h,f,c
 11767  00086E  50DF               	movf	223,w,c
 11768  000870  0B0F               	andlw	15
 11769  000872  0100               	movlb	0	; () banked
 11770  000874  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11771  000876  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11772  000878  0101               	movlb	1	; () banked
 11773  00087A  5D68               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11774  00087C  0FF4               	addlw	244
 11775  00087E  6F7A               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11776                           
 11777                           ; BSR set to: 1
 11778                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11779  000880  EE20 F005          	lfsr	2,5
 11780  000884  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11781  000886  26D9               	addwf	fsr2l,f,c
 11782  000888  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11783  00088A  22DA               	addwfc	fsr2h,f,c
 11784  00088C  50DF               	movf	223,w,c
 11785  00088E  0B0F               	andlw	15
 11786  000890  0F19               	addlw	25
 11787  000892  6F70               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11788                           
 11789                           ; BSR set to: 1
 11790                           ;lorawan.c: 1434: if (fPort != 0)
 11791  000894  5169               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11792  000896  E026               	bz	l14469
 11793                           
 11794                           ; BSR set to: 1
 11795                           ;lorawan.c: 1435: {
 11796                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11797  000898  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11798  00089C  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11799  0008A0  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11800  0008A2  0100               	movlb	0	; () banked
 11801  0008A4  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11802  0008A6  0E01               	movlw	1
 11803  0008A8  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11804  0008AA  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11805  0008AE  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11806  0008B2  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11807  0008B6  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11808  0008BA  0E32               	movlw	low (_loRa+50)
 11809  0008BC  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11810  0008BE  0E02               	movlw	high (_loRa+50)
 11811  0008C0  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11812  0008C2  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11813  0008C6  0EEF               	movlw	low _radioBuffer
 11814  0008C8  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11815  0008CA  0E05               	movlw	high _radioBuffer
 11816  0008CC  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11817  0008CE  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11818  0008D0  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;lorawan.c: 1437: packet = buffer - 1;
 11822  0008D4  0EFF               	movlw	255
 11823  0008D6  0101               	movlb	1	; () banked
 11824  0008D8  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11825  0008DA  6F72               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11826  0008DC  0EFF               	movlw	255
 11827  0008DE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11828  0008E0  6F73               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11829                           
 11830                           ;lorawan.c: 1438: }
 11831  0008E2  D04E               	goto	l14479
 11832  0008E4                     l14469:
 11833                           
 11834                           ; BSR set to: 1
 11835                           ;lorawan.c: 1439: else
 11836                           ;lorawan.c: 1440: {
 11837                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11838  0008E4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11839  0008E6  0100               	movlb	0	; () banked
 11840  0008E8  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11841  0008EA  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11842  0008EC  0101               	movlb	1	; () banked
 11843  0008EE  EE20 F005          	lfsr	2,5
 11844  0008F2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11845  0008F4  26D9               	addwf	fsr2l,f,c
 11846  0008F6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11847  0008F8  22DA               	addwfc	fsr2h,f,c
 11848  0008FA  50DF               	movf	223,w,c
 11849  0008FC  0B0F               	andlw	15
 11850  0008FE  0100               	movlb	0	; () banked
 11851  000900  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11852  000902  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11853  000904  0E0D               	movlw	13
 11854  000906  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11855  000908  0E00               	movlw	0
 11856  00090A  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11857  00090C  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11858  00090E  5DDF               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11859  000910  51E0               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11860  000912  0A80               	xorlw	128
 11861  000914  6FE1               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11862  000916  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11863  000918  0A80               	xorlw	128
 11864  00091A  59E1               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11865  00091C  E22D               	bc	l2171
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;lorawan.c: 1443: {
 11869                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11870  00091E  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11871  000922  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11872  000926  0101               	movlb	1	; () banked
 11873  000928  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11874  00092A  0100               	movlb	0	; () banked
 11875  00092C  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11876  00092E  0E01               	movlw	1
 11877  000930  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11878  000932  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11879  000936  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11880  00093A  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11881  00093E  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11882  000942  0E22               	movlw	low (_loRa+34)
 11883  000944  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11884  000946  0E02               	movlw	high (_loRa+34)
 11885  000948  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11886  00094A  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11887  00094E  0EEF               	movlw	low _radioBuffer
 11888  000950  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11889  000952  0E05               	movlw	high _radioBuffer
 11890  000954  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11891  000956  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11892  000958  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11896  00095C  C166  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11897  000960  C167  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11898  000964  0101               	movlb	1	; () banked
 11899  000966  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11900  000968  0100               	movlb	0	; () banked
 11901  00096A  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11902  00096C  ECDB  F016         	call	_MacExecuteCommands	;wreg free
 11903  000970  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11904  000974  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11905  000978                     l2171:
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;lorawan.c: 1453: else
 11909                           ;lorawan.c: 1454: {
 11910                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11911  000978  0101               	movlb	1	; () banked
 11912  00097A  6B7A               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11913                           
 11914                           ;lorawan.c: 1456: packet = (0);
 11915  00097C  6B72               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11916  00097E  6B73               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11917  000980                     l14479:
 11918                           
 11919                           ; BSR set to: 1
 11920                           ;lorawan.c: 1457: }
 11921                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11922  000980  0E01               	movlw	1
 11923  000982  0102               	movlb	2	; () banked
 11924  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 11925                           
 11926                           ; BSR set to: 2
 11927                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11928  000986  6BD0               	clrf	(_loRa+208)& (0+255),b
 11929  000988  6BD1               	clrf	(_loRa+209)& (0+255),b
 11930                           
 11931                           ; BSR set to: 2
 11932                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11933  00098A  6BEE               	clrf	(_loRa+238)& (0+255),b
 11934                           
 11935                           ; BSR set to: 2
 11936                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11937  00098C  9900               	bcf	_loRa& (0+255),4,b
 11938                           
 11939                           ; BSR set to: 2
 11940                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11941  00098E  8303               	bsf	(_loRa+3)& (0+255),1,b
 11942                           
 11943                           ; BSR set to: 2
 11944                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11945  000990  A100               	btfss	_loRa& (0+255),0,b
 11946  000992  D04D               	goto	l14523
 11947                           
 11948                           ; BSR set to: 2
 11949                           ;lorawan.c: 1468: {
 11950                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11951  000994  0101               	movlb	1	; () banked
 11952  000996  EE20 F005          	lfsr	2,5
 11953  00099A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11954  00099C  26D9               	addwf	fsr2l,f,c
 11955  00099E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11956  0009A0  22DA               	addwfc	fsr2h,f,c
 11957  0009A2  AADF               	btfss	indf2,5,c
 11958  0009A4  D041               	goto	l14521
 11959                           
 11960                           ; BSR set to: 1
 11961                           ;lorawan.c: 1470: {
 11962                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11963  0009A6  0102               	movlb	2	; () banked
 11964  0009A8  9100               	bcf	_loRa& (0+255),0,b
 11965                           
 11966                           ; BSR set to: 2
 11967                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11968  0009AA  0EF0               	movlw	-16
 11969  0009AC  1702               	andwf	(_loRa+2)& (0+255),f,b
 11970                           
 11971                           ; BSR set to: 2
 11972                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11973  0009AE  0100               	movlb	0	; () banked
 11974  0009B0  51E8               	movf	_rxPayload& (0+255),w,b
 11975  0009B2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11976  0009B4  E016               	bz	l14503
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;lorawan.c: 1474: {
 11980                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11981  0009B6  0102               	movlb	2	; () banked
 11982  0009B8  9B00               	bcf	_loRa& (0+255),5,b
 11983                           
 11984                           ; BSR set to: 2
 11985                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11986  0009BA  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11987  0009BE  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11988  0009C2  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11989  0009C6  0E01               	movlw	1
 11990  0009C8  0100               	movlb	0	; () banked
 11991  0009CA  6F67               	movwf	RxDataDone@status& (0+255),b
 11992  0009CC  D801               	call	u16388
 11993  0009CE  D009               	goto	l14503
 11994  0009D0                     u16388:
 11995  0009D0  0005               	push	
 11996  0009D2  6EFA               	movwf	pclath,c
 11997  0009D4  51E8               	movf	_rxPayload& (0+255),w,b
 11998  0009D6  6EFD               	movwf	tosl,c
 11999  0009D8  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12000  0009DA  6EFE               	movwf	tosh,c
 12001  0009DC  6AFF               	clrf	tosu,c
 12002  0009DE  50FA               	movf	pclath,w,c
 12003  0009E0  0012               	return		;indir
 12004  0009E2                     l14503:
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;lorawan.c: 1477: }
 12008                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 12009  0009E2  0102               	movlb	2	; () banked
 12010  0009E4  9303               	bcf	(_loRa+3)& (0+255),1,b
 12011                           
 12012                           ; BSR set to: 2
 12013                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12014  0009E6  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12015                           
 12016                           ; BSR set to: 2
 12017  0009E8  BB00               	btfsc	_loRa& (0+255),5,b
 12018  0009EA  D5DE               	goto	l14351
 12019                           
 12020                           ; BSR set to: 2
 12021  0009EC  B300               	btfsc	_loRa& (0+255),1,b
 12022  0009EE  D002               	goto	l14513
 12023                           
 12024                           ; BSR set to: 2
 12025  0009F0  A700               	btfss	_loRa& (0+255),3,b
 12026  0009F2  D5DA               	goto	l14351
 12027  0009F4                     l14513:
 12028                           
 12029                           ; BSR set to: 2
 12030                           ;lorawan.c: 1480: {
 12031                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12032  0009F4  0E01               	movlw	1
 12033  0009F6  0100               	movlb	0	; () banked
 12034  0009F8  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12035  0009FA  0E6A               	movlw	low LORAWAN_RxDone@channelIndex
 12036  0009FC  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12037  0009FE  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 12038  000A00  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12039  000A02  0102               	movlb	2	; () banked
 12040  000A04  51ED               	movf	(_loRa+237)& (0+255),w,b
 12041  000A06  EC81  F027         	call	_SearchAvailableChannel
 12042  000A0A  0900               	iorlw	0
 12043  000A0C  E10A               	bnz	l14519
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;lorawan.c: 1482: {
 12047                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12048  000A0E  0E00               	movlw	0
 12049  000A10  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12050  000A12  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12051  000A14  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12052  000A16  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12053  000A18  EC5F  F02A         	call	_LORAWAN_Send
 12054  000A1C                     l14517:
 12055                           
 12056                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12057  000A1C  0102               	movlb	2	; () banked
 12058  000A1E  9700               	bcf	_loRa& (0+255),3,b
 12059                           
 12060                           ;lorawan.c: 1485: }
 12061  000A20  D5C3               	goto	l14351
 12062  000A22                     l14519:
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;lorawan.c: 1486: else
 12066                           ;lorawan.c: 1487: {
 12067                           ;lorawan.c: 1489: StartReTxTimer();
 12068  000A22  ECE9  F021         	call	_StartReTxTimer	;wreg free
 12069  000A26  D5C0               	goto	l14351
 12070  000A28                     l14521:
 12071                           
 12072                           ; BSR set to: 1
 12073                           ;lorawan.c: 1494: else
 12074                           ;lorawan.c: 1495: {
 12075                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12076  000A28  ECC7  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12077  000A2C  D5BD               	goto	l14351
 12078  000A2E                     l14523:
 12079                           
 12080                           ; BSR set to: 2
 12081                           ;lorawan.c: 1499: else
 12082                           ;lorawan.c: 1500: {
 12083                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12084  000A2E  0EF0               	movlw	-16
 12085  000A30  1702               	andwf	(_loRa+2)& (0+255),f,b
 12086                           
 12087                           ; BSR set to: 2
 12088                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12089  000A32  0100               	movlb	0	; () banked
 12090  000A34  51E8               	movf	_rxPayload& (0+255),w,b
 12091  000A36  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12092  000A38  E016               	bz	l14531
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;lorawan.c: 1504: {
 12096                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12097  000A3A  0102               	movlb	2	; () banked
 12098  000A3C  9B00               	bcf	_loRa& (0+255),5,b
 12099                           
 12100                           ; BSR set to: 2
 12101                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12102  000A3E  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12103  000A42  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12104  000A46  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12105  000A4A  0E01               	movlw	1
 12106  000A4C  0100               	movlb	0	; () banked
 12107  000A4E  6F67               	movwf	RxDataDone@status& (0+255),b
 12108  000A50  D801               	call	u16458
 12109  000A52  D009               	goto	l14531
 12110  000A54                     u16458:
 12111  000A54  0005               	push	
 12112  000A56  6EFA               	movwf	pclath,c
 12113  000A58  51E8               	movf	_rxPayload& (0+255),w,b
 12114  000A5A  6EFD               	movwf	tosl,c
 12115  000A5C  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12116  000A5E  6EFE               	movwf	tosh,c
 12117  000A60  6AFF               	clrf	tosu,c
 12118  000A62  50FA               	movf	pclath,w,c
 12119  000A64  0012               	return		;indir
 12120  000A66                     l14531:
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;lorawan.c: 1507: }
 12124                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12125  000A66  0102               	movlb	2	; () banked
 12126  000A68  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12127                           
 12128                           ; BSR set to: 2
 12129  000A6A  BB00               	btfsc	_loRa& (0+255),5,b
 12130  000A6C  D59D               	goto	l14351
 12131                           
 12132                           ; BSR set to: 2
 12133  000A6E  B300               	btfsc	_loRa& (0+255),1,b
 12134  000A70  D002               	goto	l14539
 12135                           
 12136                           ; BSR set to: 2
 12137  000A72  A700               	btfss	_loRa& (0+255),3,b
 12138  000A74  D599               	goto	l14351
 12139  000A76                     l14539:
 12140                           
 12141                           ; BSR set to: 2
 12142                           ;lorawan.c: 1510: {
 12143                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12144  000A76  0E01               	movlw	1
 12145  000A78  0100               	movlb	0	; () banked
 12146  000A7A  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12147  000A7C  0E6A               	movlw	low LORAWAN_RxDone@channelIndex
 12148  000A7E  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12149  000A80  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 12150  000A82  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12151  000A84  0102               	movlb	2	; () banked
 12152  000A86  51ED               	movf	(_loRa+237)& (0+255),w,b
 12153  000A88  EC81  F027         	call	_SearchAvailableChannel
 12154  000A8C  0900               	iorlw	0
 12155  000A8E  E1C9               	bnz	l14519
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;lorawan.c: 1512: {
 12159                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12160  000A90  0E00               	movlw	0
 12161  000A92  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12162  000A94  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12163  000A96  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12164  000A98  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12165  000A9A  EC5F  F02A         	call	_LORAWAN_Send
 12166  000A9E  D7BE               	goto	l14517
 12167  000AA0                     l14557:
 12168                           
 12169                           ; BSR set to: 2
 12170                           ;lorawan.c: 1537: else
 12171                           ;lorawan.c: 1538: {
 12172                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12173  000AA0  0100               	movlb	0	; () banked
 12174  000AA2  51E8               	movf	_rxPayload& (0+255),w,b
 12175  000AA4  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12176  000AA6  B4D8               	btfsc	status,2,c
 12177  000AA8  0012               	return	
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;lorawan.c: 1541: {
 12181                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12182  000AAA  EC64  F03C         	call	_RADIO_GetStatus	;wreg free
 12183  000AAE  0100               	movlb	0	; () banked
 12184  000AB0  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 12185  000AB2  B7DD               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12186  000AB4  D011               	goto	l14563
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;lorawan.c: 1543: {
 12190                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12191  000AB6  C166  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12192  000ABA  C167  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12193  000ABE  C168  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12194  000AC2  0E03               	movlw	3
 12195  000AC4  6F67               	movwf	RxDataDone@status& (0+255),b
 12196  000AC6  0005               	push	
 12197  000AC8  6EFA               	movwf	pclath,c
 12198  000ACA  51E8               	movf	_rxPayload& (0+255),w,b
 12199  000ACC  6EFD               	movwf	tosl,c
 12200  000ACE  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12201  000AD0  6EFE               	movwf	tosh,c
 12202  000AD2  6AFF               	clrf	tosu,c
 12203  000AD4  50FA               	movf	pclath,w,c
 12204  000AD6  0012               	return		;indir
 12205  000AD8                     l14563:
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;lorawan.c: 1546: else
 12209                           ;lorawan.c: 1547: {
 12210                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12211  000AD8  C166  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12212  000ADC  C167  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12213  000AE0  C168  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12214  000AE4  0E02               	movlw	2
 12215  000AE6  6F67               	movwf	RxDataDone@status& (0+255),b
 12216  000AE8  0005               	push	
 12217  000AEA  6EFA               	movwf	pclath,c
 12218  000AEC  51E8               	movf	_rxPayload& (0+255),w,b
 12219  000AEE  6EFD               	movwf	tosl,c
 12220  000AF0  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12221  000AF2  6EFE               	movwf	tosh,c
 12222  000AF4  6AFF               	clrf	tosu,c
 12223  000AF6  50FA               	movf	pclath,w,c
 12224  000AF8  0012               	return		;indir
 12225  000AFA                     __end_of_LORAWAN_RxDone:
 12226                           	opt stack 0
 12227                           tosu	equ	0xFFF
 12228                           tosh	equ	0xFFE
 12229                           tosl	equ	0xFFD
 12230                           pclath	equ	0xFFA
 12231                           tblptru	equ	0xFF8
 12232                           tblptrh	equ	0xFF7
 12233                           tblptrl	equ	0xFF6
 12234                           tablat	equ	0xFF5
 12235                           prodh	equ	0xFF4
 12236                           prodl	equ	0xFF3
 12237                           intcon	equ	0xFF2
 12238                           intcon2	equ	0xFF1
 12239                           intcon3	equ	0xFF0
 12240                           postinc0	equ	0xFEE
 12241                           wreg	equ	0xFE8
 12242                           postinc1	equ	0xFE6
 12243                           postdec1	equ	0xFE5
 12244                           plusw1	equ	0xFE3
 12245                           fsr1h	equ	0xFE2
 12246                           fsr1l	equ	0xFE1
 12247                           indf2	equ	0xFDF
 12248                           postinc2	equ	0xFDE
 12249                           postdec2	equ	0xFDD
 12250                           fsr2h	equ	0xFDA
 12251                           fsr2l	equ	0xFD9
 12252                           status	equ	0xFD8
 12253                           
 12254 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12255 ;; Defined at:
 12256 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;		None
 12259 ;; Auto vars:     Size  Location     Type
 12260 ;;		None
 12261 ;; Return value:  Size  Location     Type
 12262 ;;                  1    wreg      void 
 12263 ;; Registers used:
 12264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12265 ;; Tracked objects:
 12266 ;;		On entry : E/0
 12267 ;;		On exit  : F/0
 12268 ;;		Unchanged: 0/0
 12269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;Total ram usage:        4 bytes
 12275 ;; Hardware stack levels used:    1
 12276 ;; Hardware stack levels required when called:   11
 12277 ;; This function calls:
 12278 ;;		_SwTimerSetTimeout
 12279 ;;		_SwTimerStart
 12280 ;;		___lldiv
 12281 ;; This function is called by:
 12282 ;;		_AckRetransmissionCallback
 12283 ;;		_LORAWAN_RxDone
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text63
 12288  00618E                     __ptext63:
 12289                           	opt stack 0
 12290  00618E                     _UpdateRetransmissionAckTimeoutState:
 12291                           	opt stack 16
 12292                           
 12293                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12294                           
 12295                           ;incstack = 0
 12296  00618E  0102               	movlb	2	; () banked
 12297  006190  5102               	movf	(_loRa+2)& (0+255),w,b
 12298  006192  0BF0               	andlw	-16
 12299  006194  0906               	iorlw	6
 12300  006196  6F02               	movwf	(_loRa+2)& (0+255),b
 12301                           
 12302                           ; BSR set to: 2
 12303                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12304  006198  51A0               	movf	(_loRa+160)& (0+255),w,b
 12305  00619A  0100               	movlb	0	; () banked
 12306  00619C  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12307  00619E  0102               	movlb	2	; () banked
 12308  0061A0  51A1               	movf	(_loRa+161)& (0+255),w,b
 12309  0061A2  0100               	movlb	0	; () banked
 12310  0061A4  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12311  0061A6  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12312  0061A8  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12313  0061AA  0E0C               	movlw	12
 12314  0061AC                     u15565:
 12315  0061AC  90D8               	bcf	status,0,c
 12316  0061AE  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12317  0061B0  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12318  0061B2  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12319  0061B4  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12320  0061B6  2EE8               	decfsz	wreg,f,c
 12321  0061B8  D7F9               	goto	u15565
 12322  0061BA  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12323  0061BE  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12324  0061C2  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12325  0061C6  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12326  0061CA  0E7D               	movlw	125
 12327  0061CC  6F68               	movwf	___lldiv@divisor& (0+255),b
 12328  0061CE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12329  0061D0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12330  0061D2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12331  0061D4  EC1B  F030         	call	___lldiv	;wreg free
 12332  0061D8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12333  0061DC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12334  0061E0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12335  0061E4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12336  0061E8  0102               	movlb	2	; () banked
 12337  0061EA  51E8               	movf	(_loRa+232)& (0+255),w,b
 12338  0061EC  EC70  F036         	call	_SwTimerSetTimeout
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12342  0061F0  0102               	movlb	2	; () banked
 12343  0061F2  51E8               	movf	(_loRa+232)& (0+255),w,b
 12344  0061F4  EF59  F02E         	goto	_SwTimerStart
 12345  0061F8                     __end_of_UpdateRetransmissionAckTimeoutState:
 12346                           	opt stack 0
 12347                           tosu	equ	0xFFF
 12348                           tosh	equ	0xFFE
 12349                           tosl	equ	0xFFD
 12350                           pclath	equ	0xFFA
 12351                           tblptru	equ	0xFF8
 12352                           tblptrh	equ	0xFF7
 12353                           tblptrl	equ	0xFF6
 12354                           tablat	equ	0xFF5
 12355                           prodh	equ	0xFF4
 12356                           prodl	equ	0xFF3
 12357                           intcon	equ	0xFF2
 12358                           intcon2	equ	0xFF1
 12359                           intcon3	equ	0xFF0
 12360                           postinc0	equ	0xFEE
 12361                           wreg	equ	0xFE8
 12362                           postinc1	equ	0xFE6
 12363                           postdec1	equ	0xFE5
 12364                           plusw1	equ	0xFE3
 12365                           fsr1h	equ	0xFE2
 12366                           fsr1l	equ	0xFE1
 12367                           indf2	equ	0xFDF
 12368                           postinc2	equ	0xFDE
 12369                           postdec2	equ	0xFDD
 12370                           fsr2h	equ	0xFDA
 12371                           fsr2l	equ	0xFD9
 12372                           status	equ	0xFD8
 12373                           
 12374 ;; *************** function _UpdateDLSettings *****************
 12375 ;; Defined at:
 12376 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;  dlRx2Dr         1    wreg     unsigned char 
 12379 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12380 ;; Auto vars:     Size  Location     Type
 12381 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12382 ;; Return value:  Size  Location     Type
 12383 ;;                  1    wreg      void 
 12384 ;; Registers used:
 12385 ;;		wreg, status,2, status,0
 12386 ;; Tracked objects:
 12387 ;;		On entry : F/1
 12388 ;;		On exit  : F/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12391 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12394 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12395 ;;Total ram usage:        2 bytes
 12396 ;; Hardware stack levels used:    1
 12397 ;; Hardware stack levels required when called:    7
 12398 ;; This function calls:
 12399 ;;		Nothing
 12400 ;; This function is called by:
 12401 ;;		_LORAWAN_RxDone
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text64
 12406  0075B4                     __ptext64:
 12407                           	opt stack 0
 12408  0075B4                     _UpdateDLSettings:
 12409                           	opt stack 19
 12410                           
 12411                           ; BSR set to: 0
 12412                           ;incstack = 0
 12413                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12414  0075B4  0100               	movlb	0	; () banked
 12415  0075B6  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12416                           
 12417                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12418  0075B8  0E08               	movlw	8
 12419  0075BA  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12420  0075BC  D002               	goto	l13881
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;lorawan_eu.c: 891: {
 12424                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12425  0075BE  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12426  0075C2                     l13881:
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;lorawan_eu.c: 893: }
 12430                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12431  0075C2  0E06               	movlw	6
 12432  0075C4  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12433  0075C6  0C06               	retlw	6
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;lorawan_eu.c: 896: {
 12437                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12438  0075C8  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12439                           
 12440                           ; BSR set to: 0
 12441  0075CC  0C06               	retlw	6	;funcret
 12442  0075CE                     __end_of_UpdateDLSettings:
 12443                           	opt stack 0
 12444                           tosu	equ	0xFFF
 12445                           tosh	equ	0xFFE
 12446                           tosl	equ	0xFFD
 12447                           pclath	equ	0xFFA
 12448                           tblptru	equ	0xFF8
 12449                           tblptrh	equ	0xFF7
 12450                           tblptrl	equ	0xFF6
 12451                           tablat	equ	0xFF5
 12452                           prodh	equ	0xFF4
 12453                           prodl	equ	0xFF3
 12454                           intcon	equ	0xFF2
 12455                           intcon2	equ	0xFF1
 12456                           intcon3	equ	0xFF0
 12457                           postinc0	equ	0xFEE
 12458                           wreg	equ	0xFE8
 12459                           postinc1	equ	0xFE6
 12460                           postdec1	equ	0xFE5
 12461                           plusw1	equ	0xFE3
 12462                           fsr1h	equ	0xFE2
 12463                           fsr1l	equ	0xFE1
 12464                           indf2	equ	0xFDF
 12465                           postinc2	equ	0xFDE
 12466                           postdec2	equ	0xFDD
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8
 12470                           
 12471 ;; *************** function _UpdateCfList *****************
 12472 ;; Defined at:
 12473 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  bufferLength    1    wreg     unsigned char 
 12476 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12477 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12480 ;;  frequency       4   21[BANK0 ] unsigned long 
 12481 ;;  i               1   26[BANK0 ] unsigned char 
 12482 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      void 
 12485 ;; Registers used:
 12486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12487 ;; Tracked objects:
 12488 ;;		On entry : F/1
 12489 ;;		On exit  : D/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12495 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12496 ;;Total ram usage:       11 bytes
 12497 ;; Hardware stack levels used:    1
 12498 ;; Hardware stack levels required when called:    9
 12499 ;; This function calls:
 12500 ;;		_LORAWAN_SetChannelIdStatus
 12501 ;;		_ValidateFrequency
 12502 ;;		___lmul
 12503 ;;		_memcpy
 12504 ;; This function is called by:
 12505 ;;		_LORAWAN_RxDone
 12506 ;; This function uses a non-reentrant model
 12507 ;;
 12508                           
 12509                           	psect	text65
 12510  003194                     __ptext65:
 12511                           	opt stack 0
 12512  003194                     _UpdateCfList:
 12513                           	opt stack 17
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;incstack = 0
 12517                           ;UpdateCfList@bufferLength stored from wreg
 12518  003194  0100               	movlb	0	; () banked
 12519  003196  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12520                           
 12521                           ;lorawan_eu.c: 826: uint8_t i;
 12522                           ;lorawan_eu.c: 827: uint32_t frequency;
 12523                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12524                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12525  003198  0E21               	movlw	33
 12526  00319A  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12527  00319C  A4D8               	btfss	status,2,c
 12528  00319E  0012               	return	
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;lorawan_eu.c: 831: {
 12532                           ;lorawan_eu.c: 833: channelIndex = 3;
 12533  0031A0  0E03               	movlw	3
 12534  0031A2  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12538  0031A4  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12539  0031A6                     l1151:
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;lorawan_eu.c: 836: {
 12543                           ;lorawan_eu.c: 837: frequency = 0;
 12544  0031A6  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12545  0031A8  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12546  0031AA  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12547  0031AC  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12551  0031AE  0E75               	movlw	low UpdateCfList@frequency
 12552  0031B0  6F64               	movwf	memcpy@d1& (0+255),b
 12553  0031B2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12554  0031B4  517A               	movf	UpdateCfList@i& (0+255),w,b
 12555  0031B6  0D03               	mullw	3
 12556  0031B8  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12557  0031BC  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12558  0031C0  50F3               	movf	prodl,w,c
 12559  0031C2  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12560  0031C4  50F4               	movf	prodh,w,c
 12561  0031C6  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12562  0031C8  0E0D               	movlw	13
 12563  0031CA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12564  0031CC  0E00               	movlw	0
 12565  0031CE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12566  0031D0  5172               	movf	??_UpdateCfList& (0+255),w,b
 12567  0031D2  6F66               	movwf	memcpy@s1& (0+255),b
 12568  0031D4  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12569  0031D6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12570  0031D8  0E03               	movlw	3
 12571  0031DA  6F68               	movwf	memcpy@n& (0+255),b
 12572  0031DC  EC0F  F034         	call	_memcpy	;wreg free
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;lorawan_eu.c: 839: frequency *= 100;
 12576  0031E0  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12577  0031E4  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12578  0031E8  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12579  0031EC  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12580  0031F0  0E64               	movlw	100
 12581  0031F2  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12582  0031F4  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12583  0031F6  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12584  0031F8  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12585  0031FA  EC9D  F02E         	call	___lmul	;wreg free
 12586  0031FE  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12587  003202  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12588  003206  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12589  00320A  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;lorawan_eu.c: 840: if (frequency != 0)
 12593  00320E  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12594  003210  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12595  003212  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12596  003214  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12597  003216  E101 D094          	bz	l13871
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;lorawan_eu.c: 841: {
 12601                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12602  00321A  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12603  00321E  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12604  003222  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12605  003226  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12606  00322A  ECB5  F033         	call	_ValidateFrequency	;wreg free
 12607  00322E  0900               	iorlw	0
 12608  003230  E001 D08C          	bnz	l13873
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;lorawan_eu.c: 843: {
 12612                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12613  003234  517A               	movf	UpdateCfList@i& (0+255),w,b
 12614  003236  0D0E               	mullw	14
 12615  003238  0E00               	movlw	low _Channels
 12616  00323A  6F72               	movwf	??_UpdateCfList& (0+255),b
 12617  00323C  0E04               	movlw	high _Channels
 12618  00323E  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12619  003240  50F3               	movf	prodl,w,c
 12620  003242  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12621  003244  50F4               	movf	prodh,w,c
 12622  003246  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12623  003248  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12624  00324A  0D0E               	mullw	14
 12625  00324C  50F3               	movf	prodl,w,c
 12626  00324E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12627  003250  6ED9               	movwf	fsr2l,c
 12628  003252  50F4               	movf	prodh,w,c
 12629  003254  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12630  003256  6EDA               	movwf	fsr2h,c
 12631  003258  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12632  00325C  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12633  003260  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12634  003264  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12635                           
 12636                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12637  003268  517A               	movf	UpdateCfList@i& (0+255),w,b
 12638  00326A  0D0E               	mullw	14
 12639  00326C  0E00               	movlw	low _Channels
 12640  00326E  6F72               	movwf	??_UpdateCfList& (0+255),b
 12641  003270  0E04               	movlw	high _Channels
 12642  003272  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12643  003274  0E05               	movlw	5
 12644  003276  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12645  003278  0E00               	movlw	0
 12646  00327A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12647  00327C  50F3               	movf	prodl,w,c
 12648  00327E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12649  003280  50F4               	movf	prodh,w,c
 12650  003282  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12651  003284  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12652  003286  0D0E               	mullw	14
 12653  003288  50F3               	movf	prodl,w,c
 12654  00328A  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12655  00328C  6ED9               	movwf	fsr2l,c
 12656  00328E  50F4               	movf	prodh,w,c
 12657  003290  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12658  003292  6EDA               	movwf	fsr2h,c
 12659  003294  50DF               	movf	223,w,c
 12660  003296  0B0F               	andlw	-241
 12661  003298  0950               	iorlw	80
 12662  00329A  6EDF               	movwf	223,c
 12663                           
 12664                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12665  00329C  0100               	movlb	0	; () banked
 12666  00329E  517A               	movf	UpdateCfList@i& (0+255),w,b
 12667  0032A0  0D0E               	mullw	14
 12668  0032A2  0E00               	movlw	low _Channels
 12669  0032A4  6F72               	movwf	??_UpdateCfList& (0+255),b
 12670  0032A6  0E04               	movlw	high _Channels
 12671  0032A8  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12672  0032AA  0E05               	movlw	5
 12673  0032AC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12674  0032AE  0E00               	movlw	0
 12675  0032B0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12676  0032B2  50F3               	movf	prodl,w,c
 12677  0032B4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12678  0032B6  50F4               	movf	prodh,w,c
 12679  0032B8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12680  0032BA  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12681  0032BC  0D0E               	mullw	14
 12682  0032BE  50F3               	movf	prodl,w,c
 12683  0032C0  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12684  0032C2  6ED9               	movwf	fsr2l,c
 12685  0032C4  50F4               	movf	prodh,w,c
 12686  0032C6  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12687  0032C8  6EDA               	movwf	fsr2h,c
 12688  0032CA  0EF0               	movlw	-16
 12689  0032CC  16DF               	andwf	223,f,c
 12690                           
 12691                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12692  0032CE  517A               	movf	UpdateCfList@i& (0+255),w,b
 12693  0032D0  0D0E               	mullw	14
 12694  0032D2  0E00               	movlw	low _Channels
 12695  0032D4  6F72               	movwf	??_UpdateCfList& (0+255),b
 12696  0032D6  0E04               	movlw	high _Channels
 12697  0032D8  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12698  0032DA  0E06               	movlw	6
 12699  0032DC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12700  0032DE  0E00               	movlw	0
 12701  0032E0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12702  0032E2  50F3               	movf	prodl,w,c
 12703  0032E4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12704  0032E6  50F4               	movf	prodh,w,c
 12705  0032E8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12706  0032EA  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12707  0032EC  0D0E               	mullw	14
 12708  0032EE  50F3               	movf	prodl,w,c
 12709  0032F0  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12710  0032F2  6ED9               	movwf	fsr2l,c
 12711  0032F4  50F4               	movf	prodh,w,c
 12712  0032F6  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12713  0032F8  6EDA               	movwf	fsr2h,c
 12714  0032FA  0EE7               	movlw	231
 12715  0032FC  6EDE               	movwf	postinc2,c
 12716  0032FE  0E03               	movlw	3
 12717  003300  6EDD               	movwf	postdec2,c
 12718                           
 12719                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12720  003302  517A               	movf	UpdateCfList@i& (0+255),w,b
 12721  003304  0D0E               	mullw	14
 12722  003306  0E00               	movlw	low _Channels
 12723  003308  6F72               	movwf	??_UpdateCfList& (0+255),b
 12724  00330A  0E04               	movlw	high _Channels
 12725  00330C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12726  00330E  0E0D               	movlw	13
 12727  003310  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12728  003312  0E00               	movlw	0
 12729  003314  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12730  003316  50F3               	movf	prodl,w,c
 12731  003318  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12732  00331A  50F4               	movf	prodh,w,c
 12733  00331C  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12734  00331E  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12735  003320  0D0E               	mullw	14
 12736  003322  50F3               	movf	prodl,w,c
 12737  003324  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12738  003326  6ED9               	movwf	fsr2l,c
 12739  003328  50F4               	movf	prodh,w,c
 12740  00332A  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12741  00332C  6EDA               	movwf	fsr2h,c
 12742  00332E  68DF               	setf	indf2,c
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12746  003330  0E01               	movlw	1
 12747  003332  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12748  003334  517A               	movf	UpdateCfList@i& (0+255),w,b
 12749  003336  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12750  003338  EC64  F037         	call	_LORAWAN_SetChannelIdStatus
 12751                           
 12752                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12753  00333C  0102               	movlb	2	; () banked
 12754  00333E  8703               	bsf	(_loRa+3)& (0+255),3,b
 12755  003340  D005               	goto	l13873
 12756  003342                     l13871:
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;lorawan_eu.c: 853: else
 12760                           ;lorawan_eu.c: 854: {
 12761                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12762  003342  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12763  003344  517A               	movf	UpdateCfList@i& (0+255),w,b
 12764  003346  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12765  003348  EC64  F037         	call	_LORAWAN_SetChannelIdStatus
 12766  00334C                     l13873:
 12767  00334C  0100               	movlb	0	; () banked
 12768  00334E  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12769                           
 12770                           ; BSR set to: 0
 12771  003350  0E04               	movlw	4
 12772  003352  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12773  003354  D728               	goto	l1151
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;lorawan_eu.c: 856: }
 12777                           ;lorawan_eu.c: 857: }
 12778                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12779  003356  0102               	movlb	2	; () banked
 12780  003358  8703               	bsf	(_loRa+3)& (0+255),3,b
 12781  00335A  0C04               	retlw	4	;funcret
 12782  00335C                     __end_of_UpdateCfList:
 12783                           	opt stack 0
 12784                           tosu	equ	0xFFF
 12785                           tosh	equ	0xFFE
 12786                           tosl	equ	0xFFD
 12787                           pclath	equ	0xFFA
 12788                           tblptru	equ	0xFF8
 12789                           tblptrh	equ	0xFF7
 12790                           tblptrl	equ	0xFF6
 12791                           tablat	equ	0xFF5
 12792                           prodh	equ	0xFF4
 12793                           prodl	equ	0xFF3
 12794                           intcon	equ	0xFF2
 12795                           intcon2	equ	0xFF1
 12796                           intcon3	equ	0xFF0
 12797                           postinc0	equ	0xFEE
 12798                           wreg	equ	0xFE8
 12799                           postinc1	equ	0xFE6
 12800                           postdec1	equ	0xFE5
 12801                           plusw1	equ	0xFE3
 12802                           fsr1h	equ	0xFE2
 12803                           fsr1l	equ	0xFE1
 12804                           indf2	equ	0xFDF
 12805                           postinc2	equ	0xFDE
 12806                           postdec2	equ	0xFDD
 12807                           fsr2h	equ	0xFDA
 12808                           fsr2l	equ	0xFD9
 12809                           status	equ	0xFD8
 12810                           
 12811 ;; *************** function _StartReTxTimer *****************
 12812 ;; Defined at:
 12813 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;		None
 12816 ;; Auto vars:     Size  Location     Type
 12817 ;;  minim           4   58[BANK0 ] unsigned long 
 12818 ;;  i               1   62[BANK0 ] unsigned char 
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : E/0
 12825 ;;		On exit  : F/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12830 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12831 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12832 ;;Total ram usage:        9 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:   11
 12835 ;; This function calls:
 12836 ;;		_SwTimerSetTimeout
 12837 ;;		_SwTimerStart
 12838 ;;		___lldiv
 12839 ;; This function is called by:
 12840 ;;		_LORAWAN_RxDone
 12841 ;; This function uses a non-reentrant model
 12842 ;;
 12843                           
 12844                           	psect	text66
 12845  0043D2                     __ptext66:
 12846                           	opt stack 0
 12847  0043D2                     _StartReTxTimer:
 12848                           	opt stack 15
 12849                           
 12850                           ;lorawan_eu.c: 904: uint8_t i;
 12851                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12852                           
 12853                           ;incstack = 0
 12854  0043D2  0100               	movlb	0	; () banked
 12855  0043D4  699A               	setf	StartReTxTimer@minim& (0+255),b
 12856  0043D6  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12857  0043D8  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12858  0043DA  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12859                           
 12860                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12861  0043DC  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 12862  0043DE  D05B               	goto	l13901
 12863  0043E0                     l13887:
 12864                           
 12865                           ; BSR set to: 2
 12866                           ;lorawan_eu.c: 908: {
 12867                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12868  0043E0  0100               	movlb	0	; () banked
 12869  0043E2  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12870  0043E4  0D0E               	mullw	14
 12871  0043E6  0E04               	movlw	low (_Channels+4)
 12872  0043E8  24F3               	addwf	prodl,w,c
 12873  0043EA  6ED9               	movwf	fsr2l,c
 12874  0043EC  0E04               	movlw	high (_Channels+4)
 12875  0043EE  20F4               	addwfc	prodh,w,c
 12876  0043F0  6EDA               	movwf	fsr2h,c
 12877  0043F2  04DE               	decf	postinc2,w,c
 12878  0043F4  E14E               	bnz	l13899
 12879                           
 12880                           ; BSR set to: 0
 12881  0043F6  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12882  0043F8  0D0E               	mullw	14
 12883  0043FA  0E08               	movlw	low (_Channels+8)
 12884  0043FC  24F3               	addwf	prodl,w,c
 12885  0043FE  6ED9               	movwf	fsr2l,c
 12886  004400  0E04               	movlw	high (_Channels+8)
 12887  004402  20F4               	addwfc	prodh,w,c
 12888  004404  6EDA               	movwf	fsr2h,c
 12889  004406  50DE               	movf	postinc2,w,c
 12890  004408  10DE               	iorwf	postinc2,w,c
 12891  00440A  10DE               	iorwf	postinc2,w,c
 12892  00440C  10DE               	iorwf	postinc2,w,c
 12893  00440E  E041               	bz	l13899
 12894                           
 12895                           ; BSR set to: 0
 12896  004410  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12897  004412  0D0E               	mullw	14
 12898  004414  0E08               	movlw	low (_Channels+8)
 12899  004416  24F3               	addwf	prodl,w,c
 12900  004418  6ED9               	movwf	fsr2l,c
 12901  00441A  0E04               	movlw	high (_Channels+8)
 12902  00441C  20F4               	addwfc	prodh,w,c
 12903  00441E  6EDA               	movwf	fsr2h,c
 12904  004420  50DE               	movf	postinc2,w,c
 12905  004422  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 12906  004424  50DE               	movf	postinc2,w,c
 12907  004426  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12908  004428  50DE               	movf	postinc2,w,c
 12909  00442A  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12910  00442C  50DE               	movf	postinc2,w,c
 12911  00442E  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12912  004430  E330               	bnc	l13899
 12913                           
 12914                           ; BSR set to: 0
 12915  004432  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12916  004434  0D0E               	mullw	14
 12917  004436  0E05               	movlw	low (_Channels+5)
 12918  004438  24F3               	addwf	prodl,w,c
 12919  00443A  6ED9               	movwf	fsr2l,c
 12920  00443C  0E04               	movlw	high (_Channels+5)
 12921  00443E  20F4               	addwfc	prodh,w,c
 12922  004440  6EDA               	movwf	fsr2h,c
 12923  004442  50DF               	movf	223,w,c
 12924  004444  0B0F               	andlw	15
 12925  004446  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12926  004448  5196               	movf	??_StartReTxTimer& (0+255),w,b
 12927  00444A  0102               	movlb	2	; () banked
 12928  00444C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12929  00444E  E321               	bnc	l13899
 12930                           
 12931                           ; BSR set to: 2
 12932  004450  0100               	movlb	0	; () banked
 12933  004452  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12934  004454  0D0E               	mullw	14
 12935  004456  0E05               	movlw	low (_Channels+5)
 12936  004458  24F3               	addwf	prodl,w,c
 12937  00445A  6ED9               	movwf	fsr2l,c
 12938  00445C  0E04               	movlw	high (_Channels+5)
 12939  00445E  20F4               	addwfc	prodh,w,c
 12940  004460  6EDA               	movwf	fsr2h,c
 12941  004462  38DF               	swapf	223,w,c
 12942  004464  0B0F               	andlw	15
 12943  004466  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12944  004468  0102               	movlb	2	; () banked
 12945  00446A  51DF               	movf	(_loRa+223)& (0+255),w,b
 12946  00446C  0100               	movlb	0	; () banked
 12947  00446E  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 12948  004470  E310               	bnc	l13899
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;lorawan_eu.c: 910: {
 12952                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12953  004472  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12954  004474  0D0E               	mullw	14
 12955  004476  0E08               	movlw	low (_Channels+8)
 12956  004478  24F3               	addwf	prodl,w,c
 12957  00447A  6ED9               	movwf	fsr2l,c
 12958  00447C  0E04               	movlw	high (_Channels+8)
 12959  00447E  20F4               	addwfc	prodh,w,c
 12960  004480  6EDA               	movwf	fsr2h,c
 12961  004482  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 12962  004486  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 12963  00448A  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 12964  00448E  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 12965  004492                     l13899:
 12966  004492  0100               	movlb	0	; () banked
 12967  004494  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 12968  004496                     l13901:
 12969                           
 12970                           ; BSR set to: 0
 12971  004496  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12972  004498  0102               	movlb	2	; () banked
 12973  00449A  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12974  00449C  E2A1               	bc	l13887
 12975                           
 12976                           ; BSR set to: 2
 12977                           ;lorawan_eu.c: 912: }
 12978                           ;lorawan_eu.c: 913: }
 12979                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12980  00449E  5102               	movf	(_loRa+2)& (0+255),w,b
 12981  0044A0  0BF0               	andlw	-16
 12982  0044A2  0906               	iorlw	6
 12983  0044A4  6F02               	movwf	(_loRa+2)& (0+255),b
 12984                           
 12985                           ; BSR set to: 2
 12986                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12987  0044A6  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12988  0044AA  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12989  0044AE  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12990  0044B2  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12991  0044B6  0E0C               	movlw	12
 12992  0044B8                     u15425:
 12993  0044B8  90D8               	bcf	status,0,c
 12994  0044BA  0100               	movlb	0	; () banked
 12995  0044BC  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 12996  0044BE  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12997  0044C0  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12998  0044C2  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12999  0044C4  2EE8               	decfsz	wreg,f,c
 13000  0044C6  D7F8               	goto	u15425
 13001  0044C8  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 13002  0044CC  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 13003  0044D0  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 13004  0044D4  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 13005  0044D8  0E7D               	movlw	125
 13006  0044DA  6F68               	movwf	___lldiv@divisor& (0+255),b
 13007  0044DC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 13008  0044DE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 13009  0044E0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 13010  0044E2  EC1B  F030         	call	___lldiv	;wreg free
 13011  0044E6  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13012  0044EA  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13013  0044EE  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13014  0044F2  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13015  0044F6  0102               	movlb	2	; () banked
 13016  0044F8  51E6               	movf	(_loRa+230)& (0+255),w,b
 13017  0044FA  EC70  F036         	call	_SwTimerSetTimeout
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 13021  0044FE  0102               	movlb	2	; () banked
 13022  004500  51E6               	movf	(_loRa+230)& (0+255),w,b
 13023  004502  EF59  F02E         	goto	_SwTimerStart
 13024  004506                     __end_of_StartReTxTimer:
 13025                           	opt stack 0
 13026                           tosu	equ	0xFFF
 13027                           tosh	equ	0xFFE
 13028                           tosl	equ	0xFFD
 13029                           pclath	equ	0xFFA
 13030                           tblptru	equ	0xFF8
 13031                           tblptrh	equ	0xFF7
 13032                           tblptrl	equ	0xFF6
 13033                           tablat	equ	0xFF5
 13034                           prodh	equ	0xFF4
 13035                           prodl	equ	0xFF3
 13036                           intcon	equ	0xFF2
 13037                           intcon2	equ	0xFF1
 13038                           intcon3	equ	0xFF0
 13039                           postinc0	equ	0xFEE
 13040                           wreg	equ	0xFE8
 13041                           postinc1	equ	0xFE6
 13042                           postdec1	equ	0xFE5
 13043                           plusw1	equ	0xFE3
 13044                           fsr1h	equ	0xFE2
 13045                           fsr1l	equ	0xFE1
 13046                           indf2	equ	0xFDF
 13047                           postinc2	equ	0xFDE
 13048                           postdec2	equ	0xFDD
 13049                           fsr2h	equ	0xFDA
 13050                           fsr2l	equ	0xFD9
 13051                           status	equ	0xFD8
 13052                           
 13053 ;; *************** function _SetReceptionNotOkState *****************
 13054 ;; Defined at:
 13055 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;		None
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;		None
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      void 
 13062 ;; Registers used:
 13063 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13064 ;; Tracked objects:
 13065 ;;		On entry : C/2
 13066 ;;		On exit  : D/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13073 ;;Total ram usage:        0 bytes
 13074 ;; Hardware stack levels used:    1
 13075 ;; Hardware stack levels required when called:   14
 13076 ;; This function calls:
 13077 ;;		_LORAWAN_EnterContinuousReceive
 13078 ;;		_RxDataDone
 13079 ;; This function is called by:
 13080 ;;		_LORAWAN_RxDone
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text67
 13085  00632E                     __ptext67:
 13086                           	opt stack 0
 13087  00632E                     _SetReceptionNotOkState:
 13088                           	opt stack 12
 13089                           
 13090                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;incstack = 0
 13094  00632E  0102               	movlb	2	; () banked
 13095  006330  5102               	movf	(_loRa+2)& (0+255),w,b
 13096  006332  0B0F               	andlw	15
 13097  006334  0A05               	xorlw	5
 13098  006336  E006               	bz	l2307
 13099                           
 13100                           ; BSR set to: 2
 13101  006338  5102               	movf	(_loRa+2)& (0+255),w,b
 13102  00633A  0B0F               	andlw	15
 13103  00633C  0A03               	xorlw	3
 13104  00633E  E120               	bnz	l14065
 13105                           
 13106                           ; BSR set to: 2
 13107  006340  51F1               	movf	(_loRa+241)& (0+255),w,b
 13108  006342  E01E               	bz	l14065
 13109  006344                     l2307:
 13110                           
 13111                           ; BSR set to: 2
 13112                           ;lorawan.c: 2000: {
 13113                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13114  006344  9100               	bcf	_loRa& (0+255),0,b
 13115                           
 13116                           ; BSR set to: 2
 13117                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13118  006346  0EF0               	movlw	-16
 13119  006348  1702               	andwf	(_loRa+2)& (0+255),f,b
 13120                           
 13121                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13122  00634A  5112               	movf	(_loRa+18)& (0+255),w,b
 13123  00634C  E117               	bnz	l14063
 13124                           
 13125                           ; BSR set to: 2
 13126  00634E  0100               	movlb	0	; () banked
 13127  006350  51E8               	movf	_rxPayload& (0+255),w,b
 13128  006352  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 13129  006354  E013               	bz	l14063
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;lorawan.c: 2005: {
 13133                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13134  006356  0102               	movlb	2	; () banked
 13135  006358  9B00               	bcf	_loRa& (0+255),5,b
 13136                           
 13137                           ; BSR set to: 2
 13138                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13139  00635A  0E00               	movlw	0
 13140  00635C  0100               	movlb	0	; () banked
 13141  00635E  6B64               	clrf	RxDataDone@pData& (0+255),b
 13142  006360  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 13143  006362  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 13144  006364  6B67               	clrf	RxDataDone@status& (0+255),b
 13145  006366  D801               	call	u15748
 13146  006368  D009               	goto	l14063
 13147  00636A                     u15748:
 13148  00636A  0005               	push	
 13149  00636C  6EFA               	movwf	pclath,c
 13150  00636E  51E8               	movf	_rxPayload& (0+255),w,b
 13151  006370  6EFD               	movwf	tosl,c
 13152  006372  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 13153  006374  6EFE               	movwf	tosh,c
 13154  006376  6AFF               	clrf	tosu,c
 13155  006378  50FA               	movf	pclath,w,c
 13156  00637A  0012               	return		;indir
 13157  00637C                     l14063:
 13158                           
 13159                           ;lorawan.c: 2008: }
 13160                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13161  00637C  0102               	movlb	2	; () banked
 13162  00637E  9303               	bcf	(_loRa+3)& (0+255),1,b
 13163  006380                     l14065:
 13164                           
 13165                           ; BSR set to: 2
 13166                           ;lorawan.c: 2010: }
 13167                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13168  006380  0E02               	movlw	2
 13169  006382  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13170  006384  A4D8               	btfss	status,2,c
 13171  006386  0012               	return	
 13172                           
 13173                           ; BSR set to: 2
 13174                           ;lorawan.c: 2013: {
 13175                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13176  006388  5102               	movf	(_loRa+2)& (0+255),w,b
 13177  00638A  0BF0               	andlw	-16
 13178  00638C  0909               	iorlw	9
 13179  00638E  6F02               	movwf	(_loRa+2)& (0+255),b
 13180                           
 13181                           ; BSR set to: 2
 13182                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13183  006390  EF94  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13184  006394                     __end_of_SetReceptionNotOkState:
 13185                           	opt stack 0
 13186                           tosu	equ	0xFFF
 13187                           tosh	equ	0xFFE
 13188                           tosl	equ	0xFFD
 13189                           pclath	equ	0xFFA
 13190                           tblptru	equ	0xFF8
 13191                           tblptrh	equ	0xFF7
 13192                           tblptrl	equ	0xFF6
 13193                           tablat	equ	0xFF5
 13194                           prodh	equ	0xFF4
 13195                           prodl	equ	0xFF3
 13196                           intcon	equ	0xFF2
 13197                           intcon2	equ	0xFF1
 13198                           intcon3	equ	0xFF0
 13199                           postinc0	equ	0xFEE
 13200                           wreg	equ	0xFE8
 13201                           postinc1	equ	0xFE6
 13202                           postdec1	equ	0xFE5
 13203                           plusw1	equ	0xFE3
 13204                           fsr1h	equ	0xFE2
 13205                           fsr1l	equ	0xFE1
 13206                           indf2	equ	0xFDF
 13207                           postinc2	equ	0xFDE
 13208                           postdec2	equ	0xFDD
 13209                           fsr2h	equ	0xFDA
 13210                           fsr2l	equ	0xFD9
 13211                           status	equ	0xFD8
 13212                           
 13213 ;; *************** function _SetJoinFailState *****************
 13214 ;; Defined at:
 13215 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13216 ;; Parameters:    Size  Location     Type
 13217 ;;		None
 13218 ;; Auto vars:     Size  Location     Type
 13219 ;;		None
 13220 ;; Return value:  Size  Location     Type
 13221 ;;                  1    wreg      void 
 13222 ;; Registers used:
 13223 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 13224 ;; Tracked objects:
 13225 ;;		On entry : F/2
 13226 ;;		On exit  : F/0
 13227 ;;		Unchanged: 0/0
 13228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13233 ;;Total ram usage:        0 bytes
 13234 ;; Hardware stack levels used:    1
 13235 ;; Hardware stack levels required when called:    8
 13236 ;; This function calls:
 13237 ;;		_RxJoinResponse
 13238 ;; This function is called by:
 13239 ;;		_LORAWAN_RxTimeout
 13240 ;;		_LORAWAN_RxDone
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text68
 13245  0072EC                     __ptext68:
 13246                           	opt stack 0
 13247  0072EC                     _SetJoinFailState:
 13248                           	opt stack 18
 13249                           
 13250                           ; BSR set to: 2
 13251                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13252                           
 13253                           ;incstack = 0
 13254  0072EC  9902               	bcf	(_loRa+2)& (0+255),4,b
 13255                           
 13256                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13257  0072EE  9500               	bcf	_loRa& (0+255),2,b
 13258                           
 13259                           ; BSR set to: 2
 13260                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13261  0072F0  0EF0               	movlw	-16
 13262  0072F2  1702               	andwf	(_loRa+2)& (0+255),f,b
 13263                           
 13264                           ; BSR set to: 2
 13265                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13266  0072F4  0100               	movlb	0	; () banked
 13267  0072F6  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13268  0072F8  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
 13269  0072FA  B4D8               	btfsc	status,2,c
 13270  0072FC  0012               	return	
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;lorawan.c: 1110: {
 13274                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13275  0072FE  0005               	push	
 13276  007300  6EFA               	movwf	pclath,c
 13277  007302  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13278  007304  6EFD               	movwf	tosl,c
 13279  007306  51EB               	movf	(_rxPayload+3)& (0+255),w,b
 13280  007308  6EFE               	movwf	tosh,c
 13281  00730A  6AFF               	clrf	tosu,c
 13282  00730C  50FA               	movf	pclath,w,c
 13283  00730E  0C00               	retlw	0	;indir
 13284  007310                     __end_of_SetJoinFailState:
 13285                           	opt stack 0
 13286                           tosu	equ	0xFFF
 13287                           tosh	equ	0xFFE
 13288                           tosl	equ	0xFFD
 13289                           pclath	equ	0xFFA
 13290                           tblptru	equ	0xFF8
 13291                           tblptrh	equ	0xFF7
 13292                           tblptrl	equ	0xFF6
 13293                           tablat	equ	0xFF5
 13294                           prodh	equ	0xFF4
 13295                           prodl	equ	0xFF3
 13296                           intcon	equ	0xFF2
 13297                           intcon2	equ	0xFF1
 13298                           intcon3	equ	0xFF0
 13299                           postinc0	equ	0xFEE
 13300                           wreg	equ	0xFE8
 13301                           postinc1	equ	0xFE6
 13302                           postdec1	equ	0xFE5
 13303                           plusw1	equ	0xFE3
 13304                           fsr1h	equ	0xFE2
 13305                           fsr1l	equ	0xFE1
 13306                           indf2	equ	0xFDF
 13307                           postinc2	equ	0xFDE
 13308                           postdec2	equ	0xFDD
 13309                           fsr2h	equ	0xFDA
 13310                           fsr2l	equ	0xFD9
 13311                           status	equ	0xFD8
 13312                           
 13313 ;; *************** function _RxJoinResponse *****************
 13314 ;; Defined at:
 13315 ;;		line 108 in file "main.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  status          1    wreg     unsigned char 
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;  status          1    0[COMRAM] unsigned char 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  1    wreg      void 
 13322 ;; Registers used:
 13323 ;;		wreg
 13324 ;; Tracked objects:
 13325 ;;		On entry : F/0
 13326 ;;		On exit  : F/0
 13327 ;;		Unchanged: F/0
 13328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;Total ram usage:        0 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; Hardware stack levels required when called:    7
 13336 ;; This function calls:
 13337 ;;		Nothing
 13338 ;; This function is called by:
 13339 ;;		_main
 13340 ;;		_SetJoinFailState
 13341 ;;		_UpdateJoinSuccessState
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text69
 13346  007908                     __ptext69:
 13347                           	opt stack 0
 13348  007908                     _RxJoinResponse:
 13349                           	opt stack 20
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;main.c: 110: PORTCbits.RC5 = 0;
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;incstack = 0
 13356  007908  9A82               	bcf	3970,5,c	;volatile
 13357                           
 13358                           ; BSR set to: 0
 13359  00790A  0012               	return		;funcret
 13360  00790C                     __end_of_RxJoinResponse:
 13361                           	opt stack 0
 13362                           tosu	equ	0xFFF
 13363                           tosh	equ	0xFFE
 13364                           tosl	equ	0xFFD
 13365                           pclath	equ	0xFFA
 13366                           tblptru	equ	0xFF8
 13367                           tblptrh	equ	0xFF7
 13368                           tblptrl	equ	0xFF6
 13369                           tablat	equ	0xFF5
 13370                           prodh	equ	0xFF4
 13371                           prodl	equ	0xFF3
 13372                           intcon	equ	0xFF2
 13373                           intcon2	equ	0xFF1
 13374                           intcon3	equ	0xFF0
 13375                           postinc0	equ	0xFEE
 13376                           wreg	equ	0xFE8
 13377                           postinc1	equ	0xFE6
 13378                           postdec1	equ	0xFE5
 13379                           plusw1	equ	0xFE3
 13380                           fsr1h	equ	0xFE2
 13381                           fsr1l	equ	0xFE1
 13382                           indf2	equ	0xFDF
 13383                           postinc2	equ	0xFDE
 13384                           postdec2	equ	0xFDD
 13385                           fsr2h	equ	0xFDA
 13386                           fsr2l	equ	0xFD9
 13387                           status	equ	0xFD8
 13388                           
 13389 ;; *************** function _MacExecuteCommands *****************
 13390 ;; Defined at:
 13391 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13394 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13395 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13398 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13399 ;;  done            1   31[BANK0 ] unsigned char 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  2   26[BANK0 ] PTR unsigned char 
 13402 ;; Registers used:
 13403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : F/0
 13406 ;;		On exit  : F/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13409 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13410 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13412 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13413 ;;Total ram usage:        8 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:   11
 13416 ;; This function calls:
 13417 ;;		_ExecuteDevStatus
 13418 ;;		_ExecuteDutyCycle
 13419 ;;		_ExecuteLinkAdr
 13420 ;;		_ExecuteLinkCheck
 13421 ;;		_ExecuteNewChannel
 13422 ;;		_ExecuteRxParamSetupReq
 13423 ;;		_ExecuteRxTimingSetup
 13424 ;; This function is called by:
 13425 ;;		_LORAWAN_RxDone
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           	psect	text70
 13430  002DB6                     __ptext70:
 13431                           	opt stack 0
 13432  002DB6                     _MacExecuteCommands:
 13433                           	opt stack 15
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;lorawan.c: 1577: bool done = 0;
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;incstack = 0
 13440  002DB6  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;lorawan.c: 1578: uint8_t *ptr;
 13444                           ;lorawan.c: 1579: ptr = buffer;
 13445  002DB8  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13446  002DBC  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13447                           
 13448                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13449  002DC0  D0DE               	goto	l14127
 13450  002DC2                     l14091:
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;lorawan.c: 1581: {
 13454                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13455  002DC2  0102               	movlb	2	; () banked
 13456  002DC4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13457  002DC6  0D02               	mullw	2
 13458  002DC8  0EA9               	movlw	low (_loRa+169)
 13459  002DCA  24F3               	addwf	prodl,w,c
 13460  002DCC  6ED9               	movwf	fsr2l,c
 13461  002DCE  0E02               	movlw	high (_loRa+169)
 13462  002DD0  20F4               	addwfc	prodh,w,c
 13463  002DD2  6EDA               	movwf	fsr2h,c
 13464  002DD4  90DF               	bcf	indf2,0,c
 13465                           
 13466                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13467  002DD6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13468  002DD8  0D02               	mullw	2
 13469  002DDA  0EA9               	movlw	low (_loRa+169)
 13470  002DDC  24F3               	addwf	prodl,w,c
 13471  002DDE  6ED9               	movwf	fsr2l,c
 13472  002DE0  0E02               	movlw	high (_loRa+169)
 13473  002DE2  20F4               	addwfc	prodh,w,c
 13474  002DE4  6EDA               	movwf	fsr2h,c
 13475  002DE6  92DF               	bcf	indf2,1,c
 13476                           
 13477                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13478  002DE8  51A7               	movf	(_loRa+167)& (0+255),w,b
 13479  002DEA  0D02               	mullw	2
 13480  002DEC  0EA9               	movlw	low (_loRa+169)
 13481  002DEE  24F3               	addwf	prodl,w,c
 13482  002DF0  6ED9               	movwf	fsr2l,c
 13483  002DF2  0E02               	movlw	high (_loRa+169)
 13484  002DF4  20F4               	addwfc	prodh,w,c
 13485  002DF6  6EDA               	movwf	fsr2h,c
 13486  002DF8  94DF               	bcf	indf2,2,c
 13487                           
 13488                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13489  002DFA  51A7               	movf	(_loRa+167)& (0+255),w,b
 13490  002DFC  0D02               	mullw	2
 13491  002DFE  0EA9               	movlw	low (_loRa+169)
 13492  002E00  24F3               	addwf	prodl,w,c
 13493  002E02  6ED9               	movwf	fsr2l,c
 13494  002E04  0E02               	movlw	high (_loRa+169)
 13495  002E06  20F4               	addwfc	prodh,w,c
 13496  002E08  6EDA               	movwf	fsr2h,c
 13497  002E0A  96DF               	bcf	indf2,3,c
 13498                           
 13499                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13500  002E0C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13501  002E0E  0D02               	mullw	2
 13502  002E10  0EA9               	movlw	low (_loRa+169)
 13503  002E12  24F3               	addwf	prodl,w,c
 13504  002E14  6ED9               	movwf	fsr2l,c
 13505  002E16  0E02               	movlw	high (_loRa+169)
 13506  002E18  20F4               	addwfc	prodh,w,c
 13507  002E1A  6EDA               	movwf	fsr2h,c
 13508  002E1C  98DF               	bcf	indf2,4,c
 13509                           
 13510                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13511  002E1E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13512  002E20  0D02               	mullw	2
 13513  002E22  0EA9               	movlw	low (_loRa+169)
 13514  002E24  24F3               	addwf	prodl,w,c
 13515  002E26  6ED9               	movwf	fsr2l,c
 13516  002E28  0E02               	movlw	high (_loRa+169)
 13517  002E2A  20F4               	addwfc	prodh,w,c
 13518  002E2C  6EDA               	movwf	fsr2h,c
 13519  002E2E  9ADF               	bcf	indf2,5,c
 13520                           
 13521                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13522  002E30  51A7               	movf	(_loRa+167)& (0+255),w,b
 13523  002E32  0D02               	mullw	2
 13524  002E34  0EA9               	movlw	low (_loRa+169)
 13525  002E36  24F3               	addwf	prodl,w,c
 13526  002E38  6ED9               	movwf	fsr2l,c
 13527  002E3A  0E02               	movlw	high (_loRa+169)
 13528  002E3C  20F4               	addwfc	prodh,w,c
 13529  002E3E  6EDA               	movwf	fsr2h,c
 13530  002E40  9CDF               	bcf	indf2,6,c
 13531                           
 13532                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13533  002E42  51A7               	movf	(_loRa+167)& (0+255),w,b
 13534  002E44  0D02               	mullw	2
 13535  002E46  0EA9               	movlw	low (_loRa+169)
 13536  002E48  24F3               	addwf	prodl,w,c
 13537  002E4A  6ED9               	movwf	fsr2l,c
 13538  002E4C  0E02               	movlw	high (_loRa+169)
 13539  002E4E  20F4               	addwfc	prodh,w,c
 13540  002E50  6EDA               	movwf	fsr2h,c
 13541  002E52  9EDF               	bcf	indf2,7,c
 13542                           
 13543                           ; BSR set to: 2
 13544                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13545  002E54  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13546  002E58  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13547  002E5C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13548  002E5E  0D02               	mullw	2
 13549  002E60  0EA8               	movlw	low (_loRa+168)
 13550  002E62  24F3               	addwf	prodl,w,c
 13551  002E64  6EE9               	movwf	fsr0l,c
 13552  002E66  0E02               	movlw	high (_loRa+168)
 13553  002E68  20F4               	addwfc	prodh,w,c
 13554  002E6A  6EEA               	movwf	fsr0h,c
 13555  002E6C  CFDF FFEF          	movff	indf2,indf0
 13556                           
 13557                           ;lorawan.c: 1595: switch (*ptr ++)
 13558  002E70  D060               	goto	l14119
 13559  002E72                     l14095:
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;lorawan.c: 1598: {
 13563                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13564  002E72  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13565  002E76  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13566  002E7A  EC1F  F038         	call	_ExecuteLinkCheck
 13567  002E7E  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13568  002E82  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13569  002E86                     l14097:
 13570                           
 13571                           ; BSR set to: 0
 13572                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13573  002E86  0102               	movlb	2	; () banked
 13574  002E88  51A7               	movf	(_loRa+167)& (0+255),w,b
 13575  002E8A  0D02               	mullw	2
 13576  002E8C  0EA8               	movlw	low (_loRa+168)
 13577  002E8E  24F3               	addwf	prodl,w,c
 13578  002E90  6ED9               	movwf	fsr2l,c
 13579  002E92  0E02               	movlw	high (_loRa+168)
 13580  002E94  20F4               	addwfc	prodh,w,c
 13581  002E96  6EDA               	movwf	fsr2h,c
 13582  002E98  68DF               	setf	indf2,c
 13583                           
 13584                           ;lorawan.c: 1602: } break;
 13585  002E9A  D062               	goto	l14121
 13586  002E9C                     l14099:
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;lorawan.c: 1605: {
 13590                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13591  002E9C  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13592  002EA0  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13593  002EA4  EC8F  F01A         	call	_ExecuteLinkAdr	;wreg free
 13594  002EA8  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13595  002EAC  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13596                           
 13597                           ;lorawan.c: 1607: } break;
 13598  002EB0  D057               	goto	l14121
 13599  002EB2                     l14101:
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;lorawan.c: 1610: {
 13603                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13604  002EB2  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13605  002EB6  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13606  002EBA  ECB6  F034         	call	_ExecuteDutyCycle	;wreg free
 13607  002EBE  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13608  002EC2  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13609                           
 13610                           ;lorawan.c: 1612: } break;
 13611  002EC6  D04C               	goto	l14121
 13612  002EC8                     l14103:
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;lorawan.c: 1615: {
 13616                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13617  002EC8  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13618  002ECC  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13619  002ED0  EC45  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13620  002ED4  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13621  002ED8  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13622                           
 13623                           ;lorawan.c: 1617: } break;
 13624  002EDC  D041               	goto	l14121
 13625  002EDE                     l14105:
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;lorawan.c: 1620: {
 13629                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13630  002EDE  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13631  002EE2  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13632  002EE6  EC17  F03C         	call	_ExecuteDevStatus	;wreg free
 13633  002EEA  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13634  002EEE  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13635                           
 13636                           ;lorawan.c: 1622: } break;
 13637  002EF2  D036               	goto	l14121
 13638  002EF4                     l14107:
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;lorawan.c: 1625: {
 13642                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13643  002EF4  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13644  002EF8  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13645  002EFC  ECAE  F019         	call	_ExecuteNewChannel	;wreg free
 13646  002F00  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13647  002F04  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13648                           
 13649                           ;lorawan.c: 1628: } break;
 13650  002F08  D02B               	goto	l14121
 13651  002F0A                     l14109:
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;lorawan.c: 1631: {
 13655                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13656  002F0A  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13657  002F0E  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13658  002F12  EC88  F039         	call	_ExecuteRxTimingSetup	;wreg free
 13659  002F16  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13660  002F1A  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13661                           
 13662                           ;lorawan.c: 1633: } break;
 13663  002F1E  D020               	goto	l14121
 13664  002F20                     l14111:
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;lorawan.c: 1636: {
 13668                           ;lorawan.c: 1637: done = 1;
 13669  002F20  0E01               	movlw	1
 13670  002F22  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13674  002F24  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13675  002F26  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13676  002F28  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13677  002F2A  0E00               	movlw	0
 13678  002F2C  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13679  002F2E  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13680  002F30  D7AA               	goto	l14097
 13681  002F32                     l14119:
 13682                           
 13683                           ; BSR set to: 2
 13684  002F32  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13685  002F36  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13686  002F3A  0100               	movlb	0	; () banked
 13687  002F3C  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13688  002F3E  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13689  002F40  50DF               	movf	indf2,w,c
 13690                           
 13691                           ; Switch size 1, requested type "speed"
 13692                           ; Number of cases is 7, Range of values is 2 to 8
 13693                           ; switch strategies available:
 13694                           ; Name         Instructions Cycles
 13695                           ; simple_byte           22    12 (average)
 13696                           ;	Chosen strategy is simple_byte
 13697  002F42  0A02               	xorlw	2	; case 2
 13698  002F44  E096               	bz	l14095
 13699  002F46  0A01               	xorlw	1	; case 3
 13700  002F48  E0A9               	bz	l14099
 13701  002F4A  0A07               	xorlw	7	; case 4
 13702  002F4C  E0B2               	bz	l14101
 13703  002F4E  0A01               	xorlw	1	; case 5
 13704  002F50  E0BB               	bz	l14103
 13705  002F52  0A03               	xorlw	3	; case 6
 13706  002F54  E0C4               	bz	l14105
 13707  002F56  0A01               	xorlw	1	; case 7
 13708  002F58  E0CD               	bz	l14107
 13709  002F5A  0A0F               	xorlw	15	; case 8
 13710  002F5C  E0D6               	bz	l14109
 13711  002F5E  D7E0               	goto	l14111
 13712  002F60                     l14121:
 13713                           
 13714                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13715                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13716  002F60  0102               	movlb	2	; () banked
 13717  002F62  51A7               	movf	(_loRa+167)& (0+255),w,b
 13718  002F64  0D02               	mullw	2
 13719  002F66  0EA8               	movlw	low (_loRa+168)
 13720  002F68  24F3               	addwf	prodl,w,c
 13721  002F6A  6ED9               	movwf	fsr2l,c
 13722  002F6C  0E02               	movlw	high (_loRa+168)
 13723  002F6E  20F4               	addwfc	prodh,w,c
 13724  002F70  6EDA               	movwf	fsr2h,c
 13725  002F72  28DE               	incf	postinc2,w,c
 13726  002F74  E004               	bz	l14127
 13727                           
 13728                           ; BSR set to: 2
 13729  002F76  0E10               	movlw	16
 13730  002F78  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13731  002F7A  D001               	goto	l14127
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;lorawan.c: 1645: {
 13735                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13736  002F7C  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13737  002F7E                     l14127:
 13738  002F7E  0100               	movlb	0	; () banked
 13739  002F80  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13740  002F82  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13741  002F84  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13742  002F86  0E00               	movlw	0
 13743  002F88  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13744  002F8A  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13745  002F8C  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13746  002F8E  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13747  002F90  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13748  002F92  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13749  002F94  E203               	bc	l14131
 13750                           
 13751                           ; BSR set to: 0
 13752  002F96  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13753  002F98  E101 D713          	bz	l14091
 13754  002F9C                     l14131:
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;lorawan.c: 1647: }
 13758                           ;lorawan.c: 1648: }
 13759                           ;lorawan.c: 1649: return ptr;
 13760  002F9C  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13761  002FA0  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13762                           
 13763                           ; BSR set to: 0
 13764  002FA4  0012               	return		;funcret
 13765  002FA6                     __end_of_MacExecuteCommands:
 13766                           	opt stack 0
 13767                           tosu	equ	0xFFF
 13768                           tosh	equ	0xFFE
 13769                           tosl	equ	0xFFD
 13770                           pclath	equ	0xFFA
 13771                           tblptru	equ	0xFF8
 13772                           tblptrh	equ	0xFF7
 13773                           tblptrl	equ	0xFF6
 13774                           tablat	equ	0xFF5
 13775                           prodh	equ	0xFF4
 13776                           prodl	equ	0xFF3
 13777                           intcon	equ	0xFF2
 13778                           intcon2	equ	0xFF1
 13779                           intcon3	equ	0xFF0
 13780                           indf0	equ	0xFEF
 13781                           postinc0	equ	0xFEE
 13782                           fsr0h	equ	0xFEA
 13783                           fsr0l	equ	0xFE9
 13784                           wreg	equ	0xFE8
 13785                           postinc1	equ	0xFE6
 13786                           postdec1	equ	0xFE5
 13787                           plusw1	equ	0xFE3
 13788                           fsr1h	equ	0xFE2
 13789                           fsr1l	equ	0xFE1
 13790                           indf2	equ	0xFDF
 13791                           postinc2	equ	0xFDE
 13792                           postdec2	equ	0xFDD
 13793                           fsr2h	equ	0xFDA
 13794                           fsr2l	equ	0xFD9
 13795                           status	equ	0xFD8
 13796                           
 13797 ;; *************** function _ExecuteRxTimingSetup *****************
 13798 ;; Defined at:
 13799 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13800 ;; Parameters:    Size  Location     Type
 13801 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13802 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;  delay           1   11[BANK0 ] unsigned char 
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  2    9[BANK0 ] PTR unsigned char 
 13807 ;; Registers used:
 13808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13809 ;; Tracked objects:
 13810 ;;		On entry : F/0
 13811 ;;		On exit  : F/2
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;Total ram usage:        3 bytes
 13819 ;; Hardware stack levels used:    1
 13820 ;; Hardware stack levels required when called:    8
 13821 ;; This function calls:
 13822 ;;		_UpdateReceiveDelays
 13823 ;; This function is called by:
 13824 ;;		_MacExecuteCommands
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           	psect	text71
 13829  007310                     __ptext71:
 13830                           	opt stack 0
 13831  007310                     _ExecuteRxTimingSetup:
 13832                           	opt stack 17
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;lorawan.c: 1661: uint8_t delay;
 13836                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;incstack = 0
 13840  007310  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13841  007314  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13842  007318  50DF               	movf	indf2,w,c
 13843  00731A  0B0F               	andlw	15
 13844  00731C  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;lorawan.c: 1664: ptr++;
 13848  00731E  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13849  007320  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13853  007322  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13854  007324  EC78  F035         	call	_UpdateReceiveDelays
 13855                           
 13856                           ; BSR set to: 2
 13857                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13858  007328  8104               	bsf	(_loRa+4)& (0+255),0,b
 13859                           
 13860                           ; BSR set to: 2
 13861                           ;lorawan.c: 1669: return ptr;
 13862  00732A  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13863  00732E  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13864                           
 13865                           ; BSR set to: 2
 13866  007332  0012               	return		;funcret
 13867  007334                     __end_of_ExecuteRxTimingSetup:
 13868                           	opt stack 0
 13869                           tosu	equ	0xFFF
 13870                           tosh	equ	0xFFE
 13871                           tosl	equ	0xFFD
 13872                           pclath	equ	0xFFA
 13873                           tblptru	equ	0xFF8
 13874                           tblptrh	equ	0xFF7
 13875                           tblptrl	equ	0xFF6
 13876                           tablat	equ	0xFF5
 13877                           prodh	equ	0xFF4
 13878                           prodl	equ	0xFF3
 13879                           intcon	equ	0xFF2
 13880                           intcon2	equ	0xFF1
 13881                           intcon3	equ	0xFF0
 13882                           indf0	equ	0xFEF
 13883                           postinc0	equ	0xFEE
 13884                           fsr0h	equ	0xFEA
 13885                           fsr0l	equ	0xFE9
 13886                           wreg	equ	0xFE8
 13887                           postinc1	equ	0xFE6
 13888                           postdec1	equ	0xFE5
 13889                           plusw1	equ	0xFE3
 13890                           fsr1h	equ	0xFE2
 13891                           fsr1l	equ	0xFE1
 13892                           indf2	equ	0xFDF
 13893                           postinc2	equ	0xFDE
 13894                           postdec2	equ	0xFDD
 13895                           fsr2h	equ	0xFDA
 13896                           fsr2l	equ	0xFD9
 13897                           status	equ	0xFD8
 13898                           
 13899 ;; *************** function _UpdateReceiveDelays *****************
 13900 ;; Defined at:
 13901 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  delay           1    wreg     unsigned char 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  delay           1    8[BANK0 ] unsigned char 
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  1    wreg      void 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2, status,0, prodl, prodh
 13910 ;; Tracked objects:
 13911 ;;		On entry : E/1
 13912 ;;		On exit  : F/2
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;Total ram usage:        5 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    7
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		_LORAWAN_RxDone
 13926 ;;		_ExecuteRxTimingSetup
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text72
 13931  006AF0                     __ptext72:
 13932                           	opt stack 0
 13933  006AF0                     _UpdateReceiveDelays:
 13934                           	opt stack 19
 13935                           
 13936                           ; BSR set to: 2
 13937                           ;incstack = 0
 13938                           ;UpdateReceiveDelays@delay stored from wreg
 13939  006AF0  0100               	movlb	0	; () banked
 13940  006AF2  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13941                           
 13942                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13943  006AF4  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13944  006AF6  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13945  006AF8  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13946  006AFA  0EE8               	movlw	232
 13947  006AFC  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13948  006AFE  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13949  006B02  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13950  006B06  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13951  006B08  50F3               	movf	prodl,w,c
 13952  006B0A  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13953  006B0C  0E03               	movlw	3
 13954  006B0E  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13955  006B10  50F3               	movf	prodl,w,c
 13956  006B12  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13957  006B14  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13958  006B18  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;lorawan.c: 2029: if (delay == 0)
 13962  006B1C  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13963  006B1E  E105               	bnz	l13159
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;lorawan.c: 2030: {
 13967                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13968  006B20  0E03               	movlw	3
 13969  006B22  0102               	movlb	2	; () banked
 13970  006B24  6F95               	movwf	(_loRa+149)& (0+255),b
 13971  006B26  0EE8               	movlw	232
 13972  006B28  6F94               	movwf	(_loRa+148)& (0+255),b
 13973  006B2A                     l13159:
 13974                           
 13975                           ;lorawan.c: 2032: }
 13976                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13977  006B2A  0EE8               	movlw	232
 13978  006B2C  0102               	movlb	2	; () banked
 13979  006B2E  2594               	addwf	(_loRa+148)& (0+255),w,b
 13980  006B30  6F96               	movwf	(_loRa+150)& (0+255),b
 13981  006B32  0E03               	movlw	3
 13982  006B34  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13983  006B36  6F97               	movwf	(_loRa+151)& (0+255),b
 13984                           
 13985                           ; BSR set to: 2
 13986  006B38  0012               	return		;funcret
 13987  006B3A                     __end_of_UpdateReceiveDelays:
 13988                           	opt stack 0
 13989                           tosu	equ	0xFFF
 13990                           tosh	equ	0xFFE
 13991                           tosl	equ	0xFFD
 13992                           pclath	equ	0xFFA
 13993                           tblptru	equ	0xFF8
 13994                           tblptrh	equ	0xFF7
 13995                           tblptrl	equ	0xFF6
 13996                           tablat	equ	0xFF5
 13997                           prodh	equ	0xFF4
 13998                           prodl	equ	0xFF3
 13999                           intcon	equ	0xFF2
 14000                           intcon2	equ	0xFF1
 14001                           intcon3	equ	0xFF0
 14002                           indf0	equ	0xFEF
 14003                           postinc0	equ	0xFEE
 14004                           fsr0h	equ	0xFEA
 14005                           fsr0l	equ	0xFE9
 14006                           wreg	equ	0xFE8
 14007                           postinc1	equ	0xFE6
 14008                           postdec1	equ	0xFE5
 14009                           plusw1	equ	0xFE3
 14010                           fsr1h	equ	0xFE2
 14011                           fsr1l	equ	0xFE1
 14012                           indf2	equ	0xFDF
 14013                           postinc2	equ	0xFDE
 14014                           postdec2	equ	0xFDD
 14015                           fsr2h	equ	0xFDA
 14016                           fsr2l	equ	0xFD9
 14017                           status	equ	0xFD8
 14018                           
 14019 ;; *************** function _ExecuteRxParamSetupReq *****************
 14020 ;; Defined at:
 14021 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14024 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;  frequency       4   18[BANK0 ] unsigned long 
 14027 ;;  dlSettings      1   22[BANK0 ] struct .
 14028 ;; Return value:  Size  Location     Type
 14029 ;;                  2   16[BANK0 ] PTR unsigned char 
 14030 ;; Registers used:
 14031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14032 ;; Tracked objects:
 14033 ;;		On entry : F/0
 14034 ;;		On exit  : F/2
 14035 ;;		Unchanged: 0/0
 14036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14038 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14040 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14041 ;;Total ram usage:        7 bytes
 14042 ;; Hardware stack levels used:    1
 14043 ;; Hardware stack levels required when called:    8
 14044 ;; This function calls:
 14045 ;;		_UpdateReceiveWindow2Parameters
 14046 ;;		_ValidateDataRate
 14047 ;;		_ValidateFrequency
 14048 ;;		_ValidateRxOffset
 14049 ;;		___lmul
 14050 ;; This function is called by:
 14051 ;;		_MacExecuteCommands
 14052 ;; This function uses a non-reentrant model
 14053 ;;
 14054                           
 14055                           	psect	text73
 14056  00428A                     __ptext73:
 14057                           	opt stack 0
 14058  00428A                     _ExecuteRxParamSetupReq:
 14059                           	opt stack 17
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14063                           
 14064                           ; BSR set to: 0
 14065                           
 14066                           ; BSR set to: 2
 14067                           ;incstack = 0
 14068  00428A  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14069  00428E  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14070  004292  50DF               	movf	indf2,w,c
 14071  004294  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14072                           
 14073                           ; BSR set to: 0
 14074  004296  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14075  004298  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14079  00429A  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14080  00429E  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14081  0042A2  0EFF               	movlw	255
 14082  0042A4  14DE               	andwf	postinc2,w,c
 14083  0042A6  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14084  0042A8  0EFF               	movlw	255
 14085  0042AA  14DE               	andwf	postinc2,w,c
 14086  0042AC  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14087  0042AE  0EFF               	movlw	255
 14088  0042B0  14DE               	andwf	postinc2,w,c
 14089  0042B2  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14090  0042B4  0E00               	movlw	0
 14091  0042B6  14DE               	andwf	postinc2,w,c
 14092  0042B8  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14096  0042BA  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14097  0042BE  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14098  0042C2  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14099  0042C6  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14100  0042CA  0E64               	movlw	100
 14101  0042CC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14102  0042CE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14103  0042D0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14104  0042D2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14105  0042D4  EC9D  F02E         	call	___lmul	;wreg free
 14106  0042D8  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14107  0042DC  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14108  0042E0  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14109  0042E4  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14113  0042E8  0E03               	movlw	3
 14114  0042EA  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14115  0042EC  0E00               	movlw	0
 14116  0042EE  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14120  0042F0  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14121  0042F4  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14122  0042F8  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14123  0042FC  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14124  004300  ECB5  F033         	call	_ValidateFrequency	;wreg free
 14125  004304  0900               	iorlw	0
 14126  004306  E10A               	bnz	l13597
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;lorawan_eu.c: 754: {
 14130                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14131  004308  0102               	movlb	2	; () banked
 14132  00430A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14133  00430C  0D02               	mullw	2
 14134  00430E  0EA9               	movlw	low (_loRa+169)
 14135  004310  24F3               	addwf	prodl,w,c
 14136  004312  6ED9               	movwf	fsr2l,c
 14137  004314  0E02               	movlw	high (_loRa+169)
 14138  004316  20F4               	addwfc	prodh,w,c
 14139  004318  6EDA               	movwf	fsr2h,c
 14140  00431A  86DF               	bsf	indf2,3,c
 14141  00431C                     l13597:
 14142                           
 14143                           ;lorawan_eu.c: 756: }
 14144                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14145  00431C  0100               	movlb	0	; () banked
 14146  00431E  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14147  004320  0B0F               	andlw	15
 14148  004322  EC69  F03B         	call	_ValidateDataRate
 14149  004326  0900               	iorlw	0
 14150  004328  E10A               	bnz	l13601
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;lorawan_eu.c: 759: {
 14154                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14155  00432A  0102               	movlb	2	; () banked
 14156  00432C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14157  00432E  0D02               	mullw	2
 14158  004330  0EA9               	movlw	low (_loRa+169)
 14159  004332  24F3               	addwf	prodl,w,c
 14160  004334  6ED9               	movwf	fsr2l,c
 14161  004336  0E02               	movlw	high (_loRa+169)
 14162  004338  20F4               	addwfc	prodh,w,c
 14163  00433A  6EDA               	movwf	fsr2h,c
 14164  00433C  88DF               	bsf	indf2,4,c
 14165  00433E                     l13601:
 14166                           
 14167                           ;lorawan_eu.c: 761: }
 14168                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14169  00433E  0100               	movlb	0	; () banked
 14170  004340  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14171  004342  0B07               	andlw	7
 14172  004344  EC5F  F03B         	call	_ValidateRxOffset
 14173  004348  0900               	iorlw	0
 14174  00434A  E10A               	bnz	l1127
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;lorawan_eu.c: 764: {
 14178                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14179  00434C  0102               	movlb	2	; () banked
 14180  00434E  51A7               	movf	(_loRa+167)& (0+255),w,b
 14181  004350  0D02               	mullw	2
 14182  004352  0EA9               	movlw	low (_loRa+169)
 14183  004354  24F3               	addwf	prodl,w,c
 14184  004356  6ED9               	movwf	fsr2l,c
 14185  004358  0E02               	movlw	high (_loRa+169)
 14186  00435A  20F4               	addwfc	prodh,w,c
 14187  00435C  6EDA               	movwf	fsr2h,c
 14188  00435E  8ADF               	bsf	indf2,5,c
 14189  004360                     l1127:
 14190                           
 14191                           ;lorawan_eu.c: 766: }
 14192                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14193  004360  0102               	movlb	2	; () banked
 14194  004362  51A7               	movf	(_loRa+167)& (0+255),w,b
 14195  004364  0D02               	mullw	2
 14196  004366  0EA9               	movlw	low (_loRa+169)
 14197  004368  24F3               	addwf	prodl,w,c
 14198  00436A  6ED9               	movwf	fsr2l,c
 14199  00436C  0E02               	movlw	high (_loRa+169)
 14200  00436E  20F4               	addwfc	prodh,w,c
 14201  004370  6EDA               	movwf	fsr2h,c
 14202  004372  A8DF               	btfss	indf2,4,c
 14203  004374  D029               	goto	l13615
 14204                           
 14205                           ; BSR set to: 2
 14206  004376  51A7               	movf	(_loRa+167)& (0+255),w,b
 14207  004378  0D02               	mullw	2
 14208  00437A  0EA9               	movlw	low (_loRa+169)
 14209  00437C  24F3               	addwf	prodl,w,c
 14210  00437E  6ED9               	movwf	fsr2l,c
 14211  004380  0E02               	movlw	high (_loRa+169)
 14212  004382  20F4               	addwfc	prodh,w,c
 14213  004384  6EDA               	movwf	fsr2h,c
 14214  004386  A6DF               	btfss	indf2,3,c
 14215  004388  D01F               	goto	l13615
 14216                           
 14217                           ; BSR set to: 2
 14218  00438A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14219  00438C  0D02               	mullw	2
 14220  00438E  0EA9               	movlw	low (_loRa+169)
 14221  004390  24F3               	addwf	prodl,w,c
 14222  004392  6ED9               	movwf	fsr2l,c
 14223  004394  0E02               	movlw	high (_loRa+169)
 14224  004396  20F4               	addwfc	prodh,w,c
 14225  004398  6EDA               	movwf	fsr2h,c
 14226  00439A  AADF               	btfss	indf2,5,c
 14227  00439C  D015               	goto	l13615
 14228                           
 14229                           ; BSR set to: 2
 14230                           ;lorawan_eu.c: 769: {
 14231                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14232  00439E  0100               	movlb	0	; () banked
 14233  0043A0  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14234  0043A2  0B07               	andlw	7
 14235  0043A4  0102               	movlb	2	; () banked
 14236  0043A6  6FEF               	movwf	(_loRa+239)& (0+255),b
 14237                           
 14238                           ; BSR set to: 2
 14239                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14240  0043A8  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14241  0043AC  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14242  0043B0  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14243  0043B4  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14244  0043B8  0100               	movlb	0	; () banked
 14245  0043BA  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14246  0043BC  0B0F               	andlw	15
 14247  0043BE  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14248  0043C0  EC49  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14252  0043C4  0102               	movlb	2	; () banked
 14253  0043C6  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14254  0043C8                     l13615:
 14255                           
 14256                           ; BSR set to: 2
 14257                           ;lorawan_eu.c: 773: }
 14258                           ;lorawan_eu.c: 775: return ptr;
 14259  0043C8  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14260  0043CC  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14261                           
 14262                           ; BSR set to: 2
 14263  0043D0  0012               	return		;funcret
 14264  0043D2                     __end_of_ExecuteRxParamSetupReq:
 14265                           	opt stack 0
 14266                           tosu	equ	0xFFF
 14267                           tosh	equ	0xFFE
 14268                           tosl	equ	0xFFD
 14269                           pclath	equ	0xFFA
 14270                           tblptru	equ	0xFF8
 14271                           tblptrh	equ	0xFF7
 14272                           tblptrl	equ	0xFF6
 14273                           tablat	equ	0xFF5
 14274                           prodh	equ	0xFF4
 14275                           prodl	equ	0xFF3
 14276                           intcon	equ	0xFF2
 14277                           intcon2	equ	0xFF1
 14278                           intcon3	equ	0xFF0
 14279                           indf0	equ	0xFEF
 14280                           postinc0	equ	0xFEE
 14281                           fsr0h	equ	0xFEA
 14282                           fsr0l	equ	0xFE9
 14283                           wreg	equ	0xFE8
 14284                           postinc1	equ	0xFE6
 14285                           postdec1	equ	0xFE5
 14286                           plusw1	equ	0xFE3
 14287                           fsr1h	equ	0xFE2
 14288                           fsr1l	equ	0xFE1
 14289                           indf2	equ	0xFDF
 14290                           postinc2	equ	0xFDE
 14291                           postdec2	equ	0xFDD
 14292                           fsr2h	equ	0xFDA
 14293                           fsr2l	equ	0xFD9
 14294                           status	equ	0xFD8
 14295                           
 14296 ;; *************** function _ValidateRxOffset *****************
 14297 ;; Defined at:
 14298 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  rxOffset        1    wreg     unsigned char 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14303 ;;  result          1    5[BANK0 ] enum E8016
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  1    wreg      enum E8016
 14306 ;; Registers used:
 14307 ;;		wreg, status,2, status,0
 14308 ;; Tracked objects:
 14309 ;;		On entry : F/0
 14310 ;;		On exit  : F/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;Total ram usage:        2 bytes
 14318 ;; Hardware stack levels used:    1
 14319 ;; Hardware stack levels required when called:    7
 14320 ;; This function calls:
 14321 ;;		Nothing
 14322 ;; This function is called by:
 14323 ;;		_ExecuteRxParamSetupReq
 14324 ;; This function uses a non-reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text74
 14328  0076BE                     __ptext74:
 14329                           	opt stack 0
 14330  0076BE                     _ValidateRxOffset:
 14331                           	opt stack 17
 14332                           
 14333                           ; BSR set to: 2
 14334                           ;incstack = 0
 14335                           ;ValidateRxOffset@rxOffset stored from wreg
 14336  0076BE  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14337                           
 14338                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14339  0076C0  0100               	movlb	0	; () banked
 14340  0076C2  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14344  0076C4  0E05               	movlw	5
 14345  0076C6  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14346  0076C8  D002               	goto	l1223
 14347                           
 14348                           ; BSR set to: 0
 14349                           ;lorawan_eu.c: 1081: {
 14350                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14351  0076CA  0E03               	movlw	3
 14352  0076CC  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14353  0076CE                     l1223:
 14354                           
 14355                           ; BSR set to: 0
 14356                           ;lorawan_eu.c: 1083: }
 14357                           ;lorawan_eu.c: 1085: return result;
 14358  0076CE  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14359                           
 14360                           ; BSR set to: 0
 14361  0076D0  0012               	return		;funcret
 14362  0076D2                     __end_of_ValidateRxOffset:
 14363                           	opt stack 0
 14364                           tosu	equ	0xFFF
 14365                           tosh	equ	0xFFE
 14366                           tosl	equ	0xFFD
 14367                           pclath	equ	0xFFA
 14368                           tblptru	equ	0xFF8
 14369                           tblptrh	equ	0xFF7
 14370                           tblptrl	equ	0xFF6
 14371                           tablat	equ	0xFF5
 14372                           prodh	equ	0xFF4
 14373                           prodl	equ	0xFF3
 14374                           intcon	equ	0xFF2
 14375                           intcon2	equ	0xFF1
 14376                           intcon3	equ	0xFF0
 14377                           indf0	equ	0xFEF
 14378                           postinc0	equ	0xFEE
 14379                           fsr0h	equ	0xFEA
 14380                           fsr0l	equ	0xFE9
 14381                           wreg	equ	0xFE8
 14382                           postinc1	equ	0xFE6
 14383                           postdec1	equ	0xFE5
 14384                           plusw1	equ	0xFE3
 14385                           fsr1h	equ	0xFE2
 14386                           fsr1l	equ	0xFE1
 14387                           indf2	equ	0xFDF
 14388                           postinc2	equ	0xFDE
 14389                           postdec2	equ	0xFDD
 14390                           fsr2h	equ	0xFDA
 14391                           fsr2l	equ	0xFD9
 14392                           status	equ	0xFD8
 14393                           
 14394 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14395 ;; Defined at:
 14396 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;  frequency       4    4[BANK0 ] unsigned long 
 14399 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;		None
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  1    wreg      void 
 14404 ;; Registers used:
 14405 ;;		None
 14406 ;; Tracked objects:
 14407 ;;		On entry : F/0
 14408 ;;		On exit  : F/0
 14409 ;;		Unchanged: F/0
 14410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14411 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14414 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14415 ;;Total ram usage:        5 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; Hardware stack levels required when called:    7
 14418 ;; This function calls:
 14419 ;;		Nothing
 14420 ;; This function is called by:
 14421 ;;		_ExecuteRxParamSetupReq
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           	psect	text75
 14426  007692                     __ptext75:
 14427                           	opt stack 0
 14428  007692                     _UpdateReceiveWindow2Parameters:
 14429                           	opt stack 17
 14430                           
 14431                           ; BSR set to: 0
 14432                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;incstack = 0
 14436  007692  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14437                           
 14438                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14439  007696  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14440  00769A  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14441  00769E  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14442  0076A2  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14443                           
 14444                           ; BSR set to: 0
 14445  0076A6  0012               	return		;funcret
 14446  0076A8                     __end_of_UpdateReceiveWindow2Parameters:
 14447                           	opt stack 0
 14448                           tosu	equ	0xFFF
 14449                           tosh	equ	0xFFE
 14450                           tosl	equ	0xFFD
 14451                           pclath	equ	0xFFA
 14452                           tblptru	equ	0xFF8
 14453                           tblptrh	equ	0xFF7
 14454                           tblptrl	equ	0xFF6
 14455                           tablat	equ	0xFF5
 14456                           prodh	equ	0xFF4
 14457                           prodl	equ	0xFF3
 14458                           intcon	equ	0xFF2
 14459                           intcon2	equ	0xFF1
 14460                           intcon3	equ	0xFF0
 14461                           indf0	equ	0xFEF
 14462                           postinc0	equ	0xFEE
 14463                           fsr0h	equ	0xFEA
 14464                           fsr0l	equ	0xFE9
 14465                           wreg	equ	0xFE8
 14466                           postinc1	equ	0xFE6
 14467                           postdec1	equ	0xFE5
 14468                           plusw1	equ	0xFE3
 14469                           fsr1h	equ	0xFE2
 14470                           fsr1l	equ	0xFE1
 14471                           indf2	equ	0xFDF
 14472                           postinc2	equ	0xFDE
 14473                           postdec2	equ	0xFDD
 14474                           fsr2h	equ	0xFDA
 14475                           fsr2l	equ	0xFD9
 14476                           status	equ	0xFD8
 14477                           
 14478 ;; *************** function _ExecuteNewChannel *****************
 14479 ;; Defined at:
 14480 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14483 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;  frequency       4   19[BANK0 ] unsigned long 
 14486 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14487 ;;  drRange         1   18[BANK0 ] struct .
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  2   16[BANK0 ] PTR unsigned char 
 14490 ;; Registers used:
 14491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14492 ;; Tracked objects:
 14493 ;;		On entry : F/0
 14494 ;;		On exit  : F/2
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14497 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14501 ;;Total ram usage:        8 bytes
 14502 ;; Hardware stack levels used:    1
 14503 ;; Hardware stack levels required when called:    9
 14504 ;; This function calls:
 14505 ;;		_LORAWAN_SetChannelIdStatus
 14506 ;;		_UpdateChannelIdStatus
 14507 ;;		_UpdateDataRange
 14508 ;;		_UpdateDutyCycle
 14509 ;;		_UpdateFrequency
 14510 ;;		_ValidateChannelId
 14511 ;;		_ValidateDataRange
 14512 ;;		_ValidateFrequency
 14513 ;;		___lmul
 14514 ;; This function is called by:
 14515 ;;		_MacExecuteCommands
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text76
 14520  00335C                     __ptext76:
 14521                           	opt stack 0
 14522  00335C                     _ExecuteNewChannel:
 14523                           	opt stack 16
 14524                           
 14525                           ; BSR set to: 0
 14526                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14527                           
 14528                           ; BSR set to: 0
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;incstack = 0
 14532  00335C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14533  003360  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14534  003364  50DF               	movf	indf2,w,c
 14535  003366  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14536                           
 14537                           ; BSR set to: 0
 14538  003368  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14539  00336A  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14540                           
 14541                           ; BSR set to: 0
 14542                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14543  00336C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14544  003370  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14545  003374  0EFF               	movlw	255
 14546  003376  14DE               	andwf	postinc2,w,c
 14547  003378  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14548  00337A  0EFF               	movlw	255
 14549  00337C  14DE               	andwf	postinc2,w,c
 14550  00337E  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14551  003380  0EFF               	movlw	255
 14552  003382  14DE               	andwf	postinc2,w,c
 14553  003384  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14554  003386  0E00               	movlw	0
 14555  003388  14DE               	andwf	postinc2,w,c
 14556  00338A  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14560  00338C  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14561  003390  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14562  003394  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14563  003398  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14564  00339C  0E64               	movlw	100
 14565  00339E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14566  0033A0  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14567  0033A2  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14568  0033A4  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14569  0033A6  EC9D  F02E         	call	___lmul	;wreg free
 14570  0033AA  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14571  0033AE  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14572  0033B2  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14573  0033B6  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14574                           
 14575                           ; BSR set to: 0
 14576                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14577  0033BA  0E03               	movlw	3
 14578  0033BC  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14579  0033BE  0E00               	movlw	0
 14580  0033C0  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14584  0033C2  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14585  0033C6  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14586  0033CA  50DF               	movf	indf2,w,c
 14587  0033CC  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14588                           
 14589                           ; BSR set to: 0
 14590  0033CE  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14591  0033D0  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14592                           
 14593                           ; BSR set to: 0
 14594                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14595  0033D2  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14596  0033D4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14597  0033D6  EC2D  F03A         	call	_ValidateChannelId
 14598  0033DA  0900               	iorlw	0
 14599  0033DC  E12B               	bnz	l1110
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;lorawan_eu.c: 692: {
 14603                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14604  0033DE  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14605  0033E2  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14606  0033E6  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14607  0033EA  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14608  0033EE  ECB5  F033         	call	_ValidateFrequency	;wreg free
 14609  0033F2  0900               	iorlw	0
 14610  0033F4  E005               	bz	l13553
 14611                           
 14612                           ; BSR set to: 0
 14613  0033F6  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14614  0033F8  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14615  0033FA  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14616  0033FC  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14617  0033FE  E10A               	bnz	l13555
 14618  003400                     l13553:
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;lorawan_eu.c: 694: {
 14622                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14623  003400  0102               	movlb	2	; () banked
 14624  003402  51A7               	movf	(_loRa+167)& (0+255),w,b
 14625  003404  0D02               	mullw	2
 14626  003406  0EA9               	movlw	low (_loRa+169)
 14627  003408  24F3               	addwf	prodl,w,c
 14628  00340A  6ED9               	movwf	fsr2l,c
 14629  00340C  0E02               	movlw	high (_loRa+169)
 14630  00340E  20F4               	addwfc	prodh,w,c
 14631  003410  6EDA               	movwf	fsr2h,c
 14632  003412  8EDF               	bsf	indf2,7,c
 14633  003414                     l13555:
 14634                           
 14635                           ;lorawan_eu.c: 696: }
 14636                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14637  003414  0100               	movlb	0	; () banked
 14638  003416  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14639  003418  ECD2  F037         	call	_ValidateDataRange
 14640  00341C  0900               	iorlw	0
 14641  00341E  E10A               	bnz	l1110
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;lorawan_eu.c: 699: {
 14645                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14646  003420  0102               	movlb	2	; () banked
 14647  003422  51A7               	movf	(_loRa+167)& (0+255),w,b
 14648  003424  0D02               	mullw	2
 14649  003426  0EA9               	movlw	low (_loRa+169)
 14650  003428  24F3               	addwf	prodl,w,c
 14651  00342A  6ED9               	movwf	fsr2l,c
 14652  00342C  0E02               	movlw	high (_loRa+169)
 14653  00342E  20F4               	addwfc	prodh,w,c
 14654  003430  6EDA               	movwf	fsr2h,c
 14655  003432  8CDF               	bsf	indf2,6,c
 14656  003434                     l1110:
 14657                           
 14658                           ;lorawan_eu.c: 701: }
 14659                           ;lorawan_eu.c: 702: }
 14660                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14661  003434  0102               	movlb	2	; () banked
 14662  003436  51A7               	movf	(_loRa+167)& (0+255),w,b
 14663  003438  0D02               	mullw	2
 14664  00343A  0EA9               	movlw	low (_loRa+169)
 14665  00343C  24F3               	addwf	prodl,w,c
 14666  00343E  6ED9               	movwf	fsr2l,c
 14667  003440  0E02               	movlw	high (_loRa+169)
 14668  003442  20F4               	addwfc	prodh,w,c
 14669  003444  6EDA               	movwf	fsr2h,c
 14670  003446  AEDF               	btfss	indf2,7,c
 14671  003448  D065               	goto	l13577
 14672                           
 14673                           ; BSR set to: 2
 14674  00344A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14675  00344C  0D02               	mullw	2
 14676  00344E  0EA9               	movlw	low (_loRa+169)
 14677  003450  24F3               	addwf	prodl,w,c
 14678  003452  6ED9               	movwf	fsr2l,c
 14679  003454  0E02               	movlw	high (_loRa+169)
 14680  003456  20F4               	addwfc	prodh,w,c
 14681  003458  6EDA               	movwf	fsr2h,c
 14682  00345A  ACDF               	btfss	indf2,6,c
 14683  00345C  D05B               	goto	l13577
 14684                           
 14685                           ; BSR set to: 2
 14686                           ;lorawan_eu.c: 705: {
 14687                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14688  00345E  0E10               	movlw	16
 14689  003460  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14690  003462  D029               	goto	l13569
 14691                           
 14692                           ; BSR set to: 2
 14693                           ;lorawan_eu.c: 707: {
 14694                           ;lorawan_eu.c: 708: if (frequency != 0)
 14695  003464  0100               	movlb	0	; () banked
 14696  003466  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14697  003468  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14698  00346A  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14699  00346C  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14700  00346E  E01E               	bz	l13567
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;lorawan_eu.c: 709: {
 14704                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14705  003470  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14706  003474  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14707  003478  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14708  00347C  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14709  003480  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14710  003482  EC47  F037         	call	_UpdateFrequency
 14711                           
 14712                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14713  003486  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14714  00348A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14715  00348C  ECB3  F024         	call	_UpdateDataRange
 14716                           
 14717                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14718  003490  0E01               	movlw	1
 14719  003492  0100               	movlb	0	; () banked
 14720  003494  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14721  003496  0E2E               	movlw	46
 14722  003498  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14723  00349A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14724  00349C  EC06  F038         	call	_UpdateDutyCycle
 14725                           
 14726                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14727  0034A0  0E01               	movlw	1
 14728  0034A2  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14729  0034A4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14730  0034A6  ECAF  F023         	call	_UpdateChannelIdStatus
 14731                           
 14732                           ;lorawan_eu.c: 714: }
 14733  0034AA  D032               	goto	l13575
 14734  0034AC                     l13567:
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;lorawan_eu.c: 715: else
 14738                           ;lorawan_eu.c: 716: {
 14739                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14740  0034AC  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14741  0034AE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14742  0034B0  EC64  F037         	call	_LORAWAN_SetChannelIdStatus
 14743  0034B4  D02D               	goto	l13575
 14744  0034B6                     l13569:
 14745                           
 14746                           ; BSR set to: 2
 14747                           ;lorawan_eu.c: 720: else
 14748                           ;lorawan_eu.c: 721: {
 14749                           ;lorawan_eu.c: 722: if (frequency != 0)
 14750  0034B6  0100               	movlb	0	; () banked
 14751  0034B8  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14752  0034BA  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14753  0034BC  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14754  0034BE  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14755  0034C0  E022               	bz	l13573
 14756                           
 14757                           ; BSR set to: 0
 14758                           ;lorawan_eu.c: 723: {
 14759                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14760  0034C2  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14761  0034C6  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14762  0034CA  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14763  0034CE  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14764  0034D2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14765  0034D4  0F10               	addlw	16
 14766  0034D6  EC47  F037         	call	_UpdateFrequency
 14767                           
 14768                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14769  0034DA  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14770  0034DE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14771  0034E0  0F10               	addlw	16
 14772  0034E2  ECB3  F024         	call	_UpdateDataRange
 14773                           
 14774                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14775  0034E6  0E01               	movlw	1
 14776  0034E8  0100               	movlb	0	; () banked
 14777  0034EA  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14778  0034EC  0E2E               	movlw	46
 14779  0034EE  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14780  0034F0  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14781  0034F2  0F10               	addlw	16
 14782  0034F4  EC06  F038         	call	_UpdateDutyCycle
 14783                           
 14784                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14785  0034F8  0E01               	movlw	1
 14786  0034FA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14787  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14788  0034FE  0F10               	addlw	16
 14789  003500  ECAF  F023         	call	_UpdateChannelIdStatus
 14790                           
 14791                           ;lorawan_eu.c: 728: }
 14792  003504  D005               	goto	l13575
 14793  003506                     l13573:
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;lorawan_eu.c: 729: else
 14797                           ;lorawan_eu.c: 730: {
 14798                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14799  003506  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14800  003508  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14801  00350A  0F10               	addlw	16
 14802  00350C  EC64  F037         	call	_LORAWAN_SetChannelIdStatus
 14803  003510                     l13575:
 14804                           
 14805                           ;lorawan_eu.c: 732: }
 14806                           ;lorawan_eu.c: 733: }
 14807                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14808  003510  0102               	movlb	2	; () banked
 14809  003512  8703               	bsf	(_loRa+3)& (0+255),3,b
 14810  003514                     l13577:
 14811                           
 14812                           ; BSR set to: 2
 14813                           ;lorawan_eu.c: 736: }
 14814                           ;lorawan_eu.c: 737: return ptr;
 14815  003514  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14816  003518  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14817                           
 14818                           ; BSR set to: 2
 14819  00351C  0012               	return		;funcret
 14820  00351E                     __end_of_ExecuteNewChannel:
 14821                           	opt stack 0
 14822                           tosu	equ	0xFFF
 14823                           tosh	equ	0xFFE
 14824                           tosl	equ	0xFFD
 14825                           pclath	equ	0xFFA
 14826                           tblptru	equ	0xFF8
 14827                           tblptrh	equ	0xFF7
 14828                           tblptrl	equ	0xFF6
 14829                           tablat	equ	0xFF5
 14830                           prodh	equ	0xFF4
 14831                           prodl	equ	0xFF3
 14832                           intcon	equ	0xFF2
 14833                           intcon2	equ	0xFF1
 14834                           intcon3	equ	0xFF0
 14835                           indf0	equ	0xFEF
 14836                           postinc0	equ	0xFEE
 14837                           fsr0h	equ	0xFEA
 14838                           fsr0l	equ	0xFE9
 14839                           wreg	equ	0xFE8
 14840                           postinc1	equ	0xFE6
 14841                           postdec1	equ	0xFE5
 14842                           plusw1	equ	0xFE3
 14843                           fsr1h	equ	0xFE2
 14844                           fsr1l	equ	0xFE1
 14845                           indf2	equ	0xFDF
 14846                           postinc2	equ	0xFDE
 14847                           postdec2	equ	0xFDD
 14848                           fsr2h	equ	0xFDA
 14849                           fsr2l	equ	0xFD9
 14850                           status	equ	0xFD8
 14851                           
 14852 ;; *************** function _ValidateFrequency *****************
 14853 ;; Defined at:
 14854 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  result          1    8[BANK0 ] enum E8016
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  1    wreg      enum E8016
 14861 ;; Registers used:
 14862 ;;		wreg, status,2, status,0
 14863 ;; Tracked objects:
 14864 ;;		On entry : F/0
 14865 ;;		On exit  : F/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14871 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14872 ;;Total ram usage:        5 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:    7
 14875 ;; This function calls:
 14876 ;;		Nothing
 14877 ;; This function is called by:
 14878 ;;		_ExecuteNewChannel
 14879 ;;		_ExecuteRxParamSetupReq
 14880 ;;		_UpdateCfList
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           	psect	text77
 14885  00676A                     __ptext77:
 14886                           	opt stack 0
 14887  00676A                     _ValidateFrequency:
 14888                           	opt stack 18
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14892                           
 14893                           ; BSR set to: 2
 14894                           ;incstack = 0
 14895  00676A  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14899  00676C  0102               	movlb	2	; () banked
 14900  00676E  51A4               	movf	(_loRa+164)& (0+255),w,b
 14901  006770  E116               	bnz	l12819
 14902                           
 14903                           ; BSR set to: 2
 14904                           ;lorawan_eu.c: 1093: {
 14905                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14906  006772  0E81               	movlw	129
 14907  006774  0100               	movlb	0	; () banked
 14908  006776  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14909  006778  0E25               	movlw	37
 14910  00677A  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14911  00677C  0EDB               	movlw	219
 14912  00677E  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14913  006780  0E33               	movlw	51
 14914  006782  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14915  006784  E209               	bc	l12817
 14916                           
 14917                           ; BSR set to: 0
 14918  006786  0EC0               	movlw	192
 14919  006788  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14920  00678A  0E55               	movlw	85
 14921  00678C  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14922  00678E  0E70               	movlw	112
 14923  006790  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14924  006792  0E33               	movlw	51
 14925  006794  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14926  006796  E215               	bc	l1231
 14927  006798                     l12817:
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;lorawan_eu.c: 1095: {
 14931                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14932  006798  0E03               	movlw	3
 14933  00679A  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14934  00679C  D012               	goto	l1231
 14935  00679E                     l12819:
 14936                           
 14937                           ; BSR set to: 2
 14938                           ;lorawan_eu.c: 1099: else
 14939                           ;lorawan_eu.c: 1100: {
 14940                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14941  00679E  0E71               	movlw	113
 14942  0067A0  0100               	movlb	0	; () banked
 14943  0067A2  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14944  0067A4  0E5E               	movlw	94
 14945  0067A6  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14946  0067A8  0EEA               	movlw	234
 14947  0067AA  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14948  0067AC  0E19               	movlw	25
 14949  0067AE  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14950  0067B0  E2F3               	bc	l12817
 14951                           
 14952                           ; BSR set to: 0
 14953  0067B2  0E90               	movlw	144
 14954  0067B4  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14955  0067B6  0ED1               	movlw	209
 14956  0067B8  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14957  0067BA  0ECF               	movlw	207
 14958  0067BC  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14959  0067BE  0E19               	movlw	25
 14960  0067C0  D7E9               	goto	L7
 14961  0067C2                     l1231:
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;lorawan_eu.c: 1104: }
 14965                           ;lorawan_eu.c: 1105: }
 14966                           ;lorawan_eu.c: 1107: return result;
 14967  0067C2  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14968                           
 14969                           ; BSR set to: 0
 14970  0067C4  0012               	return		;funcret
 14971  0067C6                     __end_of_ValidateFrequency:
 14972                           	opt stack 0
 14973                           tosu	equ	0xFFF
 14974                           tosh	equ	0xFFE
 14975                           tosl	equ	0xFFD
 14976                           pclath	equ	0xFFA
 14977                           tblptru	equ	0xFF8
 14978                           tblptrh	equ	0xFF7
 14979                           tblptrl	equ	0xFF6
 14980                           tablat	equ	0xFF5
 14981                           prodh	equ	0xFF4
 14982                           prodl	equ	0xFF3
 14983                           intcon	equ	0xFF2
 14984                           intcon2	equ	0xFF1
 14985                           intcon3	equ	0xFF0
 14986                           indf0	equ	0xFEF
 14987                           postinc0	equ	0xFEE
 14988                           fsr0h	equ	0xFEA
 14989                           fsr0l	equ	0xFE9
 14990                           wreg	equ	0xFE8
 14991                           postinc1	equ	0xFE6
 14992                           postdec1	equ	0xFE5
 14993                           plusw1	equ	0xFE3
 14994                           fsr1h	equ	0xFE2
 14995                           fsr1l	equ	0xFE1
 14996                           indf2	equ	0xFDF
 14997                           postinc2	equ	0xFDE
 14998                           postdec2	equ	0xFDD
 14999                           fsr2h	equ	0xFDA
 15000                           fsr2l	equ	0xFD9
 15001                           status	equ	0xFD8
 15002                           
 15003 ;; *************** function _ValidateDataRange *****************
 15004 ;; Defined at:
 15005 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15006 ;; Parameters:    Size  Location     Type
 15007 ;;  dataRangeNew    1    wreg     unsigned char 
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 15010 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 15011 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 15012 ;;  result          1    6[BANK0 ] enum E8016
 15013 ;; Return value:  Size  Location     Type
 15014 ;;                  1    wreg      enum E8016
 15015 ;; Registers used:
 15016 ;;		wreg, status,2, status,0, cstack
 15017 ;; Tracked objects:
 15018 ;;		On entry : F/0
 15019 ;;		On exit  : F/0
 15020 ;;		Unchanged: 0/0
 15021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15023 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15025 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15026 ;;Total ram usage:        4 bytes
 15027 ;; Hardware stack levels used:    1
 15028 ;; Hardware stack levels required when called:    8
 15029 ;; This function calls:
 15030 ;;		_ValidateDataRate
 15031 ;; This function is called by:
 15032 ;;		_ExecuteNewChannel
 15033 ;; This function uses a non-reentrant model
 15034 ;;
 15035                           
 15036                           	psect	text78
 15037  006FA4                     __ptext78:
 15038                           	opt stack 0
 15039  006FA4                     _ValidateDataRange:
 15040                           	opt stack 16
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;incstack = 0
 15044                           ;ValidateDataRange@dataRangeNew stored from wreg
 15045  006FA4  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15046                           
 15047                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15048  006FA6  0100               	movlb	0	; () banked
 15049  006FA8  6B66               	clrf	ValidateDataRange@result& (0+255),b
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15053                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15054  006FAA  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15055  006FAC  0B0F               	andlw	15
 15056  006FAE  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15057                           
 15058                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15059  006FB0  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15060  006FB2  0B0F               	andlw	15
 15061  006FB4  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15065  006FB6  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15066  006FB8  EC69  F03B         	call	_ValidateDataRate
 15067  006FBC  0900               	iorlw	0
 15068  006FBE  E108               	bnz	l12839
 15069                           
 15070                           ; BSR set to: 0
 15071  006FC0  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15072  006FC2  EC69  F03B         	call	_ValidateDataRate
 15073  006FC6  0900               	iorlw	0
 15074  006FC8  E103               	bnz	l12839
 15075                           
 15076                           ; BSR set to: 0
 15077  006FCA  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15078  006FCC  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15079  006FCE  E202               	bc	l1238
 15080  006FD0                     l12839:
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;lorawan_eu.c: 1119: {
 15084                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15085  006FD0  0E03               	movlw	3
 15086  006FD2  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15087  006FD4                     l1238:
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;lorawan_eu.c: 1121: }
 15091                           ;lorawan_eu.c: 1122: return result;
 15092  006FD4  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15093                           
 15094                           ; BSR set to: 0
 15095  006FD6  0012               	return		;funcret
 15096  006FD8                     __end_of_ValidateDataRange:
 15097                           	opt stack 0
 15098                           tosu	equ	0xFFF
 15099                           tosh	equ	0xFFE
 15100                           tosl	equ	0xFFD
 15101                           pclath	equ	0xFFA
 15102                           tblptru	equ	0xFF8
 15103                           tblptrh	equ	0xFF7
 15104                           tblptrl	equ	0xFF6
 15105                           tablat	equ	0xFF5
 15106                           prodh	equ	0xFF4
 15107                           prodl	equ	0xFF3
 15108                           intcon	equ	0xFF2
 15109                           intcon2	equ	0xFF1
 15110                           intcon3	equ	0xFF0
 15111                           indf0	equ	0xFEF
 15112                           postinc0	equ	0xFEE
 15113                           fsr0h	equ	0xFEA
 15114                           fsr0l	equ	0xFE9
 15115                           wreg	equ	0xFE8
 15116                           postinc1	equ	0xFE6
 15117                           postdec1	equ	0xFE5
 15118                           plusw1	equ	0xFE3
 15119                           fsr1h	equ	0xFE2
 15120                           fsr1l	equ	0xFE1
 15121                           indf2	equ	0xFDF
 15122                           postinc2	equ	0xFDE
 15123                           postdec2	equ	0xFDD
 15124                           fsr2h	equ	0xFDA
 15125                           fsr2l	equ	0xFD9
 15126                           status	equ	0xFD8
 15127                           
 15128 ;; *************** function _UpdateFrequency *****************
 15129 ;; Defined at:
 15130 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;  channelId       1    wreg     unsigned char 
 15133 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;  channelId       1    8[BANK0 ] unsigned char 
 15136 ;; Return value:  Size  Location     Type
 15137 ;;                  1    wreg      void 
 15138 ;; Registers used:
 15139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15140 ;; Tracked objects:
 15141 ;;		On entry : F/0
 15142 ;;		On exit  : F/0
 15143 ;;		Unchanged: 0/0
 15144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;Total ram usage:        5 bytes
 15150 ;; Hardware stack levels used:    1
 15151 ;; Hardware stack levels required when called:    7
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_ExecuteNewChannel
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           	psect	text79
 15160  006E8E                     __ptext79:
 15161                           	opt stack 0
 15162  006E8E                     _UpdateFrequency:
 15163                           	opt stack 17
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;incstack = 0
 15167                           ;UpdateFrequency@channelId stored from wreg
 15168  006E8E  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15169                           
 15170                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15171  006E90  0100               	movlb	0	; () banked
 15172  006E92  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15173  006E94  0D0E               	mullw	14
 15174  006E96  0E00               	movlw	low _Channels
 15175  006E98  24F3               	addwf	prodl,w,c
 15176  006E9A  6ED9               	movwf	fsr2l,c
 15177  006E9C  0E04               	movlw	high _Channels
 15178  006E9E  20F4               	addwfc	prodh,w,c
 15179  006EA0  6EDA               	movwf	fsr2h,c
 15180  006EA2  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15181  006EA6  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15182  006EAA  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15183  006EAE  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15184                           
 15185                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15186  006EB2  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15187  006EB4  0D0E               	mullw	14
 15188  006EB6  0E0D               	movlw	low (_Channels+13)
 15189  006EB8  24F3               	addwf	prodl,w,c
 15190  006EBA  6ED9               	movwf	fsr2l,c
 15191  006EBC  0E04               	movlw	high (_Channels+13)
 15192  006EBE  20F4               	addwfc	prodh,w,c
 15193  006EC0  6EDA               	movwf	fsr2h,c
 15194  006EC2  0E00               	movlw	0
 15195  006EC4  80DB               	bsf	plusw2,0,c
 15196                           
 15197                           ; BSR set to: 0
 15198  006EC6  0C00               	retlw	0	;funcret
 15199  006EC8                     __end_of_UpdateFrequency:
 15200                           	opt stack 0
 15201                           tosu	equ	0xFFF
 15202                           tosh	equ	0xFFE
 15203                           tosl	equ	0xFFD
 15204                           pclath	equ	0xFFA
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           intcon	equ	0xFF2
 15212                           intcon2	equ	0xFF1
 15213                           intcon3	equ	0xFF0
 15214                           indf0	equ	0xFEF
 15215                           postinc0	equ	0xFEE
 15216                           fsr0h	equ	0xFEA
 15217                           fsr0l	equ	0xFE9
 15218                           wreg	equ	0xFE8
 15219                           postinc1	equ	0xFE6
 15220                           postdec1	equ	0xFE5
 15221                           plusw1	equ	0xFE3
 15222                           fsr1h	equ	0xFE2
 15223                           fsr1l	equ	0xFE1
 15224                           indf2	equ	0xFDF
 15225                           postinc2	equ	0xFDE
 15226                           postdec2	equ	0xFDD
 15227                           plusw2	equ	0xFDB
 15228                           fsr2h	equ	0xFDA
 15229                           fsr2l	equ	0xFD9
 15230                           status	equ	0xFD8
 15231                           
 15232 ;; *************** function _UpdateDutyCycle *****************
 15233 ;; Defined at:
 15234 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;  channelId       1    wreg     unsigned char 
 15237 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15238 ;; Auto vars:     Size  Location     Type
 15239 ;;  channelId       1    6[BANK0 ] unsigned char 
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  1    wreg      void 
 15242 ;; Registers used:
 15243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15244 ;; Tracked objects:
 15245 ;;		On entry : F/0
 15246 ;;		On exit  : F/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15252 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;Total ram usage:        3 bytes
 15254 ;; Hardware stack levels used:    1
 15255 ;; Hardware stack levels required when called:    7
 15256 ;; This function calls:
 15257 ;;		Nothing
 15258 ;; This function is called by:
 15259 ;;		_ExecuteNewChannel
 15260 ;; This function uses a non-reentrant model
 15261 ;;
 15262                           
 15263                           	psect	text80
 15264  00700C                     __ptext80:
 15265                           	opt stack 0
 15266  00700C                     _UpdateDutyCycle:
 15267                           	opt stack 17
 15268                           
 15269                           ; BSR set to: 0
 15270                           ;incstack = 0
 15271                           ;UpdateDutyCycle@channelId stored from wreg
 15272  00700C  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15273                           
 15274                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15275  00700E  0100               	movlb	0	; () banked
 15276  007010  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15277  007012  0D0E               	mullw	14
 15278  007014  0E06               	movlw	low (_Channels+6)
 15279  007016  24F3               	addwf	prodl,w,c
 15280  007018  6ED9               	movwf	fsr2l,c
 15281  00701A  0E04               	movlw	high (_Channels+6)
 15282  00701C  20F4               	addwfc	prodh,w,c
 15283  00701E  6EDA               	movwf	fsr2h,c
 15284  007020  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15285  007024  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15286                           
 15287                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15288  007028  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15289  00702A  0D0E               	mullw	14
 15290  00702C  0E0D               	movlw	low (_Channels+13)
 15291  00702E  24F3               	addwf	prodl,w,c
 15292  007030  6ED9               	movwf	fsr2l,c
 15293  007032  0E04               	movlw	high (_Channels+13)
 15294  007034  20F4               	addwfc	prodh,w,c
 15295  007036  6EDA               	movwf	fsr2h,c
 15296  007038  0E00               	movlw	0
 15297  00703A  84DB               	bsf	plusw2,2,c
 15298                           
 15299                           ; BSR set to: 0
 15300  00703C  0C00               	retlw	0	;funcret
 15301  00703E                     __end_of_UpdateDutyCycle:
 15302                           	opt stack 0
 15303                           tosu	equ	0xFFF
 15304                           tosh	equ	0xFFE
 15305                           tosl	equ	0xFFD
 15306                           pclath	equ	0xFFA
 15307                           tblptru	equ	0xFF8
 15308                           tblptrh	equ	0xFF7
 15309                           tblptrl	equ	0xFF6
 15310                           tablat	equ	0xFF5
 15311                           prodh	equ	0xFF4
 15312                           prodl	equ	0xFF3
 15313                           intcon	equ	0xFF2
 15314                           intcon2	equ	0xFF1
 15315                           intcon3	equ	0xFF0
 15316                           indf0	equ	0xFEF
 15317                           postinc0	equ	0xFEE
 15318                           fsr0h	equ	0xFEA
 15319                           fsr0l	equ	0xFE9
 15320                           wreg	equ	0xFE8
 15321                           postinc1	equ	0xFE6
 15322                           postdec1	equ	0xFE5
 15323                           plusw1	equ	0xFE3
 15324                           fsr1h	equ	0xFE2
 15325                           fsr1l	equ	0xFE1
 15326                           indf2	equ	0xFDF
 15327                           postinc2	equ	0xFDE
 15328                           postdec2	equ	0xFDD
 15329                           plusw2	equ	0xFDB
 15330                           fsr2h	equ	0xFDA
 15331                           fsr2l	equ	0xFD9
 15332                           status	equ	0xFD8
 15333                           
 15334 ;; *************** function _UpdateDataRange *****************
 15335 ;; Defined at:
 15336 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15337 ;; Parameters:    Size  Location     Type
 15338 ;;  channelId       1    wreg     unsigned char 
 15339 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;  channelId       1    6[BANK0 ] unsigned char 
 15342 ;;  i               1    7[BANK0 ] unsigned char 
 15343 ;; Return value:  Size  Location     Type
 15344 ;;                  1    wreg      void 
 15345 ;; Registers used:
 15346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15347 ;; Tracked objects:
 15348 ;;		On entry : F/0
 15349 ;;		On exit  : F/2
 15350 ;;		Unchanged: 0/0
 15351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15352 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15355 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15356 ;;Total ram usage:        4 bytes
 15357 ;; Hardware stack levels used:    1
 15358 ;; Hardware stack levels required when called:    7
 15359 ;; This function calls:
 15360 ;;		Nothing
 15361 ;; This function is called by:
 15362 ;;		_ExecuteNewChannel
 15363 ;; This function uses a non-reentrant model
 15364 ;;
 15365                           
 15366                           	psect	text81
 15367  004966                     __ptext81:
 15368                           	opt stack 0
 15369  004966                     _UpdateDataRange:
 15370                           	opt stack 17
 15371                           
 15372                           ; BSR set to: 0
 15373                           ;incstack = 0
 15374                           ;UpdateDataRange@channelId stored from wreg
 15375  004966  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15376                           
 15377                           ;lorawan_eu.c: 1011: uint8_t i;
 15378                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15379  004968  0E07               	movlw	7
 15380  00496A  0102               	movlb	2	; () banked
 15381  00496C  6FEB               	movwf	(_loRa+235)& (0+255),b
 15382                           
 15383                           ; BSR set to: 2
 15384                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15385  00496E  6BEC               	clrf	(_loRa+236)& (0+255),b
 15386                           
 15387                           ; BSR set to: 2
 15388                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15389  004970  0100               	movlb	0	; () banked
 15390  004972  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15391  004974  0D0E               	mullw	14
 15392  004976  0E05               	movlw	low (_Channels+5)
 15393  004978  24F3               	addwf	prodl,w,c
 15394  00497A  6ED9               	movwf	fsr2l,c
 15395  00497C  0E04               	movlw	high (_Channels+5)
 15396  00497E  20F4               	addwfc	prodh,w,c
 15397  004980  6EDA               	movwf	fsr2h,c
 15398  004982  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15399                           
 15400                           ; BSR set to: 0
 15401                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15402  004986  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15403  004988  0D0E               	mullw	14
 15404  00498A  0E0D               	movlw	low (_Channels+13)
 15405  00498C  24F3               	addwf	prodl,w,c
 15406  00498E  6ED9               	movwf	fsr2l,c
 15407  004990  0E04               	movlw	high (_Channels+13)
 15408  004992  20F4               	addwfc	prodh,w,c
 15409  004994  6EDA               	movwf	fsr2h,c
 15410  004996  0E00               	movlw	0
 15411  004998  82DB               	bsf	plusw2,1,c
 15412                           
 15413                           ; BSR set to: 0
 15414                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15415  00499A  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15416  00499C  D04E               	goto	l12865
 15417  00499E                     l12853:
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;lorawan_eu.c: 1020: {
 15421                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15422  00499E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15423  0049A0  0D0E               	mullw	14
 15424  0049A2  0E05               	movlw	low (_Channels+5)
 15425  0049A4  24F3               	addwf	prodl,w,c
 15426  0049A6  6ED9               	movwf	fsr2l,c
 15427  0049A8  0E04               	movlw	high (_Channels+5)
 15428  0049AA  20F4               	addwfc	prodh,w,c
 15429  0049AC  6EDA               	movwf	fsr2h,c
 15430  0049AE  50DF               	movf	223,w,c
 15431  0049B0  0B0F               	andlw	15
 15432  0049B2  0100               	movlb	0	; () banked
 15433  0049B4  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15434  0049B6  0102               	movlb	2	; () banked
 15435  0049B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 15436  0049BA  0100               	movlb	0	; () banked
 15437  0049BC  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15438  0049BE  E216               	bc	l1204
 15439                           
 15440                           ; BSR set to: 0
 15441  0049C0  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15442  0049C2  0D0E               	mullw	14
 15443  0049C4  0E04               	movlw	low (_Channels+4)
 15444  0049C6  24F3               	addwf	prodl,w,c
 15445  0049C8  6ED9               	movwf	fsr2l,c
 15446  0049CA  0E04               	movlw	high (_Channels+4)
 15447  0049CC  20F4               	addwfc	prodh,w,c
 15448  0049CE  6EDA               	movwf	fsr2h,c
 15449  0049D0  04DE               	decf	postinc2,w,c
 15450  0049D2  E10C               	bnz	l1204
 15451                           
 15452                           ; BSR set to: 0
 15453                           ;lorawan_eu.c: 1022: {
 15454                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15455  0049D4  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15456  0049D6  0D0E               	mullw	14
 15457  0049D8  0E05               	movlw	low (_Channels+5)
 15458  0049DA  24F3               	addwf	prodl,w,c
 15459  0049DC  6ED9               	movwf	fsr2l,c
 15460  0049DE  0E04               	movlw	high (_Channels+5)
 15461  0049E0  20F4               	addwfc	prodh,w,c
 15462  0049E2  6EDA               	movwf	fsr2h,c
 15463  0049E4  50DF               	movf	223,w,c
 15464  0049E6  0B0F               	andlw	15
 15465  0049E8  0102               	movlb	2	; () banked
 15466  0049EA  6FEB               	movwf	(_loRa+235)& (0+255),b
 15467  0049EC                     l1204:
 15468                           
 15469                           ;lorawan_eu.c: 1024: }
 15470                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15471  0049EC  0100               	movlb	0	; () banked
 15472  0049EE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15473  0049F0  0D0E               	mullw	14
 15474  0049F2  0E05               	movlw	low (_Channels+5)
 15475  0049F4  24F3               	addwf	prodl,w,c
 15476  0049F6  6ED9               	movwf	fsr2l,c
 15477  0049F8  0E04               	movlw	high (_Channels+5)
 15478  0049FA  20F4               	addwfc	prodh,w,c
 15479  0049FC  6EDA               	movwf	fsr2h,c
 15480  0049FE  38DF               	swapf	223,w,c
 15481  004A00  0B0F               	andlw	15
 15482  004A02  0102               	movlb	2	; () banked
 15483  004A04  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15484  004A06  D017               	goto	l12863
 15485                           
 15486                           ; BSR set to: 2
 15487  004A08  0100               	movlb	0	; () banked
 15488  004A0A  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15489  004A0C  0D0E               	mullw	14
 15490  004A0E  0E04               	movlw	low (_Channels+4)
 15491  004A10  24F3               	addwf	prodl,w,c
 15492  004A12  6ED9               	movwf	fsr2l,c
 15493  004A14  0E04               	movlw	high (_Channels+4)
 15494  004A16  20F4               	addwfc	prodh,w,c
 15495  004A18  6EDA               	movwf	fsr2h,c
 15496  004A1A  04DE               	decf	postinc2,w,c
 15497  004A1C  E10C               	bnz	l12863
 15498                           
 15499                           ; BSR set to: 0
 15500                           ;lorawan_eu.c: 1026: {
 15501                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15502  004A1E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15503  004A20  0D0E               	mullw	14
 15504  004A22  0E05               	movlw	low (_Channels+5)
 15505  004A24  24F3               	addwf	prodl,w,c
 15506  004A26  6ED9               	movwf	fsr2l,c
 15507  004A28  0E04               	movlw	high (_Channels+5)
 15508  004A2A  20F4               	addwfc	prodh,w,c
 15509  004A2C  6EDA               	movwf	fsr2h,c
 15510  004A2E  38DF               	swapf	223,w,c
 15511  004A30  0B0F               	andlw	15
 15512  004A32  0102               	movlb	2	; () banked
 15513  004A34  6FEC               	movwf	(_loRa+236)& (0+255),b
 15514  004A36                     l12863:
 15515  004A36  0100               	movlb	0	; () banked
 15516  004A38  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15517  004A3A                     l12865:
 15518                           
 15519                           ; BSR set to: 0
 15520  004A3A  0102               	movlb	2	; () banked
 15521  004A3C  51ED               	movf	(_loRa+237)& (0+255),w,b
 15522  004A3E  0100               	movlb	0	; () banked
 15523  004A40  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15524  004A42  E3AD               	bnc	l12853
 15525                           
 15526                           ; BSR set to: 0
 15527                           ;lorawan_eu.c: 1028: }
 15528                           ;lorawan_eu.c: 1029: }
 15529                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15530  004A44  0102               	movlb	2	; () banked
 15531  004A46  51DF               	movf	(_loRa+223)& (0+255),w,b
 15532  004A48  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15533  004A4A  E202               	bc	l12871
 15534                           
 15535                           ; BSR set to: 2
 15536                           ;lorawan_eu.c: 1032: {
 15537                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15538  004A4C  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15539  004A50                     l12871:
 15540                           
 15541                           ; BSR set to: 2
 15542                           ;lorawan_eu.c: 1034: }
 15543                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15544  004A50  51EB               	movf	(_loRa+235)& (0+255),w,b
 15545  004A52  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15546  004A54  A0D8               	btfss	status,0,c
 15547                           
 15548                           ; BSR set to: 2
 15549                           ;lorawan_eu.c: 1037: {
 15550                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15551  004A56  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15552                           
 15553                           ; BSR set to: 2
 15554  004A5A  0012               	return		;funcret
 15555  004A5C                     __end_of_UpdateDataRange:
 15556                           	opt stack 0
 15557                           tosu	equ	0xFFF
 15558                           tosh	equ	0xFFE
 15559                           tosl	equ	0xFFD
 15560                           pclath	equ	0xFFA
 15561                           tblptru	equ	0xFF8
 15562                           tblptrh	equ	0xFF7
 15563                           tblptrl	equ	0xFF6
 15564                           tablat	equ	0xFF5
 15565                           prodh	equ	0xFF4
 15566                           prodl	equ	0xFF3
 15567                           intcon	equ	0xFF2
 15568                           intcon2	equ	0xFF1
 15569                           intcon3	equ	0xFF0
 15570                           indf0	equ	0xFEF
 15571                           postinc0	equ	0xFEE
 15572                           fsr0h	equ	0xFEA
 15573                           fsr0l	equ	0xFE9
 15574                           wreg	equ	0xFE8
 15575                           postinc1	equ	0xFE6
 15576                           postdec1	equ	0xFE5
 15577                           plusw1	equ	0xFE3
 15578                           fsr1h	equ	0xFE2
 15579                           fsr1l	equ	0xFE1
 15580                           indf2	equ	0xFDF
 15581                           postinc2	equ	0xFDE
 15582                           postdec2	equ	0xFDD
 15583                           plusw2	equ	0xFDB
 15584                           fsr2h	equ	0xFDA
 15585                           fsr2l	equ	0xFD9
 15586                           status	equ	0xFD8
 15587                           
 15588 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15589 ;; Defined at:
 15590 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;  channelId       1    wreg     unsigned char 
 15593 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;  channelId       1   10[BANK0 ] unsigned char 
 15596 ;;  result          1    0        enum E8016
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      enum E8016
 15599 ;; Registers used:
 15600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15601 ;; Tracked objects:
 15602 ;;		On entry : F/0
 15603 ;;		On exit  : D/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15606 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15607 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15609 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15610 ;;Total ram usage:        3 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; Hardware stack levels required when called:    8
 15613 ;; This function calls:
 15614 ;;		_UpdateChannelIdStatus
 15615 ;;		_ValidateChannelId
 15616 ;; This function is called by:
 15617 ;;		_ExecuteNewChannel
 15618 ;;		_UpdateCfList
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           	psect	text82
 15623  006EC8                     __ptext82:
 15624                           	opt stack 0
 15625  006EC8                     _LORAWAN_SetChannelIdStatus:
 15626                           	opt stack 17
 15627                           
 15628                           ; BSR set to: 2
 15629                           ;incstack = 0
 15630                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15631  006EC8  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15632                           
 15633                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15634  006ECA  0E01               	movlw	1
 15635  006ECC  0100               	movlb	0	; () banked
 15636  006ECE  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15637  006ED0  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15638  006ED2  EC2D  F03A         	call	_ValidateChannelId
 15639  006ED6  0900               	iorlw	0
 15640  006ED8  E001               	bz	l12881
 15641                           
 15642                           ; BSR set to: 0
 15643                           ;lorawan_eu.c: 290: }
 15644  006EDA  0012               	return	
 15645  006EDC                     l12881:
 15646                           
 15647                           ; BSR set to: 0
 15648                           ;lorawan_eu.c: 292: else
 15649                           ;lorawan_eu.c: 293: {
 15650                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15651  006EDC  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15652  006EDE  0D0E               	mullw	14
 15653  006EE0  0E0D               	movlw	low (_Channels+13)
 15654  006EE2  24F3               	addwf	prodl,w,c
 15655  006EE4  6ED9               	movwf	fsr2l,c
 15656  006EE6  0E04               	movlw	high (_Channels+13)
 15657  006EE8  20F4               	addwfc	prodh,w,c
 15658  006EEA  6EDA               	movwf	fsr2h,c
 15659  006EEC  50DF               	movf	indf2,w,c
 15660  006EEE  0B07               	andlw	7
 15661  006EF0  0A07               	xorlw	7
 15662  006EF2  A4D8               	btfss	status,2,c
 15663  006EF4  0012               	return	
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;lorawan_eu.c: 295: {
 15667                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15668  006EF6  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15669  006EFA  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15670  006EFC  EFAF  F023         	goto	_UpdateChannelIdStatus
 15671  006F00                     __end_of_LORAWAN_SetChannelIdStatus:
 15672                           	opt stack 0
 15673                           tosu	equ	0xFFF
 15674                           tosh	equ	0xFFE
 15675                           tosl	equ	0xFFD
 15676                           pclath	equ	0xFFA
 15677                           tblptru	equ	0xFF8
 15678                           tblptrh	equ	0xFF7
 15679                           tblptrl	equ	0xFF6
 15680                           tablat	equ	0xFF5
 15681                           prodh	equ	0xFF4
 15682                           prodl	equ	0xFF3
 15683                           intcon	equ	0xFF2
 15684                           intcon2	equ	0xFF1
 15685                           intcon3	equ	0xFF0
 15686                           indf0	equ	0xFEF
 15687                           postinc0	equ	0xFEE
 15688                           fsr0h	equ	0xFEA
 15689                           fsr0l	equ	0xFE9
 15690                           wreg	equ	0xFE8
 15691                           postinc1	equ	0xFE6
 15692                           postdec1	equ	0xFE5
 15693                           plusw1	equ	0xFE3
 15694                           fsr1h	equ	0xFE2
 15695                           fsr1l	equ	0xFE1
 15696                           indf2	equ	0xFDF
 15697                           postinc2	equ	0xFDE
 15698                           postdec2	equ	0xFDD
 15699                           plusw2	equ	0xFDB
 15700                           fsr2h	equ	0xFDA
 15701                           fsr2l	equ	0xFD9
 15702                           status	equ	0xFD8
 15703                           
 15704 ;; *************** function _ValidateChannelId *****************
 15705 ;; Defined at:
 15706 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;  channelId       1    wreg     unsigned char 
 15709 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;  channelId       1    6[BANK0 ] unsigned char 
 15712 ;;  result          1    5[BANK0 ] enum E8016
 15713 ;; Return value:  Size  Location     Type
 15714 ;;                  1    wreg      enum E8016
 15715 ;; Registers used:
 15716 ;;		wreg, status,2, status,0
 15717 ;; Tracked objects:
 15718 ;;		On entry : F/0
 15719 ;;		On exit  : F/0
 15720 ;;		Unchanged: 0/0
 15721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15722 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15726 ;;Total ram usage:        3 bytes
 15727 ;; Hardware stack levels used:    1
 15728 ;; Hardware stack levels required when called:    7
 15729 ;; This function calls:
 15730 ;;		Nothing
 15731 ;; This function is called by:
 15732 ;;		_LORAWAN_SetChannelIdStatus
 15733 ;;		_ExecuteNewChannel
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737                           	psect	text83
 15738  00745A                     __ptext83:
 15739                           	opt stack 0
 15740  00745A                     _ValidateChannelId:
 15741                           	opt stack 17
 15742                           
 15743                           ;incstack = 0
 15744                           ;ValidateChannelId@channelId stored from wreg
 15745  00745A  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15746                           
 15747                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15748  00745C  0100               	movlb	0	; () banked
 15749  00745E  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15750                           
 15751                           ; BSR set to: 0
 15752                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15753  007460  0E10               	movlw	16
 15754  007462  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15755  007464  D005               	goto	l12619
 15756                           
 15757                           ; BSR set to: 0
 15758  007466  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15759  007468  E105               	bnz	l1244
 15760                           
 15761                           ; BSR set to: 0
 15762  00746A  0E03               	movlw	3
 15763  00746C  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15764  00746E  D002               	goto	l1244
 15765  007470                     l12619:
 15766                           
 15767                           ; BSR set to: 0
 15768                           ;lorawan_eu.c: 1130: {
 15769                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15770  007470  0E03               	movlw	3
 15771  007472  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15772  007474                     l1244:
 15773                           
 15774                           ; BSR set to: 0
 15775                           ;lorawan_eu.c: 1132: }
 15776                           ;lorawan_eu.c: 1134: return result;
 15777  007474  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15778                           
 15779                           ; BSR set to: 0
 15780  007476  0012               	return		;funcret
 15781  007478                     __end_of_ValidateChannelId:
 15782                           	opt stack 0
 15783                           tosu	equ	0xFFF
 15784                           tosh	equ	0xFFE
 15785                           tosl	equ	0xFFD
 15786                           pclath	equ	0xFFA
 15787                           tblptru	equ	0xFF8
 15788                           tblptrh	equ	0xFF7
 15789                           tblptrl	equ	0xFF6
 15790                           tablat	equ	0xFF5
 15791                           prodh	equ	0xFF4
 15792                           prodl	equ	0xFF3
 15793                           intcon	equ	0xFF2
 15794                           intcon2	equ	0xFF1
 15795                           intcon3	equ	0xFF0
 15796                           indf0	equ	0xFEF
 15797                           postinc0	equ	0xFEE
 15798                           fsr0h	equ	0xFEA
 15799                           fsr0l	equ	0xFE9
 15800                           wreg	equ	0xFE8
 15801                           postinc1	equ	0xFE6
 15802                           postdec1	equ	0xFE5
 15803                           plusw1	equ	0xFE3
 15804                           fsr1h	equ	0xFE2
 15805                           fsr1l	equ	0xFE1
 15806                           indf2	equ	0xFDF
 15807                           postinc2	equ	0xFDE
 15808                           postdec2	equ	0xFDD
 15809                           plusw2	equ	0xFDB
 15810                           fsr2h	equ	0xFDA
 15811                           fsr2l	equ	0xFD9
 15812                           status	equ	0xFD8
 15813                           
 15814 ;; *************** function _ExecuteLinkCheck *****************
 15815 ;; Defined at:
 15816 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15817 ;; Parameters:    Size  Location     Type
 15818 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15819 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15820 ;; Auto vars:     Size  Location     Type
 15821 ;;		None
 15822 ;; Return value:  Size  Location     Type
 15823 ;;                  2    4[BANK0 ] PTR unsigned char 
 15824 ;; Registers used:
 15825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15826 ;; Tracked objects:
 15827 ;;		On entry : F/0
 15828 ;;		On exit  : F/0
 15829 ;;		Unchanged: 0/0
 15830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15835 ;;Total ram usage:        2 bytes
 15836 ;; Hardware stack levels used:    1
 15837 ;; Hardware stack levels required when called:    7
 15838 ;; This function calls:
 15839 ;;		Nothing
 15840 ;; This function is called by:
 15841 ;;		_MacExecuteCommands
 15842 ;; This function uses a non-reentrant model
 15843 ;;
 15844                           
 15845                           	psect	text84
 15846  00703E                     __ptext84:
 15847                           	opt stack 0
 15848  00703E                     _ExecuteLinkCheck:
 15849                           	opt stack 18
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15853                           
 15854                           ; BSR set to: 0
 15855                           ;incstack = 0
 15856  00703E  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15857  007042  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15858  007046  50DF               	movf	indf2,w,c
 15859  007048  0102               	movlb	2	; () banked
 15860  00704A  6FDD               	movwf	(_loRa+221)& (0+255),b
 15861                           
 15862                           ; BSR set to: 2
 15863  00704C  0100               	movlb	0	; () banked
 15864  00704E  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15865  007050  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15869  007052  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15870  007056  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15871  00705A  50DF               	movf	indf2,w,c
 15872  00705C  0102               	movlb	2	; () banked
 15873  00705E  6FDE               	movwf	(_loRa+222)& (0+255),b
 15874  007060  0100               	movlb	0	; () banked
 15875  007062  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15876  007064  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;lorawan.c: 1656: return ptr;
 15880  007066  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15881  00706A  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15882                           
 15883                           ; BSR set to: 0
 15884  00706E  0012               	return		;funcret
 15885  007070                     __end_of_ExecuteLinkCheck:
 15886                           	opt stack 0
 15887                           tosu	equ	0xFFF
 15888                           tosh	equ	0xFFE
 15889                           tosl	equ	0xFFD
 15890                           pclath	equ	0xFFA
 15891                           tblptru	equ	0xFF8
 15892                           tblptrh	equ	0xFF7
 15893                           tblptrl	equ	0xFF6
 15894                           tablat	equ	0xFF5
 15895                           prodh	equ	0xFF4
 15896                           prodl	equ	0xFF3
 15897                           intcon	equ	0xFF2
 15898                           intcon2	equ	0xFF1
 15899                           intcon3	equ	0xFF0
 15900                           indf0	equ	0xFEF
 15901                           postinc0	equ	0xFEE
 15902                           fsr0h	equ	0xFEA
 15903                           fsr0l	equ	0xFE9
 15904                           wreg	equ	0xFE8
 15905                           postinc1	equ	0xFE6
 15906                           postdec1	equ	0xFE5
 15907                           plusw1	equ	0xFE3
 15908                           fsr1h	equ	0xFE2
 15909                           fsr1l	equ	0xFE1
 15910                           indf2	equ	0xFDF
 15911                           postinc2	equ	0xFDE
 15912                           postdec2	equ	0xFDD
 15913                           plusw2	equ	0xFDB
 15914                           fsr2h	equ	0xFDA
 15915                           fsr2l	equ	0xFD9
 15916                           status	equ	0xFD8
 15917                           
 15918 ;; *************** function _ExecuteLinkAdr *****************
 15919 ;; Defined at:
 15920 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15921 ;; Parameters:    Size  Location     Type
 15922 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15923 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15926 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15927 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15928 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15929 ;;  txPower         1   22[BANK0 ] unsigned char 
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  2   17[BANK0 ] PTR unsigned char 
 15932 ;; Registers used:
 15933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15934 ;; Tracked objects:
 15935 ;;		On entry : F/0
 15936 ;;		On exit  : F/2
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15940 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15942 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15943 ;;Total ram usage:        9 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:   10
 15946 ;; This function calls:
 15947 ;;		_EnableChannels
 15948 ;;		_UpdateCurrentDataRate
 15949 ;;		_UpdateTxPower
 15950 ;;		_ValidateChannelMask
 15951 ;;		_ValidateChannelMaskCntl
 15952 ;;		_ValidateDataRate
 15953 ;;		_ValidateTxPower
 15954 ;; This function is called by:
 15955 ;;		_MacExecuteCommands
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959                           	psect	text85
 15960  00351E                     __ptext85:
 15961                           	opt stack 0
 15962  00351E                     _ExecuteLinkAdr:
 15963                           	opt stack 15
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15967                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15968                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;incstack = 0
 15972  00351E  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15973  003522  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15974  003526  50DF               	movf	indf2,w,c
 15975  003528  0B0F               	andlw	15
 15976  00352A  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15977                           
 15978                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15979  00352C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15980  003530  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15981  003534  50DF               	movf	indf2,w,c
 15982  003536  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15983  003538  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15984  00353A  0B0F               	andlw	15
 15985  00353C  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15986                           
 15987                           ; BSR set to: 0
 15988                           ;lorawan_eu.c: 620: ptr++;
 15989  00353E  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15990  003540  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15991                           
 15992                           ; BSR set to: 0
 15993                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15994  003542  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15995  003546  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15996  00354A  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15997  00354E  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 16001  003552  0E02               	movlw	2
 16002  003554  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 16003  003556  0E00               	movlw	0
 16004  003558  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16005                           
 16006                           ; BSR set to: 0
 16007                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 16008                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 16009  00355A  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16010  00355E  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16011                           
 16012                           ; BSR set to: 0
 16013  003562  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16014  003564  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16015                           
 16016                           ; BSR set to: 0
 16017                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 16018  003566  0102               	movlb	2	; () banked
 16019  003568  AD02               	btfss	(_loRa+2)& (0+255),6,b
 16020  00356A  D092               	goto	l13521
 16021                           
 16022                           ; BSR set to: 2
 16023                           ;lorawan_eu.c: 627: {
 16024                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 16025  00356C  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16026  003570  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16027  003574  0100               	movlb	0	; () banked
 16028  003576  38DF               	swapf	223,w,c
 16029  003578  0B07               	andlw	7
 16030  00357A  EC3D  F03B         	call	_ValidateChannelMaskCntl
 16031  00357E  0900               	iorlw	0
 16032  003580  E112               	bnz	l13489
 16033                           
 16034                           ; BSR set to: 0
 16035  003582  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 16036  003586  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 16037  00358A  EC80  F037         	call	_ValidateChannelMask	;wreg free
 16038  00358E  0900               	iorlw	0
 16039  003590  E10A               	bnz	l13489
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;lorawan_eu.c: 629: {
 16043                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16044  003592  0102               	movlb	2	; () banked
 16045  003594  51A7               	movf	(_loRa+167)& (0+255),w,b
 16046  003596  0D02               	mullw	2
 16047  003598  0EA9               	movlw	low (_loRa+169)
 16048  00359A  24F3               	addwf	prodl,w,c
 16049  00359C  6ED9               	movwf	fsr2l,c
 16050  00359E  0E02               	movlw	high (_loRa+169)
 16051  0035A0  20F4               	addwfc	prodh,w,c
 16052  0035A2  6EDA               	movwf	fsr2h,c
 16053  0035A4  80DF               	bsf	indf2,0,c
 16054  0035A6                     l13489:
 16055                           
 16056                           ;lorawan_eu.c: 631: }
 16057                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16058  0035A6  0100               	movlb	0	; () banked
 16059  0035A8  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16060  0035AA  EC69  F03B         	call	_ValidateDataRate
 16061  0035AE  0900               	iorlw	0
 16062  0035B0  E112               	bnz	l13497
 16063                           
 16064                           ; BSR set to: 0
 16065  0035B2  0102               	movlb	2	; () banked
 16066  0035B4  51EB               	movf	(_loRa+235)& (0+255),w,b
 16067  0035B6  0100               	movlb	0	; () banked
 16068  0035B8  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16069  0035BA  E30D               	bnc	l13497
 16070                           
 16071                           ; BSR set to: 0
 16072  0035BC  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16073  0035BE  0102               	movlb	2	; () banked
 16074  0035C0  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16075  0035C2  E309               	bnc	l13497
 16076                           
 16077                           ; BSR set to: 2
 16078                           ;lorawan_eu.c: 634: {
 16079                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16080  0035C4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16081  0035C6  0D02               	mullw	2
 16082  0035C8  0EA9               	movlw	low (_loRa+169)
 16083  0035CA  24F3               	addwf	prodl,w,c
 16084  0035CC  6ED9               	movwf	fsr2l,c
 16085  0035CE  0E02               	movlw	high (_loRa+169)
 16086  0035D0  20F4               	addwfc	prodh,w,c
 16087  0035D2  6EDA               	movwf	fsr2h,c
 16088  0035D4  82DF               	bsf	indf2,1,c
 16089  0035D6                     l13497:
 16090                           
 16091                           ;lorawan_eu.c: 636: }
 16092                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16093  0035D6  0100               	movlb	0	; () banked
 16094  0035D8  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16095  0035DA  ECAB  F039         	call	_ValidateTxPower
 16096  0035DE  0900               	iorlw	0
 16097  0035E0  E10A               	bnz	l1099
 16098                           
 16099                           ; BSR set to: 0
 16100                           ;lorawan_eu.c: 639: {
 16101                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16102  0035E2  0102               	movlb	2	; () banked
 16103  0035E4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16104  0035E6  0D02               	mullw	2
 16105  0035E8  0EA9               	movlw	low (_loRa+169)
 16106  0035EA  24F3               	addwf	prodl,w,c
 16107  0035EC  6ED9               	movwf	fsr2l,c
 16108  0035EE  0E02               	movlw	high (_loRa+169)
 16109  0035F0  20F4               	addwfc	prodh,w,c
 16110  0035F2  6EDA               	movwf	fsr2h,c
 16111  0035F4  84DF               	bsf	indf2,2,c
 16112  0035F6                     l1099:
 16113                           
 16114                           ;lorawan_eu.c: 641: }
 16115                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16116  0035F6  0102               	movlb	2	; () banked
 16117  0035F8  51A7               	movf	(_loRa+167)& (0+255),w,b
 16118  0035FA  0D02               	mullw	2
 16119  0035FC  0EA9               	movlw	low (_loRa+169)
 16120  0035FE  24F3               	addwf	prodl,w,c
 16121  003600  6ED9               	movwf	fsr2l,c
 16122  003602  0E02               	movlw	high (_loRa+169)
 16123  003604  20F4               	addwfc	prodh,w,c
 16124  003606  6EDA               	movwf	fsr2h,c
 16125  003608  A4DF               	btfss	indf2,2,c
 16126  00360A  D05D               	goto	l13523
 16127                           
 16128                           ; BSR set to: 2
 16129  00360C  51A7               	movf	(_loRa+167)& (0+255),w,b
 16130  00360E  0D02               	mullw	2
 16131  003610  0EA9               	movlw	low (_loRa+169)
 16132  003612  24F3               	addwf	prodl,w,c
 16133  003614  6ED9               	movwf	fsr2l,c
 16134  003616  0E02               	movlw	high (_loRa+169)
 16135  003618  20F4               	addwfc	prodh,w,c
 16136  00361A  6EDA               	movwf	fsr2h,c
 16137  00361C  A2DF               	btfss	indf2,1,c
 16138  00361E  D053               	goto	l13523
 16139                           
 16140                           ; BSR set to: 2
 16141  003620  51A7               	movf	(_loRa+167)& (0+255),w,b
 16142  003622  0D02               	mullw	2
 16143  003624  0EA9               	movlw	low (_loRa+169)
 16144  003626  24F3               	addwf	prodl,w,c
 16145  003628  6ED9               	movwf	fsr2l,c
 16146  00362A  0E02               	movlw	high (_loRa+169)
 16147  00362C  20F4               	addwfc	prodh,w,c
 16148  00362E  6EDA               	movwf	fsr2h,c
 16149  003630  A0DF               	btfss	indf2,0,c
 16150  003632  D049               	goto	l13523
 16151                           
 16152                           ; BSR set to: 2
 16153                           ;lorawan_eu.c: 644: {
 16154                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16155  003634  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16156  003638  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16157  00363C  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16158  003640  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16159  003644  0100               	movlb	0	; () banked
 16160  003646  38DF               	swapf	223,w,c
 16161  003648  0B07               	andlw	7
 16162  00364A  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16163  00364C  EC54  F03B         	call	_EnableChannels	;wreg free
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16167  003650  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16168  003652  EC42  F03C         	call	_UpdateTxPower
 16169                           
 16170                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16171  003656  0102               	movlb	2	; () banked
 16172  003658  8903               	bsf	(_loRa+3)& (0+255),4,b
 16173                           
 16174                           ; BSR set to: 2
 16175                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16176  00365A  0100               	movlb	0	; () banked
 16177  00365C  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16178  00365E  EC46  F03C         	call	_UpdateCurrentDataRate
 16179                           
 16180                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16181  003662  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16182  003666  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16183  00366A  0100               	movlb	0	; () banked
 16184  00366C  50DF               	movf	223,w,c
 16185  00366E  0B0F               	andlw	15
 16186  003670  E103               	bnz	l13517
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;lorawan_eu.c: 652: {
 16190                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16191  003672  0102               	movlb	2	; () banked
 16192  003674  6BD6               	clrf	(_loRa+214)& (0+255),b
 16193                           
 16194                           ;lorawan_eu.c: 654: }
 16195  003676  D00A               	goto	l13519
 16196  003678                     l13517:
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;lorawan_eu.c: 655: else
 16200                           ;lorawan_eu.c: 656: {
 16201                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16202  003678  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16203  00367C  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16204  003680  50DF               	movf	223,w,c
 16205  003682  0B0F               	andlw	15
 16206  003684  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16207  003686  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16208  003688  0102               	movlb	2	; () banked
 16209  00368A  6FD6               	movwf	(_loRa+214)& (0+255),b
 16210  00368C                     l13519:
 16211                           
 16212                           ; BSR set to: 2
 16213                           ;lorawan_eu.c: 658: }
 16214                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16215  00368C  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16216  00368E  D01B               	goto	l13523
 16217  003690                     l13521:
 16218                           
 16219                           ; BSR set to: 2
 16220                           ;lorawan_eu.c: 662: else
 16221                           ;lorawan_eu.c: 663: {
 16222                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16223  003690  51A7               	movf	(_loRa+167)& (0+255),w,b
 16224  003692  0D02               	mullw	2
 16225  003694  0EA9               	movlw	low (_loRa+169)
 16226  003696  24F3               	addwf	prodl,w,c
 16227  003698  6ED9               	movwf	fsr2l,c
 16228  00369A  0E02               	movlw	high (_loRa+169)
 16229  00369C  20F4               	addwfc	prodh,w,c
 16230  00369E  6EDA               	movwf	fsr2h,c
 16231  0036A0  90DF               	bcf	indf2,0,c
 16232                           
 16233                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16234  0036A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16235  0036A4  0D02               	mullw	2
 16236  0036A6  0EA9               	movlw	low (_loRa+169)
 16237  0036A8  24F3               	addwf	prodl,w,c
 16238  0036AA  6ED9               	movwf	fsr2l,c
 16239  0036AC  0E02               	movlw	high (_loRa+169)
 16240  0036AE  20F4               	addwfc	prodh,w,c
 16241  0036B0  6EDA               	movwf	fsr2h,c
 16242  0036B2  92DF               	bcf	indf2,1,c
 16243                           
 16244                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16245  0036B4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16246  0036B6  0D02               	mullw	2
 16247  0036B8  0EA9               	movlw	low (_loRa+169)
 16248  0036BA  24F3               	addwf	prodl,w,c
 16249  0036BC  6ED9               	movwf	fsr2l,c
 16250  0036BE  0E02               	movlw	high (_loRa+169)
 16251  0036C0  20F4               	addwfc	prodh,w,c
 16252  0036C2  6EDA               	movwf	fsr2h,c
 16253  0036C4  94DF               	bcf	indf2,2,c
 16254  0036C6                     l13523:
 16255                           
 16256                           ; BSR set to: 2
 16257                           ;lorawan_eu.c: 667: }
 16258                           ;lorawan_eu.c: 669: return ptr;
 16259  0036C6  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16260  0036CA  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16261                           
 16262                           ; BSR set to: 2
 16263  0036CE  0012               	return		;funcret
 16264  0036D0                     __end_of_ExecuteLinkAdr:
 16265                           	opt stack 0
 16266                           tosu	equ	0xFFF
 16267                           tosh	equ	0xFFE
 16268                           tosl	equ	0xFFD
 16269                           pclath	equ	0xFFA
 16270                           tblptru	equ	0xFF8
 16271                           tblptrh	equ	0xFF7
 16272                           tblptrl	equ	0xFF6
 16273                           tablat	equ	0xFF5
 16274                           prodh	equ	0xFF4
 16275                           prodl	equ	0xFF3
 16276                           intcon	equ	0xFF2
 16277                           intcon2	equ	0xFF1
 16278                           intcon3	equ	0xFF0
 16279                           indf0	equ	0xFEF
 16280                           postinc0	equ	0xFEE
 16281                           fsr0h	equ	0xFEA
 16282                           fsr0l	equ	0xFE9
 16283                           wreg	equ	0xFE8
 16284                           postinc1	equ	0xFE6
 16285                           postdec1	equ	0xFE5
 16286                           plusw1	equ	0xFE3
 16287                           fsr1h	equ	0xFE2
 16288                           fsr1l	equ	0xFE1
 16289                           indf2	equ	0xFDF
 16290                           postinc2	equ	0xFDE
 16291                           postdec2	equ	0xFDD
 16292                           plusw2	equ	0xFDB
 16293                           fsr2h	equ	0xFDA
 16294                           fsr2l	equ	0xFD9
 16295                           status	equ	0xFD8
 16296                           
 16297 ;; *************** function _ValidateTxPower *****************
 16298 ;; Defined at:
 16299 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16300 ;; Parameters:    Size  Location     Type
 16301 ;;  txPowerNew      1    wreg     unsigned char 
 16302 ;; Auto vars:     Size  Location     Type
 16303 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16304 ;;  result          1    4[BANK0 ] enum E8016
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      enum E8016
 16307 ;; Registers used:
 16308 ;;		wreg, status,2, status,0
 16309 ;; Tracked objects:
 16310 ;;		On entry : F/0
 16311 ;;		On exit  : F/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16318 ;;Total ram usage:        2 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    7
 16321 ;; This function calls:
 16322 ;;		Nothing
 16323 ;; This function is called by:
 16324 ;;		_ExecuteLinkAdr
 16325 ;; This function uses a non-reentrant model
 16326 ;;
 16327                           
 16328                           	psect	text86
 16329  007356                     __ptext86:
 16330                           	opt stack 0
 16331  007356                     _ValidateTxPower:
 16332                           	opt stack 17
 16333                           
 16334                           ; BSR set to: 2
 16335                           ;incstack = 0
 16336                           ;ValidateTxPower@txPowerNew stored from wreg
 16337  007356  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16338                           
 16339                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16340  007358  0100               	movlb	0	; () banked
 16341  00735A  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16345  00735C  0102               	movlb	2	; () banked
 16346  00735E  51A4               	movf	(_loRa+164)& (0+255),w,b
 16347  007360  E103               	bnz	l12907
 16348                           
 16349                           ; BSR set to: 2
 16350  007362  0100               	movlb	0	; () banked
 16351  007364  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16352  007366  E004               	bz	l12909
 16353  007368                     l12907:
 16354  007368  0E05               	movlw	5
 16355  00736A  0100               	movlb	0	; () banked
 16356  00736C  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16357  00736E  D002               	goto	l1083
 16358  007370                     l12909:
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;lorawan_eu.c: 587: {
 16362                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16363  007370  0E03               	movlw	3
 16364  007372  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16365  007374                     l1083:
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;lorawan_eu.c: 589: }
 16369                           ;lorawan_eu.c: 591: return result;
 16370  007374  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16371                           
 16372                           ; BSR set to: 0
 16373  007376  0012               	return		;funcret
 16374  007378                     __end_of_ValidateTxPower:
 16375                           	opt stack 0
 16376                           tosu	equ	0xFFF
 16377                           tosh	equ	0xFFE
 16378                           tosl	equ	0xFFD
 16379                           pclath	equ	0xFFA
 16380                           tblptru	equ	0xFF8
 16381                           tblptrh	equ	0xFF7
 16382                           tblptrl	equ	0xFF6
 16383                           tablat	equ	0xFF5
 16384                           prodh	equ	0xFF4
 16385                           prodl	equ	0xFF3
 16386                           intcon	equ	0xFF2
 16387                           intcon2	equ	0xFF1
 16388                           intcon3	equ	0xFF0
 16389                           indf0	equ	0xFEF
 16390                           postinc0	equ	0xFEE
 16391                           fsr0h	equ	0xFEA
 16392                           fsr0l	equ	0xFE9
 16393                           wreg	equ	0xFE8
 16394                           postinc1	equ	0xFE6
 16395                           postdec1	equ	0xFE5
 16396                           plusw1	equ	0xFE3
 16397                           fsr1h	equ	0xFE2
 16398                           fsr1l	equ	0xFE1
 16399                           indf2	equ	0xFDF
 16400                           postinc2	equ	0xFDE
 16401                           postdec2	equ	0xFDD
 16402                           plusw2	equ	0xFDB
 16403                           fsr2h	equ	0xFDA
 16404                           fsr2l	equ	0xFD9
 16405                           status	equ	0xFD8
 16406                           
 16407 ;; *************** function _ValidateDataRate *****************
 16408 ;; Defined at:
 16409 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;  dataRate        1    wreg     unsigned char 
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;  dataRate        1    4[BANK0 ] unsigned char 
 16414 ;;  result          1    5[BANK0 ] enum E8016
 16415 ;; Return value:  Size  Location     Type
 16416 ;;                  1    wreg      enum E8016
 16417 ;; Registers used:
 16418 ;;		wreg, status,2, status,0
 16419 ;; Tracked objects:
 16420 ;;		On entry : F/0
 16421 ;;		On exit  : F/0
 16422 ;;		Unchanged: 0/0
 16423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16428 ;;Total ram usage:        2 bytes
 16429 ;; Hardware stack levels used:    1
 16430 ;; Hardware stack levels required when called:    7
 16431 ;; This function calls:
 16432 ;;		Nothing
 16433 ;; This function is called by:
 16434 ;;		_ExecuteLinkAdr
 16435 ;;		_ExecuteRxParamSetupReq
 16436 ;;		_ValidateDataRange
 16437 ;; This function uses a non-reentrant model
 16438 ;;
 16439                           
 16440                           	psect	text87
 16441  0076D2                     __ptext87:
 16442                           	opt stack 0
 16443  0076D2                     _ValidateDataRate:
 16444                           	opt stack 17
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;incstack = 0
 16448                           ;ValidateDataRate@dataRate stored from wreg
 16449  0076D2  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 16450                           
 16451                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 16452  0076D4  0100               	movlb	0	; () banked
 16453  0076D6  6B65               	clrf	ValidateDataRate@result& (0+255),b
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 16457  0076D8  0E07               	movlw	7
 16458  0076DA  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 16459  0076DC  D002               	goto	l1079
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;lorawan_eu.c: 575: {
 16463                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 16464  0076DE  0E03               	movlw	3
 16465  0076E0  6F65               	movwf	ValidateDataRate@result& (0+255),b
 16466  0076E2                     l1079:
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;lorawan_eu.c: 577: }
 16470                           ;lorawan_eu.c: 579: return result;
 16471  0076E2  5165               	movf	ValidateDataRate@result& (0+255),w,b
 16472                           
 16473                           ; BSR set to: 0
 16474  0076E4  0012               	return		;funcret
 16475  0076E6                     __end_of_ValidateDataRate:
 16476                           	opt stack 0
 16477                           tosu	equ	0xFFF
 16478                           tosh	equ	0xFFE
 16479                           tosl	equ	0xFFD
 16480                           pclath	equ	0xFFA
 16481                           tblptru	equ	0xFF8
 16482                           tblptrh	equ	0xFF7
 16483                           tblptrl	equ	0xFF6
 16484                           tablat	equ	0xFF5
 16485                           prodh	equ	0xFF4
 16486                           prodl	equ	0xFF3
 16487                           intcon	equ	0xFF2
 16488                           intcon2	equ	0xFF1
 16489                           intcon3	equ	0xFF0
 16490                           indf0	equ	0xFEF
 16491                           postinc0	equ	0xFEE
 16492                           fsr0h	equ	0xFEA
 16493                           fsr0l	equ	0xFE9
 16494                           wreg	equ	0xFE8
 16495                           postinc1	equ	0xFE6
 16496                           postdec1	equ	0xFE5
 16497                           plusw1	equ	0xFE3
 16498                           fsr1h	equ	0xFE2
 16499                           fsr1l	equ	0xFE1
 16500                           indf2	equ	0xFDF
 16501                           postinc2	equ	0xFDE
 16502                           postdec2	equ	0xFDD
 16503                           plusw2	equ	0xFDB
 16504                           fsr2h	equ	0xFDA
 16505                           fsr2l	equ	0xFD9
 16506                           status	equ	0xFD8
 16507                           
 16508 ;; *************** function _ValidateChannelMaskCntl *****************
 16509 ;; Defined at:
 16510 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16511 ;; Parameters:    Size  Location     Type
 16512 ;;  channelMaskC    1    wreg     unsigned char 
 16513 ;; Auto vars:     Size  Location     Type
 16514 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16515 ;;  result          1    4[BANK0 ] enum E8016
 16516 ;; Return value:  Size  Location     Type
 16517 ;;                  1    wreg      enum E8016
 16518 ;; Registers used:
 16519 ;;		wreg, status,2, status,0
 16520 ;; Tracked objects:
 16521 ;;		On entry : F/0
 16522 ;;		On exit  : F/0
 16523 ;;		Unchanged: 0/0
 16524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16528 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16529 ;;Total ram usage:        2 bytes
 16530 ;; Hardware stack levels used:    1
 16531 ;; Hardware stack levels required when called:    7
 16532 ;; This function calls:
 16533 ;;		Nothing
 16534 ;; This function is called by:
 16535 ;;		_ExecuteLinkAdr
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           	psect	text88
 16540  00767A                     __ptext88:
 16541                           	opt stack 0
 16542  00767A                     _ValidateChannelMaskCntl:
 16543                           	opt stack 17
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;incstack = 0
 16547                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16548  00767A  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16549                           
 16550                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16551  00767C  0100               	movlb	0	; () banked
 16552  00767E  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16556  007680  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16557  007682  E005               	bz	l1250
 16558                           
 16559                           ; BSR set to: 0
 16560  007684  0E06               	movlw	6
 16561  007686  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16562  007688  E002               	bz	l1250
 16563                           
 16564                           ; BSR set to: 0
 16565                           ;lorawan_eu.c: 1142: {
 16566                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16567  00768A  0E03               	movlw	3
 16568  00768C  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16569  00768E                     l1250:
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;lorawan_eu.c: 1144: }
 16573                           ;lorawan_eu.c: 1146: return result;
 16574  00768E  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16575                           
 16576                           ; BSR set to: 0
 16577  007690  0012               	return		;funcret
 16578  007692                     __end_of_ValidateChannelMaskCntl:
 16579                           	opt stack 0
 16580                           tosu	equ	0xFFF
 16581                           tosh	equ	0xFFE
 16582                           tosl	equ	0xFFD
 16583                           pclath	equ	0xFFA
 16584                           tblptru	equ	0xFF8
 16585                           tblptrh	equ	0xFF7
 16586                           tblptrl	equ	0xFF6
 16587                           tablat	equ	0xFF5
 16588                           prodh	equ	0xFF4
 16589                           prodl	equ	0xFF3
 16590                           intcon	equ	0xFF2
 16591                           intcon2	equ	0xFF1
 16592                           intcon3	equ	0xFF0
 16593                           indf0	equ	0xFEF
 16594                           postinc0	equ	0xFEE
 16595                           fsr0h	equ	0xFEA
 16596                           fsr0l	equ	0xFE9
 16597                           wreg	equ	0xFE8
 16598                           postinc1	equ	0xFE6
 16599                           postdec1	equ	0xFE5
 16600                           plusw1	equ	0xFE3
 16601                           fsr1h	equ	0xFE2
 16602                           fsr1l	equ	0xFE1
 16603                           indf2	equ	0xFDF
 16604                           postinc2	equ	0xFDE
 16605                           postdec2	equ	0xFDD
 16606                           plusw2	equ	0xFDB
 16607                           fsr2h	equ	0xFDA
 16608                           fsr2l	equ	0xFD9
 16609                           status	equ	0xFD8
 16610                           
 16611 ;; *************** function _ValidateChannelMask *****************
 16612 ;; Defined at:
 16613 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16614 ;; Parameters:    Size  Location     Type
 16615 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16616 ;; Auto vars:     Size  Location     Type
 16617 ;;  i               1    6[BANK0 ] unsigned char 
 16618 ;; Return value:  Size  Location     Type
 16619 ;;                  1    wreg      enum E8016
 16620 ;; Registers used:
 16621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16622 ;; Tracked objects:
 16623 ;;		On entry : F/0
 16624 ;;		On exit  : F/0
 16625 ;;		Unchanged: 0/0
 16626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16630 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16631 ;;Total ram usage:        3 bytes
 16632 ;; Hardware stack levels used:    1
 16633 ;; Hardware stack levels required when called:    7
 16634 ;; This function calls:
 16635 ;;		Nothing
 16636 ;; This function is called by:
 16637 ;;		_ExecuteLinkAdr
 16638 ;; This function uses a non-reentrant model
 16639 ;;
 16640                           
 16641                           	psect	text89
 16642  006F00                     __ptext89:
 16643                           	opt stack 0
 16644  006F00                     _ValidateChannelMask:
 16645                           	opt stack 17
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16649                           
 16650                           ; BSR set to: 0
 16651                           
 16652                           ; BSR set to: 0
 16653                           ;incstack = 0
 16654  006F00  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16655  006F02  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16656  006F04  B4D8               	btfsc	status,2,c
 16657  006F06  0C03               	retlw	3
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;lorawan_eu.c: 1171: {
 16661                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16662  006F08  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16663  006F0A                     l1264:
 16664                           
 16665                           ; BSR set to: 0
 16666                           ;lorawan_eu.c: 1173: {
 16667                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16668  006F0A  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16669  006F0C  D00D               	goto	l12941
 16670                           
 16671                           ; BSR set to: 0
 16672  006F0E  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16673  006F10  0D0E               	mullw	14
 16674  006F12  0E0D               	movlw	low (_Channels+13)
 16675  006F14  24F3               	addwf	prodl,w,c
 16676  006F16  6ED9               	movwf	fsr2l,c
 16677  006F18  0E04               	movlw	high (_Channels+13)
 16678  006F1A  20F4               	addwfc	prodh,w,c
 16679  006F1C  6EDA               	movwf	fsr2h,c
 16680  006F1E  50DF               	movf	indf2,w,c
 16681  006F20  0B07               	andlw	7
 16682  006F22  0A07               	xorlw	7
 16683  006F24  E001               	bz	l12941
 16684                           
 16685                           ; BSR set to: 0
 16686                           ;lorawan_eu.c: 1175: {
 16687                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16688  006F26  0C03               	retlw	3
 16689  006F28                     l12941:
 16690                           
 16691                           ; BSR set to: 0
 16692                           ;lorawan_eu.c: 1178: else
 16693                           ;lorawan_eu.c: 1179: {
 16694                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16695  006F28  90D8               	bcf	status,0,c
 16696  006F2A  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16697  006F2C  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16698                           
 16699                           ; BSR set to: 0
 16700  006F2E  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16701                           
 16702                           ; BSR set to: 0
 16703  006F30  0E0F               	movlw	15
 16704  006F32  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16705  006F34  D7EA               	goto	l1264
 16706  006F36  0C00               	retlw	0
 16707  006F38                     __end_of_ValidateChannelMask:
 16708                           	opt stack 0
 16709                           tosu	equ	0xFFF
 16710                           tosh	equ	0xFFE
 16711                           tosl	equ	0xFFD
 16712                           pclath	equ	0xFFA
 16713                           tblptru	equ	0xFF8
 16714                           tblptrh	equ	0xFF7
 16715                           tblptrl	equ	0xFF6
 16716                           tablat	equ	0xFF5
 16717                           prodh	equ	0xFF4
 16718                           prodl	equ	0xFF3
 16719                           intcon	equ	0xFF2
 16720                           intcon2	equ	0xFF1
 16721                           intcon3	equ	0xFF0
 16722                           indf0	equ	0xFEF
 16723                           postinc0	equ	0xFEE
 16724                           fsr0h	equ	0xFEA
 16725                           fsr0l	equ	0xFE9
 16726                           wreg	equ	0xFE8
 16727                           postinc1	equ	0xFE6
 16728                           postdec1	equ	0xFE5
 16729                           plusw1	equ	0xFE3
 16730                           fsr1h	equ	0xFE2
 16731                           fsr1l	equ	0xFE1
 16732                           indf2	equ	0xFDF
 16733                           postinc2	equ	0xFDE
 16734                           postdec2	equ	0xFDD
 16735                           plusw2	equ	0xFDB
 16736                           fsr2h	equ	0xFDA
 16737                           fsr2l	equ	0xFD9
 16738                           status	equ	0xFD8
 16739                           
 16740 ;; *************** function _UpdateTxPower *****************
 16741 ;; Defined at:
 16742 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16743 ;; Parameters:    Size  Location     Type
 16744 ;;  txPowerNew      1    wreg     unsigned char 
 16745 ;; Auto vars:     Size  Location     Type
 16746 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16747 ;; Return value:  Size  Location     Type
 16748 ;;                  1    wreg      void 
 16749 ;; Registers used:
 16750 ;;		wreg
 16751 ;; Tracked objects:
 16752 ;;		On entry : F/0
 16753 ;;		On exit  : 0/0
 16754 ;;		Unchanged: 0/0
 16755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16759 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16760 ;;Total ram usage:        1 bytes
 16761 ;; Hardware stack levels used:    1
 16762 ;; Hardware stack levels required when called:    7
 16763 ;; This function calls:
 16764 ;;		Nothing
 16765 ;; This function is called by:
 16766 ;;		_ExecuteLinkAdr
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           	psect	text90
 16771  007884                     __ptext90:
 16772                           	opt stack 0
 16773  007884                     _UpdateTxPower:
 16774                           	opt stack 17
 16775                           
 16776                           ; BSR set to: 0
 16777                           ;incstack = 0
 16778                           ;UpdateTxPower@txPowerNew stored from wreg
 16779  007884  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16780                           
 16781                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16782  007886  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16783  00788A  0012               	return		;funcret
 16784  00788C                     __end_of_UpdateTxPower:
 16785                           	opt stack 0
 16786                           tosu	equ	0xFFF
 16787                           tosh	equ	0xFFE
 16788                           tosl	equ	0xFFD
 16789                           pclath	equ	0xFFA
 16790                           tblptru	equ	0xFF8
 16791                           tblptrh	equ	0xFF7
 16792                           tblptrl	equ	0xFF6
 16793                           tablat	equ	0xFF5
 16794                           prodh	equ	0xFF4
 16795                           prodl	equ	0xFF3
 16796                           intcon	equ	0xFF2
 16797                           intcon2	equ	0xFF1
 16798                           intcon3	equ	0xFF0
 16799                           indf0	equ	0xFEF
 16800                           postinc0	equ	0xFEE
 16801                           fsr0h	equ	0xFEA
 16802                           fsr0l	equ	0xFE9
 16803                           wreg	equ	0xFE8
 16804                           postinc1	equ	0xFE6
 16805                           postdec1	equ	0xFE5
 16806                           plusw1	equ	0xFE3
 16807                           fsr1h	equ	0xFE2
 16808                           fsr1l	equ	0xFE1
 16809                           indf2	equ	0xFDF
 16810                           postinc2	equ	0xFDE
 16811                           postdec2	equ	0xFDD
 16812                           plusw2	equ	0xFDB
 16813                           fsr2h	equ	0xFDA
 16814                           fsr2l	equ	0xFD9
 16815                           status	equ	0xFD8
 16816                           
 16817 ;; *************** function _UpdateCurrentDataRate *****************
 16818 ;; Defined at:
 16819 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;  valueNew        1    wreg     unsigned char 
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;  valueNew        1    4[BANK0 ] unsigned char 
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		wreg
 16828 ;; Tracked objects:
 16829 ;;		On entry : F/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16837 ;;Total ram usage:        1 bytes
 16838 ;; Hardware stack levels used:    1
 16839 ;; Hardware stack levels required when called:    7
 16840 ;; This function calls:
 16841 ;;		Nothing
 16842 ;; This function is called by:
 16843 ;;		_ExecuteLinkAdr
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           	psect	text91
 16848  00788C                     __ptext91:
 16849                           	opt stack 0
 16850  00788C                     _UpdateCurrentDataRate:
 16851                           	opt stack 17
 16852                           
 16853                           ;incstack = 0
 16854                           ;UpdateCurrentDataRate@valueNew stored from wreg
 16855  00788C  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 16856                           
 16857                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 16858  00788E  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 16859  007892  0012               	return		;funcret
 16860  007894                     __end_of_UpdateCurrentDataRate:
 16861                           	opt stack 0
 16862                           tosu	equ	0xFFF
 16863                           tosh	equ	0xFFE
 16864                           tosl	equ	0xFFD
 16865                           pclath	equ	0xFFA
 16866                           tblptru	equ	0xFF8
 16867                           tblptrh	equ	0xFF7
 16868                           tblptrl	equ	0xFF6
 16869                           tablat	equ	0xFF5
 16870                           prodh	equ	0xFF4
 16871                           prodl	equ	0xFF3
 16872                           intcon	equ	0xFF2
 16873                           intcon2	equ	0xFF1
 16874                           intcon3	equ	0xFF0
 16875                           indf0	equ	0xFEF
 16876                           postinc0	equ	0xFEE
 16877                           fsr0h	equ	0xFEA
 16878                           fsr0l	equ	0xFE9
 16879                           wreg	equ	0xFE8
 16880                           postinc1	equ	0xFE6
 16881                           postdec1	equ	0xFE5
 16882                           plusw1	equ	0xFE3
 16883                           fsr1h	equ	0xFE2
 16884                           fsr1l	equ	0xFE1
 16885                           indf2	equ	0xFDF
 16886                           postinc2	equ	0xFDE
 16887                           postdec2	equ	0xFDD
 16888                           plusw2	equ	0xFDB
 16889                           fsr2h	equ	0xFDA
 16890                           fsr2l	equ	0xFD9
 16891                           status	equ	0xFD8
 16892                           
 16893 ;; *************** function _EnableChannels *****************
 16894 ;; Defined at:
 16895 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16896 ;; Parameters:    Size  Location     Type
 16897 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16898 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;		None
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  1    wreg      void 
 16903 ;; Registers used:
 16904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16905 ;; Tracked objects:
 16906 ;;		On entry : F/0
 16907 ;;		On exit  : F/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16910 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16913 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16914 ;;Total ram usage:        3 bytes
 16915 ;; Hardware stack levels used:    1
 16916 ;; Hardware stack levels required when called:    9
 16917 ;; This function calls:
 16918 ;;		_EnableChannels1
 16919 ;; This function is called by:
 16920 ;;		_ExecuteLinkAdr
 16921 ;; This function uses a non-reentrant model
 16922 ;;
 16923                           
 16924                           	psect	text92
 16925  0076A8                     __ptext92:
 16926                           	opt stack 0
 16927  0076A8                     _EnableChannels:
 16928                           	opt stack 15
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16932                           
 16933                           ;incstack = 0
 16934  0076A8  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16935  0076AC  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16936  0076B0  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16937  0076B4  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16938  0076B6  0E10               	movlw	16
 16939  0076B8  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16940  0076BA  EFE3  F033         	goto	_EnableChannels1	;wreg free
 16941  0076BE                     __end_of_EnableChannels:
 16942                           	opt stack 0
 16943                           tosu	equ	0xFFF
 16944                           tosh	equ	0xFFE
 16945                           tosl	equ	0xFFD
 16946                           pclath	equ	0xFFA
 16947                           tblptru	equ	0xFF8
 16948                           tblptrh	equ	0xFF7
 16949                           tblptrl	equ	0xFF6
 16950                           tablat	equ	0xFF5
 16951                           prodh	equ	0xFF4
 16952                           prodl	equ	0xFF3
 16953                           intcon	equ	0xFF2
 16954                           intcon2	equ	0xFF1
 16955                           intcon3	equ	0xFF0
 16956                           indf0	equ	0xFEF
 16957                           postinc0	equ	0xFEE
 16958                           fsr0h	equ	0xFEA
 16959                           fsr0l	equ	0xFE9
 16960                           wreg	equ	0xFE8
 16961                           postinc1	equ	0xFE6
 16962                           postdec1	equ	0xFE5
 16963                           plusw1	equ	0xFE3
 16964                           fsr1h	equ	0xFE2
 16965                           fsr1l	equ	0xFE1
 16966                           indf2	equ	0xFDF
 16967                           postinc2	equ	0xFDE
 16968                           postdec2	equ	0xFDD
 16969                           plusw2	equ	0xFDB
 16970                           fsr2h	equ	0xFDA
 16971                           fsr2l	equ	0xFD9
 16972                           status	equ	0xFD8
 16973                           
 16974 ;; *************** function _EnableChannels1 *****************
 16975 ;; Defined at:
 16976 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16977 ;; Parameters:    Size  Location     Type
 16978 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16979 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16980 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16981 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  i               1   13[BANK0 ] unsigned char 
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  1    wreg      void 
 16986 ;; Registers used:
 16987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16988 ;; Tracked objects:
 16989 ;;		On entry : F/0
 16990 ;;		On exit  : F/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16993 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16997 ;;Total ram usage:        6 bytes
 16998 ;; Hardware stack levels used:    1
 16999 ;; Hardware stack levels required when called:    8
 17000 ;; This function calls:
 17001 ;;		_UpdateChannelIdStatus
 17002 ;; This function is called by:
 17003 ;;		_EnableChannels
 17004 ;; This function uses a non-reentrant model
 17005 ;;
 17006                           
 17007                           	psect	text93
 17008  0067C6                     __ptext93:
 17009                           	opt stack 0
 17010  0067C6                     _EnableChannels1:
 17011                           	opt stack 15
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;lorawan_eu.c: 1195: uint8_t i;
 17015                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;incstack = 0
 17019  0067C6  0E06               	movlw	6
 17020  0067C8  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17021  0067CA  E10E               	bnz	l12651
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;lorawan_eu.c: 1198: {
 17025                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17026  0067CC  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17027  0067D0  D007               	goto	l12649
 17028  0067D2                     l12645:
 17029                           
 17030                           ; BSR set to: 0
 17031                           ;lorawan_eu.c: 1200: {
 17032                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 17033  0067D2  0E01               	movlw	1
 17034  0067D4  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17035  0067D6  516D               	movf	EnableChannels1@i& (0+255),w,b
 17036  0067D8  ECAF  F023         	call	_UpdateChannelIdStatus
 17037                           
 17038                           ; BSR set to: 2
 17039  0067DC  0100               	movlb	0	; () banked
 17040  0067DE  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 17041  0067E0                     l12649:
 17042                           
 17043                           ; BSR set to: 0
 17044  0067E0  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17045  0067E2  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17046  0067E4  E3F6               	bnc	l12645
 17047  0067E6  0012               	return	
 17048  0067E8                     l12651:
 17049                           
 17050                           ; BSR set to: 0
 17051                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 17052  0067E8  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17053  0067EA  A4D8               	btfss	status,2,c
 17054  0067EC  0012               	return	
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;lorawan_eu.c: 1205: {
 17058                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17059  0067EE  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17060  0067F2  D011               	goto	l12663
 17061  0067F4                     l1279:
 17062                           
 17063                           ; BSR set to: 0
 17064                           ;lorawan_eu.c: 1207: {
 17065                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 17066  0067F4  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 17067  0067F6  D006               	goto	l12657
 17068                           
 17069                           ; BSR set to: 0
 17070                           ;lorawan_eu.c: 1209: {
 17071                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 17072  0067F8  0E01               	movlw	1
 17073  0067FA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17074  0067FC  516D               	movf	EnableChannels1@i& (0+255),w,b
 17075  0067FE  ECAF  F023         	call	_UpdateChannelIdStatus
 17076                           
 17077                           ;lorawan_eu.c: 1211: }
 17078  006802  D004               	goto	l12659
 17079  006804                     l12657:
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;lorawan_eu.c: 1212: else
 17083                           ;lorawan_eu.c: 1213: {
 17084                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 17085  006804  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 17086  006806  516D               	movf	EnableChannels1@i& (0+255),w,b
 17087  006808  ECAF  F023         	call	_UpdateChannelIdStatus
 17088  00680C                     l12659:
 17089                           
 17090                           ; BSR set to: 2
 17091                           ;lorawan_eu.c: 1215: }
 17092                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 17093  00680C  0100               	movlb	0	; () banked
 17094  00680E  90D8               	bcf	status,0,c
 17095  006810  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 17096  006812  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 17097                           
 17098                           ; BSR set to: 0
 17099  006814  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 17100  006816                     l12663:
 17101                           
 17102                           ; BSR set to: 0
 17103  006816  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17104  006818  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17105  00681A  E3EC               	bnc	l1279
 17106                           
 17107                           ; BSR set to: 0
 17108  00681C  0012               	return		;funcret
 17109  00681E                     __end_of_EnableChannels1:
 17110                           	opt stack 0
 17111                           tosu	equ	0xFFF
 17112                           tosh	equ	0xFFE
 17113                           tosl	equ	0xFFD
 17114                           pclath	equ	0xFFA
 17115                           tblptru	equ	0xFF8
 17116                           tblptrh	equ	0xFF7
 17117                           tblptrl	equ	0xFF6
 17118                           tablat	equ	0xFF5
 17119                           prodh	equ	0xFF4
 17120                           prodl	equ	0xFF3
 17121                           intcon	equ	0xFF2
 17122                           intcon2	equ	0xFF1
 17123                           intcon3	equ	0xFF0
 17124                           indf0	equ	0xFEF
 17125                           postinc0	equ	0xFEE
 17126                           fsr0h	equ	0xFEA
 17127                           fsr0l	equ	0xFE9
 17128                           wreg	equ	0xFE8
 17129                           postinc1	equ	0xFE6
 17130                           postdec1	equ	0xFE5
 17131                           plusw1	equ	0xFE3
 17132                           fsr1h	equ	0xFE2
 17133                           fsr1l	equ	0xFE1
 17134                           indf2	equ	0xFDF
 17135                           postinc2	equ	0xFDE
 17136                           postdec2	equ	0xFDD
 17137                           plusw2	equ	0xFDB
 17138                           fsr2h	equ	0xFDA
 17139                           fsr2l	equ	0xFD9
 17140                           status	equ	0xFD8
 17141                           
 17142 ;; *************** function _UpdateChannelIdStatus *****************
 17143 ;; Defined at:
 17144 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17145 ;; Parameters:    Size  Location     Type
 17146 ;;  channelId       1    wreg     unsigned char 
 17147 ;;  statusNew       1    4[BANK0 ] unsigned char 
 17148 ;; Auto vars:     Size  Location     Type
 17149 ;;  channelId       1    6[BANK0 ] unsigned char 
 17150 ;;  i               1    7[BANK0 ] unsigned char 
 17151 ;; Return value:  Size  Location     Type
 17152 ;;                  1    wreg      void 
 17153 ;; Registers used:
 17154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17155 ;; Tracked objects:
 17156 ;;		On entry : F/0
 17157 ;;		On exit  : F/2
 17158 ;;		Unchanged: 0/0
 17159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17160 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17161 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17164 ;;Total ram usage:        4 bytes
 17165 ;; Hardware stack levels used:    1
 17166 ;; Hardware stack levels required when called:    7
 17167 ;; This function calls:
 17168 ;;		Nothing
 17169 ;; This function is called by:
 17170 ;;		_LORAWAN_SetChannelIdStatus
 17171 ;;		_ExecuteNewChannel
 17172 ;;		_EnableChannels1
 17173 ;; This function uses a non-reentrant model
 17174 ;;
 17175                           
 17176                           	psect	text94
 17177  00475E                     __ptext94:
 17178                           	opt stack 0
 17179  00475E                     _UpdateChannelIdStatus:
 17180                           	opt stack 17
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;incstack = 0
 17184                           ;UpdateChannelIdStatus@channelId stored from wreg
 17185  00475E  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 17186                           
 17187                           ;lorawan_eu.c: 1044: uint8_t i;
 17188                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17189  004760  0100               	movlb	0	; () banked
 17190  004762  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17191  004764  0D0E               	mullw	14
 17192  004766  0E04               	movlw	low (_Channels+4)
 17193  004768  24F3               	addwf	prodl,w,c
 17194  00476A  6ED9               	movwf	fsr2l,c
 17195  00476C  0E04               	movlw	high (_Channels+4)
 17196  00476E  20F4               	addwfc	prodh,w,c
 17197  004770  6EDA               	movwf	fsr2h,c
 17198  004772  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17199                           
 17200                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17201  004776  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17202  004778  0D0E               	mullw	14
 17203  00477A  0E04               	movlw	low (_Channels+4)
 17204  00477C  24F3               	addwf	prodl,w,c
 17205  00477E  6ED9               	movwf	fsr2l,c
 17206  004780  0E04               	movlw	high (_Channels+4)
 17207  004782  20F4               	addwfc	prodh,w,c
 17208  004784  6EDA               	movwf	fsr2h,c
 17209  004786  50DF               	movf	indf2,w,c
 17210  004788  E10C               	bnz	l12361
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;lorawan_eu.c: 1048: {
 17214                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17215  00478A  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17216  00478C  0D0E               	mullw	14
 17217  00478E  0E08               	movlw	low (_Channels+8)
 17218  004790  24F3               	addwf	prodl,w,c
 17219  004792  6ED9               	movwf	fsr2l,c
 17220  004794  0E04               	movlw	high (_Channels+8)
 17221  004796  20F4               	addwfc	prodh,w,c
 17222  004798  6EDA               	movwf	fsr2h,c
 17223  00479A  6ADE               	clrf	postinc2,c
 17224  00479C  6ADE               	clrf	postinc2,c
 17225  00479E  6ADE               	clrf	postinc2,c
 17226  0047A0  6ADD               	clrf	postdec2,c
 17227  0047A2                     l12361:
 17228                           
 17229                           ; BSR set to: 0
 17230                           ;lorawan_eu.c: 1051: }
 17231                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17232  0047A2  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17233  0047A4  D04E               	goto	l12375
 17234  0047A6                     l12363:
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;lorawan_eu.c: 1054: {
 17238                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17239  0047A6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17240  0047A8  0D0E               	mullw	14
 17241  0047AA  0E05               	movlw	low (_Channels+5)
 17242  0047AC  24F3               	addwf	prodl,w,c
 17243  0047AE  6ED9               	movwf	fsr2l,c
 17244  0047B0  0E04               	movlw	high (_Channels+5)
 17245  0047B2  20F4               	addwfc	prodh,w,c
 17246  0047B4  6EDA               	movwf	fsr2h,c
 17247  0047B6  50DF               	movf	223,w,c
 17248  0047B8  0B0F               	andlw	15
 17249  0047BA  0100               	movlb	0	; () banked
 17250  0047BC  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17251  0047BE  0102               	movlb	2	; () banked
 17252  0047C0  51EB               	movf	(_loRa+235)& (0+255),w,b
 17253  0047C2  0100               	movlb	0	; () banked
 17254  0047C4  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17255  0047C6  E216               	bc	l1215
 17256                           
 17257                           ; BSR set to: 0
 17258  0047C8  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17259  0047CA  0D0E               	mullw	14
 17260  0047CC  0E04               	movlw	low (_Channels+4)
 17261  0047CE  24F3               	addwf	prodl,w,c
 17262  0047D0  6ED9               	movwf	fsr2l,c
 17263  0047D2  0E04               	movlw	high (_Channels+4)
 17264  0047D4  20F4               	addwfc	prodh,w,c
 17265  0047D6  6EDA               	movwf	fsr2h,c
 17266  0047D8  04DE               	decf	postinc2,w,c
 17267  0047DA  E10C               	bnz	l1215
 17268                           
 17269                           ; BSR set to: 0
 17270                           ;lorawan_eu.c: 1056: {
 17271                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17272  0047DC  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17273  0047DE  0D0E               	mullw	14
 17274  0047E0  0E05               	movlw	low (_Channels+5)
 17275  0047E2  24F3               	addwf	prodl,w,c
 17276  0047E4  6ED9               	movwf	fsr2l,c
 17277  0047E6  0E04               	movlw	high (_Channels+5)
 17278  0047E8  20F4               	addwfc	prodh,w,c
 17279  0047EA  6EDA               	movwf	fsr2h,c
 17280  0047EC  50DF               	movf	223,w,c
 17281  0047EE  0B0F               	andlw	15
 17282  0047F0  0102               	movlb	2	; () banked
 17283  0047F2  6FEB               	movwf	(_loRa+235)& (0+255),b
 17284  0047F4                     l1215:
 17285                           
 17286                           ;lorawan_eu.c: 1058: }
 17287                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17288  0047F4  0100               	movlb	0	; () banked
 17289  0047F6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17290  0047F8  0D0E               	mullw	14
 17291  0047FA  0E05               	movlw	low (_Channels+5)
 17292  0047FC  24F3               	addwf	prodl,w,c
 17293  0047FE  6ED9               	movwf	fsr2l,c
 17294  004800  0E04               	movlw	high (_Channels+5)
 17295  004802  20F4               	addwfc	prodh,w,c
 17296  004804  6EDA               	movwf	fsr2h,c
 17297  004806  38DF               	swapf	223,w,c
 17298  004808  0B0F               	andlw	15
 17299  00480A  0102               	movlb	2	; () banked
 17300  00480C  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17301  00480E  D017               	goto	l12373
 17302                           
 17303                           ; BSR set to: 2
 17304  004810  0100               	movlb	0	; () banked
 17305  004812  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17306  004814  0D0E               	mullw	14
 17307  004816  0E04               	movlw	low (_Channels+4)
 17308  004818  24F3               	addwf	prodl,w,c
 17309  00481A  6ED9               	movwf	fsr2l,c
 17310  00481C  0E04               	movlw	high (_Channels+4)
 17311  00481E  20F4               	addwfc	prodh,w,c
 17312  004820  6EDA               	movwf	fsr2h,c
 17313  004822  04DE               	decf	postinc2,w,c
 17314  004824  E10C               	bnz	l12373
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;lorawan_eu.c: 1060: {
 17318                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17319  004826  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17320  004828  0D0E               	mullw	14
 17321  00482A  0E05               	movlw	low (_Channels+5)
 17322  00482C  24F3               	addwf	prodl,w,c
 17323  00482E  6ED9               	movwf	fsr2l,c
 17324  004830  0E04               	movlw	high (_Channels+5)
 17325  004832  20F4               	addwfc	prodh,w,c
 17326  004834  6EDA               	movwf	fsr2h,c
 17327  004836  38DF               	swapf	223,w,c
 17328  004838  0B0F               	andlw	15
 17329  00483A  0102               	movlb	2	; () banked
 17330  00483C  6FEC               	movwf	(_loRa+236)& (0+255),b
 17331  00483E                     l12373:
 17332  00483E  0100               	movlb	0	; () banked
 17333  004840  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17334  004842                     l12375:
 17335                           
 17336                           ; BSR set to: 0
 17337  004842  0102               	movlb	2	; () banked
 17338  004844  51ED               	movf	(_loRa+237)& (0+255),w,b
 17339  004846  0100               	movlb	0	; () banked
 17340  004848  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17341  00484A  E3AD               	bnc	l12363
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;lorawan_eu.c: 1062: }
 17345                           ;lorawan_eu.c: 1063: }
 17346                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17347  00484C  0102               	movlb	2	; () banked
 17348  00484E  51DF               	movf	(_loRa+223)& (0+255),w,b
 17349  004850  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17350  004852  E202               	bc	l12381
 17351                           
 17352                           ; BSR set to: 2
 17353                           ;lorawan_eu.c: 1066: {
 17354                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17355  004854  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17356  004858                     l12381:
 17357                           
 17358                           ; BSR set to: 2
 17359                           ;lorawan_eu.c: 1068: }
 17360                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17361  004858  51EB               	movf	(_loRa+235)& (0+255),w,b
 17362  00485A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17363  00485C  A0D8               	btfss	status,0,c
 17364                           
 17365                           ; BSR set to: 2
 17366                           ;lorawan_eu.c: 1071: {
 17367                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17368  00485E  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17369                           
 17370                           ; BSR set to: 2
 17371  004862  0012               	return		;funcret
 17372  004864                     __end_of_UpdateChannelIdStatus:
 17373                           	opt stack 0
 17374                           tosu	equ	0xFFF
 17375                           tosh	equ	0xFFE
 17376                           tosl	equ	0xFFD
 17377                           pclath	equ	0xFFA
 17378                           tblptru	equ	0xFF8
 17379                           tblptrh	equ	0xFF7
 17380                           tblptrl	equ	0xFF6
 17381                           tablat	equ	0xFF5
 17382                           prodh	equ	0xFF4
 17383                           prodl	equ	0xFF3
 17384                           intcon	equ	0xFF2
 17385                           intcon2	equ	0xFF1
 17386                           intcon3	equ	0xFF0
 17387                           indf0	equ	0xFEF
 17388                           postinc0	equ	0xFEE
 17389                           fsr0h	equ	0xFEA
 17390                           fsr0l	equ	0xFE9
 17391                           wreg	equ	0xFE8
 17392                           postinc1	equ	0xFE6
 17393                           postdec1	equ	0xFE5
 17394                           plusw1	equ	0xFE3
 17395                           fsr1h	equ	0xFE2
 17396                           fsr1l	equ	0xFE1
 17397                           indf2	equ	0xFDF
 17398                           postinc2	equ	0xFDE
 17399                           postdec2	equ	0xFDD
 17400                           plusw2	equ	0xFDB
 17401                           fsr2h	equ	0xFDA
 17402                           fsr2l	equ	0xFD9
 17403                           status	equ	0xFD8
 17404                           
 17405 ;; *************** function _ExecuteDutyCycle *****************
 17406 ;; Defined at:
 17407 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17408 ;; Parameters:    Size  Location     Type
 17409 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17410 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17411 ;; Auto vars:     Size  Location     Type
 17412 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17413 ;; Return value:  Size  Location     Type
 17414 ;;                  2    4[BANK0 ] PTR unsigned char 
 17415 ;; Registers used:
 17416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17417 ;; Tracked objects:
 17418 ;;		On entry : F/0
 17419 ;;		On exit  : D/0
 17420 ;;		Unchanged: 0/0
 17421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17424 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17425 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17426 ;;Total ram usage:        6 bytes
 17427 ;; Hardware stack levels used:    1
 17428 ;; Hardware stack levels required when called:    7
 17429 ;; This function calls:
 17430 ;;		Nothing
 17431 ;; This function is called by:
 17432 ;;		_MacExecuteCommands
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           	psect	text95
 17437  00696C                     __ptext95:
 17438                           	opt stack 0
 17439  00696C                     _ExecuteDutyCycle:
 17440                           	opt stack 18
 17441                           
 17442                           ; BSR set to: 0
 17443                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17444                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17445                           
 17446                           ; BSR set to: 2
 17447                           ;incstack = 0
 17448  00696C  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17449  006970  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17450  006974  50DF               	movf	indf2,w,c
 17451  006976  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17452                           
 17453                           ; BSR set to: 0
 17454  006978  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17455  00697A  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17459  00697C  0E0F               	movlw	15
 17460  00697E  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17461  006980  D012               	goto	l1091
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;lorawan_eu.c: 600: {
 17465                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17466  006982  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17467  006986  0E01               	movlw	1
 17468  006988  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17469  00698A  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17470  00698C  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17471  00698E  D003               	goto	u14764
 17472  006990                     u14765:
 17473  006990  90D8               	bcf	status,0,c
 17474  006992  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17475  006994  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17476  006996                     u14764:
 17477  006996  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17478  006998  D7FB               	goto	u14765
 17479  00699A  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17480  00699E  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17481                           
 17482                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17483  0069A2  0102               	movlb	2	; () banked
 17484  0069A4  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17485  0069A6                     l1091:
 17486                           
 17487                           ;lorawan_eu.c: 603: }
 17488                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17489  0069A6  0100               	movlb	0	; () banked
 17490  0069A8  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17491  0069AA  E102               	bnz	l13465
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;lorawan_eu.c: 606: {
 17495                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17496  0069AC  0102               	movlb	2	; () banked
 17497  0069AE  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17498  0069B0                     l13465:
 17499                           
 17500                           ;lorawan_eu.c: 608: }
 17501                           ;lorawan_eu.c: 610: return ptr;
 17502  0069B0  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17503  0069B4  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17504  0069B8  0012               	return		;funcret
 17505  0069BA                     __end_of_ExecuteDutyCycle:
 17506                           	opt stack 0
 17507                           tosu	equ	0xFFF
 17508                           tosh	equ	0xFFE
 17509                           tosl	equ	0xFFD
 17510                           pclath	equ	0xFFA
 17511                           tblptru	equ	0xFF8
 17512                           tblptrh	equ	0xFF7
 17513                           tblptrl	equ	0xFF6
 17514                           tablat	equ	0xFF5
 17515                           prodh	equ	0xFF4
 17516                           prodl	equ	0xFF3
 17517                           intcon	equ	0xFF2
 17518                           intcon2	equ	0xFF1
 17519                           intcon3	equ	0xFF0
 17520                           indf0	equ	0xFEF
 17521                           postinc0	equ	0xFEE
 17522                           fsr0h	equ	0xFEA
 17523                           fsr0l	equ	0xFE9
 17524                           wreg	equ	0xFE8
 17525                           postinc1	equ	0xFE6
 17526                           postdec1	equ	0xFE5
 17527                           plusw1	equ	0xFE3
 17528                           fsr1h	equ	0xFE2
 17529                           fsr1l	equ	0xFE1
 17530                           indf2	equ	0xFDF
 17531                           postinc2	equ	0xFDE
 17532                           postdec2	equ	0xFDD
 17533                           plusw2	equ	0xFDB
 17534                           fsr2h	equ	0xFDA
 17535                           fsr2l	equ	0xFD9
 17536                           status	equ	0xFD8
 17537                           
 17538 ;; *************** function _ExecuteDevStatus *****************
 17539 ;; Defined at:
 17540 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17541 ;; Parameters:    Size  Location     Type
 17542 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17543 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17544 ;; Auto vars:     Size  Location     Type
 17545 ;;		None
 17546 ;; Return value:  Size  Location     Type
 17547 ;;                  2    4[BANK0 ] PTR unsigned char 
 17548 ;; Registers used:
 17549 ;;		wreg, status,2, status,0
 17550 ;; Tracked objects:
 17551 ;;		On entry : F/0
 17552 ;;		On exit  : F/0
 17553 ;;		Unchanged: F/0
 17554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17559 ;;Total ram usage:        2 bytes
 17560 ;; Hardware stack levels used:    1
 17561 ;; Hardware stack levels required when called:    7
 17562 ;; This function calls:
 17563 ;;		Nothing
 17564 ;; This function is called by:
 17565 ;;		_MacExecuteCommands
 17566 ;; This function uses a non-reentrant model
 17567 ;;
 17568                           
 17569                           	psect	text96
 17570  00782E                     __ptext96:
 17571                           	opt stack 0
 17572  00782E                     _ExecuteDevStatus:
 17573                           	opt stack 18
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;lorawan_eu.c: 674: return ptr;
 17577                           
 17578                           ;incstack = 0
 17579  00782E  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17580  007832  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17581                           
 17582                           ; BSR set to: 0
 17583  007836  0012               	return		;funcret
 17584  007838                     __end_of_ExecuteDevStatus:
 17585                           	opt stack 0
 17586                           tosu	equ	0xFFF
 17587                           tosh	equ	0xFFE
 17588                           tosl	equ	0xFFD
 17589                           pclath	equ	0xFFA
 17590                           tblptru	equ	0xFF8
 17591                           tblptrh	equ	0xFF7
 17592                           tblptrl	equ	0xFF6
 17593                           tablat	equ	0xFF5
 17594                           prodh	equ	0xFF4
 17595                           prodl	equ	0xFF3
 17596                           intcon	equ	0xFF2
 17597                           intcon2	equ	0xFF1
 17598                           intcon3	equ	0xFF0
 17599                           indf0	equ	0xFEF
 17600                           postinc0	equ	0xFEE
 17601                           fsr0h	equ	0xFEA
 17602                           fsr0l	equ	0xFE9
 17603                           wreg	equ	0xFE8
 17604                           postinc1	equ	0xFE6
 17605                           postdec1	equ	0xFE5
 17606                           plusw1	equ	0xFE3
 17607                           fsr1h	equ	0xFE2
 17608                           fsr1l	equ	0xFE1
 17609                           indf2	equ	0xFDF
 17610                           postinc2	equ	0xFDE
 17611                           postdec2	equ	0xFDD
 17612                           plusw2	equ	0xFDB
 17613                           fsr2h	equ	0xFDA
 17614                           fsr2l	equ	0xFD9
 17615                           status	equ	0xFD8
 17616                           
 17617 ;; *************** function _LORAWAN_Send *****************
 17618 ;; Defined at:
 17619 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  confirmed       1    wreg     enum E7984
 17622 ;;  port            1  118[BANK0 ] unsigned char 
 17623 ;;  buffer          2  119[BANK0 ] PTR void 
 17624 ;;		 -> payload(4), NULL(0), 
 17625 ;;  bufferLength    1  121[BANK0 ] unsigned char 
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;  confirmed       1  124[BANK0 ] enum E7984
 17628 ;;  result          1  123[BANK0 ] enum E7957
 17629 ;; Return value:  Size  Location     Type
 17630 ;;                  1    wreg      enum E7957
 17631 ;; Registers used:
 17632 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17633 ;; Tracked objects:
 17634 ;;		On entry : F/0
 17635 ;;		On exit  : D/0
 17636 ;;		Unchanged: 0/0
 17637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17642 ;;Total ram usage:        7 bytes
 17643 ;; Hardware stack levels used:    1
 17644 ;; Hardware stack levels required when called:   13
 17645 ;; This function calls:
 17646 ;;		_AssemblePacket
 17647 ;;		_LORAWAN_GetMaxPayloadSize
 17648 ;;		_RADIO_ReceiveStop
 17649 ;;		_RADIO_Transmit
 17650 ;;		_SelectChannelForTransmission
 17651 ;; This function is called by:
 17652 ;;		_AutomaticReplyCallback
 17653 ;;		_LORAWAN_RxDone
 17654 ;;		_readAndSend
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text97
 17659  0054BE                     __ptext97:
 17660                           	opt stack 0
 17661  0054BE                     _LORAWAN_Send:
 17662                           	opt stack 16
 17663                           
 17664                           ; BSR set to: 0
 17665                           ;incstack = 0
 17666                           ;LORAWAN_Send@confirmed stored from wreg
 17667  0054BE  6FDC               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17668                           
 17669                           ;lorawan.c: 187: LorawanError_t result;
 17670                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17671  0054C0  0102               	movlb	2	; () banked
 17672  0054C2  A103               	btfss	(_loRa+3)& (0+255),0,b
 17673                           
 17674                           ; BSR set to: 2
 17675                           ;lorawan.c: 192: }
 17676                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17677  0054C4  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17678  0054C6  0012               	return	
 17679                           
 17680                           ; BSR set to: 2
 17681                           ;lorawan.c: 197: }
 17682                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17683  0054C8  A902               	btfss	(_loRa+2)& (0+255),4,b
 17684  0054CA  0012               	return	
 17685                           
 17686                           ; BSR set to: 2
 17687                           ;lorawan.c: 202: }
 17688                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17689  0054CC  0100               	movlb	0	; () banked
 17690  0054CE  51D6               	movf	LORAWAN_Send@port& (0+255),w,b
 17691  0054D0  E103               	bnz	l13923
 17692                           
 17693                           ; BSR set to: 0
 17694  0054D2  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17695  0054D4  E001               	bz	l13923
 17696  0054D6  0012               	return	
 17697  0054D8                     l13923:
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;lorawan.c: 207: }
 17701                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17702  0054D8  EC52  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17703  0054DC  6FDA               	movwf	??_LORAWAN_Send& (0+255),b
 17704  0054DE  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17705  0054E0  5DDA               	subwf	??_LORAWAN_Send& (0+255),w,b
 17706  0054E2  E201               	bc	l13927
 17707  0054E4  0012               	return	
 17708  0054E6                     l13927:
 17709                           
 17710                           ; BSR set to: 0
 17711                           ;lorawan.c: 213: }
 17712                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17713  0054E6  0102               	movlb	2	; () banked
 17714  0054E8  2906               	incf	(_loRa+6)& (0+255),w,b
 17715  0054EA  E108               	bnz	l13931
 17716  0054EC  2907               	incf	(_loRa+7)& (0+255),w,b
 17717  0054EE  E106               	bnz	l13931
 17718  0054F0  2908               	incf	(_loRa+8)& (0+255),w,b
 17719  0054F2  E104               	bnz	l13931
 17720  0054F4  2909               	incf	(_loRa+9)& (0+255),w,b
 17721  0054F6  E102               	bnz	l13931
 17722                           
 17723                           ; BSR set to: 2
 17724                           ;lorawan.c: 216: {
 17725                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17726  0054F8  8304               	bsf	(_loRa+4)& (0+255),1,b
 17727                           
 17728                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17729                           ;	Return value of _LORAWAN_Send is never used
 17730  0054FA  0012               	return	
 17731  0054FC                     l13931:
 17732                           
 17733                           ; BSR set to: 2
 17734                           ;lorawan.c: 220: }
 17735                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17736  0054FC  5102               	movf	(_loRa+2)& (0+255),w,b
 17737  0054FE  0B0F               	andlw	15
 17738  005500  E003               	bz	l13937
 17739                           
 17740                           ; BSR set to: 2
 17741  005502  5112               	movf	(_loRa+18)& (0+255),w,b
 17742  005504  E101               	bnz	l13937
 17743  005506  0012               	return	
 17744  005508                     l13937:
 17745                           
 17746                           ; BSR set to: 2
 17747                           ;lorawan.c: 225: }
 17748                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17749  005508  0E01               	movlw	1
 17750  00550A  EC27  F033         	call	_SelectChannelForTransmission
 17751  00550E  6FDB               	movwf	LORAWAN_Send@result& (0+255),b
 17752                           
 17753                           ; BSR set to: 0
 17754                           ;lorawan.c: 228: if (result != OK)
 17755  005510  51DB               	movf	LORAWAN_Send@result& (0+255),w,b
 17756  005512  E001               	bz	l13945
 17757  005514  0012               	return	
 17758  005516                     l13945:
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;lorawan.c: 232: else
 17762                           ;lorawan.c: 233: {
 17763                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17764  005516  0E02               	movlw	2
 17765  005518  0102               	movlb	2	; () banked
 17766  00551A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17767  00551C  E102               	bnz	l13949
 17768                           
 17769                           ; BSR set to: 2
 17770                           ;lorawan.c: 235: {
 17771                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17772  00551E  EC3C  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17773  005522                     l13949:
 17774                           
 17775                           ;lorawan.c: 237: }
 17776                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17777  005522  C0D6  F0CA         	movff	LORAWAN_Send@port,AssemblePacket@port
 17778  005526  C0D7  F0CB         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17779  00552A  C0D8  F0CC         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17780  00552E  C0D9  F0CD         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17781  005532  0100               	movlb	0	; () banked
 17782  005534  6BCE               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17783  005536  51DC               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17784  005538  EC07  F00F         	call	_AssemblePacket
 17785                           
 17786                           ; BSR set to: 2
 17787                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17788  00553C  0EF0               	movlw	low (_macBuffer+16)
 17789  00553E  0100               	movlb	0	; () banked
 17790  005540  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 17791  005542  0E04               	movlw	high (_macBuffer+16)
 17792  005544  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17793  005546  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17794  00554A  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 17795  00554E  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 17796  005550  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17797  005552  A4D8               	btfss	status,2,c
 17798  005554  0012               	return	
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;lorawan.c: 242: {
 17802                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17803  005556  0102               	movlb	2	; () banked
 17804  005558  2B06               	incf	(_loRa+6)& (0+255),f,b
 17805  00555A  0E00               	movlw	0
 17806  00555C  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17807  00555E  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17808  005560  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17809                           
 17810                           ;lorawan.c: 245: if (CNF == confirmed)
 17811  005562  0100               	movlb	0	; () banked
 17812  005564  05DC               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17813  005566  E102               	bnz	l1746
 17814                           
 17815                           ; BSR set to: 0
 17816                           ;lorawan.c: 246: {
 17817                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17818  005568  0102               	movlb	2	; () banked
 17819  00556A  8100               	bsf	_loRa& (0+255),0,b
 17820  00556C                     l1746:
 17821                           
 17822                           ;lorawan.c: 248: }
 17823                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17824  00556C  0102               	movlb	2	; () banked
 17825  00556E  8B00               	bsf	_loRa& (0+255),5,b
 17826                           
 17827                           ; BSR set to: 2
 17828                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17829  005570  5102               	movf	(_loRa+2)& (0+255),w,b
 17830  005572  0BF0               	andlw	-16
 17831  005574  0901               	iorlw	1
 17832  005576  6F02               	movwf	(_loRa+2)& (0+255),b
 17833                           
 17834                           ;lorawan.c: 251: }
 17835  005578  0012               	return		;funcret
 17836  00557A                     __end_of_LORAWAN_Send:
 17837                           	opt stack 0
 17838                           tosu	equ	0xFFF
 17839                           tosh	equ	0xFFE
 17840                           tosl	equ	0xFFD
 17841                           pclath	equ	0xFFA
 17842                           tblptru	equ	0xFF8
 17843                           tblptrh	equ	0xFF7
 17844                           tblptrl	equ	0xFF6
 17845                           tablat	equ	0xFF5
 17846                           prodh	equ	0xFF4
 17847                           prodl	equ	0xFF3
 17848                           intcon	equ	0xFF2
 17849                           intcon2	equ	0xFF1
 17850                           intcon3	equ	0xFF0
 17851                           indf0	equ	0xFEF
 17852                           postinc0	equ	0xFEE
 17853                           fsr0h	equ	0xFEA
 17854                           fsr0l	equ	0xFE9
 17855                           wreg	equ	0xFE8
 17856                           postinc1	equ	0xFE6
 17857                           postdec1	equ	0xFE5
 17858                           plusw1	equ	0xFE3
 17859                           fsr1h	equ	0xFE2
 17860                           fsr1l	equ	0xFE1
 17861                           indf2	equ	0xFDF
 17862                           postinc2	equ	0xFDE
 17863                           postdec2	equ	0xFDD
 17864                           plusw2	equ	0xFDB
 17865                           fsr2h	equ	0xFDA
 17866                           fsr2l	equ	0xFD9
 17867                           status	equ	0xFD8
 17868                           
 17869 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17870 ;; Defined at:
 17871 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17872 ;; Parameters:    Size  Location     Type
 17873 ;;		None
 17874 ;; Auto vars:     Size  Location     Type
 17875 ;;  result          1   14[BANK0 ] unsigned char 
 17876 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17877 ;; Return value:  Size  Location     Type
 17878 ;;                  1    wreg      unsigned char 
 17879 ;; Registers used:
 17880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17881 ;; Tracked objects:
 17882 ;;		On entry : D/2
 17883 ;;		On exit  : F/0
 17884 ;;		Unchanged: 0/0
 17885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;Total ram usage:        3 bytes
 17891 ;; Hardware stack levels used:    1
 17892 ;; Hardware stack levels required when called:    8
 17893 ;; This function calls:
 17894 ;;		_CountfOptsLength
 17895 ;; This function is called by:
 17896 ;;		_LORAWAN_Send
 17897 ;;		_AckRetransmissionCallback
 17898 ;; This function uses a non-reentrant model
 17899 ;;
 17900                           
 17901                           	psect	text98
 17902  006AA4                     __ptext98:
 17903                           	opt stack 0
 17904  006AA4                     _LORAWAN_GetMaxPayloadSize:
 17905                           	opt stack 20
 17906                           
 17907                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17908                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17909                           
 17910                           ;incstack = 0
 17911  006AA4  ECBD  F02A         	call	_CountfOptsLength	;wreg free
 17912  006AA8  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17913                           
 17914                           ; BSR set to: 0
 17915                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17916  006AAA  0102               	movlb	2	; () banked
 17917  006AAC  51A7               	movf	(_loRa+167)& (0+255),w,b
 17918  006AAE  E10D               	bnz	l13627
 17919                           
 17920                           ; BSR set to: 2
 17921                           ;lorawan.c: 1564: {
 17922                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17923  006AB0  0E6D               	movlw	low _maxPayloadSize
 17924  006AB2  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17925  006AB4  6EF6               	movwf	tblptrl,c
 17926  006AB6  6AF7               	clrf	tblptrh,c
 17927  006AB8  0EFF               	movlw	high _maxPayloadSize
 17928  006ABA  22F7               	addwfc	tblptrh,f,c
 17929  006ABC                     	if	1	;There are 3 active tblptr bytes
 17930  006ABC  6AF8               	clrf	tblptru,c
 17931  006ABE  0E00               	movlw	low (__mediumconst shr (0+16))
 17932  006AC0  22F8               	addwfc	tblptru,f,c
 17933  006AC2                     	endif
 17934  006AC2  0008               	tblrd		*
 17935  006AC4  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17936                           
 17937                           ;lorawan.c: 1566: }
 17938  006AC8  D010               	goto	l13629
 17939  006ACA                     l13627:
 17940                           
 17941                           ; BSR set to: 2
 17942                           ;lorawan.c: 1567: else
 17943                           ;lorawan.c: 1568: {
 17944                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17945  006ACA  0E6D               	movlw	low _maxPayloadSize
 17946  006ACC  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17947  006ACE  6EF6               	movwf	tblptrl,c
 17948  006AD0  6AF7               	clrf	tblptrh,c
 17949  006AD2  0EFF               	movlw	high _maxPayloadSize
 17950  006AD4  22F7               	addwfc	tblptrh,f,c
 17951  006AD6                     	if	1	;There are 3 active tblptr bytes
 17952  006AD6  6AF8               	clrf	tblptru,c
 17953  006AD8  0E00               	movlw	low (__mediumconst shr (0+16))
 17954  006ADA  22F8               	addwfc	tblptru,f,c
 17955  006ADC                     	endif
 17956  006ADC  0008               	tblrd		*
 17957  006ADE  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17958  006AE2  0100               	movlb	0	; () banked
 17959  006AE4  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17960  006AE6  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17961  006AE8  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17962  006AEA                     l13629:
 17963                           
 17964                           ;lorawan.c: 1570: }
 17965                           ;lorawan.c: 1572: return result;
 17966  006AEA  0100               	movlb	0	; () banked
 17967  006AEC  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17968                           
 17969                           ; BSR set to: 0
 17970  006AEE  0012               	return		;funcret
 17971  006AF0                     __end_of_LORAWAN_GetMaxPayloadSize:
 17972                           	opt stack 0
 17973                           tosu	equ	0xFFF
 17974                           tosh	equ	0xFFE
 17975                           tosl	equ	0xFFD
 17976                           pclath	equ	0xFFA
 17977                           tblptru	equ	0xFF8
 17978                           tblptrh	equ	0xFF7
 17979                           tblptrl	equ	0xFF6
 17980                           tablat	equ	0xFF5
 17981                           prodh	equ	0xFF4
 17982                           prodl	equ	0xFF3
 17983                           intcon	equ	0xFF2
 17984                           intcon2	equ	0xFF1
 17985                           intcon3	equ	0xFF0
 17986                           indf0	equ	0xFEF
 17987                           postinc0	equ	0xFEE
 17988                           fsr0h	equ	0xFEA
 17989                           fsr0l	equ	0xFE9
 17990                           wreg	equ	0xFE8
 17991                           postinc1	equ	0xFE6
 17992                           postdec1	equ	0xFE5
 17993                           plusw1	equ	0xFE3
 17994                           fsr1h	equ	0xFE2
 17995                           fsr1l	equ	0xFE1
 17996                           indf2	equ	0xFDF
 17997                           postinc2	equ	0xFDE
 17998                           postdec2	equ	0xFDD
 17999                           plusw2	equ	0xFDB
 18000                           fsr2h	equ	0xFDA
 18001                           fsr2l	equ	0xFD9
 18002                           status	equ	0xFD8
 18003                           
 18004 ;; *************** function _AssemblePacket *****************
 18005 ;; Defined at:
 18006 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18007 ;; Parameters:    Size  Location     Type
 18008 ;;  confirmed       1    wreg     unsigned char 
 18009 ;;  port            1  106[BANK0 ] unsigned char 
 18010 ;;  buffer          2  107[BANK0 ] PTR unsigned char 
 18011 ;;		 -> payload(4), NULL(0), 
 18012 ;;  bufferLength    2  109[BANK0 ] unsigned int 
 18013 ;; Auto vars:     Size  Location     Type
 18014 ;;  confirmed       1  113[BANK0 ] unsigned char 
 18015 ;;  bufferIndex     1  117[BANK0 ] unsigned char 
 18016 ;;  macCmdIdx       1  116[BANK0 ] unsigned char 
 18017 ;;  fCtrl           1  115[BANK0 ] struct .
 18018 ;;  mhdr            1  114[BANK0 ] struct .
 18019 ;; Return value:  Size  Location     Type
 18020 ;;                  1    wreg      void 
 18021 ;; Registers used:
 18022 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18023 ;; Tracked objects:
 18024 ;;		On entry : F/0
 18025 ;;		On exit  : F/2
 18026 ;;		Unchanged: 0/0
 18027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18028 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18029 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;Total ram usage:       12 bytes
 18033 ;; Hardware stack levels used:    1
 18034 ;; Hardware stack levels required when called:   12
 18035 ;; This function calls:
 18036 ;;		_AESCmac
 18037 ;;		_AssembleEncryptionBlock
 18038 ;;		_CountfOptsLength
 18039 ;;		_EncryptFRMPayload
 18040 ;;		_FindSmallestDataRate
 18041 ;;		_IncludeMacCommandsResponse
 18042 ;;		_memcpy
 18043 ;;		_memset
 18044 ;; This function is called by:
 18045 ;;		_LORAWAN_Send
 18046 ;; This function uses a non-reentrant model
 18047 ;;
 18048                           
 18049                           	psect	text99
 18050  001E0E                     __ptext99:
 18051                           	opt stack 0
 18052  001E0E                     _AssemblePacket:
 18053                           	opt stack 16
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;incstack = 0
 18057                           ;AssemblePacket@confirmed stored from wreg
 18058  001E0E  6FD1               	movwf	AssemblePacket@confirmed& (0+255),b
 18059                           
 18060                           ;lorawan.c: 1674: Mhdr_t mhdr;
 18061                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18062  001E10  0E10               	movlw	16
 18063  001E12  0100               	movlb	0	; () banked
 18064  001E14  6FD5               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 18068                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18069  001E16  6BD4               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18073  001E18  0ED2               	movlw	low AssemblePacket@mhdr
 18074  001E1A  6F64               	movwf	memset@p1& (0+255),b
 18075  001E1C  6B65               	clrf	(memset@p1+1)& (0+255),b
 18076  001E1E  6B67               	clrf	(memset@c+1)& (0+255),b
 18077  001E20  6B66               	clrf	memset@c& (0+255),b
 18078  001E22  6B69               	clrf	(memset@n+1)& (0+255),b
 18079  001E24  0E01               	movlw	1
 18080  001E26  6F68               	movwf	memset@n& (0+255),b
 18081  001E28  ECEC  F038         	call	_memset	;wreg free
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18085  001E2C  0EE0               	movlw	low _macBuffer
 18086  001E2E  6F64               	movwf	memset@p1& (0+255),b
 18087  001E30  0E04               	movlw	high _macBuffer
 18088  001E32  6F65               	movwf	(memset@p1+1)& (0+255),b
 18089  001E34  6B67               	clrf	(memset@c+1)& (0+255),b
 18090  001E36  6B66               	clrf	memset@c& (0+255),b
 18091  001E38  0E01               	movlw	1
 18092  001E3A  6F69               	movwf	(memset@n+1)& (0+255),b
 18093  001E3C  0E0F               	movlw	15
 18094  001E3E  6F68               	movwf	memset@n& (0+255),b
 18095  001E40  ECEC  F038         	call	_memset	;wreg free
 18096                           
 18097                           ; BSR set to: 0
 18098                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18099  001E44  0EB4               	movlw	low _aesBuffer
 18100  001E46  6F64               	movwf	memset@p1& (0+255),b
 18101  001E48  0E01               	movlw	high _aesBuffer
 18102  001E4A  6F65               	movwf	(memset@p1+1)& (0+255),b
 18103  001E4C  6B67               	clrf	(memset@c+1)& (0+255),b
 18104  001E4E  6B66               	clrf	memset@c& (0+255),b
 18105  001E50  6B69               	clrf	(memset@n+1)& (0+255),b
 18106  001E52  0E10               	movlw	16
 18107  001E54  6F68               	movwf	memset@n& (0+255),b
 18108  001E56  ECEC  F038         	call	_memset	;wreg free
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;lorawan.c: 1683: if (confirmed == 1)
 18112  001E5A  05D1               	decf	AssemblePacket@confirmed& (0+255),w,b
 18113  001E5C  E107               	bnz	l13649
 18114                           
 18115                           ; BSR set to: 0
 18116                           ;lorawan.c: 1684: {
 18117                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18118  001E5E  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 18119  001E60  0B1F               	andlw	-225
 18120  001E62  0980               	iorlw	128
 18121  001E64  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 18122                           
 18123                           ; BSR set to: 0
 18124                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18125  001E66  0102               	movlb	2	; () banked
 18126  001E68  8100               	bsf	_loRa& (0+255),0,b
 18127                           
 18128                           ;lorawan.c: 1687: }
 18129  001E6A  D004               	goto	l2231
 18130  001E6C                     l13649:
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;lorawan.c: 1688: else
 18134                           ;lorawan.c: 1689: {
 18135                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 18136  001E6C  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 18137  001E6E  0B1F               	andlw	-225
 18138  001E70  0940               	iorlw	64
 18139  001E72  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 18140  001E74                     l2231:
 18141                           
 18142                           ;lorawan.c: 1691: }
 18143                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 18144  001E74  0EFC               	movlw	-4
 18145  001E76  0100               	movlb	0	; () banked
 18146  001E78  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18147                           
 18148                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18149  001E7A  0EE3               	movlw	-29
 18150  001E7C  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18154  001E7E  0EE0               	movlw	low _macBuffer
 18155  001E80  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18156  001E82  6ED9               	movwf	fsr2l,c
 18157  001E84  6ADA               	clrf	fsr2h,c
 18158  001E86  0E04               	movlw	high _macBuffer
 18159  001E88  22DA               	addwfc	fsr2h,f,c
 18160  001E8A  C0D2  FFDF         	movff	AssemblePacket@mhdr,indf2
 18161                           
 18162                           ; BSR set to: 0
 18163  001E8E  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18164                           
 18165                           ; BSR set to: 0
 18166                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18167  001E90  0EE0               	movlw	low _macBuffer
 18168  001E92  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18169  001E94  6F64               	movwf	memcpy@d1& (0+255),b
 18170  001E96  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18171  001E98  0E04               	movlw	high _macBuffer
 18172  001E9A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18173  001E9C  0E1E               	movlw	low (_loRa+30)
 18174  001E9E  6F66               	movwf	memcpy@s1& (0+255),b
 18175  001EA0  0E02               	movlw	high (_loRa+30)
 18176  001EA2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18177  001EA4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18178  001EA6  0E04               	movlw	4
 18179  001EA8  6F68               	movwf	memcpy@n& (0+255),b
 18180  001EAA  EC0F  F034         	call	_memcpy	;wreg free
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18184  001EAE  0E04               	movlw	4
 18185  001EB0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;lorawan.c: 1699: fCtrl.value = 0;
 18189  001EB2  6BD3               	clrf	AssemblePacket@fCtrl& (0+255),b
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18193  001EB4  0102               	movlb	2	; () banked
 18194  001EB6  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18195  001EB8  D030               	goto	l2232
 18196                           
 18197                           ; BSR set to: 2
 18198                           ;lorawan.c: 1702: {
 18199                           ;lorawan.c: 1703: fCtrl.adr = 1;
 18200  001EBA  0100               	movlb	0	; () banked
 18201  001EBC  8FD3               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18202                           
 18203                           ; BSR set to: 0
 18204                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18205  001EBE  0102               	movlb	2	; () banked
 18206  001EC0  51DF               	movf	(_loRa+223)& (0+255),w,b
 18207  001EC2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 18208  001EC4  E229               	bc	l2233
 18209                           
 18210                           ; BSR set to: 2
 18211                           ;lorawan.c: 1705: {
 18212                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18213  001EC6  0100               	movlb	0	; () banked
 18214  001EC8  8DD3               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18215                           
 18216                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18217  001ECA  0102               	movlb	2	; () banked
 18218  001ECC  8900               	bsf	_loRa& (0+255),4,b
 18219                           
 18220                           ; BSR set to: 2
 18221                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18222  001ECE  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18223  001ED0  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18224                           
 18225                           ; BSR set to: 2
 18226                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18227  001ED2  51A2               	movf	(_loRa+162)& (0+255),w,b
 18228  001ED4  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18229  001ED6  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18230  001ED8  E102               	bnz	l13675
 18231                           
 18232                           ; BSR set to: 2
 18233                           ;lorawan.c: 1711: {
 18234                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18235  001EDA  6BEE               	clrf	(_loRa+238)& (0+255),b
 18236  001EDC  D01A               	goto	L9
 18237  001EDE                     l13675:
 18238                           
 18239                           ; BSR set to: 2
 18240                           ;lorawan.c: 1716: else
 18241                           ;lorawan.c: 1717: {
 18242                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18243  001EDE  51A2               	movf	(_loRa+162)& (0+255),w,b
 18244  001EE0  0100               	movlb	0	; () banked
 18245  001EE2  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18246  001EE4  6BD0               	clrf	(??_AssemblePacket+1)& (0+255),b
 18247  001EE6  0102               	movlb	2	; () banked
 18248  001EE8  51D0               	movf	(_loRa+208)& (0+255),w,b
 18249  001EEA  0100               	movlb	0	; () banked
 18250  001EEC  5DCF               	subwf	??_AssemblePacket& (0+255),w,b
 18251  001EEE  0102               	movlb	2	; () banked
 18252  001EF0  51D1               	movf	(_loRa+209)& (0+255),w,b
 18253  001EF2  0100               	movlb	0	; () banked
 18254  001EF4  59D0               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18255  001EF6  E20E               	bc	l2236
 18256                           
 18257                           ; BSR set to: 0
 18258                           ;lorawan.c: 1719: {
 18259                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18260  001EF8  0102               	movlb	2	; () banked
 18261  001EFA  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18262                           
 18263                           ; BSR set to: 2
 18264                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18265  001EFC  51EE               	movf	(_loRa+238)& (0+255),w,b
 18266  001EFE  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18267  001F00  E20C               	bc	l2232
 18268                           
 18269                           ; BSR set to: 2
 18270                           ;lorawan.c: 1725: {
 18271                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18272  001F02  6BEE               	clrf	(_loRa+238)& (0+255),b
 18273                           
 18274                           ; BSR set to: 2
 18275                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18276  001F04  ECDC  F02C         	call	_FindSmallestDataRate	;wreg free
 18277  001F08  0900               	iorlw	0
 18278  001F0A  E107               	bnz	l2232
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;lorawan.c: 1729: {
 18282                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18283  001F0C  0102               	movlb	2	; () banked
 18284  001F0E  6BD0               	clrf	(_loRa+208)& (0+255),b
 18285  001F10  6BD1               	clrf	(_loRa+209)& (0+255),b
 18286  001F12                     L9:
 18287                           
 18288                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18289  001F12  0100               	movlb	0	; () banked
 18290  001F14                     l2236:
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;lorawan.c: 1737: else
 18294                           ;lorawan.c: 1738: {
 18295                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18296  001F14  9DD3               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18297                           
 18298                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18299  001F16  0102               	movlb	2	; () banked
 18300  001F18                     l2233:
 18301                           
 18302                           ; BSR set to: 2
 18303                           ;lorawan.c: 1744: else
 18304                           ;lorawan.c: 1745: {
 18305                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18306  001F18  9900               	bcf	_loRa& (0+255),4,b
 18307  001F1A                     l2232:
 18308                           
 18309                           ;lorawan.c: 1747: }
 18310                           ;lorawan.c: 1748: }
 18311                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18312  001F1A  0102               	movlb	2	; () banked
 18313  001F1C  A300               	btfss	_loRa& (0+255),1,b
 18314  001F1E  D004               	goto	l2241
 18315                           
 18316                           ; BSR set to: 2
 18317                           ;lorawan.c: 1751: {
 18318                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18319  001F20  0100               	movlb	0	; () banked
 18320  001F22  8BD3               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18321                           
 18322                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18323  001F24  0102               	movlb	2	; () banked
 18324  001F26  9300               	bcf	_loRa& (0+255),1,b
 18325  001F28                     l2241:
 18326                           
 18327                           ; BSR set to: 2
 18328                           ;lorawan.c: 1754: }
 18329                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18330  001F28  0100               	movlb	0	; () banked
 18331  001F2A  99D3               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18332                           
 18333                           ; BSR set to: 0
 18334                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18335  001F2C  0102               	movlb	2	; () banked
 18336  001F2E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18337  001F30  E004               	bz	l13693
 18338                           
 18339                           ; BSR set to: 2
 18340  001F32  0100               	movlb	0	; () banked
 18341  001F34  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18342  001F36  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18343  001F38  E104               	bnz	l13695
 18344  001F3A                     l13693:
 18345                           
 18346                           ;lorawan.c: 1759: {
 18347                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18348  001F3A  0EF0               	movlw	-16
 18349  001F3C  0100               	movlb	0	; () banked
 18350  001F3E  17D3               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18351                           
 18352                           ;lorawan.c: 1761: }
 18353  001F40  D007               	goto	l13697
 18354  001F42                     l13695:
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;lorawan.c: 1763: else
 18358                           ;lorawan.c: 1764: {
 18359                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18360  001F42  ECBD  F02A         	call	_CountfOptsLength	;wreg free
 18361  001F46  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18362  001F48  19D3               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18363  001F4A  0BF0               	andlw	-16
 18364  001F4C  19CF               	xorwf	??_AssemblePacket& (0+255),w,b
 18365  001F4E  6FD3               	movwf	AssemblePacket@fCtrl& (0+255),b
 18366  001F50                     l13697:
 18367                           
 18368                           ; BSR set to: 0
 18369                           ;lorawan.c: 1766: }
 18370                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18371  001F50  0EE0               	movlw	low _macBuffer
 18372  001F52  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18373  001F54  6ED9               	movwf	fsr2l,c
 18374  001F56  6ADA               	clrf	fsr2h,c
 18375  001F58  0E04               	movlw	high _macBuffer
 18376  001F5A  22DA               	addwfc	fsr2h,f,c
 18377  001F5C  C0D3  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18378                           
 18379                           ; BSR set to: 0
 18380  001F60  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18384  001F62  0EE0               	movlw	low _macBuffer
 18385  001F64  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18386  001F66  6F64               	movwf	memcpy@d1& (0+255),b
 18387  001F68  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18388  001F6A  0E04               	movlw	high _macBuffer
 18389  001F6C  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18390  001F6E  0E06               	movlw	low (_loRa+6)
 18391  001F70  6F66               	movwf	memcpy@s1& (0+255),b
 18392  001F72  0E02               	movlw	high (_loRa+6)
 18393  001F74  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18394  001F76  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18395  001F78  0E02               	movlw	2
 18396  001F7A  6F68               	movwf	memcpy@n& (0+255),b
 18397  001F7C  EC0F  F034         	call	_memcpy	;wreg free
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18401  001F80  0E02               	movlw	2
 18402  001F82  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18406  001F84  0102               	movlb	2	; () banked
 18407  001F86  51A7               	movf	(_loRa+167)& (0+255),w,b
 18408  001F88  E00E               	bz	l13711
 18409                           
 18410                           ; BSR set to: 2
 18411  001F8A  0100               	movlb	0	; () banked
 18412  001F8C  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18413  001F8E  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18414  001F90  E00A               	bz	l13711
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;lorawan.c: 1774: {
 18418                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18419  001F92  0EE0               	movlw	low _macBuffer
 18420  001F94  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18421  001F96  0E04               	movlw	high _macBuffer
 18422  001F98  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18423  001F9A  0ED5               	movlw	low AssemblePacket@bufferIndex
 18424  001F9C  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18425  001F9E  0E01               	movlw	1
 18426  001FA0  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18427  001FA2  EC8B  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18428  001FA6                     l13711:
 18429                           
 18430                           ;lorawan.c: 1776: }
 18431                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18432  001FA6  0EE0               	movlw	low _macBuffer
 18433  001FA8  0100               	movlb	0	; () banked
 18434  001FAA  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18435  001FAC  6ED9               	movwf	fsr2l,c
 18436  001FAE  6ADA               	clrf	fsr2h,c
 18437  001FB0  0E04               	movlw	high _macBuffer
 18438  001FB2  22DA               	addwfc	fsr2h,f,c
 18439  001FB4  C0CA  FFDF         	movff	AssemblePacket@port,indf2
 18440                           
 18441                           ; BSR set to: 0
 18442  001FB8  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;lorawan.c: 1780: if (bufferLength != 0)
 18446  001FBA  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18447  001FBC  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18448  001FBE  E02E               	bz	l13723
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;lorawan.c: 1781: {
 18452                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18453  001FC0  0EE0               	movlw	low _macBuffer
 18454  001FC2  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18455  001FC4  6F64               	movwf	memcpy@d1& (0+255),b
 18456  001FC6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18457  001FC8  0E04               	movlw	high _macBuffer
 18458  001FCA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18459  001FCC  C0CB  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18460  001FD0  C0CC  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18461  001FD4  C0CD  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18462  001FD8  C0CE  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18463  001FDC  EC0F  F034         	call	_memcpy	;wreg free
 18464                           
 18465                           ; BSR set to: 0
 18466                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18467  001FE0  C0CB  F094         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18468  001FE4  C0CC  F095         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18469  001FE8  C0CD  F096         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18470  001FEC  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18471  001FEE  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18472  001FF2  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18473  001FF6  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18474  001FFA  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18475  001FFE  0E32               	movlw	low (_loRa+50)
 18476  002000  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18477  002002  0E02               	movlw	high (_loRa+50)
 18478  002004  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18479  002006  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18480  00200A  0EE0               	movlw	low _macBuffer
 18481  00200C  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18482  00200E  0E04               	movlw	high _macBuffer
 18483  002010  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18484  002012  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18485  002014  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18489  002018  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18490  00201A  D02A               	goto	L8
 18491  00201C                     l13723:
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18495  00201C  0102               	movlb	2	; () banked
 18496  00201E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18497  002020  E028               	bz	l13729
 18498                           
 18499                           ; BSR set to: 2
 18500                           ;lorawan.c: 1787: {
 18501                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18502  002022  0EEF               	movlw	low _radioBuffer
 18503  002024  0100               	movlb	0	; () banked
 18504  002026  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18505  002028  0E05               	movlw	high _radioBuffer
 18506  00202A  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18507  00202C  0ED4               	movlw	low AssemblePacket@macCmdIdx
 18508  00202E  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18509  002030  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18510  002032  EC8B  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18511                           
 18512                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18513  002036  0EEF               	movlw	low _radioBuffer
 18514  002038  6F94               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18515  00203A  0E05               	movlw	high _radioBuffer
 18516  00203C  6F95               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18517  00203E  C0D4  F096         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18518  002042  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18519  002044  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18520  002048  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18521  00204C  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18522  002050  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18523  002054  0E22               	movlw	low (_loRa+34)
 18524  002056  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18525  002058  0E02               	movlw	high (_loRa+34)
 18526  00205A  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18527  00205C  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18528  002060  0EE0               	movlw	low _macBuffer
 18529  002062  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18530  002064  0E04               	movlw	high _macBuffer
 18531  002066  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18532  002068  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18533  00206A  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 18534                           
 18535                           ; BSR set to: 0
 18536                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18537  00206E  51D4               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18538  002070                     L8:
 18539  002070  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18540  002072                     l13729:
 18541                           
 18542                           ;lorawan.c: 1793: }
 18543                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18544  002072  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18545  002076  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18546  00207A  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18547  00207E  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18548  002082  0100               	movlb	0	; () banked
 18549  002084  51D5               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18550  002086  0FF0               	addlw	240
 18551  002088  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18552  00208A  0E49               	movlw	73
 18553  00208C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18554  00208E  0E00               	movlw	0
 18555  002090  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18556  002092  EC83  F02C         	call	_AssembleEncryptionBlock
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18560  002096  0EE0               	movlw	low _macBuffer
 18561  002098  6F64               	movwf	memcpy@d1& (0+255),b
 18562  00209A  0E04               	movlw	high _macBuffer
 18563  00209C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18564  00209E  0EB4               	movlw	low _aesBuffer
 18565  0020A0  6F66               	movwf	memcpy@s1& (0+255),b
 18566  0020A2  0E01               	movlw	high _aesBuffer
 18567  0020A4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18568  0020A6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18569  0020A8  0E10               	movlw	16
 18570  0020AA  6F68               	movwf	memcpy@n& (0+255),b
 18571  0020AC  EC0F  F034         	call	_memcpy	;wreg free
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18575  0020B0  0E22               	movlw	low (_loRa+34)
 18576  0020B2  6FBC               	movwf	AESCmac@key& (0+255),b
 18577  0020B4  0E02               	movlw	high (_loRa+34)
 18578  0020B6  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 18579  0020B8  0EB4               	movlw	low _aesBuffer
 18580  0020BA  6FBE               	movwf	AESCmac@output& (0+255),b
 18581  0020BC  0E01               	movlw	high _aesBuffer
 18582  0020BE  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 18583  0020C0  0EE0               	movlw	low _macBuffer
 18584  0020C2  6FC0               	movwf	AESCmac@input& (0+255),b
 18585  0020C4  0E04               	movlw	high _macBuffer
 18586  0020C6  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 18587  0020C8  C0D5  F0C2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18588  0020CC  ECFD  F00B         	call	_AESCmac	;wreg free
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18592  0020D0  0EE0               	movlw	low _macBuffer
 18593  0020D2  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18594  0020D4  6F64               	movwf	memcpy@d1& (0+255),b
 18595  0020D6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18596  0020D8  0E04               	movlw	high _macBuffer
 18597  0020DA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18598  0020DC  0EB4               	movlw	low _aesBuffer
 18599  0020DE  6F66               	movwf	memcpy@s1& (0+255),b
 18600  0020E0  0E01               	movlw	high _aesBuffer
 18601  0020E2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18602  0020E4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18603  0020E6  0E04               	movlw	4
 18604  0020E8  6F68               	movwf	memcpy@n& (0+255),b
 18605  0020EA  EC0F  F034         	call	_memcpy	;wreg free
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18609  0020EE  0E04               	movlw	4
 18610  0020F0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18614  0020F2  0EF0               	movlw	240
 18615  0020F4  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18616  0020F6  0102               	movlb	2	; () banked
 18617  0020F8  6FD4               	movwf	(_loRa+212)& (0+255),b
 18618  0020FA  6BD5               	clrf	(_loRa+213)& (0+255),b
 18619  0020FC  0EFF               	movlw	255
 18620  0020FE  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18621                           
 18622                           ; BSR set to: 2
 18623  002100  0CFF               	retlw	255	;funcret
 18624  002102                     __end_of_AssemblePacket:
 18625                           	opt stack 0
 18626                           tosu	equ	0xFFF
 18627                           tosh	equ	0xFFE
 18628                           tosl	equ	0xFFD
 18629                           pclath	equ	0xFFA
 18630                           tblptru	equ	0xFF8
 18631                           tblptrh	equ	0xFF7
 18632                           tblptrl	equ	0xFF6
 18633                           tablat	equ	0xFF5
 18634                           prodh	equ	0xFF4
 18635                           prodl	equ	0xFF3
 18636                           intcon	equ	0xFF2
 18637                           intcon2	equ	0xFF1
 18638                           intcon3	equ	0xFF0
 18639                           indf0	equ	0xFEF
 18640                           postinc0	equ	0xFEE
 18641                           fsr0h	equ	0xFEA
 18642                           fsr0l	equ	0xFE9
 18643                           wreg	equ	0xFE8
 18644                           postinc1	equ	0xFE6
 18645                           postdec1	equ	0xFE5
 18646                           plusw1	equ	0xFE3
 18647                           fsr1h	equ	0xFE2
 18648                           fsr1l	equ	0xFE1
 18649                           indf2	equ	0xFDF
 18650                           postinc2	equ	0xFDE
 18651                           postdec2	equ	0xFDD
 18652                           plusw2	equ	0xFDB
 18653                           fsr2h	equ	0xFDA
 18654                           fsr2l	equ	0xFD9
 18655                           status	equ	0xFD8
 18656                           
 18657 ;; *************** function _IncludeMacCommandsResponse *****************
 18658 ;; Defined at:
 18659 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18662 ;;		 -> macBuffer(271), radioBuffer(271), 
 18663 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18664 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18665 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18666 ;; Auto vars:     Size  Location     Type
 18667 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18668 ;;  i               1   14[BANK0 ] unsigned char 
 18669 ;; Return value:  Size  Location     Type
 18670 ;;                  1    wreg      void 
 18671 ;; Registers used:
 18672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18673 ;; Tracked objects:
 18674 ;;		On entry : F/0
 18675 ;;		On exit  : F/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18680 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18681 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18682 ;;Total ram usage:       12 bytes
 18683 ;; Hardware stack levels used:    1
 18684 ;; Hardware stack levels required when called:    8
 18685 ;; This function calls:
 18686 ;;		_RADIO_GetPacketSnr
 18687 ;; This function is called by:
 18688 ;;		_AssemblePacket
 18689 ;; This function uses a non-reentrant model
 18690 ;;
 18691                           
 18692                           	psect	text100
 18693  001B16                     __ptext100:
 18694                           	opt stack 0
 18695  001B16                     _IncludeMacCommandsResponse:
 18696                           	opt stack 19
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18700                           
 18701                           ; BSR set to: 0
 18702                           
 18703                           ; BSR set to: 2
 18704                           ;incstack = 0
 18705  001B16  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18706  001B18  6ED9               	movwf	fsr2l,c
 18707  001B1A  6ADA               	clrf	fsr2h,c
 18708  001B1C  50DF               	movf	indf2,w,c
 18709  001B1E  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18713  001B20  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18714  001B22  D169               	goto	l13319
 18715  001B24                     l13223:
 18716                           
 18717                           ; BSR set to: 0
 18718                           ;lorawan.c: 1851: {
 18719                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18720  001B24  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18721  001B26  E101 D14B          	bz	l13315
 18722                           
 18723                           ; BSR set to: 0
 18724  001B2A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18725  001B2C  0D02               	mullw	2
 18726  001B2E  0EA8               	movlw	low (_loRa+168)
 18727  001B30  24F3               	addwf	prodl,w,c
 18728  001B32  6ED9               	movwf	fsr2l,c
 18729  001B34  0E02               	movlw	high (_loRa+168)
 18730  001B36  20F4               	addwfc	prodh,w,c
 18731  001B38  6EDA               	movwf	fsr2h,c
 18732  001B3A  28DE               	incf	postinc2,w,c
 18733  001B3C  E101 D140          	bz	l13315
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;lorawan.c: 1853: {
 18737                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18738  001B40  0EFE               	movlw	254
 18739  001B42  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18740  001B44  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18741  001B46  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18742  001B48  0D02               	mullw	2
 18743  001B4A  0EA8               	movlw	low (_loRa+168)
 18744  001B4C  24F3               	addwf	prodl,w,c
 18745  001B4E  6ED9               	movwf	fsr2l,c
 18746  001B50  0E02               	movlw	high (_loRa+168)
 18747  001B52  20F4               	addwfc	prodh,w,c
 18748  001B54  6EDA               	movwf	fsr2h,c
 18749  001B56  50DF               	movf	indf2,w,c
 18750  001B58  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18751  001B5A  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18752  001B5C  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18753  001B5E  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18754  001B60  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18755  001B62  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18756  001B64  0E94               	movlw	low _macEndDevCmdReplyLen
 18757  001B66  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18758  001B68  6EF6               	movwf	tblptrl,c
 18759  001B6A  0EFF               	movlw	high _macEndDevCmdReplyLen
 18760  001B6C  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18761  001B6E  6EF7               	movwf	tblptrh,c
 18762  001B70                     	if	1	;There are 3 active tblptr bytes
 18763  001B70  6AF8               	clrf	tblptru,c
 18764  001B72  0E00               	movlw	low (__mediumconst shr (0+16))
 18765  001B74  22F8               	addwfc	tblptru,f,c
 18766  001B76                     	endif
 18767  001B76  0008               	tblrd		*
 18768  001B78  50F5               	movf	tablat,w,c
 18769  001B7A  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18770  001B7E  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18771  001B80  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18772  001B82  0E00               	movlw	0
 18773  001B84  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18774  001B86  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18775  001B88  6ED9               	movwf	fsr2l,c
 18776  001B8A  6ADA               	clrf	fsr2h,c
 18777  001B8C  50DF               	movf	indf2,w,c
 18778  001B8E  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18779  001B90  0E00               	movlw	0
 18780  001B92  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18781  001B94  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18782  001B96  D114               	goto	l13315
 18783  001B98  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18784  001B9A  E105               	bnz	u14480
 18785  001B9C  0E10               	movlw	16
 18786  001B9E  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18787  001BA0  E301 D12F          	bc	l13321
 18788  001BA4  D10D               	goto	l13315
 18789  001BA6                     u14480:
 18790  001BA6  D12D               	goto	l13321
 18791  001BA8                     l13231:
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;lorawan.c: 1862: {
 18795                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18796  001BA8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18797  001BAA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18798  001BAC  6ED9               	movwf	fsr2l,c
 18799  001BAE  0E00               	movlw	0
 18800  001BB0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18801  001BB2  6EDA               	movwf	fsr2h,c
 18802  001BB4  0E03               	movlw	3
 18803  001BB6  6EDF               	movwf	indf2,c
 18804                           
 18805                           ; BSR set to: 0
 18806  001BB8  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18810  001BBA  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18811  001BBC  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18812  001BBE  6ED9               	movwf	fsr2l,c
 18813  001BC0  0E00               	movlw	0
 18814  001BC2  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18815  001BC4  6EDA               	movwf	fsr2h,c
 18816  001BC6  6ADF               	clrf	indf2,c
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18820  001BC8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18821  001BCA  0D02               	mullw	2
 18822  001BCC  0EA9               	movlw	low (_loRa+169)
 18823  001BCE  24F3               	addwf	prodl,w,c
 18824  001BD0  6ED9               	movwf	fsr2l,c
 18825  001BD2  0E02               	movlw	high (_loRa+169)
 18826  001BD4  20F4               	addwfc	prodh,w,c
 18827  001BD6  6EDA               	movwf	fsr2h,c
 18828  001BD8  A0DF               	btfss	indf2,0,c
 18829  001BDA  D009               	goto	l13241
 18830                           
 18831                           ; BSR set to: 2
 18832                           ;lorawan.c: 1866: {
 18833                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18834  001BDC  0100               	movlb	0	; () banked
 18835  001BDE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18836  001BE0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18837  001BE2  6ED9               	movwf	fsr2l,c
 18838  001BE4  0E00               	movlw	0
 18839  001BE6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18840  001BE8  6EDA               	movwf	fsr2h,c
 18841  001BEA  0E00               	movlw	0
 18842  001BEC  80DB               	bsf	plusw2,0,c
 18843  001BEE                     l13241:
 18844                           
 18845                           ;lorawan.c: 1868: }
 18846                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18847  001BEE  0100               	movlb	0	; () banked
 18848  001BF0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18849  001BF2  0D02               	mullw	2
 18850  001BF4  0EA9               	movlw	low (_loRa+169)
 18851  001BF6  24F3               	addwf	prodl,w,c
 18852  001BF8  6ED9               	movwf	fsr2l,c
 18853  001BFA  0E02               	movlw	high (_loRa+169)
 18854  001BFC  20F4               	addwfc	prodh,w,c
 18855  001BFE  6EDA               	movwf	fsr2h,c
 18856  001C00  A2DF               	btfss	indf2,1,c
 18857  001C02  D008               	goto	l13245
 18858                           
 18859                           ; BSR set to: 2
 18860                           ;lorawan.c: 1871: {
 18861                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18862  001C04  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18863  001C06  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18864  001C08  6ED9               	movwf	fsr2l,c
 18865  001C0A  0E00               	movlw	0
 18866  001C0C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18867  001C0E  6EDA               	movwf	fsr2h,c
 18868  001C10  0E00               	movlw	0
 18869  001C12  82DB               	bsf	plusw2,1,c
 18870  001C14                     l13245:
 18871                           
 18872                           ;lorawan.c: 1873: }
 18873                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18874  001C14  0100               	movlb	0	; () banked
 18875  001C16  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18876  001C18  0D02               	mullw	2
 18877  001C1A  0EA9               	movlw	low (_loRa+169)
 18878  001C1C  24F3               	addwf	prodl,w,c
 18879  001C1E  6ED9               	movwf	fsr2l,c
 18880  001C20  0E02               	movlw	high (_loRa+169)
 18881  001C22  20F4               	addwfc	prodh,w,c
 18882  001C24  6EDA               	movwf	fsr2h,c
 18883  001C26  A4DF               	btfss	indf2,2,c
 18884  001C28  D009               	goto	l13249
 18885  001C2A                     l13247:
 18886                           
 18887                           ; BSR set to: 2
 18888                           ;lorawan.c: 1876: {
 18889                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18890  001C2A  0100               	movlb	0	; () banked
 18891  001C2C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18892  001C2E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18893  001C30  6ED9               	movwf	fsr2l,c
 18894  001C32  0E00               	movlw	0
 18895  001C34  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18896  001C36  6EDA               	movwf	fsr2h,c
 18897  001C38  0E00               	movlw	0
 18898  001C3A  84DB               	bsf	plusw2,2,c
 18899  001C3C                     l13249:
 18900                           
 18901                           ;lorawan.c: 1878: }
 18902                           ;lorawan.c: 1879: bufferIndex ++;
 18903  001C3C  0100               	movlb	0	; () banked
 18904  001C3E  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18905                           
 18906                           ;lorawan.c: 1880: }
 18907                           ;lorawan.c: 1881: break;
 18908  001C40  D0D9               	goto	l13317
 18909  001C42                     l13251:
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;lorawan.c: 1884: {
 18913                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18914  001C42  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18915  001C44  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18916  001C46  6ED9               	movwf	fsr2l,c
 18917  001C48  0E00               	movlw	0
 18918  001C4A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18919  001C4C  6EDA               	movwf	fsr2h,c
 18920  001C4E  0E05               	movlw	5
 18921  001C50  6EDF               	movwf	indf2,c
 18922                           
 18923                           ; BSR set to: 0
 18924  001C52  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18928  001C54  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18929  001C56  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18930  001C58  6ED9               	movwf	fsr2l,c
 18931  001C5A  0E00               	movlw	0
 18932  001C5C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18933  001C5E  6EDA               	movwf	fsr2h,c
 18934  001C60  6ADF               	clrf	indf2,c
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18938  001C62  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18939  001C64  0D02               	mullw	2
 18940  001C66  0EA9               	movlw	low (_loRa+169)
 18941  001C68  24F3               	addwf	prodl,w,c
 18942  001C6A  6ED9               	movwf	fsr2l,c
 18943  001C6C  0E02               	movlw	high (_loRa+169)
 18944  001C6E  20F4               	addwfc	prodh,w,c
 18945  001C70  6EDA               	movwf	fsr2h,c
 18946  001C72  A6DF               	btfss	indf2,3,c
 18947  001C74  D009               	goto	l13261
 18948                           
 18949                           ; BSR set to: 2
 18950                           ;lorawan.c: 1888: {
 18951                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18952  001C76  0100               	movlb	0	; () banked
 18953  001C78  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18954  001C7A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18955  001C7C  6ED9               	movwf	fsr2l,c
 18956  001C7E  0E00               	movlw	0
 18957  001C80  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18958  001C82  6EDA               	movwf	fsr2h,c
 18959  001C84  0E00               	movlw	0
 18960  001C86  80DB               	bsf	plusw2,0,c
 18961  001C88                     l13261:
 18962                           
 18963                           ;lorawan.c: 1890: }
 18964                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18965  001C88  0100               	movlb	0	; () banked
 18966  001C8A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18967  001C8C  0D02               	mullw	2
 18968  001C8E  0EA9               	movlw	low (_loRa+169)
 18969  001C90  24F3               	addwf	prodl,w,c
 18970  001C92  6ED9               	movwf	fsr2l,c
 18971  001C94  0E02               	movlw	high (_loRa+169)
 18972  001C96  20F4               	addwfc	prodh,w,c
 18973  001C98  6EDA               	movwf	fsr2h,c
 18974  001C9A  A8DF               	btfss	indf2,4,c
 18975  001C9C  D008               	goto	l13265
 18976                           
 18977                           ; BSR set to: 2
 18978                           ;lorawan.c: 1893: {
 18979                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18980  001C9E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18981  001CA0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18982  001CA2  6ED9               	movwf	fsr2l,c
 18983  001CA4  0E00               	movlw	0
 18984  001CA6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18985  001CA8  6EDA               	movwf	fsr2h,c
 18986  001CAA  0E00               	movlw	0
 18987  001CAC  82DB               	bsf	plusw2,1,c
 18988  001CAE                     l13265:
 18989                           
 18990                           ;lorawan.c: 1895: }
 18991                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18992  001CAE  0100               	movlb	0	; () banked
 18993  001CB0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18994  001CB2  0D02               	mullw	2
 18995  001CB4  0EA9               	movlw	low (_loRa+169)
 18996  001CB6  24F3               	addwf	prodl,w,c
 18997  001CB8  6ED9               	movwf	fsr2l,c
 18998  001CBA  0E02               	movlw	high (_loRa+169)
 18999  001CBC  20F4               	addwfc	prodh,w,c
 19000  001CBE  6EDA               	movwf	fsr2h,c
 19001  001CC0  AADF               	btfss	indf2,5,c
 19002  001CC2  D7BC               	goto	l13249
 19003  001CC4  D7B2               	goto	l13247
 19004  001CC6                     l13271:
 19005                           
 19006                           ; BSR set to: 0
 19007                           ;lorawan.c: 1907: {
 19008                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 19009  001CC6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19010  001CC8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19011  001CCA  6ED9               	movwf	fsr2l,c
 19012  001CCC  0E00               	movlw	0
 19013  001CCE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19014  001CD0  6EDA               	movwf	fsr2h,c
 19015  001CD2  0E06               	movlw	6
 19016  001CD4  6EDF               	movwf	indf2,c
 19017                           
 19018                           ; BSR set to: 0
 19019  001CD6  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19020                           
 19021                           ; BSR set to: 0
 19022                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 19023  001CD8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19024  001CDA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19025  001CDC  6ED9               	movwf	fsr2l,c
 19026  001CDE  0E00               	movlw	0
 19027  001CE0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19028  001CE2  6EDA               	movwf	fsr2h,c
 19029  001CE4  C2E0  FFDF         	movff	_loRa+224,indf2
 19030  001CE8  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19031                           
 19032                           ; BSR set to: 0
 19033                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 19034  001CEA  EC61  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19035  001CEE  0A80               	xorlw	128
 19036  001CF0  0FA0               	addlw	160
 19037  001CF2  E305               	bnc	l13281
 19038                           
 19039                           ; BSR set to: 1
 19040  001CF4  EC61  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19041  001CF8  0A80               	xorlw	128
 19042  001CFA  0F60               	addlw	-160
 19043  001CFC  E309               	bnc	l13285
 19044  001CFE                     l13281:
 19045                           
 19046                           ; BSR set to: 1
 19047                           ;lorawan.c: 1911: {
 19048                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 19049  001CFE  0100               	movlb	0	; () banked
 19050  001D00  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19051  001D02  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19052  001D04  6ED9               	movwf	fsr2l,c
 19053  001D06  0E00               	movlw	0
 19054  001D08  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19055  001D0A  6EDA               	movwf	fsr2h,c
 19056  001D0C  0E20               	movlw	32
 19057  001D0E  D00A               	goto	L10
 19058  001D10                     l13285:
 19059                           
 19060                           ; BSR set to: 1
 19061                           ;lorawan.c: 1914: else
 19062                           ;lorawan.c: 1915: {
 19063                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 19064  001D10  0100               	movlb	0	; () banked
 19065  001D12  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19066  001D14  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19067  001D16  6ED9               	movwf	fsr2l,c
 19068  001D18  0E00               	movlw	0
 19069  001D1A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19070  001D1C  6EDA               	movwf	fsr2h,c
 19071  001D1E  EC61  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19072  001D22  0B3F               	andlw	63
 19073  001D24                     L10:
 19074  001D24  6EDF               	movwf	indf2,c
 19075  001D26  D78A               	goto	l13249
 19076  001D28                     l13289:
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;lorawan.c: 1922: {
 19080                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 19081  001D28  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19082  001D2A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19083  001D2C  6ED9               	movwf	fsr2l,c
 19084  001D2E  0E00               	movlw	0
 19085  001D30  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19086  001D32  6EDA               	movwf	fsr2h,c
 19087  001D34  0E07               	movlw	7
 19088  001D36  6EDF               	movwf	indf2,c
 19089                           
 19090                           ; BSR set to: 0
 19091  001D38  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 19095  001D3A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19096  001D3C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19097  001D3E  6ED9               	movwf	fsr2l,c
 19098  001D40  0E00               	movlw	0
 19099  001D42  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19100  001D44  6EDA               	movwf	fsr2h,c
 19101  001D46  6ADF               	clrf	indf2,c
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 19105  001D48  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19106  001D4A  0D02               	mullw	2
 19107  001D4C  0EA9               	movlw	low (_loRa+169)
 19108  001D4E  24F3               	addwf	prodl,w,c
 19109  001D50  6ED9               	movwf	fsr2l,c
 19110  001D52  0E02               	movlw	high (_loRa+169)
 19111  001D54  20F4               	addwfc	prodh,w,c
 19112  001D56  6EDA               	movwf	fsr2h,c
 19113  001D58  AEDF               	btfss	indf2,7,c
 19114  001D5A  D009               	goto	l13299
 19115                           
 19116                           ; BSR set to: 2
 19117                           ;lorawan.c: 1926: {
 19118                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 19119  001D5C  0100               	movlb	0	; () banked
 19120  001D5E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19121  001D60  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19122  001D62  6ED9               	movwf	fsr2l,c
 19123  001D64  0E00               	movlw	0
 19124  001D66  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19125  001D68  6EDA               	movwf	fsr2h,c
 19126  001D6A  0E00               	movlw	0
 19127  001D6C  80DB               	bsf	plusw2,0,c
 19128  001D6E                     l13299:
 19129                           
 19130                           ;lorawan.c: 1928: }
 19131                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19132  001D6E  0100               	movlb	0	; () banked
 19133  001D70  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19134  001D72  0D02               	mullw	2
 19135  001D74  0EA9               	movlw	low (_loRa+169)
 19136  001D76  24F3               	addwf	prodl,w,c
 19137  001D78  6ED9               	movwf	fsr2l,c
 19138  001D7A  0E02               	movlw	high (_loRa+169)
 19139  001D7C  20F4               	addwfc	prodh,w,c
 19140  001D7E  6EDA               	movwf	fsr2h,c
 19141  001D80  ACDF               	btfss	indf2,6,c
 19142  001D82  D75C               	goto	l13249
 19143                           
 19144                           ; BSR set to: 2
 19145                           ;lorawan.c: 1931: {
 19146                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 19147  001D84  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19148  001D86  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19149  001D88  6ED9               	movwf	fsr2l,c
 19150  001D8A  0E00               	movlw	0
 19151  001D8C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19152  001D8E  6EDA               	movwf	fsr2h,c
 19153  001D90  0E00               	movlw	0
 19154  001D92  82DB               	bsf	plusw2,1,c
 19155  001D94  D753               	goto	l13249
 19156  001D96                     l2283:
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;lorawan.c: 1939: {
 19160                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 19161  001D96  0102               	movlb	2	; () banked
 19162  001D98  69DD               	setf	(_loRa+221)& (0+255),b
 19163                           
 19164                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 19165  001D9A  6BDE               	clrf	(_loRa+222)& (0+255),b
 19166  001D9C                     l13305:
 19167                           
 19168                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 19169  001D9C  0100               	movlb	0	; () banked
 19170  001D9E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19171  001DA0  0D02               	mullw	2
 19172  001DA2  0EA8               	movlw	low (_loRa+168)
 19173  001DA4  24F3               	addwf	prodl,w,c
 19174  001DA6  6ED9               	movwf	fsr2l,c
 19175  001DA8  0E02               	movlw	high (_loRa+168)
 19176  001DAA  20F4               	addwfc	prodh,w,c
 19177  001DAC  6EDA               	movwf	fsr2h,c
 19178  001DAE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19179  001DB0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19180  001DB2  6EE9               	movwf	fsr0l,c
 19181  001DB4  0E00               	movlw	0
 19182  001DB6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19183  001DB8  6EEA               	movwf	fsr0h,c
 19184  001DBA  CFDF FFEF          	movff	indf2,indf0
 19185  001DBE  D73E               	goto	l13249
 19186  001DC0                     l13315:
 19187                           
 19188                           ; BSR set to: 0
 19189  001DC0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19190  001DC2  0D02               	mullw	2
 19191  001DC4  0EA8               	movlw	low (_loRa+168)
 19192  001DC6  24F3               	addwf	prodl,w,c
 19193  001DC8  6ED9               	movwf	fsr2l,c
 19194  001DCA  0E02               	movlw	high (_loRa+168)
 19195  001DCC  20F4               	addwfc	prodh,w,c
 19196  001DCE  6EDA               	movwf	fsr2h,c
 19197  001DD0  50DF               	movf	indf2,w,c
 19198                           
 19199                           ; Switch size 1, requested type "speed"
 19200                           ; Number of cases is 7, Range of values is 2 to 8
 19201                           ; switch strategies available:
 19202                           ; Name         Instructions Cycles
 19203                           ; simple_byte           22    12 (average)
 19204                           ;	Chosen strategy is simple_byte
 19205  001DD2  0A02               	xorlw	2	; case 2
 19206  001DD4  E0E0               	bz	l2283
 19207  001DD6  0A01               	xorlw	1	; case 3
 19208  001DD8  E101 D6E6          	bz	l13231
 19209  001DDC  0A07               	xorlw	7	; case 4
 19210  001DDE  E0DE               	bz	l13305
 19211  001DE0  0A01               	xorlw	1	; case 5
 19212  001DE2  E101 D72E          	bz	l13251
 19213  001DE6  0A03               	xorlw	3	; case 6
 19214  001DE8  E101 D76D          	bz	l13271
 19215  001DEC  0A01               	xorlw	1	; case 7
 19216  001DEE  E09C               	bz	l13289
 19217  001DF0  0A0F               	xorlw	15	; case 8
 19218  001DF2  E0D4               	bz	l13305
 19219  001DF4                     l13317:
 19220                           
 19221                           ; BSR set to: 0
 19222  001DF4  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19223  001DF6                     l13319:
 19224                           
 19225                           ; BSR set to: 0
 19226  001DF6  0102               	movlb	2	; () banked
 19227  001DF8  51A7               	movf	(_loRa+167)& (0+255),w,b
 19228  001DFA  0100               	movlb	0	; () banked
 19229  001DFC  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19230  001DFE  E201 D691          	bnc	l13223
 19231  001E02                     l13321:
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;lorawan.c: 1957: }
 19235                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19236  001E02  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19237  001E04  6ED9               	movwf	fsr2l,c
 19238  001E06  6ADA               	clrf	fsr2h,c
 19239  001E08  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19240                           
 19241                           ; BSR set to: 0
 19242  001E0C  0012               	return		;funcret
 19243  001E0E                     __end_of_IncludeMacCommandsResponse:
 19244                           	opt stack 0
 19245                           tosu	equ	0xFFF
 19246                           tosh	equ	0xFFE
 19247                           tosl	equ	0xFFD
 19248                           pclath	equ	0xFFA
 19249                           tblptru	equ	0xFF8
 19250                           tblptrh	equ	0xFF7
 19251                           tblptrl	equ	0xFF6
 19252                           tablat	equ	0xFF5
 19253                           prodh	equ	0xFF4
 19254                           prodl	equ	0xFF3
 19255                           intcon	equ	0xFF2
 19256                           intcon2	equ	0xFF1
 19257                           intcon3	equ	0xFF0
 19258                           indf0	equ	0xFEF
 19259                           postinc0	equ	0xFEE
 19260                           fsr0h	equ	0xFEA
 19261                           fsr0l	equ	0xFE9
 19262                           wreg	equ	0xFE8
 19263                           postinc1	equ	0xFE6
 19264                           postdec1	equ	0xFE5
 19265                           plusw1	equ	0xFE3
 19266                           fsr1h	equ	0xFE2
 19267                           fsr1l	equ	0xFE1
 19268                           indf2	equ	0xFDF
 19269                           postinc2	equ	0xFDE
 19270                           postdec2	equ	0xFDD
 19271                           plusw2	equ	0xFDB
 19272                           fsr2h	equ	0xFDA
 19273                           fsr2l	equ	0xFD9
 19274                           status	equ	0xFD8
 19275                           
 19276 ;; *************** function _RADIO_GetPacketSnr *****************
 19277 ;; Defined at:
 19278 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19279 ;; Parameters:    Size  Location     Type
 19280 ;;		None
 19281 ;; Auto vars:     Size  Location     Type
 19282 ;;		None
 19283 ;; Return value:  Size  Location     Type
 19284 ;;                  1    wreg      char 
 19285 ;; Registers used:
 19286 ;;		wreg, status,2
 19287 ;; Tracked objects:
 19288 ;;		On entry : E/0
 19289 ;;		On exit  : F/1
 19290 ;;		Unchanged: 0/0
 19291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19296 ;;Total ram usage:        0 bytes
 19297 ;; Hardware stack levels used:    1
 19298 ;; Hardware stack levels required when called:    7
 19299 ;; This function calls:
 19300 ;;		Nothing
 19301 ;; This function is called by:
 19302 ;;		_IncludeMacCommandsResponse
 19303 ;; This function uses a non-reentrant model
 19304 ;;
 19305                           
 19306                           	psect	text101
 19307  0078C2                     __ptext101:
 19308                           	opt stack 0
 19309  0078C2                     _RADIO_GetPacketSnr:
 19310                           	opt stack 19
 19311                           
 19312                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19313                           
 19314                           ; BSR set to: 0
 19315                           ;incstack = 0
 19316  0078C2  0101               	movlb	1	; () banked
 19317  0078C4  51B0               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19318                           
 19319                           ; BSR set to: 1
 19320  0078C6  0012               	return		;funcret
 19321  0078C8                     __end_of_RADIO_GetPacketSnr:
 19322                           	opt stack 0
 19323                           tosu	equ	0xFFF
 19324                           tosh	equ	0xFFE
 19325                           tosl	equ	0xFFD
 19326                           pclath	equ	0xFFA
 19327                           tblptru	equ	0xFF8
 19328                           tblptrh	equ	0xFF7
 19329                           tblptrl	equ	0xFF6
 19330                           tablat	equ	0xFF5
 19331                           prodh	equ	0xFF4
 19332                           prodl	equ	0xFF3
 19333                           intcon	equ	0xFF2
 19334                           intcon2	equ	0xFF1
 19335                           intcon3	equ	0xFF0
 19336                           indf0	equ	0xFEF
 19337                           postinc0	equ	0xFEE
 19338                           fsr0h	equ	0xFEA
 19339                           fsr0l	equ	0xFE9
 19340                           wreg	equ	0xFE8
 19341                           postinc1	equ	0xFE6
 19342                           postdec1	equ	0xFE5
 19343                           plusw1	equ	0xFE3
 19344                           fsr1h	equ	0xFE2
 19345                           fsr1l	equ	0xFE1
 19346                           indf2	equ	0xFDF
 19347                           postinc2	equ	0xFDE
 19348                           postdec2	equ	0xFDD
 19349                           plusw2	equ	0xFDB
 19350                           fsr2h	equ	0xFDA
 19351                           fsr2l	equ	0xFD9
 19352                           status	equ	0xFD8
 19353                           
 19354 ;; *************** function _FindSmallestDataRate *****************
 19355 ;; Defined at:
 19356 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;		None
 19359 ;; Auto vars:     Size  Location     Type
 19360 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19361 ;;  i               1    6[BANK0 ] unsigned char 
 19362 ;;  found           1    5[BANK0 ] unsigned char 
 19363 ;; Return value:  Size  Location     Type
 19364 ;;                  1    wreg      unsigned char 
 19365 ;; Registers used:
 19366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19367 ;; Tracked objects:
 19368 ;;		On entry : F/2
 19369 ;;		On exit  : F/0
 19370 ;;		Unchanged: 0/0
 19371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19373 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19375 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19376 ;;Total ram usage:        4 bytes
 19377 ;; Hardware stack levels used:    1
 19378 ;; Hardware stack levels required when called:    7
 19379 ;; This function calls:
 19380 ;;		Nothing
 19381 ;; This function is called by:
 19382 ;;		_AckRetransmissionCallback
 19383 ;;		_AssemblePacket
 19384 ;; This function uses a non-reentrant model
 19385 ;;
 19386                           
 19387                           	psect	text102
 19388  0059B8                     __ptext102:
 19389                           	opt stack 0
 19390  0059B8                     _FindSmallestDataRate:
 19391                           	opt stack 20
 19392                           
 19393                           ; BSR set to: 2
 19394                           ;lorawan.c: 1966: bool found = 0;
 19395                           
 19396                           ; BSR set to: 1
 19397                           ;incstack = 0
 19398  0059B8  0100               	movlb	0	; () banked
 19399  0059BA  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19403  0059BC  0102               	movlb	2	; () banked
 19404  0059BE  51DF               	movf	(_loRa+223)& (0+255),w,b
 19405  0059C0  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19406  0059C2  E24A               	bc	l13149
 19407                           
 19408                           ; BSR set to: 2
 19409                           ;lorawan.c: 1969: {
 19410                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19411  0059C4  05DF               	decf	(_loRa+223)& (0+255),w,b
 19412  0059C6  0100               	movlb	0	; () banked
 19413  0059C8  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19414                           
 19415                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19416  0059CA  D03A               	goto	l13141
 19417  0059CC                     l2292:
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;lorawan.c: 1973: {
 19421                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19422  0059CC  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19423  0059CE  D02B               	goto	l13133
 19424  0059D0                     l13123:
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;lorawan.c: 1975: {
 19428                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19429  0059D0  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19430  0059D2  0D0E               	mullw	14
 19431  0059D4  0E05               	movlw	low (_Channels+5)
 19432  0059D6  24F3               	addwf	prodl,w,c
 19433  0059D8  6ED9               	movwf	fsr2l,c
 19434  0059DA  0E04               	movlw	high (_Channels+5)
 19435  0059DC  20F4               	addwfc	prodh,w,c
 19436  0059DE  6EDA               	movwf	fsr2h,c
 19437  0059E0  50DF               	movf	223,w,c
 19438  0059E2  0B0F               	andlw	15
 19439  0059E4  0100               	movlb	0	; () banked
 19440  0059E6  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19441  0059E8  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19442  0059EA  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19443  0059EC  E31B               	bnc	l13131
 19444                           
 19445                           ; BSR set to: 0
 19446  0059EE  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19447  0059F0  0D0E               	mullw	14
 19448  0059F2  0E05               	movlw	low (_Channels+5)
 19449  0059F4  24F3               	addwf	prodl,w,c
 19450  0059F6  6ED9               	movwf	fsr2l,c
 19451  0059F8  0E04               	movlw	high (_Channels+5)
 19452  0059FA  20F4               	addwfc	prodh,w,c
 19453  0059FC  6EDA               	movwf	fsr2h,c
 19454  0059FE  38DF               	swapf	223,w,c
 19455  005A00  0B0F               	andlw	15
 19456  005A02  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19457  005A04  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19458  005A06  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19459  005A08  E30D               	bnc	l13131
 19460                           
 19461                           ; BSR set to: 0
 19462  005A0A  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19463  005A0C  0D0E               	mullw	14
 19464  005A0E  0E04               	movlw	low (_Channels+4)
 19465  005A10  24F3               	addwf	prodl,w,c
 19466  005A12  6ED9               	movwf	fsr2l,c
 19467  005A14  0E04               	movlw	high (_Channels+4)
 19468  005A16  20F4               	addwfc	prodh,w,c
 19469  005A18  6EDA               	movwf	fsr2h,c
 19470  005A1A  04DE               	decf	postinc2,w,c
 19471  005A1C  E103               	bnz	l13131
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;lorawan.c: 1977: {
 19475                           ;lorawan.c: 1978: found = 1;
 19476  005A1E  0E01               	movlw	1
 19477  005A20  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19478                           
 19479                           ;lorawan.c: 1979: break;
 19480  005A22  D006               	goto	l13135
 19481  005A24                     l13131:
 19482                           
 19483                           ; BSR set to: 0
 19484  005A24  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19485  005A26                     l13133:
 19486                           
 19487                           ; BSR set to: 0
 19488  005A26  0102               	movlb	2	; () banked
 19489  005A28  51ED               	movf	(_loRa+237)& (0+255),w,b
 19490  005A2A  0100               	movlb	0	; () banked
 19491  005A2C  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19492  005A2E  E3D0               	bnc	l13123
 19493  005A30                     l13135:
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;lorawan.c: 1980: }
 19497                           ;lorawan.c: 1981: }
 19498                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19499  005A30  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19500  005A32  E106               	bnz	l13141
 19501                           
 19502                           ; BSR set to: 0
 19503  005A34  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19504  005A36  0102               	movlb	2	; () banked
 19505  005A38  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19506  005A3A  E202               	bc	l13141
 19507                           
 19508                           ; BSR set to: 2
 19509                           ;lorawan.c: 1983: {
 19510                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19511  005A3C  0100               	movlb	0	; () banked
 19512  005A3E  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19513  005A40                     l13141:
 19514  005A40  0100               	movlb	0	; () banked
 19515  005A42  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19516  005A44  E105               	bnz	l13145
 19517                           
 19518                           ; BSR set to: 0
 19519  005A46  0102               	movlb	2	; () banked
 19520  005A48  51EB               	movf	(_loRa+235)& (0+255),w,b
 19521  005A4A  0100               	movlb	0	; () banked
 19522  005A4C  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19523  005A4E  E2BE               	bc	l2292
 19524  005A50                     l13145:
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;lorawan.c: 1985: }
 19528                           ;lorawan.c: 1986: }
 19529                           ;lorawan.c: 1988: if (found == 1)
 19530  005A50  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19531  005A52  E102               	bnz	l13149
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;lorawan.c: 1989: {
 19535                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19536  005A54  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19537  005A58                     l13149:
 19538                           
 19539                           ;lorawan.c: 1991: }
 19540                           ;lorawan.c: 1992: }
 19541                           ;lorawan.c: 1994: return found;
 19542  005A58  0100               	movlb	0	; () banked
 19543  005A5A  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19544                           
 19545                           ; BSR set to: 0
 19546  005A5C  0012               	return		;funcret
 19547  005A5E                     __end_of_FindSmallestDataRate:
 19548                           	opt stack 0
 19549                           tosu	equ	0xFFF
 19550                           tosh	equ	0xFFE
 19551                           tosl	equ	0xFFD
 19552                           pclath	equ	0xFFA
 19553                           tblptru	equ	0xFF8
 19554                           tblptrh	equ	0xFF7
 19555                           tblptrl	equ	0xFF6
 19556                           tablat	equ	0xFF5
 19557                           prodh	equ	0xFF4
 19558                           prodl	equ	0xFF3
 19559                           intcon	equ	0xFF2
 19560                           intcon2	equ	0xFF1
 19561                           intcon3	equ	0xFF0
 19562                           indf0	equ	0xFEF
 19563                           postinc0	equ	0xFEE
 19564                           fsr0h	equ	0xFEA
 19565                           fsr0l	equ	0xFE9
 19566                           wreg	equ	0xFE8
 19567                           postinc1	equ	0xFE6
 19568                           postdec1	equ	0xFE5
 19569                           plusw1	equ	0xFE3
 19570                           fsr1h	equ	0xFE2
 19571                           fsr1l	equ	0xFE1
 19572                           indf2	equ	0xFDF
 19573                           postinc2	equ	0xFDE
 19574                           postdec2	equ	0xFDD
 19575                           plusw2	equ	0xFDB
 19576                           fsr2h	equ	0xFDA
 19577                           fsr2l	equ	0xFD9
 19578                           status	equ	0xFD8
 19579                           
 19580 ;; *************** function _EncryptFRMPayload *****************
 19581 ;; Defined at:
 19582 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19583 ;; Parameters:    Size  Location     Type
 19584 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 19585 ;;		 -> payload(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19586 ;;  bufferLength    1   54[BANK0 ] unsigned char 
 19587 ;;  dir             1   55[BANK0 ] unsigned char 
 19588 ;;  frameCounter    4   56[BANK0 ] unsigned long 
 19589 ;;  key             2   60[BANK0 ] PTR unsigned char 
 19590 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19591 ;;  macBufferInd    1   62[BANK0 ] unsigned char 
 19592 ;;  bufferToBeEn    2   63[BANK0 ] PTR unsigned char 
 19593 ;;		 -> macBuffer(271), radioBuffer(271), 
 19594 ;;  multicastSta    1   65[BANK0 ] unsigned char 
 19595 ;; Auto vars:     Size  Location     Type
 19596 ;;  j               1   73[BANK0 ] unsigned char 
 19597 ;;  i               1   72[BANK0 ] unsigned char 
 19598 ;;  k               1   71[BANK0 ] unsigned char 
 19599 ;; Return value:  Size  Location     Type
 19600 ;;                  1    wreg      void 
 19601 ;; Registers used:
 19602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19603 ;; Tracked objects:
 19604 ;;		On entry : F/0
 19605 ;;		On exit  : F/0
 19606 ;;		Unchanged: 0/0
 19607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19608 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19609 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19610 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19611 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19612 ;;Total ram usage:       22 bytes
 19613 ;; Hardware stack levels used:    1
 19614 ;; Hardware stack levels required when called:   10
 19615 ;; This function calls:
 19616 ;;		_AESEncodeLoRa
 19617 ;;		_AssembleEncryptionBlock
 19618 ;; This function is called by:
 19619 ;;		_LORAWAN_RxDone
 19620 ;;		_AssemblePacket
 19621 ;; This function uses a non-reentrant model
 19622 ;;
 19623                           
 19624                           	psect	text103
 19625  004136                     __ptext103:
 19626                           	opt stack 0
 19627  004136                     _EncryptFRMPayload:
 19628                           	opt stack 17
 19629                           
 19630                           ; BSR set to: 0
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;incstack = 0
 19634  004136  6BA8               	clrf	EncryptFRMPayload@i& (0+255),b
 19635  004138  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19636                           
 19637                           ; BSR set to: 0
 19638                           ;lorawan.c: 2209: k = bufferLength / 16;
 19639  00413A  3996               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19640  00413C  0B0F               	andlw	15
 19641  00413E  6FA7               	movwf	EncryptFRMPayload@k& (0+255),b
 19642                           
 19643                           ; BSR set to: 0
 19644                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19645  004140  0E01               	movlw	1
 19646  004142  6FA8               	movwf	EncryptFRMPayload@i& (0+255),b
 19647  004144  D051               	goto	l13185
 19648  004146                     l13167:
 19649                           
 19650                           ; BSR set to: 0
 19651                           ;lorawan.c: 2211: {
 19652                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19653  004146  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19654  00414A  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19655  00414E  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19656  004152  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19657  004156  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19658  00415A  0E01               	movlw	1
 19659  00415C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19660  00415E  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19661  004162  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19662  004164  EC83  F02C         	call	_AssembleEncryptionBlock
 19663                           
 19664                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19665  004168  0EB4               	movlw	low _aesBuffer
 19666  00416A  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19667  00416C  0E01               	movlw	high _aesBuffer
 19668  00416E  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19669  004170  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19670  004174  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19671  004178  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 19672                           
 19673                           ; BSR set to: 0
 19674                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19675  00417C  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19676  00417E                     l13175:
 19677                           
 19678                           ; BSR set to: 0
 19679                           ;lorawan.c: 2216: {
 19680                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19681  00417E  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19682  004180  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19683  004182  6ED9               	movwf	fsr2l,c
 19684  004184  0E00               	movlw	0
 19685  004186  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19686  004188  6EDA               	movwf	fsr2h,c
 19687  00418A  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19688  00418C  6FA2               	movwf	??_EncryptFRMPayload& (0+255),b
 19689  00418E  6BA3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19690  004190  3BA2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19691  004192  3BA3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19692  004194  0EF0               	movlw	240
 19693  004196  17A3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19694  004198  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19695  00419A  0B0F               	andlw	15
 19696  00419C  13A3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19697  00419E  0EF0               	movlw	240
 19698  0041A0  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19699  0041A2  C094  F0A4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19700  0041A6  C095  F0A5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19701  0041AA  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19702  0041AC  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19703  0041AE  51A3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19704  0041B0  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19705  0041B2  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19706  0041B4  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19707  0041B6  0E00               	movlw	0
 19708  0041B8  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19709  0041BA  0EF0               	movlw	240
 19710  0041BC  25A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19711  0041BE  6EE9               	movwf	fsr0l,c
 19712  0041C0  0EFF               	movlw	255
 19713  0041C2  21A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19714  0041C4  6EEA               	movwf	fsr0h,c
 19715  0041C6  50EF               	movf	indf0,w,c
 19716  0041C8  6FA6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19717  0041CA  0EB4               	movlw	low _aesBuffer
 19718  0041CC  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19719  0041CE  6EE9               	movwf	fsr0l,c
 19720  0041D0  6AEA               	clrf	fsr0h,c
 19721  0041D2  0E01               	movlw	high _aesBuffer
 19722  0041D4  22EA               	addwfc	fsr0h,f,c
 19723  0041D6  50EF               	movf	indf0,w,c
 19724  0041D8  19A6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19725  0041DA  6EDF               	movwf	indf2,c
 19726                           
 19727                           ; BSR set to: 0
 19728  0041DC  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19729                           
 19730                           ; BSR set to: 0
 19731  0041DE  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19732                           
 19733                           ; BSR set to: 0
 19734  0041E0  0E0F               	movlw	15
 19735  0041E2  65A9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19736  0041E4  D7CC               	goto	l13175
 19737                           
 19738                           ; BSR set to: 0
 19739  0041E6  2BA8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19740  0041E8                     l13185:
 19741                           
 19742                           ; BSR set to: 0
 19743  0041E8  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19744  0041EA  5DA7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19745  0041EC  E2AC               	bc	l13167
 19746                           
 19747                           ; BSR set to: 0
 19748                           ;lorawan.c: 2218: }
 19749                           ;lorawan.c: 2219: }
 19750                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19751  0041EE  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19752  0041F2  0E0F               	movlw	15
 19753  0041F4  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19754  0041F6  B4D8               	btfsc	status,2,c
 19755  0041F8  0C0F               	retlw	15
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;lorawan.c: 2222: {
 19759                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19760  0041FA  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19761  0041FE  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19762  004202  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19763  004206  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19764  00420A  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19765  00420E  0E01               	movlw	1
 19766  004210  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19767  004212  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19768  004216  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19769  004218  EC83  F02C         	call	_AssembleEncryptionBlock
 19770                           
 19771                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19772  00421C  0EB4               	movlw	low _aesBuffer
 19773  00421E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19774  004220  0E01               	movlw	high _aesBuffer
 19775  004222  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19776  004224  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19777  004228  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19778  00422C  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19782  004230  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19783  004232  D023               	goto	l13199
 19784  004234                     l13193:
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;lorawan.c: 2227: {
 19788                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19789  004234  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19790  004236  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19791  004238  6ED9               	movwf	fsr2l,c
 19792  00423A  0E00               	movlw	0
 19793  00423C  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19794  00423E  6EDA               	movwf	fsr2h,c
 19795  004240  51A7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19796  004242  0D10               	mullw	16
 19797  004244  C094  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19798  004248  C095  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19799  00424C  50F3               	movf	prodl,w,c
 19800  00424E  27A2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19801  004250  50F4               	movf	prodh,w,c
 19802  004252  23A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19803  004254  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19804  004256  25A2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19805  004258  6EE9               	movwf	fsr0l,c
 19806  00425A  0E00               	movlw	0
 19807  00425C  21A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19808  00425E  6EEA               	movwf	fsr0h,c
 19809  004260  50EF               	movf	indf0,w,c
 19810  004262  6FA4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19811  004264  0EB4               	movlw	low _aesBuffer
 19812  004266  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19813  004268  6EE9               	movwf	fsr0l,c
 19814  00426A  6AEA               	clrf	fsr0h,c
 19815  00426C  0E01               	movlw	high _aesBuffer
 19816  00426E  22EA               	addwfc	fsr0h,f,c
 19817  004270  50EF               	movf	indf0,w,c
 19818  004272  19A4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19819  004274  6EDF               	movwf	indf2,c
 19820                           
 19821                           ; BSR set to: 0
 19822  004276  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19823                           
 19824                           ; BSR set to: 0
 19825  004278  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19826  00427A                     l13199:
 19827                           
 19828                           ; BSR set to: 0
 19829  00427A  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19830  00427E  0E0F               	movlw	15
 19831  004280  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19832  004282  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19833  004284  5DA9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19834  004286  E3D6               	bnc	l13193
 19835                           
 19836                           ; BSR set to: 0
 19837  004288  0012               	return		;funcret
 19838  00428A                     __end_of_EncryptFRMPayload:
 19839                           	opt stack 0
 19840                           tosu	equ	0xFFF
 19841                           tosh	equ	0xFFE
 19842                           tosl	equ	0xFFD
 19843                           pclath	equ	0xFFA
 19844                           tblptru	equ	0xFF8
 19845                           tblptrh	equ	0xFF7
 19846                           tblptrl	equ	0xFF6
 19847                           tablat	equ	0xFF5
 19848                           prodh	equ	0xFF4
 19849                           prodl	equ	0xFF3
 19850                           intcon	equ	0xFF2
 19851                           intcon2	equ	0xFF1
 19852                           intcon3	equ	0xFF0
 19853                           indf0	equ	0xFEF
 19854                           postinc0	equ	0xFEE
 19855                           fsr0h	equ	0xFEA
 19856                           fsr0l	equ	0xFE9
 19857                           wreg	equ	0xFE8
 19858                           postinc1	equ	0xFE6
 19859                           postdec1	equ	0xFE5
 19860                           plusw1	equ	0xFE3
 19861                           fsr1h	equ	0xFE2
 19862                           fsr1l	equ	0xFE1
 19863                           indf2	equ	0xFDF
 19864                           postinc2	equ	0xFDE
 19865                           postdec2	equ	0xFDD
 19866                           plusw2	equ	0xFDB
 19867                           fsr2h	equ	0xFDA
 19868                           fsr2l	equ	0xFD9
 19869                           status	equ	0xFD8
 19870                           
 19871 ;; *************** function _AssembleEncryptionBlock *****************
 19872 ;; Defined at:
 19873 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19874 ;; Parameters:    Size  Location     Type
 19875 ;;  dir             1    wreg     unsigned char 
 19876 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19877 ;;  blockId         1   18[BANK0 ] unsigned char 
 19878 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19879 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19880 ;; Auto vars:     Size  Location     Type
 19881 ;;  dir             1   21[BANK0 ] unsigned char 
 19882 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19883 ;; Return value:  Size  Location     Type
 19884 ;;                  1    wreg      void 
 19885 ;; Registers used:
 19886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19887 ;; Tracked objects:
 19888 ;;		On entry : F/0
 19889 ;;		On exit  : F/0
 19890 ;;		Unchanged: 0/0
 19891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19892 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19895 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19896 ;;Total ram usage:        9 bytes
 19897 ;; Hardware stack levels used:    1
 19898 ;; Hardware stack levels required when called:    8
 19899 ;; This function calls:
 19900 ;;		_memcpy
 19901 ;;		_memset
 19902 ;; This function is called by:
 19903 ;;		_LORAWAN_RxDone
 19904 ;;		_AssemblePacket
 19905 ;;		_EncryptFRMPayload
 19906 ;; This function uses a non-reentrant model
 19907 ;;
 19908                           
 19909                           	psect	text104
 19910  005906                     __ptext104:
 19911                           	opt stack 0
 19912  005906                     _AssembleEncryptionBlock:
 19913                           	opt stack 18
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;incstack = 0
 19917                           ;AssembleEncryptionBlock@dir stored from wreg
 19918  005906  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19919                           
 19920                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19921  005908  0100               	movlb	0	; () banked
 19922  00590A  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19923                           
 19924                           ; BSR set to: 0
 19925                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19926  00590C  0EB4               	movlw	low _aesBuffer
 19927  00590E  6F64               	movwf	memset@p1& (0+255),b
 19928  005910  0E01               	movlw	high _aesBuffer
 19929  005912  6F65               	movwf	(memset@p1+1)& (0+255),b
 19930  005914  6B67               	clrf	(memset@c+1)& (0+255),b
 19931  005916  6B66               	clrf	memset@c& (0+255),b
 19932  005918  6B69               	clrf	(memset@n+1)& (0+255),b
 19933  00591A  0E10               	movlw	16
 19934  00591C  6F68               	movwf	memset@n& (0+255),b
 19935  00591E  ECEC  F038         	call	_memset	;wreg free
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19939  005922  C073  F1B4         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19943  005926  0E05               	movlw	5
 19944  005928  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19945                           
 19946                           ; BSR set to: 0
 19947                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19948  00592A  0EB4               	movlw	low _aesBuffer
 19949  00592C  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19950  00592E  6ED9               	movwf	fsr2l,c
 19951  005930  6ADA               	clrf	fsr2h,c
 19952  005932  0E01               	movlw	high _aesBuffer
 19953  005934  22DA               	addwfc	fsr2h,f,c
 19954  005936  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19955                           
 19956                           ; BSR set to: 0
 19957  00593A  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19958                           
 19959                           ; BSR set to: 0
 19960                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19961  00593C  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19962  00593E  E112               	bnz	l12727
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;lorawan.c: 2169: {
 19966                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19967  005940  0EB4               	movlw	low _aesBuffer
 19968  005942  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19969  005944  6F64               	movwf	memcpy@d1& (0+255),b
 19970  005946  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19971  005948  0E01               	movlw	high _aesBuffer
 19972  00594A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19973  00594C  0E1E               	movlw	low (_loRa+30)
 19974  00594E  6F66               	movwf	memcpy@s1& (0+255),b
 19975  005950  0E02               	movlw	high (_loRa+30)
 19976  005952  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19977  005954  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19978  005956  0E04               	movlw	4
 19979  005958  6F68               	movwf	memcpy@n& (0+255),b
 19980  00595A  EC0F  F034         	call	_memcpy	;wreg free
 19981  00595E                     l12725:
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19985  00595E  0E04               	movlw	4
 19986  005960  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19987                           
 19988                           ;lorawan.c: 2172: }
 19989  005962  D010               	goto	l12731
 19990  005964                     l12727:
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;lorawan.c: 2173: else
 19994                           ;lorawan.c: 2174: {
 19995                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19996  005964  0EB4               	movlw	low _aesBuffer
 19997  005966  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19998  005968  6F64               	movwf	memcpy@d1& (0+255),b
 19999  00596A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20000  00596C  0E01               	movlw	high _aesBuffer
 20001  00596E  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20002  005970  0E62               	movlw	low (_loRa+98)
 20003  005972  6F66               	movwf	memcpy@s1& (0+255),b
 20004  005974  0E02               	movlw	high (_loRa+98)
 20005  005976  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20006  005978  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20007  00597A  0E04               	movlw	4
 20008  00597C  6F68               	movwf	memcpy@n& (0+255),b
 20009  00597E  EC0F  F034         	call	_memcpy	;wreg free
 20010  005982  D7ED               	goto	l12725
 20011  005984                     l12731:
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;lorawan.c: 2177: }
 20015                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 20016  005984  0EB4               	movlw	low _aesBuffer
 20017  005986  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20018  005988  6F64               	movwf	memcpy@d1& (0+255),b
 20019  00598A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20020  00598C  0E01               	movlw	high _aesBuffer
 20021  00598E  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20022  005990  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 20023  005992  6F66               	movwf	memcpy@s1& (0+255),b
 20024  005994  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 20025  005996  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20026  005998  0E04               	movlw	4
 20027  00599A  6F68               	movwf	memcpy@n& (0+255),b
 20028  00599C  EC0F  F034         	call	_memcpy	;wreg free
 20029                           
 20030                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 20031  0059A0  0E04               	movlw	4
 20032  0059A2  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20033                           
 20034                           ; BSR set to: 0
 20035                           ;lorawan.c: 2182: bufferIndex ++;
 20036  0059A4  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 20040  0059A6  0EB4               	movlw	low _aesBuffer
 20041  0059A8  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20042  0059AA  6ED9               	movwf	fsr2l,c
 20043  0059AC  6ADA               	clrf	fsr2h,c
 20044  0059AE  0E01               	movlw	high _aesBuffer
 20045  0059B0  22DA               	addwfc	fsr2h,f,c
 20046  0059B2  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 20047                           
 20048                           ; BSR set to: 0
 20049  0059B6  0012               	return		;funcret
 20050  0059B8                     __end_of_AssembleEncryptionBlock:
 20051                           	opt stack 0
 20052                           tosu	equ	0xFFF
 20053                           tosh	equ	0xFFE
 20054                           tosl	equ	0xFFD
 20055                           pclath	equ	0xFFA
 20056                           tblptru	equ	0xFF8
 20057                           tblptrh	equ	0xFF7
 20058                           tblptrl	equ	0xFF6
 20059                           tablat	equ	0xFF5
 20060                           prodh	equ	0xFF4
 20061                           prodl	equ	0xFF3
 20062                           intcon	equ	0xFF2
 20063                           intcon2	equ	0xFF1
 20064                           intcon3	equ	0xFF0
 20065                           indf0	equ	0xFEF
 20066                           postinc0	equ	0xFEE
 20067                           fsr0h	equ	0xFEA
 20068                           fsr0l	equ	0xFE9
 20069                           wreg	equ	0xFE8
 20070                           postinc1	equ	0xFE6
 20071                           postdec1	equ	0xFE5
 20072                           plusw1	equ	0xFE3
 20073                           fsr1h	equ	0xFE2
 20074                           fsr1l	equ	0xFE1
 20075                           indf2	equ	0xFDF
 20076                           postinc2	equ	0xFDE
 20077                           postdec2	equ	0xFDD
 20078                           plusw2	equ	0xFDB
 20079                           fsr2h	equ	0xFDA
 20080                           fsr2l	equ	0xFD9
 20081                           status	equ	0xFD8
 20082                           
 20083 ;; *************** function _CountfOptsLength *****************
 20084 ;; Defined at:
 20085 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20086 ;; Parameters:    Size  Location     Type
 20087 ;;		None
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;  i               1   11[BANK0 ] unsigned char 
 20090 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  1    wreg      unsigned char 
 20093 ;; Registers used:
 20094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20095 ;; Tracked objects:
 20096 ;;		On entry : D/2
 20097 ;;		On exit  : F/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20102 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20103 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20104 ;;Total ram usage:        8 bytes
 20105 ;; Hardware stack levels used:    1
 20106 ;; Hardware stack levels required when called:    7
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		_LORAWAN_GetMaxPayloadSize
 20111 ;;		_AssemblePacket
 20112 ;; This function uses a non-reentrant model
 20113 ;;
 20114                           
 20115                           	psect	text105
 20116  00557A                     __ptext105:
 20117                           	opt stack 0
 20118  00557A                     _CountfOptsLength:
 20119                           	opt stack 20
 20120                           
 20121                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;incstack = 0
 20125  00557A  0100               	movlb	0	; () banked
 20126  00557C  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 20127                           
 20128                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 20129  00557E  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 20130  005580  D053               	goto	l13211
 20131  005582                     l13203:
 20132                           
 20133                           ; BSR set to: 0
 20134                           ;lorawan.c: 2139: {
 20135                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 20136  005582  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20137  005584  0D02               	mullw	2
 20138  005586  0EA8               	movlw	low (_loRa+168)
 20139  005588  24F3               	addwf	prodl,w,c
 20140  00558A  6ED9               	movwf	fsr2l,c
 20141  00558C  0E02               	movlw	high (_loRa+168)
 20142  00558E  20F4               	addwfc	prodh,w,c
 20143  005590  6EDA               	movwf	fsr2h,c
 20144  005592  28DE               	incf	postinc2,w,c
 20145  005594  E048               	bz	l13209
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;lorawan.c: 2141: {
 20149                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 20150  005596  0EFE               	movlw	254
 20151  005598  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20152  00559A  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20153  00559C  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20154  00559E  0D02               	mullw	2
 20155  0055A0  0EA8               	movlw	low (_loRa+168)
 20156  0055A2  24F3               	addwf	prodl,w,c
 20157  0055A4  6ED9               	movwf	fsr2l,c
 20158  0055A6  0E02               	movlw	high (_loRa+168)
 20159  0055A8  20F4               	addwfc	prodh,w,c
 20160  0055AA  6EDA               	movwf	fsr2h,c
 20161  0055AC  50DF               	movf	indf2,w,c
 20162  0055AE  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20163  0055B0  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20164  0055B2  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20165  0055B4  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20166  0055B6  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20167  0055B8  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20168  0055BA  0E94               	movlw	low _macEndDevCmdReplyLen
 20169  0055BC  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20170  0055BE  6EF6               	movwf	tblptrl,c
 20171  0055C0  0EFF               	movlw	high _macEndDevCmdReplyLen
 20172  0055C2  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20173  0055C4  6EF7               	movwf	tblptrh,c
 20174  0055C6                     	if	1	;There are 3 active tblptr bytes
 20175  0055C6  6AF8               	clrf	tblptru,c
 20176  0055C8  0E00               	movlw	low (__mediumconst shr (0+16))
 20177  0055CA  22F8               	addwfc	tblptru,f,c
 20178  0055CC                     	endif
 20179  0055CC  0008               	tblrd		*
 20180  0055CE  50F5               	movf	tablat,w,c
 20181  0055D0  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 20182  0055D4  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 20183  0055D6  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 20184  0055D8  0E00               	movlw	0
 20185  0055DA  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 20186  0055DC  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 20187  0055DE  D005               	goto	l13207
 20188  0055E0  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 20189  0055E2  E127               	bnz	l13213
 20190  0055E4  0E10               	movlw	16
 20191  0055E6  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 20192  0055E8  E224               	bc	l13213
 20193  0055EA                     l13207:
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;lorawan.c: 2143: {
 20197                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 20198  0055EA  0EFE               	movlw	254
 20199  0055EC  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20200  0055EE  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20201  0055F0  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20202  0055F2  0D02               	mullw	2
 20203  0055F4  0EA8               	movlw	low (_loRa+168)
 20204  0055F6  24F3               	addwf	prodl,w,c
 20205  0055F8  6ED9               	movwf	fsr2l,c
 20206  0055FA  0E02               	movlw	high (_loRa+168)
 20207  0055FC  20F4               	addwfc	prodh,w,c
 20208  0055FE  6EDA               	movwf	fsr2h,c
 20209  005600  50DF               	movf	indf2,w,c
 20210  005602  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20211  005604  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20212  005606  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20213  005608  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20214  00560A  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20215  00560C  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20216  00560E  0E94               	movlw	low _macEndDevCmdReplyLen
 20217  005610  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20218  005612  6EF6               	movwf	tblptrl,c
 20219  005614  0EFF               	movlw	high _macEndDevCmdReplyLen
 20220  005616  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20221  005618  6EF7               	movwf	tblptrh,c
 20222  00561A                     	if	1	;There are 3 active tblptr bytes
 20223  00561A  6AF8               	clrf	tblptru,c
 20224  00561C  0E00               	movlw	low (__mediumconst shr (0+16))
 20225  00561E  22F8               	addwfc	tblptru,f,c
 20226  005620                     	endif
 20227  005620  0008               	tblrd		*
 20228  005622  50F5               	movf	tablat,w,c
 20229  005624  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20230  005626                     l13209:
 20231                           
 20232                           ; BSR set to: 0
 20233  005626  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20234  005628                     l13211:
 20235                           
 20236                           ; BSR set to: 0
 20237  005628  0102               	movlb	2	; () banked
 20238  00562A  51A7               	movf	(_loRa+167)& (0+255),w,b
 20239  00562C  0100               	movlb	0	; () banked
 20240  00562E  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20241  005630  E3A8               	bnc	l13203
 20242  005632                     l13213:
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;lorawan.c: 2149: }
 20246                           ;lorawan.c: 2150: }
 20247                           ;lorawan.c: 2151: }
 20248                           ;lorawan.c: 2153: return macCommandLength;
 20249  005632  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20250                           
 20251                           ; BSR set to: 0
 20252  005634  0012               	return		;funcret
 20253  005636                     __end_of_CountfOptsLength:
 20254                           	opt stack 0
 20255                           tosu	equ	0xFFF
 20256                           tosh	equ	0xFFE
 20257                           tosl	equ	0xFFD
 20258                           pclath	equ	0xFFA
 20259                           tblptru	equ	0xFF8
 20260                           tblptrh	equ	0xFF7
 20261                           tblptrl	equ	0xFF6
 20262                           tablat	equ	0xFF5
 20263                           prodh	equ	0xFF4
 20264                           prodl	equ	0xFF3
 20265                           intcon	equ	0xFF2
 20266                           intcon2	equ	0xFF1
 20267                           intcon3	equ	0xFF0
 20268                           indf0	equ	0xFEF
 20269                           postinc0	equ	0xFEE
 20270                           fsr0h	equ	0xFEA
 20271                           fsr0l	equ	0xFE9
 20272                           wreg	equ	0xFE8
 20273                           postinc1	equ	0xFE6
 20274                           postdec1	equ	0xFE5
 20275                           plusw1	equ	0xFE3
 20276                           fsr1h	equ	0xFE2
 20277                           fsr1l	equ	0xFE1
 20278                           indf2	equ	0xFDF
 20279                           postinc2	equ	0xFDE
 20280                           postdec2	equ	0xFDD
 20281                           plusw2	equ	0xFDB
 20282                           fsr2h	equ	0xFDA
 20283                           fsr2l	equ	0xFD9
 20284                           status	equ	0xFD8
 20285                           
 20286 ;; *************** function _ExtractMic *****************
 20287 ;; Defined at:
 20288 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20289 ;; Parameters:    Size  Location     Type
 20290 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20291 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20292 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20293 ;; Auto vars:     Size  Location     Type
 20294 ;;  mic             4   20[BANK0 ] unsigned long 
 20295 ;; Return value:  Size  Location     Type
 20296 ;;                  4   14[BANK0 ] unsigned long 
 20297 ;; Registers used:
 20298 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20299 ;; Tracked objects:
 20300 ;;		On entry : F/0
 20301 ;;		On exit  : F/0
 20302 ;;		Unchanged: 0/0
 20303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20304 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20305 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20307 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20308 ;;Total ram usage:       10 bytes
 20309 ;; Hardware stack levels used:    1
 20310 ;; Hardware stack levels required when called:    8
 20311 ;; This function calls:
 20312 ;;		_memcpy
 20313 ;; This function is called by:
 20314 ;;		_LORAWAN_RxDone
 20315 ;; This function uses a non-reentrant model
 20316 ;;
 20317                           
 20318                           	psect	text106
 20319  006C9E                     __ptext106:
 20320                           	opt stack 0
 20321  006C9E                     _ExtractMic:
 20322                           	opt stack 18
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;lorawan.c: 2189: uint32_t mic = 0;
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;incstack = 0
 20329  006C9E  6B74               	clrf	ExtractMic@mic& (0+255),b
 20330  006CA0  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20331  006CA2  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20332  006CA4  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20336  006CA6  0E74               	movlw	low ExtractMic@mic
 20337  006CA8  6F64               	movwf	memcpy@d1& (0+255),b
 20338  006CAA  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20339  006CAC  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20340  006CAE  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20341  006CB0  6F72               	movwf	??_ExtractMic& (0+255),b
 20342  006CB2  0E00               	movlw	0
 20343  006CB4  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20344  006CB6  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20345  006CB8  0EFC               	movlw	252
 20346  006CBA  2572               	addwf	??_ExtractMic& (0+255),w,b
 20347  006CBC  6F66               	movwf	memcpy@s1& (0+255),b
 20348  006CBE  0EFF               	movlw	255
 20349  006CC0  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20350  006CC2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20351  006CC4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20352  006CC6  0E04               	movlw	4
 20353  006CC8  6F68               	movwf	memcpy@n& (0+255),b
 20354  006CCA  EC0F  F034         	call	_memcpy	;wreg free
 20355                           
 20356                           ; BSR set to: 0
 20357                           ;lorawan.c: 2191: return mic;
 20358  006CCE  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20359  006CD2  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20360  006CD6  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20361  006CDA  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20362                           
 20363                           ; BSR set to: 0
 20364  006CDE  0012               	return		;funcret
 20365  006CE0                     __end_of_ExtractMic:
 20366                           	opt stack 0
 20367                           tosu	equ	0xFFF
 20368                           tosh	equ	0xFFE
 20369                           tosl	equ	0xFFD
 20370                           pclath	equ	0xFFA
 20371                           tblptru	equ	0xFF8
 20372                           tblptrh	equ	0xFF7
 20373                           tblptrl	equ	0xFF6
 20374                           tablat	equ	0xFF5
 20375                           prodh	equ	0xFF4
 20376                           prodl	equ	0xFF3
 20377                           intcon	equ	0xFF2
 20378                           intcon2	equ	0xFF1
 20379                           intcon3	equ	0xFF0
 20380                           indf0	equ	0xFEF
 20381                           postinc0	equ	0xFEE
 20382                           fsr0h	equ	0xFEA
 20383                           fsr0l	equ	0xFE9
 20384                           wreg	equ	0xFE8
 20385                           postinc1	equ	0xFE6
 20386                           postdec1	equ	0xFE5
 20387                           plusw1	equ	0xFE3
 20388                           fsr1h	equ	0xFE2
 20389                           fsr1l	equ	0xFE1
 20390                           indf2	equ	0xFDF
 20391                           postinc2	equ	0xFDE
 20392                           postdec2	equ	0xFDD
 20393                           plusw2	equ	0xFDB
 20394                           fsr2h	equ	0xFDA
 20395                           fsr2l	equ	0xFD9
 20396                           status	equ	0xFD8
 20397                           
 20398 ;; *************** function _ComputeSessionKeys *****************
 20399 ;; Defined at:
 20400 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  joinAcceptBu    2   52[BANK0 ] PTR struct .
 20403 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;		None
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20410 ;; Tracked objects:
 20411 ;;		On entry : D/0
 20412 ;;		On exit  : F/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20419 ;;Total ram usage:        2 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:   10
 20422 ;; This function calls:
 20423 ;;		_AESEncodeLoRa
 20424 ;;		_PrepareSessionKeys
 20425 ;; This function is called by:
 20426 ;;		_LORAWAN_RxDone
 20427 ;; This function uses a non-reentrant model
 20428 ;;
 20429                           
 20430                           	psect	text107
 20431  005E42                     __ptext107:
 20432                           	opt stack 0
 20433  005E42                     _ComputeSessionKeys:
 20434                           	opt stack 16
 20435                           
 20436                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;incstack = 0
 20440  005E42  0E32               	movlw	low (_loRa+50)
 20441  005E44  0100               	movlb	0	; () banked
 20442  005E46  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20443  005E48  0E02               	movlw	high (_loRa+50)
 20444  005E4A  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20445  005E4C  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20446  005E4E  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20447  005E50  0E00               	movlw	0
 20448  005E52  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20449  005E54  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20450  005E56  0E04               	movlw	4
 20451  005E58  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20452  005E5A  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20453  005E5C  0E00               	movlw	0
 20454  005E5E  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20455  005E60  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20456  005E62  EC9F  F02F         	call	_PrepareSessionKeys	;wreg free
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20460  005E66  0E02               	movlw	2
 20461  005E68  0102               	movlb	2	; () banked
 20462  005E6A  6F32               	movwf	(_loRa+50)& (0+255),b
 20463                           
 20464                           ; BSR set to: 2
 20465                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20466  005E6C  0E32               	movlw	low (_loRa+50)
 20467  005E6E  0100               	movlb	0	; () banked
 20468  005E70  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20469  005E72  0E02               	movlw	high (_loRa+50)
 20470  005E74  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20471  005E76  0E42               	movlw	low (_loRa+66)
 20472  005E78  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20473  005E7A  0E02               	movlw	high (_loRa+66)
 20474  005E7C  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20475  005E7E  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20479  005E82  0E22               	movlw	low (_loRa+34)
 20480  005E84  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20481  005E86  0E02               	movlw	high (_loRa+34)
 20482  005E88  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20483  005E8A  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20484  005E8C  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20485  005E8E  0E00               	movlw	0
 20486  005E90  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20487  005E92  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20488  005E94  0E04               	movlw	4
 20489  005E96  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20490  005E98  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20491  005E9A  0E00               	movlw	0
 20492  005E9C  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20493  005E9E  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20494  005EA0  EC9F  F02F         	call	_PrepareSessionKeys	;wreg free
 20495                           
 20496                           ; BSR set to: 0
 20497                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20498  005EA4  0E01               	movlw	1
 20499  005EA6  0102               	movlb	2	; () banked
 20500  005EA8  6F22               	movwf	(_loRa+34)& (0+255),b
 20501                           
 20502                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20503  005EAA  0E22               	movlw	low (_loRa+34)
 20504  005EAC  0100               	movlb	0	; () banked
 20505  005EAE  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20506  005EB0  0E02               	movlw	high (_loRa+34)
 20507  005EB2  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20508  005EB4  0E42               	movlw	low (_loRa+66)
 20509  005EB6  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20510  005EB8  0E02               	movlw	high (_loRa+66)
 20511  005EBA  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20512  005EBC  EF29  F039         	goto	_AESEncodeLoRa	;wreg free
 20513  005EC0                     __end_of_ComputeSessionKeys:
 20514                           	opt stack 0
 20515                           tosu	equ	0xFFF
 20516                           tosh	equ	0xFFE
 20517                           tosl	equ	0xFFD
 20518                           pclath	equ	0xFFA
 20519                           tblptru	equ	0xFF8
 20520                           tblptrh	equ	0xFF7
 20521                           tblptrl	equ	0xFF6
 20522                           tablat	equ	0xFF5
 20523                           prodh	equ	0xFF4
 20524                           prodl	equ	0xFF3
 20525                           intcon	equ	0xFF2
 20526                           intcon2	equ	0xFF1
 20527                           intcon3	equ	0xFF0
 20528                           indf0	equ	0xFEF
 20529                           postinc0	equ	0xFEE
 20530                           fsr0h	equ	0xFEA
 20531                           fsr0l	equ	0xFE9
 20532                           wreg	equ	0xFE8
 20533                           postinc1	equ	0xFE6
 20534                           postdec1	equ	0xFE5
 20535                           plusw1	equ	0xFE3
 20536                           fsr1h	equ	0xFE2
 20537                           fsr1l	equ	0xFE1
 20538                           indf2	equ	0xFDF
 20539                           postinc2	equ	0xFDE
 20540                           postdec2	equ	0xFDD
 20541                           plusw2	equ	0xFDB
 20542                           fsr2h	equ	0xFDA
 20543                           fsr2l	equ	0xFD9
 20544                           status	equ	0xFD8
 20545                           
 20546 ;; *************** function _PrepareSessionKeys *****************
 20547 ;; Defined at:
 20548 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20551 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20552 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20553 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20554 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20555 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20556 ;; Auto vars:     Size  Location     Type
 20557 ;;  index           1   20[BANK0 ] unsigned char 
 20558 ;; Return value:  Size  Location     Type
 20559 ;;                  1    wreg      void 
 20560 ;; Registers used:
 20561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20562 ;; Tracked objects:
 20563 ;;		On entry : F/0
 20564 ;;		On exit  : F/0
 20565 ;;		Unchanged: 0/0
 20566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20570 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20571 ;;Total ram usage:        7 bytes
 20572 ;; Hardware stack levels used:    1
 20573 ;; Hardware stack levels required when called:    8
 20574 ;; This function calls:
 20575 ;;		_memcpy
 20576 ;;		_memset
 20577 ;; This function is called by:
 20578 ;;		_ComputeSessionKeys
 20579 ;; This function uses a non-reentrant model
 20580 ;;
 20581                           
 20582                           	psect	text108
 20583  005F3E                     __ptext108:
 20584                           	opt stack 0
 20585  005F3E                     _PrepareSessionKeys:
 20586                           	opt stack 17
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;lorawan.c: 2047: uint8_t index = 0;
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;incstack = 0
 20593  005F3E  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20594                           
 20595                           ; BSR set to: 0
 20596                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20597  005F40  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20598  005F44  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20599  005F48  6B67               	clrf	(memset@c+1)& (0+255),b
 20600  005F4A  6B66               	clrf	memset@c& (0+255),b
 20601  005F4C  6B69               	clrf	(memset@n+1)& (0+255),b
 20602  005F4E  0E10               	movlw	16
 20603  005F50  6F68               	movwf	memset@n& (0+255),b
 20604  005F52  ECEC  F038         	call	_memset	;wreg free
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;lorawan.c: 2050: index ++;
 20608  005F56  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20609                           
 20610                           ; BSR set to: 0
 20611                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20612  005F58  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20613  005F5A  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20614  005F5C  6F64               	movwf	memcpy@d1& (0+255),b
 20615  005F5E  0E00               	movlw	0
 20616  005F60  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20617  005F62  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20618  005F64  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20619  005F68  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20620  005F6C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20621  005F6E  0E03               	movlw	3
 20622  005F70  6F68               	movwf	memcpy@n& (0+255),b
 20623  005F72  EC0F  F034         	call	_memcpy	;wreg free
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;lorawan.c: 2053: index = index + 3;
 20627  005F76  0E03               	movlw	3
 20628  005F78  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20632  005F7A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20633  005F7C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20634  005F7E  6F64               	movwf	memcpy@d1& (0+255),b
 20635  005F80  0E00               	movlw	0
 20636  005F82  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20637  005F84  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20638  005F86  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20639  005F8A  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20640  005F8E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20641  005F90  0E03               	movlw	3
 20642  005F92  6F68               	movwf	memcpy@n& (0+255),b
 20643  005F94  EC0F  F034         	call	_memcpy	;wreg free
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;lorawan.c: 2056: index = index + 3;
 20647  005F98  0E03               	movlw	3
 20648  005F9A  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20649                           
 20650                           ; BSR set to: 0
 20651                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20652  005F9C  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20653  005F9E  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20654  005FA0  6F64               	movwf	memcpy@d1& (0+255),b
 20655  005FA2  0E00               	movlw	0
 20656  005FA4  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20657  005FA6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20658  005FA8  0ED2               	movlw	low (_loRa+210)
 20659  005FAA  6F66               	movwf	memcpy@s1& (0+255),b
 20660  005FAC  0E02               	movlw	high (_loRa+210)
 20661  005FAE  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20662  005FB0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20663  005FB2  0E02               	movlw	2
 20664  005FB4  6F68               	movwf	memcpy@n& (0+255),b
 20665  005FB6  EF0F  F034         	goto	_memcpy	;wreg free
 20666  005FBA                     __end_of_PrepareSessionKeys:
 20667                           	opt stack 0
 20668                           tosu	equ	0xFFF
 20669                           tosh	equ	0xFFE
 20670                           tosl	equ	0xFFD
 20671                           pclath	equ	0xFFA
 20672                           tblptru	equ	0xFF8
 20673                           tblptrh	equ	0xFF7
 20674                           tblptrl	equ	0xFF6
 20675                           tablat	equ	0xFF5
 20676                           prodh	equ	0xFF4
 20677                           prodl	equ	0xFF3
 20678                           intcon	equ	0xFF2
 20679                           intcon2	equ	0xFF1
 20680                           intcon3	equ	0xFF0
 20681                           indf0	equ	0xFEF
 20682                           postinc0	equ	0xFEE
 20683                           fsr0h	equ	0xFEA
 20684                           fsr0l	equ	0xFE9
 20685                           wreg	equ	0xFE8
 20686                           postinc1	equ	0xFE6
 20687                           postdec1	equ	0xFE5
 20688                           plusw1	equ	0xFE3
 20689                           fsr1h	equ	0xFE2
 20690                           fsr1l	equ	0xFE1
 20691                           indf2	equ	0xFDF
 20692                           postinc2	equ	0xFDE
 20693                           postdec2	equ	0xFDD
 20694                           plusw2	equ	0xFDB
 20695                           fsr2h	equ	0xFDA
 20696                           fsr2l	equ	0xFD9
 20697                           status	equ	0xFD8
 20698                           
 20699 ;; *************** function _CheckMcastFlags *****************
 20700 ;; Defined at:
 20701 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20702 ;; Parameters:    Size  Location     Type
 20703 ;;  hdr             2    4[BANK0 ] PTR struct .
 20704 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;		None
 20707 ;; Return value:  Size  Location     Type
 20708 ;;                  1    wreg      unsigned char 
 20709 ;; Registers used:
 20710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20711 ;; Tracked objects:
 20712 ;;		On entry : F/2
 20713 ;;		On exit  : D/0
 20714 ;;		Unchanged: 0/0
 20715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20716 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20719 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20720 ;;Total ram usage:        2 bytes
 20721 ;; Hardware stack levels used:    1
 20722 ;; Hardware stack levels required when called:    7
 20723 ;; This function calls:
 20724 ;;		Nothing
 20725 ;; This function is called by:
 20726 ;;		_LORAWAN_RxDone
 20727 ;; This function uses a non-reentrant model
 20728 ;;
 20729                           
 20730                           	psect	text109
 20731  0060AC                     __ptext109:
 20732                           	opt stack 0
 20733  0060AC                     _CheckMcastFlags:
 20734                           	opt stack 19
 20735                           
 20736                           ; BSR set to: 2
 20737                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;incstack = 0
 20741  0060AC  0100               	movlb	0	; () banked
 20742  0060AE  EE20 F005          	lfsr	2,5
 20743  0060B2  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20744  0060B4  26D9               	addwf	fsr2l,f,c
 20745  0060B6  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20746  0060B8  22DA               	addwfc	fsr2h,f,c
 20747  0060BA  BADF               	btfsc	indf2,5,c
 20748  0060BC  0C00               	retlw	0
 20749                           
 20750                           ; BSR set to: 0
 20751  0060BE  EE20 F005          	lfsr	2,5
 20752  0060C2  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20753  0060C4  26D9               	addwf	fsr2l,f,c
 20754  0060C6  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20755  0060C8  22DA               	addwfc	fsr2h,f,c
 20756  0060CA  BCDF               	btfsc	indf2,6,c
 20757  0060CC  0C00               	retlw	0
 20758                           
 20759                           ; BSR set to: 0
 20760  0060CE  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20761  0060D2  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20762  0060D6  38DF               	swapf	223,w,c
 20763  0060D8  32E8               	rrcf	wreg,f,c
 20764  0060DA  0B07               	andlw	7
 20765  0060DC  0A03               	xorlw	3
 20766  0060DE  E001               	bz	l14027
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;lorawan.c: 2110: {
 20770                           ;lorawan.c: 2111: return 0;
 20771  0060E0  0C00               	retlw	0
 20772  0060E2                     l14027:
 20773                           
 20774                           ; BSR set to: 0
 20775                           ;lorawan.c: 2112: }
 20776                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20777  0060E2  EE20 F005          	lfsr	2,5
 20778  0060E6  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20779  0060E8  26D9               	addwf	fsr2l,f,c
 20780  0060EA  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20781  0060EC  22DA               	addwfc	fsr2h,f,c
 20782  0060EE  50DF               	movf	223,w,c
 20783  0060F0  0B0F               	andlw	15
 20784  0060F2  E001               	bz	l14035
 20785  0060F4  0C00               	retlw	0
 20786  0060F6                     l14035:
 20787                           
 20788                           ; BSR set to: 0
 20789                           ;lorawan.c: 2118: else
 20790                           ;lorawan.c: 2119: {
 20791                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20792  0060F6  EE20 F008          	lfsr	2,8
 20793  0060FA  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20794  0060FC  26D9               	addwf	fsr2l,f,c
 20795  0060FE  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20796  006100  22DA               	addwfc	fsr2h,f,c
 20797  006102  50DF               	movf	indf2,w,c
 20798  006104  E101               	bnz	l14041
 20799  006106  0C00               	retlw	0
 20800  006108                     l14041:
 20801                           
 20802                           ; BSR set to: 0
 20803                           ;lorawan.c: 2123: }
 20804                           ;lorawan.c: 2124: }
 20805                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20806  006108  EE20 F005          	lfsr	2,5
 20807  00610C  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20808  00610E  26D9               	addwf	fsr2l,f,c
 20809  006110  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20810  006112  22DA               	addwfc	fsr2h,f,c
 20811  006114  A8DF               	btfss	indf2,4,c
 20812  006116  0C01               	retlw	1
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;lorawan.c: 2127: {
 20816                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20817  006118  0102               	movlb	2	; () banked
 20818  00611A  8700               	bsf	_loRa& (0+255),3,b
 20819                           
 20820                           ;lorawan.c: 2129: }
 20821                           ;lorawan.c: 2131: return 1;
 20822  00611C  0C01               	retlw	1	;funcret
 20823  00611E                     __end_of_CheckMcastFlags:
 20824                           	opt stack 0
 20825                           tosu	equ	0xFFF
 20826                           tosh	equ	0xFFE
 20827                           tosl	equ	0xFFD
 20828                           pclath	equ	0xFFA
 20829                           tblptru	equ	0xFF8
 20830                           tblptrh	equ	0xFF7
 20831                           tblptrl	equ	0xFF6
 20832                           tablat	equ	0xFF5
 20833                           prodh	equ	0xFF4
 20834                           prodl	equ	0xFF3
 20835                           intcon	equ	0xFF2
 20836                           intcon2	equ	0xFF1
 20837                           intcon3	equ	0xFF0
 20838                           indf0	equ	0xFEF
 20839                           postinc0	equ	0xFEE
 20840                           fsr0h	equ	0xFEA
 20841                           fsr0l	equ	0xFE9
 20842                           wreg	equ	0xFE8
 20843                           postinc1	equ	0xFE6
 20844                           postdec1	equ	0xFE5
 20845                           plusw1	equ	0xFE3
 20846                           fsr1h	equ	0xFE2
 20847                           fsr1l	equ	0xFE1
 20848                           indf2	equ	0xFDF
 20849                           postinc2	equ	0xFDE
 20850                           postdec2	equ	0xFDD
 20851                           plusw2	equ	0xFDB
 20852                           fsr2h	equ	0xFDA
 20853                           fsr2l	equ	0xFD9
 20854                           status	equ	0xFD8
 20855                           
 20856 ;; *************** function _CheckFlags *****************
 20857 ;; Defined at:
 20858 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20859 ;; Parameters:    Size  Location     Type
 20860 ;;  hdr             2    4[BANK0 ] PTR struct .
 20861 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20862 ;; Auto vars:     Size  Location     Type
 20863 ;;		None
 20864 ;; Return value:  Size  Location     Type
 20865 ;;                  1    wreg      void 
 20866 ;; Registers used:
 20867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20868 ;; Tracked objects:
 20869 ;;		On entry : F/2
 20870 ;;		On exit  : D/0
 20871 ;;		Unchanged: 0/0
 20872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20877 ;;Total ram usage:        2 bytes
 20878 ;; Hardware stack levels used:    1
 20879 ;; Hardware stack levels required when called:    7
 20880 ;; This function calls:
 20881 ;;		Nothing
 20882 ;; This function is called by:
 20883 ;;		_LORAWAN_RxDone
 20884 ;; This function uses a non-reentrant model
 20885 ;;
 20886                           
 20887                           	psect	text110
 20888  0066AE                     __ptext110:
 20889                           	opt stack 0
 20890  0066AE                     _CheckFlags:
 20891                           	opt stack 19
 20892                           
 20893                           ; BSR set to: 2
 20894                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20895                           
 20896                           ;incstack = 0
 20897  0066AE  0100               	movlb	0	; () banked
 20898  0066B0  EE20 F005          	lfsr	2,5
 20899  0066B4  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20900  0066B6  26D9               	addwf	fsr2l,f,c
 20901  0066B8  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20902  0066BA  22DA               	addwfc	fsr2h,f,c
 20903  0066BC  AEDF               	btfss	indf2,7,c
 20904  0066BE  D002               	goto	l14075
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;lorawan.c: 2077: {
 20908                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20909  0066C0  0102               	movlb	2	; () banked
 20910  0066C2  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20911  0066C4                     l14075:
 20912                           
 20913                           ;lorawan.c: 2079: }
 20914                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20915  0066C4  0100               	movlb	0	; () banked
 20916  0066C6  EE20 F005          	lfsr	2,5
 20917  0066CA  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20918  0066CC  26D9               	addwf	fsr2l,f,c
 20919  0066CE  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20920  0066D0  22DA               	addwfc	fsr2h,f,c
 20921  0066D2  A8DF               	btfss	indf2,4,c
 20922  0066D4  D002               	goto	l14079
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;lorawan.c: 2082: {
 20926                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20927  0066D6  0102               	movlb	2	; () banked
 20928  0066D8  8700               	bsf	_loRa& (0+255),3,b
 20929  0066DA                     l14079:
 20930                           
 20931                           ;lorawan.c: 2084: }
 20932                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20933  0066DA  0100               	movlb	0	; () banked
 20934  0066DC  EE20 F005          	lfsr	2,5
 20935  0066E0  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20936  0066E2  26D9               	addwf	fsr2l,f,c
 20937  0066E4  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20938  0066E6  22DA               	addwfc	fsr2h,f,c
 20939  0066E8  ACDF               	btfss	indf2,6,c
 20940  0066EA  D002               	goto	l14083
 20941                           
 20942                           ; BSR set to: 0
 20943                           ;lorawan.c: 2087: {
 20944                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20945  0066EC  0102               	movlb	2	; () banked
 20946  0066EE  8900               	bsf	_loRa& (0+255),4,b
 20947  0066F0                     l14083:
 20948                           
 20949                           ;lorawan.c: 2089: }
 20950                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20951  0066F0  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20952  0066F4  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20953  0066F8  0100               	movlb	0	; () banked
 20954  0066FA  38DF               	swapf	223,w,c
 20955  0066FC  32E8               	rrcf	wreg,f,c
 20956  0066FE  0B07               	andlw	7
 20957  006700  0A05               	xorlw	5
 20958  006702  A4D8               	btfss	status,2,c
 20959  006704  0012               	return	
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;lorawan.c: 2092: {
 20963                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20964  006706  0102               	movlb	2	; () banked
 20965  006708  8300               	bsf	_loRa& (0+255),1,b
 20966  00670A  0012               	return		;funcret
 20967  00670C                     __end_of_CheckFlags:
 20968                           	opt stack 0
 20969                           tosu	equ	0xFFF
 20970                           tosh	equ	0xFFE
 20971                           tosl	equ	0xFFD
 20972                           pclath	equ	0xFFA
 20973                           tblptru	equ	0xFF8
 20974                           tblptrh	equ	0xFF7
 20975                           tblptrl	equ	0xFF6
 20976                           tablat	equ	0xFF5
 20977                           prodh	equ	0xFF4
 20978                           prodl	equ	0xFF3
 20979                           intcon	equ	0xFF2
 20980                           intcon2	equ	0xFF1
 20981                           intcon3	equ	0xFF0
 20982                           indf0	equ	0xFEF
 20983                           postinc0	equ	0xFEE
 20984                           fsr0h	equ	0xFEA
 20985                           fsr0l	equ	0xFE9
 20986                           wreg	equ	0xFE8
 20987                           postinc1	equ	0xFE6
 20988                           postdec1	equ	0xFE5
 20989                           plusw1	equ	0xFE3
 20990                           fsr1h	equ	0xFE2
 20991                           fsr1l	equ	0xFE1
 20992                           indf2	equ	0xFDF
 20993                           postinc2	equ	0xFDE
 20994                           postdec2	equ	0xFDD
 20995                           plusw2	equ	0xFDB
 20996                           fsr2h	equ	0xFDA
 20997                           fsr2l	equ	0xFD9
 20998                           status	equ	0xFD8
 20999                           
 21000 ;; *************** function _RADIO_FSKPacketSent *****************
 21001 ;; Defined at:
 21002 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21003 ;; Parameters:    Size  Location     Type
 21004 ;;		None
 21005 ;; Auto vars:     Size  Location     Type
 21006 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 21007 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 21008 ;; Return value:  Size  Location     Type
 21009 ;;                  1    wreg      void 
 21010 ;; Registers used:
 21011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21012 ;; Tracked objects:
 21013 ;;		On entry : F/0
 21014 ;;		On exit  : C/0
 21015 ;;		Unchanged: 0/0
 21016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21018 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21020 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21021 ;;Total ram usage:       13 bytes
 21022 ;; Hardware stack levels used:    1
 21023 ;; Hardware stack levels required when called:   15
 21024 ;; This function calls:
 21025 ;;		_LORAWAN_TxDone
 21026 ;;		_RADIO_RegisterRead
 21027 ;;		_RADIO_WriteMode
 21028 ;;		_SwTimerReadValue
 21029 ;;		_SwTimerStop
 21030 ;; This function is called by:
 21031 ;;		_RADIO_DIO0
 21032 ;; This function uses a non-reentrant model
 21033 ;;
 21034                           
 21035                           	psect	text111
 21036  003A02                     __ptext111:
 21037                           	opt stack 0
 21038  003A02                     _RADIO_FSKPacketSent:
 21039                           	opt stack 13
 21040                           
 21041                           ; BSR set to: 0
 21042                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 21043                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 21044                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 21045                           
 21046                           ;incstack = 0
 21047  003A02  0E3F               	movlw	63
 21048  003A04  EC63  F039         	call	_RADIO_RegisterRead
 21049  003A08  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 21053  003A0A  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 21054  003A0C  0012               	return	
 21055                           
 21056                           ; BSR set to: 0
 21057                           ;radio_driver_SX1276.c: 1100: {
 21058                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 21059  003A0E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 21060  003A12  0E00               	movlw	0
 21061  003A14  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 21062  003A16  EC5F  F028         	call	_RADIO_WriteMode
 21063                           
 21064                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 21065  003A1A  0101               	movlb	1	; () banked
 21066  003A1C  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 21067                           
 21068                           ; BSR set to: 1
 21069                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 21070  003A1E  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 21071  003A20  EC78  F03A         	call	_SwTimerStop
 21072                           
 21073                           ; BSR set to: 0
 21074                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 21075  003A24  0101               	movlb	1	; () banked
 21076  003A26  B9A1               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 21077  003A28  0012               	return	
 21078                           
 21079                           ; BSR set to: 1
 21080                           ;radio_driver_SX1276.c: 1107: {
 21081                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 21082  003A2A  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21083  003A2C  EC91  F036         	call	_SwTimerReadValue
 21084  003A30  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 21085  003A32  E107               	bnz	u17330
 21086  003A34  0E1F               	movlw	31
 21087  003A36  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 21088  003A38  0EAC               	movlw	172
 21089  003A3A  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 21090  003A3C  0EDF               	movlw	223
 21091  003A3E  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 21092  003A40  E346               	bnc	l14975
 21093  003A42                     u17330:
 21094                           
 21095                           ; BSR set to: 0
 21096  003A42  0101               	movlb	1	; () banked
 21097  003A44  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21098  003A46  EC91  F036         	call	_SwTimerReadValue
 21099  003A4A  0E0D               	movlw	13
 21100  003A4C  D005               	goto	u17340
 21101  003A4E                     u17345:
 21102  003A4E  90D8               	bcf	status,0,c
 21103  003A50  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 21104  003A52  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 21105  003A54  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 21106  003A56  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 21107  003A58                     u17340:
 21108  003A58  2EE8               	decfsz	wreg,f,c
 21109  003A5A  D7F9               	goto	u17345
 21110  003A5C  0E7D               	movlw	125
 21111  003A5E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21112  003A60  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 21113  003A64  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 21114  003A68  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21115  003A6A  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21116  003A6C  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21117  003A6E  50F3               	movf	prodl,w,c
 21118  003A70  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21119  003A72  50F4               	movf	prodh,w,c
 21120  003A74  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21121  003A76  0E00               	movlw	0
 21122  003A78  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21123  003A7A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21124  003A7C  50F3               	movf	prodl,w,c
 21125  003A7E  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21126  003A80  50F4               	movf	prodh,w,c
 21127  003A82  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21128  003A84  0E00               	movlw	0
 21129  003A86  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21130  003A88  0E7D               	movlw	125
 21131  003A8A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21132  003A8C  50F3               	movf	prodl,w,c
 21133  003A8E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21134  003A90  50F4               	movf	prodh,w,c
 21135  003A92  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21136  003A94  0E00               	movlw	0
 21137  003A96  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21138  003A98  50F3               	movf	prodl,w,c
 21139  003A9A  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21140  003A9C  50F4               	movf	prodh,w,c
 21141  003A9E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21142  003AA0  0E00               	movlw	0
 21143  003AA2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21144  003AA4  50F3               	movf	prodl,w,c
 21145  003AA6  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21146  003AA8  50F4               	movf	prodh,w,c
 21147  003AAA  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21148  003AAC  0E7D               	movlw	125
 21149  003AAE  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21150  003AB0  50F3               	movf	prodl,w,c
 21151  003AB2  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21152  003AB4  0E00               	movlw	0
 21153  003AB6  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21154  003AB8  50F3               	movf	prodl,w,c
 21155  003ABA  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21156  003ABC  0E00               	movlw	0
 21157  003ABE  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21158  003AC0  50F3               	movf	prodl,w,c
 21159  003AC2  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21160  003AC4  0E00               	movlw	0
 21161  003AC6  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21162  003AC8  50F3               	movf	prodl,w,c
 21163  003ACA  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21164  003ACC  D045               	goto	L11
 21165  003ACE                     l14975:
 21166                           
 21167                           ; BSR set to: 0
 21168  003ACE  0101               	movlb	1	; () banked
 21169  003AD0  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21170  003AD2  EC91  F036         	call	_SwTimerReadValue
 21171  003AD6  0E7D               	movlw	125
 21172  003AD8  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21173  003ADA  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 21174  003ADE  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 21175  003AE2  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21176  003AE4  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21177  003AE6  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21178  003AE8  50F3               	movf	prodl,w,c
 21179  003AEA  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21180  003AEC  50F4               	movf	prodh,w,c
 21181  003AEE  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21182  003AF0  0E00               	movlw	0
 21183  003AF2  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21184  003AF4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21185  003AF6  50F3               	movf	prodl,w,c
 21186  003AF8  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21187  003AFA  50F4               	movf	prodh,w,c
 21188  003AFC  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21189  003AFE  0E00               	movlw	0
 21190  003B00  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21191  003B02  0E7D               	movlw	125
 21192  003B04  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21193  003B06  50F3               	movf	prodl,w,c
 21194  003B08  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21195  003B0A  50F4               	movf	prodh,w,c
 21196  003B0C  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21197  003B0E  0E00               	movlw	0
 21198  003B10  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21199  003B12  50F3               	movf	prodl,w,c
 21200  003B14  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21201  003B16  50F4               	movf	prodh,w,c
 21202  003B18  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21203  003B1A  0E00               	movlw	0
 21204  003B1C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21205  003B1E  50F3               	movf	prodl,w,c
 21206  003B20  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21207  003B22  50F4               	movf	prodh,w,c
 21208  003B24  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21209  003B26  0E7D               	movlw	125
 21210  003B28  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21211  003B2A  50F3               	movf	prodl,w,c
 21212  003B2C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21213  003B2E  0E00               	movlw	0
 21214  003B30  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21215  003B32  50F3               	movf	prodl,w,c
 21216  003B34  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21217  003B36  0E00               	movlw	0
 21218  003B38  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21219  003B3A  50F3               	movf	prodl,w,c
 21220  003B3C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21221  003B3E  0E00               	movlw	0
 21222  003B40  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21223  003B42  50F3               	movf	prodl,w,c
 21224  003B44  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21225  003B46  0E0D               	movlw	13
 21226  003B48  D005               	goto	u17350
 21227  003B4A                     u17355:
 21228  003B4A  90D8               	bcf	status,0,c
 21229  003B4C  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21230  003B4E  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21231  003B50  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21232  003B52  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21233  003B54                     u17350:
 21234  003B54  2EE8               	decfsz	wreg,f,c
 21235  003B56  D7F9               	goto	u17355
 21236  003B58                     L11:
 21237  003B58  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1215
 21238  003B5C  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1215+1
 21239  003B60  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1215+2
 21240  003B64  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1215+3
 21241                           
 21242                           ; BSR set to: 0
 21243  003B68  51DA               	movf	_RADIO_FSKPacketSent$1215& (0+255),w,b
 21244  003B6A  0820               	sublw	32
 21245  003B6C  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21246  003B6E  0E4E               	movlw	78
 21247  003B70  55DB               	subfwb	(_RADIO_FSKPacketSent$1215+1)& (0+255),w,b
 21248  003B72  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21249  003B74  0E00               	movlw	0
 21250  003B76  55DC               	subfwb	(_RADIO_FSKPacketSent$1215+2)& (0+255),w,b
 21251  003B78  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21252  003B7A  0E00               	movlw	0
 21253  003B7C  55DD               	subfwb	(_RADIO_FSKPacketSent$1215+3)& (0+255),w,b
 21254  003B7E  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21258  003B80  0101               	movlb	1	; () banked
 21259  003B82  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21260  003B84  EC78  F03A         	call	_SwTimerStop
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21264  003B88  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21265  003B8C  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21266  003B90  EF7D  F005         	goto	_LORAWAN_TxDone	;wreg free
 21267  003B94                     __end_of_RADIO_FSKPacketSent:
 21268                           	opt stack 0
 21269                           tosu	equ	0xFFF
 21270                           tosh	equ	0xFFE
 21271                           tosl	equ	0xFFD
 21272                           pclath	equ	0xFFA
 21273                           tblptru	equ	0xFF8
 21274                           tblptrh	equ	0xFF7
 21275                           tblptrl	equ	0xFF6
 21276                           tablat	equ	0xFF5
 21277                           prodh	equ	0xFF4
 21278                           prodl	equ	0xFF3
 21279                           intcon	equ	0xFF2
 21280                           intcon2	equ	0xFF1
 21281                           intcon3	equ	0xFF0
 21282                           indf0	equ	0xFEF
 21283                           postinc0	equ	0xFEE
 21284                           fsr0h	equ	0xFEA
 21285                           fsr0l	equ	0xFE9
 21286                           wreg	equ	0xFE8
 21287                           postinc1	equ	0xFE6
 21288                           postdec1	equ	0xFE5
 21289                           plusw1	equ	0xFE3
 21290                           fsr1h	equ	0xFE2
 21291                           fsr1l	equ	0xFE1
 21292                           indf2	equ	0xFDF
 21293                           postinc2	equ	0xFDE
 21294                           postdec2	equ	0xFDD
 21295                           plusw2	equ	0xFDB
 21296                           fsr2h	equ	0xFDA
 21297                           fsr2l	equ	0xFD9
 21298                           status	equ	0xFD8
 21299                           
 21300 ;; *************** function _LORAWAN_TxDone *****************
 21301 ;; Defined at:
 21302 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21303 ;; Parameters:    Size  Location     Type
 21304 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 21305 ;; Auto vars:     Size  Location     Type
 21306 ;;  minim           4  109[BANK0 ] unsigned long 
 21307 ;;  ticks           4  105[BANK0 ] unsigned long 
 21308 ;;  delta           4  101[BANK0 ] unsigned long 
 21309 ;;  i               1  113[BANK0 ] unsigned char 
 21310 ;;  found           1  100[BANK0 ] unsigned char 
 21311 ;; Return value:  Size  Location     Type
 21312 ;;                  1    wreg      void 
 21313 ;; Registers used:
 21314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21315 ;; Tracked objects:
 21316 ;;		On entry : E/1
 21317 ;;		On exit  : D/0
 21318 ;;		Unchanged: 0/0
 21319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21321 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21322 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21323 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21324 ;;Total ram usage:       50 bytes
 21325 ;; Hardware stack levels used:    1
 21326 ;; Hardware stack levels required when called:   14
 21327 ;; This function calls:
 21328 ;;		_LORAWAN_EnterContinuousReceive
 21329 ;;		_RADIO_GetStatus
 21330 ;;		_RxDataDone
 21331 ;;		_SwTimerIsRunning
 21332 ;;		_SwTimerReadValue
 21333 ;;		_SwTimerSetTimeout
 21334 ;;		_SwTimerStart
 21335 ;;		_SwTimerStop
 21336 ;;		___lldiv
 21337 ;; This function is called by:
 21338 ;;		_RADIO_TxDone
 21339 ;;		_RADIO_FSKPacketSent
 21340 ;;		_RADIO_WatchdogTimeout
 21341 ;; This function uses a non-reentrant model
 21342 ;;
 21343                           
 21344                           	psect	text112
 21345  000AFA                     __ptext112:
 21346                           	opt stack 0
 21347  000AFA                     _LORAWAN_TxDone:
 21348                           	opt stack 13
 21349                           
 21350                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21351                           
 21352                           ;incstack = 0
 21353  000AFA  0102               	movlb	2	; () banked
 21354  000AFC  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21355  000AFE  EF9B  F009         	goto	l14731
 21356                           
 21357                           ; BSR set to: 2
 21358                           ;lorawan_eu.c: 368: {
 21359                           ;lorawan_eu.c: 369: bool found = 0;
 21360  000B02  0100               	movlb	0	; () banked
 21361  000B04  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 21362                           
 21363                           ;lorawan_eu.c: 370: uint8_t i;
 21364                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21365  000B06  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21366  000B08  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21367  000B0A  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21368  000B0C  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21369  000B0E  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 21370  000B10  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21371  000B12  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21372  000B14  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21373                           
 21374                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21375  000B16  0102               	movlb	2	; () banked
 21376  000B18  6BF1               	clrf	(_loRa+241)& (0+255),b
 21377                           
 21378                           ; BSR set to: 2
 21379                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21380  000B1A  5102               	movf	(_loRa+2)& (0+255),w,b
 21381  000B1C  0BF0               	andlw	-16
 21382  000B1E  0902               	iorlw	2
 21383  000B20  6F02               	movwf	(_loRa+2)& (0+255),b
 21384                           
 21385                           ; BSR set to: 2
 21386                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21387  000B22  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 21388                           
 21389                           ; BSR set to: 2
 21390                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21391  000B26  A500               	btfss	_loRa& (0+255),2,b
 21392  000B28  D110               	goto	l14661
 21393                           
 21394                           ; BSR set to: 2
 21395                           ;lorawan_eu.c: 382: {
 21396                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21397  000B2A  0E7D               	movlw	low _rxWindowOffset
 21398  000B2C  2517               	addwf	(_loRa+23)& (0+255),w,b
 21399  000B2E  6EF6               	movwf	tblptrl,c
 21400  000B30  6AF7               	clrf	tblptrh,c
 21401  000B32  0EFF               	movlw	high _rxWindowOffset
 21402  000B34  22F7               	addwfc	tblptrh,f,c
 21403  000B36                     	if	1	;There are 3 active tblptr bytes
 21404  000B36  6AF8               	clrf	tblptru,c
 21405  000B38  0E00               	movlw	low (__mediumconst shr (0+16))
 21406  000B3A  22F8               	addwfc	tblptru,f,c
 21407  000B3C                     	endif
 21408  000B3C  0008               	tblrd		*
 21409  000B3E  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21410  000B42  5198               	movf	(_loRa+152)& (0+255),w,b
 21411  000B44  0100               	movlb	0	; () banked
 21412  000B46  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21413  000B48  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21414  000B4A  0E00               	movlw	0
 21415  000B4C  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21416  000B4E  0EFF               	movlw	255
 21417  000B50  0102               	movlb	2	; () banked
 21418  000B52  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21419  000B54  0100               	movlb	0	; () banked
 21420  000B56  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21421  000B58  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21422  000B5A  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21423  000B5C  0E0C               	movlw	12
 21424  000B5E                     u16845:
 21425  000B5E  90D8               	bcf	status,0,c
 21426  000B60  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21427  000B62  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21428  000B64  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21429  000B66  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21430  000B68  2EE8               	decfsz	wreg,f,c
 21431  000B6A  D7F9               	goto	u16845
 21432  000B6C  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21433  000B70  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21434  000B74  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21435  000B78  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21436  000B7C  0E7D               	movlw	125
 21437  000B7E  6F68               	movwf	___lldiv@divisor& (0+255),b
 21438  000B80  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21439  000B82  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21440  000B84  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21441  000B86  EC1B  F030         	call	___lldiv	;wreg free
 21442  000B8A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21443  000B8E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21444  000B92  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21445  000B96  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21446  000B9A  0102               	movlb	2	; () banked
 21447  000B9C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21448  000B9E  EC70  F036         	call	_SwTimerSetTimeout
 21449                           
 21450                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21451  000BA2  0E7D               	movlw	low _rxWindowOffset
 21452  000BA4  0102               	movlb	2	; () banked
 21453  000BA6  251C               	addwf	(_loRa+28)& (0+255),w,b
 21454  000BA8  6EF6               	movwf	tblptrl,c
 21455  000BAA  6AF7               	clrf	tblptrh,c
 21456  000BAC  0EFF               	movlw	high _rxWindowOffset
 21457  000BAE  22F7               	addwfc	tblptrh,f,c
 21458  000BB0                     	if	1	;There are 3 active tblptr bytes
 21459  000BB0  6AF8               	clrf	tblptru,c
 21460  000BB2  0E00               	movlw	low (__mediumconst shr (0+16))
 21461  000BB4  22F8               	addwfc	tblptru,f,c
 21462  000BB6                     	endif
 21463  000BB6  0008               	tblrd		*
 21464  000BB8  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21465  000BBC  519A               	movf	(_loRa+154)& (0+255),w,b
 21466  000BBE  0100               	movlb	0	; () banked
 21467  000BC0  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21468  000BC2  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21469  000BC4  0E00               	movlw	0
 21470  000BC6  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21471  000BC8  0EFF               	movlw	255
 21472  000BCA  0102               	movlb	2	; () banked
 21473  000BCC  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21474  000BCE  0100               	movlb	0	; () banked
 21475  000BD0  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21476  000BD2  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21477  000BD4  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21478  000BD6  0E0C               	movlw	12
 21479  000BD8                     u16855:
 21480  000BD8  90D8               	bcf	status,0,c
 21481  000BDA  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21482  000BDC  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21483  000BDE  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21484  000BE0  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21485  000BE2  2EE8               	decfsz	wreg,f,c
 21486  000BE4  D7F9               	goto	u16855
 21487  000BE6  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21488  000BEA  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21489  000BEE  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21490  000BF2  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21491  000BF6  0E7D               	movlw	125
 21492  000BF8  6F68               	movwf	___lldiv@divisor& (0+255),b
 21493  000BFA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21494  000BFC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21495  000BFE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21496  000C00  EC1B  F030         	call	___lldiv	;wreg free
 21497  000C04  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21498  000C08  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21499  000C0C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21500  000C10  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21501  000C14  0102               	movlb	2	; () banked
 21502  000C16  51E3               	movf	(_loRa+227)& (0+255),w,b
 21503  000C18  EC70  F036         	call	_SwTimerSetTimeout
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21507  000C1C  0102               	movlb	2	; () banked
 21508  000C1E  51E2               	movf	(_loRa+226)& (0+255),w,b
 21509  000C20  EC59  F02E         	call	_SwTimerStart
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21513  000C24  0102               	movlb	2	; () banked
 21514  000C26  51E3               	movf	(_loRa+227)& (0+255),w,b
 21515  000C28  EC59  F02E         	call	_SwTimerStart
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21519  000C2C  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21520  000C30  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21521  000C34  0102               	movlb	2	; () banked
 21522  000C36  51DB               	movf	(_loRa+219)& (0+255),w,b
 21523  000C38  0100               	movlb	0	; () banked
 21524  000C3A  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21525  000C3C  0102               	movlb	2	; () banked
 21526  000C3E  51DC               	movf	(_loRa+220)& (0+255),w,b
 21527  000C40  0100               	movlb	0	; () banked
 21528  000C42  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21529  000C44  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21530  000C46  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21531  000C48  0ED6               	movlw	214
 21532  000C4A  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21533  000C4C  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 21534  000C50  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 21535  000C54  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21536  000C56  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21537  000C58  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21538  000C5A  50F3               	movf	prodl,w,c
 21539  000C5C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21540  000C5E  50F4               	movf	prodh,w,c
 21541  000C60  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21542  000C62  0E00               	movlw	0
 21543  000C64  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21544  000C66  0E0B               	movlw	11
 21545  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21546  000C6A  50F3               	movf	prodl,w,c
 21547  000C6C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21548  000C6E  50F4               	movf	prodh,w,c
 21549  000C70  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21550  000C72  0E00               	movlw	0
 21551  000C74  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21552  000C76  0ED6               	movlw	214
 21553  000C78  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21554  000C7A  50F3               	movf	prodl,w,c
 21555  000C7C  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21556  000C7E  50F4               	movf	prodh,w,c
 21557  000C80  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21558  000C82  0E0B               	movlw	11
 21559  000C84  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21560  000C86  50F3               	movf	prodl,w,c
 21561  000C88  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21562  000C8A  50F4               	movf	prodh,w,c
 21563  000C8C  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21564  000C8E  0E00               	movlw	0
 21565  000C90  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21566  000C92  50F3               	movf	prodl,w,c
 21567  000C94  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21568  000C96  50F4               	movf	prodh,w,c
 21569  000C98  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21570  000C9A  0ED6               	movlw	214
 21571  000C9C  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21572  000C9E  50F3               	movf	prodl,w,c
 21573  000CA0  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21574  000CA2  0E0B               	movlw	11
 21575  000CA4  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21576  000CA6  50F3               	movf	prodl,w,c
 21577  000CA8  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21578  000CAA  0E00               	movlw	0
 21579  000CAC  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21580  000CAE  50F3               	movf	prodl,w,c
 21581  000CB0  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21582  000CB2  0E00               	movlw	0
 21583  000CB4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21584  000CB6  50F3               	movf	prodl,w,c
 21585  000CB8  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21586  000CBA  0EFF               	movlw	255
 21587  000CBC  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21588  000CBE  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21589  000CC0  0EFF               	movlw	255
 21590  000CC2  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21591  000CC4  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21592  000CC6  0EFF               	movlw	255
 21593  000CC8  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21594  000CCA  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21595  000CCC  0EFF               	movlw	255
 21596  000CCE  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21597  000CD0  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21598  000CD2  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21599  000CD4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21600  000CD6  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21601  000CDA  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21602  000CDE  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21603  000CE0  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21604  000CE2  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21605  000CE4  50F3               	movf	prodl,w,c
 21606  000CE6  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21607  000CE8  50F4               	movf	prodh,w,c
 21608  000CEA  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21609  000CEC  0E00               	movlw	0
 21610  000CEE  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21611  000CF0  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21612  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21613  000CF4  50F3               	movf	prodl,w,c
 21614  000CF6  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21615  000CF8  50F4               	movf	prodh,w,c
 21616  000CFA  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21617  000CFC  0E00               	movlw	0
 21618  000CFE  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21619  000D00  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21620  000D02  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21621  000D04  50F3               	movf	prodl,w,c
 21622  000D06  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21623  000D08  50F4               	movf	prodh,w,c
 21624  000D0A  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21625  000D0C  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21626  000D0E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21627  000D10  50F3               	movf	prodl,w,c
 21628  000D12  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21629  000D14  50F4               	movf	prodh,w,c
 21630  000D16  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21631  000D18  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21632  000D1A  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21633  000D1C  50F3               	movf	prodl,w,c
 21634  000D1E  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21635  000D20  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21636  000D22  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21637  000D24  50F3               	movf	prodl,w,c
 21638  000D26  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21639  000D28  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21640  000D2A  0D0E               	mullw	14
 21641  000D2C  0E08               	movlw	low (_Channels+8)
 21642  000D2E  24F3               	addwf	prodl,w,c
 21643  000D30  6ED9               	movwf	fsr2l,c
 21644  000D32  0E04               	movlw	high (_Channels+8)
 21645  000D34  20F4               	addwfc	prodh,w,c
 21646  000D36  6EDA               	movwf	fsr2h,c
 21647  000D38  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21648  000D3C  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21649  000D40  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21650  000D44  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21651                           
 21652                           ;lorawan_eu.c: 389: }
 21653  000D48  D11D               	goto	l14671
 21654  000D4A                     l14661:
 21655                           
 21656                           ; BSR set to: 2
 21657                           ;lorawan_eu.c: 390: else
 21658                           ;lorawan_eu.c: 391: {
 21659                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21660  000D4A  0E7D               	movlw	low _rxWindowOffset
 21661  000D4C  2517               	addwf	(_loRa+23)& (0+255),w,b
 21662  000D4E  6EF6               	movwf	tblptrl,c
 21663  000D50  6AF7               	clrf	tblptrh,c
 21664  000D52  0EFF               	movlw	high _rxWindowOffset
 21665  000D54  22F7               	addwfc	tblptrh,f,c
 21666  000D56                     	if	1	;There are 3 active tblptr bytes
 21667  000D56  6AF8               	clrf	tblptru,c
 21668  000D58  0E00               	movlw	low (__mediumconst shr (0+16))
 21669  000D5A  22F8               	addwfc	tblptru,f,c
 21670  000D5C                     	endif
 21671  000D5C  0008               	tblrd		*
 21672  000D5E  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21673  000D62  5194               	movf	(_loRa+148)& (0+255),w,b
 21674  000D64  0100               	movlb	0	; () banked
 21675  000D66  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21676  000D68  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21677  000D6A  0E00               	movlw	0
 21678  000D6C  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21679  000D6E  0EFF               	movlw	255
 21680  000D70  0102               	movlb	2	; () banked
 21681  000D72  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21682  000D74  0100               	movlb	0	; () banked
 21683  000D76  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21684  000D78  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21685  000D7A  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21686  000D7C  0E0C               	movlw	12
 21687  000D7E                     u16865:
 21688  000D7E  90D8               	bcf	status,0,c
 21689  000D80  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21690  000D82  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21691  000D84  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21692  000D86  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21693  000D88  2EE8               	decfsz	wreg,f,c
 21694  000D8A  D7F9               	goto	u16865
 21695  000D8C  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21696  000D90  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21697  000D94  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21698  000D98  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21699  000D9C  0E7D               	movlw	125
 21700  000D9E  6F68               	movwf	___lldiv@divisor& (0+255),b
 21701  000DA0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21702  000DA2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21703  000DA4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21704  000DA6  EC1B  F030         	call	___lldiv	;wreg free
 21705  000DAA  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21706  000DAE  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21707  000DB2  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21708  000DB6  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21709  000DBA  0102               	movlb	2	; () banked
 21710  000DBC  51E4               	movf	(_loRa+228)& (0+255),w,b
 21711  000DBE  EC70  F036         	call	_SwTimerSetTimeout
 21712                           
 21713                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21714  000DC2  0E7D               	movlw	low _rxWindowOffset
 21715  000DC4  0102               	movlb	2	; () banked
 21716  000DC6  251C               	addwf	(_loRa+28)& (0+255),w,b
 21717  000DC8  6EF6               	movwf	tblptrl,c
 21718  000DCA  6AF7               	clrf	tblptrh,c
 21719  000DCC  0EFF               	movlw	high _rxWindowOffset
 21720  000DCE  22F7               	addwfc	tblptrh,f,c
 21721  000DD0                     	if	1	;There are 3 active tblptr bytes
 21722  000DD0  6AF8               	clrf	tblptru,c
 21723  000DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 21724  000DD4  22F8               	addwfc	tblptru,f,c
 21725  000DD6                     	endif
 21726  000DD6  0008               	tblrd		*
 21727  000DD8  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21728  000DDC  5196               	movf	(_loRa+150)& (0+255),w,b
 21729  000DDE  0100               	movlb	0	; () banked
 21730  000DE0  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21731  000DE2  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21732  000DE4  0E00               	movlw	0
 21733  000DE6  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21734  000DE8  0EFF               	movlw	255
 21735  000DEA  0102               	movlb	2	; () banked
 21736  000DEC  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21737  000DEE  0100               	movlb	0	; () banked
 21738  000DF0  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21739  000DF2  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21740  000DF4  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21741  000DF6  0E0C               	movlw	12
 21742  000DF8                     u16875:
 21743  000DF8  90D8               	bcf	status,0,c
 21744  000DFA  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21745  000DFC  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21746  000DFE  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21747  000E00  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21748  000E02  2EE8               	decfsz	wreg,f,c
 21749  000E04  D7F9               	goto	u16875
 21750  000E06  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21751  000E0A  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21752  000E0E  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21753  000E12  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21754  000E16  0E7D               	movlw	125
 21755  000E18  6F68               	movwf	___lldiv@divisor& (0+255),b
 21756  000E1A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21757  000E1C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21758  000E1E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21759  000E20  EC1B  F030         	call	___lldiv	;wreg free
 21760  000E24  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21761  000E28  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21762  000E2C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21763  000E30  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21764  000E34  0102               	movlb	2	; () banked
 21765  000E36  51E5               	movf	(_loRa+229)& (0+255),w,b
 21766  000E38  EC70  F036         	call	_SwTimerSetTimeout
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21770  000E3C  0102               	movlb	2	; () banked
 21771  000E3E  51E4               	movf	(_loRa+228)& (0+255),w,b
 21772  000E40  EC59  F02E         	call	_SwTimerStart
 21773                           
 21774                           ; BSR set to: 0
 21775                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21776  000E44  0102               	movlb	2	; () banked
 21777  000E46  5112               	movf	(_loRa+18)& (0+255),w,b
 21778  000E48  E103               	bnz	l14669
 21779                           
 21780                           ; BSR set to: 2
 21781                           ;lorawan_eu.c: 396: {
 21782                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21783  000E4A  51E5               	movf	(_loRa+229)& (0+255),w,b
 21784  000E4C  EC59  F02E         	call	_SwTimerStart
 21785  000E50                     l14669:
 21786                           
 21787                           ;lorawan_eu.c: 398: }
 21788                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21789  000E50  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21790  000E54  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21791  000E58  EE22  F0DB         	lfsr	2,_loRa+219
 21792  000E5C  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21793  000E60  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 21794  000E64  0100               	movlb	0	; () banked
 21795  000E66  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21796  000E68  0D0E               	mullw	14
 21797  000E6A  0E06               	movlw	low (_Channels+6)
 21798  000E6C  24F3               	addwf	prodl,w,c
 21799  000E6E  6ED9               	movwf	fsr2l,c
 21800  000E70  0E04               	movlw	high (_Channels+6)
 21801  000E72  20F4               	addwfc	prodh,w,c
 21802  000E74  6EDA               	movwf	fsr2h,c
 21803  000E76  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 21804  000E7A  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 21805  000E7E  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21806  000E80  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21807  000E82  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21808  000E84  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21809  000E86  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21810  000E88  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21811  000E8A  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21812  000E8C  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21813  000E8E  0E00               	movlw	0
 21814  000E90  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21815  000E92  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21816  000E94  0E00               	movlw	0
 21817  000E96  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21818  000E98  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21819  000E9A  0E00               	movlw	0
 21820  000E9C  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21821  000E9E  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21822  000EA0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21823  000EA2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21824  000EA4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21825  000EA8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21826  000EAC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21827  000EAE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21828  000EB0  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21829  000EB2  50F3               	movf	prodl,w,c
 21830  000EB4  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21831  000EB6  50F4               	movf	prodh,w,c
 21832  000EB8  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21833  000EBA  0E00               	movlw	0
 21834  000EBC  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21835  000EBE  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21836  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21837  000EC2  50F3               	movf	prodl,w,c
 21838  000EC4  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21839  000EC6  50F4               	movf	prodh,w,c
 21840  000EC8  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21841  000ECA  0E00               	movlw	0
 21842  000ECC  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21843  000ECE  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21844  000ED0  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21845  000ED2  50F3               	movf	prodl,w,c
 21846  000ED4  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21847  000ED6  50F4               	movf	prodh,w,c
 21848  000ED8  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21849  000EDA  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21850  000EDC  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21851  000EDE  50F3               	movf	prodl,w,c
 21852  000EE0  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21853  000EE2  50F4               	movf	prodh,w,c
 21854  000EE4  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21855  000EE6  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21856  000EE8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21857  000EEA  50F3               	movf	prodl,w,c
 21858  000EEC  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21859  000EEE  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21860  000EF0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21861  000EF2  50F3               	movf	prodl,w,c
 21862  000EF4  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21863  000EF6  0EFF               	movlw	255
 21864  000EF8  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21865  000EFA  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21866  000EFC  0EFF               	movlw	255
 21867  000EFE  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21868  000F00  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21869  000F02  0EFF               	movlw	255
 21870  000F04  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21871  000F06  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21872  000F08  0EFF               	movlw	255
 21873  000F0A  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21874  000F0C  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21875  000F0E  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21876  000F10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21877  000F12  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 21878  000F16  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 21879  000F1A  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21880  000F1C  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21881  000F1E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21882  000F20  50F3               	movf	prodl,w,c
 21883  000F22  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21884  000F24  50F4               	movf	prodh,w,c
 21885  000F26  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21886  000F28  0E00               	movlw	0
 21887  000F2A  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21888  000F2C  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21889  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21890  000F30  50F3               	movf	prodl,w,c
 21891  000F32  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21892  000F34  50F4               	movf	prodh,w,c
 21893  000F36  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21894  000F38  0E00               	movlw	0
 21895  000F3A  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21896  000F3C  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21897  000F3E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21898  000F40  50F3               	movf	prodl,w,c
 21899  000F42  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21900  000F44  50F4               	movf	prodh,w,c
 21901  000F46  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21902  000F48  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21903  000F4A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21904  000F4C  50F3               	movf	prodl,w,c
 21905  000F4E  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21906  000F50  50F4               	movf	prodh,w,c
 21907  000F52  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21908  000F54  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21909  000F56  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21910  000F58  50F3               	movf	prodl,w,c
 21911  000F5A  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21912  000F5C  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21913  000F5E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21914  000F60  50F3               	movf	prodl,w,c
 21915  000F62  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21916  000F64  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21917  000F66  0D0E               	mullw	14
 21918  000F68  0E08               	movlw	low (_Channels+8)
 21919  000F6A  24F3               	addwf	prodl,w,c
 21920  000F6C  6ED9               	movwf	fsr2l,c
 21921  000F6E  0E04               	movlw	high (_Channels+8)
 21922  000F70  20F4               	addwfc	prodh,w,c
 21923  000F72  6EDA               	movwf	fsr2h,c
 21924  000F74  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21925  000F78  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21926  000F7C  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21927  000F80  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21928  000F84                     l14671:
 21929                           
 21930                           ; BSR set to: 0
 21931                           ;lorawan_eu.c: 401: }
 21932                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21933  000F84  0102               	movlb	2	; () banked
 21934  000F86  51E9               	movf	(_loRa+233)& (0+255),w,b
 21935  000F88  EC0E  F03A         	call	_SwTimerIsRunning
 21936  000F8C  0900               	iorlw	0
 21937  000F8E  E101 D0C8          	bz	l14683
 21938                           
 21939                           ; BSR set to: 0
 21940                           ;lorawan_eu.c: 404: {
 21941                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21942  000F92  0102               	movlb	2	; () banked
 21943  000F94  51E9               	movf	(_loRa+233)& (0+255),w,b
 21944  000F96  EC78  F03A         	call	_SwTimerStop
 21945                           
 21946                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21947  000F9A  0102               	movlb	2	; () banked
 21948  000F9C  51E9               	movf	(_loRa+233)& (0+255),w,b
 21949  000F9E  EC91  F036         	call	_SwTimerReadValue
 21950  000FA2  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21951  000FA6  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21952  000FAA  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21953  000FAE  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21957  000FB2  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21958  000FB4  E107               	bnz	u16900
 21959  000FB6  0E1F               	movlw	31
 21960  000FB8  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21961  000FBA  0EAC               	movlw	172
 21962  000FBC  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21963  000FBE  0EDF               	movlw	223
 21964  000FC0  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21965  000FC2  E34A               	bnc	l14679
 21966  000FC4                     u16900:
 21967                           
 21968                           ; BSR set to: 0
 21969  000FC4  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21970  000FC8  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21971  000FCC  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21972  000FD0  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21973  000FD4  0E0D               	movlw	13
 21974  000FD6  D005               	goto	u16910
 21975  000FD8                     u16915:
 21976  000FD8  90D8               	bcf	status,0,c
 21977  000FDA  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21978  000FDC  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21979  000FDE  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21980  000FE0  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21981  000FE2                     u16910:
 21982  000FE2  2EE8               	decfsz	wreg,f,c
 21983  000FE4  D7F9               	goto	u16915
 21984  000FE6  0E7D               	movlw	125
 21985  000FE8  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21986  000FEA  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21987  000FEE  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21988  000FF2  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21989  000FF4  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21990  000FF6  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21991  000FF8  50F3               	movf	prodl,w,c
 21992  000FFA  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21993  000FFC  50F4               	movf	prodh,w,c
 21994  000FFE  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21995  001000  0E00               	movlw	0
 21996  001002  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21997  001004  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21998  001006  50F3               	movf	prodl,w,c
 21999  001008  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22000  00100A  50F4               	movf	prodh,w,c
 22001  00100C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22002  00100E  0E00               	movlw	0
 22003  001010  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22004  001012  0E7D               	movlw	125
 22005  001014  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22006  001016  50F3               	movf	prodl,w,c
 22007  001018  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22008  00101A  50F4               	movf	prodh,w,c
 22009  00101C  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22010  00101E  0E00               	movlw	0
 22011  001020  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22012  001022  50F3               	movf	prodl,w,c
 22013  001024  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22014  001026  50F4               	movf	prodh,w,c
 22015  001028  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22016  00102A  0E00               	movlw	0
 22017  00102C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22018  00102E  50F3               	movf	prodl,w,c
 22019  001030  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22020  001032  50F4               	movf	prodh,w,c
 22021  001034  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22022  001036  0E7D               	movlw	125
 22023  001038  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22024  00103A  50F3               	movf	prodl,w,c
 22025  00103C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22026  00103E  0E00               	movlw	0
 22027  001040  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22028  001042  50F3               	movf	prodl,w,c
 22029  001044  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22030  001046  0E00               	movlw	0
 22031  001048  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22032  00104A  50F3               	movf	prodl,w,c
 22033  00104C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22034  00104E  0E00               	movlw	0
 22035  001050  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22036  001052  50F3               	movf	prodl,w,c
 22037  001054  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22038  001056  D049               	goto	L12
 22039  001058                     l14679:
 22040                           
 22041                           ; BSR set to: 0
 22042  001058  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22043  00105C  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22044  001060  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22045  001064  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22046  001068  0E7D               	movlw	125
 22047  00106A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22048  00106C  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 22049  001070  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 22050  001074  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 22051  001076  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 22052  001078  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22053  00107A  50F3               	movf	prodl,w,c
 22054  00107C  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22055  00107E  50F4               	movf	prodh,w,c
 22056  001080  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22057  001082  0E00               	movlw	0
 22058  001084  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22059  001086  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22060  001088  50F3               	movf	prodl,w,c
 22061  00108A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22062  00108C  50F4               	movf	prodh,w,c
 22063  00108E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22064  001090  0E00               	movlw	0
 22065  001092  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22066  001094  0E7D               	movlw	125
 22067  001096  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22068  001098  50F3               	movf	prodl,w,c
 22069  00109A  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22070  00109C  50F4               	movf	prodh,w,c
 22071  00109E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22072  0010A0  0E00               	movlw	0
 22073  0010A2  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22074  0010A4  50F3               	movf	prodl,w,c
 22075  0010A6  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22076  0010A8  50F4               	movf	prodh,w,c
 22077  0010AA  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22078  0010AC  0E00               	movlw	0
 22079  0010AE  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22080  0010B0  50F3               	movf	prodl,w,c
 22081  0010B2  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22082  0010B4  50F4               	movf	prodh,w,c
 22083  0010B6  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22084  0010B8  0E7D               	movlw	125
 22085  0010BA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22086  0010BC  50F3               	movf	prodl,w,c
 22087  0010BE  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22088  0010C0  0E00               	movlw	0
 22089  0010C2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22090  0010C4  50F3               	movf	prodl,w,c
 22091  0010C6  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22092  0010C8  0E00               	movlw	0
 22093  0010CA  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22094  0010CC  50F3               	movf	prodl,w,c
 22095  0010CE  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22096  0010D0  0E00               	movlw	0
 22097  0010D2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22098  0010D4  50F3               	movf	prodl,w,c
 22099  0010D6  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22100  0010D8  0E0D               	movlw	13
 22101  0010DA  D005               	goto	u16920
 22102  0010DC                     u16925:
 22103  0010DC  90D8               	bcf	status,0,c
 22104  0010DE  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22105  0010E0  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22106  0010E2  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22107  0010E4  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22108  0010E6                     u16920:
 22109  0010E6  2EE8               	decfsz	wreg,f,c
 22110  0010E8  D7F9               	goto	u16925
 22111  0010EA                     L12:
 22112  0010EA  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2092
 22113  0010EE  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2092+1
 22114  0010F2  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2092+2
 22115  0010F6  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2092+3
 22116                           
 22117                           ; BSR set to: 0
 22118  0010FA  51BC               	movf	_LORAWAN_TxDone$2092& (0+255),w,b
 22119  0010FC  0102               	movlb	2	; () banked
 22120  0010FE  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 22121  001100  0100               	movlb	0	; () banked
 22122  001102  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22123  001104  51BD               	movf	(_LORAWAN_TxDone$2092+1)& (0+255),w,b
 22124  001106  0102               	movlb	2	; () banked
 22125  001108  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 22126  00110A  0100               	movlb	0	; () banked
 22127  00110C  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22128  00110E  51BE               	movf	(_LORAWAN_TxDone$2092+2)& (0+255),w,b
 22129  001110  0102               	movlb	2	; () banked
 22130  001112  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 22131  001114  0100               	movlb	0	; () banked
 22132  001116  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22133  001118  51BF               	movf	(_LORAWAN_TxDone$2092+3)& (0+255),w,b
 22134  00111A  0102               	movlb	2	; () banked
 22135  00111C  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 22136  00111E  0100               	movlb	0	; () banked
 22137  001120  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22138  001122                     l14683:
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;lorawan_eu.c: 409: }
 22142                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 22143  001122  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 22144  001124                     l14689:
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;lorawan_eu.c: 412: {
 22148                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 22149  001124  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22150  001126  0D0E               	mullw	14
 22151  001128  0E04               	movlw	low (_Channels+4)
 22152  00112A  24F3               	addwf	prodl,w,c
 22153  00112C  6ED9               	movwf	fsr2l,c
 22154  00112E  0E04               	movlw	high (_Channels+4)
 22155  001130  20F4               	addwfc	prodh,w,c
 22156  001132  6EDA               	movwf	fsr2h,c
 22157  001134  04DE               	decf	postinc2,w,c
 22158  001136  E001 D08E          	bnz	l14707
 22159                           
 22160                           ; BSR set to: 0
 22161  00113A  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22162  00113C  0D0E               	mullw	14
 22163  00113E  0E08               	movlw	low (_Channels+8)
 22164  001140  24F3               	addwf	prodl,w,c
 22165  001142  6ED9               	movwf	fsr2l,c
 22166  001144  0E04               	movlw	high (_Channels+8)
 22167  001146  20F4               	addwfc	prodh,w,c
 22168  001148  6EDA               	movwf	fsr2h,c
 22169  00114A  50DE               	movf	postinc2,w,c
 22170  00114C  10DE               	iorwf	postinc2,w,c
 22171  00114E  10DE               	iorwf	postinc2,w,c
 22172  001150  10DE               	iorwf	postinc2,w,c
 22173  001152  E101 D080          	bz	l14707
 22174                           
 22175                           ; BSR set to: 0
 22176                           ;lorawan_eu.c: 414: {
 22177                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 22178  001156  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22179  001158  0102               	movlb	2	; () banked
 22180  00115A  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 22181  00115C  E04B               	bz	l1031
 22182                           
 22183                           ; BSR set to: 2
 22184                           ;lorawan_eu.c: 416: {
 22185                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 22186  00115E  0100               	movlb	0	; () banked
 22187  001160  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22188  001162  0D0E               	mullw	14
 22189  001164  0E08               	movlw	low (_Channels+8)
 22190  001166  24F3               	addwf	prodl,w,c
 22191  001168  6ED9               	movwf	fsr2l,c
 22192  00116A  0E04               	movlw	high (_Channels+8)
 22193  00116C  20F4               	addwfc	prodh,w,c
 22194  00116E  6EDA               	movwf	fsr2h,c
 22195  001170  50DE               	movf	postinc2,w,c
 22196  001172  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22197  001174  50DE               	movf	postinc2,w,c
 22198  001176  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22199  001178  50DE               	movf	postinc2,w,c
 22200  00117A  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22201  00117C  50DE               	movf	postinc2,w,c
 22202  00117E  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22203  001180  E22D               	bc	l14699
 22204                           
 22205                           ; BSR set to: 0
 22206                           ;lorawan_eu.c: 418: {
 22207                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 22208  001182  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22209  001184  0D0E               	mullw	14
 22210  001186  0E08               	movlw	low (_Channels+8)
 22211  001188  24F3               	addwf	prodl,w,c
 22212  00118A  6ED9               	movwf	fsr2l,c
 22213  00118C  0E04               	movlw	high (_Channels+8)
 22214  00118E  20F4               	addwfc	prodh,w,c
 22215  001190  6EDA               	movwf	fsr2h,c
 22216  001192  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 22217  001196  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 22218  00119A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 22219  00119E  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 22220  0011A2  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22221  0011A4  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22222  0011A6  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22223  0011A8  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22224  0011AA  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22225  0011AC  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22226  0011AE  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22227  0011B0  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22228  0011B2  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22229  0011B4  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22230  0011B6  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22231  0011B8  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22232  0011BA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22233  0011BC  0D0E               	mullw	14
 22234  0011BE  0E08               	movlw	low (_Channels+8)
 22235  0011C0  24F3               	addwf	prodl,w,c
 22236  0011C2  6ED9               	movwf	fsr2l,c
 22237  0011C4  0E04               	movlw	high (_Channels+8)
 22238  0011C6  20F4               	addwfc	prodh,w,c
 22239  0011C8  6EDA               	movwf	fsr2h,c
 22240  0011CA  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22241  0011CE  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22242  0011D2  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22243  0011D6  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22244                           
 22245                           ;lorawan_eu.c: 420: }
 22246  0011DA  D00C               	goto	l1031
 22247  0011DC                     l14699:
 22248                           
 22249                           ; BSR set to: 0
 22250                           ;lorawan_eu.c: 421: else
 22251                           ;lorawan_eu.c: 422: {
 22252                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22253  0011DC  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22254  0011DE  0D0E               	mullw	14
 22255  0011E0  0E08               	movlw	low (_Channels+8)
 22256  0011E2  24F3               	addwf	prodl,w,c
 22257  0011E4  6ED9               	movwf	fsr2l,c
 22258  0011E6  0E04               	movlw	high (_Channels+8)
 22259  0011E8  20F4               	addwfc	prodh,w,c
 22260  0011EA  6EDA               	movwf	fsr2h,c
 22261  0011EC  6ADE               	clrf	postinc2,c
 22262  0011EE  6ADE               	clrf	postinc2,c
 22263  0011F0  6ADE               	clrf	postinc2,c
 22264  0011F2  6ADD               	clrf	postdec2,c
 22265  0011F4                     l1031:
 22266                           
 22267                           ;lorawan_eu.c: 424: }
 22268                           ;lorawan_eu.c: 425: }
 22269                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22270  0011F4  0100               	movlb	0	; () banked
 22271  0011F6  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22272  0011F8  0D0E               	mullw	14
 22273  0011FA  0E08               	movlw	low (_Channels+8)
 22274  0011FC  24F3               	addwf	prodl,w,c
 22275  0011FE  6ED9               	movwf	fsr2l,c
 22276  001200  0E04               	movlw	high (_Channels+8)
 22277  001202  20F4               	addwfc	prodh,w,c
 22278  001204  6EDA               	movwf	fsr2h,c
 22279  001206  50DE               	movf	postinc2,w,c
 22280  001208  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22281  00120A  50DE               	movf	postinc2,w,c
 22282  00120C  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22283  00120E  50DE               	movf	postinc2,w,c
 22284  001210  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22285  001212  50DE               	movf	postinc2,w,c
 22286  001214  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22287  001216  E31F               	bnc	l14707
 22288                           
 22289                           ; BSR set to: 0
 22290  001218  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22291  00121A  0D0E               	mullw	14
 22292  00121C  0E08               	movlw	low (_Channels+8)
 22293  00121E  24F3               	addwf	prodl,w,c
 22294  001220  6ED9               	movwf	fsr2l,c
 22295  001222  0E04               	movlw	high (_Channels+8)
 22296  001224  20F4               	addwfc	prodh,w,c
 22297  001226  6EDA               	movwf	fsr2h,c
 22298  001228  50DE               	movf	postinc2,w,c
 22299  00122A  10DE               	iorwf	postinc2,w,c
 22300  00122C  10DE               	iorwf	postinc2,w,c
 22301  00122E  10DE               	iorwf	postinc2,w,c
 22302  001230  E012               	bz	l14707
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;lorawan_eu.c: 427: {
 22306                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22307  001232  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22308  001234  0D0E               	mullw	14
 22309  001236  0E08               	movlw	low (_Channels+8)
 22310  001238  24F3               	addwf	prodl,w,c
 22311  00123A  6ED9               	movwf	fsr2l,c
 22312  00123C  0E04               	movlw	high (_Channels+8)
 22313  00123E  20F4               	addwfc	prodh,w,c
 22314  001240  6EDA               	movwf	fsr2h,c
 22315  001242  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 22316  001246  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 22317  00124A  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 22318  00124E  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;lorawan_eu.c: 429: found = 1;
 22322  001252  0E01               	movlw	1
 22323  001254  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 22324  001256                     l14707:
 22325                           
 22326                           ; BSR set to: 0
 22327  001256  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22328                           
 22329                           ; BSR set to: 0
 22330  001258  0E0F               	movlw	15
 22331  00125A  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22332  00125C  D763               	goto	l14689
 22333                           
 22334                           ; BSR set to: 0
 22335                           ;lorawan_eu.c: 430: }
 22336                           ;lorawan_eu.c: 431: }
 22337                           ;lorawan_eu.c: 432: }
 22338                           ;lorawan_eu.c: 433: if (found == 1)
 22339  00125E  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22340  001260  E15F               	bnz	l14725
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;lorawan_eu.c: 434: {
 22344                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22345  001262  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22346  001266  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22347  00126A  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22348  00126E  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22349                           
 22350                           ; BSR set to: 0
 22351                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22352  001272  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22353  001274  E106               	bnz	u17010
 22354  001276  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22355  001278  0EFF               	movlw	255
 22356  00127A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22357  00127C  0E0F               	movlw	15
 22358  00127E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22359  001280  E318               	bnc	l14719
 22360  001282                     u17010:
 22361                           
 22362                           ; BSR set to: 0
 22363  001282  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22364  001286  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22365  00128A  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22366  00128E  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22367  001292  0E7D               	movlw	125
 22368  001294  6F68               	movwf	___lldiv@divisor& (0+255),b
 22369  001296  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22370  001298  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22371  00129A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22372  00129C  EC1B  F030         	call	___lldiv	;wreg free
 22373  0012A0  0E0C               	movlw	12
 22374  0012A2                     u17025:
 22375  0012A2  90D8               	bcf	status,0,c
 22376  0012A4  3764               	rlcf	?___lldiv& (0+255),f,b
 22377  0012A6  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22378  0012A8  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22379  0012AA  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22380  0012AC  2EE8               	decfsz	wreg,f,c
 22381  0012AE  D7F9               	goto	u17025
 22382  0012B0  D01F               	goto	L13
 22383  0012B2                     l14719:
 22384                           
 22385                           ; BSR set to: 0
 22386  0012B2  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22387  0012B6  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22388  0012BA  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22389  0012BE  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22390  0012C2  0E0C               	movlw	12
 22391  0012C4                     u17035:
 22392  0012C4  90D8               	bcf	status,0,c
 22393  0012C6  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22394  0012C8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22395  0012CA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22396  0012CC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22397  0012CE  2EE8               	decfsz	wreg,f,c
 22398  0012D0  D7F9               	goto	u17035
 22399  0012D2  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22400  0012D6  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22401  0012DA  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22402  0012DE  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22403  0012E2  0E7D               	movlw	125
 22404  0012E4  6F68               	movwf	___lldiv@divisor& (0+255),b
 22405  0012E6  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22406  0012E8  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22407  0012EA  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22408  0012EC  EC1B  F030         	call	___lldiv	;wreg free
 22409  0012F0                     L13:
 22410  0012F0  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2093
 22411  0012F4  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2093+1
 22412  0012F8  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2093+2
 22413  0012FC  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2093+3
 22414                           
 22415                           ; BSR set to: 0
 22416  001300  C0C0  F071         	movff	_LORAWAN_TxDone$2093,SwTimerSetTimeout@timeout
 22417  001304  C0C1  F072         	movff	_LORAWAN_TxDone$2093+1,SwTimerSetTimeout@timeout+1
 22418  001308  C0C2  F073         	movff	_LORAWAN_TxDone$2093+2,SwTimerSetTimeout@timeout+2
 22419  00130C  C0C3  F074         	movff	_LORAWAN_TxDone$2093+3,SwTimerSetTimeout@timeout+3
 22420  001310  0102               	movlb	2	; () banked
 22421  001312  51E9               	movf	(_loRa+233)& (0+255),w,b
 22422  001314  EC70  F036         	call	_SwTimerSetTimeout
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22426  001318  0102               	movlb	2	; () banked
 22427  00131A  51E9               	movf	(_loRa+233)& (0+255),w,b
 22428  00131C  EC59  F02E         	call	_SwTimerStart
 22429  001320                     l14725:
 22430                           
 22431                           ; BSR set to: 0
 22432                           ;lorawan_eu.c: 438: }
 22433                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22434  001320  0E02               	movlw	2
 22435  001322  0102               	movlb	2	; () banked
 22436  001324  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22437  001326  A4D8               	btfss	status,2,c
 22438  001328  0012               	return	
 22439                           
 22440                           ; BSR set to: 2
 22441                           ;lorawan_eu.c: 440: {
 22442                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22443  00132A  5102               	movf	(_loRa+2)& (0+255),w,b
 22444  00132C  0BF0               	andlw	-16
 22445  00132E  0908               	iorlw	8
 22446  001330  6F02               	movwf	(_loRa+2)& (0+255),b
 22447                           
 22448                           ; BSR set to: 2
 22449                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22450  001332  EF94  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22451  001336                     l14731:
 22452                           
 22453                           ; BSR set to: 2
 22454                           ;lorawan_eu.c: 445: else
 22455                           ;lorawan_eu.c: 446: {
 22456                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22457  001336  EC64  F03C         	call	_RADIO_GetStatus	;wreg free
 22458  00133A  0100               	movlb	0	; () banked
 22459  00133C  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 22460  00133E  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22461  001340  D00E               	goto	l14735
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;lorawan_eu.c: 448: {
 22465                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22466  001342  6B64               	clrf	RxDataDone@pData& (0+255),b
 22467  001344  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22468  001346  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22469  001348  0E02               	movlw	2
 22470  00134A  6F67               	movwf	RxDataDone@status& (0+255),b
 22471  00134C  0005               	push	
 22472  00134E  6EFA               	movwf	pclath,c
 22473  001350  51E8               	movf	_rxPayload& (0+255),w,b
 22474  001352  6EFD               	movwf	tosl,c
 22475  001354  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22476  001356  6EFE               	movwf	tosh,c
 22477  001358  6AFF               	clrf	tosu,c
 22478  00135A  50FA               	movf	pclath,w,c
 22479  00135C  0012               	return		;indir
 22480  00135E                     l14735:
 22481                           
 22482                           ; BSR set to: 0
 22483                           ;lorawan_eu.c: 452: else
 22484                           ;lorawan_eu.c: 453: {
 22485                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22486  00135E  51E8               	movf	_rxPayload& (0+255),w,b
 22487  001360  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22488  001362  B4D8               	btfsc	status,2,c
 22489  001364  0012               	return	
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;lorawan_eu.c: 456: {
 22493                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22494  001366  6B64               	clrf	RxDataDone@pData& (0+255),b
 22495  001368  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22496  00136A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22497  00136C  0E03               	movlw	3
 22498  00136E  6F67               	movwf	RxDataDone@status& (0+255),b
 22499  001370  0005               	push	
 22500  001372  6EFA               	movwf	pclath,c
 22501  001374  51E8               	movf	_rxPayload& (0+255),w,b
 22502  001376  6EFD               	movwf	tosl,c
 22503  001378  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22504  00137A  6EFE               	movwf	tosh,c
 22505  00137C  6AFF               	clrf	tosu,c
 22506  00137E  50FA               	movf	pclath,w,c
 22507  001380  0012               	return		;indir
 22508  001382                     __end_of_LORAWAN_TxDone:
 22509                           	opt stack 0
 22510                           tosu	equ	0xFFF
 22511                           tosh	equ	0xFFE
 22512                           tosl	equ	0xFFD
 22513                           pclath	equ	0xFFA
 22514                           tblptru	equ	0xFF8
 22515                           tblptrh	equ	0xFF7
 22516                           tblptrl	equ	0xFF6
 22517                           tablat	equ	0xFF5
 22518                           prodh	equ	0xFF4
 22519                           prodl	equ	0xFF3
 22520                           intcon	equ	0xFF2
 22521                           intcon2	equ	0xFF1
 22522                           intcon3	equ	0xFF0
 22523                           indf0	equ	0xFEF
 22524                           postinc0	equ	0xFEE
 22525                           fsr0h	equ	0xFEA
 22526                           fsr0l	equ	0xFE9
 22527                           wreg	equ	0xFE8
 22528                           postinc1	equ	0xFE6
 22529                           postdec1	equ	0xFE5
 22530                           plusw1	equ	0xFE3
 22531                           fsr1h	equ	0xFE2
 22532                           fsr1l	equ	0xFE1
 22533                           indf2	equ	0xFDF
 22534                           postinc2	equ	0xFDE
 22535                           postdec2	equ	0xFDD
 22536                           plusw2	equ	0xFDB
 22537                           fsr2h	equ	0xFDA
 22538                           fsr2l	equ	0xFD9
 22539                           status	equ	0xFD8
 22540                           
 22541 ;; *************** function _SwTimerReadValue *****************
 22542 ;; Defined at:
 22543 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22544 ;; Parameters:    Size  Location     Type
 22545 ;;  timerId         1    wreg     unsigned char 
 22546 ;; Auto vars:     Size  Location     Type
 22547 ;;  timerId         1   53[BANK0 ] unsigned char 
 22548 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 22549 ;; Return value:  Size  Location     Type
 22550 ;;                  4   45[BANK0 ] unsigned long 
 22551 ;; Registers used:
 22552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22553 ;; Tracked objects:
 22554 ;;		On entry : C/1
 22555 ;;		On exit  : F/0
 22556 ;;		Unchanged: 0/0
 22557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22559 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22561 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22562 ;;Total ram usage:        9 bytes
 22563 ;; Hardware stack levels used:    1
 22564 ;; Hardware stack levels required when called:   10
 22565 ;; This function calls:
 22566 ;;		_SwTimersInterrupt
 22567 ;; This function is called by:
 22568 ;;		_RADIO_TxDone
 22569 ;;		_RADIO_FSKPacketSent
 22570 ;;		_LORAWAN_TxDone
 22571 ;; This function uses a non-reentrant model
 22572 ;;
 22573                           
 22574                           	psect	text113
 22575  006D22                     __ptext113:
 22576                           	opt stack 0
 22577  006D22                     _SwTimerReadValue:
 22578                           	opt stack 16
 22579                           
 22580                           ;incstack = 0
 22581                           ;SwTimerReadValue@timerId stored from wreg
 22582  006D22  0100               	movlb	0	; () banked
 22583  006D24  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 22584                           
 22585                           ;sw_timer.c: 195: uint32_t ticksCount;
 22586                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22587  006D26  9EF2               	bcf	intcon,7,c	;volatile
 22588                           
 22589                           ;sw_timer.c: 200: SwTimersInterrupt();
 22590  006D28  ECA7  F025         	call	_SwTimersInterrupt	;wreg free
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22594  006D2C  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22595  006D2E  0D08               	mullw	8
 22596  006D30  0E00               	movlw	low _swTimers
 22597  006D32  24F3               	addwf	prodl,w,c
 22598  006D34  6ED9               	movwf	fsr2l,c
 22599  006D36  0E03               	movlw	high _swTimers
 22600  006D38  20F4               	addwfc	prodh,w,c
 22601  006D3A  6EDA               	movwf	fsr2h,c
 22602  006D3C  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 22603  006D40  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22604  006D44  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22605  006D48  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22609  006D4C  8EF2               	bsf	intcon,7,c	;volatile
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;sw_timer.c: 204: return ticksCount;
 22613  006D4E  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22614  006D52  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22615  006D56  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22616  006D5A  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22617                           
 22618                           ; BSR set to: 0
 22619  006D5E  0012               	return		;funcret
 22620  006D60                     __end_of_SwTimerReadValue:
 22621                           	opt stack 0
 22622                           tosu	equ	0xFFF
 22623                           tosh	equ	0xFFE
 22624                           tosl	equ	0xFFD
 22625                           pclath	equ	0xFFA
 22626                           tblptru	equ	0xFF8
 22627                           tblptrh	equ	0xFF7
 22628                           tblptrl	equ	0xFF6
 22629                           tablat	equ	0xFF5
 22630                           prodh	equ	0xFF4
 22631                           prodl	equ	0xFF3
 22632                           intcon	equ	0xFF2
 22633                           intcon2	equ	0xFF1
 22634                           intcon3	equ	0xFF0
 22635                           indf0	equ	0xFEF
 22636                           postinc0	equ	0xFEE
 22637                           fsr0h	equ	0xFEA
 22638                           fsr0l	equ	0xFE9
 22639                           wreg	equ	0xFE8
 22640                           postinc1	equ	0xFE6
 22641                           postdec1	equ	0xFE5
 22642                           plusw1	equ	0xFE3
 22643                           fsr1h	equ	0xFE2
 22644                           fsr1l	equ	0xFE1
 22645                           indf2	equ	0xFDF
 22646                           postinc2	equ	0xFDE
 22647                           postdec2	equ	0xFDD
 22648                           plusw2	equ	0xFDB
 22649                           fsr2h	equ	0xFDA
 22650                           fsr2l	equ	0xFD9
 22651                           status	equ	0xFD8
 22652                           
 22653 ;; *************** function _SwTimerIsRunning *****************
 22654 ;; Defined at:
 22655 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22656 ;; Parameters:    Size  Location     Type
 22657 ;;  timerId         1    wreg     unsigned char 
 22658 ;; Auto vars:     Size  Location     Type
 22659 ;;  timerId         1    4[BANK0 ] unsigned char 
 22660 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22661 ;; Return value:  Size  Location     Type
 22662 ;;                  1    wreg      unsigned char 
 22663 ;; Registers used:
 22664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22665 ;; Tracked objects:
 22666 ;;		On entry : F/2
 22667 ;;		On exit  : F/0
 22668 ;;		Unchanged: 0/0
 22669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22671 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22674 ;;Total ram usage:        2 bytes
 22675 ;; Hardware stack levels used:    1
 22676 ;; Hardware stack levels required when called:    7
 22677 ;; This function calls:
 22678 ;;		Nothing
 22679 ;; This function is called by:
 22680 ;;		_LORAWAN_TxDone
 22681 ;; This function uses a non-reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text114
 22685  00741C                     __ptext114:
 22686                           	opt stack 0
 22687  00741C                     _SwTimerIsRunning:
 22688                           	opt stack 19
 22689                           
 22690                           ; BSR set to: 0
 22691                           ;incstack = 0
 22692                           ;SwTimerIsRunning@timerId stored from wreg
 22693  00741C  0100               	movlb	0	; () banked
 22694  00741E  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22695                           
 22696                           ;sw_timer.c: 209: uint8_t isRunning;
 22697                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22698  007420  9EF2               	bcf	intcon,7,c	;volatile
 22699                           
 22700                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22701  007422  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22702  007424  0D08               	mullw	8
 22703  007426  0E04               	movlw	low (_swTimers+4)
 22704  007428  24F3               	addwf	prodl,w,c
 22705  00742A  6ED9               	movwf	fsr2l,c
 22706  00742C  0E03               	movlw	high (_swTimers+4)
 22707  00742E  20F4               	addwfc	prodh,w,c
 22708  007430  6EDA               	movwf	fsr2h,c
 22709  007432  50DF               	movf	indf2,w,c
 22710  007434  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22714  007436  8EF2               	bsf	intcon,7,c	;volatile
 22715                           
 22716                           ; BSR set to: 0
 22717                           ;sw_timer.c: 215: return isRunning;
 22718  007438  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22719                           
 22720                           ; BSR set to: 0
 22721  00743A  0012               	return		;funcret
 22722  00743C                     __end_of_SwTimerIsRunning:
 22723                           	opt stack 0
 22724                           tosu	equ	0xFFF
 22725                           tosh	equ	0xFFE
 22726                           tosl	equ	0xFFD
 22727                           pclath	equ	0xFFA
 22728                           tblptru	equ	0xFF8
 22729                           tblptrh	equ	0xFF7
 22730                           tblptrl	equ	0xFF6
 22731                           tablat	equ	0xFF5
 22732                           prodh	equ	0xFF4
 22733                           prodl	equ	0xFF3
 22734                           intcon	equ	0xFF2
 22735                           intcon2	equ	0xFF1
 22736                           intcon3	equ	0xFF0
 22737                           indf0	equ	0xFEF
 22738                           postinc0	equ	0xFEE
 22739                           fsr0h	equ	0xFEA
 22740                           fsr0l	equ	0xFE9
 22741                           wreg	equ	0xFE8
 22742                           postinc1	equ	0xFE6
 22743                           postdec1	equ	0xFE5
 22744                           plusw1	equ	0xFE3
 22745                           fsr1h	equ	0xFE2
 22746                           fsr1l	equ	0xFE1
 22747                           indf2	equ	0xFDF
 22748                           postinc2	equ	0xFDE
 22749                           postdec2	equ	0xFDD
 22750                           plusw2	equ	0xFDB
 22751                           fsr2h	equ	0xFDA
 22752                           fsr2l	equ	0xFD9
 22753                           status	equ	0xFD8
 22754                           
 22755 ;; *************** function _RADIO_GetStatus *****************
 22756 ;; Defined at:
 22757 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22758 ;; Parameters:    Size  Location     Type
 22759 ;;		None
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      unsigned char 
 22764 ;; Registers used:
 22765 ;;		wreg, status,2
 22766 ;; Tracked objects:
 22767 ;;		On entry : D/2
 22768 ;;		On exit  : F/1
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22775 ;;Total ram usage:        0 bytes
 22776 ;; Hardware stack levels used:    1
 22777 ;; Hardware stack levels required when called:    7
 22778 ;; This function calls:
 22779 ;;		Nothing
 22780 ;; This function is called by:
 22781 ;;		_LORAWAN_TxDone
 22782 ;;		_LORAWAN_ReceiveWindow2Callback
 22783 ;;		_LORAWAN_RxDone
 22784 ;; This function uses a non-reentrant model
 22785 ;;
 22786                           
 22787                           	psect	text115
 22788  0078C8                     __ptext115:
 22789                           	opt stack 0
 22790  0078C8                     _RADIO_GetStatus:
 22791                           	opt stack 19
 22792                           
 22793                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22794                           
 22795                           ; BSR set to: 0
 22796                           ;incstack = 0
 22797  0078C8  0101               	movlb	1	; () banked
 22798  0078CA  51A1               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22799                           
 22800                           ; BSR set to: 1
 22801  0078CC  0012               	return		;funcret
 22802  0078CE                     __end_of_RADIO_GetStatus:
 22803                           	opt stack 0
 22804                           tosu	equ	0xFFF
 22805                           tosh	equ	0xFFE
 22806                           tosl	equ	0xFFD
 22807                           pclath	equ	0xFFA
 22808                           tblptru	equ	0xFF8
 22809                           tblptrh	equ	0xFF7
 22810                           tblptrl	equ	0xFF6
 22811                           tablat	equ	0xFF5
 22812                           prodh	equ	0xFF4
 22813                           prodl	equ	0xFF3
 22814                           intcon	equ	0xFF2
 22815                           intcon2	equ	0xFF1
 22816                           intcon3	equ	0xFF0
 22817                           indf0	equ	0xFEF
 22818                           postinc0	equ	0xFEE
 22819                           fsr0h	equ	0xFEA
 22820                           fsr0l	equ	0xFE9
 22821                           wreg	equ	0xFE8
 22822                           postinc1	equ	0xFE6
 22823                           postdec1	equ	0xFE5
 22824                           plusw1	equ	0xFE3
 22825                           fsr1h	equ	0xFE2
 22826                           fsr1l	equ	0xFE1
 22827                           indf2	equ	0xFDF
 22828                           postinc2	equ	0xFDE
 22829                           postdec2	equ	0xFDD
 22830                           plusw2	equ	0xFDB
 22831                           fsr2h	equ	0xFDA
 22832                           fsr2l	equ	0xFD9
 22833                           status	equ	0xFD8
 22834                           
 22835 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22836 ;; Defined at:
 22837 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22838 ;; Parameters:    Size  Location     Type
 22839 ;;		None
 22840 ;; Auto vars:     Size  Location     Type
 22841 ;;		None
 22842 ;; Return value:  Size  Location     Type
 22843 ;;                  1    wreg      void 
 22844 ;; Registers used:
 22845 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22846 ;; Tracked objects:
 22847 ;;		On entry : F/2
 22848 ;;		On exit  : F/0
 22849 ;;		Unchanged: 0/0
 22850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22855 ;;Total ram usage:        0 bytes
 22856 ;; Hardware stack levels used:    1
 22857 ;; Hardware stack levels required when called:   13
 22858 ;; This function calls:
 22859 ;;		_ConfigureRadioRx
 22860 ;;		_RADIO_ReceiveStart
 22861 ;;		_RADIO_ReceiveStop
 22862 ;;		_RADIO_ReleaseData
 22863 ;;		_ResetParametersForConfirmedTransmission
 22864 ;;		_ResetParametersForUnconfirmedTransmission
 22865 ;;		_RxDataDone
 22866 ;; This function is called by:
 22867 ;;		_LORAWAN_TxDone
 22868 ;;		_LORAWAN_ReceiveWindow2Callback
 22869 ;;		_LORAWAN_RxDone
 22870 ;;		_SetReceptionNotOkState
 22871 ;; This function uses a non-reentrant model
 22872 ;;
 22873                           
 22874                           	psect	text116
 22875  006528                     __ptext116:
 22876                           	opt stack 0
 22877  006528                     _LORAWAN_EnterContinuousReceive:
 22878                           	opt stack 13
 22879                           
 22880                           ; BSR set to: 2
 22881                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22882                           
 22883                           ; BSR set to: 1
 22884                           ;incstack = 0
 22885  006528  EC3C  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22886                           
 22887                           ; BSR set to: 1
 22888                           ;lorawan.c: 918: RADIO_ReleaseData();
 22889  00652C  EC67  F03C         	call	_RADIO_ReleaseData	;wreg free
 22890                           
 22891                           ; BSR set to: 1
 22892                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22893  006530  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22894  006534  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22895  006538  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22896  00653C  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22897  006540  0102               	movlb	2	; () banked
 22898  006542  511C               	movf	(_loRa+28)& (0+255),w,b
 22899  006544  EC50  F039         	call	_ConfigureRadioRx
 22900                           
 22901                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22902  006548  0100               	movlb	0	; () banked
 22903  00654A  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22904  00654C  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22905  00654E  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
 22906  006552  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22907  006554  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22908  006556  B4D8               	btfsc	status,2,c
 22909  006558  0012               	return	
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;lorawan.c: 923: {
 22913                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22914  00655A  ECB0  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22915                           
 22916                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22917  00655E  ECA9  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22918                           
 22919                           ; BSR set to: 2
 22920                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22921  006562  0EF0               	movlw	-16
 22922  006564  1702               	andwf	(_loRa+2)& (0+255),f,b
 22923                           
 22924                           ; BSR set to: 2
 22925                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22926  006566  0100               	movlb	0	; () banked
 22927  006568  51E8               	movf	_rxPayload& (0+255),w,b
 22928  00656A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22929  00656C  B4D8               	btfsc	status,2,c
 22930  00656E  0012               	return	
 22931                           
 22932                           ; BSR set to: 0
 22933                           ;lorawan.c: 928: {
 22934                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22935  006570  6B64               	clrf	RxDataDone@pData& (0+255),b
 22936  006572  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22937  006574  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22938  006576  6B67               	clrf	RxDataDone@status& (0+255),b
 22939  006578  0005               	push	
 22940  00657A  6AFA               	clrf	pclath,c
 22941  00657C  51E8               	movf	_rxPayload& (0+255),w,b
 22942  00657E  6EFD               	movwf	tosl,c
 22943  006580  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22944  006582  6EFE               	movwf	tosh,c
 22945  006584  6AFF               	clrf	tosu,c
 22946  006586  50FA               	movf	pclath,w,c
 22947  006588  0012               	return		;indir
 22948  00658A                     __end_of_LORAWAN_EnterContinuousReceive:
 22949                           	opt stack 0
 22950                           tosu	equ	0xFFF
 22951                           tosh	equ	0xFFE
 22952                           tosl	equ	0xFFD
 22953                           pclath	equ	0xFFA
 22954                           tblptru	equ	0xFF8
 22955                           tblptrh	equ	0xFF7
 22956                           tblptrl	equ	0xFF6
 22957                           tablat	equ	0xFF5
 22958                           prodh	equ	0xFF4
 22959                           prodl	equ	0xFF3
 22960                           intcon	equ	0xFF2
 22961                           intcon2	equ	0xFF1
 22962                           intcon3	equ	0xFF0
 22963                           indf0	equ	0xFEF
 22964                           postinc0	equ	0xFEE
 22965                           fsr0h	equ	0xFEA
 22966                           fsr0l	equ	0xFE9
 22967                           wreg	equ	0xFE8
 22968                           postinc1	equ	0xFE6
 22969                           postdec1	equ	0xFE5
 22970                           plusw1	equ	0xFE3
 22971                           fsr1h	equ	0xFE2
 22972                           fsr1l	equ	0xFE1
 22973                           indf2	equ	0xFDF
 22974                           postinc2	equ	0xFDE
 22975                           postdec2	equ	0xFDD
 22976                           plusw2	equ	0xFDB
 22977                           fsr2h	equ	0xFDA
 22978                           fsr2l	equ	0xFD9
 22979                           status	equ	0xFD8
 22980                           
 22981 ;; *************** function _RxDataDone *****************
 22982 ;; Defined at:
 22983 ;;		line 102 in file "main.c"
 22984 ;; Parameters:    Size  Location     Type
 22985 ;;  pData           2    4[BANK0 ] PTR unsigned char 
 22986 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22987 ;;  dataLength      1    6[BANK0 ] unsigned char 
 22988 ;;  status          1    7[BANK0 ] enum E8000
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;		None
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1    wreg      void 
 22993 ;; Registers used:
 22994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22995 ;; Tracked objects:
 22996 ;;		On entry : F/0
 22997 ;;		On exit  : F/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23003 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23004 ;;Total ram usage:        5 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:    7
 23007 ;; This function calls:
 23008 ;;		Nothing
 23009 ;; This function is called by:
 23010 ;;		_main
 23011 ;;		_LORAWAN_EnterContinuousReceive
 23012 ;;		_LORAWAN_ReceiveWindow2Callback
 23013 ;;		_SetReceptionNotOkState
 23014 ;;		_LORAWAN_RxDone
 23015 ;;		_LORAWAN_RxTimeout
 23016 ;;		_LORAWAN_TxDone
 23017 ;;		_AckRetransmissionCallback
 23018 ;;		_UnconfirmedTransmissionCallback
 23019 ;; This function uses a non-reentrant model
 23020 ;;
 23021                           
 23022                           	psect	text117
 23023  0070A2                     __ptext117:
 23024                           	opt stack 0
 23025  0070A2                     _RxDataDone:
 23026                           	opt stack 20
 23027                           
 23028                           ; BSR set to: 0
 23029                           ;main.c: 104: portNumber = pData[0];
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;incstack = 0
 23033  0070A2  C064  FFD9         	movff	RxDataDone@pData,fsr2l
 23034  0070A6  C065  FFDA         	movff	RxDataDone@pData+1,fsr2h
 23035  0070AA  50DF               	movf	indf2,w,c
 23036  0070AC  0101               	movlb	1	; () banked
 23037  0070AE  6FD8               	movwf	_portNumber& (0+255),b
 23038                           
 23039                           ; BSR set to: 1
 23040                           ;main.c: 105: PORTCbits.RC5 = pData[1];
 23041  0070B0  0100               	movlb	0	; () banked
 23042  0070B2  EE20 F001          	lfsr	2,1
 23043  0070B6  5164               	movf	RxDataDone@pData& (0+255),w,b
 23044  0070B8  26D9               	addwf	fsr2l,f,c
 23045  0070BA  5165               	movf	(RxDataDone@pData+1)& (0+255),w,b
 23046  0070BC  22DA               	addwfc	fsr2h,f,c
 23047  0070BE  50DF               	movf	indf2,w,c
 23048  0070C0  6F68               	movwf	??_RxDataDone& (0+255),b
 23049  0070C2  3B68               	swapf	??_RxDataDone& (0+255),f,b
 23050  0070C4  4768               	rlncf	??_RxDataDone& (0+255),f,b
 23051  0070C6  5082               	movf	3970,w,c	;volatile
 23052  0070C8  1968               	xorwf	??_RxDataDone& (0+255),w,b
 23053  0070CA  0BDF               	andlw	-33
 23054  0070CC  1968               	xorwf	??_RxDataDone& (0+255),w,b
 23055  0070CE  6E82               	movwf	3970,c	;volatile
 23056                           
 23057                           ; BSR set to: 0
 23058  0070D0  0012               	return		;funcret
 23059  0070D2                     __end_of_RxDataDone:
 23060                           	opt stack 0
 23061                           tosu	equ	0xFFF
 23062                           tosh	equ	0xFFE
 23063                           tosl	equ	0xFFD
 23064                           pclath	equ	0xFFA
 23065                           tblptru	equ	0xFF8
 23066                           tblptrh	equ	0xFF7
 23067                           tblptrl	equ	0xFF6
 23068                           tablat	equ	0xFF5
 23069                           prodh	equ	0xFF4
 23070                           prodl	equ	0xFF3
 23071                           intcon	equ	0xFF2
 23072                           intcon2	equ	0xFF1
 23073                           intcon3	equ	0xFF0
 23074                           indf0	equ	0xFEF
 23075                           postinc0	equ	0xFEE
 23076                           fsr0h	equ	0xFEA
 23077                           fsr0l	equ	0xFE9
 23078                           wreg	equ	0xFE8
 23079                           postinc1	equ	0xFE6
 23080                           postdec1	equ	0xFE5
 23081                           plusw1	equ	0xFE3
 23082                           fsr1h	equ	0xFE2
 23083                           fsr1l	equ	0xFE1
 23084                           indf2	equ	0xFDF
 23085                           postinc2	equ	0xFDE
 23086                           postdec2	equ	0xFDD
 23087                           plusw2	equ	0xFDB
 23088                           fsr2h	equ	0xFDA
 23089                           fsr2l	equ	0xFD9
 23090                           status	equ	0xFD8
 23091                           
 23092 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23093 ;; Defined at:
 23094 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23095 ;; Parameters:    Size  Location     Type
 23096 ;;		None
 23097 ;; Auto vars:     Size  Location     Type
 23098 ;;		None
 23099 ;; Return value:  Size  Location     Type
 23100 ;;                  1    wreg      void 
 23101 ;; Registers used:
 23102 ;;		wreg, status,2
 23103 ;; Tracked objects:
 23104 ;;		On entry : D/0
 23105 ;;		On exit  : F/2
 23106 ;;		Unchanged: 0/0
 23107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23112 ;;Total ram usage:        0 bytes
 23113 ;; Hardware stack levels used:    1
 23114 ;; Hardware stack levels required when called:    7
 23115 ;; This function calls:
 23116 ;;		Nothing
 23117 ;; This function is called by:
 23118 ;;		_LORAWAN_RxTimeout
 23119 ;;		_LORAWAN_ReceiveWindow2Callback
 23120 ;;		_LORAWAN_EnterContinuousReceive
 23121 ;;		_UnconfirmedTransmissionCallback
 23122 ;; This function uses a non-reentrant model
 23123 ;;
 23124                           
 23125                           	psect	text118
 23126  007752                     __ptext118:
 23127                           	opt stack 0
 23128  007752                     _ResetParametersForUnconfirmedTransmission:
 23129                           	opt stack 20
 23130                           
 23131                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23132                           
 23133                           ; BSR set to: 0
 23134                           ;incstack = 0
 23135  007752  0EF0               	movlw	-16
 23136  007754  0102               	movlb	2	; () banked
 23137  007756  1702               	andwf	(_loRa+2)& (0+255),f,b
 23138                           
 23139                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23140  007758  0E01               	movlw	1
 23141  00775A  6FD8               	movwf	(_loRa+216)& (0+255),b
 23142                           
 23143                           ; BSR set to: 2
 23144                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23145  00775C  6BA7               	clrf	(_loRa+167)& (0+255),b
 23146                           
 23147                           ; BSR set to: 2
 23148  00775E  0012               	return		;funcret
 23149  007760                     __end_of_ResetParametersForUnconfirmedTransmission:
 23150                           	opt stack 0
 23151                           tosu	equ	0xFFF
 23152                           tosh	equ	0xFFE
 23153                           tosl	equ	0xFFD
 23154                           pclath	equ	0xFFA
 23155                           tblptru	equ	0xFF8
 23156                           tblptrh	equ	0xFF7
 23157                           tblptrl	equ	0xFF6
 23158                           tablat	equ	0xFF5
 23159                           prodh	equ	0xFF4
 23160                           prodl	equ	0xFF3
 23161                           intcon	equ	0xFF2
 23162                           intcon2	equ	0xFF1
 23163                           intcon3	equ	0xFF0
 23164                           indf0	equ	0xFEF
 23165                           postinc0	equ	0xFEE
 23166                           fsr0h	equ	0xFEA
 23167                           fsr0l	equ	0xFE9
 23168                           wreg	equ	0xFE8
 23169                           postinc1	equ	0xFE6
 23170                           postdec1	equ	0xFE5
 23171                           plusw1	equ	0xFE3
 23172                           fsr1h	equ	0xFE2
 23173                           fsr1l	equ	0xFE1
 23174                           indf2	equ	0xFDF
 23175                           postinc2	equ	0xFDE
 23176                           postdec2	equ	0xFDD
 23177                           plusw2	equ	0xFDB
 23178                           fsr2h	equ	0xFDA
 23179                           fsr2l	equ	0xFD9
 23180                           status	equ	0xFD8
 23181                           
 23182 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23183 ;; Defined at:
 23184 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23185 ;; Parameters:    Size  Location     Type
 23186 ;;		None
 23187 ;; Auto vars:     Size  Location     Type
 23188 ;;		None
 23189 ;; Return value:  Size  Location     Type
 23190 ;;                  1    wreg      void 
 23191 ;; Registers used:
 23192 ;;		wreg, status,2
 23193 ;; Tracked objects:
 23194 ;;		On entry : D/2
 23195 ;;		On exit  : F/2
 23196 ;;		Unchanged: 0/0
 23197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23202 ;;Total ram usage:        0 bytes
 23203 ;; Hardware stack levels used:    1
 23204 ;; Hardware stack levels required when called:    7
 23205 ;; This function calls:
 23206 ;;		Nothing
 23207 ;; This function is called by:
 23208 ;;		_LORAWAN_RxTimeout
 23209 ;;		_LORAWAN_ReceiveWindow2Callback
 23210 ;;		_LORAWAN_EnterContinuousReceive
 23211 ;;		_AckRetransmissionCallback
 23212 ;; This function uses a non-reentrant model
 23213 ;;
 23214                           
 23215                           	psect	text119
 23216  007760                     __ptext119:
 23217                           	opt stack 0
 23218  007760                     _ResetParametersForConfirmedTransmission:
 23219                           	opt stack 18
 23220                           
 23221                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23222                           
 23223                           ; BSR set to: 2
 23224                           ;incstack = 0
 23225  007760  0EF0               	movlw	-16
 23226  007762  0102               	movlb	2	; () banked
 23227  007764  1702               	andwf	(_loRa+2)& (0+255),f,b
 23228                           
 23229                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23230  007766  0E01               	movlw	1
 23231  007768  6FD9               	movwf	(_loRa+217)& (0+255),b
 23232                           
 23233                           ; BSR set to: 2
 23234                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23235  00776A  9100               	bcf	_loRa& (0+255),0,b
 23236                           
 23237                           ; BSR set to: 2
 23238  00776C  0C01               	retlw	1	;funcret
 23239  00776E                     __end_of_ResetParametersForConfirmedTransmission:
 23240                           	opt stack 0
 23241                           tosu	equ	0xFFF
 23242                           tosh	equ	0xFFE
 23243                           tosl	equ	0xFFD
 23244                           pclath	equ	0xFFA
 23245                           tblptru	equ	0xFF8
 23246                           tblptrh	equ	0xFF7
 23247                           tblptrl	equ	0xFF6
 23248                           tablat	equ	0xFF5
 23249                           prodh	equ	0xFF4
 23250                           prodl	equ	0xFF3
 23251                           intcon	equ	0xFF2
 23252                           intcon2	equ	0xFF1
 23253                           intcon3	equ	0xFF0
 23254                           indf0	equ	0xFEF
 23255                           postinc0	equ	0xFEE
 23256                           fsr0h	equ	0xFEA
 23257                           fsr0l	equ	0xFE9
 23258                           wreg	equ	0xFE8
 23259                           postinc1	equ	0xFE6
 23260                           postdec1	equ	0xFE5
 23261                           plusw1	equ	0xFE3
 23262                           fsr1h	equ	0xFE2
 23263                           fsr1l	equ	0xFE1
 23264                           indf2	equ	0xFDF
 23265                           postinc2	equ	0xFDE
 23266                           postdec2	equ	0xFDD
 23267                           plusw2	equ	0xFDB
 23268                           fsr2h	equ	0xFDA
 23269                           fsr2l	equ	0xFD9
 23270                           status	equ	0xFD8
 23271                           
 23272 ;; *************** function _RADIO_ReleaseData *****************
 23273 ;; Defined at:
 23274 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23275 ;; Parameters:    Size  Location     Type
 23276 ;;		None
 23277 ;; Auto vars:     Size  Location     Type
 23278 ;;		None
 23279 ;; Return value:  Size  Location     Type
 23280 ;;                  1    wreg      void 
 23281 ;; Registers used:
 23282 ;;		status,2, status,0
 23283 ;; Tracked objects:
 23284 ;;		On entry : C/2
 23285 ;;		On exit  : F/1
 23286 ;;		Unchanged: 0/0
 23287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23292 ;;Total ram usage:        0 bytes
 23293 ;; Hardware stack levels used:    1
 23294 ;; Hardware stack levels required when called:    7
 23295 ;; This function calls:
 23296 ;;		Nothing
 23297 ;; This function is called by:
 23298 ;;		_LORAWAN_ReceiveWindow1Callback
 23299 ;;		_LORAWAN_ReceiveWindow2Callback
 23300 ;;		_LORAWAN_EnterContinuousReceive
 23301 ;;		_LORAWAN_RxDone
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text120
 23306  0078CE                     __ptext120:
 23307                           	opt stack 0
 23308  0078CE                     _RADIO_ReleaseData:
 23309                           	opt stack 18
 23310                           
 23311                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23312                           
 23313                           ; BSR set to: 2
 23314                           ;incstack = 0
 23315  0078CE  0101               	movlb	1	; () banked
 23316  0078D0  95A1               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23317                           
 23318                           ; BSR set to: 1
 23319  0078D2  0012               	return		;funcret
 23320  0078D4                     __end_of_RADIO_ReleaseData:
 23321                           	opt stack 0
 23322                           tosu	equ	0xFFF
 23323                           tosh	equ	0xFFE
 23324                           tosl	equ	0xFFD
 23325                           pclath	equ	0xFFA
 23326                           tblptru	equ	0xFF8
 23327                           tblptrh	equ	0xFF7
 23328                           tblptrl	equ	0xFF6
 23329                           tablat	equ	0xFF5
 23330                           prodh	equ	0xFF4
 23331                           prodl	equ	0xFF3
 23332                           intcon	equ	0xFF2
 23333                           intcon2	equ	0xFF1
 23334                           intcon3	equ	0xFF0
 23335                           indf0	equ	0xFEF
 23336                           postinc0	equ	0xFEE
 23337                           fsr0h	equ	0xFEA
 23338                           fsr0l	equ	0xFE9
 23339                           wreg	equ	0xFE8
 23340                           postinc1	equ	0xFE6
 23341                           postdec1	equ	0xFE5
 23342                           plusw1	equ	0xFE3
 23343                           fsr1h	equ	0xFE2
 23344                           fsr1l	equ	0xFE1
 23345                           indf2	equ	0xFDF
 23346                           postinc2	equ	0xFDE
 23347                           postdec2	equ	0xFDD
 23348                           plusw2	equ	0xFDB
 23349                           fsr2h	equ	0xFDA
 23350                           fsr2l	equ	0xFD9
 23351                           status	equ	0xFD8
 23352                           
 23353 ;; *************** function _RADIO_ReceiveStop *****************
 23354 ;; Defined at:
 23355 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23356 ;; Parameters:    Size  Location     Type
 23357 ;;		None
 23358 ;; Auto vars:     Size  Location     Type
 23359 ;;		None
 23360 ;; Return value:  Size  Location     Type
 23361 ;;                  1    wreg      void 
 23362 ;; Registers used:
 23363 ;;		wreg, status,2, status,0, cstack
 23364 ;; Tracked objects:
 23365 ;;		On entry : F/2
 23366 ;;		On exit  : F/1
 23367 ;;		Unchanged: 0/0
 23368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23373 ;;Total ram usage:        0 bytes
 23374 ;; Hardware stack levels used:    1
 23375 ;; Hardware stack levels required when called:   11
 23376 ;; This function calls:
 23377 ;;		_RADIO_WriteMode
 23378 ;; This function is called by:
 23379 ;;		_LORAWAN_Send
 23380 ;;		_LORAWAN_ReceiveWindow1Callback
 23381 ;;		_LORAWAN_ReceiveWindow2Callback
 23382 ;;		_LORAWAN_EnterContinuousReceive
 23383 ;; This function uses a non-reentrant model
 23384 ;;
 23385                           
 23386                           	psect	text121
 23387  007478                     __ptext121:
 23388                           	opt stack 0
 23389  007478                     _RADIO_ReceiveStop:
 23390                           	opt stack 17
 23391                           
 23392                           ; BSR set to: 2
 23393                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23394                           
 23395                           ; BSR set to: 1
 23396                           ;incstack = 0
 23397  007478  0E02               	movlw	2
 23398  00747A  0101               	movlb	1	; () banked
 23399  00747C  19A1               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23400  00747E  A4D8               	btfss	status,2,c
 23401  007480  0012               	return	
 23402                           
 23403                           ; BSR set to: 1
 23404                           ;radio_driver_SX1276.c: 954: {
 23405                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23406  007482  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23407  007486  0E00               	movlw	0
 23408  007488  0100               	movlb	0	; () banked
 23409  00748A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23410  00748C  EC5F  F028         	call	_RADIO_WriteMode
 23411                           
 23412                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23413  007490  0101               	movlb	1	; () banked
 23414  007492  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23415                           
 23416                           ; BSR set to: 1
 23417  007494  0012               	return		;funcret
 23418  007496                     __end_of_RADIO_ReceiveStop:
 23419                           	opt stack 0
 23420                           tosu	equ	0xFFF
 23421                           tosh	equ	0xFFE
 23422                           tosl	equ	0xFFD
 23423                           pclath	equ	0xFFA
 23424                           tblptru	equ	0xFF8
 23425                           tblptrh	equ	0xFF7
 23426                           tblptrl	equ	0xFF6
 23427                           tablat	equ	0xFF5
 23428                           prodh	equ	0xFF4
 23429                           prodl	equ	0xFF3
 23430                           intcon	equ	0xFF2
 23431                           intcon2	equ	0xFF1
 23432                           intcon3	equ	0xFF0
 23433                           indf0	equ	0xFEF
 23434                           postinc0	equ	0xFEE
 23435                           fsr0h	equ	0xFEA
 23436                           fsr0l	equ	0xFE9
 23437                           wreg	equ	0xFE8
 23438                           postinc1	equ	0xFE6
 23439                           postdec1	equ	0xFE5
 23440                           plusw1	equ	0xFE3
 23441                           fsr1h	equ	0xFE2
 23442                           fsr1l	equ	0xFE1
 23443                           indf2	equ	0xFDF
 23444                           postinc2	equ	0xFDE
 23445                           postdec2	equ	0xFDD
 23446                           plusw2	equ	0xFDB
 23447                           fsr2h	equ	0xFDA
 23448                           fsr2l	equ	0xFD9
 23449                           status	equ	0xFD8
 23450                           
 23451 ;; *************** function _RADIO_ReceiveStart *****************
 23452 ;; Defined at:
 23453 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23454 ;; Parameters:    Size  Location     Type
 23455 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 23456 ;; Auto vars:     Size  Location     Type
 23457 ;;		None
 23458 ;; Return value:  Size  Location     Type
 23459 ;;                  2   54[BANK0 ] enum E7805
 23460 ;; Registers used:
 23461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23462 ;; Tracked objects:
 23463 ;;		On entry : F/0
 23464 ;;		On exit  : F/0
 23465 ;;		Unchanged: 0/0
 23466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23468 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23469 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23470 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23471 ;;Total ram usage:       10 bytes
 23472 ;; Hardware stack levels used:    1
 23473 ;; Hardware stack levels required when called:   12
 23474 ;; This function calls:
 23475 ;;		_RADIO_RegisterWrite
 23476 ;;		_RADIO_WriteConfiguration
 23477 ;;		_RADIO_WriteMode
 23478 ;;		_SwTimerSetTimeout
 23479 ;;		_SwTimerStart
 23480 ;;		___lldiv
 23481 ;; This function is called by:
 23482 ;;		_LORAWAN_ReceiveWindow1Callback
 23483 ;;		_LORAWAN_ReceiveWindow2Callback
 23484 ;;		_LORAWAN_EnterContinuousReceive
 23485 ;; This function uses a non-reentrant model
 23486 ;;
 23487                           
 23488                           	psect	text122
 23489  002BB6                     __ptext122:
 23490                           	opt stack 0
 23491  002BB6                     _RADIO_ReceiveStart:
 23492                           	opt stack 13
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23496                           
 23497                           ; BSR set to: 1
 23498                           ;incstack = 0
 23499  002BB6  0101               	movlb	1	; () banked
 23500  002BB8  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23501  002BBA  D006               	goto	l12749
 23502                           
 23503                           ; BSR set to: 1
 23504                           ;radio_driver_SX1276.c: 878: {
 23505                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23506  002BBC  0E80               	movlw	128
 23507  002BBE  0100               	movlb	0	; () banked
 23508  002BC0  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23509  002BC2  0E03               	movlw	3
 23510  002BC4  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23511  002BC6  0C03               	retlw	3
 23512  002BC8                     l12749:
 23513                           
 23514                           ; BSR set to: 1
 23515                           ;radio_driver_SX1276.c: 880: }
 23516                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23517  002BC8  C1A1  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23518  002BCC  0E03               	movlw	3
 23519  002BCE  0100               	movlb	0	; () banked
 23520  002BD0  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23521  002BD2  E005               	bz	l12755
 23522                           
 23523                           ; BSR set to: 0
 23524                           ;radio_driver_SX1276.c: 883: {
 23525                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23526  002BD4  0E80               	movlw	128
 23527  002BD6  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23528  002BD8  0E04               	movlw	4
 23529  002BDA  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23530  002BDC  0C04               	retlw	4
 23531  002BDE                     l12755:
 23532                           
 23533                           ; BSR set to: 0
 23534                           ;radio_driver_SX1276.c: 885: }
 23535                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23536  002BDE  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23537  002BE0  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23538  002BE2  E107               	bnz	l12759
 23539                           
 23540                           ; BSR set to: 0
 23541                           ;radio_driver_SX1276.c: 888: {
 23542                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23543  002BE4  0E00               	movlw	0
 23544  002BE6  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23545  002BE8  0E04               	movlw	4
 23546  002BEA  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23547  002BEC  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23548                           
 23549                           ;radio_driver_SX1276.c: 890: }
 23550  002BF0  D006               	goto	l12761
 23551  002BF2                     l12759:
 23552                           
 23553                           ; BSR set to: 0
 23554                           ;radio_driver_SX1276.c: 891: else
 23555                           ;radio_driver_SX1276.c: 892: {
 23556                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23557  002BF2  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23558  002BF6  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23559  002BFA  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23560  002BFE                     l12761:
 23561                           
 23562                           ;radio_driver_SX1276.c: 894: }
 23563                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23564  002BFE  0101               	movlb	1	; () banked
 23565  002C00  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23566  002C02  E111               	bnz	l12765
 23567                           
 23568                           ; BSR set to: 1
 23569                           ;radio_driver_SX1276.c: 897: {
 23570                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23571  002C04  0E01               	movlw	1
 23572  002C06  0100               	movlb	0	; () banked
 23573  002C08  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23574  002C0A  0E22               	movlw	34
 23575  002C0C  EC4B  F03A         	call	_RADIO_RegisterWrite
 23576                           
 23577                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23578  002C10  0100               	movlb	0	; () banked
 23579  002C12  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23580  002C14  0E40               	movlw	64
 23581  002C16  EC4B  F03A         	call	_RADIO_RegisterWrite
 23582                           
 23583                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23584  002C1A  0100               	movlb	0	; () banked
 23585  002C1C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23586  002C1E  0E41               	movlw	65
 23587  002C20  EC4B  F03A         	call	_RADIO_RegisterWrite
 23588                           
 23589                           ;radio_driver_SX1276.c: 908: }
 23590  002C24  D014               	goto	l12767
 23591  002C26                     l12765:
 23592                           
 23593                           ; BSR set to: 1
 23594                           ;radio_driver_SX1276.c: 909: else
 23595                           ;radio_driver_SX1276.c: 910: {
 23596                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23597  002C26  C1B2  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23598  002C2A  0E12               	movlw	18
 23599  002C2C  EC4B  F03A         	call	_RADIO_RegisterWrite
 23600                           
 23601                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23602  002C30  C1B3  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23603  002C34  0E13               	movlw	19
 23604  002C36  EC4B  F03A         	call	_RADIO_RegisterWrite
 23605                           
 23606                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23607  002C3A  0100               	movlb	0	; () banked
 23608  002C3C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23609  002C3E  0E40               	movlw	64
 23610  002C40  EC4B  F03A         	call	_RADIO_RegisterWrite
 23611                           
 23612                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23613  002C44  0100               	movlb	0	; () banked
 23614  002C46  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23615  002C48  0E41               	movlw	65
 23616  002C4A  EC4B  F03A         	call	_RADIO_RegisterWrite
 23617  002C4E                     l12767:
 23618                           
 23619                           ;radio_driver_SX1276.c: 917: }
 23620                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23621  002C4E  0101               	movlb	1	; () banked
 23622  002C50  83A1               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23623                           
 23624                           ; BSR set to: 1
 23625                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23626  002C52  0EE7               	movlw	231
 23627  002C54  17A1               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23628                           
 23629                           ; BSR set to: 1
 23630                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23631  002C56  0100               	movlb	0	; () banked
 23632  002C58  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23633  002C5A  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23634  002C5C  E108               	bnz	l12775
 23635                           
 23636                           ; BSR set to: 0
 23637                           ;radio_driver_SX1276.c: 925: {
 23638                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23639  002C5E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23640  002C62  0E00               	movlw	0
 23641  002C64  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23642  002C66  0E05               	movlw	5
 23643  002C68  EC5F  F028         	call	_RADIO_WriteMode
 23644                           
 23645                           ;radio_driver_SX1276.c: 927: }
 23646  002C6C  D041               	goto	l12785
 23647  002C6E                     l12775:
 23648                           
 23649                           ; BSR set to: 0
 23650                           ;radio_driver_SX1276.c: 928: else
 23651                           ;radio_driver_SX1276.c: 929: {
 23652                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23653  002C6E  0101               	movlb	1	; () banked
 23654  002C70  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23655  002C72  E109               	bnz	l12779
 23656                           
 23657                           ; BSR set to: 1
 23658                           ;radio_driver_SX1276.c: 931: {
 23659                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23660  002C74  0E01               	movlw	1
 23661  002C76  0100               	movlb	0	; () banked
 23662  002C78  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23663  002C7A  0E00               	movlw	0
 23664  002C7C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23665  002C7E  0E06               	movlw	6
 23666  002C80  EC5F  F028         	call	_RADIO_WriteMode
 23667                           
 23668                           ;radio_driver_SX1276.c: 933: }
 23669  002C84  D035               	goto	l12785
 23670  002C86                     l12779:
 23671                           
 23672                           ; BSR set to: 1
 23673                           ;radio_driver_SX1276.c: 934: else
 23674                           ;radio_driver_SX1276.c: 935: {
 23675                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23676  002C86  0E00               	movlw	0
 23677  002C88  0100               	movlb	0	; () banked
 23678  002C8A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23679  002C8C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23680  002C8E  0E05               	movlw	5
 23681  002C90  EC5F  F028         	call	_RADIO_WriteMode
 23682                           
 23683                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23684  002C94  0100               	movlb	0	; () banked
 23685  002C96  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23686  002C98  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23687  002C9A  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23688  002C9C  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23689  002C9E  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23690  002CA0  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23691  002CA2  0E0C               	movlw	12
 23692  002CA4                     u13715:
 23693  002CA4  90D8               	bcf	status,0,c
 23694  002CA6  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23695  002CA8  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23696  002CAA  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23697  002CAC  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23698  002CAE  2EE8               	decfsz	wreg,f,c
 23699  002CB0  D7F9               	goto	u13715
 23700  002CB2  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23701  002CB6  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23702  002CBA  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23703  002CBE  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23704  002CC2  0E7D               	movlw	125
 23705  002CC4  6F68               	movwf	___lldiv@divisor& (0+255),b
 23706  002CC6  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23707  002CC8  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23708  002CCA  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23709  002CCC  EC1B  F030         	call	___lldiv	;wreg free
 23710  002CD0  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23711  002CD4  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23712  002CD8  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23713  002CDC  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23714  002CE0  0101               	movlb	1	; () banked
 23715  002CE2  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23716  002CE4  EC70  F036         	call	_SwTimerSetTimeout
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23720  002CE8  0101               	movlb	1	; () banked
 23721  002CEA  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23722  002CEC  EC59  F02E         	call	_SwTimerStart
 23723  002CF0                     l12785:
 23724                           
 23725                           ;radio_driver_SX1276.c: 939: }
 23726                           ;radio_driver_SX1276.c: 940: }
 23727                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23728  002CF0  0101               	movlb	1	; () banked
 23729  002CF2  51A8               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23730  002CF4  11A9               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23731  002CF6  11AA               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23732  002CF8  11AB               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23733  002CFA  E059               	bz	l12797
 23734                           
 23735                           ; BSR set to: 1
 23736                           ;radio_driver_SX1276.c: 943: {
 23737                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23738  002CFC  51AB               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23739  002CFE  E106               	bnz	u13730
 23740  002D00  29A8               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23741  002D02  0EFF               	movlw	255
 23742  002D04  59A9               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23743  002D06  0E0F               	movlw	15
 23744  002D08  59AA               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23745  002D0A  E319               	bnc	l12791
 23746  002D0C                     u13730:
 23747                           
 23748                           ; BSR set to: 1
 23749  002D0C  C1A8  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23750  002D10  C1A9  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23751  002D14  C1AA  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23752  002D18  C1AB  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23753  002D1C  0E7D               	movlw	125
 23754  002D1E  0100               	movlb	0	; () banked
 23755  002D20  6F68               	movwf	___lldiv@divisor& (0+255),b
 23756  002D22  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23757  002D24  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23758  002D26  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23759  002D28  EC1B  F030         	call	___lldiv	;wreg free
 23760  002D2C  0E0C               	movlw	12
 23761  002D2E                     u13745:
 23762  002D2E  90D8               	bcf	status,0,c
 23763  002D30  3764               	rlcf	?___lldiv& (0+255),f,b
 23764  002D32  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23765  002D34  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23766  002D36  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23767  002D38  2EE8               	decfsz	wreg,f,c
 23768  002D3A  D7F9               	goto	u13745
 23769  002D3C  D020               	goto	L14
 23770  002D3E                     l12791:
 23771                           
 23772                           ; BSR set to: 1
 23773  002D3E  C1A8  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23774  002D42  C1A9  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23775  002D46  C1AA  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23776  002D4A  C1AB  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23777  002D4E  0E0C               	movlw	12
 23778  002D50                     u13755:
 23779  002D50  90D8               	bcf	status,0,c
 23780  002D52  0100               	movlb	0	; () banked
 23781  002D54  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23782  002D56  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23783  002D58  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23784  002D5A  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23785  002D5C  2EE8               	decfsz	wreg,f,c
 23786  002D5E  D7F8               	goto	u13755
 23787  002D60  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23788  002D64  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23789  002D68  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23790  002D6C  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23791  002D70  0E7D               	movlw	125
 23792  002D72  6F68               	movwf	___lldiv@divisor& (0+255),b
 23793  002D74  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23794  002D76  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23795  002D78  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23796  002D7A  EC1B  F030         	call	___lldiv	;wreg free
 23797  002D7E                     L14:
 23798  002D7E  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1199
 23799  002D82  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1199+1
 23800  002D86  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1199+2
 23801  002D8A  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1199+3
 23802                           
 23803                           ; BSR set to: 0
 23804  002D8E  C09C  F071         	movff	_RADIO_ReceiveStart$1199,SwTimerSetTimeout@timeout
 23805  002D92  C09D  F072         	movff	_RADIO_ReceiveStart$1199+1,SwTimerSetTimeout@timeout+1
 23806  002D96  C09E  F073         	movff	_RADIO_ReceiveStart$1199+2,SwTimerSetTimeout@timeout+2
 23807  002D9A  C09F  F074         	movff	_RADIO_ReceiveStart$1199+3,SwTimerSetTimeout@timeout+3
 23808  002D9E  0101               	movlb	1	; () banked
 23809  002DA0  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23810  002DA2  EC70  F036         	call	_SwTimerSetTimeout
 23811                           
 23812                           ; BSR set to: 0
 23813                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23814  002DA6  0101               	movlb	1	; () banked
 23815  002DA8  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23816  002DAA  EC59  F02E         	call	_SwTimerStart
 23817  002DAE                     l12797:
 23818                           
 23819                           ;radio_driver_SX1276.c: 946: }
 23820                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23821  002DAE  0100               	movlb	0	; () banked
 23822  002DB0  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23823  002DB2  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23824                           
 23825                           ; BSR set to: 0
 23826  002DB4  0012               	return		;funcret
 23827  002DB6                     __end_of_RADIO_ReceiveStart:
 23828                           	opt stack 0
 23829                           tosu	equ	0xFFF
 23830                           tosh	equ	0xFFE
 23831                           tosl	equ	0xFFD
 23832                           pclath	equ	0xFFA
 23833                           tblptru	equ	0xFF8
 23834                           tblptrh	equ	0xFF7
 23835                           tblptrl	equ	0xFF6
 23836                           tablat	equ	0xFF5
 23837                           prodh	equ	0xFF4
 23838                           prodl	equ	0xFF3
 23839                           intcon	equ	0xFF2
 23840                           intcon2	equ	0xFF1
 23841                           intcon3	equ	0xFF0
 23842                           indf0	equ	0xFEF
 23843                           postinc0	equ	0xFEE
 23844                           fsr0h	equ	0xFEA
 23845                           fsr0l	equ	0xFE9
 23846                           wreg	equ	0xFE8
 23847                           postinc1	equ	0xFE6
 23848                           postdec1	equ	0xFE5
 23849                           plusw1	equ	0xFE3
 23850                           fsr1h	equ	0xFE2
 23851                           fsr1l	equ	0xFE1
 23852                           indf2	equ	0xFDF
 23853                           postinc2	equ	0xFDE
 23854                           postdec2	equ	0xFDD
 23855                           plusw2	equ	0xFDB
 23856                           fsr2h	equ	0xFDA
 23857                           fsr2l	equ	0xFD9
 23858                           status	equ	0xFD8
 23859                           
 23860 ;; *************** function _ConfigureRadioRx *****************
 23861 ;; Defined at:
 23862 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23863 ;; Parameters:    Size  Location     Type
 23864 ;;  dataRate        1    wreg     unsigned char 
 23865 ;;  freq            4   22[BANK0 ] unsigned long 
 23866 ;; Auto vars:     Size  Location     Type
 23867 ;;  dataRate        1   26[BANK0 ] unsigned char 
 23868 ;; Return value:  Size  Location     Type
 23869 ;;                  1    wreg      void 
 23870 ;; Registers used:
 23871 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23872 ;; Tracked objects:
 23873 ;;		On entry : F/2
 23874 ;;		On exit  : 0/0
 23875 ;;		Unchanged: 0/0
 23876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23877 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23880 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23881 ;;Total ram usage:        5 bytes
 23882 ;; Hardware stack levels used:    1
 23883 ;; Hardware stack levels required when called:   10
 23884 ;; This function calls:
 23885 ;;		_ConfigureRadio
 23886 ;;		_RADIO_SetCRC
 23887 ;;		_RADIO_SetIQInverted
 23888 ;; This function is called by:
 23889 ;;		_LORAWAN_ReceiveWindow1Callback
 23890 ;;		_LORAWAN_ReceiveWindow2Callback
 23891 ;;		_LORAWAN_EnterContinuousReceive
 23892 ;; This function uses a non-reentrant model
 23893 ;;
 23894                           
 23895                           	psect	text123
 23896  0072A0                     __ptext123:
 23897                           	opt stack 0
 23898  0072A0                     _ConfigureRadioRx:
 23899                           	opt stack 15
 23900                           
 23901                           ; BSR set to: 0
 23902                           ;incstack = 0
 23903                           ;ConfigureRadioRx@dataRate stored from wreg
 23904  0072A0  0100               	movlb	0	; () banked
 23905  0072A2  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23906                           
 23907                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23908  0072A4  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23909  0072A8  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23910  0072AC  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23911  0072B0  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23912  0072B4  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23913  0072B6  ECCC  F02D         	call	_ConfigureRadio
 23914                           
 23915                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23916  0072BA  0E00               	movlw	0
 23917  0072BC  EC21  F03C         	call	_RADIO_SetCRC
 23918                           
 23919                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23920  0072C0  0E01               	movlw	1
 23921  0072C2  EF1C  F03C         	goto	_RADIO_SetIQInverted
 23922  0072C6                     __end_of_ConfigureRadioRx:
 23923                           	opt stack 0
 23924                           tosu	equ	0xFFF
 23925                           tosh	equ	0xFFE
 23926                           tosl	equ	0xFFD
 23927                           pclath	equ	0xFFA
 23928                           tblptru	equ	0xFF8
 23929                           tblptrh	equ	0xFF7
 23930                           tblptrl	equ	0xFF6
 23931                           tablat	equ	0xFF5
 23932                           prodh	equ	0xFF4
 23933                           prodl	equ	0xFF3
 23934                           intcon	equ	0xFF2
 23935                           intcon2	equ	0xFF1
 23936                           intcon3	equ	0xFF0
 23937                           indf0	equ	0xFEF
 23938                           postinc0	equ	0xFEE
 23939                           fsr0h	equ	0xFEA
 23940                           fsr0l	equ	0xFE9
 23941                           wreg	equ	0xFE8
 23942                           postinc1	equ	0xFE6
 23943                           postdec1	equ	0xFE5
 23944                           plusw1	equ	0xFE3
 23945                           fsr1h	equ	0xFE2
 23946                           fsr1l	equ	0xFE1
 23947                           indf2	equ	0xFDF
 23948                           postinc2	equ	0xFDE
 23949                           postdec2	equ	0xFDD
 23950                           plusw2	equ	0xFDB
 23951                           fsr2h	equ	0xFDA
 23952                           fsr2l	equ	0xFD9
 23953                           status	equ	0xFD8
 23954                           
 23955 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23956 ;; Defined at:
 23957 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23958 ;; Parameters:    Size  Location     Type
 23959 ;;		None
 23960 ;; Auto vars:     Size  Location     Type
 23961 ;;  a               1    4[BANK0 ] unsigned char 
 23962 ;; Return value:  Size  Location     Type
 23963 ;;                  1    wreg      unsigned char 
 23964 ;; Registers used:
 23965 ;;		wreg, status,2
 23966 ;; Tracked objects:
 23967 ;;		On entry : F/0
 23968 ;;		On exit  : F/0
 23969 ;;		Unchanged: 0/0
 23970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23975 ;;Total ram usage:        1 bytes
 23976 ;; Hardware stack levels used:    1
 23977 ;; Hardware stack levels required when called:    7
 23978 ;; This function calls:
 23979 ;;		Nothing
 23980 ;; This function is called by:
 23981 ;;		_LORAWAN_Mainloop
 23982 ;; This function uses a non-reentrant model
 23983 ;;
 23984                           
 23985                           	psect	text124
 23986  00776E                     __ptext124:
 23987                           	opt stack 0
 23988  00776E                     _INTERRUPT_GetDioStatus:
 23989                           	opt stack 22
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 23993                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 23994                           
 23995                           ;incstack = 0
 23996  00776E  9EF2               	bcf	intcon,7,c	;volatile
 23997                           
 23998                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23999  007770  C0F0  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 24000                           
 24001                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 24002  007774  6BF0               	clrf	_dioStatus& (0+255),b	;volatile
 24003                           
 24004                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 24005  007776  8EF2               	bsf	intcon,7,c	;volatile
 24006                           
 24007                           ; BSR set to: 0
 24008                           ;interrupt_manager_lora_addons.c: 55: return a;
 24009  007778  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 24010                           
 24011                           ; BSR set to: 0
 24012  00777A  0012               	return		;funcret
 24013  00777C                     __end_of_INTERRUPT_GetDioStatus:
 24014                           	opt stack 0
 24015                           tosu	equ	0xFFF
 24016                           tosh	equ	0xFFE
 24017                           tosl	equ	0xFFD
 24018                           pclath	equ	0xFFA
 24019                           tblptru	equ	0xFF8
 24020                           tblptrh	equ	0xFF7
 24021                           tblptrl	equ	0xFF6
 24022                           tablat	equ	0xFF5
 24023                           prodh	equ	0xFF4
 24024                           prodl	equ	0xFF3
 24025                           intcon	equ	0xFF2
 24026                           intcon2	equ	0xFF1
 24027                           intcon3	equ	0xFF0
 24028                           indf0	equ	0xFEF
 24029                           postinc0	equ	0xFEE
 24030                           fsr0h	equ	0xFEA
 24031                           fsr0l	equ	0xFE9
 24032                           wreg	equ	0xFE8
 24033                           postinc1	equ	0xFE6
 24034                           postdec1	equ	0xFE5
 24035                           plusw1	equ	0xFE3
 24036                           fsr1h	equ	0xFE2
 24037                           fsr1l	equ	0xFE1
 24038                           indf2	equ	0xFDF
 24039                           postinc2	equ	0xFDE
 24040                           postdec2	equ	0xFDD
 24041                           plusw2	equ	0xFDB
 24042                           fsr2h	equ	0xFDA
 24043                           fsr2l	equ	0xFD9
 24044                           status	equ	0xFD8
 24045                           
 24046 ;; *************** function _LORAWAN_Join *****************
 24047 ;; Defined at:
 24048 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24049 ;; Parameters:    Size  Location     Type
 24050 ;;  activationTy    1    wreg     enum E7980
 24051 ;; Auto vars:     Size  Location     Type
 24052 ;;  activationTy    1  126[BANK0 ] enum E7980
 24053 ;;  result          1  125[BANK0 ] enum E7957
 24054 ;;  bufferIndex     1  124[BANK0 ] unsigned char 
 24055 ;; Return value:  Size  Location     Type
 24056 ;;                  1    wreg      enum E7957
 24057 ;; Registers used:
 24058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24059 ;; Tracked objects:
 24060 ;;		On entry : F/2
 24061 ;;		On exit  : D/0
 24062 ;;		Unchanged: 0/0
 24063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24065 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24067 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24068 ;;Total ram usage:        3 bytes
 24069 ;; Hardware stack levels used:    1
 24070 ;; Hardware stack levels required when called:   14
 24071 ;; This function calls:
 24072 ;;		_PrepareJoinRequestFrame
 24073 ;;		_RADIO_Transmit
 24074 ;;		_SelectChannelForTransmission
 24075 ;;		_SwTimerSetTimeout
 24076 ;;		_SwTimerStart
 24077 ;;		_UpdateJoinInProgress
 24078 ;; This function is called by:
 24079 ;;		_main
 24080 ;; This function uses a non-reentrant model
 24081 ;;
 24082                           
 24083                           	psect	text125
 24084  005C26                     __ptext125:
 24085                           	opt stack 0
 24086  005C26                     _LORAWAN_Join:
 24087                           	opt stack 16
 24088                           
 24089                           ; BSR set to: 0
 24090                           ;incstack = 0
 24091                           ;LORAWAN_Join@activationTypeNew stored from wreg
 24092  005C26  0100               	movlb	0	; () banked
 24093  005C28  6FDE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 24094                           
 24095                           ;lorawan.c: 117: uint8_t bufferIndex;
 24096                           ;lorawan.c: 118: LorawanError_t result;
 24097                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 24098  005C2A  0102               	movlb	2	; () banked
 24099  005C2C  A103               	btfss	(_loRa+3)& (0+255),0,b
 24100                           
 24101                           ; BSR set to: 2
 24102                           ;lorawan.c: 123: }
 24103                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 24104  005C2E  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 24105  005C30  0012               	return	
 24106                           
 24107                           ; BSR set to: 2
 24108                           ;lorawan.c: 128: }
 24109                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 24110  005C32  5102               	movf	(_loRa+2)& (0+255),w,b
 24111  005C34  0B0F               	andlw	15
 24112  005C36  E001               	bz	l1717
 24113  005C38  0012               	return	
 24114  005C3A                     l1717:
 24115                           
 24116                           ; BSR set to: 2
 24117                           ;lorawan.c: 133: }
 24118                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 24119  005C3A  C0DE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 24120                           
 24121                           ; BSR set to: 2
 24122                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 24123  005C3E  0100               	movlb	0	; () banked
 24124  005C40  51DE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 24125  005C42  E11F               	bnz	l1718
 24126                           
 24127                           ; BSR set to: 0
 24128                           ;lorawan.c: 138: {
 24129                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 24130  005C44  0102               	movlb	2	; () banked
 24131  005C46  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 24132                           
 24133                           ; BSR set to: 2
 24134  005C48  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 24135  005C4A  0012               	return	
 24136                           
 24137                           ; BSR set to: 2
 24138  005C4C  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 24139  005C4E  0012               	return	
 24140                           
 24141                           ; BSR set to: 2
 24142                           ;lorawan.c: 144: else
 24143                           ;lorawan.c: 145: {
 24144                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 24145  005C50  EC19  F023         	call	_PrepareJoinRequestFrame	;wreg free
 24146  005C54  6FDC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 24147                           
 24148                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 24149  005C56  0E00               	movlw	0
 24150  005C58  EC27  F033         	call	_SelectChannelForTransmission
 24151  005C5C  6FDD               	movwf	LORAWAN_Join@result& (0+255),b
 24152                           
 24153                           ; BSR set to: 0
 24154                           ;lorawan.c: 149: if (result == OK)
 24155  005C5E  51DD               	movf	LORAWAN_Join@result& (0+255),w,b
 24156  005C60  A4D8               	btfss	status,2,c
 24157  005C62  0012               	return	
 24158                           
 24159                           ; BSR set to: 0
 24160                           ;lorawan.c: 150: {
 24161                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 24162  005C64  0EE0               	movlw	low _macBuffer
 24163  005C66  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 24164  005C68  0E04               	movlw	high _macBuffer
 24165  005C6A  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24166  005C6C  C0DC  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 24167  005C70  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 24168  005C74  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 24169  005C76  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 24170  005C78  A4D8               	btfss	status,2,c
 24171  005C7A  0012               	return	
 24172                           
 24173                           ; BSR set to: 0
 24174                           ;lorawan.c: 152: {
 24175                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 24176  005C7C  0E01               	movlw	1
 24177  005C7E  EFE7  F03A         	goto	_UpdateJoinInProgress
 24178  005C82                     l1718:
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;lorawan.c: 167: else
 24182                           ;lorawan.c: 168: {
 24183                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 24184  005C82  0102               	movlb	2	; () banked
 24185  005C84  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 24186                           
 24187                           ; BSR set to: 2
 24188  005C86  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 24189  005C88  0012               	return	
 24190                           
 24191                           ; BSR set to: 2
 24192  005C8A  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 24193  005C8C  0012               	return	
 24194                           
 24195                           ; BSR set to: 2
 24196                           ;lorawan.c: 174: else
 24197                           ;lorawan.c: 175: {
 24198                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 24199  005C8E  0E07               	movlw	7
 24200  005C90  ECE7  F03A         	call	_UpdateJoinInProgress
 24201                           
 24202                           ; BSR set to: 2
 24203                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 24204  005C94  0E8F               	movlw	143
 24205  005C96  0100               	movlb	0	; () banked
 24206  005C98  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24207  005C9A  0E02               	movlw	2
 24208  005C9C  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24209  005C9E  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24210  005CA0  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24211  005CA2  0102               	movlb	2	; () banked
 24212  005CA4  51F3               	movf	(_loRa+243)& (0+255),w,b
 24213  005CA6  EC70  F036         	call	_SwTimerSetTimeout
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24217  005CAA  0102               	movlb	2	; () banked
 24218  005CAC  51F3               	movf	(_loRa+243)& (0+255),w,b
 24219  005CAE  EF59  F02E         	goto	_SwTimerStart
 24220  005CB2                     __end_of_LORAWAN_Join:
 24221                           	opt stack 0
 24222                           tosu	equ	0xFFF
 24223                           tosh	equ	0xFFE
 24224                           tosl	equ	0xFFD
 24225                           pclath	equ	0xFFA
 24226                           tblptru	equ	0xFF8
 24227                           tblptrh	equ	0xFF7
 24228                           tblptrl	equ	0xFF6
 24229                           tablat	equ	0xFF5
 24230                           prodh	equ	0xFF4
 24231                           prodl	equ	0xFF3
 24232                           intcon	equ	0xFF2
 24233                           intcon2	equ	0xFF1
 24234                           intcon3	equ	0xFF0
 24235                           indf0	equ	0xFEF
 24236                           postinc0	equ	0xFEE
 24237                           fsr0h	equ	0xFEA
 24238                           fsr0l	equ	0xFE9
 24239                           wreg	equ	0xFE8
 24240                           postinc1	equ	0xFE6
 24241                           postdec1	equ	0xFE5
 24242                           plusw1	equ	0xFE3
 24243                           fsr1h	equ	0xFE2
 24244                           fsr1l	equ	0xFE1
 24245                           indf2	equ	0xFDF
 24246                           postinc2	equ	0xFDE
 24247                           postdec2	equ	0xFDD
 24248                           plusw2	equ	0xFDB
 24249                           fsr2h	equ	0xFDA
 24250                           fsr2l	equ	0xFD9
 24251                           status	equ	0xFD8
 24252                           
 24253 ;; *************** function _UpdateJoinInProgress *****************
 24254 ;; Defined at:
 24255 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24256 ;; Parameters:    Size  Location     Type
 24257 ;;  state           1    wreg     unsigned char 
 24258 ;; Auto vars:     Size  Location     Type
 24259 ;;  state           1    4[BANK0 ] unsigned char 
 24260 ;; Return value:  Size  Location     Type
 24261 ;;                  1    wreg      void 
 24262 ;; Registers used:
 24263 ;;		wreg, status,2, status,0
 24264 ;; Tracked objects:
 24265 ;;		On entry : D/0
 24266 ;;		On exit  : F/2
 24267 ;;		Unchanged: 0/0
 24268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24273 ;;Total ram usage:        1 bytes
 24274 ;; Hardware stack levels used:    1
 24275 ;; Hardware stack levels required when called:    7
 24276 ;; This function calls:
 24277 ;;		Nothing
 24278 ;; This function is called by:
 24279 ;;		_LORAWAN_Join
 24280 ;; This function uses a non-reentrant model
 24281 ;;
 24282                           
 24283                           	psect	text126
 24284  0075CE                     __ptext126:
 24285                           	opt stack 0
 24286  0075CE                     _UpdateJoinInProgress:
 24287                           	opt stack 22
 24288                           
 24289                           ;incstack = 0
 24290                           ;UpdateJoinInProgress@state stored from wreg
 24291  0075CE  0100               	movlb	0	; () banked
 24292  0075D0  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24293                           
 24294                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24295  0075D2  0102               	movlb	2	; () banked
 24296  0075D4  9902               	bcf	(_loRa+2)& (0+255),4,b
 24297                           
 24298                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24299  0075D6  8500               	bsf	_loRa& (0+255),2,b
 24300                           
 24301                           ; BSR set to: 2
 24302                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24303  0075D8  5102               	movf	(_loRa+2)& (0+255),w,b
 24304  0075DA  0100               	movlb	0	; () banked
 24305  0075DC  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24306  0075DE  0BF0               	andlw	-16
 24307  0075E0  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24308  0075E2  0102               	movlb	2	; () banked
 24309  0075E4  6F02               	movwf	(_loRa+2)& (0+255),b
 24310                           
 24311                           ; BSR set to: 2
 24312  0075E6  0012               	return		;funcret
 24313  0075E8                     __end_of_UpdateJoinInProgress:
 24314                           	opt stack 0
 24315                           tosu	equ	0xFFF
 24316                           tosh	equ	0xFFE
 24317                           tosl	equ	0xFFD
 24318                           pclath	equ	0xFFA
 24319                           tblptru	equ	0xFF8
 24320                           tblptrh	equ	0xFF7
 24321                           tblptrl	equ	0xFF6
 24322                           tablat	equ	0xFF5
 24323                           prodh	equ	0xFF4
 24324                           prodl	equ	0xFF3
 24325                           intcon	equ	0xFF2
 24326                           intcon2	equ	0xFF1
 24327                           intcon3	equ	0xFF0
 24328                           indf0	equ	0xFEF
 24329                           postinc0	equ	0xFEE
 24330                           fsr0h	equ	0xFEA
 24331                           fsr0l	equ	0xFE9
 24332                           wreg	equ	0xFE8
 24333                           postinc1	equ	0xFE6
 24334                           postdec1	equ	0xFE5
 24335                           plusw1	equ	0xFE3
 24336                           fsr1h	equ	0xFE2
 24337                           fsr1l	equ	0xFE1
 24338                           indf2	equ	0xFDF
 24339                           postinc2	equ	0xFDE
 24340                           postdec2	equ	0xFDD
 24341                           plusw2	equ	0xFDB
 24342                           fsr2h	equ	0xFDA
 24343                           fsr2l	equ	0xFD9
 24344                           status	equ	0xFD8
 24345                           
 24346 ;; *************** function _SelectChannelForTransmission *****************
 24347 ;; Defined at:
 24348 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24349 ;; Parameters:    Size  Location     Type
 24350 ;;  transmission    1    wreg     unsigned char 
 24351 ;; Auto vars:     Size  Location     Type
 24352 ;;  transmission    1   37[BANK0 ] unsigned char 
 24353 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24354 ;;  result          1   38[BANK0 ] enum E8016
 24355 ;; Return value:  Size  Location     Type
 24356 ;;                  1    wreg      enum E8016
 24357 ;; Registers used:
 24358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24359 ;; Tracked objects:
 24360 ;;		On entry : 0/0
 24361 ;;		On exit  : F/0
 24362 ;;		Unchanged: 0/0
 24363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24365 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24368 ;;Total ram usage:        3 bytes
 24369 ;; Hardware stack levels used:    1
 24370 ;; Hardware stack levels required when called:   11
 24371 ;; This function calls:
 24372 ;;		_ConfigureRadioTx
 24373 ;;		_SearchAvailableChannel
 24374 ;; This function is called by:
 24375 ;;		_LORAWAN_RxTimeout
 24376 ;;		_LORAWAN_Join
 24377 ;;		_LORAWAN_Send
 24378 ;;		_AckRetransmissionCallback
 24379 ;;		_UnconfirmedTransmissionCallback
 24380 ;; This function uses a non-reentrant model
 24381 ;;
 24382                           
 24383                           	psect	text127
 24384  00664E                     __ptext127:
 24385                           	opt stack 0
 24386  00664E                     _SelectChannelForTransmission:
 24387                           	opt stack 17
 24388                           
 24389                           ; BSR set to: 2
 24390                           ;incstack = 0
 24391                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24392  00664E  0100               	movlb	0	; () banked
 24393  006650  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24394                           
 24395                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24396                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24397  006652  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24398  006656  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24399  006658  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24400  00665A  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24401  00665C  0E10               	movlw	16
 24402  00665E  EC81  F027         	call	_SearchAvailableChannel
 24403  006662  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24404                           
 24405                           ; BSR set to: 0
 24406                           ;lorawan_eu.c: 926: if (result == OK)
 24407  006664  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24408  006666  E120               	bnz	l13449
 24409                           
 24410                           ; BSR set to: 0
 24411                           ;lorawan_eu.c: 927: {
 24412                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24413  006668  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24414                           
 24415                           ; BSR set to: 0
 24416                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24417  00666C  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24418  00666E  0D0E               	mullw	14
 24419  006670  0E00               	movlw	low _Channels
 24420  006672  24F3               	addwf	prodl,w,c
 24421  006674  6ED9               	movwf	fsr2l,c
 24422  006676  0E04               	movlw	high _Channels
 24423  006678  20F4               	addwfc	prodh,w,c
 24424  00667A  6EDA               	movwf	fsr2h,c
 24425  00667C  CFDE F213          	movff	postinc2,_loRa+19
 24426  006680  CFDE F214          	movff	postinc2,_loRa+20
 24427  006684  CFDE F215          	movff	postinc2,_loRa+21
 24428  006688  CFDE F216          	movff	postinc2,_loRa+22
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24432  00668C  C2DF  F217         	movff	_loRa+223,_loRa+23
 24433                           
 24434                           ; BSR set to: 0
 24435                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24436  006690  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24437  006694  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24438  006698  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24439  00669C  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24440  0066A0  0102               	movlb	2	; () banked
 24441  0066A2  5117               	movf	(_loRa+23)& (0+255),w,b
 24442  0066A4  EC0A  F036         	call	_ConfigureRadioTx
 24443  0066A8                     l13449:
 24444                           
 24445                           ;lorawan_eu.c: 933: }
 24446                           ;lorawan_eu.c: 934: return result;
 24447  0066A8  0100               	movlb	0	; () banked
 24448  0066AA  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24449                           
 24450                           ; BSR set to: 0
 24451  0066AC  0012               	return		;funcret
 24452  0066AE                     __end_of_SelectChannelForTransmission:
 24453                           	opt stack 0
 24454                           tosu	equ	0xFFF
 24455                           tosh	equ	0xFFE
 24456                           tosl	equ	0xFFD
 24457                           pclath	equ	0xFFA
 24458                           tblptru	equ	0xFF8
 24459                           tblptrh	equ	0xFF7
 24460                           tblptrl	equ	0xFF6
 24461                           tablat	equ	0xFF5
 24462                           prodh	equ	0xFF4
 24463                           prodl	equ	0xFF3
 24464                           intcon	equ	0xFF2
 24465                           intcon2	equ	0xFF1
 24466                           intcon3	equ	0xFF0
 24467                           indf0	equ	0xFEF
 24468                           postinc0	equ	0xFEE
 24469                           fsr0h	equ	0xFEA
 24470                           fsr0l	equ	0xFE9
 24471                           wreg	equ	0xFE8
 24472                           postinc1	equ	0xFE6
 24473                           postdec1	equ	0xFE5
 24474                           plusw1	equ	0xFE3
 24475                           fsr1h	equ	0xFE2
 24476                           fsr1l	equ	0xFE1
 24477                           indf2	equ	0xFDF
 24478                           postinc2	equ	0xFDE
 24479                           postdec2	equ	0xFDD
 24480                           plusw2	equ	0xFDB
 24481                           fsr2h	equ	0xFDA
 24482                           fsr2l	equ	0xFD9
 24483                           status	equ	0xFD8
 24484                           
 24485 ;; *************** function _SearchAvailableChannel *****************
 24486 ;; Defined at:
 24487 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24488 ;; Parameters:    Size  Location     Type
 24489 ;;  maxChannels     1    wreg     unsigned char 
 24490 ;;  transmission    1   25[BANK0 ] unsigned char 
 24491 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24492 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24493 ;; Auto vars:     Size  Location     Type
 24494 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24495 ;;  i               1   36[BANK0 ] unsigned char 
 24496 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24497 ;;  result          1   33[BANK0 ] enum E8016
 24498 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1    wreg      enum E8016
 24501 ;; Registers used:
 24502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24503 ;; Tracked objects:
 24504 ;;		On entry : D/2
 24505 ;;		On exit  : F/0
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24508 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24509 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24510 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24511 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24512 ;;Total ram usage:       12 bytes
 24513 ;; Hardware stack levels used:    1
 24514 ;; Hardware stack levels required when called:   10
 24515 ;; This function calls:
 24516 ;;		_Random
 24517 ;; This function is called by:
 24518 ;;		_SelectChannelForTransmission
 24519 ;;		_LORAWAN_RxDone
 24520 ;; This function uses a non-reentrant model
 24521 ;;
 24522                           
 24523                           	psect	text128
 24524  004F02                     __ptext128:
 24525                           	opt stack 0
 24526  004F02                     _SearchAvailableChannel:
 24527                           	opt stack 17
 24528                           
 24529                           ; BSR set to: 0
 24530                           ;incstack = 0
 24531                           ;SearchAvailableChannel@maxChannels stored from wreg
 24532  004F02  0100               	movlb	0	; () banked
 24533  004F04  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24534                           
 24535                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24536                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24537  004F06  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24541  004F08  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24542  004F0C  6B78               	clrf	(Random@max+1)& (0+255),b
 24543  004F0E  ECBC  F039         	call	_Random	;wreg free
 24544  004F12  2977               	incf	?_Random& (0+255),w,b
 24545  004F14  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24546                           
 24547                           ; BSR set to: 0
 24548                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24549  004F16  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24550                           
 24551                           ;lorawan_eu.c: 786: while (randomNumber)
 24552  004F1A  D054               	goto	l12999
 24553  004F1C                     l1133:
 24554                           
 24555                           ; BSR set to: 0
 24556                           ;lorawan_eu.c: 787: {
 24557                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24558  004F1C  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24559  004F1E  D047               	goto	l12991
 24560  004F20                     l12975:
 24561                           
 24562                           ; BSR set to: 0
 24563                           ;lorawan_eu.c: 789: {
 24564                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24565  004F20  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24566  004F22  0D0E               	mullw	14
 24567  004F24  0E04               	movlw	low (_Channels+4)
 24568  004F26  24F3               	addwf	prodl,w,c
 24569  004F28  6ED9               	movwf	fsr2l,c
 24570  004F2A  0E04               	movlw	high (_Channels+4)
 24571  004F2C  20F4               	addwfc	prodh,w,c
 24572  004F2E  6EDA               	movwf	fsr2h,c
 24573  004F30  04DE               	decf	postinc2,w,c
 24574  004F32  E13B               	bnz	l1136
 24575                           
 24576                           ; BSR set to: 0
 24577  004F34  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24578  004F36  0D0E               	mullw	14
 24579  004F38  0E08               	movlw	low (_Channels+8)
 24580  004F3A  24F3               	addwf	prodl,w,c
 24581  004F3C  6ED9               	movwf	fsr2l,c
 24582  004F3E  0E04               	movlw	high (_Channels+8)
 24583  004F40  20F4               	addwfc	prodh,w,c
 24584  004F42  6EDA               	movwf	fsr2h,c
 24585  004F44  50DE               	movf	postinc2,w,c
 24586  004F46  10DE               	iorwf	postinc2,w,c
 24587  004F48  10DE               	iorwf	postinc2,w,c
 24588  004F4A  10DE               	iorwf	postinc2,w,c
 24589  004F4C  E12E               	bnz	l1136
 24590                           
 24591                           ; BSR set to: 0
 24592  004F4E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24593  004F50  0D0E               	mullw	14
 24594  004F52  0E05               	movlw	low (_Channels+5)
 24595  004F54  24F3               	addwf	prodl,w,c
 24596  004F56  6ED9               	movwf	fsr2l,c
 24597  004F58  0E04               	movlw	high (_Channels+5)
 24598  004F5A  20F4               	addwfc	prodh,w,c
 24599  004F5C  6EDA               	movwf	fsr2h,c
 24600  004F5E  50DF               	movf	223,w,c
 24601  004F60  0B0F               	andlw	15
 24602  004F62  0100               	movlb	0	; () banked
 24603  004F64  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24604  004F66  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24605  004F68  0102               	movlb	2	; () banked
 24606  004F6A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24607  004F6C  E31E               	bnc	l1136
 24608                           
 24609                           ; BSR set to: 2
 24610  004F6E  0100               	movlb	0	; () banked
 24611  004F70  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24612  004F72  0D0E               	mullw	14
 24613  004F74  0E05               	movlw	low (_Channels+5)
 24614  004F76  24F3               	addwf	prodl,w,c
 24615  004F78  6ED9               	movwf	fsr2l,c
 24616  004F7A  0E04               	movlw	high (_Channels+5)
 24617  004F7C  20F4               	addwfc	prodh,w,c
 24618  004F7E  6EDA               	movwf	fsr2h,c
 24619  004F80  38DF               	swapf	223,w,c
 24620  004F82  0B0F               	andlw	15
 24621  004F84  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24622  004F86  0102               	movlb	2	; () banked
 24623  004F88  51DF               	movf	(_loRa+223)& (0+255),w,b
 24624  004F8A  0100               	movlb	0	; () banked
 24625  004F8C  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24626  004F8E  E30D               	bnc	l1136
 24627                           
 24628                           ; BSR set to: 0
 24629                           ;lorawan_eu.c: 791: {
 24630                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24631  004F90  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24632  004F92  E10A               	bnz	l12987
 24633                           
 24634                           ; BSR set to: 0
 24635                           ;lorawan_eu.c: 793: {
 24636                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24637  004F94  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24638  004F96  0D0E               	mullw	14
 24639  004F98  0E0C               	movlw	low (_Channels+12)
 24640  004F9A  24F3               	addwf	prodl,w,c
 24641  004F9C  6ED9               	movwf	fsr2l,c
 24642  004F9E  0E04               	movlw	high (_Channels+12)
 24643  004FA0  20F4               	addwfc	prodh,w,c
 24644  004FA2  6EDA               	movwf	fsr2h,c
 24645  004FA4  04DE               	decf	postinc2,w,c
 24646  004FA6  E101               	bnz	l1136
 24647  004FA8                     l12987:
 24648                           
 24649                           ; BSR set to: 0
 24650                           ;lorawan_eu.c: 795: {
 24651                           ;lorawan_eu.c: 796: randomNumber --;
 24652  004FA8  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24653  004FAA                     l1136:
 24654  004FAA  0100               	movlb	0	; () banked
 24655  004FAC  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24656  004FAE                     l12991:
 24657                           
 24658                           ; BSR set to: 0
 24659  004FAE  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24660  004FB0  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24661  004FB2  E202               	bc	l12995
 24662                           
 24663                           ; BSR set to: 0
 24664  004FB4  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24665  004FB6  E1B4               	bnz	l12975
 24666  004FB8                     l12995:
 24667                           
 24668                           ; BSR set to: 0
 24669                           ;lorawan_eu.c: 802: }
 24670                           ;lorawan_eu.c: 803: }
 24671                           ;lorawan_eu.c: 804: }
 24672                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24673  004FB8  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24674  004FBA  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24675  004FBC  E103               	bnz	l12999
 24676                           
 24677                           ; BSR set to: 0
 24678                           ;lorawan_eu.c: 807: {
 24679                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24680  004FBE  0E09               	movlw	9
 24681  004FC0  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24682                           
 24683                           ;lorawan_eu.c: 809: break;
 24684  004FC2  D002               	goto	l13001
 24685  004FC4                     l12999:
 24686                           
 24687                           ; BSR set to: 0
 24688  004FC4  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24689  004FC6  E1AA               	bnz	l1133
 24690  004FC8                     l13001:
 24691                           
 24692                           ; BSR set to: 0
 24693                           ;lorawan_eu.c: 810: }
 24694                           ;lorawan_eu.c: 811: }
 24695                           ;lorawan_eu.c: 813: if ( i != 0)
 24696  004FC8  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24697  004FCA  E007               	bz	l13005
 24698                           
 24699                           ; BSR set to: 0
 24700                           ;lorawan_eu.c: 814: {
 24701                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24702  004FCC  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24703  004FCE  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24704  004FD2  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24705  004FD6  6EDF               	movwf	indf2,c
 24706                           
 24707                           ;lorawan_eu.c: 816: }
 24708  004FD8  D002               	goto	l1146
 24709  004FDA                     l13005:
 24710                           
 24711                           ; BSR set to: 0
 24712                           ;lorawan_eu.c: 817: else
 24713                           ;lorawan_eu.c: 818: {
 24714                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24715  004FDA  0E09               	movlw	9
 24716  004FDC  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24717  004FDE                     l1146:
 24718                           
 24719                           ; BSR set to: 0
 24720                           ;lorawan_eu.c: 820: }
 24721                           ;lorawan_eu.c: 821: return result;
 24722  004FDE  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24723                           
 24724                           ; BSR set to: 0
 24725  004FE0  0012               	return		;funcret
 24726  004FE2                     __end_of_SearchAvailableChannel:
 24727                           	opt stack 0
 24728                           tosu	equ	0xFFF
 24729                           tosh	equ	0xFFE
 24730                           tosl	equ	0xFFD
 24731                           pclath	equ	0xFFA
 24732                           tblptru	equ	0xFF8
 24733                           tblptrh	equ	0xFF7
 24734                           tblptrl	equ	0xFF6
 24735                           tablat	equ	0xFF5
 24736                           prodh	equ	0xFF4
 24737                           prodl	equ	0xFF3
 24738                           intcon	equ	0xFF2
 24739                           intcon2	equ	0xFF1
 24740                           intcon3	equ	0xFF0
 24741                           indf0	equ	0xFEF
 24742                           postinc0	equ	0xFEE
 24743                           fsr0h	equ	0xFEA
 24744                           fsr0l	equ	0xFE9
 24745                           wreg	equ	0xFE8
 24746                           postinc1	equ	0xFE6
 24747                           postdec1	equ	0xFE5
 24748                           plusw1	equ	0xFE3
 24749                           fsr1h	equ	0xFE2
 24750                           fsr1l	equ	0xFE1
 24751                           indf2	equ	0xFDF
 24752                           postinc2	equ	0xFDE
 24753                           postdec2	equ	0xFDD
 24754                           plusw2	equ	0xFDB
 24755                           fsr2h	equ	0xFDA
 24756                           fsr2l	equ	0xFD9
 24757                           status	equ	0xFD8
 24758                           
 24759 ;; *************** function _ConfigureRadioTx *****************
 24760 ;; Defined at:
 24761 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24762 ;; Parameters:    Size  Location     Type
 24763 ;;  dataRate        1    wreg     unsigned char 
 24764 ;;  freq            4   22[BANK0 ] unsigned long 
 24765 ;; Auto vars:     Size  Location     Type
 24766 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24767 ;;  txPower         1   27[BANK0 ] char 
 24768 ;; Return value:  Size  Location     Type
 24769 ;;                  1    wreg      void 
 24770 ;; Registers used:
 24771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24772 ;; Tracked objects:
 24773 ;;		On entry : F/2
 24774 ;;		On exit  : 0/0
 24775 ;;		Unchanged: 0/0
 24776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24780 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24781 ;;Total ram usage:        6 bytes
 24782 ;; Hardware stack levels used:    1
 24783 ;; Hardware stack levels required when called:   10
 24784 ;; This function calls:
 24785 ;;		_ConfigureRadio
 24786 ;;		_RADIO_SetCRC
 24787 ;;		_RADIO_SetIQInverted
 24788 ;;		_RADIO_SetOutputPower
 24789 ;; This function is called by:
 24790 ;;		_SelectChannelForTransmission
 24791 ;; This function uses a non-reentrant model
 24792 ;;
 24793                           
 24794                           	psect	text129
 24795  006C14                     __ptext129:
 24796                           	opt stack 0
 24797  006C14                     _ConfigureRadioTx:
 24798                           	opt stack 17
 24799                           
 24800                           ; BSR set to: 0
 24801                           ;incstack = 0
 24802                           ;ConfigureRadioTx@dataRate stored from wreg
 24803  006C14  0100               	movlb	0	; () banked
 24804  006C16  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24805                           
 24806                           ;lorawan_eu.c: 1257: int8_t txPower;
 24807                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24808  006C18  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24809  006C1C  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24810  006C20  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24811  006C24  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24812  006C28  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24813  006C2A  ECCC  F02D         	call	_ConfigureRadio
 24814                           
 24815                           ;lorawan_eu.c: 1262: {
 24816                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24817  006C2E  0EA2               	movlw	low _txPower868
 24818  006C30  0102               	movlb	2	; () banked
 24819  006C32  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24820  006C34  6EF6               	movwf	tblptrl,c
 24821  006C36  6AF7               	clrf	tblptrh,c
 24822  006C38  0EFF               	movlw	high _txPower868
 24823  006C3A  22F7               	addwfc	tblptrh,f,c
 24824  006C3C                     	if	1	;There are 3 active tblptr bytes
 24825  006C3C  6AF8               	clrf	tblptru,c
 24826  006C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 24827  006C40  22F8               	addwfc	tblptru,f,c
 24828  006C42                     	endif
 24829  006C42  0008               	tblrd		*
 24830  006C44  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24831                           
 24832                           ; BSR set to: 2
 24833                           ;lorawan_eu.c: 1268: }
 24834                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24835                           
 24836                           ;lorawan_eu.c: 1264: }
 24837  006C48  0100               	movlb	0	; () banked
 24838  006C4A  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24839  006C4C  EC4A  F03C         	call	_RADIO_SetOutputPower
 24840                           
 24841                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24842  006C50  0E01               	movlw	1
 24843  006C52  EC21  F03C         	call	_RADIO_SetCRC
 24844                           
 24845                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24846  006C56  0E00               	movlw	0
 24847  006C58  EF1C  F03C         	goto	_RADIO_SetIQInverted
 24848  006C5C                     __end_of_ConfigureRadioTx:
 24849                           	opt stack 0
 24850                           tosu	equ	0xFFF
 24851                           tosh	equ	0xFFE
 24852                           tosl	equ	0xFFD
 24853                           pclath	equ	0xFFA
 24854                           tblptru	equ	0xFF8
 24855                           tblptrh	equ	0xFF7
 24856                           tblptrl	equ	0xFF6
 24857                           tablat	equ	0xFF5
 24858                           prodh	equ	0xFF4
 24859                           prodl	equ	0xFF3
 24860                           intcon	equ	0xFF2
 24861                           intcon2	equ	0xFF1
 24862                           intcon3	equ	0xFF0
 24863                           indf0	equ	0xFEF
 24864                           postinc0	equ	0xFEE
 24865                           fsr0h	equ	0xFEA
 24866                           fsr0l	equ	0xFE9
 24867                           wreg	equ	0xFE8
 24868                           postinc1	equ	0xFE6
 24869                           postdec1	equ	0xFE5
 24870                           plusw1	equ	0xFE3
 24871                           fsr1h	equ	0xFE2
 24872                           fsr1l	equ	0xFE1
 24873                           indf2	equ	0xFDF
 24874                           postinc2	equ	0xFDE
 24875                           postdec2	equ	0xFDD
 24876                           plusw2	equ	0xFDB
 24877                           fsr2h	equ	0xFDA
 24878                           fsr2l	equ	0xFD9
 24879                           status	equ	0xFD8
 24880                           
 24881 ;; *************** function _RADIO_SetOutputPower *****************
 24882 ;; Defined at:
 24883 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24884 ;; Parameters:    Size  Location     Type
 24885 ;;  power           1    wreg     char 
 24886 ;; Auto vars:     Size  Location     Type
 24887 ;;  power           1    4[BANK0 ] char 
 24888 ;; Return value:  Size  Location     Type
 24889 ;;                  1    wreg      void 
 24890 ;; Registers used:
 24891 ;;		wreg
 24892 ;; Tracked objects:
 24893 ;;		On entry : F/0
 24894 ;;		On exit  : 0/0
 24895 ;;		Unchanged: 0/0
 24896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24900 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24901 ;;Total ram usage:        1 bytes
 24902 ;; Hardware stack levels used:    1
 24903 ;; Hardware stack levels required when called:    7
 24904 ;; This function calls:
 24905 ;;		Nothing
 24906 ;; This function is called by:
 24907 ;;		_ConfigureRadioTx
 24908 ;; This function uses a non-reentrant model
 24909 ;;
 24910                           
 24911                           	psect	text130
 24912  007894                     __ptext130:
 24913                           	opt stack 0
 24914  007894                     _RADIO_SetOutputPower:
 24915                           	opt stack 19
 24916                           
 24917                           ;incstack = 0
 24918                           ;RADIO_SetOutputPower@power stored from wreg
 24919  007894  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 24920                           
 24921                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 24922  007896  C064  F199         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 24923  00789A  0012               	return		;funcret
 24924  00789C                     __end_of_RADIO_SetOutputPower:
 24925                           	opt stack 0
 24926                           tosu	equ	0xFFF
 24927                           tosh	equ	0xFFE
 24928                           tosl	equ	0xFFD
 24929                           pclath	equ	0xFFA
 24930                           tblptru	equ	0xFF8
 24931                           tblptrh	equ	0xFF7
 24932                           tblptrl	equ	0xFF6
 24933                           tablat	equ	0xFF5
 24934                           prodh	equ	0xFF4
 24935                           prodl	equ	0xFF3
 24936                           intcon	equ	0xFF2
 24937                           intcon2	equ	0xFF1
 24938                           intcon3	equ	0xFF0
 24939                           indf0	equ	0xFEF
 24940                           postinc0	equ	0xFEE
 24941                           fsr0h	equ	0xFEA
 24942                           fsr0l	equ	0xFE9
 24943                           wreg	equ	0xFE8
 24944                           postinc1	equ	0xFE6
 24945                           postdec1	equ	0xFE5
 24946                           plusw1	equ	0xFE3
 24947                           fsr1h	equ	0xFE2
 24948                           fsr1l	equ	0xFE1
 24949                           indf2	equ	0xFDF
 24950                           postinc2	equ	0xFDE
 24951                           postdec2	equ	0xFDD
 24952                           plusw2	equ	0xFDB
 24953                           fsr2h	equ	0xFDA
 24954                           fsr2l	equ	0xFD9
 24955                           status	equ	0xFD8
 24956                           
 24957 ;; *************** function _RADIO_SetIQInverted *****************
 24958 ;; Defined at:
 24959 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24960 ;; Parameters:    Size  Location     Type
 24961 ;;  iqInverted      1    wreg     unsigned char 
 24962 ;; Auto vars:     Size  Location     Type
 24963 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 24964 ;; Return value:  Size  Location     Type
 24965 ;;                  1    wreg      void 
 24966 ;; Registers used:
 24967 ;;		wreg
 24968 ;; Tracked objects:
 24969 ;;		On entry : 0/0
 24970 ;;		On exit  : 0/0
 24971 ;;		Unchanged: 0/0
 24972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24977 ;;Total ram usage:        1 bytes
 24978 ;; Hardware stack levels used:    1
 24979 ;; Hardware stack levels required when called:    7
 24980 ;; This function calls:
 24981 ;;		Nothing
 24982 ;; This function is called by:
 24983 ;;		_ConfigureRadioTx
 24984 ;;		_ConfigureRadioRx
 24985 ;; This function uses a non-reentrant model
 24986 ;;
 24987                           
 24988                           	psect	text131
 24989  007838                     __ptext131:
 24990                           	opt stack 0
 24991  007838                     _RADIO_SetIQInverted:
 24992                           	opt stack 19
 24993                           
 24994                           ;incstack = 0
 24995                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 24996  007838  0100               	movlb	0	; () banked
 24997  00783A  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 24998                           
 24999                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 25000  00783C  C064  F19E         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 25001  007840  0012               	return		;funcret
 25002  007842                     __end_of_RADIO_SetIQInverted:
 25003                           	opt stack 0
 25004                           tosu	equ	0xFFF
 25005                           tosh	equ	0xFFE
 25006                           tosl	equ	0xFFD
 25007                           pclath	equ	0xFFA
 25008                           tblptru	equ	0xFF8
 25009                           tblptrh	equ	0xFF7
 25010                           tblptrl	equ	0xFF6
 25011                           tablat	equ	0xFF5
 25012                           prodh	equ	0xFF4
 25013                           prodl	equ	0xFF3
 25014                           intcon	equ	0xFF2
 25015                           intcon2	equ	0xFF1
 25016                           intcon3	equ	0xFF0
 25017                           indf0	equ	0xFEF
 25018                           postinc0	equ	0xFEE
 25019                           fsr0h	equ	0xFEA
 25020                           fsr0l	equ	0xFE9
 25021                           wreg	equ	0xFE8
 25022                           postinc1	equ	0xFE6
 25023                           postdec1	equ	0xFE5
 25024                           plusw1	equ	0xFE3
 25025                           fsr1h	equ	0xFE2
 25026                           fsr1l	equ	0xFE1
 25027                           indf2	equ	0xFDF
 25028                           postinc2	equ	0xFDE
 25029                           postdec2	equ	0xFDD
 25030                           plusw2	equ	0xFDB
 25031                           fsr2h	equ	0xFDA
 25032                           fsr2l	equ	0xFD9
 25033                           status	equ	0xFD8
 25034                           
 25035 ;; *************** function _RADIO_SetCRC *****************
 25036 ;; Defined at:
 25037 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25038 ;; Parameters:    Size  Location     Type
 25039 ;;  crc             1    wreg     unsigned char 
 25040 ;; Auto vars:     Size  Location     Type
 25041 ;;  crc             1    4[BANK0 ] unsigned char 
 25042 ;; Return value:  Size  Location     Type
 25043 ;;                  1    wreg      void 
 25044 ;; Registers used:
 25045 ;;		wreg
 25046 ;; Tracked objects:
 25047 ;;		On entry : 0/0
 25048 ;;		On exit  : 0/0
 25049 ;;		Unchanged: 0/0
 25050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25054 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25055 ;;Total ram usage:        1 bytes
 25056 ;; Hardware stack levels used:    1
 25057 ;; Hardware stack levels required when called:    7
 25058 ;; This function calls:
 25059 ;;		Nothing
 25060 ;; This function is called by:
 25061 ;;		_ConfigureRadioTx
 25062 ;;		_ConfigureRadioRx
 25063 ;; This function uses a non-reentrant model
 25064 ;;
 25065                           
 25066                           	psect	text132
 25067  007842                     __ptext132:
 25068                           	opt stack 0
 25069  007842                     _RADIO_SetCRC:
 25070                           	opt stack 19
 25071                           
 25072                           ;incstack = 0
 25073                           ;RADIO_SetCRC@crc stored from wreg
 25074  007842  0100               	movlb	0	; () banked
 25075  007844  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 25076                           
 25077                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 25078  007846  C064  F19A         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25079  00784A  0012               	return		;funcret
 25080  00784C                     __end_of_RADIO_SetCRC:
 25081                           	opt stack 0
 25082                           tosu	equ	0xFFF
 25083                           tosh	equ	0xFFE
 25084                           tosl	equ	0xFFD
 25085                           pclath	equ	0xFFA
 25086                           tblptru	equ	0xFF8
 25087                           tblptrh	equ	0xFF7
 25088                           tblptrl	equ	0xFF6
 25089                           tablat	equ	0xFF5
 25090                           prodh	equ	0xFF4
 25091                           prodl	equ	0xFF3
 25092                           intcon	equ	0xFF2
 25093                           intcon2	equ	0xFF1
 25094                           intcon3	equ	0xFF0
 25095                           indf0	equ	0xFEF
 25096                           postinc0	equ	0xFEE
 25097                           fsr0h	equ	0xFEA
 25098                           fsr0l	equ	0xFE9
 25099                           wreg	equ	0xFE8
 25100                           postinc1	equ	0xFE6
 25101                           postdec1	equ	0xFE5
 25102                           plusw1	equ	0xFE3
 25103                           fsr1h	equ	0xFE2
 25104                           fsr1l	equ	0xFE1
 25105                           indf2	equ	0xFDF
 25106                           postinc2	equ	0xFDE
 25107                           postdec2	equ	0xFDD
 25108                           plusw2	equ	0xFDB
 25109                           fsr2h	equ	0xFDA
 25110                           fsr2l	equ	0xFD9
 25111                           status	equ	0xFD8
 25112                           
 25113 ;; *************** function _ConfigureRadio *****************
 25114 ;; Defined at:
 25115 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25116 ;; Parameters:    Size  Location     Type
 25117 ;;  dataRate        1    wreg     unsigned char 
 25118 ;;  freq            4   17[BANK0 ] unsigned long 
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;  dataRate        1   21[BANK0 ] unsigned char 
 25121 ;; Return value:  Size  Location     Type
 25122 ;;                  1    wreg      void 
 25123 ;; Registers used:
 25124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25125 ;; Tracked objects:
 25126 ;;		On entry : F/0
 25127 ;;		On exit  : 0/0
 25128 ;;		Unchanged: 0/0
 25129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25133 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25134 ;;Total ram usage:        5 bytes
 25135 ;; Hardware stack levels used:    1
 25136 ;; Hardware stack levels required when called:    9
 25137 ;; This function calls:
 25138 ;;		_RADIO_SetBandwidth
 25139 ;;		_RADIO_SetChannelFrequency
 25140 ;;		_RADIO_SetFSKSyncWord
 25141 ;;		_RADIO_SetFrequencyHopPeriod
 25142 ;;		_RADIO_SetLoRaSyncWord
 25143 ;;		_RADIO_SetModulation
 25144 ;;		_RADIO_SetSpreadingFactor
 25145 ;; This function is called by:
 25146 ;;		_ConfigureRadioTx
 25147 ;;		_ConfigureRadioRx
 25148 ;; This function uses a non-reentrant model
 25149 ;;
 25150                           
 25151                           	psect	text133
 25152  005B98                     __ptext133:
 25153                           	opt stack 0
 25154  005B98                     _ConfigureRadio:
 25155                           	opt stack 17
 25156                           
 25157                           ;incstack = 0
 25158                           ;ConfigureRadio@dataRate stored from wreg
 25159  005B98  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 25160                           
 25161                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 25162  005B9A  0E75               	movlw	low _modulation
 25163  005B9C  0100               	movlb	0	; () banked
 25164  005B9E  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25165  005BA0  6EF6               	movwf	tblptrl,c
 25166  005BA2  6AF7               	clrf	tblptrh,c
 25167  005BA4  0EFF               	movlw	high _modulation
 25168  005BA6  22F7               	addwfc	tblptrh,f,c
 25169  005BA8                     	if	1	;There are 3 active tblptr bytes
 25170  005BA8  6AF8               	clrf	tblptru,c
 25171  005BAA  0E00               	movlw	low (__mediumconst shr (0+16))
 25172  005BAC  22F8               	addwfc	tblptru,f,c
 25173  005BAE                     	endif
 25174  005BAE  0008               	tblrd		*
 25175  005BB0  50F5               	movf	tablat,w,c
 25176  005BB2  EC52  F03C         	call	_RADIO_SetModulation
 25177                           
 25178                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 25179  005BB6  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 25180  005BBA  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 25181  005BBE  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 25182  005BC2  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 25183  005BC6  ECE0  F02E         	call	_RADIO_SetChannelFrequency	;wreg free
 25184                           
 25185                           ; BSR set to: 0
 25186                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 25187  005BCA  0E00               	movlw	0
 25188  005BCC  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 25189  005BCE  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 25190  005BD0  EC26  F03C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 25194  005BD4  0E07               	movlw	7
 25195  005BD6  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 25196  005BD8  D01F               	goto	l12639
 25197                           
 25198                           ; BSR set to: 0
 25199                           ;lorawan_eu.c: 870: {
 25200                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 25201  005BDA  0E9B               	movlw	low _spreadingFactor
 25202  005BDC  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25203  005BDE  6EF6               	movwf	tblptrl,c
 25204  005BE0  6AF7               	clrf	tblptrh,c
 25205  005BE2  0EFF               	movlw	high _spreadingFactor
 25206  005BE4  22F7               	addwfc	tblptrh,f,c
 25207  005BE6                     	if	1	;There are 3 active tblptr bytes
 25208  005BE6  6AF8               	clrf	tblptru,c
 25209  005BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 25210  005BEA  22F8               	addwfc	tblptru,f,c
 25211  005BEC                     	endif
 25212  005BEC  0008               	tblrd		*
 25213  005BEE  50F5               	movf	tablat,w,c
 25214  005BF0  EC4E  F03C         	call	_RADIO_SetSpreadingFactor
 25215                           
 25216                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 25217  005BF4  0E8D               	movlw	low _bandwidth
 25218  005BF6  0100               	movlb	0	; () banked
 25219  005BF8  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25220  005BFA  6EF6               	movwf	tblptrl,c
 25221  005BFC  6AF7               	clrf	tblptrh,c
 25222  005BFE  0EFF               	movlw	high _bandwidth
 25223  005C00  22F7               	addwfc	tblptrh,f,c
 25224  005C02                     	if	1	;There are 3 active tblptr bytes
 25225  005C02  6AF8               	clrf	tblptru,c
 25226  005C04  0E00               	movlw	low (__mediumconst shr (0+16))
 25227  005C06  22F8               	addwfc	tblptru,f,c
 25228  005C08                     	endif
 25229  005C08  0008               	tblrd		*
 25230  005C0A  50F5               	movf	tablat,w,c
 25231  005C0C  EC56  F03C         	call	_RADIO_SetBandwidth
 25232                           
 25233                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25234  005C10  0102               	movlb	2	; () banked
 25235  005C12  51F4               	movf	(_loRa+244)& (0+255),w,b
 25236  005C14  EF2B  F03C         	goto	_RADIO_SetLoRaSyncWord
 25237  005C18                     l12639:
 25238                           
 25239                           ; BSR set to: 0
 25240                           ;lorawan_eu.c: 876: else
 25241                           ;lorawan_eu.c: 877: {
 25242                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25243  005C18  0EFC               	movlw	low _FskSyncWordBuff
 25244  005C1A  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25245  005C1C  0EFF               	movlw	high _FskSyncWordBuff
 25246  005C1E  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25247  005C20  0E03               	movlw	3
 25248  005C22  EF97  F038         	goto	_RADIO_SetFSKSyncWord
 25249  005C26                     __end_of_ConfigureRadio:
 25250                           	opt stack 0
 25251                           tosu	equ	0xFFF
 25252                           tosh	equ	0xFFE
 25253                           tosl	equ	0xFFD
 25254                           pclath	equ	0xFFA
 25255                           tblptru	equ	0xFF8
 25256                           tblptrh	equ	0xFF7
 25257                           tblptrl	equ	0xFF6
 25258                           tablat	equ	0xFF5
 25259                           prodh	equ	0xFF4
 25260                           prodl	equ	0xFF3
 25261                           intcon	equ	0xFF2
 25262                           intcon2	equ	0xFF1
 25263                           intcon3	equ	0xFF0
 25264                           indf0	equ	0xFEF
 25265                           postinc0	equ	0xFEE
 25266                           fsr0h	equ	0xFEA
 25267                           fsr0l	equ	0xFE9
 25268                           wreg	equ	0xFE8
 25269                           postinc1	equ	0xFE6
 25270                           postdec1	equ	0xFE5
 25271                           plusw1	equ	0xFE3
 25272                           fsr1h	equ	0xFE2
 25273                           fsr1l	equ	0xFE1
 25274                           indf2	equ	0xFDF
 25275                           postinc2	equ	0xFDE
 25276                           postdec2	equ	0xFDD
 25277                           plusw2	equ	0xFDB
 25278                           fsr2h	equ	0xFDA
 25279                           fsr2l	equ	0xFD9
 25280                           status	equ	0xFD8
 25281                           
 25282 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25283 ;; Defined at:
 25284 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25285 ;; Parameters:    Size  Location     Type
 25286 ;;  spreadingFac    1    wreg     enum E7761
 25287 ;; Auto vars:     Size  Location     Type
 25288 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 25289 ;; Return value:  Size  Location     Type
 25290 ;;                  1    wreg      void 
 25291 ;; Registers used:
 25292 ;;		wreg
 25293 ;; Tracked objects:
 25294 ;;		On entry : F/0
 25295 ;;		On exit  : 0/0
 25296 ;;		Unchanged: 0/0
 25297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25301 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25302 ;;Total ram usage:        1 bytes
 25303 ;; Hardware stack levels used:    1
 25304 ;; Hardware stack levels required when called:    7
 25305 ;; This function calls:
 25306 ;;		Nothing
 25307 ;; This function is called by:
 25308 ;;		_ConfigureRadio
 25309 ;; This function uses a non-reentrant model
 25310 ;;
 25311                           
 25312                           	psect	text134
 25313  00789C                     __ptext134:
 25314                           	opt stack 0
 25315  00789C                     _RADIO_SetSpreadingFactor:
 25316                           	opt stack 18
 25317                           
 25318                           ;incstack = 0
 25319                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25320  00789C  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25321                           
 25322                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25323  00789E  C064  F197         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25324  0078A2  0012               	return		;funcret
 25325  0078A4                     __end_of_RADIO_SetSpreadingFactor:
 25326                           	opt stack 0
 25327                           tosu	equ	0xFFF
 25328                           tosh	equ	0xFFE
 25329                           tosl	equ	0xFFD
 25330                           pclath	equ	0xFFA
 25331                           tblptru	equ	0xFF8
 25332                           tblptrh	equ	0xFF7
 25333                           tblptrl	equ	0xFF6
 25334                           tablat	equ	0xFF5
 25335                           prodh	equ	0xFF4
 25336                           prodl	equ	0xFF3
 25337                           intcon	equ	0xFF2
 25338                           intcon2	equ	0xFF1
 25339                           intcon3	equ	0xFF0
 25340                           indf0	equ	0xFEF
 25341                           postinc0	equ	0xFEE
 25342                           fsr0h	equ	0xFEA
 25343                           fsr0l	equ	0xFE9
 25344                           wreg	equ	0xFE8
 25345                           postinc1	equ	0xFE6
 25346                           postdec1	equ	0xFE5
 25347                           plusw1	equ	0xFE3
 25348                           fsr1h	equ	0xFE2
 25349                           fsr1l	equ	0xFE1
 25350                           indf2	equ	0xFDF
 25351                           postinc2	equ	0xFDE
 25352                           postdec2	equ	0xFDD
 25353                           plusw2	equ	0xFDB
 25354                           fsr2h	equ	0xFDA
 25355                           fsr2l	equ	0xFD9
 25356                           status	equ	0xFD8
 25357                           
 25358 ;; *************** function _RADIO_SetModulation *****************
 25359 ;; Defined at:
 25360 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25361 ;; Parameters:    Size  Location     Type
 25362 ;;  modulation      1    wreg     enum E7751
 25363 ;; Auto vars:     Size  Location     Type
 25364 ;;  modulation      1    4[BANK0 ] enum E7751
 25365 ;; Return value:  Size  Location     Type
 25366 ;;                  1    wreg      void 
 25367 ;; Registers used:
 25368 ;;		wreg
 25369 ;; Tracked objects:
 25370 ;;		On entry : F/0
 25371 ;;		On exit  : 0/0
 25372 ;;		Unchanged: 0/0
 25373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25378 ;;Total ram usage:        1 bytes
 25379 ;; Hardware stack levels used:    1
 25380 ;; Hardware stack levels required when called:    7
 25381 ;; This function calls:
 25382 ;;		Nothing
 25383 ;; This function is called by:
 25384 ;;		_ConfigureRadio
 25385 ;; This function uses a non-reentrant model
 25386 ;;
 25387                           
 25388                           	psect	text135
 25389  0078A4                     __ptext135:
 25390                           	opt stack 0
 25391  0078A4                     _RADIO_SetModulation:
 25392                           	opt stack 18
 25393                           
 25394                           ;incstack = 0
 25395                           ;RADIO_SetModulation@modulation stored from wreg
 25396  0078A4  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25397                           
 25398                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25399  0078A6  C064  F196         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25400  0078AA  0012               	return		;funcret
 25401  0078AC                     __end_of_RADIO_SetModulation:
 25402                           	opt stack 0
 25403                           tosu	equ	0xFFF
 25404                           tosh	equ	0xFFE
 25405                           tosl	equ	0xFFD
 25406                           pclath	equ	0xFFA
 25407                           tblptru	equ	0xFF8
 25408                           tblptrh	equ	0xFF7
 25409                           tblptrl	equ	0xFF6
 25410                           tablat	equ	0xFF5
 25411                           prodh	equ	0xFF4
 25412                           prodl	equ	0xFF3
 25413                           intcon	equ	0xFF2
 25414                           intcon2	equ	0xFF1
 25415                           intcon3	equ	0xFF0
 25416                           indf0	equ	0xFEF
 25417                           postinc0	equ	0xFEE
 25418                           fsr0h	equ	0xFEA
 25419                           fsr0l	equ	0xFE9
 25420                           wreg	equ	0xFE8
 25421                           postinc1	equ	0xFE6
 25422                           postdec1	equ	0xFE5
 25423                           plusw1	equ	0xFE3
 25424                           fsr1h	equ	0xFE2
 25425                           fsr1l	equ	0xFE1
 25426                           indf2	equ	0xFDF
 25427                           postinc2	equ	0xFDE
 25428                           postdec2	equ	0xFDD
 25429                           plusw2	equ	0xFDB
 25430                           fsr2h	equ	0xFDA
 25431                           fsr2l	equ	0xFD9
 25432                           status	equ	0xFD8
 25433                           
 25434 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25435 ;; Defined at:
 25436 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25437 ;; Parameters:    Size  Location     Type
 25438 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25439 ;; Auto vars:     Size  Location     Type
 25440 ;;		None
 25441 ;; Return value:  Size  Location     Type
 25442 ;;                  1    wreg      void 
 25443 ;; Registers used:
 25444 ;;		None
 25445 ;; Tracked objects:
 25446 ;;		On entry : F/0
 25447 ;;		On exit  : F/0
 25448 ;;		Unchanged: F/0
 25449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25454 ;;Total ram usage:        2 bytes
 25455 ;; Hardware stack levels used:    1
 25456 ;; Hardware stack levels required when called:    7
 25457 ;; This function calls:
 25458 ;;		Nothing
 25459 ;; This function is called by:
 25460 ;;		_ConfigureRadio
 25461 ;; This function uses a non-reentrant model
 25462 ;;
 25463                           
 25464                           	psect	text136
 25465  00784C                     __ptext136:
 25466                           	opt stack 0
 25467  00784C                     _RADIO_SetFrequencyHopPeriod:
 25468                           	opt stack 18
 25469                           
 25470                           ; BSR set to: 0
 25471                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25472                           
 25473                           ;incstack = 0
 25474  00784C  C064  F19C         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25475  007850  C065  F19D         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25476                           
 25477                           ; BSR set to: 0
 25478  007854  0012               	return		;funcret
 25479  007856                     __end_of_RADIO_SetFrequencyHopPeriod:
 25480                           	opt stack 0
 25481                           tosu	equ	0xFFF
 25482                           tosh	equ	0xFFE
 25483                           tosl	equ	0xFFD
 25484                           pclath	equ	0xFFA
 25485                           tblptru	equ	0xFF8
 25486                           tblptrh	equ	0xFF7
 25487                           tblptrl	equ	0xFF6
 25488                           tablat	equ	0xFF5
 25489                           prodh	equ	0xFF4
 25490                           prodl	equ	0xFF3
 25491                           intcon	equ	0xFF2
 25492                           intcon2	equ	0xFF1
 25493                           intcon3	equ	0xFF0
 25494                           indf0	equ	0xFEF
 25495                           postinc0	equ	0xFEE
 25496                           fsr0h	equ	0xFEA
 25497                           fsr0l	equ	0xFE9
 25498                           wreg	equ	0xFE8
 25499                           postinc1	equ	0xFE6
 25500                           postdec1	equ	0xFE5
 25501                           plusw1	equ	0xFE3
 25502                           fsr1h	equ	0xFE2
 25503                           fsr1l	equ	0xFE1
 25504                           indf2	equ	0xFDF
 25505                           postinc2	equ	0xFDE
 25506                           postdec2	equ	0xFDD
 25507                           plusw2	equ	0xFDB
 25508                           fsr2h	equ	0xFDA
 25509                           fsr2l	equ	0xFD9
 25510                           status	equ	0xFD8
 25511                           
 25512 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25513 ;; Defined at:
 25514 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25515 ;; Parameters:    Size  Location     Type
 25516 ;;  syncWordLen     1    wreg     unsigned char 
 25517 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25518 ;;		 -> FskSyncWordBuff(3), 
 25519 ;; Auto vars:     Size  Location     Type
 25520 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25521 ;; Return value:  Size  Location     Type
 25522 ;;                  1    wreg      void 
 25523 ;; Registers used:
 25524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25525 ;; Tracked objects:
 25526 ;;		On entry : F/0
 25527 ;;		On exit  : F/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25534 ;;Total ram usage:        3 bytes
 25535 ;; Hardware stack levels used:    1
 25536 ;; Hardware stack levels required when called:    8
 25537 ;; This function calls:
 25538 ;;		_memcpy
 25539 ;; This function is called by:
 25540 ;;		_ConfigureRadio
 25541 ;; This function uses a non-reentrant model
 25542 ;;
 25543                           
 25544                           	psect	text137
 25545  00712E                     __ptext137:
 25546                           	opt stack 0
 25547  00712E                     _RADIO_SetFSKSyncWord:
 25548                           	opt stack 17
 25549                           
 25550                           ; BSR set to: 0
 25551                           ;incstack = 0
 25552                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25553  00712E  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25554                           
 25555                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25556  007130  0E08               	movlw	8
 25557  007132  0100               	movlb	0	; () banked
 25558  007134  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25559  007136  D001               	goto	l12345
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;radio_driver_SX1276.c: 1627: {
 25563                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25564  007138  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25565  00713A                     l12345:
 25566                           
 25567                           ; BSR set to: 0
 25568                           ;radio_driver_SX1276.c: 1629: }
 25569                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25570  00713A  0E8D               	movlw	low (_RadioConfiguration+15)
 25571  00713C  6F64               	movwf	memcpy@d1& (0+255),b
 25572  00713E  0E01               	movlw	high (_RadioConfiguration+15)
 25573  007140  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25574  007142  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25575  007146  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25576  00714A  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25577  00714E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25578  007150  EC0F  F034         	call	_memcpy	;wreg free
 25579                           
 25580                           ; BSR set to: 0
 25581                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25582  007154  C070  F195         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25583                           
 25584                           ; BSR set to: 0
 25585  007158  0012               	return		;funcret
 25586  00715A                     __end_of_RADIO_SetFSKSyncWord:
 25587                           	opt stack 0
 25588                           tosu	equ	0xFFF
 25589                           tosh	equ	0xFFE
 25590                           tosl	equ	0xFFD
 25591                           pclath	equ	0xFFA
 25592                           tblptru	equ	0xFF8
 25593                           tblptrh	equ	0xFF7
 25594                           tblptrl	equ	0xFF6
 25595                           tablat	equ	0xFF5
 25596                           prodh	equ	0xFF4
 25597                           prodl	equ	0xFF3
 25598                           intcon	equ	0xFF2
 25599                           intcon2	equ	0xFF1
 25600                           intcon3	equ	0xFF0
 25601                           indf0	equ	0xFEF
 25602                           postinc0	equ	0xFEE
 25603                           fsr0h	equ	0xFEA
 25604                           fsr0l	equ	0xFE9
 25605                           wreg	equ	0xFE8
 25606                           postinc1	equ	0xFE6
 25607                           postdec1	equ	0xFE5
 25608                           plusw1	equ	0xFE3
 25609                           fsr1h	equ	0xFE2
 25610                           fsr1l	equ	0xFE1
 25611                           indf2	equ	0xFDF
 25612                           postinc2	equ	0xFDE
 25613                           postdec2	equ	0xFDD
 25614                           plusw2	equ	0xFDB
 25615                           fsr2h	equ	0xFDA
 25616                           fsr2l	equ	0xFD9
 25617                           status	equ	0xFD8
 25618                           
 25619 ;; *************** function _RADIO_SetChannelFrequency *****************
 25620 ;; Defined at:
 25621 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25622 ;; Parameters:    Size  Location     Type
 25623 ;;  frequency       4    4[BANK0 ] unsigned long 
 25624 ;; Auto vars:     Size  Location     Type
 25625 ;;		None
 25626 ;; Return value:  Size  Location     Type
 25627 ;;                  2    4[BANK0 ] enum E7805
 25628 ;; Registers used:
 25629 ;;		wreg, status,2, status,0
 25630 ;; Tracked objects:
 25631 ;;		On entry : 0/0
 25632 ;;		On exit  : F/0
 25633 ;;		Unchanged: 0/0
 25634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25635 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25638 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25639 ;;Total ram usage:        4 bytes
 25640 ;; Hardware stack levels used:    1
 25641 ;; Hardware stack levels required when called:    7
 25642 ;; This function calls:
 25643 ;;		Nothing
 25644 ;; This function is called by:
 25645 ;;		_ConfigureRadio
 25646 ;; This function uses a non-reentrant model
 25647 ;;
 25648                           
 25649                           	psect	text138
 25650  005DC0                     __ptext138:
 25651                           	opt stack 0
 25652  005DC0                     _RADIO_SetChannelFrequency:
 25653                           	opt stack 18
 25654                           
 25655                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25656                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25657                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25658                           
 25659                           ; BSR set to: 0
 25660                           ;incstack = 0
 25661  005DC0  0E40               	movlw	64
 25662  005DC2  0100               	movlb	0	; () banked
 25663  005DC4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25664  005DC6  0E74               	movlw	116
 25665  005DC8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25666  005DCA  0E2A               	movlw	42
 25667  005DCC  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25668  005DCE  0E08               	movlw	8
 25669  005DD0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25670  005DD2  E309               	bnc	l12325
 25671                           
 25672                           ; BSR set to: 0
 25673  005DD4  0EC1               	movlw	193
 25674  005DD6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25675  005DD8  0E49               	movlw	73
 25676  005DDA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25677  005DDC  0E6E               	movlw	110
 25678  005DDE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25679  005DE0  0E0A               	movlw	10
 25680  005DE2  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25681  005DE4  E325               	bnc	l690
 25682  005DE6                     l12325:
 25683                           
 25684                           ; BSR set to: 0
 25685  005DE6  0E80               	movlw	128
 25686  005DE8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25687  005DEA  0E1A               	movlw	26
 25688  005DEC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25689  005DEE  0E70               	movlw	112
 25690  005DF0  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25691  005DF2  0E18               	movlw	24
 25692  005DF4  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25693  005DF6  E309               	bnc	l12329
 25694                           
 25695                           ; BSR set to: 0
 25696  005DF8  0E41               	movlw	65
 25697  005DFA  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25698  005DFC  0EDD               	movlw	221
 25699  005DFE  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25700  005E00  0E4A               	movlw	74
 25701  005E02  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25702  005E04  0E1F               	movlw	31
 25703  005E06  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25704  005E08  E313               	bnc	l690
 25705  005E0A                     l12329:
 25706                           
 25707                           ; BSR set to: 0
 25708  005E0A  0E80               	movlw	128
 25709  005E0C  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25710  005E0E  0E13               	movlw	19
 25711  005E10  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25712  005E12  0E61               	movlw	97
 25713  005E14  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25714  005E16  0E33               	movlw	51
 25715  005E18  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25716  005E1A  A0D8               	btfss	status,0,c
 25717  005E1C  0012               	return	
 25718                           
 25719                           ; BSR set to: 0
 25720  005E1E  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25721  005E20  0EF7               	movlw	247
 25722  005E22  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25723  005E24  0ECB               	movlw	203
 25724  005E26  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25725  005E28  0E3C               	movlw	60
 25726  005E2A  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25727  005E2C  B0D8               	btfsc	status,0,c
 25728  005E2E  0012               	return	
 25729  005E30                     l690:
 25730                           
 25731                           ; BSR set to: 0
 25732                           ;radio_driver_SX1276.c: 1449: {
 25733                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25734  005E30  C064  F17E         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25735  005E34  C065  F17F         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25736  005E38  C066  F180         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25737  005E3C  C067  F181         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25738                           
 25739                           ; BSR set to: 0
 25740                           
 25741                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25742                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25743  005E40  0012               	return		;funcret
 25744  005E42                     __end_of_RADIO_SetChannelFrequency:
 25745                           	opt stack 0
 25746                           tosu	equ	0xFFF
 25747                           tosh	equ	0xFFE
 25748                           tosl	equ	0xFFD
 25749                           pclath	equ	0xFFA
 25750                           tblptru	equ	0xFF8
 25751                           tblptrh	equ	0xFF7
 25752                           tblptrl	equ	0xFF6
 25753                           tablat	equ	0xFF5
 25754                           prodh	equ	0xFF4
 25755                           prodl	equ	0xFF3
 25756                           intcon	equ	0xFF2
 25757                           intcon2	equ	0xFF1
 25758                           intcon3	equ	0xFF0
 25759                           indf0	equ	0xFEF
 25760                           postinc0	equ	0xFEE
 25761                           fsr0h	equ	0xFEA
 25762                           fsr0l	equ	0xFE9
 25763                           wreg	equ	0xFE8
 25764                           postinc1	equ	0xFE6
 25765                           postdec1	equ	0xFE5
 25766                           plusw1	equ	0xFE3
 25767                           fsr1h	equ	0xFE2
 25768                           fsr1l	equ	0xFE1
 25769                           indf2	equ	0xFDF
 25770                           postinc2	equ	0xFDE
 25771                           postdec2	equ	0xFDD
 25772                           plusw2	equ	0xFDB
 25773                           fsr2h	equ	0xFDA
 25774                           fsr2l	equ	0xFD9
 25775                           status	equ	0xFD8
 25776                           
 25777 ;; *************** function _RADIO_SetBandwidth *****************
 25778 ;; Defined at:
 25779 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25780 ;; Parameters:    Size  Location     Type
 25781 ;;  bandwidth       1    wreg     enum E7769
 25782 ;; Auto vars:     Size  Location     Type
 25783 ;;  bandwidth       1    4[BANK0 ] enum E7769
 25784 ;; Return value:  Size  Location     Type
 25785 ;;                  1    wreg      void 
 25786 ;; Registers used:
 25787 ;;		wreg
 25788 ;; Tracked objects:
 25789 ;;		On entry : F/0
 25790 ;;		On exit  : 0/0
 25791 ;;		Unchanged: 0/0
 25792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25797 ;;Total ram usage:        1 bytes
 25798 ;; Hardware stack levels used:    1
 25799 ;; Hardware stack levels required when called:    7
 25800 ;; This function calls:
 25801 ;;		Nothing
 25802 ;; This function is called by:
 25803 ;;		_ConfigureRadio
 25804 ;; This function uses a non-reentrant model
 25805 ;;
 25806                           
 25807                           	psect	text139
 25808  0078AC                     __ptext139:
 25809                           	opt stack 0
 25810  0078AC                     _RADIO_SetBandwidth:
 25811                           	opt stack 18
 25812                           
 25813                           ; BSR set to: 0
 25814                           ;incstack = 0
 25815                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25816  0078AC  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25817                           
 25818                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25819  0078AE  C064  F198         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25820  0078B2  0012               	return		;funcret
 25821  0078B4                     __end_of_RADIO_SetBandwidth:
 25822                           	opt stack 0
 25823                           tosu	equ	0xFFF
 25824                           tosh	equ	0xFFE
 25825                           tosl	equ	0xFFD
 25826                           pclath	equ	0xFFA
 25827                           tblptru	equ	0xFF8
 25828                           tblptrh	equ	0xFF7
 25829                           tblptrl	equ	0xFF6
 25830                           tablat	equ	0xFF5
 25831                           prodh	equ	0xFF4
 25832                           prodl	equ	0xFF3
 25833                           intcon	equ	0xFF2
 25834                           intcon2	equ	0xFF1
 25835                           intcon3	equ	0xFF0
 25836                           indf0	equ	0xFEF
 25837                           postinc0	equ	0xFEE
 25838                           fsr0h	equ	0xFEA
 25839                           fsr0l	equ	0xFE9
 25840                           wreg	equ	0xFE8
 25841                           postinc1	equ	0xFE6
 25842                           postdec1	equ	0xFE5
 25843                           plusw1	equ	0xFE3
 25844                           fsr1h	equ	0xFE2
 25845                           fsr1l	equ	0xFE1
 25846                           indf2	equ	0xFDF
 25847                           postinc2	equ	0xFDE
 25848                           postdec2	equ	0xFDD
 25849                           plusw2	equ	0xFDB
 25850                           fsr2h	equ	0xFDA
 25851                           fsr2l	equ	0xFD9
 25852                           status	equ	0xFD8
 25853                           
 25854 ;; *************** function _RADIO_Transmit *****************
 25855 ;; Defined at:
 25856 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25857 ;; Parameters:    Size  Location     Type
 25858 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 25859 ;;		 -> macBuffer(271), 
 25860 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 25861 ;; Auto vars:     Size  Location     Type
 25862 ;;  i               1   70[BANK0 ] unsigned char 
 25863 ;;  regValue        1   69[BANK0 ] unsigned char 
 25864 ;; Return value:  Size  Location     Type
 25865 ;;                  2   54[BANK0 ] enum E7805
 25866 ;; Registers used:
 25867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25868 ;; Tracked objects:
 25869 ;;		On entry : F/0
 25870 ;;		On exit  : F/0
 25871 ;;		Unchanged: 0/0
 25872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25873 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25874 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25876 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25877 ;;Total ram usage:       17 bytes
 25878 ;; Hardware stack levels used:    1
 25879 ;; Hardware stack levels required when called:   12
 25880 ;; This function calls:
 25881 ;;		_HALSPICSAssert
 25882 ;;		_HALSPICSDeassert
 25883 ;;		_HALSPISend
 25884 ;;		_RADIO_RegisterRead
 25885 ;;		_RADIO_RegisterWrite
 25886 ;;		_RADIO_WriteConfiguration
 25887 ;;		_RADIO_WriteMode
 25888 ;;		_SwTimerSetTimeout
 25889 ;;		_SwTimerStart
 25890 ;;		_SwTimerStop
 25891 ;;		___lldiv
 25892 ;; This function is called by:
 25893 ;;		_LORAWAN_RxTimeout
 25894 ;;		_LORAWAN_Join
 25895 ;;		_LORAWAN_Send
 25896 ;;		_AckRetransmissionCallback
 25897 ;;		_UnconfirmedTransmissionCallback
 25898 ;; This function uses a non-reentrant model
 25899 ;;
 25900                           
 25901                           	psect	text140
 25902  002FA6                     __ptext140:
 25903                           	opt stack 0
 25904  002FA6                     _RADIO_Transmit:
 25905                           	opt stack 16
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 25909                           ;radio_driver_SX1276.c: 789: uint8_t i;
 25910                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25911                           
 25912                           ;incstack = 0
 25913  002FA6  0101               	movlb	1	; () banked
 25914  002FA8  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25915  002FAA  D006               	goto	l13333
 25916                           
 25917                           ; BSR set to: 1
 25918                           ;radio_driver_SX1276.c: 792: {
 25919                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 25920  002FAC  0E80               	movlw	128
 25921  002FAE  0100               	movlb	0	; () banked
 25922  002FB0  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25923  002FB2  0E03               	movlw	3
 25924  002FB4  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25925  002FB6  0C03               	retlw	3
 25926  002FB8                     l13333:
 25927                           
 25928                           ; BSR set to: 1
 25929                           ;radio_driver_SX1276.c: 794: }
 25930                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25931  002FB8  C1A1  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 25932  002FBC  0E03               	movlw	3
 25933  002FBE  0100               	movlb	0	; () banked
 25934  002FC0  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 25935  002FC2  E005               	bz	l13339
 25936                           
 25937                           ; BSR set to: 0
 25938                           ;radio_driver_SX1276.c: 797: {
 25939                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 25940  002FC4  0E80               	movlw	128
 25941  002FC6  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25942  002FC8  0E04               	movlw	4
 25943  002FCA  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25944  002FCC  0C04               	retlw	4
 25945  002FCE                     l13339:
 25946                           
 25947                           ; BSR set to: 0
 25948                           ;radio_driver_SX1276.c: 799: }
 25949                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 25950  002FCE  0101               	movlb	1	; () banked
 25951  002FD0  5196               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25952  002FD2  E109               	bnz	l13347
 25953                           
 25954                           ; BSR set to: 1
 25955  002FD4  0E40               	movlw	64
 25956  002FD6  0100               	movlb	0	; () banked
 25957  002FD8  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 25958  002FDA  D005               	goto	l13347
 25959                           
 25960                           ; BSR set to: 0
 25961                           ;radio_driver_SX1276.c: 802: {
 25962                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 25963  002FDC  0E80               	movlw	128
 25964  002FDE  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25965  002FE0  0E02               	movlw	2
 25966  002FE2  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25967  002FE4  0C02               	retlw	2
 25968  002FE6                     l13347:
 25969                           
 25970                           ;radio_driver_SX1276.c: 804: }
 25971                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25972  002FE6  0101               	movlb	1	; () banked
 25973  002FE8  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25974  002FEA  EC78  F03A         	call	_SwTimerStop
 25975                           
 25976                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 25977  002FEE  0E00               	movlw	0
 25978  002FF0  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25979  002FF2  0E04               	movlw	4
 25980  002FF4  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25981  002FF6  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 25982                           
 25983                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 25984  002FFA  0101               	movlb	1	; () banked
 25985  002FFC  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25986  002FFE  E123               	bnz	l13365
 25987                           
 25988                           ; BSR set to: 1
 25989                           ;radio_driver_SX1276.c: 813: {
 25990                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 25991  003000  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25992  003004  0E22               	movlw	34
 25993  003006  EC4B  F03A         	call	_RADIO_RegisterWrite
 25994                           
 25995                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 25996  00300A  0E0A               	movlw	10
 25997  00300C  EC63  F039         	call	_RADIO_RegisterRead
 25998  003010  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 25999                           
 26000                           ; BSR set to: 0
 26001                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 26002  003012  0EF0               	movlw	240
 26003  003014  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 26004                           
 26005                           ; BSR set to: 0
 26006                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 26007  003016  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 26008                           
 26009                           ; BSR set to: 0
 26010                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 26011  003018  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 26012  00301C  0E0A               	movlw	10
 26013  00301E  EC4B  F03A         	call	_RADIO_RegisterWrite
 26014                           
 26015                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 26016  003022  0E40               	movlw	64
 26017  003024  0100               	movlb	0	; () banked
 26018  003026  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26019  003028  EC4B  F03A         	call	_RADIO_RegisterWrite
 26020                           
 26021                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 26022  00302C  0100               	movlb	0	; () banked
 26023  00302E  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26024  003030  0E41               	movlw	65
 26025  003032  EC4B  F03A         	call	_RADIO_RegisterWrite
 26026                           
 26027                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 26028  003036  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26029  00303A  0E01               	movlw	1
 26030  00303C  0100               	movlb	0	; () banked
 26031  00303E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26032  003040  EC5F  F028         	call	_RADIO_WriteMode
 26033                           
 26034                           ;radio_driver_SX1276.c: 828: }
 26035  003044  D00A               	goto	l13367
 26036  003046                     l13365:
 26037                           
 26038                           ; BSR set to: 1
 26039                           ;radio_driver_SX1276.c: 829: else
 26040                           ;radio_driver_SX1276.c: 830: {
 26041                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 26042  003046  0100               	movlb	0	; () banked
 26043  003048  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26044  00304A  0E40               	movlw	64
 26045  00304C  EC4B  F03A         	call	_RADIO_RegisterWrite
 26046                           
 26047                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 26048  003050  0100               	movlb	0	; () banked
 26049  003052  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26050  003054  0E41               	movlw	65
 26051  003056  EC4B  F03A         	call	_RADIO_RegisterWrite
 26052  00305A                     l13367:
 26053                           
 26054                           ;radio_driver_SX1276.c: 834: }
 26055                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 26056  00305A  0101               	movlb	1	; () banked
 26057  00305C  5196               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26058  00305E  E105               	bnz	l13371
 26059                           
 26060                           ; BSR set to: 1
 26061                           ;radio_driver_SX1276.c: 837: {
 26062                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 26063  003060  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26064  003064  0E00               	movlw	0
 26065  003066  EC4B  F03A         	call	_RADIO_RegisterWrite
 26066  00306A                     l13371:
 26067                           
 26068                           ;radio_driver_SX1276.c: 840: }
 26069                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 26070  00306A  EC88  F03C         	call	_HALSPICSAssert	;wreg free
 26071                           
 26072                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 26073  00306E  0E80               	movlw	128
 26074  003070  EC30  F03C         	call	_HALSPISend
 26075                           
 26076                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 26077  003074  0100               	movlb	0	; () banked
 26078  003076  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 26079  003078  D00B               	goto	l13381
 26080  00307A                     l13377:
 26081                           
 26082                           ; BSR set to: 0
 26083                           ;radio_driver_SX1276.c: 846: {
 26084                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 26085  00307A  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 26086  00307C  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 26087  00307E  6ED9               	movwf	fsr2l,c
 26088  003080  0E00               	movlw	0
 26089  003082  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 26090  003084  6EDA               	movwf	fsr2h,c
 26091  003086  50DF               	movf	indf2,w,c
 26092  003088  EC30  F03C         	call	_HALSPISend
 26093  00308C  0100               	movlb	0	; () banked
 26094  00308E  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 26095  003090                     l13381:
 26096                           
 26097                           ; BSR set to: 0
 26098  003090  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 26099  003092  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 26100  003094  E3F2               	bnc	l13377
 26101                           
 26102                           ; BSR set to: 0
 26103                           ;radio_driver_SX1276.c: 848: }
 26104                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 26105  003096  EC86  F03C         	call	_HALSPICSDeassert	;wreg free
 26106                           
 26107                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 26108  00309A  0101               	movlb	1	; () banked
 26109  00309C  81A1               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 26110                           
 26111                           ; BSR set to: 1
 26112                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 26113  00309E  0EE7               	movlw	231
 26114  0030A0  17A1               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 26115                           
 26116                           ; BSR set to: 1
 26117                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 26118  0030A2  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26119  0030A6  0E00               	movlw	0
 26120  0030A8  0100               	movlb	0	; () banked
 26121  0030AA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26122  0030AC  0E03               	movlw	3
 26123  0030AE  EC5F  F028         	call	_RADIO_WriteMode
 26124                           
 26125                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 26126  0030B2  0100               	movlb	0	; () banked
 26127  0030B4  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 26128  0030B6  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26129  0030B8  0E0A               	movlw	10
 26130  0030BA  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26131  0030BC  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26132  0030BE  0101               	movlb	1	; () banked
 26133  0030C0  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26134  0030C2  EC70  F036         	call	_SwTimerSetTimeout
 26135                           
 26136                           ; BSR set to: 0
 26137                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 26138  0030C6  0101               	movlb	1	; () banked
 26139  0030C8  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26140  0030CA  EC59  F02E         	call	_SwTimerStart
 26141                           
 26142                           ; BSR set to: 0
 26143                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26144  0030CE  0101               	movlb	1	; () banked
 26145  0030D0  51A8               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26146  0030D2  11A9               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26147  0030D4  11AA               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26148  0030D6  11AB               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26149  0030D8  E059               	bz	l13411
 26150                           
 26151                           ; BSR set to: 1
 26152                           ;radio_driver_SX1276.c: 866: {
 26153                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26154  0030DA  51AB               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26155  0030DC  E106               	bnz	u14680
 26156  0030DE  29A8               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26157  0030E0  0EFF               	movlw	255
 26158  0030E2  59A9               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26159  0030E4  0E0F               	movlw	15
 26160  0030E6  59AA               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26161  0030E8  E319               	bnc	l13405
 26162  0030EA                     u14680:
 26163                           
 26164                           ; BSR set to: 1
 26165  0030EA  C1A8  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 26166  0030EE  C1A9  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26167  0030F2  C1AA  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26168  0030F6  C1AB  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26169  0030FA  0E7D               	movlw	125
 26170  0030FC  0100               	movlb	0	; () banked
 26171  0030FE  6F68               	movwf	___lldiv@divisor& (0+255),b
 26172  003100  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26173  003102  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26174  003104  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26175  003106  EC1B  F030         	call	___lldiv	;wreg free
 26176  00310A  0E0C               	movlw	12
 26177  00310C                     u14695:
 26178  00310C  90D8               	bcf	status,0,c
 26179  00310E  3764               	rlcf	?___lldiv& (0+255),f,b
 26180  003110  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 26181  003112  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 26182  003114  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 26183  003116  2EE8               	decfsz	wreg,f,c
 26184  003118  D7F9               	goto	u14695
 26185  00311A  D020               	goto	L15
 26186  00311C                     l13405:
 26187                           
 26188                           ; BSR set to: 1
 26189  00311C  C1A8  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26190  003120  C1A9  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26191  003124  C1AA  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26192  003128  C1AB  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26193  00312C  0E0C               	movlw	12
 26194  00312E                     u14705:
 26195  00312E  90D8               	bcf	status,0,c
 26196  003130  0100               	movlb	0	; () banked
 26197  003132  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26198  003134  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26199  003136  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26200  003138  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26201  00313A  2EE8               	decfsz	wreg,f,c
 26202  00313C  D7F8               	goto	u14705
 26203  00313E  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 26204  003142  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26205  003146  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26206  00314A  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26207  00314E  0E7D               	movlw	125
 26208  003150  6F68               	movwf	___lldiv@divisor& (0+255),b
 26209  003152  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26210  003154  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26211  003156  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26212  003158  EC1B  F030         	call	___lldiv	;wreg free
 26213  00315C                     L15:
 26214  00315C  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1196
 26215  003160  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1196+1
 26216  003164  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1196+2
 26217  003168  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1196+3
 26218                           
 26219                           ; BSR set to: 0
 26220  00316C  C0A1  F071         	movff	_RADIO_Transmit$1196,SwTimerSetTimeout@timeout
 26221  003170  C0A2  F072         	movff	_RADIO_Transmit$1196+1,SwTimerSetTimeout@timeout+1
 26222  003174  C0A3  F073         	movff	_RADIO_Transmit$1196+2,SwTimerSetTimeout@timeout+2
 26223  003178  C0A4  F074         	movff	_RADIO_Transmit$1196+3,SwTimerSetTimeout@timeout+3
 26224  00317C  0101               	movlb	1	; () banked
 26225  00317E  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26226  003180  EC70  F036         	call	_SwTimerSetTimeout
 26227                           
 26228                           ; BSR set to: 0
 26229                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26230  003184  0101               	movlb	1	; () banked
 26231  003186  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26232  003188  EC59  F02E         	call	_SwTimerStart
 26233  00318C                     l13411:
 26234                           
 26235                           ;radio_driver_SX1276.c: 869: }
 26236                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 26237  00318C  0100               	movlb	0	; () banked
 26238  00318E  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 26239  003190  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 26240                           
 26241                           ; BSR set to: 0
 26242  003192  0012               	return		;funcret
 26243  003194                     __end_of_RADIO_Transmit:
 26244                           	opt stack 0
 26245                           tosu	equ	0xFFF
 26246                           tosh	equ	0xFFE
 26247                           tosl	equ	0xFFD
 26248                           pclath	equ	0xFFA
 26249                           tblptru	equ	0xFF8
 26250                           tblptrh	equ	0xFF7
 26251                           tblptrl	equ	0xFF6
 26252                           tablat	equ	0xFF5
 26253                           prodh	equ	0xFF4
 26254                           prodl	equ	0xFF3
 26255                           intcon	equ	0xFF2
 26256                           intcon2	equ	0xFF1
 26257                           intcon3	equ	0xFF0
 26258                           indf0	equ	0xFEF
 26259                           postinc0	equ	0xFEE
 26260                           fsr0h	equ	0xFEA
 26261                           fsr0l	equ	0xFE9
 26262                           wreg	equ	0xFE8
 26263                           postinc1	equ	0xFE6
 26264                           postdec1	equ	0xFE5
 26265                           plusw1	equ	0xFE3
 26266                           fsr1h	equ	0xFE2
 26267                           fsr1l	equ	0xFE1
 26268                           indf2	equ	0xFDF
 26269                           postinc2	equ	0xFDE
 26270                           postdec2	equ	0xFDD
 26271                           plusw2	equ	0xFDB
 26272                           fsr2h	equ	0xFDA
 26273                           fsr2l	equ	0xFD9
 26274                           status	equ	0xFD8
 26275                           
 26276 ;; *************** function _RADIO_WriteConfiguration *****************
 26277 ;; Defined at:
 26278 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26279 ;; Parameters:    Size  Location     Type
 26280 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26281 ;; Auto vars:     Size  Location     Type
 26282 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26283 ;;  regValue        1   38[BANK0 ] unsigned char 
 26284 ;;  i               1   33[BANK0 ] unsigned char 
 26285 ;; Return value:  Size  Location     Type
 26286 ;;                  1    wreg      void 
 26287 ;; Registers used:
 26288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26289 ;; Tracked objects:
 26290 ;;		On entry : F/0
 26291 ;;		On exit  : 0/0
 26292 ;;		Unchanged: 0/0
 26293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26295 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26296 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26297 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26298 ;;Total ram usage:       10 bytes
 26299 ;; Hardware stack levels used:    1
 26300 ;; Hardware stack levels required when called:   11
 26301 ;; This function calls:
 26302 ;;		_RADIO_RegisterRead
 26303 ;;		_RADIO_RegisterWrite
 26304 ;;		_RADIO_WriteFSKBitRate
 26305 ;;		_RADIO_WriteFSKFrequencyDeviation
 26306 ;;		_RADIO_WriteFrequency
 26307 ;;		_RADIO_WriteMode
 26308 ;;		_RADIO_WritePower
 26309 ;;		___lmul
 26310 ;; This function is called by:
 26311 ;;		_RADIO_Transmit
 26312 ;;		_RADIO_ReceiveStart
 26313 ;; This function uses a non-reentrant model
 26314 ;;
 26315                           
 26316                           	psect	text141
 26317  001382                     __ptext141:
 26318                           	opt stack 0
 26319  001382                     _RADIO_WriteConfiguration:
 26320                           	opt stack 16
 26321                           
 26322                           ; BSR set to: 0
 26323                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26324                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26325                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26326                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;incstack = 0
 26330  001382  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26331  001386  0E00               	movlw	0
 26332  001388  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26333  00138A  EC5F  F028         	call	_RADIO_WriteMode
 26334                           
 26335                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26336  00138E  C17E  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26337  001392  C17F  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26338  001396  C180  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26339  00139A  C181  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26340  00139E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
 26341                           
 26342                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26343  0013A2  0101               	movlb	1	; () banked
 26344  0013A4  5199               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26345  0013A6  EC33  F029         	call	_RADIO_WritePower
 26346                           
 26347                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26348  0013AA  0101               	movlb	1	; () banked
 26349  0013AC  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26350  0013AE  E001 D1B6          	bnz	l12565
 26351                           
 26352                           ; BSR set to: 1
 26353                           ;radio_driver_SX1276.c: 545: {
 26354                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26355  0013B2  C18C  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26356  0013B6  0E39               	movlw	57
 26357  0013B8  EC4B  F03A         	call	_RADIO_RegisterWrite
 26358                           
 26359                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26360                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26361                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26362                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26363  0013BC  C1A0  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26364  0013C0  0E01               	movlw	1
 26365  0013C2  0100               	movlb	0	; () banked
 26366  0013C4  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26367  0013C6  0101               	movlb	1	; () banked
 26368  0013C8  90D8               	bcf	status,0,c
 26369  0013CA  359F               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26370  0013CC  0100               	movlb	0	; () banked
 26371  0013CE  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26372  0013D0  0101               	movlb	1	; () banked
 26373  0013D2  3998               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26374  0013D4  0BF0               	andlw	240
 26375  0013D6  0100               	movlb	0	; () banked
 26376  0013D8  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26377  0013DA  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26378  0013DC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26379  0013DE  0E1D               	movlw	29
 26380  0013E0  EC4B  F03A         	call	_RADIO_RegisterWrite
 26381                           
 26382                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26383                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26384                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26385                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26386  0013E4  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26387  0013E8  0E03               	movlw	3
 26388  0013EA  0100               	movlb	0	; () banked
 26389  0013EC  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26390  0013EE  C19A  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26391  0013F2  0E01               	movlw	1
 26392  0013F4  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26393  0013F6  90D8               	bcf	status,0,c
 26394  0013F8  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26395  0013FA  90D8               	bcf	status,0,c
 26396  0013FC  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26397  0013FE  0101               	movlb	1	; () banked
 26398  001400  3997               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26399  001402  0BF0               	andlw	240
 26400  001404  0100               	movlb	0	; () banked
 26401  001406  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26402  001408  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26403  00140A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26404  00140C  0E1E               	movlw	30
 26405  00140E  EC4B  F03A         	call	_RADIO_RegisterWrite
 26406                           
 26407                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26408  001412  0101               	movlb	1	; () banked
 26409  001414  519C               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26410  001416  119D               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26411  001418  E060               	bz	l447
 26412                           
 26413                           ; BSR set to: 1
 26414                           ;radio_driver_SX1276.c: 561: {
 26415                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26416  00141A  C19C  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26417  00141E  C19D  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26418  001422  0100               	movlb	0	; () banked
 26419  001424  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26420  001426  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26421                           
 26422                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26423  001428  D042               	goto	l12457
 26424  00142A                     l12449:
 26425                           
 26426                           ; BSR set to: 1
 26427                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26428  00142A  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26429  00142E  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26430  001432  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26431  001436  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26432  00143A  0E7D               	movlw	125
 26433  00143C  0100               	movlb	0	; () banked
 26434  00143E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26435  001440  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26436  001442  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26437  001444  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26438  001446  EC9D  F02E         	call	___lmul	;wreg free
 26439  00144A  D022               	goto	L17
 26440  00144C                     l12451:
 26441                           
 26442                           ; BSR set to: 1
 26443                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26444  00144C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26445  001450  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26446  001454  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26447  001458  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26448  00145C  0EFA               	movlw	250
 26449  00145E  0100               	movlb	0	; () banked
 26450  001460  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26451  001462  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26452  001464  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26453  001466  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26454  001468  EC9D  F02E         	call	___lmul	;wreg free
 26455  00146C  D011               	goto	L17
 26456  00146E                     l12453:
 26457                           
 26458                           ; BSR set to: 1
 26459                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26460  00146E  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26461  001472  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26462  001476  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26463  00147A  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26464  00147E  0EF4               	movlw	244
 26465  001480  0100               	movlb	0	; () banked
 26466  001482  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26467  001484  0E01               	movlw	1
 26468  001486  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26469  001488  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26470  00148A  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26471  00148C  EC9D  F02E         	call	___lmul	;wreg free
 26472  001490                     L17:
 26473  001490  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26474  001494  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26475  001498  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26476  00149C  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26477                           
 26478                           ;radio_driver_SX1276.c: 574: break;
 26479  0014A0  D00F               	goto	l12459
 26480  0014A2                     l453:
 26481                           
 26482                           ; BSR set to: 1
 26483                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26484  0014A2  0100               	movlb	0	; () banked
 26485  0014A4  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26486  0014A6  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26487  0014A8  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26488  0014AA  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26489                           
 26490                           ;radio_driver_SX1276.c: 578: break;
 26491  0014AC  D009               	goto	l12459
 26492  0014AE                     l12457:
 26493                           
 26494                           ; BSR set to: 0
 26495  0014AE  0101               	movlb	1	; () banked
 26496  0014B0  5198               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26497                           
 26498                           ; Switch size 1, requested type "speed"
 26499                           ; Number of cases is 3, Range of values is 7 to 9
 26500                           ; switch strategies available:
 26501                           ; Name         Instructions Cycles
 26502                           ; simple_byte           10     6 (average)
 26503                           ;	Chosen strategy is simple_byte
 26504  0014B2  0A07               	xorlw	7	; case 7
 26505  0014B4  E0BA               	bz	l12449
 26506  0014B6  0A0F               	xorlw	15	; case 8
 26507  0014B8  E0C9               	bz	l12451
 26508  0014BA  0A01               	xorlw	1	; case 9
 26509  0014BC  E0D8               	bz	l12453
 26510  0014BE  D7F1               	goto	l453
 26511  0014C0                     l12459:
 26512                           
 26513                           ; BSR set to: 0
 26514                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26515  0014C0  0101               	movlb	1	; () banked
 26516  0014C2  2997               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26517  0014C4  0100               	movlb	0	; () banked
 26518  0014C6  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26519  0014C8  D005               	goto	u13260
 26520  0014CA                     u13265:
 26521  0014CA  90D8               	bcf	status,0,c
 26522  0014CC  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26523  0014CE  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26524  0014D0  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26525  0014D2  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26526  0014D4                     u13260:
 26527  0014D4  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26528  0014D6  D7F9               	goto	u13265
 26529                           
 26530                           ;radio_driver_SX1276.c: 582: }
 26531  0014D8  D005               	goto	l12461
 26532  0014DA                     l447:
 26533                           
 26534                           ; BSR set to: 1
 26535                           ;radio_driver_SX1276.c: 583: else
 26536                           ;radio_driver_SX1276.c: 584: {
 26537                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26538  0014DA  0100               	movlb	0	; () banked
 26539  0014DC  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26540  0014DE  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26541  0014E0  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26542  0014E2  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26543  0014E4                     l12461:
 26544                           
 26545                           ;radio_driver_SX1276.c: 586: }
 26546                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26547  0014E4  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26548  0014E8  0E24               	movlw	36
 26549  0014EA  EC4B  F03A         	call	_RADIO_RegisterWrite
 26550                           
 26551                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26552  0014EE  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26553  0014F2  0E1F               	movlw	31
 26554  0014F4  EC4B  F03A         	call	_RADIO_RegisterWrite
 26555                           
 26556                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26557  0014F8  0E26               	movlw	38
 26558  0014FA  EC63  F039         	call	_RADIO_RegisterRead
 26559  0014FE  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26560                           
 26561                           ; BSR set to: 0
 26562                           ;radio_driver_SX1276.c: 596: if (
 26563                           ;radio_driver_SX1276.c: 597: (
 26564                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26565                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26566                           ;radio_driver_SX1276.c: 600: ) ||
 26567                           ;radio_driver_SX1276.c: 601: (
 26568                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26569                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26570                           ;radio_driver_SX1276.c: 604: )
 26571                           ;radio_driver_SX1276.c: 605: )
 26572  001500  0E0C               	movlw	12
 26573  001502  0101               	movlb	1	; () banked
 26574  001504  1997               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26575  001506  E106               	bnz	l12469
 26576                           
 26577                           ; BSR set to: 1
 26578  001508  0E07               	movlw	7
 26579  00150A  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26580  00150C  E009               	bz	l12473
 26581                           
 26582                           ; BSR set to: 1
 26583  00150E  0E08               	movlw	8
 26584  001510  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26585  001512  E006               	bz	l12473
 26586  001514                     l12469:
 26587                           
 26588                           ; BSR set to: 1
 26589  001514  0E0B               	movlw	11
 26590  001516  1997               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26591  001518  E106               	bnz	l12475
 26592                           
 26593                           ; BSR set to: 1
 26594  00151A  0E07               	movlw	7
 26595  00151C  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26596  00151E  E103               	bnz	l12475
 26597  001520                     l12473:
 26598                           
 26599                           ; BSR set to: 1
 26600                           ;radio_driver_SX1276.c: 606: {
 26601                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26602  001520  0100               	movlb	0	; () banked
 26603  001522  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26604                           
 26605                           ;radio_driver_SX1276.c: 608: }
 26606  001524  D002               	goto	l460
 26607  001526                     l12475:
 26608                           
 26609                           ; BSR set to: 1
 26610                           ;radio_driver_SX1276.c: 609: else
 26611                           ;radio_driver_SX1276.c: 610: {
 26612                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26613  001526  0100               	movlb	0	; () banked
 26614  001528  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26615  00152A                     l460:
 26616                           
 26617                           ; BSR set to: 0
 26618                           ;radio_driver_SX1276.c: 612: }
 26619                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26620  00152A  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26621                           
 26622                           ; BSR set to: 0
 26623                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26624  00152C  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26625  001530  0E26               	movlw	38
 26626  001532  EC4B  F03A         	call	_RADIO_RegisterWrite
 26627                           
 26628                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26629  001536  0E31               	movlw	49
 26630  001538  EC63  F039         	call	_RADIO_RegisterRead
 26631  00153C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26632                           
 26633                           ; BSR set to: 0
 26634                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26635  00153E  0EF8               	movlw	248
 26636  001540  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26637                           
 26638                           ; BSR set to: 0
 26639                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26640  001542  0E03               	movlw	3
 26641  001544  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26642                           
 26643                           ; BSR set to: 0
 26644                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26645  001546  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26646  00154A  0E31               	movlw	49
 26647  00154C  EC4B  F03A         	call	_RADIO_RegisterWrite
 26648                           
 26649                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26650  001550  0E0A               	movlw	10
 26651  001552  0100               	movlb	0	; () banked
 26652  001554  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26653  001556  0E37               	movlw	55
 26654  001558  EC4B  F03A         	call	_RADIO_RegisterWrite
 26655                           
 26656                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26657  00155C  0E12               	movlw	18
 26658  00155E  0101               	movlb	1	; () banked
 26659  001560  19AF               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26660  001562  E129               	bnz	l12513
 26661                           
 26662                           ; BSR set to: 1
 26663                           ;radio_driver_SX1276.c: 626: {
 26664                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26665                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26666  001564  0E07               	movlw	7
 26667  001566  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26668  001568  E003               	bz	l12495
 26669                           
 26670                           ; BSR set to: 1
 26671  00156A  0E08               	movlw	8
 26672  00156C  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26673  00156E  E115               	bnz	l12505
 26674  001570                     l12495:
 26675                           
 26676                           ; BSR set to: 1
 26677                           ;radio_driver_SX1276.c: 631: {
 26678                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26679  001570  0E31               	movlw	49
 26680  001572  EC63  F039         	call	_RADIO_RegisterRead
 26681  001576  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26682                           
 26683                           ; BSR set to: 0
 26684                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26685  001578  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26686                           
 26687                           ; BSR set to: 0
 26688                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26689  00157A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26690  00157E  0E31               	movlw	49
 26691  001580  EC4B  F03A         	call	_RADIO_RegisterWrite
 26692                           
 26693                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26694  001584  0E40               	movlw	64
 26695  001586  0100               	movlb	0	; () banked
 26696  001588  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26697  00158A  0E2F               	movlw	47
 26698  00158C  EC4B  F03A         	call	_RADIO_RegisterWrite
 26699                           
 26700                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26701  001590  0100               	movlb	0	; () banked
 26702  001592  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26703  001594  0E30               	movlw	48
 26704  001596  EC4B  F03A         	call	_RADIO_RegisterWrite
 26705  00159A                     l12505:
 26706                           
 26707                           ;radio_driver_SX1276.c: 637: }
 26708                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26709  00159A  0E09               	movlw	9
 26710  00159C  0101               	movlb	1	; () banked
 26711  00159E  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26712  0015A0  E10A               	bnz	l12513
 26713                           
 26714                           ; BSR set to: 1
 26715                           ;radio_driver_SX1276.c: 640: {
 26716                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26717  0015A2  0E31               	movlw	49
 26718  0015A4  EC63  F039         	call	_RADIO_RegisterRead
 26719  0015A8  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26720                           
 26721                           ; BSR set to: 0
 26722                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26723  0015AA  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26724                           
 26725                           ; BSR set to: 0
 26726                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26727  0015AC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26728  0015B0  0E31               	movlw	49
 26729  0015B2  EC4B  F03A         	call	_RADIO_RegisterWrite
 26730  0015B6                     l12513:
 26731                           
 26732                           ;radio_driver_SX1276.c: 644: }
 26733                           ;radio_driver_SX1276.c: 645: }
 26734                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26735  0015B6  0E33               	movlw	51
 26736  0015B8  EC63  F039         	call	_RADIO_RegisterRead
 26737  0015BC  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26741  0015BE  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26742                           
 26743                           ; BSR set to: 0
 26744                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26745  0015C0  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26746                           
 26747                           ; BSR set to: 0
 26748                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26749  0015C2  C19E  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26750  0015C6  0E01               	movlw	1
 26751  0015C8  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26752  0015CA  0E06               	movlw	6
 26753  0015CC  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26754  0015CE                     u13365:
 26755  0015CE  90D8               	bcf	status,0,c
 26756  0015D0  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26757  0015D2  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26758  0015D4  D7FC               	goto	u13365
 26759  0015D6  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26760  0015D8  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26761                           
 26762                           ; BSR set to: 0
 26763                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26764  0015DA  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26765  0015DE  0E33               	movlw	51
 26766  0015E0  EC4B  F03A         	call	_RADIO_RegisterWrite
 26767                           
 26768                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26769  0015E4  C19E  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26770  0015E8  0E01               	movlw	1
 26771  0015EA  0100               	movlb	0	; () banked
 26772  0015EC  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26773  0015EE  90D8               	bcf	status,0,c
 26774  0015F0  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26775  0015F2  90D8               	bcf	status,0,c
 26776  0015F4  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26777  0015F6  0AFF               	xorlw	255
 26778  0015F8  0B1D               	andlw	29
 26779  0015FA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26780                           
 26781                           ; BSR set to: 0
 26782                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26783  0015FC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26784  001600  0E3B               	movlw	59
 26785  001602  EC4B  F03A         	call	_RADIO_RegisterWrite
 26786                           
 26787                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26788  001606  0101               	movlb	1	; () banked
 26789  001608  518B               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26790  00160A  0100               	movlb	0	; () banked
 26791  00160C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26792  00160E  0E20               	movlw	32
 26793  001610  EC4B  F03A         	call	_RADIO_RegisterWrite
 26794                           
 26795                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26796  001614  C18A  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26797  001618  0E21               	movlw	33
 26798  00161A  EC4B  F03A         	call	_RADIO_RegisterWrite
 26799                           
 26800                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26801  00161E  0100               	movlb	0	; () banked
 26802  001620  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26803  001622  0E0D               	movlw	13
 26804  001624  EC4B  F03A         	call	_RADIO_RegisterWrite
 26805                           
 26806                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26807  001628  0100               	movlb	0	; () banked
 26808  00162A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26809  00162C  0E0E               	movlw	14
 26810  00162E  EC4B  F03A         	call	_RADIO_RegisterWrite
 26811                           
 26812                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26813  001632  0100               	movlb	0	; () banked
 26814  001634  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26815  001636  0E0F               	movlw	15
 26816  001638  EC4B  F03A         	call	_RADIO_RegisterWrite
 26817                           
 26818                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26819  00163C  0E12               	movlw	18
 26820  00163E  0101               	movlb	1	; () banked
 26821  001640  19AF               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26822  001642  E168               	bnz	l466
 26823                           
 26824                           ; BSR set to: 1
 26825                           ;radio_driver_SX1276.c: 665: {
 26826                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26827                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26828                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26829                           ;radio_driver_SX1276.c: 669: )
 26830  001644  0E09               	movlw	9
 26831  001646  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26832  001648  E11E               	bnz	l12547
 26833                           
 26834                           ; BSR set to: 1
 26835  00164A  0E80               	movlw	128
 26836  00164C  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26837  00164E  0E13               	movlw	19
 26838  001650  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26839  001652  0E61               	movlw	97
 26840  001654  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26841  001656  0E33               	movlw	51
 26842  001658  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26843  00165A  E315               	bnc	l12547
 26844                           
 26845                           ; BSR set to: 1
 26846  00165C  057E               	decf	_RadioConfiguration& (0+255),w,b
 26847  00165E  0EF7               	movlw	247
 26848  001660  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26849  001662  0ECB               	movlw	203
 26850  001664  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26851  001666  0E3C               	movlw	60
 26852  001668  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26853  00166A  E20D               	bc	l12547
 26854                           
 26855                           ; BSR set to: 1
 26856                           ;radio_driver_SX1276.c: 670: {
 26857                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26858  00166C  0E02               	movlw	2
 26859  00166E  0100               	movlb	0	; () banked
 26860  001670  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26861  001672  0E36               	movlw	54
 26862  001674  EC4B  F03A         	call	_RADIO_RegisterWrite
 26863                           
 26864                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26865  001678  0E64               	movlw	100
 26866  00167A  0100               	movlb	0	; () banked
 26867  00167C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26868  00167E  0E3A               	movlw	58
 26869  001680  EC4B  F03A         	call	_RADIO_RegisterWrite
 26870                           
 26871                           ;radio_driver_SX1276.c: 673: }
 26872  001684  D028               	goto	l12557
 26873  001686                     l12547:
 26874                           
 26875                           ; BSR set to: 1
 26876                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26877                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 26878                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 26879                           ;radio_driver_SX1276.c: 677: )
 26880  001686  0E09               	movlw	9
 26881  001688  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26882  00168A  E11F               	bnz	l12555
 26883                           
 26884                           ; BSR set to: 1
 26885  00168C  0E80               	movlw	128
 26886  00168E  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26887  001690  0E1A               	movlw	26
 26888  001692  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26889  001694  0E70               	movlw	112
 26890  001696  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26891  001698  0E18               	movlw	24
 26892  00169A  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26893  00169C  E316               	bnc	l12555
 26894                           
 26895                           ; BSR set to: 1
 26896  00169E  0E41               	movlw	65
 26897  0016A0  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26898  0016A2  0EDD               	movlw	221
 26899  0016A4  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26900  0016A6  0E4A               	movlw	74
 26901  0016A8  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26902  0016AA  0E1F               	movlw	31
 26903  0016AC  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26904  0016AE  E20D               	bc	l12555
 26905                           
 26906                           ; BSR set to: 1
 26907                           ;radio_driver_SX1276.c: 678: {
 26908                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 26909  0016B0  0E02               	movlw	2
 26910  0016B2  0100               	movlb	0	; () banked
 26911  0016B4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26912  0016B6  0E36               	movlw	54
 26913  0016B8  EC4B  F03A         	call	_RADIO_RegisterWrite
 26914                           
 26915                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 26916  0016BC  0E7F               	movlw	127
 26917  0016BE  0100               	movlb	0	; () banked
 26918  0016C0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26919  0016C2  0E3A               	movlw	58
 26920  0016C4  EC4B  F03A         	call	_RADIO_RegisterWrite
 26921                           
 26922                           ;radio_driver_SX1276.c: 681: }
 26923  0016C8  D006               	goto	l12557
 26924  0016CA                     l12555:
 26925                           
 26926                           ; BSR set to: 1
 26927                           ;radio_driver_SX1276.c: 682: else
 26928                           ;radio_driver_SX1276.c: 683: {
 26929                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 26930  0016CA  0E03               	movlw	3
 26931  0016CC  0100               	movlb	0	; () banked
 26932  0016CE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26933  0016D0  0E36               	movlw	54
 26934  0016D2  EC4B  F03A         	call	_RADIO_RegisterWrite
 26935  0016D6                     l12557:
 26936                           
 26937                           ;radio_driver_SX1276.c: 685: }
 26938                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 26939  0016D6  0E09               	movlw	9
 26940  0016D8  0101               	movlb	1	; () banked
 26941  0016DA  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26942  0016DC  E10F               	bnz	l12563
 26943                           
 26944                           ; BSR set to: 1
 26945  0016DE  059E               	decf	(_RadioConfiguration+32)& (0+255),w,b
 26946  0016E0  E10D               	bnz	l12563
 26947                           
 26948                           ; BSR set to: 1
 26949                           ;radio_driver_SX1276.c: 689: {
 26950                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 26951  0016E2  0E65               	movlw	101
 26952  0016E4  0100               	movlb	0	; () banked
 26953  0016E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26954  0016E8  0E3A               	movlw	58
 26955  0016EA  EC4B  F03A         	call	_RADIO_RegisterWrite
 26956                           
 26957                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 26958  0016EE  0E19               	movlw	25
 26959  0016F0  0100               	movlb	0	; () banked
 26960  0016F2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26961  0016F4  0E3B               	movlw	59
 26962  0016F6  EC4B  F03A         	call	_RADIO_RegisterWrite
 26963                           
 26964                           ;radio_driver_SX1276.c: 692: }
 26965  0016FA  D00C               	goto	l466
 26966  0016FC                     l12563:
 26967                           
 26968                           ; BSR set to: 1
 26969                           ;radio_driver_SX1276.c: 693: else
 26970                           ;radio_driver_SX1276.c: 694: {
 26971                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 26972  0016FC  0E65               	movlw	101
 26973  0016FE  0100               	movlb	0	; () banked
 26974  001700  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26975  001702  0E3A               	movlw	58
 26976  001704  EC4B  F03A         	call	_RADIO_RegisterWrite
 26977                           
 26978                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 26979  001708  0E1D               	movlw	29
 26980  00170A  0100               	movlb	0	; () banked
 26981  00170C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26982  00170E  0E3B               	movlw	59
 26983  001710  EC4B  F03A         	call	_RADIO_RegisterWrite
 26984  001714                     l466:
 26985                           
 26986                           ;radio_driver_SX1276.c: 697: }
 26987                           ;radio_driver_SX1276.c: 698: }
 26988                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 26989  001714  0100               	movlb	0	; () banked
 26990  001716  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 26991  001718  0E12               	movlw	18
 26992  00171A  EF4B  F03A         	goto	_RADIO_RegisterWrite
 26993  00171E                     l12565:
 26994                           
 26995                           ; BSR set to: 1
 26996                           ;radio_driver_SX1276.c: 703: else
 26997                           ;radio_driver_SX1276.c: 704: {
 26998                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 26999  00171E  C182  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 27000  001722  C183  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 27001  001726  C184  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 27002  00172A  C185  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 27003  00172E  EC62  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 27004                           
 27005                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 27006  001732  C186  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 27007  001736  C187  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 27008  00173A  C188  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 27009  00173E  C189  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 27010  001742  ECC5  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 27011                           
 27012                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 27013  001746  0101               	movlb	1	; () banked
 27014  001748  518B               	movf	(_RadioConfiguration+13)& (0+255),w,b
 27015  00174A  0100               	movlb	0	; () banked
 27016  00174C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27017  00174E  0E25               	movlw	37
 27018  001750  EC4B  F03A         	call	_RADIO_RegisterWrite
 27019                           
 27020                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 27021  001754  C18A  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 27022  001758  0E26               	movlw	38
 27023  00175A  EC4B  F03A         	call	_RADIO_RegisterWrite
 27024                           
 27025                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 27026  00175E  0E0A               	movlw	10
 27027  001760  EC63  F039         	call	_RADIO_RegisterRead
 27028  001764  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27029                           
 27030                           ; BSR set to: 0
 27031                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 27032  001766  0E9F               	movlw	159
 27033  001768  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27034                           
 27035                           ; BSR set to: 0
 27036                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 27037  00176A  0101               	movlb	1	; () banked
 27038  00176C  39B1               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 27039  00176E  46E8               	rlncf	wreg,f,c
 27040  001770  0BE0               	andlw	224
 27041  001772  0100               	movlb	0	; () banked
 27042  001774  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27043                           
 27044                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 27045  001776  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27046  00177A  0E0A               	movlw	10
 27047  00177C  EC4B  F03A         	call	_RADIO_RegisterWrite
 27048                           
 27049                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 27050  001780  0EC8               	movlw	200
 27051  001782  0100               	movlb	0	; () banked
 27052  001784  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27053                           
 27054                           ; BSR set to: 0
 27055                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 27056  001786  0101               	movlb	1	; () banked
 27057  001788  519A               	movf	(_RadioConfiguration+28)& (0+255),w,b
 27058  00178A  E002               	bz	l12577
 27059                           
 27060                           ; BSR set to: 1
 27061                           ;radio_driver_SX1276.c: 722: {
 27062                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 27063  00178C  0100               	movlb	0	; () banked
 27064  00178E  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 27065  001790                     l12577:
 27066                           
 27067                           ;radio_driver_SX1276.c: 724: }
 27068                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 27069  001790  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27070  001794  0E30               	movlw	48
 27071  001796  EC4B  F03A         	call	_RADIO_RegisterWrite
 27072                           
 27073                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 27074  00179A  0100               	movlb	0	; () banked
 27075  00179C  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 27076  00179E  D00E               	goto	l12585
 27077  0017A0                     l12581:
 27078                           
 27079                           ; BSR set to: 0
 27080                           ;radio_driver_SX1276.c: 729: {
 27081                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27082  0017A0  0E8D               	movlw	low (_RadioConfiguration+15)
 27083  0017A2  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27084  0017A4  6ED9               	movwf	fsr2l,c
 27085  0017A6  6ADA               	clrf	fsr2h,c
 27086  0017A8  0E01               	movlw	high (_RadioConfiguration+15)
 27087  0017AA  22DA               	addwfc	fsr2h,f,c
 27088  0017AC  50DF               	movf	indf2,w,c
 27089  0017AE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27090  0017B0  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27091  0017B2  0F28               	addlw	40
 27092  0017B4  EC4B  F03A         	call	_RADIO_RegisterWrite
 27093  0017B8  0100               	movlb	0	; () banked
 27094  0017BA  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27095  0017BC                     l12585:
 27096                           
 27097                           ; BSR set to: 0
 27098  0017BC  0101               	movlb	1	; () banked
 27099  0017BE  5195               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27100  0017C0  0100               	movlb	0	; () banked
 27101  0017C2  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27102  0017C4  E3ED               	bnc	l12581
 27103                           
 27104                           ; BSR set to: 0
 27105                           ;radio_driver_SX1276.c: 733: }
 27106                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 27107  0017C6  0101               	movlb	1	; () banked
 27108  0017C8  5195               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27109  0017CA  E008               	bz	l12591
 27110                           
 27111                           ; BSR set to: 1
 27112                           ;radio_driver_SX1276.c: 737: {
 27113                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27114  0017CC  0595               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27115  0017CE  0910               	iorlw	16
 27116  0017D0  0100               	movlb	0	; () banked
 27117  0017D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27118  0017D4  0E27               	movlw	39
 27119  0017D6  EC4B  F03A         	call	_RADIO_RegisterWrite
 27120                           
 27121                           ;radio_driver_SX1276.c: 739: }
 27122  0017DA  D005               	goto	l479
 27123  0017DC                     l12591:
 27124                           
 27125                           ; BSR set to: 1
 27126                           ;radio_driver_SX1276.c: 740: else
 27127                           ;radio_driver_SX1276.c: 741: {
 27128                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 27129  0017DC  0100               	movlb	0	; () banked
 27130  0017DE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27131  0017E0  0E27               	movlw	39
 27132  0017E2  EC4B  F03A         	call	_RADIO_RegisterWrite
 27133  0017E6                     l479:
 27134                           
 27135                           ;radio_driver_SX1276.c: 743: }
 27136                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 27137  0017E6  0100               	movlb	0	; () banked
 27138  0017E8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27139  0017EA  0E3E               	movlw	62
 27140  0017EC  EC4B  F03A         	call	_RADIO_RegisterWrite
 27141                           
 27142                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 27143  0017F0  0100               	movlb	0	; () banked
 27144  0017F2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27145  0017F4  0E3F               	movlw	63
 27146  0017F6  EF4B  F03A         	goto	_RADIO_RegisterWrite
 27147  0017FA                     __end_of_RADIO_WriteConfiguration:
 27148                           	opt stack 0
 27149                           tosu	equ	0xFFF
 27150                           tosh	equ	0xFFE
 27151                           tosl	equ	0xFFD
 27152                           pclath	equ	0xFFA
 27153                           tblptru	equ	0xFF8
 27154                           tblptrh	equ	0xFF7
 27155                           tblptrl	equ	0xFF6
 27156                           tablat	equ	0xFF5
 27157                           prodh	equ	0xFF4
 27158                           prodl	equ	0xFF3
 27159                           intcon	equ	0xFF2
 27160                           intcon2	equ	0xFF1
 27161                           intcon3	equ	0xFF0
 27162                           indf0	equ	0xFEF
 27163                           postinc0	equ	0xFEE
 27164                           fsr0h	equ	0xFEA
 27165                           fsr0l	equ	0xFE9
 27166                           wreg	equ	0xFE8
 27167                           postinc1	equ	0xFE6
 27168                           postdec1	equ	0xFE5
 27169                           plusw1	equ	0xFE3
 27170                           fsr1h	equ	0xFE2
 27171                           fsr1l	equ	0xFE1
 27172                           indf2	equ	0xFDF
 27173                           postinc2	equ	0xFDE
 27174                           postdec2	equ	0xFDD
 27175                           plusw2	equ	0xFDB
 27176                           fsr2h	equ	0xFDA
 27177                           fsr2l	equ	0xFD9
 27178                           status	equ	0xFD8
 27179                           
 27180 ;; *************** function _RADIO_WritePower *****************
 27181 ;; Defined at:
 27182 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27183 ;; Parameters:    Size  Location     Type
 27184 ;;  power           1    wreg     char 
 27185 ;; Auto vars:     Size  Location     Type
 27186 ;;  power           1   10[BANK0 ] char 
 27187 ;;  paDac           1    9[BANK0 ] unsigned char 
 27188 ;;  ocp             1    8[BANK0 ] unsigned char 
 27189 ;; Return value:  Size  Location     Type
 27190 ;;                  1    wreg      void 
 27191 ;; Registers used:
 27192 ;;		wreg, status,2, status,0, cstack
 27193 ;; Tracked objects:
 27194 ;;		On entry : F/1
 27195 ;;		On exit  : 0/0
 27196 ;;		Unchanged: 0/0
 27197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27199 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27201 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27202 ;;Total ram usage:        3 bytes
 27203 ;; Hardware stack levels used:    1
 27204 ;; Hardware stack levels required when called:   10
 27205 ;; This function calls:
 27206 ;;		_RADIO_RegisterRead
 27207 ;;		_RADIO_RegisterWrite
 27208 ;; This function is called by:
 27209 ;;		_RADIO_WriteConfiguration
 27210 ;; This function uses a non-reentrant model
 27211 ;;
 27212                           
 27213                           	psect	text142
 27214  005266                     __ptext142:
 27215                           	opt stack 0
 27216  005266                     _RADIO_WritePower:
 27217                           	opt stack 16
 27218                           
 27219                           ;incstack = 0
 27220                           ;RADIO_WritePower@power stored from wreg
 27221  005266  0100               	movlb	0	; () banked
 27222  005268  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27223                           
 27224                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27225                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27226                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27227  00526A  0101               	movlb	1	; () banked
 27228  00526C  519B               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27229  00526E  E127               	bnz	l12279
 27230                           
 27231                           ; BSR set to: 1
 27232                           ;radio_driver_SX1276.c: 348: {
 27233                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27234  005270  0100               	movlb	0	; () banked
 27235  005272  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27236  005274  0A80               	xorlw	128
 27237  005276  0F83               	addlw	131
 27238  005278  E202               	bc	l12259
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;radio_driver_SX1276.c: 351: {
 27242                           ;radio_driver_SX1276.c: 352: power = -3;
 27243  00527A  0EFD               	movlw	253
 27244  00527C  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27245  00527E                     l12259:
 27246                           
 27247                           ; BSR set to: 0
 27248                           ;radio_driver_SX1276.c: 353: }
 27249                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27250  00527E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27251  005280  0A80               	xorlw	128
 27252  005282  0F70               	addlw	-144
 27253  005284  E302               	bnc	l12263
 27254                           
 27255                           ; BSR set to: 0
 27256                           ;radio_driver_SX1276.c: 355: {
 27257                           ;radio_driver_SX1276.c: 356: power = 15;
 27258  005286  0E0F               	movlw	15
 27259  005288  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27260  00528A                     l12263:
 27261                           
 27262                           ; BSR set to: 0
 27263                           ;radio_driver_SX1276.c: 357: }
 27264                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27265  00528A  0E4D               	movlw	77
 27266  00528C  EC63  F039         	call	_RADIO_RegisterRead
 27267  005290  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27268                           
 27269                           ; BSR set to: 0
 27270                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27271  005292  0EF8               	movlw	248
 27272  005294  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27273                           
 27274                           ; BSR set to: 0
 27275                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27276  005296  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27277                           
 27278                           ; BSR set to: 0
 27279                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27280  005298  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27281  00529C  0E4D               	movlw	77
 27282  00529E  EC4B  F03A         	call	_RADIO_RegisterWrite
 27283                           
 27284                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27285  0052A2  0100               	movlb	0	; () banked
 27286  0052A4  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27287  0052A6  D005               	goto	l12277
 27288                           
 27289                           ; BSR set to: 0
 27290                           ;radio_driver_SX1276.c: 365: {
 27291                           ;radio_driver_SX1276.c: 369: power += 3;
 27292  0052A8  0E03               	movlw	3
 27293  0052AA  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27294                           
 27295                           ; BSR set to: 0
 27296                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27297  0052AC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27298  0052AE  0920               	iorlw	32
 27299  0052B0  D002               	goto	L19
 27300  0052B2                     l12277:
 27301                           
 27302                           ; BSR set to: 0
 27303                           ;radio_driver_SX1276.c: 372: else
 27304                           ;radio_driver_SX1276.c: 373: {
 27305                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27306  0052B2  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27307  0052B4  0970               	iorlw	112
 27308  0052B6                     L19:
 27309  0052B6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27310  0052B8  0E09               	movlw	9
 27311  0052BA  EF4B  F03A         	goto	_RADIO_RegisterWrite
 27312  0052BE                     l12279:
 27313                           
 27314                           ; BSR set to: 1
 27315                           ;radio_driver_SX1276.c: 380: else
 27316                           ;radio_driver_SX1276.c: 381: {
 27317                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27318  0052BE  0100               	movlb	0	; () banked
 27319  0052C0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27320  0052C2  0A80               	xorlw	128
 27321  0052C4  0F7E               	addlw	-130
 27322  0052C6  E202               	bc	l12283
 27323                           
 27324                           ; BSR set to: 0
 27325                           ;radio_driver_SX1276.c: 386: {
 27326                           ;radio_driver_SX1276.c: 387: power = 2;
 27327  0052C8  0E02               	movlw	2
 27328  0052CA  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27329  0052CC                     l12283:
 27330                           
 27331                           ; BSR set to: 0
 27332                           ;radio_driver_SX1276.c: 388: }
 27333                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27334  0052CC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27335  0052CE  0A80               	xorlw	128
 27336  0052D0  0F6C               	addlw	-148
 27337  0052D2  E302               	bnc	l12287
 27338                           
 27339                           ; BSR set to: 0
 27340                           ;radio_driver_SX1276.c: 392: {
 27341                           ;radio_driver_SX1276.c: 393: power = 20;
 27342  0052D4  0E14               	movlw	20
 27343  0052D6  D005               	goto	L18
 27344  0052D8                     l12287:
 27345                           
 27346                           ; BSR set to: 0
 27347                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27348  0052D8  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27349  0052DA  0A80               	xorlw	128
 27350  0052DC  0F6E               	addlw	-146
 27351  0052DE  E302               	bnc	l12291
 27352                           
 27353                           ; BSR set to: 0
 27354                           ;radio_driver_SX1276.c: 396: {
 27355                           ;radio_driver_SX1276.c: 397: power = 17;
 27356  0052E0  0E11               	movlw	17
 27357  0052E2                     L18:
 27358  0052E2  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27359  0052E4                     l12291:
 27360                           
 27361                           ; BSR set to: 0
 27362                           ;radio_driver_SX1276.c: 398: }
 27363                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27364  0052E4  0E0B               	movlw	11
 27365  0052E6  EC63  F039         	call	_RADIO_RegisterRead
 27366  0052EA  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27370  0052EC  0E4D               	movlw	77
 27371  0052EE  EC63  F039         	call	_RADIO_RegisterRead
 27372  0052F2  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27376  0052F4  0EF8               	movlw	248
 27377  0052F6  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27378                           
 27379                           ; BSR set to: 0
 27380                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27381  0052F8  0E14               	movlw	20
 27382  0052FA  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27383  0052FC  E106               	bnz	l12305
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;radio_driver_SX1276.c: 404: {
 27387                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27388  0052FE  0E07               	movlw	7
 27389  005300  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;radio_driver_SX1276.c: 406: power = 15;
 27393  005302  0E0F               	movlw	15
 27394  005304  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27395                           
 27396                           ; BSR set to: 0
 27397                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27398  005306  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27399                           
 27400                           ;radio_driver_SX1276.c: 408: }
 27401  005308  D004               	goto	l12311
 27402  00530A                     l12305:
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;radio_driver_SX1276.c: 409: else
 27406                           ;radio_driver_SX1276.c: 410: {
 27407                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27408  00530A  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27409                           
 27410                           ; BSR set to: 0
 27411                           ;radio_driver_SX1276.c: 412: power -= 2;
 27412  00530C  0EFE               	movlw	254
 27413  00530E  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27414                           
 27415                           ; BSR set to: 0
 27416                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27417  005310  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27418  005312                     l12311:
 27419                           
 27420                           ; BSR set to: 0
 27421                           ;radio_driver_SX1276.c: 414: }
 27422                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27423  005312  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27424  005316  0E4D               	movlw	77
 27425  005318  EC4B  F03A         	call	_RADIO_RegisterWrite
 27426                           
 27427                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27428  00531C  0100               	movlb	0	; () banked
 27429  00531E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27430  005320  0980               	iorlw	128
 27431  005322  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27432  005324  0E09               	movlw	9
 27433  005326  EC4B  F03A         	call	_RADIO_RegisterWrite
 27434                           
 27435                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27436  00532A  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27437  00532E  0E0B               	movlw	11
 27438  005330  EF4B  F03A         	goto	_RADIO_RegisterWrite
 27439  005334                     __end_of_RADIO_WritePower:
 27440                           	opt stack 0
 27441                           tosu	equ	0xFFF
 27442                           tosh	equ	0xFFE
 27443                           tosl	equ	0xFFD
 27444                           pclath	equ	0xFFA
 27445                           tblptru	equ	0xFF8
 27446                           tblptrh	equ	0xFF7
 27447                           tblptrl	equ	0xFF6
 27448                           tablat	equ	0xFF5
 27449                           prodh	equ	0xFF4
 27450                           prodl	equ	0xFF3
 27451                           intcon	equ	0xFF2
 27452                           intcon2	equ	0xFF1
 27453                           intcon3	equ	0xFF0
 27454                           indf0	equ	0xFEF
 27455                           postinc0	equ	0xFEE
 27456                           fsr0h	equ	0xFEA
 27457                           fsr0l	equ	0xFE9
 27458                           wreg	equ	0xFE8
 27459                           postinc1	equ	0xFE6
 27460                           postdec1	equ	0xFE5
 27461                           plusw1	equ	0xFE3
 27462                           fsr1h	equ	0xFE2
 27463                           fsr1l	equ	0xFE1
 27464                           indf2	equ	0xFDF
 27465                           postinc2	equ	0xFDE
 27466                           postdec2	equ	0xFDD
 27467                           plusw2	equ	0xFDB
 27468                           fsr2h	equ	0xFDA
 27469                           fsr2l	equ	0xFD9
 27470                           status	equ	0xFD8
 27471                           
 27472 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27473 ;; Defined at:
 27474 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27475 ;; Parameters:    Size  Location     Type
 27476 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27477 ;; Auto vars:     Size  Location     Type
 27478 ;;  num             4   21[BANK0 ] unsigned long 
 27479 ;; Return value:  Size  Location     Type
 27480 ;;                  1    wreg      void 
 27481 ;; Registers used:
 27482 ;;		wreg, status,2, status,0, cstack
 27483 ;; Tracked objects:
 27484 ;;		On entry : F/1
 27485 ;;		On exit  : 0/0
 27486 ;;		Unchanged: 0/0
 27487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27491 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27492 ;;Total ram usage:        8 bytes
 27493 ;; Hardware stack levels used:    1
 27494 ;; Hardware stack levels required when called:   10
 27495 ;; This function calls:
 27496 ;;		_RADIO_RegisterWrite
 27497 ;;		___lldiv
 27498 ;; This function is called by:
 27499 ;;		_RADIO_WriteConfiguration
 27500 ;; This function uses a non-reentrant model
 27501 ;;
 27502                           
 27503                           	psect	text143
 27504  0064C4                     __ptext143:
 27505                           	opt stack 0
 27506  0064C4                     _RADIO_WriteFSKFrequencyDeviation:
 27507                           	opt stack 16
 27508                           
 27509                           ; BSR set to: 1
 27510                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27511                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27512                           
 27513                           ;incstack = 0
 27514  0064C4  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27515  0064C8  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27516  0064CC  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27517  0064D0  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27518                           
 27519                           ; BSR set to: 1
 27520                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27521  0064D4  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27522  0064D8  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27523  0064DC  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27524  0064E0  0100               	movlb	0	; () banked
 27525  0064E2  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27529  0064E4  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27530  0064E8  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27531  0064EC  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27532  0064F0  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27533  0064F4  0E09               	movlw	9
 27534  0064F6  6F68               	movwf	___lldiv@divisor& (0+255),b
 27535  0064F8  0E3D               	movlw	61
 27536  0064FA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27537  0064FC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27538  0064FE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27539  006500  EC1B  F030         	call	___lldiv	;wreg free
 27540  006504  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27541  006508  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27542  00650C  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27543  006510  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27544                           
 27545                           ; BSR set to: 0
 27546                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27547  006514  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27548  006518  0E04               	movlw	4
 27549  00651A  EC4B  F03A         	call	_RADIO_RegisterWrite
 27550                           
 27551                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27552  00651E  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27553  006522  0E05               	movlw	5
 27554  006524  EF4B  F03A         	goto	_RADIO_RegisterWrite
 27555  006528                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27556                           	opt stack 0
 27557                           tosu	equ	0xFFF
 27558                           tosh	equ	0xFFE
 27559                           tosl	equ	0xFFD
 27560                           pclath	equ	0xFFA
 27561                           tblptru	equ	0xFF8
 27562                           tblptrh	equ	0xFF7
 27563                           tblptrl	equ	0xFF6
 27564                           tablat	equ	0xFF5
 27565                           prodh	equ	0xFF4
 27566                           prodl	equ	0xFF3
 27567                           intcon	equ	0xFF2
 27568                           intcon2	equ	0xFF1
 27569                           intcon3	equ	0xFF0
 27570                           indf0	equ	0xFEF
 27571                           postinc0	equ	0xFEE
 27572                           fsr0h	equ	0xFEA
 27573                           fsr0l	equ	0xFE9
 27574                           wreg	equ	0xFE8
 27575                           postinc1	equ	0xFE6
 27576                           postdec1	equ	0xFE5
 27577                           plusw1	equ	0xFE3
 27578                           fsr1h	equ	0xFE2
 27579                           fsr1l	equ	0xFE1
 27580                           indf2	equ	0xFDF
 27581                           postinc2	equ	0xFDE
 27582                           postdec2	equ	0xFDD
 27583                           plusw2	equ	0xFDB
 27584                           fsr2h	equ	0xFDA
 27585                           fsr2l	equ	0xFD9
 27586                           status	equ	0xFD8
 27587                           
 27588 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27589 ;; Defined at:
 27590 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27591 ;; Parameters:    Size  Location     Type
 27592 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27593 ;; Auto vars:     Size  Location     Type
 27594 ;;  num             4   21[BANK0 ] unsigned long 
 27595 ;; Return value:  Size  Location     Type
 27596 ;;                  1    wreg      void 
 27597 ;; Registers used:
 27598 ;;		wreg, status,2, status,0, cstack
 27599 ;; Tracked objects:
 27600 ;;		On entry : 0/1
 27601 ;;		On exit  : 0/0
 27602 ;;		Unchanged: 0/0
 27603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27607 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27608 ;;Total ram usage:        8 bytes
 27609 ;; Hardware stack levels used:    1
 27610 ;; Hardware stack levels required when called:   10
 27611 ;; This function calls:
 27612 ;;		_RADIO_RegisterWrite
 27613 ;;		___lldiv
 27614 ;; This function is called by:
 27615 ;;		_RADIO_WriteConfiguration
 27616 ;; This function uses a non-reentrant model
 27617 ;;
 27618                           
 27619                           	psect	text144
 27620  00658A                     __ptext144:
 27621                           	opt stack 0
 27622  00658A                     _RADIO_WriteFSKBitRate:
 27623                           	opt stack 16
 27624                           
 27625                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27626                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27627                           
 27628                           ;incstack = 0
 27629  00658A  0100               	movlb	0	; () banked
 27630  00658C  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27631  00658E  0E48               	movlw	72
 27632  006590  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27633  006592  0EE8               	movlw	232
 27634  006594  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27635  006596  0E01               	movlw	1
 27636  006598  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27637                           
 27638                           ; BSR set to: 0
 27639                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27640  00659A  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27641  00659E  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27642  0065A2  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27643  0065A6  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27644  0065AA  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27645  0065AE  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27646  0065B2  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27647  0065B6  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27648  0065BA  EC1B  F030         	call	___lldiv	;wreg free
 27649  0065BE  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27650  0065C2  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27651  0065C6  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27652  0065CA  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27653                           
 27654                           ; BSR set to: 0
 27655                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27656  0065CE  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27657  0065D2  0E02               	movlw	2
 27658  0065D4  EC4B  F03A         	call	_RADIO_RegisterWrite
 27659                           
 27660                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27661  0065D8  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27662  0065DC  0E03               	movlw	3
 27663  0065DE  EC4B  F03A         	call	_RADIO_RegisterWrite
 27664                           
 27665                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27666  0065E2  0100               	movlb	0	; () banked
 27667  0065E4  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27668  0065E6  0E5D               	movlw	93
 27669  0065E8  EF4B  F03A         	goto	_RADIO_RegisterWrite
 27670  0065EC                     __end_of_RADIO_WriteFSKBitRate:
 27671                           	opt stack 0
 27672                           tosu	equ	0xFFF
 27673                           tosh	equ	0xFFE
 27674                           tosl	equ	0xFFD
 27675                           pclath	equ	0xFFA
 27676                           tblptru	equ	0xFF8
 27677                           tblptrh	equ	0xFF7
 27678                           tblptrl	equ	0xFF6
 27679                           tablat	equ	0xFF5
 27680                           prodh	equ	0xFF4
 27681                           prodl	equ	0xFF3
 27682                           intcon	equ	0xFF2
 27683                           intcon2	equ	0xFF1
 27684                           intcon3	equ	0xFF0
 27685                           indf0	equ	0xFEF
 27686                           postinc0	equ	0xFEE
 27687                           fsr0h	equ	0xFEA
 27688                           fsr0l	equ	0xFE9
 27689                           wreg	equ	0xFE8
 27690                           postinc1	equ	0xFE6
 27691                           postdec1	equ	0xFE5
 27692                           plusw1	equ	0xFE3
 27693                           fsr1h	equ	0xFE2
 27694                           fsr1l	equ	0xFE1
 27695                           indf2	equ	0xFDF
 27696                           postinc2	equ	0xFDE
 27697                           postdec2	equ	0xFDD
 27698                           plusw2	equ	0xFDB
 27699                           fsr2h	equ	0xFDA
 27700                           fsr2l	equ	0xFD9
 27701                           status	equ	0xFD8
 27702                           
 27703 ;; *************** function _PrepareJoinRequestFrame *****************
 27704 ;; Defined at:
 27705 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27706 ;; Parameters:    Size  Location     Type
 27707 ;;		None
 27708 ;; Auto vars:     Size  Location     Type
 27709 ;;  mic             4  117[BANK0 ] unsigned long 
 27710 ;;  iCtr            1  123[BANK0 ] unsigned char 
 27711 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27712 ;;  mhdr            1  121[BANK0 ] struct .
 27713 ;; Return value:  Size  Location     Type
 27714 ;;                  1    wreg      unsigned char 
 27715 ;; Registers used:
 27716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27717 ;; Tracked objects:
 27718 ;;		On entry : F/2
 27719 ;;		On exit  : F/0
 27720 ;;		Unchanged: 0/0
 27721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27723 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27724 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27725 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27726 ;;Total ram usage:        9 bytes
 27727 ;; Hardware stack levels used:    1
 27728 ;; Hardware stack levels required when called:   13
 27729 ;; This function calls:
 27730 ;;		_ComputeMic
 27731 ;;		_Random
 27732 ;;		_memcpy
 27733 ;;		_memset
 27734 ;; This function is called by:
 27735 ;;		_LORAWAN_Join
 27736 ;; This function uses a non-reentrant model
 27737 ;;
 27738                           
 27739                           	psect	text145
 27740  004632                     __ptext145:
 27741                           	opt stack 0
 27742  004632                     _PrepareJoinRequestFrame:
 27743                           	opt stack 16
 27744                           
 27745                           ; BSR set to: 2
 27746                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27747                           
 27748                           ;incstack = 0
 27749  004632  0100               	movlb	0	; () banked
 27750  004634  6BDA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27751                           
 27752                           ; BSR set to: 0
 27753                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27754                           ;lorawan.c: 1810: uint32_t mic;
 27755                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27756  004636  0EE0               	movlw	low _macBuffer
 27757  004638  6F64               	movwf	memset@p1& (0+255),b
 27758  00463A  0E04               	movlw	high _macBuffer
 27759  00463C  6F65               	movwf	(memset@p1+1)& (0+255),b
 27760  00463E  6B67               	clrf	(memset@c+1)& (0+255),b
 27761  004640  6B66               	clrf	memset@c& (0+255),b
 27762  004642  0E01               	movlw	1
 27763  004644  6F69               	movwf	(memset@n+1)& (0+255),b
 27764  004646  0E0F               	movlw	15
 27765  004648  6F68               	movwf	memset@n& (0+255),b
 27766  00464A  ECEC  F038         	call	_memset	;wreg free
 27767                           
 27768                           ; BSR set to: 0
 27769                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27770  00464E  0E1F               	movlw	-225
 27771  004650  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27772                           
 27773                           ; BSR set to: 0
 27774                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27775  004652  0EFC               	movlw	-4
 27776  004654  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27777                           
 27778                           ; BSR set to: 0
 27779                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27780  004656  0EE3               	movlw	-29
 27781  004658  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27782                           
 27783                           ; BSR set to: 0
 27784                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27785  00465A  EE24  F0E0         	lfsr	2,_macBuffer
 27786  00465E  C0D9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27787                           
 27788                           ; BSR set to: 0
 27789  004662  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27790                           
 27791                           ; BSR set to: 0
 27792                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27793  004664  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27794  004666                     l15659:
 27795                           
 27796                           ; BSR set to: 0
 27797                           ;lorawan.c: 1821: {
 27798                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27799  004666  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27800  004668  0859               	sublw	low (_loRa+89)
 27801  00466A  6ED9               	movwf	fsr2l,c
 27802  00466C  0E00               	movlw	0
 27803  00466E  A0D8               	btfss	status,0,c
 27804  004670  2AE8               	incf	wreg,f,c
 27805  004672  0802               	sublw	high (_loRa+89)
 27806  004674  6EDA               	movwf	fsr2h,c
 27807  004676  0EE0               	movlw	low _macBuffer
 27808  004678  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27809  00467A  0E04               	movlw	high _macBuffer
 27810  00467C  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27811  00467E  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27812  004680  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27813  004682  0E00               	movlw	0
 27814  004684  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27815  004686  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27816  004688  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27817  00468A  6EE9               	movwf	fsr0l,c
 27818  00468C  0E00               	movlw	0
 27819  00468E  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27820  004690  6EEA               	movwf	fsr0h,c
 27821  004692  CFDF FFEF          	movff	indf2,indf0
 27822                           
 27823                           ; BSR set to: 0
 27824  004696  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27825                           
 27826                           ; BSR set to: 0
 27827  004698  0E07               	movlw	7
 27828  00469A  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27829  00469C  D7E4               	goto	l15659
 27830                           
 27831                           ; BSR set to: 0
 27832                           ;lorawan.c: 1823: }
 27833                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27834  00469E  0E08               	movlw	8
 27835  0046A0  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27839  0046A2  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27840  0046A4                     l15671:
 27841                           
 27842                           ; BSR set to: 0
 27843                           ;lorawan.c: 1828: {
 27844                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27845  0046A4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27846  0046A6  0861               	sublw	low (_loRa+97)
 27847  0046A8  6ED9               	movwf	fsr2l,c
 27848  0046AA  0E00               	movlw	0
 27849  0046AC  A0D8               	btfss	status,0,c
 27850  0046AE  2AE8               	incf	wreg,f,c
 27851  0046B0  0802               	sublw	high (_loRa+97)
 27852  0046B2  6EDA               	movwf	fsr2h,c
 27853  0046B4  0EE0               	movlw	low _macBuffer
 27854  0046B6  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27855  0046B8  0E04               	movlw	high _macBuffer
 27856  0046BA  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27857  0046BC  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27858  0046BE  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27859  0046C0  0E00               	movlw	0
 27860  0046C2  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27861  0046C4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27862  0046C6  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27863  0046C8  6EE9               	movwf	fsr0l,c
 27864  0046CA  0E00               	movlw	0
 27865  0046CC  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27866  0046CE  6EEA               	movwf	fsr0h,c
 27867  0046D0  CFDF FFEF          	movff	indf2,indf0
 27868                           
 27869                           ; BSR set to: 0
 27870  0046D4  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27871                           
 27872                           ; BSR set to: 0
 27873  0046D6  0E07               	movlw	7
 27874  0046D8  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27875  0046DA  D7E4               	goto	l15671
 27876                           
 27877                           ; BSR set to: 0
 27878                           ;lorawan.c: 1830: }
 27879                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27880  0046DC  0E08               	movlw	8
 27881  0046DE  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27882                           
 27883                           ; BSR set to: 0
 27884                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27885  0046E0  6978               	setf	(Random@max+1)& (0+255),b
 27886  0046E2  6977               	setf	Random@max& (0+255),b
 27887  0046E4  ECBC  F039         	call	_Random	;wreg free
 27888  0046E8  C077  F2D2         	movff	?_Random,_loRa+210
 27889  0046EC  C078  F2D3         	movff	?_Random+1,_loRa+211
 27890                           
 27891                           ; BSR set to: 0
 27892                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27893  0046F0  0EE0               	movlw	low _macBuffer
 27894  0046F2  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27895  0046F4  6F64               	movwf	memcpy@d1& (0+255),b
 27896  0046F6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27897  0046F8  0E04               	movlw	high _macBuffer
 27898  0046FA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27899  0046FC  0ED2               	movlw	low (_loRa+210)
 27900  0046FE  6F66               	movwf	memcpy@s1& (0+255),b
 27901  004700  0E02               	movlw	high (_loRa+210)
 27902  004702  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 27903  004704  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27904  004706  0E02               	movlw	2
 27905  004708  6F68               	movwf	memcpy@n& (0+255),b
 27906  00470A  EC0F  F034         	call	_memcpy	;wreg free
 27907                           
 27908                           ; BSR set to: 0
 27909                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 27910  00470E  0E02               	movlw	2
 27911  004710  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27912                           
 27913                           ; BSR set to: 0
 27914                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 27915  004712  0E42               	movlw	low (_loRa+66)
 27916  004714  6FCA               	movwf	ComputeMic@key& (0+255),b
 27917  004716  0E02               	movlw	high (_loRa+66)
 27918  004718  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 27919  00471A  0EE0               	movlw	low _macBuffer
 27920  00471C  6FCC               	movwf	ComputeMic@buffer& (0+255),b
 27921  00471E  0E04               	movlw	high _macBuffer
 27922  004720  6FCD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 27923  004722  C0DA  F0CE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 27924  004726  EC64  F034         	call	_ComputeMic	;wreg free
 27925  00472A  C0CA  F0D5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 27926  00472E  C0CB  F0D6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 27927  004732  C0CC  F0D7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 27928  004736  C0CD  F0D8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 27929                           
 27930                           ; BSR set to: 0
 27931                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 27932  00473A  0EE0               	movlw	low _macBuffer
 27933  00473C  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27934  00473E  6F64               	movwf	memcpy@d1& (0+255),b
 27935  004740  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27936  004742  0E04               	movlw	high _macBuffer
 27937  004744  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27938  004746  0ED5               	movlw	low PrepareJoinRequestFrame@mic
 27939  004748  6F66               	movwf	memcpy@s1& (0+255),b
 27940  00474A  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 27941  00474C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27942  00474E  0E04               	movlw	4
 27943  004750  6F68               	movwf	memcpy@n& (0+255),b
 27944  004752  EC0F  F034         	call	_memcpy	;wreg free
 27945                           
 27946                           ; BSR set to: 0
 27947                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 27948  004756  0E04               	movlw	4
 27949  004758  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27950                           
 27951                           ; BSR set to: 0
 27952                           ;lorawan.c: 1842: return bufferIndex;
 27953  00475A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27954                           
 27955                           ; BSR set to: 0
 27956  00475C  0012               	return		;funcret
 27957  00475E                     __end_of_PrepareJoinRequestFrame:
 27958                           	opt stack 0
 27959                           tosu	equ	0xFFF
 27960                           tosh	equ	0xFFE
 27961                           tosl	equ	0xFFD
 27962                           pclath	equ	0xFFA
 27963                           tblptru	equ	0xFF8
 27964                           tblptrh	equ	0xFF7
 27965                           tblptrl	equ	0xFF6
 27966                           tablat	equ	0xFF5
 27967                           prodh	equ	0xFF4
 27968                           prodl	equ	0xFF3
 27969                           intcon	equ	0xFF2
 27970                           intcon2	equ	0xFF1
 27971                           intcon3	equ	0xFF0
 27972                           indf0	equ	0xFEF
 27973                           postinc0	equ	0xFEE
 27974                           fsr0h	equ	0xFEA
 27975                           fsr0l	equ	0xFE9
 27976                           wreg	equ	0xFE8
 27977                           postinc1	equ	0xFE6
 27978                           postdec1	equ	0xFE5
 27979                           plusw1	equ	0xFE3
 27980                           fsr1h	equ	0xFE2
 27981                           fsr1l	equ	0xFE1
 27982                           indf2	equ	0xFDF
 27983                           postinc2	equ	0xFDE
 27984                           postdec2	equ	0xFDD
 27985                           plusw2	equ	0xFDB
 27986                           fsr2h	equ	0xFDA
 27987                           fsr2l	equ	0xFD9
 27988                           status	equ	0xFD8
 27989                           
 27990 ;; *************** function _Random *****************
 27991 ;; Defined at:
 27992 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27993 ;; Parameters:    Size  Location     Type
 27994 ;;  max             2   23[BANK0 ] unsigned int 
 27995 ;; Auto vars:     Size  Location     Type
 27996 ;;		None
 27997 ;; Return value:  Size  Location     Type
 27998 ;;                  2   23[BANK0 ] unsigned int 
 27999 ;; Registers used:
 28000 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28001 ;; Tracked objects:
 28002 ;;		On entry : F/0
 28003 ;;		On exit  : F/0
 28004 ;;		Unchanged: 0/0
 28005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28010 ;;Total ram usage:        2 bytes
 28011 ;; Hardware stack levels used:    1
 28012 ;; Hardware stack levels required when called:    9
 28013 ;; This function calls:
 28014 ;;		___lwmod
 28015 ;;		_rand
 28016 ;; This function is called by:
 28017 ;;		_SearchAvailableChannel
 28018 ;;		_PrepareJoinRequestFrame
 28019 ;; This function uses a non-reentrant model
 28020 ;;
 28021                           
 28022                           	psect	text146
 28023  007378                     __ptext146:
 28024                           	opt stack 0
 28025  007378                     _Random:
 28026                           	opt stack 17
 28027                           
 28028                           ; BSR set to: 0
 28029                           ;lorawan.c: 1118: return (rand () % max);
 28030                           
 28031                           ; BSR set to: 0
 28032                           ;incstack = 0
 28033  007378  ECDD  F034         	call	_rand	;wreg free
 28034  00737C  C070  F072         	movff	?_rand,___lwmod@dividend
 28035  007380  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 28036  007384  C077  F074         	movff	Random@max,___lwmod@divisor
 28037  007388  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 28038  00738C  ECB0  F036         	call	___lwmod	;wreg free
 28039  007390  C072  F077         	movff	?___lwmod,?_Random
 28040  007394  C073  F078         	movff	?___lwmod+1,?_Random+1
 28041                           
 28042                           ; BSR set to: 0
 28043  007398  0012               	return		;funcret
 28044  00739A                     __end_of_Random:
 28045                           	opt stack 0
 28046                           tosu	equ	0xFFF
 28047                           tosh	equ	0xFFE
 28048                           tosl	equ	0xFFD
 28049                           pclath	equ	0xFFA
 28050                           tblptru	equ	0xFF8
 28051                           tblptrh	equ	0xFF7
 28052                           tblptrl	equ	0xFF6
 28053                           tablat	equ	0xFF5
 28054                           prodh	equ	0xFF4
 28055                           prodl	equ	0xFF3
 28056                           intcon	equ	0xFF2
 28057                           intcon2	equ	0xFF1
 28058                           intcon3	equ	0xFF0
 28059                           indf0	equ	0xFEF
 28060                           postinc0	equ	0xFEE
 28061                           fsr0h	equ	0xFEA
 28062                           fsr0l	equ	0xFE9
 28063                           wreg	equ	0xFE8
 28064                           postinc1	equ	0xFE6
 28065                           postdec1	equ	0xFE5
 28066                           plusw1	equ	0xFE3
 28067                           fsr1h	equ	0xFE2
 28068                           fsr1l	equ	0xFE1
 28069                           indf2	equ	0xFDF
 28070                           postinc2	equ	0xFDE
 28071                           postdec2	equ	0xFDD
 28072                           plusw2	equ	0xFDB
 28073                           fsr2h	equ	0xFDA
 28074                           fsr2l	equ	0xFD9
 28075                           status	equ	0xFD8
 28076                           
 28077 ;; *************** function _rand *****************
 28078 ;; Defined at:
 28079 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 28080 ;; Parameters:    Size  Location     Type
 28081 ;;		None
 28082 ;; Auto vars:     Size  Location     Type
 28083 ;;		None
 28084 ;; Return value:  Size  Location     Type
 28085 ;;                  2   16[BANK0 ] int 
 28086 ;; Registers used:
 28087 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28088 ;; Tracked objects:
 28089 ;;		On entry : F/0
 28090 ;;		On exit  : F/0
 28091 ;;		Unchanged: 0/0
 28092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28093 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28097 ;;Total ram usage:        2 bytes
 28098 ;; Hardware stack levels used:    1
 28099 ;; Hardware stack levels required when called:    8
 28100 ;; This function calls:
 28101 ;;		___lmul
 28102 ;; This function is called by:
 28103 ;;		_Random
 28104 ;; This function uses a non-reentrant model
 28105 ;;
 28106                           
 28107                           	psect	text147
 28108  0069BA                     __ptext147:
 28109                           	opt stack 0
 28110  0069BA                     _rand:
 28111                           	opt stack 17
 28112                           
 28113                           ; BSR set to: 0
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;incstack = 0
 28117  0069BA  C052  F064         	movff	_randx,___lmul@multiplier
 28118  0069BE  C053  F065         	movff	_randx+1,___lmul@multiplier+1
 28119  0069C2  C054  F066         	movff	_randx+2,___lmul@multiplier+2
 28120  0069C6  C055  F067         	movff	_randx+3,___lmul@multiplier+3
 28121  0069CA  0E6D               	movlw	109
 28122  0069CC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 28123  0069CE  0E4E               	movlw	78
 28124  0069D0  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28125  0069D2  0EC6               	movlw	198
 28126  0069D4  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28127  0069D6  0E41               	movlw	65
 28128  0069D8  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28129  0069DA  EC9D  F02E         	call	___lmul	;wreg free
 28130  0069DE  C064  F052         	movff	?___lmul,_randx
 28131  0069E2  C065  F053         	movff	?___lmul+1,_randx+1
 28132  0069E6  C066  F054         	movff	?___lmul+2,_randx+2
 28133  0069EA  C067  F055         	movff	?___lmul+3,_randx+3
 28134                           
 28135                           ; BSR set to: 0
 28136  0069EE  0E39               	movlw	57
 28137  0069F0  2652               	addwf	_randx,f,c
 28138  0069F2  0E30               	movlw	48
 28139  0069F4  2253               	addwfc	_randx+1,f,c
 28140  0069F6  0E00               	movlw	0
 28141  0069F8  2254               	addwfc	_randx+2,f,c
 28142  0069FA  2255               	addwfc	_randx+3,f,c
 28143                           
 28144                           ; BSR set to: 0
 28145  0069FC  5054               	movf	_randx+2,w,c
 28146  0069FE  6F70               	movwf	?_rand& (0+255),b
 28147  006A00  0E7F               	movlw	127
 28148  006A02  1455               	andwf	_randx+3,w,c
 28149  006A04  6F71               	movwf	(?_rand+1)& (0+255),b
 28150                           
 28151                           ; BSR set to: 0
 28152  006A06  0012               	return		;funcret
 28153  006A08                     __end_of_rand:
 28154                           	opt stack 0
 28155                           tosu	equ	0xFFF
 28156                           tosh	equ	0xFFE
 28157                           tosl	equ	0xFFD
 28158                           pclath	equ	0xFFA
 28159                           tblptru	equ	0xFF8
 28160                           tblptrh	equ	0xFF7
 28161                           tblptrl	equ	0xFF6
 28162                           tablat	equ	0xFF5
 28163                           prodh	equ	0xFF4
 28164                           prodl	equ	0xFF3
 28165                           intcon	equ	0xFF2
 28166                           intcon2	equ	0xFF1
 28167                           intcon3	equ	0xFF0
 28168                           indf0	equ	0xFEF
 28169                           postinc0	equ	0xFEE
 28170                           fsr0h	equ	0xFEA
 28171                           fsr0l	equ	0xFE9
 28172                           wreg	equ	0xFE8
 28173                           postinc1	equ	0xFE6
 28174                           postdec1	equ	0xFE5
 28175                           plusw1	equ	0xFE3
 28176                           fsr1h	equ	0xFE2
 28177                           fsr1l	equ	0xFE1
 28178                           indf2	equ	0xFDF
 28179                           postinc2	equ	0xFDE
 28180                           postdec2	equ	0xFDD
 28181                           plusw2	equ	0xFDB
 28182                           fsr2h	equ	0xFDA
 28183                           fsr2l	equ	0xFD9
 28184                           status	equ	0xFD8
 28185                           
 28186 ;; *************** function ___lmul *****************
 28187 ;; Defined at:
 28188 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 28189 ;; Parameters:    Size  Location     Type
 28190 ;;  multiplier      4    4[BANK0 ] unsigned long 
 28191 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 28192 ;; Auto vars:     Size  Location     Type
 28193 ;;  product         4   12[BANK0 ] unsigned long 
 28194 ;; Return value:  Size  Location     Type
 28195 ;;                  4    4[BANK0 ] unsigned long 
 28196 ;; Registers used:
 28197 ;;		wreg, status,2, status,0, prodl, prodh
 28198 ;; Tracked objects:
 28199 ;;		On entry : F/0
 28200 ;;		On exit  : F/0
 28201 ;;		Unchanged: 0/0
 28202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28203 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28204 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28206 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28207 ;;Total ram usage:       12 bytes
 28208 ;; Hardware stack levels used:    1
 28209 ;; Hardware stack levels required when called:    7
 28210 ;; This function calls:
 28211 ;;		Nothing
 28212 ;; This function is called by:
 28213 ;;		_RADIO_WriteConfiguration
 28214 ;;		_ExecuteNewChannel
 28215 ;;		_ExecuteRxParamSetupReq
 28216 ;;		_UpdateCfList
 28217 ;;		_rand
 28218 ;; This function uses a non-reentrant model
 28219 ;;
 28220                           
 28221                           	psect	text148
 28222  005D3A                     __ptext148:
 28223                           	opt stack 0
 28224  005D3A                     ___lmul:
 28225                           	opt stack 17
 28226                           
 28227                           ; BSR set to: 0
 28228                           
 28229                           ; BSR set to: 0
 28230                           ;incstack = 0
 28231  005D3A  5164               	movf	___lmul@multiplier& (0+255),w,b
 28232  005D3C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28233  005D3E  CFF3 F06C          	movff	prodl,___lmul@product
 28234  005D42  CFF4 F06D          	movff	prodh,___lmul@product+1
 28235  005D46  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 28236  005D48  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 28237  005D4A  5164               	movf	___lmul@multiplier& (0+255),w,b
 28238  005D4C  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28239  005D4E  50F3               	movf	prodl,w,c
 28240  005D50  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28241  005D52  50F4               	movf	prodh,w,c
 28242  005D54  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28243  005D56  0E00               	movlw	0
 28244  005D58  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28245  005D5A  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28246  005D5C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28247  005D5E  50F3               	movf	prodl,w,c
 28248  005D60  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28249  005D62  50F4               	movf	prodh,w,c
 28250  005D64  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28251  005D66  0E00               	movlw	0
 28252  005D68  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28253  005D6A  5164               	movf	___lmul@multiplier& (0+255),w,b
 28254  005D6C  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28255  005D6E  50F3               	movf	prodl,w,c
 28256  005D70  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28257  005D72  50F4               	movf	prodh,w,c
 28258  005D74  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28259  005D76  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28260  005D78  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28261  005D7A  50F3               	movf	prodl,w,c
 28262  005D7C  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28263  005D7E  50F4               	movf	prodh,w,c
 28264  005D80  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28265  005D82  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28266  005D84  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28267  005D86  50F3               	movf	prodl,w,c
 28268  005D88  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28269  005D8A  50F4               	movf	prodh,w,c
 28270  005D8C  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28271  005D8E  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28272  005D90  0364               	mulwf	___lmul@multiplier& (0+255),b
 28273  005D92  50F3               	movf	prodl,w,c
 28274  005D94  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28275  005D96  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28276  005D98  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28277  005D9A  50F3               	movf	prodl,w,c
 28278  005D9C  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28279  005D9E  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28280  005DA0  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28281  005DA2  50F3               	movf	prodl,w,c
 28282  005DA4  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28283  005DA6  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28284  005DA8  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28285  005DAA  50F3               	movf	prodl,w,c
 28286  005DAC  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28287                           
 28288                           ; BSR set to: 0
 28289  005DAE  C06C  F064         	movff	___lmul@product,?___lmul
 28290  005DB2  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28291  005DB6  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28292  005DBA  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28293                           
 28294                           ; BSR set to: 0
 28295  005DBE  0012               	return		;funcret
 28296  005DC0                     __end_of___lmul:
 28297                           	opt stack 0
 28298                           tosu	equ	0xFFF
 28299                           tosh	equ	0xFFE
 28300                           tosl	equ	0xFFD
 28301                           pclath	equ	0xFFA
 28302                           tblptru	equ	0xFF8
 28303                           tblptrh	equ	0xFF7
 28304                           tblptrl	equ	0xFF6
 28305                           tablat	equ	0xFF5
 28306                           prodh	equ	0xFF4
 28307                           prodl	equ	0xFF3
 28308                           intcon	equ	0xFF2
 28309                           intcon2	equ	0xFF1
 28310                           intcon3	equ	0xFF0
 28311                           indf0	equ	0xFEF
 28312                           postinc0	equ	0xFEE
 28313                           fsr0h	equ	0xFEA
 28314                           fsr0l	equ	0xFE9
 28315                           wreg	equ	0xFE8
 28316                           postinc1	equ	0xFE6
 28317                           postdec1	equ	0xFE5
 28318                           plusw1	equ	0xFE3
 28319                           fsr1h	equ	0xFE2
 28320                           fsr1l	equ	0xFE1
 28321                           indf2	equ	0xFDF
 28322                           postinc2	equ	0xFDE
 28323                           postdec2	equ	0xFDD
 28324                           plusw2	equ	0xFDB
 28325                           fsr2h	equ	0xFDA
 28326                           fsr2l	equ	0xFD9
 28327                           status	equ	0xFD8
 28328                           
 28329 ;; *************** function ___lwmod *****************
 28330 ;; Defined at:
 28331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28332 ;; Parameters:    Size  Location     Type
 28333 ;;  dividend        2   18[BANK0 ] unsigned int 
 28334 ;;  divisor         2   20[BANK0 ] unsigned int 
 28335 ;; Auto vars:     Size  Location     Type
 28336 ;;  counter         1   22[BANK0 ] unsigned char 
 28337 ;; Return value:  Size  Location     Type
 28338 ;;                  2   18[BANK0 ] unsigned int 
 28339 ;; Registers used:
 28340 ;;		wreg, status,2, status,0
 28341 ;; Tracked objects:
 28342 ;;		On entry : F/0
 28343 ;;		On exit  : F/0
 28344 ;;		Unchanged: 0/0
 28345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28349 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28350 ;;Total ram usage:        5 bytes
 28351 ;; Hardware stack levels used:    1
 28352 ;; Hardware stack levels required when called:    7
 28353 ;; This function calls:
 28354 ;;		Nothing
 28355 ;; This function is called by:
 28356 ;;		_Random
 28357 ;; This function uses a non-reentrant model
 28358 ;;
 28359                           
 28360                           	psect	text149
 28361  006D60                     __ptext149:
 28362                           	opt stack 0
 28363  006D60                     ___lwmod:
 28364                           	opt stack 18
 28365                           
 28366                           ; BSR set to: 0
 28367                           
 28368                           ; BSR set to: 0
 28369                           ;incstack = 0
 28370  006D60  5174               	movf	___lwmod@divisor& (0+255),w,b
 28371  006D62  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28372  006D64  E017               	bz	l3166
 28373                           
 28374                           ; BSR set to: 0
 28375  006D66  0E01               	movlw	1
 28376  006D68  6F76               	movwf	___lwmod@counter& (0+255),b
 28377  006D6A  D004               	goto	l12409
 28378  006D6C                     l12407:
 28379                           
 28380                           ; BSR set to: 0
 28381  006D6C  90D8               	bcf	status,0,c
 28382  006D6E  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28383  006D70  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28384  006D72  2B76               	incf	___lwmod@counter& (0+255),f,b
 28385  006D74                     l12409:
 28386                           
 28387                           ; BSR set to: 0
 28388  006D74  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28389  006D76  D7FA               	goto	l12407
 28390  006D78                     l12411:
 28391                           
 28392                           ; BSR set to: 0
 28393  006D78  5174               	movf	___lwmod@divisor& (0+255),w,b
 28394  006D7A  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28395  006D7C  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28396  006D7E  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28397  006D80  E304               	bnc	l12415
 28398                           
 28399                           ; BSR set to: 0
 28400  006D82  5174               	movf	___lwmod@divisor& (0+255),w,b
 28401  006D84  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28402  006D86  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28403  006D88  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28404  006D8A                     l12415:
 28405                           
 28406                           ; BSR set to: 0
 28407  006D8A  90D8               	bcf	status,0,c
 28408  006D8C  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28409  006D8E  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28410                           
 28411                           ; BSR set to: 0
 28412  006D90  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28413  006D92  D7F2               	goto	l12411
 28414  006D94                     l3166:
 28415                           
 28416                           ; BSR set to: 0
 28417  006D94  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28418  006D98  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28419                           
 28420                           ; BSR set to: 0
 28421  006D9C  0012               	return		;funcret
 28422  006D9E                     __end_of___lwmod:
 28423                           	opt stack 0
 28424                           tosu	equ	0xFFF
 28425                           tosh	equ	0xFFE
 28426                           tosl	equ	0xFFD
 28427                           pclath	equ	0xFFA
 28428                           tblptru	equ	0xFF8
 28429                           tblptrh	equ	0xFF7
 28430                           tblptrl	equ	0xFF6
 28431                           tablat	equ	0xFF5
 28432                           prodh	equ	0xFF4
 28433                           prodl	equ	0xFF3
 28434                           intcon	equ	0xFF2
 28435                           intcon2	equ	0xFF1
 28436                           intcon3	equ	0xFF0
 28437                           indf0	equ	0xFEF
 28438                           postinc0	equ	0xFEE
 28439                           fsr0h	equ	0xFEA
 28440                           fsr0l	equ	0xFE9
 28441                           wreg	equ	0xFE8
 28442                           postinc1	equ	0xFE6
 28443                           postdec1	equ	0xFE5
 28444                           plusw1	equ	0xFE3
 28445                           fsr1h	equ	0xFE2
 28446                           fsr1l	equ	0xFE1
 28447                           indf2	equ	0xFDF
 28448                           postinc2	equ	0xFDE
 28449                           postdec2	equ	0xFDD
 28450                           plusw2	equ	0xFDB
 28451                           fsr2h	equ	0xFDA
 28452                           fsr2l	equ	0xFD9
 28453                           status	equ	0xFD8
 28454                           
 28455 ;; *************** function _ComputeMic *****************
 28456 ;; Defined at:
 28457 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28458 ;; Parameters:    Size  Location     Type
 28459 ;;  key             2  106[BANK0 ] PTR unsigned char 
 28460 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28461 ;;  buffer          2  108[BANK0 ] PTR unsigned char 
 28462 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28463 ;;  bufferLength    1  110[BANK0 ] unsigned char 
 28464 ;; Auto vars:     Size  Location     Type
 28465 ;;  mic             4  111[BANK0 ] unsigned long 
 28466 ;; Return value:  Size  Location     Type
 28467 ;;                  4  106[BANK0 ] unsigned long 
 28468 ;; Registers used:
 28469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28470 ;; Tracked objects:
 28471 ;;		On entry : F/0
 28472 ;;		On exit  : F/0
 28473 ;;		Unchanged: 0/0
 28474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28475 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28476 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28478 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28479 ;;Total ram usage:        9 bytes
 28480 ;; Hardware stack levels used:    1
 28481 ;; Hardware stack levels required when called:   12
 28482 ;; This function calls:
 28483 ;;		_AESCmac
 28484 ;;		_memcpy
 28485 ;; This function is called by:
 28486 ;;		_LORAWAN_RxDone
 28487 ;;		_PrepareJoinRequestFrame
 28488 ;; This function uses a non-reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text150
 28492  0068C8                     __ptext150:
 28493                           	opt stack 0
 28494  0068C8                     _ComputeMic:
 28495                           	opt stack 14
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;lorawan.c: 2196: uint32_t mic = 0;
 28499                           
 28500                           ; BSR set to: 0
 28501                           ;incstack = 0
 28502  0068C8  6BCF               	clrf	ComputeMic@mic& (0+255),b
 28503  0068CA  6BD0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28504  0068CC  6BD1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28505  0068CE  6BD2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28506                           
 28507                           ; BSR set to: 0
 28508                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28509  0068D0  C0CA  F0BC         	movff	ComputeMic@key,AESCmac@key
 28510  0068D4  C0CB  F0BD         	movff	ComputeMic@key+1,AESCmac@key+1
 28511  0068D8  0EB4               	movlw	low _aesBuffer
 28512  0068DA  6FBE               	movwf	AESCmac@output& (0+255),b
 28513  0068DC  0E01               	movlw	high _aesBuffer
 28514  0068DE  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 28515  0068E0  C0CC  F0C0         	movff	ComputeMic@buffer,AESCmac@input
 28516  0068E4  C0CD  F0C1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28517  0068E8  C0CE  F0C2         	movff	ComputeMic@bufferLength,AESCmac@size
 28518  0068EC  ECFD  F00B         	call	_AESCmac	;wreg free
 28519                           
 28520                           ; BSR set to: 0
 28521                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28522  0068F0  0ECF               	movlw	low ComputeMic@mic
 28523  0068F2  6F64               	movwf	memcpy@d1& (0+255),b
 28524  0068F4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28525  0068F6  0EB4               	movlw	low _aesBuffer
 28526  0068F8  6F66               	movwf	memcpy@s1& (0+255),b
 28527  0068FA  0E01               	movlw	high _aesBuffer
 28528  0068FC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28529  0068FE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28530  006900  0E04               	movlw	4
 28531  006902  6F68               	movwf	memcpy@n& (0+255),b
 28532  006904  EC0F  F034         	call	_memcpy	;wreg free
 28533                           
 28534                           ; BSR set to: 0
 28535                           ;lorawan.c: 2202: return mic;
 28536  006908  C0CF  F0CA         	movff	ComputeMic@mic,?_ComputeMic
 28537  00690C  C0D0  F0CB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28538  006910  C0D1  F0CC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28539  006914  C0D2  F0CD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28540                           
 28541                           ; BSR set to: 0
 28542  006918  0012               	return		;funcret
 28543  00691A                     __end_of_ComputeMic:
 28544                           	opt stack 0
 28545                           tosu	equ	0xFFF
 28546                           tosh	equ	0xFFE
 28547                           tosl	equ	0xFFD
 28548                           pclath	equ	0xFFA
 28549                           tblptru	equ	0xFF8
 28550                           tblptrh	equ	0xFF7
 28551                           tblptrl	equ	0xFF6
 28552                           tablat	equ	0xFF5
 28553                           prodh	equ	0xFF4
 28554                           prodl	equ	0xFF3
 28555                           intcon	equ	0xFF2
 28556                           intcon2	equ	0xFF1
 28557                           intcon3	equ	0xFF0
 28558                           indf0	equ	0xFEF
 28559                           postinc0	equ	0xFEE
 28560                           fsr0h	equ	0xFEA
 28561                           fsr0l	equ	0xFE9
 28562                           wreg	equ	0xFE8
 28563                           postinc1	equ	0xFE6
 28564                           postdec1	equ	0xFE5
 28565                           plusw1	equ	0xFE3
 28566                           fsr1h	equ	0xFE2
 28567                           fsr1l	equ	0xFE1
 28568                           indf2	equ	0xFDF
 28569                           postinc2	equ	0xFDE
 28570                           postdec2	equ	0xFDD
 28571                           plusw2	equ	0xFDB
 28572                           fsr2h	equ	0xFDA
 28573                           fsr2l	equ	0xFD9
 28574                           status	equ	0xFD8
 28575                           
 28576 ;; *************** function _AESCmac *****************
 28577 ;; Defined at:
 28578 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28579 ;; Parameters:    Size  Location     Type
 28580 ;;  key             2   92[BANK0 ] PTR unsigned char 
 28581 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28582 ;;  output          2   94[BANK0 ] PTR unsigned char 
 28583 ;;		 -> aesBuffer(16), 
 28584 ;;  input           2   96[BANK0 ] PTR unsigned char 
 28585 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28586 ;;  size            1   98[BANK0 ] unsigned char 
 28587 ;; Auto vars:     Size  Location     Type
 28588 ;;  x              16   80[BANK1 ] unsigned char [16]
 28589 ;;  y              16   64[BANK1 ] unsigned char [16]
 28590 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28591 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28592 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28593 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28594 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28595 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28596 ;;  i               1  101[BANK1 ] unsigned char 
 28597 ;;  j               1  100[BANK1 ] unsigned char 
 28598 ;;  n               1   99[BANK1 ] unsigned char 
 28599 ;;  flag            1   98[BANK1 ] unsigned char 
 28600 ;; Return value:  Size  Location     Type
 28601 ;;                  1    wreg      void 
 28602 ;; Registers used:
 28603 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28604 ;; Tracked objects:
 28605 ;;		On entry : F/0
 28606 ;;		On exit  : F/0
 28607 ;;		Unchanged: 0/0
 28608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28609 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28610 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28611 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28612 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28613 ;;Total ram usage:      116 bytes
 28614 ;; Hardware stack levels used:    1
 28615 ;; Hardware stack levels required when called:   11
 28616 ;; This function calls:
 28617 ;;		_AESEncodeLoRa
 28618 ;;		_GenerateSubkey
 28619 ;;		_memcpy
 28620 ;;		_memset
 28621 ;; This function is called by:
 28622 ;;		_LORAWAN_RxDone
 28623 ;;		_AssemblePacket
 28624 ;;		_ComputeMic
 28625 ;; This function uses a non-reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text151
 28629  0017FA                     __ptext151:
 28630                           	opt stack 0
 28631  0017FA                     _AESCmac:
 28632                           	opt stack 16
 28633                           
 28634                           ; BSR set to: 0
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;incstack = 0
 28638  0017FA  0101               	movlb	1	; () banked
 28639  0017FC  6B65               	clrf	AESCmac@i& (0+255),b
 28640  0017FE  6B64               	clrf	AESCmac@j& (0+255),b
 28641                           
 28642                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28643  001800  6B62               	clrf	AESCmac@flag& (0+255),b
 28644                           
 28645                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28646                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28647                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28648  001802  6B60               	clrf	AESCmac@ptr& (0+255),b
 28649  001804  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28650                           
 28651                           ; BSR set to: 1
 28652                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28653  001806  C0BC  F094         	movff	AESCmac@key,GenerateSubkey@key
 28654  00180A  C0BD  F095         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28655  00180E  0E10               	movlw	low AESCmac@k1
 28656  001810  0100               	movlb	0	; () banked
 28657  001812  6F96               	movwf	GenerateSubkey@k1& (0+255),b
 28658  001814  0E01               	movlw	high AESCmac@k1
 28659  001816  6F97               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28660  001818  0E00               	movlw	low AESCmac@k2
 28661  00181A  6F98               	movwf	GenerateSubkey@k2& (0+255),b
 28662  00181C  0E01               	movlw	high AESCmac@k2
 28663  00181E  6F99               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28664  001820  EC32  F024         	call	_GenerateSubkey	;wreg free
 28665                           
 28666                           ; BSR set to: 0
 28667                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28668  001824  51C2               	movf	AESCmac@size& (0+255),w,b
 28669  001826  6FC3               	movwf	??_AESCmac& (0+255),b
 28670  001828  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28671  00182A  0E0F               	movlw	15
 28672  00182C  27C3               	addwf	??_AESCmac& (0+255),f,b
 28673  00182E  0E00               	movlw	0
 28674  001830  23C4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28675  001832  0E04               	movlw	4
 28676  001834  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28677  001836                     u14155:
 28678  001836  35C4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28679  001838  33C4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28680  00183A  33C3               	rrcf	??_AESCmac& (0+255),f,b
 28681  00183C  2FC5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28682  00183E  D7FB               	goto	u14155
 28683  001840  51C3               	movf	??_AESCmac& (0+255),w,b
 28684  001842  0101               	movlb	1	; () banked
 28685  001844  6F63               	movwf	AESCmac@n& (0+255),b
 28686                           
 28687                           ; BSR set to: 1
 28688                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28689  001846  5163               	movf	AESCmac@n& (0+255),w,b
 28690  001848  E104               	bnz	l13035
 28691                           
 28692                           ; BSR set to: 1
 28693                           ;lorawan_aes_cmac.c: 53: {
 28694                           ;lorawan_aes_cmac.c: 54: n = 1;
 28695  00184A  0E01               	movlw	1
 28696  00184C  6F63               	movwf	AESCmac@n& (0+255),b
 28697                           
 28698                           ; BSR set to: 1
 28699                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28700  00184E  6B62               	clrf	AESCmac@flag& (0+255),b
 28701                           
 28702                           ;lorawan_aes_cmac.c: 56: }
 28703  001850  D00A               	goto	l1454
 28704  001852                     l13035:
 28705                           
 28706                           ; BSR set to: 1
 28707                           ;lorawan_aes_cmac.c: 57: else
 28708                           ;lorawan_aes_cmac.c: 58: {
 28709                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28710  001852  C0C2  F0C3         	movff	AESCmac@size,??_AESCmac
 28711  001856  0E0F               	movlw	15
 28712  001858  0100               	movlb	0	; () banked
 28713  00185A  17C3               	andwf	??_AESCmac& (0+255),f,b
 28714  00185C  0E01               	movlw	1
 28715  00185E  A4D8               	btfss	status,2,c
 28716  001860  0E00               	movlw	0
 28717  001862  0101               	movlb	1	; () banked
 28718  001864  6F62               	movwf	AESCmac@flag& (0+255),b
 28719  001866                     l1454:
 28720                           
 28721                           ; BSR set to: 1
 28722                           ;lorawan_aes_cmac.c: 60: }
 28723                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28724  001866  0562               	decf	AESCmac@flag& (0+255),w,b
 28725  001868  E141               	bnz	l13049
 28726                           
 28727                           ; BSR set to: 1
 28728                           ;lorawan_aes_cmac.c: 63: {
 28729                           ;lorawan_aes_cmac.c: 64: j = 0;
 28730  00186A  6B64               	clrf	AESCmac@j& (0+255),b
 28731                           
 28732                           ; BSR set to: 1
 28733                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28734  00186C  5163               	movf	AESCmac@n& (0+255),w,b
 28735  00186E  0D10               	mullw	16
 28736  001870  50F3               	movf	prodl,w,c
 28737  001872  0FF0               	addlw	240
 28738  001874  6F65               	movwf	AESCmac@i& (0+255),b
 28739  001876  D01E               	goto	l13047
 28740  001878                     l13041:
 28741                           
 28742                           ; BSR set to: 0
 28743                           ;lorawan_aes_cmac.c: 66: {
 28744                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28745  001878  0E20               	movlw	low AESCmac@mLast
 28746  00187A  0101               	movlb	1	; () banked
 28747  00187C  2564               	addwf	AESCmac@j& (0+255),w,b
 28748  00187E  6ED9               	movwf	fsr2l,c
 28749  001880  6ADA               	clrf	fsr2h,c
 28750  001882  0E01               	movlw	high AESCmac@mLast
 28751  001884  22DA               	addwfc	fsr2h,f,c
 28752  001886  0E10               	movlw	low AESCmac@k1
 28753  001888  2564               	addwf	AESCmac@j& (0+255),w,b
 28754  00188A  6EE9               	movwf	fsr0l,c
 28755  00188C  6AEA               	clrf	fsr0h,c
 28756  00188E  0E01               	movlw	high AESCmac@k1
 28757  001890  22EA               	addwfc	fsr0h,f,c
 28758  001892  50EF               	movf	indf0,w,c
 28759  001894  0100               	movlb	0	; () banked
 28760  001896  6FC3               	movwf	??_AESCmac& (0+255),b
 28761  001898  0101               	movlb	1	; () banked
 28762  00189A  5165               	movf	AESCmac@i& (0+255),w,b
 28763  00189C  0100               	movlb	0	; () banked
 28764  00189E  25C0               	addwf	AESCmac@input& (0+255),w,b
 28765  0018A0  6EE9               	movwf	fsr0l,c
 28766  0018A2  0E00               	movlw	0
 28767  0018A4  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28768  0018A6  6EEA               	movwf	fsr0h,c
 28769  0018A8  50EF               	movf	indf0,w,c
 28770  0018AA  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28771  0018AC  6EDF               	movwf	indf2,c
 28772                           
 28773                           ; BSR set to: 0
 28774                           ;lorawan_aes_cmac.c: 68: j++;
 28775  0018AE  0101               	movlb	1	; () banked
 28776  0018B0  2B64               	incf	AESCmac@j& (0+255),f,b
 28777                           
 28778                           ; BSR set to: 1
 28779  0018B2  2B65               	incf	AESCmac@i& (0+255),f,b
 28780  0018B4                     l13047:
 28781                           
 28782                           ; BSR set to: 1
 28783  0018B4  5163               	movf	AESCmac@n& (0+255),w,b
 28784  0018B6  0100               	movlb	0	; () banked
 28785  0018B8  6FC3               	movwf	??_AESCmac& (0+255),b
 28786  0018BA  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28787  0018BC  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28788  0018BE  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28789  0018C0  0EF0               	movlw	240
 28790  0018C2  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28791  0018C4  51C3               	movf	??_AESCmac& (0+255),w,b
 28792  0018C6  0B0F               	andlw	15
 28793  0018C8  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28794  0018CA  0EF0               	movlw	240
 28795  0018CC  17C3               	andwf	??_AESCmac& (0+255),f,b
 28796  0018CE  0101               	movlb	1	; () banked
 28797  0018D0  5165               	movf	AESCmac@i& (0+255),w,b
 28798  0018D2  0100               	movlb	0	; () banked
 28799  0018D4  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28800  0018D6  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 28801  0018D8  51C3               	movf	??_AESCmac& (0+255),w,b
 28802  0018DA  5DC5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28803  0018DC  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 28804  0018DE  0A80               	xorlw	128
 28805  0018E0  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28806  0018E2  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28807  0018E4  0A80               	xorlw	128
 28808  0018E6  59C7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28809  0018E8  E263               	bc	l13079
 28810  0018EA  D7C6               	goto	l13041
 28811  0018EC                     l13049:
 28812                           
 28813                           ; BSR set to: 1
 28814                           ;lorawan_aes_cmac.c: 71: else
 28815                           ;lorawan_aes_cmac.c: 72: {
 28816                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28817  0018EC  0100               	movlb	0	; () banked
 28818  0018EE  51C2               	movf	AESCmac@size& (0+255),w,b
 28819  0018F0  25C0               	addwf	AESCmac@input& (0+255),w,b
 28820  0018F2  6FC3               	movwf	??_AESCmac& (0+255),b
 28821  0018F4  0E00               	movlw	0
 28822  0018F6  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28823  0018F8  6FC4               	movwf	(??_AESCmac+1)& (0+255),b
 28824  0018FA  51C2               	movf	AESCmac@size& (0+255),w,b
 28825  0018FC  0B0F               	andlw	15
 28826  0018FE  5DC3               	subwf	??_AESCmac& (0+255),w,b
 28827  001900  0101               	movlb	1	; () banked
 28828  001902  6F60               	movwf	AESCmac@ptr& (0+255),b
 28829  001904  0100               	movlb	0	; () banked
 28830  001906  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28831  001908  A0D8               	btfss	status,0,c
 28832  00190A  05C4               	decf	(??_AESCmac+1)& (0+255),w,b
 28833  00190C  0101               	movlb	1	; () banked
 28834  00190E  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28835                           
 28836                           ; BSR set to: 1
 28837                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28838  001910  6B65               	clrf	AESCmac@i& (0+255),b
 28839  001912                     l13055:
 28840                           
 28841                           ; BSR set to: 1
 28842                           ;lorawan_aes_cmac.c: 76: {
 28843                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28844  001912  0100               	movlb	0	; () banked
 28845  001914  51C2               	movf	AESCmac@size& (0+255),w,b
 28846  001916  0B0F               	andlw	15
 28847  001918  0101               	movlb	1	; () banked
 28848  00191A  6165               	cpfslt	AESCmac@i& (0+255),b
 28849  00191C  D00F               	goto	l13059
 28850                           
 28851                           ; BSR set to: 1
 28852                           ;lorawan_aes_cmac.c: 78: {
 28853                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28854  00191E  5165               	movf	AESCmac@i& (0+255),w,b
 28855  001920  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28856  001922  6ED9               	movwf	fsr2l,c
 28857  001924  0E00               	movlw	0
 28858  001926  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28859  001928  6EDA               	movwf	fsr2h,c
 28860  00192A  0E30               	movlw	low AESCmac@padded
 28861  00192C  2565               	addwf	AESCmac@i& (0+255),w,b
 28862  00192E  6EE9               	movwf	fsr0l,c
 28863  001930  6AEA               	clrf	fsr0h,c
 28864  001932  0E01               	movlw	high AESCmac@padded
 28865  001934  22EA               	addwfc	fsr0h,f,c
 28866  001936  CFDF FFEF          	movff	indf2,indf0
 28867                           
 28868                           ;lorawan_aes_cmac.c: 80: }
 28869  00193A  D016               	goto	l13065
 28870  00193C                     l13059:
 28871                           
 28872                           ; BSR set to: 1
 28873                           ;lorawan_aes_cmac.c: 81: else
 28874                           ;lorawan_aes_cmac.c: 82: {
 28875                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28876  00193C  0100               	movlb	0	; () banked
 28877  00193E  51C2               	movf	AESCmac@size& (0+255),w,b
 28878  001940  0B0F               	andlw	15
 28879  001942  0101               	movlb	1	; () banked
 28880  001944  1965               	xorwf	AESCmac@i& (0+255),w,b
 28881  001946  E109               	bnz	l13063
 28882                           
 28883                           ; BSR set to: 1
 28884                           ;lorawan_aes_cmac.c: 84: {
 28885                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28886  001948  0E30               	movlw	low AESCmac@padded
 28887  00194A  2565               	addwf	AESCmac@i& (0+255),w,b
 28888  00194C  6ED9               	movwf	fsr2l,c
 28889  00194E  6ADA               	clrf	fsr2h,c
 28890  001950  0E01               	movlw	high AESCmac@padded
 28891  001952  22DA               	addwfc	fsr2h,f,c
 28892  001954  0E80               	movlw	128
 28893  001956  6EDF               	movwf	indf2,c
 28894                           
 28895                           ;lorawan_aes_cmac.c: 86: }
 28896  001958  D007               	goto	l13065
 28897  00195A                     l13063:
 28898                           
 28899                           ; BSR set to: 1
 28900                           ;lorawan_aes_cmac.c: 87: else
 28901                           ;lorawan_aes_cmac.c: 88: {
 28902                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 28903  00195A  0E30               	movlw	low AESCmac@padded
 28904  00195C  2565               	addwf	AESCmac@i& (0+255),w,b
 28905  00195E  6ED9               	movwf	fsr2l,c
 28906  001960  6ADA               	clrf	fsr2h,c
 28907  001962  0E01               	movlw	high AESCmac@padded
 28908  001964  22DA               	addwfc	fsr2h,f,c
 28909  001966  6ADF               	clrf	indf2,c
 28910  001968                     l13065:
 28911                           
 28912                           ; BSR set to: 1
 28913  001968  2B65               	incf	AESCmac@i& (0+255),f,b
 28914                           
 28915                           ; BSR set to: 1
 28916  00196A  0E0F               	movlw	15
 28917  00196C  6565               	cpfsgt	AESCmac@i& (0+255),b
 28918  00196E  D7D1               	goto	l13055
 28919                           
 28920                           ; BSR set to: 1
 28921                           ;lorawan_aes_cmac.c: 90: }
 28922                           ;lorawan_aes_cmac.c: 91: }
 28923                           ;lorawan_aes_cmac.c: 92: }
 28924                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 28925  001970  6B65               	clrf	AESCmac@i& (0+255),b
 28926  001972                     l13073:
 28927                           
 28928                           ; BSR set to: 1
 28929                           ;lorawan_aes_cmac.c: 96: {
 28930                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 28931  001972  0E20               	movlw	low AESCmac@mLast
 28932  001974  2565               	addwf	AESCmac@i& (0+255),w,b
 28933  001976  6ED9               	movwf	fsr2l,c
 28934  001978  6ADA               	clrf	fsr2h,c
 28935  00197A  0E01               	movlw	high AESCmac@mLast
 28936  00197C  22DA               	addwfc	fsr2h,f,c
 28937  00197E  0E00               	movlw	low AESCmac@k2
 28938  001980  2565               	addwf	AESCmac@i& (0+255),w,b
 28939  001982  6EE9               	movwf	fsr0l,c
 28940  001984  6AEA               	clrf	fsr0h,c
 28941  001986  0E01               	movlw	high AESCmac@k2
 28942  001988  22EA               	addwfc	fsr0h,f,c
 28943  00198A  50EF               	movf	indf0,w,c
 28944  00198C  0100               	movlb	0	; () banked
 28945  00198E  6FC3               	movwf	??_AESCmac& (0+255),b
 28946  001990  0E30               	movlw	low AESCmac@padded
 28947  001992  0101               	movlb	1	; () banked
 28948  001994  2565               	addwf	AESCmac@i& (0+255),w,b
 28949  001996  6EE9               	movwf	fsr0l,c
 28950  001998  6AEA               	clrf	fsr0h,c
 28951  00199A  0E01               	movlw	high AESCmac@padded
 28952  00199C  22EA               	addwfc	fsr0h,f,c
 28953  00199E  50EF               	movf	indf0,w,c
 28954  0019A0  0100               	movlb	0	; () banked
 28955  0019A2  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28956  0019A4  6EDF               	movwf	indf2,c
 28957                           
 28958                           ; BSR set to: 0
 28959  0019A6  0101               	movlb	1	; () banked
 28960  0019A8  2B65               	incf	AESCmac@i& (0+255),f,b
 28961                           
 28962                           ; BSR set to: 1
 28963  0019AA  0E0F               	movlw	15
 28964  0019AC  6565               	cpfsgt	AESCmac@i& (0+255),b
 28965  0019AE  D7E1               	goto	l13073
 28966  0019B0                     l13079:
 28967                           
 28968                           ;lorawan_aes_cmac.c: 98: }
 28969                           ;lorawan_aes_cmac.c: 99: }
 28970                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 28971  0019B0  0E50               	movlw	low AESCmac@x
 28972  0019B2  0100               	movlb	0	; () banked
 28973  0019B4  6F64               	movwf	memset@p1& (0+255),b
 28974  0019B6  0E01               	movlw	high AESCmac@x
 28975  0019B8  6F65               	movwf	(memset@p1+1)& (0+255),b
 28976  0019BA  6B67               	clrf	(memset@c+1)& (0+255),b
 28977  0019BC  6B66               	clrf	memset@c& (0+255),b
 28978  0019BE  6B69               	clrf	(memset@n+1)& (0+255),b
 28979  0019C0  0E10               	movlw	16
 28980  0019C2  6F68               	movwf	memset@n& (0+255),b
 28981  0019C4  ECEC  F038         	call	_memset	;wreg free
 28982                           
 28983                           ; BSR set to: 0
 28984                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 28985  0019C8  0101               	movlb	1	; () banked
 28986  0019CA  6B65               	clrf	AESCmac@i& (0+255),b
 28987  0019CC  D051               	goto	l13097
 28988  0019CE                     l1469:
 28989                           
 28990                           ; BSR set to: 0
 28991                           ;lorawan_aes_cmac.c: 104: {
 28992                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 28993  0019CE  0101               	movlb	1	; () banked
 28994  0019D0  6B64               	clrf	AESCmac@j& (0+255),b
 28995  0019D2                     l13087:
 28996                           
 28997                           ; BSR set to: 1
 28998                           ;lorawan_aes_cmac.c: 106: {
 28999                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 29000  0019D2  0E40               	movlw	low AESCmac@y
 29001  0019D4  2564               	addwf	AESCmac@j& (0+255),w,b
 29002  0019D6  6ED9               	movwf	fsr2l,c
 29003  0019D8  6ADA               	clrf	fsr2h,c
 29004  0019DA  0E01               	movlw	high AESCmac@y
 29005  0019DC  22DA               	addwfc	fsr2h,f,c
 29006  0019DE  5165               	movf	AESCmac@i& (0+255),w,b
 29007  0019E0  0100               	movlb	0	; () banked
 29008  0019E2  6FC3               	movwf	??_AESCmac& (0+255),b
 29009  0019E4  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 29010  0019E6  3BC3               	swapf	??_AESCmac& (0+255),f,b
 29011  0019E8  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 29012  0019EA  0EF0               	movlw	240
 29013  0019EC  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 29014  0019EE  51C3               	movf	??_AESCmac& (0+255),w,b
 29015  0019F0  0B0F               	andlw	15
 29016  0019F2  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 29017  0019F4  0EF0               	movlw	240
 29018  0019F6  17C3               	andwf	??_AESCmac& (0+255),f,b
 29019  0019F8  C0C0  F0C5         	movff	AESCmac@input,??_AESCmac+2
 29020  0019FC  C0C1  F0C6         	movff	AESCmac@input+1,??_AESCmac+3
 29021  001A00  51C3               	movf	??_AESCmac& (0+255),w,b
 29022  001A02  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29023  001A04  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29024  001A06  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29025  001A08  0101               	movlb	1	; () banked
 29026  001A0A  5164               	movf	AESCmac@j& (0+255),w,b
 29027  001A0C  0100               	movlb	0	; () banked
 29028  001A0E  25C5               	addwf	(??_AESCmac+2)& (0+255),w,b
 29029  001A10  6EE9               	movwf	fsr0l,c
 29030  001A12  0E00               	movlw	0
 29031  001A14  21C6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 29032  001A16  6EEA               	movwf	fsr0h,c
 29033  001A18  50EF               	movf	indf0,w,c
 29034  001A1A  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29035  001A1C  0E50               	movlw	low AESCmac@x
 29036  001A1E  0101               	movlb	1	; () banked
 29037  001A20  2564               	addwf	AESCmac@j& (0+255),w,b
 29038  001A22  6EE9               	movwf	fsr0l,c
 29039  001A24  6AEA               	clrf	fsr0h,c
 29040  001A26  0E01               	movlw	high AESCmac@x
 29041  001A28  22EA               	addwfc	fsr0h,f,c
 29042  001A2A  50EF               	movf	indf0,w,c
 29043  001A2C  0100               	movlb	0	; () banked
 29044  001A2E  19C7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 29045  001A30  6EDF               	movwf	indf2,c
 29046                           
 29047                           ; BSR set to: 0
 29048  001A32  0101               	movlb	1	; () banked
 29049  001A34  2B64               	incf	AESCmac@j& (0+255),f,b
 29050                           
 29051                           ; BSR set to: 1
 29052  001A36  0E0F               	movlw	15
 29053  001A38  6564               	cpfsgt	AESCmac@j& (0+255),b
 29054  001A3A  D7CB               	goto	l13087
 29055                           
 29056                           ; BSR set to: 1
 29057                           ;lorawan_aes_cmac.c: 108: }
 29058                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 29059  001A3C  0E50               	movlw	low AESCmac@x
 29060  001A3E  0100               	movlb	0	; () banked
 29061  001A40  6F64               	movwf	memcpy@d1& (0+255),b
 29062  001A42  0E01               	movlw	high AESCmac@x
 29063  001A44  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29064  001A46  0E40               	movlw	low AESCmac@y
 29065  001A48  6F66               	movwf	memcpy@s1& (0+255),b
 29066  001A4A  0E01               	movlw	high AESCmac@y
 29067  001A4C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29068  001A4E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29069  001A50  0E10               	movlw	16
 29070  001A52  6F68               	movwf	memcpy@n& (0+255),b
 29071  001A54  EC0F  F034         	call	_memcpy	;wreg free
 29072                           
 29073                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29074  001A58  0E50               	movlw	low AESCmac@x
 29075  001A5A  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29076  001A5C  0E01               	movlw	high AESCmac@x
 29077  001A5E  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29078  001A60  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29079  001A64  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29080  001A68  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 29081                           
 29082                           ; BSR set to: 0
 29083  001A6C  0101               	movlb	1	; () banked
 29084  001A6E  2B65               	incf	AESCmac@i& (0+255),f,b
 29085  001A70                     l13097:
 29086                           
 29087                           ; BSR set to: 1
 29088  001A70  0100               	movlb	0	; () banked
 29089  001A72  69C3               	setf	??_AESCmac& (0+255),b
 29090  001A74  69C4               	setf	(??_AESCmac+1)& (0+255),b
 29091  001A76  0101               	movlb	1	; () banked
 29092  001A78  5163               	movf	AESCmac@n& (0+255),w,b
 29093  001A7A  0100               	movlb	0	; () banked
 29094  001A7C  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 29095  001A7E  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 29096  001A80  51C3               	movf	??_AESCmac& (0+255),w,b
 29097  001A82  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29098  001A84  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29099  001A86  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29100  001A88  0101               	movlb	1	; () banked
 29101  001A8A  5165               	movf	AESCmac@i& (0+255),w,b
 29102  001A8C  0100               	movlb	0	; () banked
 29103  001A8E  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29104  001A90  6BC8               	clrf	(??_AESCmac+5)& (0+255),b
 29105  001A92  51C5               	movf	(??_AESCmac+2)& (0+255),w,b
 29106  001A94  5DC7               	subwf	(??_AESCmac+4)& (0+255),w,b
 29107  001A96  51C8               	movf	(??_AESCmac+5)& (0+255),w,b
 29108  001A98  0A80               	xorlw	128
 29109  001A9A  6FC9               	movwf	(??_AESCmac+6)& (0+255),b
 29110  001A9C  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 29111  001A9E  0A80               	xorlw	128
 29112  001AA0  59C9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29113  001AA2  E395               	bnc	l1469
 29114                           
 29115                           ; BSR set to: 0
 29116                           ;lorawan_aes_cmac.c: 111: }
 29117                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29118  001AA4  0101               	movlb	1	; () banked
 29119  001AA6  6B65               	clrf	AESCmac@i& (0+255),b
 29120  001AA8                     l13103:
 29121                           
 29122                           ; BSR set to: 1
 29123                           ;lorawan_aes_cmac.c: 114: {
 29124                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29125  001AA8  0E40               	movlw	low AESCmac@y
 29126  001AAA  2565               	addwf	AESCmac@i& (0+255),w,b
 29127  001AAC  6ED9               	movwf	fsr2l,c
 29128  001AAE  6ADA               	clrf	fsr2h,c
 29129  001AB0  0E01               	movlw	high AESCmac@y
 29130  001AB2  22DA               	addwfc	fsr2h,f,c
 29131  001AB4  0E20               	movlw	low AESCmac@mLast
 29132  001AB6  2565               	addwf	AESCmac@i& (0+255),w,b
 29133  001AB8  6EE9               	movwf	fsr0l,c
 29134  001ABA  6AEA               	clrf	fsr0h,c
 29135  001ABC  0E01               	movlw	high AESCmac@mLast
 29136  001ABE  22EA               	addwfc	fsr0h,f,c
 29137  001AC0  50EF               	movf	indf0,w,c
 29138  001AC2  0100               	movlb	0	; () banked
 29139  001AC4  6FC3               	movwf	??_AESCmac& (0+255),b
 29140  001AC6  0E50               	movlw	low AESCmac@x
 29141  001AC8  0101               	movlb	1	; () banked
 29142  001ACA  2565               	addwf	AESCmac@i& (0+255),w,b
 29143  001ACC  6EE9               	movwf	fsr0l,c
 29144  001ACE  6AEA               	clrf	fsr0h,c
 29145  001AD0  0E01               	movlw	high AESCmac@x
 29146  001AD2  22EA               	addwfc	fsr0h,f,c
 29147  001AD4  50EF               	movf	indf0,w,c
 29148  001AD6  0100               	movlb	0	; () banked
 29149  001AD8  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29150  001ADA  6EDF               	movwf	indf2,c
 29151                           
 29152                           ; BSR set to: 0
 29153  001ADC  0101               	movlb	1	; () banked
 29154  001ADE  2B65               	incf	AESCmac@i& (0+255),f,b
 29155                           
 29156                           ; BSR set to: 1
 29157  001AE0  0E0F               	movlw	15
 29158  001AE2  6565               	cpfsgt	AESCmac@i& (0+255),b
 29159  001AE4  D7E1               	goto	l13103
 29160                           
 29161                           ; BSR set to: 1
 29162                           ;lorawan_aes_cmac.c: 116: }
 29163                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29164  001AE6  0E40               	movlw	low AESCmac@y
 29165  001AE8  0100               	movlb	0	; () banked
 29166  001AEA  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29167  001AEC  0E01               	movlw	high AESCmac@y
 29168  001AEE  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29169  001AF0  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29170  001AF4  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29171  001AF8  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 29172                           
 29173                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29174  001AFC  C0BE  F064         	movff	AESCmac@output,memcpy@d1
 29175  001B00  C0BF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 29176  001B04  0E40               	movlw	low AESCmac@y
 29177  001B06  6F66               	movwf	memcpy@s1& (0+255),b
 29178  001B08  0E01               	movlw	high AESCmac@y
 29179  001B0A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29180  001B0C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29181  001B0E  0E10               	movlw	16
 29182  001B10  6F68               	movwf	memcpy@n& (0+255),b
 29183  001B12  EF0F  F034         	goto	_memcpy	;wreg free
 29184  001B16                     __end_of_AESCmac:
 29185                           	opt stack 0
 29186                           tosu	equ	0xFFF
 29187                           tosh	equ	0xFFE
 29188                           tosl	equ	0xFFD
 29189                           pclath	equ	0xFFA
 29190                           tblptru	equ	0xFF8
 29191                           tblptrh	equ	0xFF7
 29192                           tblptrl	equ	0xFF6
 29193                           tablat	equ	0xFF5
 29194                           prodh	equ	0xFF4
 29195                           prodl	equ	0xFF3
 29196                           intcon	equ	0xFF2
 29197                           intcon2	equ	0xFF1
 29198                           intcon3	equ	0xFF0
 29199                           indf0	equ	0xFEF
 29200                           postinc0	equ	0xFEE
 29201                           fsr0h	equ	0xFEA
 29202                           fsr0l	equ	0xFE9
 29203                           wreg	equ	0xFE8
 29204                           postinc1	equ	0xFE6
 29205                           postdec1	equ	0xFE5
 29206                           plusw1	equ	0xFE3
 29207                           fsr1h	equ	0xFE2
 29208                           fsr1l	equ	0xFE1
 29209                           indf2	equ	0xFDF
 29210                           postinc2	equ	0xFDE
 29211                           postdec2	equ	0xFDD
 29212                           plusw2	equ	0xFDB
 29213                           fsr2h	equ	0xFDA
 29214                           fsr2l	equ	0xFD9
 29215                           status	equ	0xFD8
 29216                           
 29217 ;; *************** function _GenerateSubkey *****************
 29218 ;; Defined at:
 29219 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29220 ;; Parameters:    Size  Location     Type
 29221 ;;  key             2   52[BANK0 ] PTR unsigned char 
 29222 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29223 ;;  k1              2   54[BANK0 ] PTR unsigned char 
 29224 ;;		 -> AESCmac@k1(16), 
 29225 ;;  k2              2   56[BANK0 ] PTR unsigned char 
 29226 ;;		 -> AESCmac@k2(16), 
 29227 ;; Auto vars:     Size  Location     Type
 29228 ;;  l              16   75[BANK0 ] unsigned char [16]
 29229 ;;  const_Rb       16   59[BANK0 ] unsigned char [16]
 29230 ;;  i               1   91[BANK0 ] unsigned char 
 29231 ;; Return value:  Size  Location     Type
 29232 ;;                  1    wreg      void 
 29233 ;; Registers used:
 29234 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29235 ;; Tracked objects:
 29236 ;;		On entry : F/0
 29237 ;;		On exit  : F/0
 29238 ;;		Unchanged: 0/0
 29239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29240 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29241 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29242 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29243 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29244 ;;Total ram usage:       40 bytes
 29245 ;; Hardware stack levels used:    1
 29246 ;; Hardware stack levels required when called:   10
 29247 ;; This function calls:
 29248 ;;		_AESEncodeLoRa
 29249 ;;		_FillSubKey
 29250 ;;		_memset
 29251 ;; This function is called by:
 29252 ;;		_AESCmac
 29253 ;; This function uses a non-reentrant model
 29254 ;;
 29255                           
 29256                           	psect	text152
 29257  004864                     __ptext152:
 29258                           	opt stack 0
 29259  004864                     _GenerateSubkey:
 29260                           	opt stack 16
 29261                           
 29262                           ; BSR set to: 0
 29263                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29264                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29265                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29266                           
 29267                           ; BSR set to: 0
 29268                           
 29269                           ; BSR set to: 0
 29270                           ;incstack = 0
 29271  004864  EE21  F0C8         	lfsr	2,GenerateSubkey@F7870
 29272  004868  EE00  F09B         	lfsr	0,GenerateSubkey@const_Rb
 29273  00486C  0E0F               	movlw	15
 29274  00486E                     u13591:
 29275  00486E  CFDB FFEB          	movff	plusw2,plusw0
 29276  004872  06E8               	decf	wreg,f,c
 29277  004874  E2FC               	bc	u13591
 29278                           
 29279                           ; BSR set to: 0
 29280                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29281  004876  0EAB               	movlw	low GenerateSubkey@l
 29282  004878  6F64               	movwf	memset@p1& (0+255),b
 29283  00487A  6B65               	clrf	(memset@p1+1)& (0+255),b
 29284  00487C  6B67               	clrf	(memset@c+1)& (0+255),b
 29285  00487E  6B66               	clrf	memset@c& (0+255),b
 29286  004880  6B69               	clrf	(memset@n+1)& (0+255),b
 29287  004882  0E10               	movlw	16
 29288  004884  6F68               	movwf	memset@n& (0+255),b
 29289  004886  ECEC  F038         	call	_memset	;wreg free
 29290                           
 29291                           ; BSR set to: 0
 29292                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29293  00488A  0EAB               	movlw	low GenerateSubkey@l
 29294  00488C  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29295  00488E  6B81               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29296  004890  C094  F082         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29297  004894  C095  F083         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29298  004898  EC29  F039         	call	_AESEncodeLoRa	;wreg free
 29299                           
 29300                           ; BSR set to: 0
 29301                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29302  00489C  BFAB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29303  00489E  D00C               	goto	l12677
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;lorawan_aes_cmac.c: 138: {
 29307                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29308  0048A0  0EAB               	movlw	low GenerateSubkey@l
 29309  0048A2  6F64               	movwf	FillSubKey@source& (0+255),b
 29310  0048A4  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29311  0048A6  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29312  0048AA  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29313  0048AE  0E10               	movlw	16
 29314  0048B0  6F68               	movwf	FillSubKey@size& (0+255),b
 29315  0048B2  EC9D  F035         	call	_FillSubKey	;wreg free
 29316                           
 29317                           ;lorawan_aes_cmac.c: 140: }
 29318  0048B6  D01E               	goto	l12691
 29319  0048B8                     l12677:
 29320                           
 29321                           ; BSR set to: 0
 29322                           ;lorawan_aes_cmac.c: 141: else
 29323                           ;lorawan_aes_cmac.c: 142: {
 29324                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29325  0048B8  0EAB               	movlw	low GenerateSubkey@l
 29326  0048BA  6F64               	movwf	FillSubKey@source& (0+255),b
 29327  0048BC  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29328  0048BE  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29329  0048C2  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29330  0048C6  0E10               	movlw	16
 29331  0048C8  6F68               	movwf	FillSubKey@size& (0+255),b
 29332  0048CA  EC9D  F035         	call	_FillSubKey	;wreg free
 29333                           
 29334                           ; BSR set to: 0
 29335                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29336  0048CE  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29337  0048D0                     l12685:
 29338                           
 29339                           ; BSR set to: 0
 29340                           ;lorawan_aes_cmac.c: 146: {
 29341                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29342  0048D0  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29343  0048D2  0F9B               	addlw	low GenerateSubkey@const_Rb
 29344  0048D4  6ED9               	movwf	fsr2l,c
 29345  0048D6  6ADA               	clrf	fsr2h,c
 29346  0048D8  50DF               	movf	indf2,w,c
 29347  0048DA  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29348  0048DC  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29349  0048DE  2596               	addwf	GenerateSubkey@k1& (0+255),w,b
 29350  0048E0  6ED9               	movwf	fsr2l,c
 29351  0048E2  0E00               	movlw	0
 29352  0048E4  2197               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29353  0048E6  6EDA               	movwf	fsr2h,c
 29354  0048E8  519A               	movf	??_GenerateSubkey& (0+255),w,b
 29355  0048EA  1ADF               	xorwf	indf2,f,c
 29356                           
 29357                           ; BSR set to: 0
 29358  0048EC  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29359                           
 29360                           ; BSR set to: 0
 29361  0048EE  0E0F               	movlw	15
 29362  0048F0  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29363  0048F2  D7EE               	goto	l12685
 29364  0048F4                     l12691:
 29365                           
 29366                           ; BSR set to: 0
 29367                           ;lorawan_aes_cmac.c: 148: }
 29368                           ;lorawan_aes_cmac.c: 149: }
 29369                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29370  0048F4  C096  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29371  0048F8  C097  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29372  0048FC  BEDF               	btfsc	indf2,7,c
 29373  0048FE  D00C               	goto	l12695
 29374                           
 29375                           ; BSR set to: 0
 29376                           ;lorawan_aes_cmac.c: 153: {
 29377                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29378  004900  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29379  004904  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29380  004908  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29381  00490C  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29382  004910  0E10               	movlw	16
 29383  004912  6F68               	movwf	FillSubKey@size& (0+255),b
 29384  004914  EF9D  F035         	goto	_FillSubKey	;wreg free
 29385  004918                     l12695:
 29386                           
 29387                           ; BSR set to: 0
 29388                           ;lorawan_aes_cmac.c: 156: else
 29389                           ;lorawan_aes_cmac.c: 157: {
 29390                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29391  004918  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29392  00491C  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29393  004920  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29394  004924  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29395  004928  0E10               	movlw	16
 29396  00492A  6F68               	movwf	FillSubKey@size& (0+255),b
 29397  00492C  EC9D  F035         	call	_FillSubKey	;wreg free
 29398                           
 29399                           ; BSR set to: 0
 29400                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29401  004930  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29402  004932                     l12703:
 29403                           
 29404                           ; BSR set to: 0
 29405                           ;lorawan_aes_cmac.c: 161: {
 29406                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29407  004932  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29408  004934  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29409  004936  6ED9               	movwf	fsr2l,c
 29410  004938  0E00               	movlw	0
 29411  00493A  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29412  00493C  6EDA               	movwf	fsr2h,c
 29413  00493E  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29414  004940  0F9B               	addlw	low GenerateSubkey@const_Rb
 29415  004942  6EE9               	movwf	fsr0l,c
 29416  004944  6AEA               	clrf	fsr0h,c
 29417  004946  50EF               	movf	indf0,w,c
 29418  004948  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29419  00494A  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29420  00494C  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29421  00494E  6EE9               	movwf	fsr0l,c
 29422  004950  0E00               	movlw	0
 29423  004952  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29424  004954  6EEA               	movwf	fsr0h,c
 29425  004956  50EF               	movf	indf0,w,c
 29426  004958  199A               	xorwf	??_GenerateSubkey& (0+255),w,b
 29427  00495A  6EDF               	movwf	indf2,c
 29428                           
 29429                           ; BSR set to: 0
 29430  00495C  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29431                           
 29432                           ; BSR set to: 0
 29433  00495E  0E0F               	movlw	15
 29434  004960  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29435  004962  D7E7               	goto	l12703
 29436  004964  0C0F               	retlw	15
 29437  004966                     __end_of_GenerateSubkey:
 29438                           	opt stack 0
 29439                           tosu	equ	0xFFF
 29440                           tosh	equ	0xFFE
 29441                           tosl	equ	0xFFD
 29442                           pclath	equ	0xFFA
 29443                           tblptru	equ	0xFF8
 29444                           tblptrh	equ	0xFF7
 29445                           tblptrl	equ	0xFF6
 29446                           tablat	equ	0xFF5
 29447                           prodh	equ	0xFF4
 29448                           prodl	equ	0xFF3
 29449                           intcon	equ	0xFF2
 29450                           intcon2	equ	0xFF1
 29451                           intcon3	equ	0xFF0
 29452                           indf0	equ	0xFEF
 29453                           postinc0	equ	0xFEE
 29454                           plusw0	equ	0xFEB
 29455                           fsr0h	equ	0xFEA
 29456                           fsr0l	equ	0xFE9
 29457                           wreg	equ	0xFE8
 29458                           postinc1	equ	0xFE6
 29459                           postdec1	equ	0xFE5
 29460                           plusw1	equ	0xFE3
 29461                           fsr1h	equ	0xFE2
 29462                           fsr1l	equ	0xFE1
 29463                           indf2	equ	0xFDF
 29464                           postinc2	equ	0xFDE
 29465                           postdec2	equ	0xFDD
 29466                           plusw2	equ	0xFDB
 29467                           fsr2h	equ	0xFDA
 29468                           fsr2l	equ	0xFD9
 29469                           status	equ	0xFD8
 29470                           
 29471 ;; *************** function _FillSubKey *****************
 29472 ;; Defined at:
 29473 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29474 ;; Parameters:    Size  Location     Type
 29475 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29476 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29477 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29478 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29479 ;;  size            1    8[BANK0 ] unsigned char 
 29480 ;; Auto vars:     Size  Location     Type
 29481 ;;  i               1   11[BANK0 ] unsigned char 
 29482 ;;  carry           1   10[BANK0 ] unsigned char 
 29483 ;; Return value:  Size  Location     Type
 29484 ;;                  1    wreg      void 
 29485 ;; Registers used:
 29486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29487 ;; Tracked objects:
 29488 ;;		On entry : F/0
 29489 ;;		On exit  : F/0
 29490 ;;		Unchanged: 0/0
 29491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29492 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29495 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29496 ;;Total ram usage:        8 bytes
 29497 ;; Hardware stack levels used:    1
 29498 ;; Hardware stack levels required when called:    7
 29499 ;; This function calls:
 29500 ;;		Nothing
 29501 ;; This function is called by:
 29502 ;;		_GenerateSubkey
 29503 ;; This function uses a non-reentrant model
 29504 ;;
 29505                           
 29506                           	psect	text153
 29507  006B3A                     __ptext153:
 29508                           	opt stack 0
 29509  006B3A                     _FillSubKey:
 29510                           	opt stack 18
 29511                           
 29512                           ; BSR set to: 0
 29513                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29514                           
 29515                           ; BSR set to: 0
 29516                           ;incstack = 0
 29517  006B3A  6B6B               	clrf	FillSubKey@i& (0+255),b
 29518                           
 29519                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29520  006B3C  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29521                           
 29522                           ;lorawan_aes_cmac.c: 172: i=size;
 29523  006B3E  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29524                           
 29525                           ;lorawan_aes_cmac.c: 174: while(i--)
 29526  006B42  D01C               	goto	l12393
 29527  006B44                     l12389:
 29528                           
 29529                           ; BSR set to: 0
 29530                           ;lorawan_aes_cmac.c: 175: {
 29531                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29532  006B44  516B               	movf	FillSubKey@i& (0+255),w,b
 29533  006B46  2566               	addwf	FillSubKey@key& (0+255),w,b
 29534  006B48  6ED9               	movwf	fsr2l,c
 29535  006B4A  0E00               	movlw	0
 29536  006B4C  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29537  006B4E  6EDA               	movwf	fsr2h,c
 29538  006B50  516B               	movf	FillSubKey@i& (0+255),w,b
 29539  006B52  2564               	addwf	FillSubKey@source& (0+255),w,b
 29540  006B54  6EE9               	movwf	fsr0l,c
 29541  006B56  0E00               	movlw	0
 29542  006B58  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29543  006B5A  6EEA               	movwf	fsr0h,c
 29544  006B5C  50EF               	movf	indf0,w,c
 29545  006B5E  6F69               	movwf	??_FillSubKey& (0+255),b
 29546  006B60  90D8               	bcf	status,0,c
 29547  006B62  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29548  006B64  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29549  006B66  6EDF               	movwf	indf2,c
 29550                           
 29551                           ; BSR set to: 0
 29552                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29553  006B68  516B               	movf	FillSubKey@i& (0+255),w,b
 29554  006B6A  2564               	addwf	FillSubKey@source& (0+255),w,b
 29555  006B6C  6ED9               	movwf	fsr2l,c
 29556  006B6E  0E00               	movlw	0
 29557  006B70  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29558  006B72  6EDA               	movwf	fsr2h,c
 29559  006B74  0E01               	movlw	1
 29560  006B76  AEDF               	btfss	indf2,7,c
 29561  006B78  0E00               	movlw	0
 29562  006B7A  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29563  006B7C                     l12393:
 29564                           
 29565                           ; BSR set to: 0
 29566  006B7C  076B               	decf	FillSubKey@i& (0+255),f,b
 29567  006B7E  296B               	incf	FillSubKey@i& (0+255),w,b
 29568  006B80  E1E1               	bnz	l12389
 29569                           
 29570                           ; BSR set to: 0
 29571  006B82  0012               	return		;funcret
 29572  006B84                     __end_of_FillSubKey:
 29573                           	opt stack 0
 29574                           tosu	equ	0xFFF
 29575                           tosh	equ	0xFFE
 29576                           tosl	equ	0xFFD
 29577                           pclath	equ	0xFFA
 29578                           tblptru	equ	0xFF8
 29579                           tblptrh	equ	0xFF7
 29580                           tblptrl	equ	0xFF6
 29581                           tablat	equ	0xFF5
 29582                           prodh	equ	0xFF4
 29583                           prodl	equ	0xFF3
 29584                           intcon	equ	0xFF2
 29585                           intcon2	equ	0xFF1
 29586                           intcon3	equ	0xFF0
 29587                           indf0	equ	0xFEF
 29588                           postinc0	equ	0xFEE
 29589                           plusw0	equ	0xFEB
 29590                           fsr0h	equ	0xFEA
 29591                           fsr0l	equ	0xFE9
 29592                           wreg	equ	0xFE8
 29593                           postinc1	equ	0xFE6
 29594                           postdec1	equ	0xFE5
 29595                           plusw1	equ	0xFE3
 29596                           fsr1h	equ	0xFE2
 29597                           fsr1l	equ	0xFE1
 29598                           indf2	equ	0xFDF
 29599                           postinc2	equ	0xFDE
 29600                           postdec2	equ	0xFDD
 29601                           plusw2	equ	0xFDB
 29602                           fsr2h	equ	0xFDA
 29603                           fsr2l	equ	0xFD9
 29604                           status	equ	0xFD8
 29605                           
 29606 ;; *************** function _AESEncodeLoRa *****************
 29607 ;; Defined at:
 29608 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29609 ;; Parameters:    Size  Location     Type
 29610 ;;  block           2   32[BANK0 ] PTR unsigned char 
 29611 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29612 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29613 ;;  key             2   34[BANK0 ] PTR unsigned char 
 29614 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29615 ;; Auto vars:     Size  Location     Type
 29616 ;;  useKey         16   36[BANK0 ] unsigned char [16]
 29617 ;; Return value:  Size  Location     Type
 29618 ;;                  1    wreg      void 
 29619 ;; Registers used:
 29620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29621 ;; Tracked objects:
 29622 ;;		On entry : F/0
 29623 ;;		On exit  : F/0
 29624 ;;		Unchanged: 0/0
 29625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29627 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29629 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29630 ;;Total ram usage:       20 bytes
 29631 ;; Hardware stack levels used:    1
 29632 ;; Hardware stack levels required when called:    9
 29633 ;; This function calls:
 29634 ;;		_AESEncode
 29635 ;;		_memcpy
 29636 ;; This function is called by:
 29637 ;;		_AESCmac
 29638 ;;		_GenerateSubkey
 29639 ;;		_LORAWAN_RxDone
 29640 ;;		_ComputeSessionKeys
 29641 ;;		_EncryptFRMPayload
 29642 ;; This function uses a non-reentrant model
 29643 ;;
 29644                           
 29645                           	psect	text154
 29646  007252                     __ptext154:
 29647                           	opt stack 0
 29648  007252                     _AESEncodeLoRa:
 29649                           	opt stack 17
 29650                           
 29651                           ; BSR set to: 0
 29652                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29653                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29654                           
 29655                           ; BSR set to: 0
 29656                           ;incstack = 0
 29657  007252  0E84               	movlw	low AESEncodeLoRa@useKey
 29658  007254  6F64               	movwf	memcpy@d1& (0+255),b
 29659  007256  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29660  007258  C082  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29661  00725C  C083  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29662  007260  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29663  007262  0E10               	movlw	16
 29664  007264  6F68               	movwf	memcpy@n& (0+255),b
 29665  007266  EC0F  F034         	call	_memcpy	;wreg free
 29666                           
 29667                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29668  00726A  C080  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29669  00726E  C081  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29670  007272  0E84               	movlw	low AESEncodeLoRa@useKey
 29671  007274  6F6C               	movwf	AESEncode@key& (0+255),b
 29672  007276  EFF5  F011         	goto	_AESEncode	;wreg free
 29673  00727A                     __end_of_AESEncodeLoRa:
 29674                           	opt stack 0
 29675                           tosu	equ	0xFFF
 29676                           tosh	equ	0xFFE
 29677                           tosl	equ	0xFFD
 29678                           pclath	equ	0xFFA
 29679                           tblptru	equ	0xFF8
 29680                           tblptrh	equ	0xFF7
 29681                           tblptrl	equ	0xFF6
 29682                           tablat	equ	0xFF5
 29683                           prodh	equ	0xFF4
 29684                           prodl	equ	0xFF3
 29685                           intcon	equ	0xFF2
 29686                           intcon2	equ	0xFF1
 29687                           intcon3	equ	0xFF0
 29688                           indf0	equ	0xFEF
 29689                           postinc0	equ	0xFEE
 29690                           plusw0	equ	0xFEB
 29691                           fsr0h	equ	0xFEA
 29692                           fsr0l	equ	0xFE9
 29693                           wreg	equ	0xFE8
 29694                           postinc1	equ	0xFE6
 29695                           postdec1	equ	0xFE5
 29696                           plusw1	equ	0xFE3
 29697                           fsr1h	equ	0xFE2
 29698                           fsr1l	equ	0xFE1
 29699                           indf2	equ	0xFDF
 29700                           postinc2	equ	0xFDE
 29701                           postdec2	equ	0xFDD
 29702                           plusw2	equ	0xFDB
 29703                           fsr2h	equ	0xFDA
 29704                           fsr2l	equ	0xFD9
 29705                           status	equ	0xFD8
 29706                           
 29707 ;; *************** function _AESEncode *****************
 29708 ;; Defined at:
 29709 ;;		line 217 in file "mcc_generated_files/LoRaWAN/AES.c"
 29710 ;; Parameters:    Size  Location     Type
 29711 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29712 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29713 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29714 ;;  key             1   12[BANK0 ] PTR unsigned char 
 29715 ;;		 -> AESEncodeLoRa@useKey(16), 
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;  aux3            1   30[BANK0 ] unsigned char 
 29718 ;;  aux1            1   29[BANK0 ] unsigned char 
 29719 ;;  aux2            1   28[BANK0 ] unsigned char 
 29720 ;;  aux             1   27[BANK0 ] unsigned char 
 29721 ;;  i               1   31[BANK0 ] unsigned char 
 29722 ;;  temp            1    0        unsigned char 
 29723 ;; Return value:  Size  Location     Type
 29724 ;;                  1    wreg      void 
 29725 ;; Registers used:
 29726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29727 ;; Tracked objects:
 29728 ;;		On entry : F/0
 29729 ;;		On exit  : F/0
 29730 ;;		Unchanged: 0/0
 29731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29732 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29733 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29734 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29735 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29736 ;;Total ram usage:       22 bytes
 29737 ;; Hardware stack levels used:    1
 29738 ;; Hardware stack levels required when called:    8
 29739 ;; This function calls:
 29740 ;;		_EncKeySchedule
 29741 ;;		_EncodeShiftRow
 29742 ;; This function is called by:
 29743 ;;		_AESEncodeLoRa
 29744 ;; This function uses a non-reentrant model
 29745 ;;
 29746                           
 29747                           	psect	text155
 29748  0023EA                     __ptext155:
 29749                           	opt stack 0
 29750  0023EA                     _AESEncode:
 29751                           	opt stack 17
 29752                           
 29753                           ; BSR set to: 0
 29754                           ;AES.c: 219: unsigned char i;
 29755                           ;AES.c: 220: unsigned char temp;
 29756                           ;AES.c: 223: _roundCounter = 10;
 29757                           
 29758                           ; BSR set to: 0
 29759                           ;incstack = 0
 29760  0023EA  0E0A               	movlw	10
 29761  0023EC  6E44               	movwf	__roundCounter,c
 29762                           
 29763                           ;AES.c: 225: _rcon = 0x01;
 29764  0023EE  0E01               	movlw	1
 29765  0023F0  6FEE               	movwf	__rcon& (0+255),b
 29766                           
 29767                           ; BSR set to: 0
 29768                           ;AES.c: 228: for(i=0;i<16;i++)
 29769  0023F2  6B7F               	clrf	AESEncode@i& (0+255),b
 29770  0023F4                     l12007:
 29771                           
 29772                           ; BSR set to: 0
 29773                           ;AES.c: 229: {
 29774                           ;AES.c: 230: block[i] ^= key[i];
 29775  0023F4  516C               	movf	AESEncode@key& (0+255),w,b
 29776  0023F6  257F               	addwf	AESEncode@i& (0+255),w,b
 29777  0023F8  6ED9               	movwf	fsr2l,c
 29778  0023FA  6ADA               	clrf	fsr2h,c
 29779  0023FC  50DF               	movf	indf2,w,c
 29780  0023FE  6F6D               	movwf	??_AESEncode& (0+255),b
 29781  002400  517F               	movf	AESEncode@i& (0+255),w,b
 29782  002402  256A               	addwf	AESEncode@block& (0+255),w,b
 29783  002404  6ED9               	movwf	fsr2l,c
 29784  002406  0E00               	movlw	0
 29785  002408  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29786  00240A  6EDA               	movwf	fsr2h,c
 29787  00240C  516D               	movf	??_AESEncode& (0+255),w,b
 29788  00240E  1ADF               	xorwf	indf2,f,c
 29789                           
 29790                           ; BSR set to: 0
 29791  002410  2B7F               	incf	AESEncode@i& (0+255),f,b
 29792                           
 29793                           ; BSR set to: 0
 29794  002412  0E0F               	movlw	15
 29795  002414  657F               	cpfsgt	AESEncode@i& (0+255),b
 29796  002416  D7EE               	goto	l12007
 29797  002418                     l2522:
 29798                           
 29799                           ; BSR set to: 0
 29800                           ;AES.c: 234: {
 29801                           ;AES.c: 237: for(i=0;i<16;i++)
 29802  002418  6B7F               	clrf	AESEncode@i& (0+255),b
 29803  00241A                     l12017:
 29804                           
 29805                           ; BSR set to: 0
 29806                           ;AES.c: 238: {
 29807                           ;AES.c: 239: block[i]=STable[block[i]];
 29808  00241A  517F               	movf	AESEncode@i& (0+255),w,b
 29809  00241C  256A               	addwf	AESEncode@block& (0+255),w,b
 29810  00241E  6ED9               	movwf	fsr2l,c
 29811  002420  0E00               	movlw	0
 29812  002422  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29813  002424  6EDA               	movwf	fsr2h,c
 29814  002426  50DF               	movf	indf2,w,c
 29815  002428  6F6D               	movwf	??_AESEncode& (0+255),b
 29816  00242A  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29817  00242C  0E6D               	movlw	low _STable
 29818  00242E  256D               	addwf	??_AESEncode& (0+255),w,b
 29819  002430  6EF6               	movwf	tblptrl,c
 29820  002432  0EFE               	movlw	high _STable
 29821  002434  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29822  002436  6EF7               	movwf	tblptrh,c
 29823  002438                     	if	1	;There are 3 active tblptr bytes
 29824  002438  6AF8               	clrf	tblptru,c
 29825  00243A  0E00               	movlw	low (__mediumconst shr (0+16))
 29826  00243C  22F8               	addwfc	tblptru,f,c
 29827  00243E                     	endif
 29828  00243E  517F               	movf	AESEncode@i& (0+255),w,b
 29829  002440  256A               	addwf	AESEncode@block& (0+255),w,b
 29830  002442  6ED9               	movwf	fsr2l,c
 29831  002444  0E00               	movlw	0
 29832  002446  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29833  002448  6EDA               	movwf	fsr2h,c
 29834  00244A  0008               	tblrd		*
 29835  00244C  CFF5 FFDF          	movff	tablat,indf2
 29836                           
 29837                           ; BSR set to: 0
 29838  002450  2B7F               	incf	AESEncode@i& (0+255),f,b
 29839                           
 29840                           ; BSR set to: 0
 29841  002452  0E0F               	movlw	15
 29842  002454  657F               	cpfsgt	AESEncode@i& (0+255),b
 29843  002456  D7E1               	goto	l12017
 29844                           
 29845                           ; BSR set to: 0
 29846                           ;AES.c: 240: }
 29847                           ;AES.c: 243: EncodeShiftRow(block);
 29848  002458  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29849  00245C  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29850  002460  EC8F  F01E         	call	_EncodeShiftRow	;wreg free
 29851                           
 29852                           ; BSR set to: 0
 29853                           ;AES.c: 246: if(_roundCounter != 1)
 29854  002464  0444               	decf	__roundCounter,w,c
 29855  002466  E101 D111          	bz	l12065
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;AES.c: 247: {
 29859                           ;AES.c: 248: unsigned char aux,aux1,aux2,aux3;
 29860                           ;AES.c: 250: for(i=0;i<16;i+=4)
 29861  00246A  6B7F               	clrf	AESEncode@i& (0+255),b
 29862  00246C                     l12033:
 29863                           
 29864                           ; BSR set to: 0
 29865                           ;AES.c: 251: {
 29866                           ;AES.c: 252: aux1= block[i+0] ^ block[i+1];
 29867  00246C  517F               	movf	AESEncode@i& (0+255),w,b
 29868  00246E  256A               	addwf	AESEncode@block& (0+255),w,b
 29869  002470  6F6D               	movwf	??_AESEncode& (0+255),b
 29870  002472  0E00               	movlw	0
 29871  002474  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29872  002476  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29873  002478  296D               	incf	??_AESEncode& (0+255),w,b
 29874  00247A  6ED9               	movwf	fsr2l,c
 29875  00247C  0E00               	movlw	0
 29876  00247E  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29877  002480  6EDA               	movwf	fsr2h,c
 29878  002482  50DF               	movf	indf2,w,c
 29879  002484  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29880  002486  517F               	movf	AESEncode@i& (0+255),w,b
 29881  002488  256A               	addwf	AESEncode@block& (0+255),w,b
 29882  00248A  6ED9               	movwf	fsr2l,c
 29883  00248C  0E00               	movlw	0
 29884  00248E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29885  002490  6EDA               	movwf	fsr2h,c
 29886  002492  50DF               	movf	indf2,w,c
 29887  002494  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29888  002496  6F7D               	movwf	AESEncode@aux1& (0+255),b
 29889                           
 29890                           ;AES.c: 253: aux3= block[i+2]^block[i+3];
 29891  002498  517F               	movf	AESEncode@i& (0+255),w,b
 29892  00249A  256A               	addwf	AESEncode@block& (0+255),w,b
 29893  00249C  6F6D               	movwf	??_AESEncode& (0+255),b
 29894  00249E  0E00               	movlw	0
 29895  0024A0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29896  0024A2  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29897  0024A4  0E03               	movlw	3
 29898  0024A6  256D               	addwf	??_AESEncode& (0+255),w,b
 29899  0024A8  6ED9               	movwf	fsr2l,c
 29900  0024AA  0E00               	movlw	0
 29901  0024AC  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29902  0024AE  6EDA               	movwf	fsr2h,c
 29903  0024B0  50DF               	movf	indf2,w,c
 29904  0024B2  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29905  0024B4  517F               	movf	AESEncode@i& (0+255),w,b
 29906  0024B6  256A               	addwf	AESEncode@block& (0+255),w,b
 29907  0024B8  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29908  0024BA  0E00               	movlw	0
 29909  0024BC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29910  0024BE  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29911  0024C0  0E02               	movlw	2
 29912  0024C2  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29913  0024C4  6ED9               	movwf	fsr2l,c
 29914  0024C6  0E00               	movlw	0
 29915  0024C8  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29916  0024CA  6EDA               	movwf	fsr2h,c
 29917  0024CC  50DF               	movf	indf2,w,c
 29918  0024CE  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29919  0024D0  6F7E               	movwf	AESEncode@aux3& (0+255),b
 29920                           
 29921                           ; BSR set to: 0
 29922                           ;AES.c: 254: aux = aux1 ^ aux3;
 29923  0024D2  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 29924  0024D4  6F7B               	movwf	AESEncode@aux& (0+255),b
 29925                           
 29926                           ; BSR set to: 0
 29927                           ;AES.c: 255: aux2= block[i+2]^block[i+1];
 29928  0024D6  517F               	movf	AESEncode@i& (0+255),w,b
 29929  0024D8  256A               	addwf	AESEncode@block& (0+255),w,b
 29930  0024DA  6F6D               	movwf	??_AESEncode& (0+255),b
 29931  0024DC  0E00               	movlw	0
 29932  0024DE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29933  0024E0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29934  0024E2  296D               	incf	??_AESEncode& (0+255),w,b
 29935  0024E4  6ED9               	movwf	fsr2l,c
 29936  0024E6  0E00               	movlw	0
 29937  0024E8  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29938  0024EA  6EDA               	movwf	fsr2h,c
 29939  0024EC  50DF               	movf	indf2,w,c
 29940  0024EE  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29941  0024F0  517F               	movf	AESEncode@i& (0+255),w,b
 29942  0024F2  256A               	addwf	AESEncode@block& (0+255),w,b
 29943  0024F4  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29944  0024F6  0E00               	movlw	0
 29945  0024F8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29946  0024FA  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29947  0024FC  0E02               	movlw	2
 29948  0024FE  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29949  002500  6ED9               	movwf	fsr2l,c
 29950  002502  0E00               	movlw	0
 29951  002504  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29952  002506  6EDA               	movwf	fsr2h,c
 29953  002508  50DF               	movf	indf2,w,c
 29954  00250A  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29955  00250C  6F7C               	movwf	AESEncode@aux2& (0+255),b
 29956                           
 29957                           ;AES.c: 257: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 29958  00250E  0E7F               	movlw	127
 29959  002510  657D               	cpfsgt	AESEncode@aux1& (0+255),b
 29960  002512  D00C               	goto	l12041
 29961                           
 29962                           ; BSR set to: 0
 29963  002514  0E1B               	movlw	27
 29964  002516  C07D  F06D         	movff	AESEncode@aux1,??_AESEncode
 29965  00251A  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29966  00251C  90D8               	bcf	status,0,c
 29967  00251E  376D               	rlcf	??_AESEncode& (0+255),f,b
 29968  002520  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29969  002522  196D               	xorwf	??_AESEncode& (0+255),w,b
 29970  002524  6F75               	movwf	_AESEncode$4143& (0+255),b
 29971  002526  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29972  002528  6F76               	movwf	(_AESEncode$4143+1)& (0+255),b
 29973  00252A  D005               	goto	l12043
 29974  00252C                     l12041:
 29975                           
 29976                           ; BSR set to: 0
 29977  00252C  90D8               	bcf	status,0,c
 29978  00252E  357D               	rlcf	AESEncode@aux1& (0+255),w,b
 29979  002530  6F75               	movwf	_AESEncode$4143& (0+255),b
 29980  002532  6B76               	clrf	(_AESEncode$4143+1)& (0+255),b
 29981  002534  3776               	rlcf	(_AESEncode$4143+1)& (0+255),f,b
 29982  002536                     l12043:
 29983                           
 29984                           ; BSR set to: 0
 29985  002536  C075  F07D         	movff	_AESEncode$4143,AESEncode@aux1
 29986                           
 29987                           ;AES.c: 258: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 29988  00253A  0E7F               	movlw	127
 29989  00253C  657C               	cpfsgt	AESEncode@aux2& (0+255),b
 29990  00253E  D00C               	goto	l12047
 29991                           
 29992                           ; BSR set to: 0
 29993  002540  0E1B               	movlw	27
 29994  002542  C07C  F06D         	movff	AESEncode@aux2,??_AESEncode
 29995  002546  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29996  002548  90D8               	bcf	status,0,c
 29997  00254A  376D               	rlcf	??_AESEncode& (0+255),f,b
 29998  00254C  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29999  00254E  196D               	xorwf	??_AESEncode& (0+255),w,b
 30000  002550  6F77               	movwf	_AESEncode$4144& (0+255),b
 30001  002552  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30002  002554  6F78               	movwf	(_AESEncode$4144+1)& (0+255),b
 30003  002556  D005               	goto	l12049
 30004  002558                     l12047:
 30005                           
 30006                           ; BSR set to: 0
 30007  002558  90D8               	bcf	status,0,c
 30008  00255A  357C               	rlcf	AESEncode@aux2& (0+255),w,b
 30009  00255C  6F77               	movwf	_AESEncode$4144& (0+255),b
 30010  00255E  6B78               	clrf	(_AESEncode$4144+1)& (0+255),b
 30011  002560  3778               	rlcf	(_AESEncode$4144+1)& (0+255),f,b
 30012  002562                     l12049:
 30013                           
 30014                           ; BSR set to: 0
 30015  002562  C077  F07C         	movff	_AESEncode$4144,AESEncode@aux2
 30016                           
 30017                           ;AES.c: 259: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 30018  002566  0E7F               	movlw	127
 30019  002568  657E               	cpfsgt	AESEncode@aux3& (0+255),b
 30020  00256A  D00C               	goto	l12053
 30021                           
 30022                           ; BSR set to: 0
 30023  00256C  0E1B               	movlw	27
 30024  00256E  C07E  F06D         	movff	AESEncode@aux3,??_AESEncode
 30025  002572  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30026  002574  90D8               	bcf	status,0,c
 30027  002576  376D               	rlcf	??_AESEncode& (0+255),f,b
 30028  002578  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30029  00257A  196D               	xorwf	??_AESEncode& (0+255),w,b
 30030  00257C  6F79               	movwf	_AESEncode$4145& (0+255),b
 30031  00257E  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30032  002580  6F7A               	movwf	(_AESEncode$4145+1)& (0+255),b
 30033  002582  D005               	goto	l12055
 30034  002584                     l12053:
 30035                           
 30036                           ; BSR set to: 0
 30037  002584  90D8               	bcf	status,0,c
 30038  002586  357E               	rlcf	AESEncode@aux3& (0+255),w,b
 30039  002588  6F79               	movwf	_AESEncode$4145& (0+255),b
 30040  00258A  6B7A               	clrf	(_AESEncode$4145+1)& (0+255),b
 30041  00258C  377A               	rlcf	(_AESEncode$4145+1)& (0+255),f,b
 30042  00258E                     l12055:
 30043                           
 30044                           ; BSR set to: 0
 30045  00258E  C079  F07E         	movff	_AESEncode$4145,AESEncode@aux3
 30046                           
 30047                           ; BSR set to: 0
 30048                           ;AES.c: 261: block[i+0]= aux^aux1^block[i+0];
 30049  002592  517F               	movf	AESEncode@i& (0+255),w,b
 30050  002594  256A               	addwf	AESEncode@block& (0+255),w,b
 30051  002596  6ED9               	movwf	fsr2l,c
 30052  002598  0E00               	movlw	0
 30053  00259A  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30054  00259C  6EDA               	movwf	fsr2h,c
 30055  00259E  517F               	movf	AESEncode@i& (0+255),w,b
 30056  0025A0  256A               	addwf	AESEncode@block& (0+255),w,b
 30057  0025A2  6EE9               	movwf	fsr0l,c
 30058  0025A4  0E00               	movlw	0
 30059  0025A6  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30060  0025A8  6EEA               	movwf	fsr0h,c
 30061  0025AA  50EF               	movf	indf0,w,c
 30062  0025AC  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30063  0025AE  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30064  0025B0  6EDF               	movwf	indf2,c
 30065                           
 30066                           ; BSR set to: 0
 30067                           ;AES.c: 262: block[i+1]= aux^aux2^block[i+1];
 30068  0025B2  517F               	movf	AESEncode@i& (0+255),w,b
 30069  0025B4  256A               	addwf	AESEncode@block& (0+255),w,b
 30070  0025B6  6F6D               	movwf	??_AESEncode& (0+255),b
 30071  0025B8  0E00               	movlw	0
 30072  0025BA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30073  0025BC  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30074  0025BE  296D               	incf	??_AESEncode& (0+255),w,b
 30075  0025C0  6ED9               	movwf	fsr2l,c
 30076  0025C2  0E00               	movlw	0
 30077  0025C4  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30078  0025C6  6EDA               	movwf	fsr2h,c
 30079  0025C8  517F               	movf	AESEncode@i& (0+255),w,b
 30080  0025CA  256A               	addwf	AESEncode@block& (0+255),w,b
 30081  0025CC  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30082  0025CE  0E00               	movlw	0
 30083  0025D0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30084  0025D2  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30085  0025D4  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 30086  0025D6  6EE9               	movwf	fsr0l,c
 30087  0025D8  0E00               	movlw	0
 30088  0025DA  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30089  0025DC  6EEA               	movwf	fsr0h,c
 30090  0025DE  50EF               	movf	indf0,w,c
 30091  0025E0  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30092  0025E2  197C               	xorwf	AESEncode@aux2& (0+255),w,b
 30093  0025E4  6EDF               	movwf	indf2,c
 30094                           
 30095                           ; BSR set to: 0
 30096                           ;AES.c: 263: block[i+2]= aux^aux3^block[i+2];
 30097  0025E6  517F               	movf	AESEncode@i& (0+255),w,b
 30098  0025E8  256A               	addwf	AESEncode@block& (0+255),w,b
 30099  0025EA  6F6D               	movwf	??_AESEncode& (0+255),b
 30100  0025EC  0E00               	movlw	0
 30101  0025EE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30102  0025F0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30103  0025F2  0E02               	movlw	2
 30104  0025F4  256D               	addwf	??_AESEncode& (0+255),w,b
 30105  0025F6  6ED9               	movwf	fsr2l,c
 30106  0025F8  0E00               	movlw	0
 30107  0025FA  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30108  0025FC  6EDA               	movwf	fsr2h,c
 30109  0025FE  517F               	movf	AESEncode@i& (0+255),w,b
 30110  002600  256A               	addwf	AESEncode@block& (0+255),w,b
 30111  002602  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30112  002604  0E00               	movlw	0
 30113  002606  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30114  002608  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30115  00260A  0E02               	movlw	2
 30116  00260C  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30117  00260E  6EE9               	movwf	fsr0l,c
 30118  002610  0E00               	movlw	0
 30119  002612  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30120  002614  6EEA               	movwf	fsr0h,c
 30121  002616  50EF               	movf	indf0,w,c
 30122  002618  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30123  00261A  197E               	xorwf	AESEncode@aux3& (0+255),w,b
 30124  00261C  6EDF               	movwf	indf2,c
 30125                           
 30126                           ; BSR set to: 0
 30127                           ;AES.c: 264: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30128  00261E  517F               	movf	AESEncode@i& (0+255),w,b
 30129  002620  256A               	addwf	AESEncode@block& (0+255),w,b
 30130  002622  6F6D               	movwf	??_AESEncode& (0+255),b
 30131  002624  0E00               	movlw	0
 30132  002626  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30133  002628  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30134  00262A  0E03               	movlw	3
 30135  00262C  256D               	addwf	??_AESEncode& (0+255),w,b
 30136  00262E  6ED9               	movwf	fsr2l,c
 30137  002630  0E00               	movlw	0
 30138  002632  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30139  002634  6EDA               	movwf	fsr2h,c
 30140  002636  517F               	movf	AESEncode@i& (0+255),w,b
 30141  002638  256A               	addwf	AESEncode@block& (0+255),w,b
 30142  00263A  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30143  00263C  0E00               	movlw	0
 30144  00263E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30145  002640  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30146  002642  0E02               	movlw	2
 30147  002644  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30148  002646  6EE9               	movwf	fsr0l,c
 30149  002648  0E00               	movlw	0
 30150  00264A  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30151  00264C  6EEA               	movwf	fsr0h,c
 30152  00264E  50EF               	movf	indf0,w,c
 30153  002650  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30154  002652  517F               	movf	AESEncode@i& (0+255),w,b
 30155  002654  256A               	addwf	AESEncode@block& (0+255),w,b
 30156  002656  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 30157  002658  0E00               	movlw	0
 30158  00265A  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30159  00265C  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 30160  00265E  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 30161  002660  6EE9               	movwf	fsr0l,c
 30162  002662  0E00               	movlw	0
 30163  002664  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 30164  002666  6EEA               	movwf	fsr0h,c
 30165  002668  50EF               	movf	indf0,w,c
 30166  00266A  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 30167  00266C  517F               	movf	AESEncode@i& (0+255),w,b
 30168  00266E  256A               	addwf	AESEncode@block& (0+255),w,b
 30169  002670  6EE9               	movwf	fsr0l,c
 30170  002672  0E00               	movlw	0
 30171  002674  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30172  002676  6EEA               	movwf	fsr0h,c
 30173  002678  50EF               	movf	indf0,w,c
 30174  00267A  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30175  00267C  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30176  00267E  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30177  002680  6EDF               	movwf	indf2,c
 30178  002682  0E04               	movlw	4
 30179  002684  277F               	addwf	AESEncode@i& (0+255),f,b
 30180  002686  0E0F               	movlw	15
 30181  002688  657F               	cpfsgt	AESEncode@i& (0+255),b
 30182  00268A  D6F0               	goto	l12033
 30183  00268C                     l12065:
 30184                           
 30185                           ; BSR set to: 0
 30186                           ;AES.c: 265: }
 30187                           ;AES.c: 266: }
 30188                           ;AES.c: 268: EncKeySchedule(key);
 30189  00268C  C06C  F064         	movff	AESEncode@key,EncKeySchedule@key
 30190  002690  ECB1  F014         	call	_EncKeySchedule	;wreg free
 30191                           
 30192                           ; BSR set to: 0
 30193                           ;AES.c: 271: for(i=0;i<16;i++)
 30194  002694  6B7F               	clrf	AESEncode@i& (0+255),b
 30195  002696                     l12073:
 30196                           
 30197                           ; BSR set to: 0
 30198                           ;AES.c: 272: {
 30199                           ;AES.c: 273: block[i] ^= key[i];
 30200  002696  516C               	movf	AESEncode@key& (0+255),w,b
 30201  002698  257F               	addwf	AESEncode@i& (0+255),w,b
 30202  00269A  6ED9               	movwf	fsr2l,c
 30203  00269C  6ADA               	clrf	fsr2h,c
 30204  00269E  50DF               	movf	indf2,w,c
 30205  0026A0  6F6D               	movwf	??_AESEncode& (0+255),b
 30206  0026A2  517F               	movf	AESEncode@i& (0+255),w,b
 30207  0026A4  256A               	addwf	AESEncode@block& (0+255),w,b
 30208  0026A6  6ED9               	movwf	fsr2l,c
 30209  0026A8  0E00               	movlw	0
 30210  0026AA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30211  0026AC  6EDA               	movwf	fsr2h,c
 30212  0026AE  516D               	movf	??_AESEncode& (0+255),w,b
 30213  0026B0  1ADF               	xorwf	indf2,f,c
 30214                           
 30215                           ; BSR set to: 0
 30216  0026B2  2B7F               	incf	AESEncode@i& (0+255),f,b
 30217                           
 30218                           ; BSR set to: 0
 30219  0026B4  0E0F               	movlw	15
 30220  0026B6  657F               	cpfsgt	AESEncode@i& (0+255),b
 30221  0026B8  D7EE               	goto	l12073
 30222                           
 30223                           ; BSR set to: 0
 30224                           ;AES.c: 274: }
 30225                           ;AES.c: 276: _roundCounter--;
 30226  0026BA  0644               	decf	__roundCounter,f,c
 30227                           
 30228                           ; BSR set to: 0
 30229                           ;AES.c: 277: }
 30230                           ;AES.c: 278: while(_roundCounter !=0);
 30231  0026BC  5044               	movf	__roundCounter,w,c
 30232  0026BE  E001 D6AB          	bnz	l2522
 30233                           
 30234                           ; BSR set to: 0
 30235  0026C2  0012               	return		;funcret
 30236  0026C4                     __end_of_AESEncode:
 30237                           	opt stack 0
 30238                           tosu	equ	0xFFF
 30239                           tosh	equ	0xFFE
 30240                           tosl	equ	0xFFD
 30241                           pclath	equ	0xFFA
 30242                           tblptru	equ	0xFF8
 30243                           tblptrh	equ	0xFF7
 30244                           tblptrl	equ	0xFF6
 30245                           tablat	equ	0xFF5
 30246                           prodh	equ	0xFF4
 30247                           prodl	equ	0xFF3
 30248                           intcon	equ	0xFF2
 30249                           intcon2	equ	0xFF1
 30250                           intcon3	equ	0xFF0
 30251                           indf0	equ	0xFEF
 30252                           postinc0	equ	0xFEE
 30253                           plusw0	equ	0xFEB
 30254                           fsr0h	equ	0xFEA
 30255                           fsr0l	equ	0xFE9
 30256                           wreg	equ	0xFE8
 30257                           postinc1	equ	0xFE6
 30258                           postdec1	equ	0xFE5
 30259                           plusw1	equ	0xFE3
 30260                           fsr1h	equ	0xFE2
 30261                           fsr1l	equ	0xFE1
 30262                           indf2	equ	0xFDF
 30263                           postinc2	equ	0xFDE
 30264                           postdec2	equ	0xFDD
 30265                           plusw2	equ	0xFDB
 30266                           fsr2h	equ	0xFDA
 30267                           fsr2l	equ	0xFD9
 30268                           status	equ	0xFD8
 30269                           
 30270 ;; *************** function _EncodeShiftRow *****************
 30271 ;; Defined at:
 30272 ;;		line 354 in file "mcc_generated_files/LoRaWAN/AES.c"
 30273 ;; Parameters:    Size  Location     Type
 30274 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30275 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30276 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30277 ;; Auto vars:     Size  Location     Type
 30278 ;;  temp            1    6[BANK0 ] unsigned char 
 30279 ;; Return value:  Size  Location     Type
 30280 ;;                  1    wreg      void 
 30281 ;; Registers used:
 30282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30283 ;; Tracked objects:
 30284 ;;		On entry : F/0
 30285 ;;		On exit  : F/0
 30286 ;;		Unchanged: 0/0
 30287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30291 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30292 ;;Total ram usage:        3 bytes
 30293 ;; Hardware stack levels used:    1
 30294 ;; Hardware stack levels required when called:    7
 30295 ;; This function calls:
 30296 ;;		Nothing
 30297 ;; This function is called by:
 30298 ;;		_AESEncode
 30299 ;; This function uses a non-reentrant model
 30300 ;;
 30301                           
 30302                           	psect	text156
 30303  003D1E                     __ptext156:
 30304                           	opt stack 0
 30305  003D1E                     _EncodeShiftRow:
 30306                           	opt stack 17
 30307                           
 30308                           ; BSR set to: 0
 30309                           ;AES.c: 356: unsigned char temp;
 30310                           ;AES.c: 361: temp=stateTable[1];
 30311                           
 30312                           ; BSR set to: 0
 30313                           ;incstack = 0
 30314  003D1E  EE20 F001          	lfsr	2,1
 30315  003D22  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30316  003D24  26D9               	addwf	fsr2l,f,c
 30317  003D26  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30318  003D28  22DA               	addwfc	fsr2h,f,c
 30319  003D2A  50DF               	movf	indf2,w,c
 30320  003D2C  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30321                           
 30322                           ; BSR set to: 0
 30323                           ;AES.c: 362: stateTable[1]=stateTable[5];
 30324  003D2E  EE20 F005          	lfsr	2,5
 30325  003D32  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30326  003D34  26D9               	addwf	fsr2l,f,c
 30327  003D36  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30328  003D38  22DA               	addwfc	fsr2h,f,c
 30329  003D3A  EE00 F001          	lfsr	0,1
 30330  003D3E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30331  003D40  26E9               	addwf	fsr0l,f,c
 30332  003D42  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30333  003D44  22EA               	addwfc	fsr0h,f,c
 30334  003D46  CFDF FFEF          	movff	indf2,indf0
 30335                           
 30336                           ; BSR set to: 0
 30337                           ;AES.c: 363: stateTable[5]=stateTable[9];
 30338  003D4A  EE20 F009          	lfsr	2,9
 30339  003D4E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30340  003D50  26D9               	addwf	fsr2l,f,c
 30341  003D52  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30342  003D54  22DA               	addwfc	fsr2h,f,c
 30343  003D56  EE00 F005          	lfsr	0,5
 30344  003D5A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30345  003D5C  26E9               	addwf	fsr0l,f,c
 30346  003D5E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30347  003D60  22EA               	addwfc	fsr0h,f,c
 30348  003D62  CFDF FFEF          	movff	indf2,indf0
 30349                           
 30350                           ; BSR set to: 0
 30351                           ;AES.c: 364: stateTable[9]=stateTable[13];
 30352  003D66  EE20 F00D          	lfsr	2,13
 30353  003D6A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30354  003D6C  26D9               	addwf	fsr2l,f,c
 30355  003D6E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30356  003D70  22DA               	addwfc	fsr2h,f,c
 30357  003D72  EE00 F009          	lfsr	0,9
 30358  003D76  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30359  003D78  26E9               	addwf	fsr0l,f,c
 30360  003D7A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30361  003D7C  22EA               	addwfc	fsr0h,f,c
 30362  003D7E  CFDF FFEF          	movff	indf2,indf0
 30363                           
 30364                           ; BSR set to: 0
 30365                           ;AES.c: 365: stateTable[13]=temp;
 30366  003D82  EE20 F00D          	lfsr	2,13
 30367  003D86  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30368  003D88  26D9               	addwf	fsr2l,f,c
 30369  003D8A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30370  003D8C  22DA               	addwfc	fsr2h,f,c
 30371  003D8E  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30372                           
 30373                           ; BSR set to: 0
 30374                           ;AES.c: 368: temp=stateTable[2];
 30375  003D92  EE20 F002          	lfsr	2,2
 30376  003D96  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30377  003D98  26D9               	addwf	fsr2l,f,c
 30378  003D9A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30379  003D9C  22DA               	addwfc	fsr2h,f,c
 30380  003D9E  50DF               	movf	indf2,w,c
 30381  003DA0  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30382                           
 30383                           ; BSR set to: 0
 30384                           ;AES.c: 369: stateTable[2]=stateTable[10];
 30385  003DA2  EE20 F00A          	lfsr	2,10
 30386  003DA6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30387  003DA8  26D9               	addwf	fsr2l,f,c
 30388  003DAA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30389  003DAC  22DA               	addwfc	fsr2h,f,c
 30390  003DAE  EE00 F002          	lfsr	0,2
 30391  003DB2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30392  003DB4  26E9               	addwf	fsr0l,f,c
 30393  003DB6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30394  003DB8  22EA               	addwfc	fsr0h,f,c
 30395  003DBA  CFDF FFEF          	movff	indf2,indf0
 30396                           
 30397                           ;AES.c: 370: stateTable[10]=temp;
 30398  003DBE  EE20 F00A          	lfsr	2,10
 30399  003DC2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30400  003DC4  26D9               	addwf	fsr2l,f,c
 30401  003DC6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30402  003DC8  22DA               	addwfc	fsr2h,f,c
 30403  003DCA  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30404                           
 30405                           ;AES.c: 371: temp=stateTable[14];
 30406  003DCE  EE20 F00E          	lfsr	2,14
 30407  003DD2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30408  003DD4  26D9               	addwf	fsr2l,f,c
 30409  003DD6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30410  003DD8  22DA               	addwfc	fsr2h,f,c
 30411  003DDA  50DF               	movf	indf2,w,c
 30412  003DDC  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30413                           
 30414                           ; BSR set to: 0
 30415                           ;AES.c: 372: stateTable[14]=stateTable[6];
 30416  003DDE  EE20 F006          	lfsr	2,6
 30417  003DE2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30418  003DE4  26D9               	addwf	fsr2l,f,c
 30419  003DE6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30420  003DE8  22DA               	addwfc	fsr2h,f,c
 30421  003DEA  EE00 F00E          	lfsr	0,14
 30422  003DEE  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30423  003DF0  26E9               	addwf	fsr0l,f,c
 30424  003DF2  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30425  003DF4  22EA               	addwfc	fsr0h,f,c
 30426  003DF6  CFDF FFEF          	movff	indf2,indf0
 30427                           
 30428                           ; BSR set to: 0
 30429                           ;AES.c: 373: stateTable[6]=temp;
 30430  003DFA  EE20 F006          	lfsr	2,6
 30431  003DFE  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30432  003E00  26D9               	addwf	fsr2l,f,c
 30433  003E02  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30434  003E04  22DA               	addwfc	fsr2h,f,c
 30435  003E06  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30436                           
 30437                           ; BSR set to: 0
 30438                           ;AES.c: 376: temp=stateTable[3];
 30439  003E0A  EE20 F003          	lfsr	2,3
 30440  003E0E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30441  003E10  26D9               	addwf	fsr2l,f,c
 30442  003E12  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30443  003E14  22DA               	addwfc	fsr2h,f,c
 30444  003E16  50DF               	movf	indf2,w,c
 30445  003E18  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30446                           
 30447                           ; BSR set to: 0
 30448                           ;AES.c: 377: stateTable[3]=stateTable[15];
 30449  003E1A  EE20 F00F          	lfsr	2,15
 30450  003E1E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30451  003E20  26D9               	addwf	fsr2l,f,c
 30452  003E22  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30453  003E24  22DA               	addwfc	fsr2h,f,c
 30454  003E26  EE00 F003          	lfsr	0,3
 30455  003E2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30456  003E2C  26E9               	addwf	fsr0l,f,c
 30457  003E2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30458  003E30  22EA               	addwfc	fsr0h,f,c
 30459  003E32  CFDF FFEF          	movff	indf2,indf0
 30460                           
 30461                           ; BSR set to: 0
 30462                           ;AES.c: 378: stateTable[15]=stateTable[11];
 30463  003E36  EE20 F00B          	lfsr	2,11
 30464  003E3A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30465  003E3C  26D9               	addwf	fsr2l,f,c
 30466  003E3E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30467  003E40  22DA               	addwfc	fsr2h,f,c
 30468  003E42  EE00 F00F          	lfsr	0,15
 30469  003E46  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30470  003E48  26E9               	addwf	fsr0l,f,c
 30471  003E4A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30472  003E4C  22EA               	addwfc	fsr0h,f,c
 30473  003E4E  CFDF FFEF          	movff	indf2,indf0
 30474                           
 30475                           ; BSR set to: 0
 30476                           ;AES.c: 379: stateTable[11]=stateTable[7];
 30477  003E52  EE20 F007          	lfsr	2,7
 30478  003E56  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30479  003E58  26D9               	addwf	fsr2l,f,c
 30480  003E5A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30481  003E5C  22DA               	addwfc	fsr2h,f,c
 30482  003E5E  EE00 F00B          	lfsr	0,11
 30483  003E62  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30484  003E64  26E9               	addwf	fsr0l,f,c
 30485  003E66  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30486  003E68  22EA               	addwfc	fsr0h,f,c
 30487  003E6A  CFDF FFEF          	movff	indf2,indf0
 30488                           
 30489                           ;AES.c: 380: stateTable[7]=temp;
 30490  003E6E  EE20 F007          	lfsr	2,7
 30491  003E72  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30492  003E74  26D9               	addwf	fsr2l,f,c
 30493  003E76  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30494  003E78  22DA               	addwfc	fsr2h,f,c
 30495  003E7A  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30496                           
 30497                           ; BSR set to: 0
 30498  003E7E  0012               	return		;funcret
 30499  003E80                     __end_of_EncodeShiftRow:
 30500                           	opt stack 0
 30501                           tosu	equ	0xFFF
 30502                           tosh	equ	0xFFE
 30503                           tosl	equ	0xFFD
 30504                           pclath	equ	0xFFA
 30505                           tblptru	equ	0xFF8
 30506                           tblptrh	equ	0xFF7
 30507                           tblptrl	equ	0xFF6
 30508                           tablat	equ	0xFF5
 30509                           prodh	equ	0xFF4
 30510                           prodl	equ	0xFF3
 30511                           intcon	equ	0xFF2
 30512                           intcon2	equ	0xFF1
 30513                           intcon3	equ	0xFF0
 30514                           indf0	equ	0xFEF
 30515                           postinc0	equ	0xFEE
 30516                           plusw0	equ	0xFEB
 30517                           fsr0h	equ	0xFEA
 30518                           fsr0l	equ	0xFE9
 30519                           wreg	equ	0xFE8
 30520                           postinc1	equ	0xFE6
 30521                           postdec1	equ	0xFE5
 30522                           plusw1	equ	0xFE3
 30523                           fsr1h	equ	0xFE2
 30524                           fsr1l	equ	0xFE1
 30525                           indf2	equ	0xFDF
 30526                           postinc2	equ	0xFDE
 30527                           postdec2	equ	0xFDD
 30528                           plusw2	equ	0xFDB
 30529                           fsr2h	equ	0xFDA
 30530                           fsr2l	equ	0xFD9
 30531                           status	equ	0xFD8
 30532                           
 30533 ;; *************** function _EncKeySchedule *****************
 30534 ;; Defined at:
 30535 ;;		line 306 in file "mcc_generated_files/LoRaWAN/AES.c"
 30536 ;; Parameters:    Size  Location     Type
 30537 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30538 ;;		 -> AESEncodeLoRa@useKey(16), 
 30539 ;; Auto vars:     Size  Location     Type
 30540 ;;		None
 30541 ;; Return value:  Size  Location     Type
 30542 ;;                  1    wreg      void 
 30543 ;; Registers used:
 30544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30545 ;; Tracked objects:
 30546 ;;		On entry : F/0
 30547 ;;		On exit  : F/0
 30548 ;;		Unchanged: 0/0
 30549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30550 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30552 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30554 ;;Total ram usage:        6 bytes
 30555 ;; Hardware stack levels used:    1
 30556 ;; Hardware stack levels required when called:    7
 30557 ;; This function calls:
 30558 ;;		Nothing
 30559 ;; This function is called by:
 30560 ;;		_AESEncode
 30561 ;; This function uses a non-reentrant model
 30562 ;;
 30563                           
 30564                           	psect	text157
 30565  002962                     __ptext157:
 30566                           	opt stack 0
 30567  002962                     _EncKeySchedule:
 30568                           	opt stack 17
 30569                           
 30570                           ; BSR set to: 0
 30571                           ;AES.c: 309: key[0]^=STable[key[13]];
 30572                           
 30573                           ; BSR set to: 0
 30574                           ;incstack = 0
 30575  002962  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30576  002964  6ED9               	movwf	fsr2l,c
 30577  002966  6ADA               	clrf	fsr2h,c
 30578  002968  0E0D               	movlw	13
 30579  00296A  26D9               	addwf	fsr2l,f,c
 30580  00296C  50DF               	movf	indf2,w,c
 30581  00296E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30582  002970  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30583  002972  0E6D               	movlw	low _STable
 30584  002974  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30585  002976  6EF6               	movwf	tblptrl,c
 30586  002978  0EFE               	movlw	high _STable
 30587  00297A  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30588  00297C  6EF7               	movwf	tblptrh,c
 30589  00297E                     	if	1	;There are 3 active tblptr bytes
 30590  00297E  6AF8               	clrf	tblptru,c
 30591  002980  0E00               	movlw	low (__mediumconst shr (0+16))
 30592  002982  22F8               	addwfc	tblptru,f,c
 30593  002984                     	endif
 30594  002984  0008               	tblrd		*
 30595  002986  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30596  00298A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30597  00298C  6ED9               	movwf	fsr2l,c
 30598  00298E  6ADA               	clrf	fsr2h,c
 30599  002990  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30600  002992  1ADF               	xorwf	indf2,f,c
 30601                           
 30602                           ;AES.c: 310: key[1]^=STable[key[14]];
 30603  002994  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30604  002996  6ED9               	movwf	fsr2l,c
 30605  002998  6ADA               	clrf	fsr2h,c
 30606  00299A  0E0E               	movlw	14
 30607  00299C  26D9               	addwf	fsr2l,f,c
 30608  00299E  50DF               	movf	indf2,w,c
 30609  0029A0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30610  0029A2  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30611  0029A4  0E6D               	movlw	low _STable
 30612  0029A6  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30613  0029A8  6EF6               	movwf	tblptrl,c
 30614  0029AA  0EFE               	movlw	high _STable
 30615  0029AC  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30616  0029AE  6EF7               	movwf	tblptrh,c
 30617  0029B0                     	if	1	;There are 3 active tblptr bytes
 30618  0029B0  6AF8               	clrf	tblptru,c
 30619  0029B2  0E00               	movlw	low (__mediumconst shr (0+16))
 30620  0029B4  22F8               	addwfc	tblptru,f,c
 30621  0029B6                     	endif
 30622  0029B6  0008               	tblrd		*
 30623  0029B8  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30624  0029BC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30625  0029BE  6ED9               	movwf	fsr2l,c
 30626  0029C0  6ADA               	clrf	fsr2h,c
 30627  0029C2  2AD9               	incf	fsr2l,f,c
 30628  0029C4  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30629  0029C6  1ADF               	xorwf	indf2,f,c
 30630                           
 30631                           ;AES.c: 311: key[2]^=STable[key[15]];
 30632  0029C8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30633  0029CA  6ED9               	movwf	fsr2l,c
 30634  0029CC  6ADA               	clrf	fsr2h,c
 30635  0029CE  0E0F               	movlw	15
 30636  0029D0  26D9               	addwf	fsr2l,f,c
 30637  0029D2  50DF               	movf	indf2,w,c
 30638  0029D4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30639  0029D6  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30640  0029D8  0E6D               	movlw	low _STable
 30641  0029DA  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30642  0029DC  6EF6               	movwf	tblptrl,c
 30643  0029DE  0EFE               	movlw	high _STable
 30644  0029E0  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30645  0029E2  6EF7               	movwf	tblptrh,c
 30646  0029E4                     	if	1	;There are 3 active tblptr bytes
 30647  0029E4  6AF8               	clrf	tblptru,c
 30648  0029E6  0E00               	movlw	low (__mediumconst shr (0+16))
 30649  0029E8  22F8               	addwfc	tblptru,f,c
 30650  0029EA                     	endif
 30651  0029EA  0008               	tblrd		*
 30652  0029EC  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30653  0029F0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30654  0029F2  6ED9               	movwf	fsr2l,c
 30655  0029F4  6ADA               	clrf	fsr2h,c
 30656  0029F6  0E02               	movlw	2
 30657  0029F8  26D9               	addwf	fsr2l,f,c
 30658  0029FA  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30659  0029FC  1ADF               	xorwf	indf2,f,c
 30660                           
 30661                           ;AES.c: 312: key[3]^=STable[key[12]];
 30662  0029FE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30663  002A00  6ED9               	movwf	fsr2l,c
 30664  002A02  6ADA               	clrf	fsr2h,c
 30665  002A04  0E0C               	movlw	12
 30666  002A06  26D9               	addwf	fsr2l,f,c
 30667  002A08  50DF               	movf	indf2,w,c
 30668  002A0A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30669  002A0C  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30670  002A0E  0E6D               	movlw	low _STable
 30671  002A10  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30672  002A12  6EF6               	movwf	tblptrl,c
 30673  002A14  0EFE               	movlw	high _STable
 30674  002A16  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30675  002A18  6EF7               	movwf	tblptrh,c
 30676  002A1A                     	if	1	;There are 3 active tblptr bytes
 30677  002A1A  6AF8               	clrf	tblptru,c
 30678  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 30679  002A1E  22F8               	addwfc	tblptru,f,c
 30680  002A20                     	endif
 30681  002A20  0008               	tblrd		*
 30682  002A22  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30683  002A26  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30684  002A28  6ED9               	movwf	fsr2l,c
 30685  002A2A  6ADA               	clrf	fsr2h,c
 30686  002A2C  0E03               	movlw	3
 30687  002A2E  26D9               	addwf	fsr2l,f,c
 30688  002A30  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30689  002A32  1ADF               	xorwf	indf2,f,c
 30690                           
 30691                           ; BSR set to: 0
 30692                           ;AES.c: 314: key[0]^=_rcon;
 30693  002A34  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30694  002A36  6ED9               	movwf	fsr2l,c
 30695  002A38  6ADA               	clrf	fsr2h,c
 30696  002A3A  51EE               	movf	__rcon& (0+255),w,b
 30697  002A3C  1ADF               	xorwf	indf2,f,c
 30698                           
 30699                           ; BSR set to: 0
 30700                           ;AES.c: 315: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30701  002A3E  0E7F               	movlw	127
 30702  002A40  65EE               	cpfsgt	__rcon& (0+255),b
 30703  002A42  D00C               	goto	l11893
 30704                           
 30705                           ; BSR set to: 0
 30706  002A44  0E1B               	movlw	27
 30707  002A46  C0EE  F065         	movff	__rcon,??_EncKeySchedule
 30708  002A4A  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30709  002A4C  90D8               	bcf	status,0,c
 30710  002A4E  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30711  002A50  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30712  002A52  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30713  002A54  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30714  002A56  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30715  002A58  6F69               	movwf	(_EncKeySchedule$4148+1)& (0+255),b
 30716  002A5A  D005               	goto	l11895
 30717  002A5C                     l11893:
 30718                           
 30719                           ; BSR set to: 0
 30720  002A5C  90D8               	bcf	status,0,c
 30721  002A5E  35EE               	rlcf	__rcon& (0+255),w,b
 30722  002A60  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30723  002A62  6B69               	clrf	(_EncKeySchedule$4148+1)& (0+255),b
 30724  002A64  3769               	rlcf	(_EncKeySchedule$4148+1)& (0+255),f,b
 30725  002A66                     l11895:
 30726                           
 30727                           ; BSR set to: 0
 30728  002A66  C068  F0EE         	movff	_EncKeySchedule$4148,__rcon
 30729                           
 30730                           ; BSR set to: 0
 30731                           ;AES.c: 318: key[4]^=key[0];
 30732  002A6A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30733  002A6C  6ED9               	movwf	fsr2l,c
 30734  002A6E  6ADA               	clrf	fsr2h,c
 30735  002A70  50DF               	movf	indf2,w,c
 30736  002A72  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30737  002A74  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30738  002A76  6ED9               	movwf	fsr2l,c
 30739  002A78  6ADA               	clrf	fsr2h,c
 30740  002A7A  0E04               	movlw	4
 30741  002A7C  26D9               	addwf	fsr2l,f,c
 30742  002A7E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30743  002A80  1ADF               	xorwf	indf2,f,c
 30744                           
 30745                           ; BSR set to: 0
 30746                           ;AES.c: 319: key[5]^=key[1];
 30747  002A82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30748  002A84  6ED9               	movwf	fsr2l,c
 30749  002A86  6ADA               	clrf	fsr2h,c
 30750  002A88  2AD9               	incf	fsr2l,f,c
 30751  002A8A  50DF               	movf	indf2,w,c
 30752  002A8C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30753  002A8E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30754  002A90  6ED9               	movwf	fsr2l,c
 30755  002A92  6ADA               	clrf	fsr2h,c
 30756  002A94  0E05               	movlw	5
 30757  002A96  26D9               	addwf	fsr2l,f,c
 30758  002A98  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30759  002A9A  1ADF               	xorwf	indf2,f,c
 30760                           
 30761                           ; BSR set to: 0
 30762                           ;AES.c: 320: key[6]^=key[2];
 30763  002A9C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30764  002A9E  6ED9               	movwf	fsr2l,c
 30765  002AA0  6ADA               	clrf	fsr2h,c
 30766  002AA2  0E02               	movlw	2
 30767  002AA4  26D9               	addwf	fsr2l,f,c
 30768  002AA6  50DF               	movf	indf2,w,c
 30769  002AA8  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30770  002AAA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30771  002AAC  6ED9               	movwf	fsr2l,c
 30772  002AAE  6ADA               	clrf	fsr2h,c
 30773  002AB0  0E06               	movlw	6
 30774  002AB2  26D9               	addwf	fsr2l,f,c
 30775  002AB4  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30776  002AB6  1ADF               	xorwf	indf2,f,c
 30777                           
 30778                           ; BSR set to: 0
 30779                           ;AES.c: 321: key[7]^=key[3];
 30780  002AB8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30781  002ABA  6ED9               	movwf	fsr2l,c
 30782  002ABC  6ADA               	clrf	fsr2h,c
 30783  002ABE  0E03               	movlw	3
 30784  002AC0  26D9               	addwf	fsr2l,f,c
 30785  002AC2  50DF               	movf	indf2,w,c
 30786  002AC4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30787  002AC6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30788  002AC8  6ED9               	movwf	fsr2l,c
 30789  002ACA  6ADA               	clrf	fsr2h,c
 30790  002ACC  0E07               	movlw	7
 30791  002ACE  26D9               	addwf	fsr2l,f,c
 30792  002AD0  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30793  002AD2  1ADF               	xorwf	indf2,f,c
 30794                           
 30795                           ; BSR set to: 0
 30796                           ;AES.c: 324: key[8]^=key[4];
 30797  002AD4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30798  002AD6  6ED9               	movwf	fsr2l,c
 30799  002AD8  6ADA               	clrf	fsr2h,c
 30800  002ADA  0E04               	movlw	4
 30801  002ADC  26D9               	addwf	fsr2l,f,c
 30802  002ADE  50DF               	movf	indf2,w,c
 30803  002AE0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30804  002AE2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30805  002AE4  6ED9               	movwf	fsr2l,c
 30806  002AE6  6ADA               	clrf	fsr2h,c
 30807  002AE8  0E08               	movlw	8
 30808  002AEA  26D9               	addwf	fsr2l,f,c
 30809  002AEC  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30810  002AEE  1ADF               	xorwf	indf2,f,c
 30811                           
 30812                           ; BSR set to: 0
 30813                           ;AES.c: 325: key[9]^=key[5];
 30814  002AF0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30815  002AF2  6ED9               	movwf	fsr2l,c
 30816  002AF4  6ADA               	clrf	fsr2h,c
 30817  002AF6  0E05               	movlw	5
 30818  002AF8  26D9               	addwf	fsr2l,f,c
 30819  002AFA  50DF               	movf	indf2,w,c
 30820  002AFC  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30821  002AFE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30822  002B00  6ED9               	movwf	fsr2l,c
 30823  002B02  6ADA               	clrf	fsr2h,c
 30824  002B04  0E09               	movlw	9
 30825  002B06  26D9               	addwf	fsr2l,f,c
 30826  002B08  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30827  002B0A  1ADF               	xorwf	indf2,f,c
 30828                           
 30829                           ; BSR set to: 0
 30830                           ;AES.c: 326: key[10]^=key[6];
 30831  002B0C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30832  002B0E  6ED9               	movwf	fsr2l,c
 30833  002B10  6ADA               	clrf	fsr2h,c
 30834  002B12  0E06               	movlw	6
 30835  002B14  26D9               	addwf	fsr2l,f,c
 30836  002B16  50DF               	movf	indf2,w,c
 30837  002B18  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30838  002B1A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30839  002B1C  6ED9               	movwf	fsr2l,c
 30840  002B1E  6ADA               	clrf	fsr2h,c
 30841  002B20  0E0A               	movlw	10
 30842  002B22  26D9               	addwf	fsr2l,f,c
 30843  002B24  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30844  002B26  1ADF               	xorwf	indf2,f,c
 30845                           
 30846                           ; BSR set to: 0
 30847                           ;AES.c: 327: key[11]^=key[7];
 30848  002B28  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30849  002B2A  6ED9               	movwf	fsr2l,c
 30850  002B2C  6ADA               	clrf	fsr2h,c
 30851  002B2E  0E07               	movlw	7
 30852  002B30  26D9               	addwf	fsr2l,f,c
 30853  002B32  50DF               	movf	indf2,w,c
 30854  002B34  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30855  002B36  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30856  002B38  6ED9               	movwf	fsr2l,c
 30857  002B3A  6ADA               	clrf	fsr2h,c
 30858  002B3C  0E0B               	movlw	11
 30859  002B3E  26D9               	addwf	fsr2l,f,c
 30860  002B40  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30861  002B42  1ADF               	xorwf	indf2,f,c
 30862                           
 30863                           ; BSR set to: 0
 30864                           ;AES.c: 330: key[12]^=key[8];
 30865  002B44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30866  002B46  6ED9               	movwf	fsr2l,c
 30867  002B48  6ADA               	clrf	fsr2h,c
 30868  002B4A  0E08               	movlw	8
 30869  002B4C  26D9               	addwf	fsr2l,f,c
 30870  002B4E  50DF               	movf	indf2,w,c
 30871  002B50  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30872  002B52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30873  002B54  6ED9               	movwf	fsr2l,c
 30874  002B56  6ADA               	clrf	fsr2h,c
 30875  002B58  0E0C               	movlw	12
 30876  002B5A  26D9               	addwf	fsr2l,f,c
 30877  002B5C  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30878  002B5E  1ADF               	xorwf	indf2,f,c
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;AES.c: 331: key[13]^=key[9];
 30882  002B60  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30883  002B62  6ED9               	movwf	fsr2l,c
 30884  002B64  6ADA               	clrf	fsr2h,c
 30885  002B66  0E09               	movlw	9
 30886  002B68  26D9               	addwf	fsr2l,f,c
 30887  002B6A  50DF               	movf	indf2,w,c
 30888  002B6C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30889  002B6E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30890  002B70  6ED9               	movwf	fsr2l,c
 30891  002B72  6ADA               	clrf	fsr2h,c
 30892  002B74  0E0D               	movlw	13
 30893  002B76  26D9               	addwf	fsr2l,f,c
 30894  002B78  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30895  002B7A  1ADF               	xorwf	indf2,f,c
 30896                           
 30897                           ; BSR set to: 0
 30898                           ;AES.c: 332: key[14]^=key[10];
 30899  002B7C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30900  002B7E  6ED9               	movwf	fsr2l,c
 30901  002B80  6ADA               	clrf	fsr2h,c
 30902  002B82  0E0A               	movlw	10
 30903  002B84  26D9               	addwf	fsr2l,f,c
 30904  002B86  50DF               	movf	indf2,w,c
 30905  002B88  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30906  002B8A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30907  002B8C  6ED9               	movwf	fsr2l,c
 30908  002B8E  6ADA               	clrf	fsr2h,c
 30909  002B90  0E0E               	movlw	14
 30910  002B92  26D9               	addwf	fsr2l,f,c
 30911  002B94  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30912  002B96  1ADF               	xorwf	indf2,f,c
 30913                           
 30914                           ; BSR set to: 0
 30915                           ;AES.c: 333: key[15]^=key[11];
 30916  002B98  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30917  002B9A  6ED9               	movwf	fsr2l,c
 30918  002B9C  6ADA               	clrf	fsr2h,c
 30919  002B9E  0E0B               	movlw	11
 30920  002BA0  26D9               	addwf	fsr2l,f,c
 30921  002BA2  50DF               	movf	indf2,w,c
 30922  002BA4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30923  002BA6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30924  002BA8  6ED9               	movwf	fsr2l,c
 30925  002BAA  6ADA               	clrf	fsr2h,c
 30926  002BAC  0E0F               	movlw	15
 30927  002BAE  26D9               	addwf	fsr2l,f,c
 30928  002BB0  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30929  002BB2  1ADF               	xorwf	indf2,f,c
 30930                           
 30931                           ; BSR set to: 0
 30932  002BB4  0012               	return		;funcret
 30933  002BB6                     __end_of_EncKeySchedule:
 30934                           	opt stack 0
 30935                           tosu	equ	0xFFF
 30936                           tosh	equ	0xFFE
 30937                           tosl	equ	0xFFD
 30938                           pclath	equ	0xFFA
 30939                           tblptru	equ	0xFF8
 30940                           tblptrh	equ	0xFF7
 30941                           tblptrl	equ	0xFF6
 30942                           tablat	equ	0xFF5
 30943                           prodh	equ	0xFF4
 30944                           prodl	equ	0xFF3
 30945                           intcon	equ	0xFF2
 30946                           intcon2	equ	0xFF1
 30947                           intcon3	equ	0xFF0
 30948                           indf0	equ	0xFEF
 30949                           postinc0	equ	0xFEE
 30950                           plusw0	equ	0xFEB
 30951                           fsr0h	equ	0xFEA
 30952                           fsr0l	equ	0xFE9
 30953                           wreg	equ	0xFE8
 30954                           postinc1	equ	0xFE6
 30955                           postdec1	equ	0xFE5
 30956                           plusw1	equ	0xFE3
 30957                           fsr1h	equ	0xFE2
 30958                           fsr1l	equ	0xFE1
 30959                           indf2	equ	0xFDF
 30960                           postinc2	equ	0xFDE
 30961                           postdec2	equ	0xFDD
 30962                           plusw2	equ	0xFDB
 30963                           fsr2h	equ	0xFDA
 30964                           fsr2l	equ	0xFD9
 30965                           status	equ	0xFD8
 30966                           
 30967 ;; *************** function _LORAWAN_Init *****************
 30968 ;; Defined at:
 30969 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 30970 ;; Parameters:    Size  Location     Type
 30971 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 30972 ;;		 -> RxDataDone(1), 
 30973 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 30974 ;;		 -> RxJoinResponse(1), 
 30975 ;; Auto vars:     Size  Location     Type
 30976 ;;		None
 30977 ;; Return value:  Size  Location     Type
 30978 ;;                  1    wreg      void 
 30979 ;; Registers used:
 30980 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30981 ;; Tracked objects:
 30982 ;;		On entry : F/0
 30983 ;;		On exit  : D/0
 30984 ;;		Unchanged: 0/0
 30985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30989 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30990 ;;Total ram usage:        4 bytes
 30991 ;; Hardware stack levels used:    1
 30992 ;; Hardware stack levels required when called:   13
 30993 ;; This function calls:
 30994 ;;		_CreateAllSoftwareTimers
 30995 ;;		_LORAWAN_Reset
 30996 ;;		_RADIO_Init
 30997 ;;		_RADIO_ReadRandom
 30998 ;;		_SetCallbackSoftwareTimers
 30999 ;;		_StopAllSoftwareTimers
 31000 ;;		_srand
 31001 ;; This function is called by:
 31002 ;;		_main
 31003 ;; This function uses a non-reentrant model
 31004 ;;
 31005                           
 31006                           	psect	text158
 31007  00670C                     __ptext158:
 31008                           	opt stack 0
 31009  00670C                     _LORAWAN_Init:
 31010                           	opt stack 17
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 31014                           
 31015                           ; BSR set to: 0
 31016                           ;incstack = 0
 31017  00670C  0102               	movlb	2	; () banked
 31018  00670E  51F0               	movf	(_loRa+240)& (0+255),w,b
 31019  006710  E108               	bnz	l15749
 31020                           
 31021                           ; BSR set to: 2
 31022                           ;lorawan_eu.c: 127: {
 31023                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 31024  006712  EC8D  F034         	call	_CreateAllSoftwareTimers	;wreg free
 31025                           
 31026                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 31027  006716  EC1B  F02B         	call	_SetCallbackSoftwareTimers	;wreg free
 31028                           
 31029                           ; BSR set to: 0
 31030                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 31031  00671A  0E01               	movlw	1
 31032  00671C  0102               	movlb	2	; () banked
 31033  00671E  6FF0               	movwf	(_loRa+240)& (0+255),b
 31034                           
 31035                           ;lorawan_eu.c: 131: }
 31036  006720  D002               	goto	l15751
 31037  006722                     l15749:
 31038                           
 31039                           ; BSR set to: 2
 31040                           ;lorawan_eu.c: 132: else
 31041                           ;lorawan_eu.c: 133: {
 31042                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 31043  006722  EC04  F035         	call	_StopAllSoftwareTimers	;wreg free
 31044  006726                     l15751:
 31045                           
 31046                           ;lorawan_eu.c: 135: }
 31047                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 31048  006726  C0A6  F0E8         	movff	LORAWAN_Init@RxPayload,_rxPayload
 31049  00672A  C0A7  F0E9         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 31050                           
 31051                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 31052  00672E  C0A8  F0EA         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 31053  006732  C0A9  F0EB         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 31054                           
 31055                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 31056  006736  0EFF               	movlw	low (_radioBuffer+16)
 31057  006738  0100               	movlb	0	; () banked
 31058  00673A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31059  00673C  0E05               	movlw	high (_radioBuffer+16)
 31060  00673E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31061  006740  0EA0               	movlw	160
 31062  006742  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31063  006744  0E27               	movlw	39
 31064  006746  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31065  006748  0EBE               	movlw	190
 31066  00674A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31067  00674C  0E33               	movlw	51
 31068  00674E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31069  006750  EC36  F01C         	call	_RADIO_Init	;wreg free
 31070                           
 31071                           ; BSR set to: 1
 31072                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 31073  006754  EC60  F02F         	call	_RADIO_ReadRandom	;wreg free
 31074  006758  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 31075  00675C  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31076  006760  ECBE  F03B         	call	_srand	;wreg free
 31077                           
 31078                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 31079  006764  0E00               	movlw	0
 31080  006766  EF40  F01F         	goto	_LORAWAN_Reset
 31081  00676A                     __end_of_LORAWAN_Init:
 31082                           	opt stack 0
 31083                           tosu	equ	0xFFF
 31084                           tosh	equ	0xFFE
 31085                           tosl	equ	0xFFD
 31086                           pclath	equ	0xFFA
 31087                           tblptru	equ	0xFF8
 31088                           tblptrh	equ	0xFF7
 31089                           tblptrl	equ	0xFF6
 31090                           tablat	equ	0xFF5
 31091                           prodh	equ	0xFF4
 31092                           prodl	equ	0xFF3
 31093                           intcon	equ	0xFF2
 31094                           intcon2	equ	0xFF1
 31095                           intcon3	equ	0xFF0
 31096                           indf0	equ	0xFEF
 31097                           postinc0	equ	0xFEE
 31098                           plusw0	equ	0xFEB
 31099                           fsr0h	equ	0xFEA
 31100                           fsr0l	equ	0xFE9
 31101                           wreg	equ	0xFE8
 31102                           postinc1	equ	0xFE6
 31103                           postdec1	equ	0xFE5
 31104                           plusw1	equ	0xFE3
 31105                           fsr1h	equ	0xFE2
 31106                           fsr1l	equ	0xFE1
 31107                           indf2	equ	0xFDF
 31108                           postinc2	equ	0xFDE
 31109                           postdec2	equ	0xFDD
 31110                           plusw2	equ	0xFDB
 31111                           fsr2h	equ	0xFDA
 31112                           fsr2l	equ	0xFD9
 31113                           status	equ	0xFD8
 31114                           
 31115 ;; *************** function _srand *****************
 31116 ;; Defined at:
 31117 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 31118 ;; Parameters:    Size  Location     Type
 31119 ;;  x               2   21[BANK0 ] unsigned int 
 31120 ;; Auto vars:     Size  Location     Type
 31121 ;;		None
 31122 ;; Return value:  Size  Location     Type
 31123 ;;                  1    wreg      void 
 31124 ;; Registers used:
 31125 ;;		status,2
 31126 ;; Tracked objects:
 31127 ;;		On entry : 0/1
 31128 ;;		On exit  : 0/0
 31129 ;;		Unchanged: 0/0
 31130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31135 ;;Total ram usage:        2 bytes
 31136 ;; Hardware stack levels used:    1
 31137 ;; Hardware stack levels required when called:    7
 31138 ;; This function calls:
 31139 ;;		Nothing
 31140 ;; This function is called by:
 31141 ;;		_LORAWAN_Init
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text159
 31146  00777C                     __ptext159:
 31147                           	opt stack 0
 31148  00777C                     _srand:
 31149                           	opt stack 22
 31150                           
 31151                           ;incstack = 0
 31152  00777C  C075  F052         	movff	srand@x,_randx
 31153  007780  C076  F053         	movff	srand@x+1,_randx+1
 31154  007784  6A54               	clrf	_randx+2,c
 31155  007786  6A55               	clrf	_randx+3,c
 31156  007788  0012               	return		;funcret
 31157  00778A                     __end_of_srand:
 31158                           	opt stack 0
 31159                           tosu	equ	0xFFF
 31160                           tosh	equ	0xFFE
 31161                           tosl	equ	0xFFD
 31162                           pclath	equ	0xFFA
 31163                           tblptru	equ	0xFF8
 31164                           tblptrh	equ	0xFF7
 31165                           tblptrl	equ	0xFF6
 31166                           tablat	equ	0xFF5
 31167                           prodh	equ	0xFF4
 31168                           prodl	equ	0xFF3
 31169                           intcon	equ	0xFF2
 31170                           intcon2	equ	0xFF1
 31171                           intcon3	equ	0xFF0
 31172                           indf0	equ	0xFEF
 31173                           postinc0	equ	0xFEE
 31174                           plusw0	equ	0xFEB
 31175                           fsr0h	equ	0xFEA
 31176                           fsr0l	equ	0xFE9
 31177                           wreg	equ	0xFE8
 31178                           postinc1	equ	0xFE6
 31179                           postdec1	equ	0xFE5
 31180                           plusw1	equ	0xFE3
 31181                           fsr1h	equ	0xFE2
 31182                           fsr1l	equ	0xFE1
 31183                           indf2	equ	0xFDF
 31184                           postinc2	equ	0xFDE
 31185                           postdec2	equ	0xFDD
 31186                           plusw2	equ	0xFDB
 31187                           fsr2h	equ	0xFDA
 31188                           fsr2l	equ	0xFD9
 31189                           status	equ	0xFD8
 31190                           
 31191 ;; *************** function _SetCallbackSoftwareTimers *****************
 31192 ;; Defined at:
 31193 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31194 ;; Parameters:    Size  Location     Type
 31195 ;;		None
 31196 ;; Auto vars:     Size  Location     Type
 31197 ;;		None
 31198 ;; Return value:  Size  Location     Type
 31199 ;;                  1    wreg      void 
 31200 ;; Registers used:
 31201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31202 ;; Tracked objects:
 31203 ;;		On entry : F/2
 31204 ;;		On exit  : F/0
 31205 ;;		Unchanged: 0/0
 31206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31211 ;;Total ram usage:        0 bytes
 31212 ;; Hardware stack levels used:    1
 31213 ;; Hardware stack levels required when called:    8
 31214 ;; This function calls:
 31215 ;;		_SwTimerSetCallback
 31216 ;; This function is called by:
 31217 ;;		_LORAWAN_Init
 31218 ;; This function uses a non-reentrant model
 31219 ;;
 31220                           
 31221                           	psect	text160
 31222  005636                     __ptext160:
 31223                           	opt stack 0
 31224  005636                     _SetCallbackSoftwareTimers:
 31225                           	opt stack 21
 31226                           
 31227                           ; BSR set to: 2
 31228                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31229                           
 31230                           ;incstack = 0
 31231  005636  0EEC               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31232  005638  0100               	movlb	0	; () banked
 31233  00563A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31234  00563C  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31235  00563E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31236  005640  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31237  005642  0102               	movlb	2	; () banked
 31238  005644  51E2               	movf	(_loRa+226)& (0+255),w,b
 31239  005646  EC38  F038         	call	_SwTimerSetCallback
 31240                           
 31241                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31242  00564A  0E34               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31243  00564C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31244  00564E  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31245  005650  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31246  005652  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31247  005654  0102               	movlb	2	; () banked
 31248  005656  51E3               	movf	(_loRa+227)& (0+255),w,b
 31249  005658  EC38  F038         	call	_SwTimerSetCallback
 31250                           
 31251                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31252  00565C  0EDE               	movlw	low _LORAWAN_LinkCheckCallback
 31253  00565E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31254  005660  0E3F               	movlw	high _LORAWAN_LinkCheckCallback
 31255  005662  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31256  005664  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31257  005666  0102               	movlb	2	; () banked
 31258  005668  51E7               	movf	(_loRa+231)& (0+255),w,b
 31259  00566A  EC38  F038         	call	_SwTimerSetCallback
 31260                           
 31261                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31262  00566E  0EEC               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31263  005670  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31264  005672  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31265  005674  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31266  005676  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31267  005678  0102               	movlb	2	; () banked
 31268  00567A  51E4               	movf	(_loRa+228)& (0+255),w,b
 31269  00567C  EC38  F038         	call	_SwTimerSetCallback
 31270                           
 31271                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31272  005680  0E34               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31273  005682  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31274  005684  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31275  005686  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31276  005688  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31277  00568A  0102               	movlb	2	; () banked
 31278  00568C  51E5               	movf	(_loRa+229)& (0+255),w,b
 31279  00568E  EC38  F038         	call	_SwTimerSetCallback
 31280                           
 31281                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31282  005692  0E5C               	movlw	low _AckRetransmissionCallback
 31283  005694  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31284  005696  0E4A               	movlw	high _AckRetransmissionCallback
 31285  005698  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31286  00569A  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31287  00569C  0102               	movlb	2	; () banked
 31288  00569E  51E8               	movf	(_loRa+232)& (0+255),w,b
 31289  0056A0  EC38  F038         	call	_SwTimerSetCallback
 31290                           
 31291                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31292  0056A4  0E3C               	movlw	low _AutomaticReplyCallback
 31293  0056A6  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31294  0056A8  0E74               	movlw	high _AutomaticReplyCallback
 31295  0056AA  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31296  0056AC  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31297  0056AE  0102               	movlb	2	; () banked
 31298  0056B0  51E6               	movf	(_loRa+230)& (0+255),w,b
 31299  0056B2  EC38  F038         	call	_SwTimerSetCallback
 31300                           
 31301                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31302  0056B6  0EC8               	movlw	low _UnconfirmedTransmissionCallback
 31303  0056B8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31304  0056BA  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31305  0056BC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31306  0056BE  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31307  0056C0  0102               	movlb	2	; () banked
 31308  0056C2  51EA               	movf	(_loRa+234)& (0+255),w,b
 31309  0056C4  EC38  F038         	call	_SwTimerSetCallback
 31310                           
 31311                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31312  0056C8  0E06               	movlw	low _UpdateJoinSuccessState
 31313  0056CA  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31314  0056CC  0E45               	movlw	high _UpdateJoinSuccessState
 31315  0056CE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31316  0056D0  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31317  0056D2  0102               	movlb	2	; () banked
 31318  0056D4  51F3               	movf	(_loRa+243)& (0+255),w,b
 31319  0056D6  EC38  F038         	call	_SwTimerSetCallback
 31320                           
 31321                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31322  0056DA  0E02               	movlw	low _DutyCycleCallback
 31323  0056DC  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31324  0056DE  0E21               	movlw	high _DutyCycleCallback
 31325  0056E0  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31326  0056E2  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31327  0056E4  0102               	movlb	2	; () banked
 31328  0056E6  51E9               	movf	(_loRa+233)& (0+255),w,b
 31329  0056E8  EF38  F038         	goto	_SwTimerSetCallback
 31330  0056EC                     __end_of_SetCallbackSoftwareTimers:
 31331                           	opt stack 0
 31332                           tosu	equ	0xFFF
 31333                           tosh	equ	0xFFE
 31334                           tosl	equ	0xFFD
 31335                           pclath	equ	0xFFA
 31336                           tblptru	equ	0xFF8
 31337                           tblptrh	equ	0xFF7
 31338                           tblptrl	equ	0xFF6
 31339                           tablat	equ	0xFF5
 31340                           prodh	equ	0xFF4
 31341                           prodl	equ	0xFF3
 31342                           intcon	equ	0xFF2
 31343                           intcon2	equ	0xFF1
 31344                           intcon3	equ	0xFF0
 31345                           indf0	equ	0xFEF
 31346                           postinc0	equ	0xFEE
 31347                           plusw0	equ	0xFEB
 31348                           fsr0h	equ	0xFEA
 31349                           fsr0l	equ	0xFE9
 31350                           wreg	equ	0xFE8
 31351                           postinc1	equ	0xFE6
 31352                           postdec1	equ	0xFE5
 31353                           plusw1	equ	0xFE3
 31354                           fsr1h	equ	0xFE2
 31355                           fsr1l	equ	0xFE1
 31356                           indf2	equ	0xFDF
 31357                           postinc2	equ	0xFDE
 31358                           postdec2	equ	0xFDD
 31359                           plusw2	equ	0xFDB
 31360                           fsr2h	equ	0xFDA
 31361                           fsr2l	equ	0xFD9
 31362                           status	equ	0xFD8
 31363                           
 31364 ;; *************** function _RADIO_ReadRandom *****************
 31365 ;; Defined at:
 31366 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31367 ;; Parameters:    Size  Location     Type
 31368 ;;		None
 31369 ;; Auto vars:     Size  Location     Type
 31370 ;;  retVal          2   18[BANK0 ] unsigned int 
 31371 ;;  i               1   20[BANK0 ] unsigned char 
 31372 ;; Return value:  Size  Location     Type
 31373 ;;                  2   16[BANK0 ] unsigned int 
 31374 ;; Registers used:
 31375 ;;		wreg, status,2, status,0, cstack
 31376 ;; Tracked objects:
 31377 ;;		On entry : F/1
 31378 ;;		On exit  : 0/0
 31379 ;;		Unchanged: 0/0
 31380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31381 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31382 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31384 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31385 ;;Total ram usage:        5 bytes
 31386 ;; Hardware stack levels used:    1
 31387 ;; Hardware stack levels required when called:   11
 31388 ;; This function calls:
 31389 ;;		_RADIO_RegisterRead
 31390 ;;		_RADIO_RegisterWrite
 31391 ;;		_RADIO_WriteMode
 31392 ;;		_SystemBlockingWaitMs
 31393 ;; This function is called by:
 31394 ;;		_LORAWAN_Init
 31395 ;; This function uses a non-reentrant model
 31396 ;;
 31397                           
 31398                           	psect	text161
 31399  005EC0                     __ptext161:
 31400                           	opt stack 0
 31401  005EC0                     _RADIO_ReadRandom:
 31402                           	opt stack 18
 31403                           
 31404                           ; BSR set to: 1
 31405                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31406                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31407                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31408                           
 31409                           ; BSR set to: 0
 31410                           ;incstack = 0
 31411  005EC0  0100               	movlb	0	; () banked
 31412  005EC2  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31413  005EC4  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31414                           
 31415                           ; BSR set to: 0
 31416                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31417  005EC6  0E01               	movlw	1
 31418  005EC8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31419  005ECA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31420  005ECC  0E00               	movlw	0
 31421  005ECE  EC5F  F028         	call	_RADIO_WriteMode
 31422                           
 31423                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31424  005ED2  0100               	movlb	0	; () banked
 31425  005ED4  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31426  005ED6  0E11               	movlw	17
 31427  005ED8  EC4B  F03A         	call	_RADIO_RegisterWrite
 31428                           
 31429                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31430  005EDC  0E01               	movlw	1
 31431  005EDE  0100               	movlb	0	; () banked
 31432  005EE0  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31433  005EE2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31434  005EE4  0E05               	movlw	5
 31435  005EE6  EC5F  F028         	call	_RADIO_WriteMode
 31436                           
 31437                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31438  005EEA  0100               	movlb	0	; () banked
 31439  005EEC  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31440  005EEE                     l15503:
 31441                           
 31442                           ; BSR set to: 0
 31443                           ;radio_driver_SX1276.c: 1377: {
 31444                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31445  005EEE  0E01               	movlw	1
 31446  005EF0  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31447  005EF2  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31448  005EF4  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31449  005EF6  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31450  005EF8  ECD7  F038         	call	_SystemBlockingWaitMs	;wreg free
 31451                           
 31452                           ; BSR set to: 0
 31453                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31454  005EFC  90D8               	bcf	status,0,c
 31455  005EFE  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31456  005F00  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31457                           
 31458                           ; BSR set to: 0
 31459                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31460  005F02  0E2C               	movlw	44
 31461  005F04  EC63  F039         	call	_RADIO_RegisterRead
 31462  005F08  0B01               	andlw	1
 31463  005F0A  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31464  005F0C  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31465                           
 31466                           ; BSR set to: 0
 31467  005F0E  0E0F               	movlw	15
 31468  005F10  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31469  005F12  D7ED               	goto	l15503
 31470                           
 31471                           ; BSR set to: 0
 31472                           ;radio_driver_SX1276.c: 1381: }
 31473                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31474  005F14  0E01               	movlw	1
 31475  005F16  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31476  005F18  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31477  005F1A  0E00               	movlw	0
 31478  005F1C  EC5F  F028         	call	_RADIO_WriteMode
 31479                           
 31480                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31481  005F20  0100               	movlb	0	; () banked
 31482  005F22  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31483  005F24  0E12               	movlw	18
 31484  005F26  EC4B  F03A         	call	_RADIO_RegisterWrite
 31485                           
 31486                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31487  005F2A  0100               	movlb	0	; () banked
 31488  005F2C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31489  005F2E  0E11               	movlw	17
 31490  005F30  EC4B  F03A         	call	_RADIO_RegisterWrite
 31491                           
 31492                           ;radio_driver_SX1276.c: 1389: return retVal;
 31493  005F34  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31494  005F38  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31495  005F3C  0012               	return		;funcret
 31496  005F3E                     __end_of_RADIO_ReadRandom:
 31497                           	opt stack 0
 31498                           tosu	equ	0xFFF
 31499                           tosh	equ	0xFFE
 31500                           tosl	equ	0xFFD
 31501                           pclath	equ	0xFFA
 31502                           tblptru	equ	0xFF8
 31503                           tblptrh	equ	0xFF7
 31504                           tblptrl	equ	0xFF6
 31505                           tablat	equ	0xFF5
 31506                           prodh	equ	0xFF4
 31507                           prodl	equ	0xFF3
 31508                           intcon	equ	0xFF2
 31509                           intcon2	equ	0xFF1
 31510                           intcon3	equ	0xFF0
 31511                           indf0	equ	0xFEF
 31512                           postinc0	equ	0xFEE
 31513                           plusw0	equ	0xFEB
 31514                           fsr0h	equ	0xFEA
 31515                           fsr0l	equ	0xFE9
 31516                           wreg	equ	0xFE8
 31517                           postinc1	equ	0xFE6
 31518                           postdec1	equ	0xFE5
 31519                           plusw1	equ	0xFE3
 31520                           fsr1h	equ	0xFE2
 31521                           fsr1l	equ	0xFE1
 31522                           indf2	equ	0xFDF
 31523                           postinc2	equ	0xFDE
 31524                           postdec2	equ	0xFDD
 31525                           plusw2	equ	0xFDB
 31526                           fsr2h	equ	0xFDA
 31527                           fsr2l	equ	0xFD9
 31528                           status	equ	0xFD8
 31529                           
 31530 ;; *************** function _LORAWAN_Reset *****************
 31531 ;; Defined at:
 31532 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31533 ;; Parameters:    Size  Location     Type
 31534 ;;  ismBandNew      1    wreg     enum E8047
 31535 ;; Auto vars:     Size  Location     Type
 31536 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 31537 ;; Return value:  Size  Location     Type
 31538 ;;                  1    wreg      void 
 31539 ;; Registers used:
 31540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31541 ;; Tracked objects:
 31542 ;;		On entry : 0/1
 31543 ;;		On exit  : D/0
 31544 ;;		Unchanged: 0/0
 31545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31550 ;;Total ram usage:        1 bytes
 31551 ;; Hardware stack levels used:    1
 31552 ;; Hardware stack levels required when called:   12
 31553 ;; This function calls:
 31554 ;;		_InitDefault433Channels
 31555 ;;		_InitDefault868Channels
 31556 ;;		_LORAWAN_LinkCheckConfigure
 31557 ;;		_RADIO_Init
 31558 ;;		_RADIO_SetLoRaSyncWord
 31559 ;;		_StopAllSoftwareTimers
 31560 ;;		_UpdateMinMaxChDataRate
 31561 ;;		_memset
 31562 ;; This function is called by:
 31563 ;;		_LORAWAN_Init
 31564 ;; This function uses a non-reentrant model
 31565 ;;
 31566                           
 31567                           	psect	text162
 31568  003E80                     __ptext162:
 31569                           	opt stack 0
 31570  003E80                     _LORAWAN_Reset:
 31571                           	opt stack 17
 31572                           
 31573                           ;incstack = 0
 31574                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31575  003E80  0100               	movlb	0	; () banked
 31576  003E82  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31577                           
 31578                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31579  003E84  0102               	movlb	2	; () banked
 31580  003E86  05F0               	decf	(_loRa+240)& (0+255),w,b
 31581  003E88  E102               	bnz	l15527
 31582                           
 31583                           ; BSR set to: 2
 31584                           ;lorawan_eu.c: 151: {
 31585                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31586  003E8A  EC04  F035         	call	_StopAllSoftwareTimers	;wreg free
 31587  003E8E                     l15527:
 31588                           
 31589                           ;lorawan_eu.c: 153: }
 31590                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31591  003E8E  0E34               	movlw	52
 31592  003E90  0102               	movlb	2	; () banked
 31593  003E92  6FF4               	movwf	(_loRa+244)& (0+255),b
 31594                           
 31595                           ; BSR set to: 2
 31596                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31597  003E94  51F4               	movf	(_loRa+244)& (0+255),w,b
 31598  003E96  EC2B  F03C         	call	_RADIO_SetLoRaSyncWord
 31599                           
 31600                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31601  003E9A  0102               	movlb	2	; () banked
 31602  003E9C  6B02               	clrf	(_loRa+2)& (0+255),b
 31603  003E9E  6B03               	clrf	(_loRa+3)& (0+255),b
 31604  003EA0  6B04               	clrf	(_loRa+4)& (0+255),b
 31605  003EA2  6B05               	clrf	(_loRa+5)& (0+255),b
 31606                           
 31607                           ; BSR set to: 2
 31608                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31609  003EA4  69DD               	setf	(_loRa+221)& (0+255),b
 31610                           
 31611                           ; BSR set to: 2
 31612                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31613  003EA6  6BDE               	clrf	(_loRa+222)& (0+255),b
 31614                           
 31615                           ; BSR set to: 2
 31616                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31617  003EA8  6BC8               	clrf	(_loRa+200)& (0+255),b
 31618  003EAA  6BC9               	clrf	(_loRa+201)& (0+255),b
 31619  003EAC  6BCA               	clrf	(_loRa+202)& (0+255),b
 31620  003EAE  6BCB               	clrf	(_loRa+203)& (0+255),b
 31621                           
 31622                           ; BSR set to: 2
 31623                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31624  003EB0  6BD4               	clrf	(_loRa+212)& (0+255),b
 31625  003EB2  6BD5               	clrf	(_loRa+213)& (0+255),b
 31626                           
 31627                           ; BSR set to: 2
 31628                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31629  003EB4  6B0A               	clrf	(_loRa+10)& (0+255),b
 31630  003EB6  6B0B               	clrf	(_loRa+11)& (0+255),b
 31631  003EB8  6B0C               	clrf	(_loRa+12)& (0+255),b
 31632  003EBA  6B0D               	clrf	(_loRa+13)& (0+255),b
 31633                           
 31634                           ; BSR set to: 2
 31635                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31636  003EBC  6B06               	clrf	(_loRa+6)& (0+255),b
 31637  003EBE  6B07               	clrf	(_loRa+7)& (0+255),b
 31638  003EC0  6B08               	clrf	(_loRa+8)& (0+255),b
 31639  003EC2  6B09               	clrf	(_loRa+9)& (0+255),b
 31640                           
 31641                           ; BSR set to: 2
 31642                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31643  003EC4  6BD2               	clrf	(_loRa+210)& (0+255),b
 31644  003EC6  6BD3               	clrf	(_loRa+211)& (0+255),b
 31645                           
 31646                           ; BSR set to: 2
 31647                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31648  003EC8  6BDC               	clrf	(_loRa+220)& (0+255),b
 31649  003ECA  0E01               	movlw	1
 31650  003ECC  6FDB               	movwf	(_loRa+219)& (0+255),b
 31651                           
 31652                           ; BSR set to: 2
 31653                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31654  003ECE  6BD0               	clrf	(_loRa+208)& (0+255),b
 31655  003ED0  6BD1               	clrf	(_loRa+209)& (0+255),b
 31656                           
 31657                           ; BSR set to: 2
 31658                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31659  003ED2  6BEE               	clrf	(_loRa+238)& (0+255),b
 31660                           
 31661                           ; BSR set to: 2
 31662                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31663  003ED4  6BEF               	clrf	(_loRa+239)& (0+255),b
 31664                           
 31665                           ; BSR set to: 2
 31666                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31667  003ED6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31668  003ED8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31669  003EDA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31670  003EDC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31671                           
 31672                           ; BSR set to: 2
 31673                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31674  003EDE  9503               	bcf	(_loRa+3)& (0+255),2,b
 31675                           
 31676                           ; BSR set to: 2
 31677                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31678  003EE0  6B02               	clrf	(_loRa+2)& (0+255),b
 31679  003EE2  6B03               	clrf	(_loRa+3)& (0+255),b
 31680  003EE4  6B04               	clrf	(_loRa+4)& (0+255),b
 31681  003EE6  6B05               	clrf	(_loRa+5)& (0+255),b
 31682                           
 31683                           ; BSR set to: 2
 31684                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31685  003EE8  6B00               	clrf	_loRa& (0+255),b
 31686  003EEA  6B01               	clrf	(_loRa+1)& (0+255),b
 31687                           
 31688                           ; BSR set to: 2
 31689                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31690  003EEC  0E07               	movlw	7
 31691  003EEE  6FD7               	movwf	(_loRa+215)& (0+255),b
 31692                           
 31693                           ; BSR set to: 2
 31694                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31695  003EF0  6BD6               	clrf	(_loRa+214)& (0+255),b
 31696                           
 31697                           ; BSR set to: 2
 31698                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31699  003EF2  0E01               	movlw	1
 31700  003EF4  6FD9               	movwf	(_loRa+217)& (0+255),b
 31701                           
 31702                           ; BSR set to: 2
 31703                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31704  003EF6  6FD8               	movwf	(_loRa+216)& (0+255),b
 31705                           
 31706                           ; BSR set to: 2
 31707                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31708  003EF8  69E0               	setf	(_loRa+224)& (0+255),b
 31709                           
 31710                           ; BSR set to: 2
 31711                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31712  003EFA  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31713                           
 31714                           ; BSR set to: 2
 31715                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31716  003EFE  6B12               	clrf	(_loRa+18)& (0+255),b
 31717                           
 31718                           ; BSR set to: 2
 31719                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31720  003F00  0E10               	movlw	16
 31721  003F02  6FED               	movwf	(_loRa+237)& (0+255),b
 31722                           
 31723                           ; BSR set to: 2
 31724                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31725  003F04  0100               	movlb	0	; () banked
 31726  003F06  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31727  003F08  E11A               	bnz	l15589
 31728                           
 31729                           ; BSR set to: 0
 31730                           ;lorawan_eu.c: 193: {
 31731                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31732  003F0A  0EFF               	movlw	low (_radioBuffer+16)
 31733  003F0C  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31734  003F0E  0E05               	movlw	high (_radioBuffer+16)
 31735  003F10  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31736  003F12  0EA0               	movlw	160
 31737  003F14  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31738  003F16  0E27               	movlw	39
 31739  003F18  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31740  003F1A  0EBE               	movlw	190
 31741  003F1C  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31742  003F1E  0E33               	movlw	51
 31743  003F20  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31744  003F22  EC36  F01C         	call	_RADIO_Init	;wreg free
 31745                           
 31746                           ; BSR set to: 1
 31747                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31748  003F26  ECCA  F031         	call	_InitDefault868Channels	;wreg free
 31749                           
 31750                           ; BSR set to: 0
 31751                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31752  003F2A  0102               	movlb	2	; () banked
 31753  003F2C  6B1C               	clrf	(_loRa+28)& (0+255),b
 31754                           
 31755                           ; BSR set to: 2
 31756                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31757  003F2E  0E08               	movlw	8
 31758  003F30  6F18               	movwf	(_loRa+24)& (0+255),b
 31759  003F32  0EE6               	movlw	230
 31760  003F34  6F19               	movwf	(_loRa+25)& (0+255),b
 31761  003F36  0ED3               	movlw	211
 31762  003F38  6F1A               	movwf	(_loRa+26)& (0+255),b
 31763  003F3A  0E33               	movlw	51
 31764  003F3C  D019               	goto	L20
 31765  003F3E                     l15589:
 31766                           
 31767                           ; BSR set to: 0
 31768                           ;lorawan_eu.c: 201: else
 31769                           ;lorawan_eu.c: 202: {
 31770                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31771  003F3E  0EFF               	movlw	low (_radioBuffer+16)
 31772  003F40  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31773  003F42  0E05               	movlw	high (_radioBuffer+16)
 31774  003F44  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31775  003F46  0E20               	movlw	32
 31776  003F48  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31777  003F4A  0EA2               	movlw	162
 31778  003F4C  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31779  003F4E  0ED3               	movlw	211
 31780  003F50  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31781  003F52  0E19               	movlw	25
 31782  003F54  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31783  003F56  EC36  F01C         	call	_RADIO_Init	;wreg free
 31784                           
 31785                           ; BSR set to: 1
 31786                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31787  003F5A  ECFD  F031         	call	_InitDefault433Channels	;wreg free
 31788                           
 31789                           ; BSR set to: 0
 31790                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31791  003F5E  0102               	movlb	2	; () banked
 31792  003F60  6B1C               	clrf	(_loRa+28)& (0+255),b
 31793                           
 31794                           ; BSR set to: 2
 31795                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31796  003F62  0E28               	movlw	40
 31797  003F64  6F18               	movwf	(_loRa+24)& (0+255),b
 31798  003F66  0E76               	movlw	118
 31799  003F68  6F19               	movwf	(_loRa+25)& (0+255),b
 31800  003F6A  0EE8               	movlw	232
 31801  003F6C  6F1A               	movwf	(_loRa+26)& (0+255),b
 31802  003F6E  0E19               	movlw	25
 31803  003F70                     L20:
 31804  003F70  6F1B               	movwf	(_loRa+27)& (0+255),b
 31805                           
 31806                           ; BSR set to: 2
 31807                           ;lorawan_eu.c: 209: }
 31808                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31809  003F72  0E01               	movlw	1
 31810  003F74  6FE1               	movwf	(_loRa+225)& (0+255),b
 31811                           
 31812                           ; BSR set to: 2
 31813                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31814  003F76  6BDF               	clrf	(_loRa+223)& (0+255),b
 31815                           
 31816                           ; BSR set to: 2
 31817                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31818  003F78  ECD0  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31819                           
 31820                           ; BSR set to: 0
 31821                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31822  003F7C  0102               	movlb	2	; () banked
 31823  003F7E  6BA5               	clrf	(_loRa+165)& (0+255),b
 31824  003F80  6BA6               	clrf	(_loRa+166)& (0+255),b
 31825                           
 31826                           ; BSR set to: 2
 31827                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31828  003F82  0E1D               	movlw	low (_loRa+29)
 31829  003F84  0100               	movlb	0	; () banked
 31830  003F86  6F64               	movwf	memset@p1& (0+255),b
 31831  003F88  0E02               	movlw	high (_loRa+29)
 31832  003F8A  6F65               	movwf	(memset@p1+1)& (0+255),b
 31833  003F8C  6B67               	clrf	(memset@c+1)& (0+255),b
 31834  003F8E  6B66               	clrf	memset@c& (0+255),b
 31835  003F90  6B69               	clrf	(memset@n+1)& (0+255),b
 31836  003F92  0E69               	movlw	105
 31837  003F94  6F68               	movwf	memset@n& (0+255),b
 31838  003F96  ECEC  F038         	call	_memset	;wreg free
 31839                           
 31840                           ; BSR set to: 0
 31841                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31842  003F9A  0E03               	movlw	3
 31843  003F9C  0102               	movlb	2	; () banked
 31844  003F9E  6F95               	movwf	(_loRa+149)& (0+255),b
 31845  003FA0  0EE8               	movlw	232
 31846  003FA2  6F94               	movwf	(_loRa+148)& (0+255),b
 31847                           
 31848                           ; BSR set to: 2
 31849                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31850  003FA4  0E07               	movlw	7
 31851  003FA6  6F97               	movwf	(_loRa+151)& (0+255),b
 31852  003FA8  0ED0               	movlw	208
 31853  003FAA  6F96               	movwf	(_loRa+150)& (0+255),b
 31854                           
 31855                           ; BSR set to: 2
 31856                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31857  003FAC  0E13               	movlw	19
 31858  003FAE  6F99               	movwf	(_loRa+153)& (0+255),b
 31859  003FB0  0E88               	movlw	136
 31860  003FB2  6F98               	movwf	(_loRa+152)& (0+255),b
 31861                           
 31862                           ; BSR set to: 2
 31863                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31864  003FB4  0E17               	movlw	23
 31865  003FB6  6F9B               	movwf	(_loRa+155)& (0+255),b
 31866  003FB8  0E70               	movlw	112
 31867  003FBA  6F9A               	movwf	(_loRa+154)& (0+255),b
 31868                           
 31869                           ; BSR set to: 2
 31870                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 31871  003FBC  0E07               	movlw	7
 31872  003FBE  6FA1               	movwf	(_loRa+161)& (0+255),b
 31873  003FC0  0ED0               	movlw	208
 31874  003FC2  6FA0               	movwf	(_loRa+160)& (0+255),b
 31875                           
 31876                           ; BSR set to: 2
 31877                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 31878  003FC4  0E20               	movlw	32
 31879  003FC6  6FA3               	movwf	(_loRa+163)& (0+255),b
 31880                           
 31881                           ; BSR set to: 2
 31882                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 31883  003FC8  0E40               	movlw	64
 31884  003FCA  6FA2               	movwf	(_loRa+162)& (0+255),b
 31885                           
 31886                           ; BSR set to: 2
 31887                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 31888  003FCC  6F9D               	movwf	(_loRa+157)& (0+255),b
 31889  003FCE  6B9C               	clrf	(_loRa+156)& (0+255),b
 31890                           
 31891                           ; BSR set to: 2
 31892                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 31893  003FD0  6F9F               	movwf	(_loRa+159)& (0+255),b
 31894  003FD2  6B9E               	clrf	(_loRa+158)& (0+255),b
 31895                           
 31896                           ; BSR set to: 2
 31897                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 31898  003FD4  0100               	movlb	0	; () banked
 31899  003FD6  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 31900  003FD8  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 31901  003FDA  EF68  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 31902  003FDE                     __end_of_LORAWAN_Reset:
 31903                           	opt stack 0
 31904                           tosu	equ	0xFFF
 31905                           tosh	equ	0xFFE
 31906                           tosl	equ	0xFFD
 31907                           pclath	equ	0xFFA
 31908                           tblptru	equ	0xFF8
 31909                           tblptrh	equ	0xFF7
 31910                           tblptrl	equ	0xFF6
 31911                           tablat	equ	0xFF5
 31912                           prodh	equ	0xFF4
 31913                           prodl	equ	0xFF3
 31914                           intcon	equ	0xFF2
 31915                           intcon2	equ	0xFF1
 31916                           intcon3	equ	0xFF0
 31917                           indf0	equ	0xFEF
 31918                           postinc0	equ	0xFEE
 31919                           plusw0	equ	0xFEB
 31920                           fsr0h	equ	0xFEA
 31921                           fsr0l	equ	0xFE9
 31922                           wreg	equ	0xFE8
 31923                           postinc1	equ	0xFE6
 31924                           postdec1	equ	0xFE5
 31925                           plusw1	equ	0xFE3
 31926                           fsr1h	equ	0xFE2
 31927                           fsr1l	equ	0xFE1
 31928                           indf2	equ	0xFDF
 31929                           postinc2	equ	0xFDE
 31930                           postdec2	equ	0xFDD
 31931                           plusw2	equ	0xFDB
 31932                           fsr2h	equ	0xFDA
 31933                           fsr2l	equ	0xFD9
 31934                           status	equ	0xFD8
 31935                           
 31936 ;; *************** function _UpdateMinMaxChDataRate *****************
 31937 ;; Defined at:
 31938 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31939 ;; Parameters:    Size  Location     Type
 31940 ;;		None
 31941 ;; Auto vars:     Size  Location     Type
 31942 ;;  i               1    5[BANK0 ] unsigned char 
 31943 ;; Return value:  Size  Location     Type
 31944 ;;                  1    wreg      void 
 31945 ;; Registers used:
 31946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31947 ;; Tracked objects:
 31948 ;;		On entry : F/2
 31949 ;;		On exit  : F/0
 31950 ;;		Unchanged: 0/0
 31951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31956 ;;Total ram usage:        2 bytes
 31957 ;; Hardware stack levels used:    1
 31958 ;; Hardware stack levels required when called:    7
 31959 ;; This function calls:
 31960 ;;		Nothing
 31961 ;; This function is called by:
 31962 ;;		_LORAWAN_Reset
 31963 ;; This function uses a non-reentrant model
 31964 ;;
 31965                           
 31966                           	psect	text163
 31967  0057A0                     __ptext163:
 31968                           	opt stack 0
 31969  0057A0                     _UpdateMinMaxChDataRate:
 31970                           	opt stack 21
 31971                           
 31972                           ; BSR set to: 2
 31973                           ;lorawan.c: 1065: uint8_t i;
 31974                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 31975                           
 31976                           ;incstack = 0
 31977  0057A0  0E07               	movlw	7
 31978  0057A2  6FEB               	movwf	(_loRa+235)& (0+255),b
 31979                           
 31980                           ; BSR set to: 2
 31981                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 31982  0057A4  6BEC               	clrf	(_loRa+236)& (0+255),b
 31983                           
 31984                           ; BSR set to: 2
 31985                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 31986  0057A6  0100               	movlb	0	; () banked
 31987  0057A8  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 31988  0057AA  D04E               	goto	l15075
 31989  0057AC                     l15063:
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;lorawan.c: 1072: {
 31993                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 31994  0057AC  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31995  0057AE  0D0E               	mullw	14
 31996  0057B0  0E05               	movlw	low (_Channels+5)
 31997  0057B2  24F3               	addwf	prodl,w,c
 31998  0057B4  6ED9               	movwf	fsr2l,c
 31999  0057B6  0E04               	movlw	high (_Channels+5)
 32000  0057B8  20F4               	addwfc	prodh,w,c
 32001  0057BA  6EDA               	movwf	fsr2h,c
 32002  0057BC  50DF               	movf	223,w,c
 32003  0057BE  0B0F               	andlw	15
 32004  0057C0  0100               	movlb	0	; () banked
 32005  0057C2  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 32006  0057C4  0102               	movlb	2	; () banked
 32007  0057C6  51EB               	movf	(_loRa+235)& (0+255),w,b
 32008  0057C8  0100               	movlb	0	; () banked
 32009  0057CA  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 32010  0057CC  E216               	bc	l2095
 32011                           
 32012                           ; BSR set to: 0
 32013  0057CE  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32014  0057D0  0D0E               	mullw	14
 32015  0057D2  0E04               	movlw	low (_Channels+4)
 32016  0057D4  24F3               	addwf	prodl,w,c
 32017  0057D6  6ED9               	movwf	fsr2l,c
 32018  0057D8  0E04               	movlw	high (_Channels+4)
 32019  0057DA  20F4               	addwfc	prodh,w,c
 32020  0057DC  6EDA               	movwf	fsr2h,c
 32021  0057DE  04DE               	decf	postinc2,w,c
 32022  0057E0  E10C               	bnz	l2095
 32023                           
 32024                           ; BSR set to: 0
 32025                           ;lorawan.c: 1074: {
 32026                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 32027  0057E2  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32028  0057E4  0D0E               	mullw	14
 32029  0057E6  0E05               	movlw	low (_Channels+5)
 32030  0057E8  24F3               	addwf	prodl,w,c
 32031  0057EA  6ED9               	movwf	fsr2l,c
 32032  0057EC  0E04               	movlw	high (_Channels+5)
 32033  0057EE  20F4               	addwfc	prodh,w,c
 32034  0057F0  6EDA               	movwf	fsr2h,c
 32035  0057F2  50DF               	movf	223,w,c
 32036  0057F4  0B0F               	andlw	15
 32037  0057F6  0102               	movlb	2	; () banked
 32038  0057F8  6FEB               	movwf	(_loRa+235)& (0+255),b
 32039  0057FA                     l2095:
 32040                           
 32041                           ;lorawan.c: 1076: }
 32042                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 32043  0057FA  0100               	movlb	0	; () banked
 32044  0057FC  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32045  0057FE  0D0E               	mullw	14
 32046  005800  0E05               	movlw	low (_Channels+5)
 32047  005802  24F3               	addwf	prodl,w,c
 32048  005804  6ED9               	movwf	fsr2l,c
 32049  005806  0E04               	movlw	high (_Channels+5)
 32050  005808  20F4               	addwfc	prodh,w,c
 32051  00580A  6EDA               	movwf	fsr2h,c
 32052  00580C  38DF               	swapf	223,w,c
 32053  00580E  0B0F               	andlw	15
 32054  005810  0102               	movlb	2	; () banked
 32055  005812  61EC               	cpfslt	(_loRa+236)& (0+255),b
 32056  005814  D017               	goto	l15073
 32057                           
 32058                           ; BSR set to: 2
 32059  005816  0100               	movlb	0	; () banked
 32060  005818  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32061  00581A  0D0E               	mullw	14
 32062  00581C  0E04               	movlw	low (_Channels+4)
 32063  00581E  24F3               	addwf	prodl,w,c
 32064  005820  6ED9               	movwf	fsr2l,c
 32065  005822  0E04               	movlw	high (_Channels+4)
 32066  005824  20F4               	addwfc	prodh,w,c
 32067  005826  6EDA               	movwf	fsr2h,c
 32068  005828  04DE               	decf	postinc2,w,c
 32069  00582A  E10C               	bnz	l15073
 32070                           
 32071                           ; BSR set to: 0
 32072                           ;lorawan.c: 1078: {
 32073                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32074  00582C  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32075  00582E  0D0E               	mullw	14
 32076  005830  0E05               	movlw	low (_Channels+5)
 32077  005832  24F3               	addwf	prodl,w,c
 32078  005834  6ED9               	movwf	fsr2l,c
 32079  005836  0E04               	movlw	high (_Channels+5)
 32080  005838  20F4               	addwfc	prodh,w,c
 32081  00583A  6EDA               	movwf	fsr2h,c
 32082  00583C  38DF               	swapf	223,w,c
 32083  00583E  0B0F               	andlw	15
 32084  005840  0102               	movlb	2	; () banked
 32085  005842  6FEC               	movwf	(_loRa+236)& (0+255),b
 32086  005844                     l15073:
 32087  005844  0100               	movlb	0	; () banked
 32088  005846  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32089  005848                     l15075:
 32090                           
 32091                           ; BSR set to: 0
 32092  005848  0102               	movlb	2	; () banked
 32093  00584A  51ED               	movf	(_loRa+237)& (0+255),w,b
 32094  00584C  0100               	movlb	0	; () banked
 32095  00584E  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32096  005850  E3AD               	bnc	l15063
 32097                           
 32098                           ; BSR set to: 0
 32099  005852  0012               	return		;funcret
 32100  005854                     __end_of_UpdateMinMaxChDataRate:
 32101                           	opt stack 0
 32102                           tosu	equ	0xFFF
 32103                           tosh	equ	0xFFE
 32104                           tosl	equ	0xFFD
 32105                           pclath	equ	0xFFA
 32106                           tblptru	equ	0xFF8
 32107                           tblptrh	equ	0xFF7
 32108                           tblptrl	equ	0xFF6
 32109                           tablat	equ	0xFF5
 32110                           prodh	equ	0xFF4
 32111                           prodl	equ	0xFF3
 32112                           intcon	equ	0xFF2
 32113                           intcon2	equ	0xFF1
 32114                           intcon3	equ	0xFF0
 32115                           indf0	equ	0xFEF
 32116                           postinc0	equ	0xFEE
 32117                           plusw0	equ	0xFEB
 32118                           fsr0h	equ	0xFEA
 32119                           fsr0l	equ	0xFE9
 32120                           wreg	equ	0xFE8
 32121                           postinc1	equ	0xFE6
 32122                           postdec1	equ	0xFE5
 32123                           plusw1	equ	0xFE3
 32124                           fsr1h	equ	0xFE2
 32125                           fsr1l	equ	0xFE1
 32126                           indf2	equ	0xFDF
 32127                           postinc2	equ	0xFDE
 32128                           postdec2	equ	0xFDD
 32129                           plusw2	equ	0xFDB
 32130                           fsr2h	equ	0xFDA
 32131                           fsr2l	equ	0xFD9
 32132                           status	equ	0xFD8
 32133                           
 32134 ;; *************** function _StopAllSoftwareTimers *****************
 32135 ;; Defined at:
 32136 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32137 ;; Parameters:    Size  Location     Type
 32138 ;;		None
 32139 ;; Auto vars:     Size  Location     Type
 32140 ;;		None
 32141 ;; Return value:  Size  Location     Type
 32142 ;;                  1    wreg      void 
 32143 ;; Registers used:
 32144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32145 ;; Tracked objects:
 32146 ;;		On entry : F/2
 32147 ;;		On exit  : F/0
 32148 ;;		Unchanged: 0/0
 32149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32154 ;;Total ram usage:        0 bytes
 32155 ;; Hardware stack levels used:    1
 32156 ;; Hardware stack levels required when called:    8
 32157 ;; This function calls:
 32158 ;;		_SwTimerStop
 32159 ;; This function is called by:
 32160 ;;		_LORAWAN_Init
 32161 ;;		_LORAWAN_Reset
 32162 ;; This function uses a non-reentrant model
 32163 ;;
 32164                           
 32165                           	psect	text164
 32166  006A08                     __ptext164:
 32167                           	opt stack 0
 32168  006A08                     _StopAllSoftwareTimers:
 32169                           	opt stack 21
 32170                           
 32171                           ; BSR set to: 2
 32172                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 32173                           
 32174                           ; BSR set to: 0
 32175                           ;incstack = 0
 32176  006A08  51E2               	movf	(_loRa+226)& (0+255),w,b
 32177  006A0A  EC78  F03A         	call	_SwTimerStop
 32178                           
 32179                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 32180  006A0E  0102               	movlb	2	; () banked
 32181  006A10  51E3               	movf	(_loRa+227)& (0+255),w,b
 32182  006A12  EC78  F03A         	call	_SwTimerStop
 32183                           
 32184                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 32185  006A16  0102               	movlb	2	; () banked
 32186  006A18  51E7               	movf	(_loRa+231)& (0+255),w,b
 32187  006A1A  EC78  F03A         	call	_SwTimerStop
 32188                           
 32189                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 32190  006A1E  0102               	movlb	2	; () banked
 32191  006A20  51E4               	movf	(_loRa+228)& (0+255),w,b
 32192  006A22  EC78  F03A         	call	_SwTimerStop
 32193                           
 32194                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 32195  006A26  0102               	movlb	2	; () banked
 32196  006A28  51E5               	movf	(_loRa+229)& (0+255),w,b
 32197  006A2A  EC78  F03A         	call	_SwTimerStop
 32198                           
 32199                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 32200  006A2E  0102               	movlb	2	; () banked
 32201  006A30  51E8               	movf	(_loRa+232)& (0+255),w,b
 32202  006A32  EC78  F03A         	call	_SwTimerStop
 32203                           
 32204                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 32205  006A36  0102               	movlb	2	; () banked
 32206  006A38  51E6               	movf	(_loRa+230)& (0+255),w,b
 32207  006A3A  EC78  F03A         	call	_SwTimerStop
 32208                           
 32209                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32210  006A3E  0102               	movlb	2	; () banked
 32211  006A40  51EA               	movf	(_loRa+234)& (0+255),w,b
 32212  006A42  EC78  F03A         	call	_SwTimerStop
 32213                           
 32214                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 32215  006A46  0102               	movlb	2	; () banked
 32216  006A48  51F3               	movf	(_loRa+243)& (0+255),w,b
 32217  006A4A  EC78  F03A         	call	_SwTimerStop
 32218                           
 32219                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 32220  006A4E  0102               	movlb	2	; () banked
 32221  006A50  51E9               	movf	(_loRa+233)& (0+255),w,b
 32222  006A52  EF78  F03A         	goto	_SwTimerStop
 32223  006A56                     __end_of_StopAllSoftwareTimers:
 32224                           	opt stack 0
 32225                           tosu	equ	0xFFF
 32226                           tosh	equ	0xFFE
 32227                           tosl	equ	0xFFD
 32228                           pclath	equ	0xFFA
 32229                           tblptru	equ	0xFF8
 32230                           tblptrh	equ	0xFF7
 32231                           tblptrl	equ	0xFF6
 32232                           tablat	equ	0xFF5
 32233                           prodh	equ	0xFF4
 32234                           prodl	equ	0xFF3
 32235                           intcon	equ	0xFF2
 32236                           intcon2	equ	0xFF1
 32237                           intcon3	equ	0xFF0
 32238                           indf0	equ	0xFEF
 32239                           postinc0	equ	0xFEE
 32240                           plusw0	equ	0xFEB
 32241                           fsr0h	equ	0xFEA
 32242                           fsr0l	equ	0xFE9
 32243                           wreg	equ	0xFE8
 32244                           postinc1	equ	0xFE6
 32245                           postdec1	equ	0xFE5
 32246                           plusw1	equ	0xFE3
 32247                           fsr1h	equ	0xFE2
 32248                           fsr1l	equ	0xFE1
 32249                           indf2	equ	0xFDF
 32250                           postinc2	equ	0xFDE
 32251                           postdec2	equ	0xFDD
 32252                           plusw2	equ	0xFDB
 32253                           fsr2h	equ	0xFDA
 32254                           fsr2l	equ	0xFD9
 32255                           status	equ	0xFD8
 32256                           
 32257 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32258 ;; Defined at:
 32259 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32260 ;; Parameters:    Size  Location     Type
 32261 ;;  syncWord        1    wreg     unsigned char 
 32262 ;; Auto vars:     Size  Location     Type
 32263 ;;  syncWord        1    4[BANK0 ] unsigned char 
 32264 ;; Return value:  Size  Location     Type
 32265 ;;                  1    wreg      void 
 32266 ;; Registers used:
 32267 ;;		wreg
 32268 ;; Tracked objects:
 32269 ;;		On entry : F/2
 32270 ;;		On exit  : 0/0
 32271 ;;		Unchanged: 0/0
 32272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32277 ;;Total ram usage:        1 bytes
 32278 ;; Hardware stack levels used:    1
 32279 ;; Hardware stack levels required when called:    7
 32280 ;; This function calls:
 32281 ;;		Nothing
 32282 ;; This function is called by:
 32283 ;;		_LORAWAN_Reset
 32284 ;;		_ConfigureRadio
 32285 ;; This function uses a non-reentrant model
 32286 ;;
 32287                           
 32288                           	psect	text165
 32289  007856                     __ptext165:
 32290                           	opt stack 0
 32291  007856                     _RADIO_SetLoRaSyncWord:
 32292                           	opt stack 18
 32293                           
 32294                           ; BSR set to: 0
 32295                           ;incstack = 0
 32296                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32297  007856  0100               	movlb	0	; () banked
 32298  007858  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32299                           
 32300                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32301  00785A  C064  F18C         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32302  00785E  0012               	return		;funcret
 32303  007860                     __end_of_RADIO_SetLoRaSyncWord:
 32304                           	opt stack 0
 32305                           tosu	equ	0xFFF
 32306                           tosh	equ	0xFFE
 32307                           tosl	equ	0xFFD
 32308                           pclath	equ	0xFFA
 32309                           tblptru	equ	0xFF8
 32310                           tblptrh	equ	0xFF7
 32311                           tblptrl	equ	0xFF6
 32312                           tablat	equ	0xFF5
 32313                           prodh	equ	0xFF4
 32314                           prodl	equ	0xFF3
 32315                           intcon	equ	0xFF2
 32316                           intcon2	equ	0xFF1
 32317                           intcon3	equ	0xFF0
 32318                           indf0	equ	0xFEF
 32319                           postinc0	equ	0xFEE
 32320                           plusw0	equ	0xFEB
 32321                           fsr0h	equ	0xFEA
 32322                           fsr0l	equ	0xFE9
 32323                           wreg	equ	0xFE8
 32324                           postinc1	equ	0xFE6
 32325                           postdec1	equ	0xFE5
 32326                           plusw1	equ	0xFE3
 32327                           fsr1h	equ	0xFE2
 32328                           fsr1l	equ	0xFE1
 32329                           indf2	equ	0xFDF
 32330                           postinc2	equ	0xFDE
 32331                           postdec2	equ	0xFDD
 32332                           plusw2	equ	0xFDB
 32333                           fsr2h	equ	0xFDA
 32334                           fsr2l	equ	0xFD9
 32335                           status	equ	0xFD8
 32336                           
 32337 ;; *************** function _RADIO_Init *****************
 32338 ;; Defined at:
 32339 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32340 ;; Parameters:    Size  Location     Type
 32341 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32342 ;;		 -> radioBuffer(271), 
 32343 ;;  frequency       4   31[BANK0 ] unsigned long 
 32344 ;; Auto vars:     Size  Location     Type
 32345 ;;		None
 32346 ;; Return value:  Size  Location     Type
 32347 ;;                  1    wreg      void 
 32348 ;; Registers used:
 32349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32350 ;; Tracked objects:
 32351 ;;		On entry : F/0
 32352 ;;		On exit  : F/1
 32353 ;;		Unchanged: 0/0
 32354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32358 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32359 ;;Total ram usage:        7 bytes
 32360 ;; Hardware stack levels used:    1
 32361 ;; Hardware stack levels required when called:   11
 32362 ;; This function calls:
 32363 ;;		_RADIO_RegisterRead
 32364 ;;		_RADIO_RegisterWrite
 32365 ;;		_RADIO_Reset
 32366 ;;		_RADIO_WriteFrequency
 32367 ;;		_RADIO_WriteMode
 32368 ;;		_SwTimerCreate
 32369 ;;		_SwTimerSetCallback
 32370 ;;		_SwTimerStop
 32371 ;; This function is called by:
 32372 ;;		_LORAWAN_Init
 32373 ;;		_LORAWAN_Reset
 32374 ;; This function uses a non-reentrant model
 32375 ;;
 32376                           
 32377                           	psect	text166
 32378  00386C                     __ptext166:
 32379                           	opt stack 0
 32380  00386C                     _RADIO_Init:
 32381                           	opt stack 18
 32382                           
 32383                           ; BSR set to: 0
 32384                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32385                           
 32386                           ;incstack = 0
 32387  00386C  C07F  F17E         	movff	RADIO_Init@frequency,_RadioConfiguration
 32388  003870  C080  F17F         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32389  003874  C081  F180         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32390  003878  C082  F181         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32391                           
 32392                           ; BSR set to: 0
 32393                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32394  00387C  0EA8               	movlw	168
 32395  00387E  0101               	movlb	1	; () banked
 32396  003880  6F82               	movwf	(_RadioConfiguration+4)& (0+255),b
 32397  003882  0E61               	movlw	97
 32398  003884  6F83               	movwf	(_RadioConfiguration+5)& (0+255),b
 32399  003886  6B84               	clrf	(_RadioConfiguration+6)& (0+255),b
 32400  003888  6B85               	clrf	(_RadioConfiguration+7)& (0+255),b
 32401                           
 32402                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32403  00388A  0E50               	movlw	80
 32404  00388C  6F86               	movwf	(_RadioConfiguration+8)& (0+255),b
 32405  00388E  0EC3               	movlw	195
 32406  003890  6F87               	movwf	(_RadioConfiguration+9)& (0+255),b
 32407  003892  6B88               	clrf	(_RadioConfiguration+10)& (0+255),b
 32408  003894  6B89               	clrf	(_RadioConfiguration+11)& (0+255),b
 32409                           
 32410                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32411  003896  0E01               	movlw	1
 32412  003898  6F96               	movwf	(_RadioConfiguration+24)& (0+255),b
 32413                           
 32414                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32415  00389A  0E07               	movlw	7
 32416  00389C  6F98               	movwf	(_RadioConfiguration+26)& (0+255),b
 32417                           
 32418                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32419  00389E  0E01               	movlw	1
 32420  0038A0  6F99               	movwf	(_RadioConfiguration+27)& (0+255),b
 32421                           
 32422                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32423  0038A2  6F9F               	movwf	(_RadioConfiguration+33)& (0+255),b
 32424                           
 32425                           ; BSR set to: 1
 32426                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32427  0038A4  6BA0               	clrf	(_RadioConfiguration+34)& (0+255),b
 32428                           
 32429                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32430  0038A6  6B8B               	clrf	(_RadioConfiguration+13)& (0+255),b
 32431  0038A8  0E08               	movlw	8
 32432  0038AA  6F8A               	movwf	(_RadioConfiguration+12)& (0+255),b
 32433                           
 32434                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32435  0038AC  0E0C               	movlw	12
 32436  0038AE  6F97               	movwf	(_RadioConfiguration+25)& (0+255),b
 32437                           
 32438                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32439  0038B0  0E01               	movlw	1
 32440  0038B2  6F9A               	movwf	(_RadioConfiguration+28)& (0+255),b
 32441                           
 32442                           ; BSR set to: 1
 32443                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32444  0038B4  6B9B               	clrf	(_RadioConfiguration+29)& (0+255),b
 32445                           
 32446                           ; BSR set to: 1
 32447                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32448  0038B6  6B9E               	clrf	(_RadioConfiguration+32)& (0+255),b
 32449                           
 32450                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32451  0038B8  0EC1               	movlw	193
 32452  0038BA  6F8D               	movwf	(_RadioConfiguration+15)& (0+255),b
 32453                           
 32454                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32455  0038BC  0E94               	movlw	148
 32456  0038BE  6F8E               	movwf	(_RadioConfiguration+16)& (0+255),b
 32457                           
 32458                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32459  0038C0  0EC1               	movlw	193
 32460  0038C2  6F8F               	movwf	(_RadioConfiguration+17)& (0+255),b
 32461                           
 32462                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32463  0038C4  0E03               	movlw	3
 32464  0038C6  6F95               	movwf	(_RadioConfiguration+23)& (0+255),b
 32465                           
 32466                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32467  0038C8  0E34               	movlw	52
 32468  0038CA  6F8C               	movwf	(_RadioConfiguration+14)& (0+255),b
 32469                           
 32470                           ; BSR set to: 1
 32471                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32472  0038CC  6BA1               	clrf	(_RadioConfiguration+35)& (0+255),b
 32473                           
 32474                           ; BSR set to: 1
 32475                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32476  0038CE  6BA2               	clrf	(_RadioConfiguration+36)& (0+255),b
 32477                           
 32478                           ; BSR set to: 1
 32479                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32480  0038D0  C07D  F1A3         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32481  0038D4  C07E  F1A4         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32482                           
 32483                           ; BSR set to: 1
 32484                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32485  0038D8  6B9C               	clrf	(_RadioConfiguration+30)& (0+255),b
 32486  0038DA  6B9D               	clrf	(_RadioConfiguration+31)& (0+255),b
 32487                           
 32488                           ; BSR set to: 1
 32489                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32490  0038DC  0E80               	movlw	128
 32491  0038DE  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
 32492                           
 32493                           ; BSR set to: 1
 32494                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32495  0038E0  0E98               	movlw	152
 32496  0038E2  6FA8               	movwf	(_RadioConfiguration+42)& (0+255),b
 32497  0038E4  0E3A               	movlw	58
 32498  0038E6  6FA9               	movwf	(_RadioConfiguration+43)& (0+255),b
 32499  0038E8  6BAA               	clrf	(_RadioConfiguration+44)& (0+255),b
 32500  0038EA  6BAB               	clrf	(_RadioConfiguration+45)& (0+255),b
 32501                           
 32502                           ; BSR set to: 1
 32503                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32504  0038EC  0E02               	movlw	2
 32505  0038EE  6FB1               	movwf	(_RadioConfiguration+51)& (0+255),b
 32506                           
 32507                           ; BSR set to: 1
 32508                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32509  0038F0  0E0B               	movlw	11
 32510  0038F2  6FB2               	movwf	(_RadioConfiguration+52)& (0+255),b
 32511                           
 32512                           ; BSR set to: 1
 32513                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32514  0038F4  0E12               	movlw	18
 32515  0038F6  6FB3               	movwf	(_RadioConfiguration+53)& (0+255),b
 32516                           
 32517                           ; BSR set to: 1
 32518                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32519  0038F8  6BAD               	clrf	(_RadioConfiguration+47)& (0+255),b
 32520  0038FA  6BAE               	clrf	(_RadioConfiguration+48)& (0+255),b
 32521                           
 32522                           ; BSR set to: 1
 32523                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32524  0038FC  51AC               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32525  0038FE  E123               	bnz	l14827
 32526                           
 32527                           ; BSR set to: 1
 32528                           ;radio_driver_SX1276.c: 457: {
 32529                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32530  003900  ECFC  F030         	call	_SwTimerCreate	;wreg free
 32531  003904  0101               	movlb	1	; () banked
 32532  003906  6FA5               	movwf	(_RadioConfiguration+39)& (0+255),b
 32533                           
 32534                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32535  003908  ECFC  F030         	call	_SwTimerCreate	;wreg free
 32536  00390C  0101               	movlb	1	; () banked
 32537  00390E  6FA6               	movwf	(_RadioConfiguration+40)& (0+255),b
 32538                           
 32539                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32540  003910  ECFC  F030         	call	_SwTimerCreate	;wreg free
 32541  003914  0101               	movlb	1	; () banked
 32542  003916  6FA7               	movwf	(_RadioConfiguration+41)& (0+255),b
 32543                           
 32544                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32545  003918  0E6E               	movlw	low _RADIO_RxFSKTimeout
 32546  00391A  0100               	movlb	0	; () banked
 32547  00391C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32548  00391E  0E6F               	movlw	high _RADIO_RxFSKTimeout
 32549  003920  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32550  003922  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32551  003924  0101               	movlb	1	; () banked
 32552  003926  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32553  003928  EC38  F038         	call	_SwTimerSetCallback
 32554                           
 32555                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32556  00392C  0E5C               	movlw	low _RADIO_WatchdogTimeout
 32557  00392E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32558  003930  0E6C               	movlw	high _RADIO_WatchdogTimeout
 32559  003932  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32560  003934  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32561  003936  0101               	movlb	1	; () banked
 32562  003938  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32563  00393A  EC38  F038         	call	_SwTimerSetCallback
 32564                           
 32565                           ; BSR set to: 0
 32566                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32567  00393E  0E01               	movlw	1
 32568  003940  0101               	movlb	1	; () banked
 32569  003942  6FAC               	movwf	(_RadioConfiguration+46)& (0+255),b
 32570                           
 32571                           ;radio_driver_SX1276.c: 466: }
 32572  003944  D00B               	goto	l14829
 32573  003946                     l14827:
 32574                           
 32575                           ; BSR set to: 1
 32576                           ;radio_driver_SX1276.c: 467: else
 32577                           ;radio_driver_SX1276.c: 468: {
 32578                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32579  003946  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32580  003948  EC78  F03A         	call	_SwTimerStop
 32581                           
 32582                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32583  00394C  0101               	movlb	1	; () banked
 32584  00394E  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32585  003950  EC78  F03A         	call	_SwTimerStop
 32586                           
 32587                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32588  003954  0101               	movlb	1	; () banked
 32589  003956  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32590  003958  EC78  F03A         	call	_SwTimerStop
 32591  00395C                     l14829:
 32592                           
 32593                           ;radio_driver_SX1276.c: 472: }
 32594                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32595  00395C  ECEC  F037         	call	_RADIO_Reset	;wreg free
 32596                           
 32597                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32598  003960  0E00               	movlw	0
 32599  003962  0100               	movlb	0	; () banked
 32600  003964  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32601  003966  0E01               	movlw	1
 32602  003968  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32603  00396A  EC5F  F028         	call	_RADIO_WriteMode
 32604                           
 32605                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32606  00396E  C17E  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32607  003972  C17F  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32608  003976  C180  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32609  00397A  C181  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32610  00397E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
 32611                           
 32612                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32613  003982  0E42               	movlw	66
 32614  003984  0100               	movlb	0	; () banked
 32615  003986  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32616  003988  0E3B               	movlw	59
 32617  00398A  EC4B  F03A         	call	_RADIO_RegisterWrite
 32618  00398E                     l14837:
 32619  00398E  0E3B               	movlw	59
 32620  003990  EC63  F039         	call	_RADIO_RegisterRead
 32621  003994  6F83               	movwf	??_RADIO_Init& (0+255),b
 32622  003996  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32623  003998  D7FA               	goto	l14837
 32624                           
 32625                           ; BSR set to: 0
 32626                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32627  00399A  0E23               	movlw	35
 32628  00399C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32629  00399E  0E0C               	movlw	12
 32630  0039A0  EC4B  F03A         	call	_RADIO_RegisterWrite
 32631                           
 32632                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32633  0039A4  0E1E               	movlw	30
 32634  0039A6  0100               	movlb	0	; () banked
 32635  0039A8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32636  0039AA  0E0D               	movlw	13
 32637  0039AC  EC4B  F03A         	call	_RADIO_RegisterWrite
 32638                           
 32639                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32640  0039B0  0EAA               	movlw	170
 32641  0039B2  0100               	movlb	0	; () banked
 32642  0039B4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32643  0039B6  0E1F               	movlw	31
 32644  0039B8  EC4B  F03A         	call	_RADIO_RegisterWrite
 32645                           
 32646                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32647  0039BC  0E8F               	movlw	143
 32648  0039BE  0100               	movlb	0	; () banked
 32649  0039C0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32650  0039C2  0E35               	movlw	53
 32651  0039C4  EC4B  F03A         	call	_RADIO_RegisterWrite
 32652                           
 32653                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32654  0039C8  0100               	movlb	0	; () banked
 32655  0039CA  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32656  0039CC  0E32               	movlw	50
 32657  0039CE  EC4B  F03A         	call	_RADIO_RegisterWrite
 32658                           
 32659                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32660  0039D2  0E40               	movlw	64
 32661  0039D4  0100               	movlb	0	; () banked
 32662  0039D6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32663  0039D8  0E31               	movlw	49
 32664  0039DA  EC4B  F03A         	call	_RADIO_RegisterWrite
 32665                           
 32666                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32667  0039DE  0E01               	movlw	1
 32668  0039E0  0100               	movlb	0	; () banked
 32669  0039E2  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32670  0039E4  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32671  0039E6  0E00               	movlw	0
 32672  0039E8  EC5F  F028         	call	_RADIO_WriteMode
 32673                           
 32674                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32675  0039EC  0100               	movlb	0	; () banked
 32676  0039EE  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32677  0039F0  0E23               	movlw	35
 32678  0039F2  EC4B  F03A         	call	_RADIO_RegisterWrite
 32679                           
 32680                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32681  0039F6  0E42               	movlw	66
 32682  0039F8  EC63  F039         	call	_RADIO_RegisterRead
 32683  0039FC  0101               	movlb	1	; () banked
 32684  0039FE  6FAF               	movwf	(_RadioConfiguration+49)& (0+255),b
 32685                           
 32686                           ; BSR set to: 1
 32687  003A00  0012               	return		;funcret
 32688  003A02                     __end_of_RADIO_Init:
 32689                           	opt stack 0
 32690                           tosu	equ	0xFFF
 32691                           tosh	equ	0xFFE
 32692                           tosl	equ	0xFFD
 32693                           pclath	equ	0xFFA
 32694                           tblptru	equ	0xFF8
 32695                           tblptrh	equ	0xFF7
 32696                           tblptrl	equ	0xFF6
 32697                           tablat	equ	0xFF5
 32698                           prodh	equ	0xFF4
 32699                           prodl	equ	0xFF3
 32700                           intcon	equ	0xFF2
 32701                           intcon2	equ	0xFF1
 32702                           intcon3	equ	0xFF0
 32703                           indf0	equ	0xFEF
 32704                           postinc0	equ	0xFEE
 32705                           plusw0	equ	0xFEB
 32706                           fsr0h	equ	0xFEA
 32707                           fsr0l	equ	0xFE9
 32708                           wreg	equ	0xFE8
 32709                           postinc1	equ	0xFE6
 32710                           postdec1	equ	0xFE5
 32711                           plusw1	equ	0xFE3
 32712                           fsr1h	equ	0xFE2
 32713                           fsr1l	equ	0xFE1
 32714                           indf2	equ	0xFDF
 32715                           postinc2	equ	0xFDE
 32716                           postdec2	equ	0xFDD
 32717                           plusw2	equ	0xFDB
 32718                           fsr2h	equ	0xFDA
 32719                           fsr2l	equ	0xFD9
 32720                           status	equ	0xFD8
 32721                           
 32722 ;; *************** function _SwTimerSetCallback *****************
 32723 ;; Defined at:
 32724 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32725 ;; Parameters:    Size  Location     Type
 32726 ;;  timerId         1    wreg     unsigned char 
 32727 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32728 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32729 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32730 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32731 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32732 ;; Auto vars:     Size  Location     Type
 32733 ;;  timerId         1    7[BANK0 ] unsigned char 
 32734 ;; Return value:  Size  Location     Type
 32735 ;;                  1    wreg      void 
 32736 ;; Registers used:
 32737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32738 ;; Tracked objects:
 32739 ;;		On entry : C/2
 32740 ;;		On exit  : F/0
 32741 ;;		Unchanged: 0/0
 32742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32743 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32746 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32747 ;;Total ram usage:        4 bytes
 32748 ;; Hardware stack levels used:    1
 32749 ;; Hardware stack levels required when called:    7
 32750 ;; This function calls:
 32751 ;;		Nothing
 32752 ;; This function is called by:
 32753 ;;		_RADIO_Init
 32754 ;;		_SetCallbackSoftwareTimers
 32755 ;; This function uses a non-reentrant model
 32756 ;;
 32757                           
 32758                           	psect	text167
 32759  007070                     __ptext167:
 32760                           	opt stack 0
 32761  007070                     _SwTimerSetCallback:
 32762                           	opt stack 21
 32763                           
 32764                           ; BSR set to: 1
 32765                           ;incstack = 0
 32766                           ;SwTimerSetCallback@timerId stored from wreg
 32767  007070  0100               	movlb	0	; () banked
 32768  007072  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32769                           
 32770                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32771  007074  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32772  007076  0D08               	mullw	8
 32773  007078  0E06               	movlw	low (_swTimers+6)
 32774  00707A  24F3               	addwf	prodl,w,c
 32775  00707C  6ED9               	movwf	fsr2l,c
 32776  00707E  0E03               	movlw	high (_swTimers+6)
 32777  007080  20F4               	addwfc	prodh,w,c
 32778  007082  6EDA               	movwf	fsr2h,c
 32779  007084  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32780  007088  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32781                           
 32782                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32783  00708C  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32784  00708E  0D08               	mullw	8
 32785  007090  0E05               	movlw	low (_swTimers+5)
 32786  007092  24F3               	addwf	prodl,w,c
 32787  007094  6ED9               	movwf	fsr2l,c
 32788  007096  0E03               	movlw	high (_swTimers+5)
 32789  007098  20F4               	addwfc	prodh,w,c
 32790  00709A  6EDA               	movwf	fsr2h,c
 32791  00709C  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32792                           
 32793                           ; BSR set to: 0
 32794  0070A0  0012               	return		;funcret
 32795  0070A2                     __end_of_SwTimerSetCallback:
 32796                           	opt stack 0
 32797                           tosu	equ	0xFFF
 32798                           tosh	equ	0xFFE
 32799                           tosl	equ	0xFFD
 32800                           pclath	equ	0xFFA
 32801                           tblptru	equ	0xFF8
 32802                           tblptrh	equ	0xFF7
 32803                           tblptrl	equ	0xFF6
 32804                           tablat	equ	0xFF5
 32805                           prodh	equ	0xFF4
 32806                           prodl	equ	0xFF3
 32807                           intcon	equ	0xFF2
 32808                           intcon2	equ	0xFF1
 32809                           intcon3	equ	0xFF0
 32810                           indf0	equ	0xFEF
 32811                           postinc0	equ	0xFEE
 32812                           plusw0	equ	0xFEB
 32813                           fsr0h	equ	0xFEA
 32814                           fsr0l	equ	0xFE9
 32815                           wreg	equ	0xFE8
 32816                           postinc1	equ	0xFE6
 32817                           postdec1	equ	0xFE5
 32818                           plusw1	equ	0xFE3
 32819                           fsr1h	equ	0xFE2
 32820                           fsr1l	equ	0xFE1
 32821                           indf2	equ	0xFDF
 32822                           postinc2	equ	0xFDE
 32823                           postdec2	equ	0xFDD
 32824                           plusw2	equ	0xFDB
 32825                           fsr2h	equ	0xFDA
 32826                           fsr2l	equ	0xFD9
 32827                           status	equ	0xFD8
 32828                           
 32829 ;; *************** function _RADIO_WriteMode *****************
 32830 ;; Defined at:
 32831 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32832 ;; Parameters:    Size  Location     Type
 32833 ;;  newMode         1    wreg     enum E8483
 32834 ;;  newModulatio    1    9[BANK0 ] enum E7751
 32835 ;;  blocking        1   10[BANK0 ] unsigned char 
 32836 ;; Auto vars:     Size  Location     Type
 32837 ;;  newMode         1   14[BANK0 ] enum E8483
 32838 ;;  opMode          1   15[BANK0 ] unsigned char 
 32839 ;;  currentMode     1   13[BANK0 ] enum E8483
 32840 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32841 ;;  currentModul    1   11[BANK0 ] enum E7751
 32842 ;; Return value:  Size  Location     Type
 32843 ;;                  1    wreg      void 
 32844 ;; Registers used:
 32845 ;;		wreg, status,2, status,0, cstack
 32846 ;; Tracked objects:
 32847 ;;		On entry : F/0
 32848 ;;		On exit  : 0/0
 32849 ;;		Unchanged: 0/0
 32850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32852 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32854 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32855 ;;Total ram usage:        7 bytes
 32856 ;; Hardware stack levels used:    1
 32857 ;; Hardware stack levels required when called:   10
 32858 ;; This function calls:
 32859 ;;		_HALDIO5PinValue
 32860 ;;		_RADIO_RegisterRead
 32861 ;;		_RADIO_RegisterWrite
 32862 ;;		_SystemBlockingWaitMs
 32863 ;; This function is called by:
 32864 ;;		_RADIO_Init
 32865 ;;		_RADIO_WriteConfiguration
 32866 ;;		_RADIO_Transmit
 32867 ;;		_RADIO_ReceiveStart
 32868 ;;		_RADIO_ReceiveStop
 32869 ;;		_RADIO_RxDone
 32870 ;;		_RADIO_FSKPayloadReady
 32871 ;;		_RADIO_RxTimeout
 32872 ;;		_RADIO_TxDone
 32873 ;;		_RADIO_FSKPacketSent
 32874 ;;		_RADIO_ReadRandom
 32875 ;;		_RADIO_RxFSKTimeout
 32876 ;;		_RADIO_WatchdogTimeout
 32877 ;; This function uses a non-reentrant model
 32878 ;;
 32879                           
 32880                           	psect	text168
 32881  0050BE                     __ptext168:
 32882                           	opt stack 0
 32883  0050BE                     _RADIO_WriteMode:
 32884                           	opt stack 17
 32885                           
 32886                           ; BSR set to: 0
 32887                           ;incstack = 0
 32888                           ;RADIO_WriteMode@newMode stored from wreg
 32889  0050BE  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 32890                           
 32891                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 32892                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 32893                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 32894                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 32895                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 32896                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 32897  0050C0  0100               	movlb	0	; () banked
 32898  0050C2  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32899  0050C4  E108               	bnz	l12165
 32900                           
 32901                           ; BSR set to: 0
 32902  0050C6  0E06               	movlw	6
 32903  0050C8  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32904  0050CA  B4D8               	btfsc	status,2,c
 32905  0050CC  0012               	return	
 32906                           
 32907                           ; BSR set to: 0
 32908  0050CE  0E07               	movlw	7
 32909  0050D0  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32910  0050D2  E101               	bnz	l12165
 32911  0050D4  0012               	return	
 32912  0050D6                     l12165:
 32913                           
 32914                           ; BSR set to: 0
 32915                           ;radio_driver_SX1276.c: 159: }
 32916                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 32917  0050D6  0E07               	movlw	7
 32918  0050D8  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 32919                           
 32920                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 32921  0050DA  0E01               	movlw	1
 32922  0050DC  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 32923                           
 32924                           ; BSR set to: 0
 32925                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 32926  0050DE  EC63  F039         	call	_RADIO_RegisterRead
 32927  0050E2  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32928                           
 32929                           ; BSR set to: 0
 32930                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 32931  0050E4  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 32932  0050E6  D003               	goto	l382
 32933                           
 32934                           ; BSR set to: 0
 32935                           ;radio_driver_SX1276.c: 168: {
 32936                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 32937  0050E8  0E01               	movlw	1
 32938  0050EA  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 32939                           
 32940                           ;radio_driver_SX1276.c: 170: }
 32941  0050EC  D001               	goto	l12173
 32942  0050EE                     l382:
 32943                           
 32944                           ; BSR set to: 0
 32945                           ;radio_driver_SX1276.c: 171: else
 32946                           ;radio_driver_SX1276.c: 172: {
 32947                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 32948  0050EE  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 32949  0050F0                     l12173:
 32950                           
 32951                           ; BSR set to: 0
 32952                           ;radio_driver_SX1276.c: 174: }
 32953                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 32954  0050F0  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32955  0050F2  0B07               	andlw	7
 32956  0050F4  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 32957                           
 32958                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 32959  0050F6  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 32960  0050F8  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 32961  0050FA  E018               	bz	l12189
 32962                           
 32963                           ; BSR set to: 0
 32964                           ;radio_driver_SX1276.c: 181: {
 32965                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 32966  0050FC  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32967  0050FE  E008               	bz	l12181
 32968                           
 32969                           ; BSR set to: 0
 32970                           ;radio_driver_SX1276.c: 184: {
 32971                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 32972  005100  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32973  005102  0BF8               	andlw	248
 32974  005104  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32975  005106  0E01               	movlw	1
 32976  005108  EC4B  F03A         	call	_RADIO_RegisterWrite
 32977                           
 32978                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 32979  00510C  0100               	movlb	0	; () banked
 32980  00510E  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 32981  005110                     l12181:
 32982                           
 32983                           ; BSR set to: 0
 32984                           ;radio_driver_SX1276.c: 188: }
 32985                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 32986  005110  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32987  005112  E103               	bnz	l12185
 32988                           
 32989                           ; BSR set to: 0
 32990                           ;radio_driver_SX1276.c: 191: {
 32991                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 32992  005114  0E78               	movlw	120
 32993  005116  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 32994                           
 32995                           ;radio_driver_SX1276.c: 194: }
 32996  005118  D004               	goto	l12187
 32997  00511A                     l12185:
 32998                           
 32999                           ; BSR set to: 0
 33000                           ;radio_driver_SX1276.c: 195: else
 33001                           ;radio_driver_SX1276.c: 196: {
 33002                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 33003  00511A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33004  00511C  0B78               	andlw	120
 33005  00511E  0980               	iorlw	128
 33006  005120  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33007  005122                     l12187:
 33008                           
 33009                           ; BSR set to: 0
 33010                           ;radio_driver_SX1276.c: 199: }
 33011                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 33012  005122  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33013  005126  0E01               	movlw	1
 33014  005128  EC4B  F03A         	call	_RADIO_RegisterWrite
 33015  00512C                     l12189:
 33016                           
 33017                           ;radio_driver_SX1276.c: 201: }
 33018                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 33019  00512C  0100               	movlb	0	; () banked
 33020  00512E  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33021  005130  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33022  005132  B4D8               	btfsc	status,2,c
 33023  005134  0012               	return	
 33024                           
 33025                           ; BSR set to: 0
 33026                           ;radio_driver_SX1276.c: 208: {
 33027                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 33028  005136  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33029  005138  E012               	bz	l12205
 33030                           
 33031                           ; BSR set to: 0
 33032  00513A  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33033  00513C  E110               	bnz	l12205
 33034                           
 33035                           ; BSR set to: 0
 33036                           ;radio_driver_SX1276.c: 212: {
 33037                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 33038  00513E  0E41               	movlw	65
 33039  005140  EC63  F039         	call	_RADIO_RegisterRead
 33040  005144  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 33041                           
 33042                           ; BSR set to: 0
 33043                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 33044  005146  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33045  005148  E103               	bnz	l12201
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;radio_driver_SX1276.c: 215: {
 33049                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 33050  00514A  0E30               	movlw	48
 33051  00514C  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33052                           
 33053                           ;radio_driver_SX1276.c: 218: }
 33054  00514E  D002               	goto	l12203
 33055  005150                     l12201:
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;radio_driver_SX1276.c: 219: else
 33059                           ;radio_driver_SX1276.c: 220: {
 33060                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 33061  005150  0ECF               	movlw	207
 33062  005152  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33063  005154                     l12203:
 33064                           
 33065                           ; BSR set to: 0
 33066                           ;radio_driver_SX1276.c: 223: }
 33067                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33068  005154  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33069  005158  0E41               	movlw	65
 33070  00515A  EC4B  F03A         	call	_RADIO_RegisterWrite
 33071  00515E                     l12205:
 33072                           
 33073                           ;radio_driver_SX1276.c: 225: }
 33074                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33075  00515E  0EF8               	movlw	248
 33076  005160  0100               	movlb	0	; () banked
 33077  005162  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33078                           
 33079                           ; BSR set to: 0
 33080                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33081  005164  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33082  005166  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33083                           
 33084                           ; BSR set to: 0
 33085                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33086  005168  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33087  00516C  0E01               	movlw	1
 33088  00516E  EC4B  F03A         	call	_RADIO_RegisterWrite
 33089                           
 33090                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33091  005172  0100               	movlb	0	; () banked
 33092  005174  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33093  005176  A4D8               	btfss	status,2,c
 33094  005178  0012               	return	
 33095                           
 33096                           ; BSR set to: 0
 33097                           ;radio_driver_SX1276.c: 234: {
 33098                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33099  00517A  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33100  00517C  E005               	bz	l12217
 33101  00517E                     l12215:
 33102  00517E  EC6A  F03C         	call	_HALDIO5PinValue	;wreg free
 33103  005182  0900               	iorlw	0
 33104  005184  E0FC               	bz	l12215
 33105  005186  0012               	return	
 33106  005188                     l12217:
 33107                           
 33108                           ; BSR set to: 0
 33109                           ;radio_driver_SX1276.c: 240: else
 33110                           ;radio_driver_SX1276.c: 241: {
 33111                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33112  005188  0E01               	movlw	1
 33113  00518A  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33114  00518C  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33115  00518E  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33116  005190  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33117  005192  EFD7  F038         	goto	_SystemBlockingWaitMs	;wreg free
 33118  005196                     __end_of_RADIO_WriteMode:
 33119                           	opt stack 0
 33120                           tosu	equ	0xFFF
 33121                           tosh	equ	0xFFE
 33122                           tosl	equ	0xFFD
 33123                           pclath	equ	0xFFA
 33124                           tblptru	equ	0xFF8
 33125                           tblptrh	equ	0xFF7
 33126                           tblptrl	equ	0xFF6
 33127                           tablat	equ	0xFF5
 33128                           prodh	equ	0xFF4
 33129                           prodl	equ	0xFF3
 33130                           intcon	equ	0xFF2
 33131                           intcon2	equ	0xFF1
 33132                           intcon3	equ	0xFF0
 33133                           indf0	equ	0xFEF
 33134                           postinc0	equ	0xFEE
 33135                           plusw0	equ	0xFEB
 33136                           fsr0h	equ	0xFEA
 33137                           fsr0l	equ	0xFE9
 33138                           wreg	equ	0xFE8
 33139                           postinc1	equ	0xFE6
 33140                           postdec1	equ	0xFE5
 33141                           plusw1	equ	0xFE3
 33142                           fsr1h	equ	0xFE2
 33143                           fsr1l	equ	0xFE1
 33144                           indf2	equ	0xFDF
 33145                           postinc2	equ	0xFDE
 33146                           postdec2	equ	0xFDD
 33147                           plusw2	equ	0xFDB
 33148                           fsr2h	equ	0xFDA
 33149                           fsr2l	equ	0xFD9
 33150                           status	equ	0xFD8
 33151                           
 33152 ;; *************** function _RADIO_RegisterRead *****************
 33153 ;; Defined at:
 33154 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33155 ;; Parameters:    Size  Location     Type
 33156 ;;  reg             1    wreg     unsigned char 
 33157 ;; Auto vars:     Size  Location     Type
 33158 ;;  reg             1    6[BANK0 ] unsigned char 
 33159 ;;  readValue       1    7[BANK0 ] unsigned char 
 33160 ;; Return value:  Size  Location     Type
 33161 ;;                  1    wreg      unsigned char 
 33162 ;; Registers used:
 33163 ;;		wreg, status,2, status,0, cstack
 33164 ;; Tracked objects:
 33165 ;;		On entry : 0/0
 33166 ;;		On exit  : F/0
 33167 ;;		Unchanged: 0/0
 33168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33172 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33173 ;;Total ram usage:        2 bytes
 33174 ;; Hardware stack levels used:    1
 33175 ;; Hardware stack levels required when called:    9
 33176 ;; This function calls:
 33177 ;;		_HALSPICSAssert
 33178 ;;		_HALSPICSDeassert
 33179 ;;		_HALSPISend
 33180 ;; This function is called by:
 33181 ;;		_RADIO_WriteMode
 33182 ;;		_RADIO_WritePower
 33183 ;;		_RADIO_Init
 33184 ;;		_RADIO_WriteConfiguration
 33185 ;;		_RADIO_Transmit
 33186 ;;		_RADIO_RxDone
 33187 ;;		_RADIO_FSKPayloadReady
 33188 ;;		_RADIO_FSKPacketSent
 33189 ;;		_RADIO_FHSSChangeChannel
 33190 ;;		_RADIO_DIO0
 33191 ;;		_RADIO_DIO1
 33192 ;;		_RADIO_DIO2
 33193 ;;		_RADIO_DIO3
 33194 ;;		_RADIO_DIO4
 33195 ;;		_RADIO_DIO5
 33196 ;;		_RADIO_ReadRandom
 33197 ;;		_RADIO_RxFSKTimeout
 33198 ;; This function uses a non-reentrant model
 33199 ;;
 33200                           
 33201                           	psect	text169
 33202  0072C6                     __ptext169:
 33203                           	opt stack 0
 33204  0072C6                     _RADIO_RegisterRead:
 33205                           	opt stack 17
 33206                           
 33207                           ;incstack = 0
 33208                           ;RADIO_RegisterRead@reg stored from wreg
 33209  0072C6  0100               	movlb	0	; () banked
 33210  0072C8  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33211                           
 33212                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33213                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33214  0072CA  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33215                           
 33216                           ; BSR set to: 0
 33217                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33218  0072CC  EC88  F03C         	call	_HALSPICSAssert	;wreg free
 33219                           
 33220                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33221  0072D0  0100               	movlb	0	; () banked
 33222  0072D2  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33223  0072D4  EC30  F03C         	call	_HALSPISend
 33224                           
 33225                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33226  0072D8  0EFF               	movlw	255
 33227  0072DA  EC30  F03C         	call	_HALSPISend
 33228  0072DE  0100               	movlb	0	; () banked
 33229  0072E0  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33230                           
 33231                           ; BSR set to: 0
 33232                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33233  0072E2  EC86  F03C         	call	_HALSPICSDeassert	;wreg free
 33234                           
 33235                           ;radio_driver_SX1276.c: 142: return readValue;
 33236  0072E6  0100               	movlb	0	; () banked
 33237  0072E8  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33238                           
 33239                           ; BSR set to: 0
 33240  0072EA  0012               	return		;funcret
 33241  0072EC                     __end_of_RADIO_RegisterRead:
 33242                           	opt stack 0
 33243                           tosu	equ	0xFFF
 33244                           tosh	equ	0xFFE
 33245                           tosl	equ	0xFFD
 33246                           pclath	equ	0xFFA
 33247                           tblptru	equ	0xFF8
 33248                           tblptrh	equ	0xFF7
 33249                           tblptrl	equ	0xFF6
 33250                           tablat	equ	0xFF5
 33251                           prodh	equ	0xFF4
 33252                           prodl	equ	0xFF3
 33253                           intcon	equ	0xFF2
 33254                           intcon2	equ	0xFF1
 33255                           intcon3	equ	0xFF0
 33256                           indf0	equ	0xFEF
 33257                           postinc0	equ	0xFEE
 33258                           plusw0	equ	0xFEB
 33259                           fsr0h	equ	0xFEA
 33260                           fsr0l	equ	0xFE9
 33261                           wreg	equ	0xFE8
 33262                           postinc1	equ	0xFE6
 33263                           postdec1	equ	0xFE5
 33264                           plusw1	equ	0xFE3
 33265                           fsr1h	equ	0xFE2
 33266                           fsr1l	equ	0xFE1
 33267                           indf2	equ	0xFDF
 33268                           postinc2	equ	0xFDE
 33269                           postdec2	equ	0xFDD
 33270                           plusw2	equ	0xFDB
 33271                           fsr2h	equ	0xFDA
 33272                           fsr2l	equ	0xFD9
 33273                           status	equ	0xFD8
 33274                           
 33275 ;; *************** function _HALDIO5PinValue *****************
 33276 ;; Defined at:
 33277 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33278 ;; Parameters:    Size  Location     Type
 33279 ;;		None
 33280 ;; Auto vars:     Size  Location     Type
 33281 ;;		None
 33282 ;; Return value:  Size  Location     Type
 33283 ;;                  1    wreg      unsigned char 
 33284 ;; Registers used:
 33285 ;;		wreg
 33286 ;; Tracked objects:
 33287 ;;		On entry : 0/0
 33288 ;;		On exit  : 0/0
 33289 ;;		Unchanged: 0/0
 33290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33295 ;;Total ram usage:        0 bytes
 33296 ;; Hardware stack levels used:    1
 33297 ;; Hardware stack levels required when called:    7
 33298 ;; This function calls:
 33299 ;;		Nothing
 33300 ;; This function is called by:
 33301 ;;		_RADIO_WriteMode
 33302 ;; This function uses a non-reentrant model
 33303 ;;
 33304                           
 33305                           	psect	text170
 33306  0078D4                     __ptext170:
 33307                           	opt stack 0
 33308  0078D4                     _HALDIO5PinValue:
 33309                           	opt stack 19
 33310                           
 33311                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33312                           
 33313                           ; BSR set to: 0
 33314                           ;incstack = 0
 33315  0078D4  B081               	btfsc	3969,0,c	;volatile
 33316  0078D6  0C01               	retlw	1
 33317  0078D8  0C00               	retlw	0	;funcret
 33318  0078DA                     __end_of_HALDIO5PinValue:
 33319                           	opt stack 0
 33320                           tosu	equ	0xFFF
 33321                           tosh	equ	0xFFE
 33322                           tosl	equ	0xFFD
 33323                           pclath	equ	0xFFA
 33324                           tblptru	equ	0xFF8
 33325                           tblptrh	equ	0xFF7
 33326                           tblptrl	equ	0xFF6
 33327                           tablat	equ	0xFF5
 33328                           prodh	equ	0xFF4
 33329                           prodl	equ	0xFF3
 33330                           intcon	equ	0xFF2
 33331                           intcon2	equ	0xFF1
 33332                           intcon3	equ	0xFF0
 33333                           indf0	equ	0xFEF
 33334                           postinc0	equ	0xFEE
 33335                           plusw0	equ	0xFEB
 33336                           fsr0h	equ	0xFEA
 33337                           fsr0l	equ	0xFE9
 33338                           wreg	equ	0xFE8
 33339                           postinc1	equ	0xFE6
 33340                           postdec1	equ	0xFE5
 33341                           plusw1	equ	0xFE3
 33342                           fsr1h	equ	0xFE2
 33343                           fsr1l	equ	0xFE1
 33344                           indf2	equ	0xFDF
 33345                           postinc2	equ	0xFDE
 33346                           postdec2	equ	0xFDD
 33347                           plusw2	equ	0xFDB
 33348                           fsr2h	equ	0xFDA
 33349                           fsr2l	equ	0xFD9
 33350                           status	equ	0xFD8
 33351                           
 33352 ;; *************** function _RADIO_WriteFrequency *****************
 33353 ;; Defined at:
 33354 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33355 ;; Parameters:    Size  Location     Type
 33356 ;;  frequency       4   17[BANK0 ] unsigned long 
 33357 ;; Auto vars:     Size  Location     Type
 33358 ;;  num             4   25[BANK0 ] unsigned long 
 33359 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33360 ;; Return value:  Size  Location     Type
 33361 ;;                  1    wreg      void 
 33362 ;; Registers used:
 33363 ;;		wreg, status,2, status,0, cstack
 33364 ;; Tracked objects:
 33365 ;;		On entry : 0/0
 33366 ;;		On exit  : 0/0
 33367 ;;		Unchanged: 0/0
 33368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33370 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33372 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33373 ;;Total ram usage:       12 bytes
 33374 ;; Hardware stack levels used:    1
 33375 ;; Hardware stack levels required when called:   10
 33376 ;; This function calls:
 33377 ;;		_RADIO_RegisterWrite
 33378 ;;		___lldiv
 33379 ;;		___llmod
 33380 ;; This function is called by:
 33381 ;;		_RADIO_Init
 33382 ;;		_RADIO_WriteConfiguration
 33383 ;;		_RADIO_FHSSChangeChannel
 33384 ;; This function uses a non-reentrant model
 33385 ;;
 33386                           
 33387                           	psect	text171
 33388  004FE2                     __ptext171:
 33389                           	opt stack 0
 33390  004FE2                     _RADIO_WriteFrequency:
 33391                           	opt stack 16
 33392                           
 33393                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33394                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33395                           
 33396                           ;incstack = 0
 33397  004FE2  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33398  004FE6  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33399  004FEA  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33400  004FEE  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33401  004FF2  0E09               	movlw	9
 33402  004FF4  0100               	movlb	0	; () banked
 33403  004FF6  6F68               	movwf	___lldiv@divisor& (0+255),b
 33404  004FF8  0E3D               	movlw	61
 33405  004FFA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33406  004FFC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33407  004FFE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33408  005000  EC1B  F030         	call	___lldiv	;wreg free
 33409  005004  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33410  005008  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33411  00500C  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33412  005010  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33413                           
 33414                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33415  005014  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33416  005018  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33417  00501C  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33418  005020  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33419  005024  0E09               	movlw	9
 33420  005026  6F68               	movwf	___llmod@divisor& (0+255),b
 33421  005028  0E3D               	movlw	61
 33422  00502A  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33423  00502C  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33424  00502E  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33425  005030  ECF6  F032         	call	___llmod	;wreg free
 33426  005034  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33427  005038  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33428  00503C  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33429  005040  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33430                           
 33431                           ; BSR set to: 0
 33432                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33433  005044  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33434  005048  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33435  00504C  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33436  005050  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33437                           
 33438                           ; BSR set to: 0
 33439                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33440  005052  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33441  005056  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33442  00505A  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33443  00505E  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33444                           
 33445                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33446  005060  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33447  005064  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33448  005068  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33449  00506C  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33450  005070  0E09               	movlw	9
 33451  005072  6F68               	movwf	___lldiv@divisor& (0+255),b
 33452  005074  0E3D               	movlw	61
 33453  005076  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33454  005078  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33455  00507A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33456  00507C  EC1B  F030         	call	___lldiv	;wreg free
 33457  005080  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33458  005084  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33459  005088  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33460  00508C  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33461                           
 33462                           ; BSR set to: 0
 33463                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33464  005090  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33465  005092  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33466  005094  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33467  005096  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33468  005098  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33469  00509A  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33470  00509C  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33471  00509E  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33472                           
 33473                           ; BSR set to: 0
 33474                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33475  0050A0  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33476  0050A4  0E06               	movlw	6
 33477  0050A6  EC4B  F03A         	call	_RADIO_RegisterWrite
 33478                           
 33479                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33480  0050AA  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33481  0050AE  0E07               	movlw	7
 33482  0050B0  EC4B  F03A         	call	_RADIO_RegisterWrite
 33483                           
 33484                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33485  0050B4  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33486  0050B8  0E08               	movlw	8
 33487  0050BA  EF4B  F03A         	goto	_RADIO_RegisterWrite
 33488  0050BE                     __end_of_RADIO_WriteFrequency:
 33489                           	opt stack 0
 33490                           tosu	equ	0xFFF
 33491                           tosh	equ	0xFFE
 33492                           tosl	equ	0xFFD
 33493                           pclath	equ	0xFFA
 33494                           tblptru	equ	0xFF8
 33495                           tblptrh	equ	0xFF7
 33496                           tblptrl	equ	0xFF6
 33497                           tablat	equ	0xFF5
 33498                           prodh	equ	0xFF4
 33499                           prodl	equ	0xFF3
 33500                           intcon	equ	0xFF2
 33501                           intcon2	equ	0xFF1
 33502                           intcon3	equ	0xFF0
 33503                           indf0	equ	0xFEF
 33504                           postinc0	equ	0xFEE
 33505                           plusw0	equ	0xFEB
 33506                           fsr0h	equ	0xFEA
 33507                           fsr0l	equ	0xFE9
 33508                           wreg	equ	0xFE8
 33509                           postinc1	equ	0xFE6
 33510                           postdec1	equ	0xFE5
 33511                           plusw1	equ	0xFE3
 33512                           fsr1h	equ	0xFE2
 33513                           fsr1l	equ	0xFE1
 33514                           indf2	equ	0xFDF
 33515                           postinc2	equ	0xFDE
 33516                           postdec2	equ	0xFDD
 33517                           plusw2	equ	0xFDB
 33518                           fsr2h	equ	0xFDA
 33519                           fsr2l	equ	0xFD9
 33520                           status	equ	0xFD8
 33521                           
 33522 ;; *************** function ___llmod *****************
 33523 ;; Defined at:
 33524 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;  dividend        4    4[BANK0 ] unsigned long 
 33527 ;;  divisor         4    8[BANK0 ] unsigned long 
 33528 ;; Auto vars:     Size  Location     Type
 33529 ;;  counter         1   12[BANK0 ] unsigned char 
 33530 ;; Return value:  Size  Location     Type
 33531 ;;                  4    4[BANK0 ] unsigned long 
 33532 ;; Registers used:
 33533 ;;		wreg, status,2, status,0
 33534 ;; Tracked objects:
 33535 ;;		On entry : F/0
 33536 ;;		On exit  : F/0
 33537 ;;		Unchanged: 0/0
 33538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33539 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33542 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33543 ;;Total ram usage:        9 bytes
 33544 ;; Hardware stack levels used:    1
 33545 ;; Hardware stack levels required when called:    7
 33546 ;; This function calls:
 33547 ;;		Nothing
 33548 ;; This function is called by:
 33549 ;;		_RADIO_WriteFrequency
 33550 ;; This function uses a non-reentrant model
 33551 ;;
 33552                           
 33553                           	psect	text172
 33554  0065EC                     __ptext172:
 33555                           	opt stack 0
 33556  0065EC                     ___llmod:
 33557                           	opt stack 18
 33558                           
 33559                           ; BSR set to: 0
 33560                           
 33561                           ;incstack = 0
 33562  0065EC  5168               	movf	___llmod@divisor& (0+255),w,b
 33563  0065EE  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33564  0065F0  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33565  0065F2  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33566  0065F4  E023               	bz	l3113
 33567                           
 33568                           ; BSR set to: 0
 33569  0065F6  0E01               	movlw	1
 33570  0065F8  6F6C               	movwf	___llmod@counter& (0+255),b
 33571  0065FA  D006               	goto	l12117
 33572  0065FC                     l12115:
 33573                           
 33574                           ; BSR set to: 0
 33575  0065FC  90D8               	bcf	status,0,c
 33576  0065FE  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33577  006600  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33578  006602  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33579  006604  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33580  006606  2B6C               	incf	___llmod@counter& (0+255),f,b
 33581  006608                     l12117:
 33582                           
 33583                           ; BSR set to: 0
 33584  006608  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33585  00660A  D7F8               	goto	l12115
 33586  00660C                     l12119:
 33587                           
 33588                           ; BSR set to: 0
 33589  00660C  5168               	movf	___llmod@divisor& (0+255),w,b
 33590  00660E  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33591  006610  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33592  006612  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33593  006614  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33594  006616  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33595  006618  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33596  00661A  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33597  00661C  E308               	bnc	l12123
 33598                           
 33599                           ; BSR set to: 0
 33600  00661E  5168               	movf	___llmod@divisor& (0+255),w,b
 33601  006620  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33602  006622  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33603  006624  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33604  006626  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33605  006628  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33606  00662A  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33607  00662C  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33608  00662E                     l12123:
 33609                           
 33610                           ; BSR set to: 0
 33611  00662E  90D8               	bcf	status,0,c
 33612  006630  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33613  006632  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33614  006634  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33615  006636  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33616                           
 33617                           ; BSR set to: 0
 33618  006638  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33619  00663A  D7E8               	goto	l12119
 33620  00663C                     l3113:
 33621                           
 33622                           ; BSR set to: 0
 33623  00663C  C064  F064         	movff	___llmod@dividend,?___llmod
 33624  006640  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33625  006644  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33626  006648  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33627                           
 33628                           ; BSR set to: 0
 33629  00664C  0012               	return		;funcret
 33630  00664E                     __end_of___llmod:
 33631                           	opt stack 0
 33632                           tosu	equ	0xFFF
 33633                           tosh	equ	0xFFE
 33634                           tosl	equ	0xFFD
 33635                           pclath	equ	0xFFA
 33636                           tblptru	equ	0xFF8
 33637                           tblptrh	equ	0xFF7
 33638                           tblptrl	equ	0xFF6
 33639                           tablat	equ	0xFF5
 33640                           prodh	equ	0xFF4
 33641                           prodl	equ	0xFF3
 33642                           intcon	equ	0xFF2
 33643                           intcon2	equ	0xFF1
 33644                           intcon3	equ	0xFF0
 33645                           indf0	equ	0xFEF
 33646                           postinc0	equ	0xFEE
 33647                           plusw0	equ	0xFEB
 33648                           fsr0h	equ	0xFEA
 33649                           fsr0l	equ	0xFE9
 33650                           wreg	equ	0xFE8
 33651                           postinc1	equ	0xFE6
 33652                           postdec1	equ	0xFE5
 33653                           plusw1	equ	0xFE3
 33654                           fsr1h	equ	0xFE2
 33655                           fsr1l	equ	0xFE1
 33656                           indf2	equ	0xFDF
 33657                           postinc2	equ	0xFDE
 33658                           postdec2	equ	0xFDD
 33659                           plusw2	equ	0xFDB
 33660                           fsr2h	equ	0xFDA
 33661                           fsr2l	equ	0xFD9
 33662                           status	equ	0xFD8
 33663                           
 33664 ;; *************** function _RADIO_RegisterWrite *****************
 33665 ;; Defined at:
 33666 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33667 ;; Parameters:    Size  Location     Type
 33668 ;;  reg             1    wreg     unsigned char 
 33669 ;;  value           1    6[BANK0 ] unsigned char 
 33670 ;; Auto vars:     Size  Location     Type
 33671 ;;  reg             1    7[BANK0 ] unsigned char 
 33672 ;; Return value:  Size  Location     Type
 33673 ;;                  1    wreg      void 
 33674 ;; Registers used:
 33675 ;;		wreg, status,2, status,0, cstack
 33676 ;; Tracked objects:
 33677 ;;		On entry : 0/0
 33678 ;;		On exit  : 0/0
 33679 ;;		Unchanged: 0/0
 33680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33681 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33685 ;;Total ram usage:        2 bytes
 33686 ;; Hardware stack levels used:    1
 33687 ;; Hardware stack levels required when called:    9
 33688 ;; This function calls:
 33689 ;;		_HALSPICSAssert
 33690 ;;		_HALSPICSDeassert
 33691 ;;		_HALSPISend
 33692 ;; This function is called by:
 33693 ;;		_RADIO_WriteMode
 33694 ;;		_RADIO_WriteFrequency
 33695 ;;		_RADIO_WriteFSKFrequencyDeviation
 33696 ;;		_RADIO_WriteFSKBitRate
 33697 ;;		_RADIO_WritePower
 33698 ;;		_RADIO_Init
 33699 ;;		_RADIO_WriteConfiguration
 33700 ;;		_RADIO_Transmit
 33701 ;;		_RADIO_ReceiveStart
 33702 ;;		_RADIO_RxDone
 33703 ;;		_RADIO_RxTimeout
 33704 ;;		_RADIO_TxDone
 33705 ;;		_RADIO_UnhandledInterrupt
 33706 ;;		_RADIO_FHSSChangeChannel
 33707 ;;		_RADIO_ReadRandom
 33708 ;; This function uses a non-reentrant model
 33709 ;;
 33710                           
 33711                           	psect	text173
 33712  007496                     __ptext173:
 33713                           	opt stack 0
 33714  007496                     _RADIO_RegisterWrite:
 33715                           	opt stack 17
 33716                           
 33717                           ; BSR set to: 0
 33718                           ;incstack = 0
 33719                           ;RADIO_RegisterWrite@reg stored from wreg
 33720  007496  0100               	movlb	0	; () banked
 33721  007498  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33722                           
 33723                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33724  00749A  EC88  F03C         	call	_HALSPICSAssert	;wreg free
 33725                           
 33726                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33727  00749E  0100               	movlb	0	; () banked
 33728  0074A0  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33729  0074A2  0980               	iorlw	128
 33730  0074A4  EC30  F03C         	call	_HALSPISend
 33731                           
 33732                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33733  0074A8  0100               	movlb	0	; () banked
 33734  0074AA  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33735  0074AC  EC30  F03C         	call	_HALSPISend
 33736                           
 33737                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33738  0074B0  EF86  F03C         	goto	_HALSPICSDeassert	;wreg free
 33739  0074B4                     __end_of_RADIO_RegisterWrite:
 33740                           	opt stack 0
 33741                           tosu	equ	0xFFF
 33742                           tosh	equ	0xFFE
 33743                           tosl	equ	0xFFD
 33744                           pclath	equ	0xFFA
 33745                           tblptru	equ	0xFF8
 33746                           tblptrh	equ	0xFF7
 33747                           tblptrl	equ	0xFF6
 33748                           tablat	equ	0xFF5
 33749                           prodh	equ	0xFF4
 33750                           prodl	equ	0xFF3
 33751                           intcon	equ	0xFF2
 33752                           intcon2	equ	0xFF1
 33753                           intcon3	equ	0xFF0
 33754                           indf0	equ	0xFEF
 33755                           postinc0	equ	0xFEE
 33756                           plusw0	equ	0xFEB
 33757                           fsr0h	equ	0xFEA
 33758                           fsr0l	equ	0xFE9
 33759                           wreg	equ	0xFE8
 33760                           postinc1	equ	0xFE6
 33761                           postdec1	equ	0xFE5
 33762                           plusw1	equ	0xFE3
 33763                           fsr1h	equ	0xFE2
 33764                           fsr1l	equ	0xFE1
 33765                           indf2	equ	0xFDF
 33766                           postinc2	equ	0xFDE
 33767                           postdec2	equ	0xFDD
 33768                           plusw2	equ	0xFDB
 33769                           fsr2h	equ	0xFDA
 33770                           fsr2l	equ	0xFD9
 33771                           status	equ	0xFD8
 33772                           
 33773 ;; *************** function _HALSPISend *****************
 33774 ;; Defined at:
 33775 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33776 ;; Parameters:    Size  Location     Type
 33777 ;;  data            1    wreg     unsigned char 
 33778 ;; Auto vars:     Size  Location     Type
 33779 ;;  data            1    5[BANK0 ] unsigned char 
 33780 ;; Return value:  Size  Location     Type
 33781 ;;                  1    wreg      unsigned char 
 33782 ;; Registers used:
 33783 ;;		wreg, status,2, cstack
 33784 ;; Tracked objects:
 33785 ;;		On entry : 0/1
 33786 ;;		On exit  : 0/0
 33787 ;;		Unchanged: 0/0
 33788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33792 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33793 ;;Total ram usage:        1 bytes
 33794 ;; Hardware stack levels used:    1
 33795 ;; Hardware stack levels required when called:    8
 33796 ;; This function calls:
 33797 ;;		_SPI2_Exchange8bit
 33798 ;; This function is called by:
 33799 ;;		_RADIO_RegisterWrite
 33800 ;;		_RADIO_RegisterRead
 33801 ;;		_RADIO_Transmit
 33802 ;;		_RADIO_RxDone
 33803 ;;		_RADIO_FSKPayloadReady
 33804 ;; This function uses a non-reentrant model
 33805 ;;
 33806                           
 33807                           	psect	text174
 33808  007860                     __ptext174:
 33809                           	opt stack 0
 33810  007860                     _HALSPISend:
 33811                           	opt stack 17
 33812                           
 33813                           ;incstack = 0
 33814                           ;HALSPISend@data stored from wreg
 33815  007860  0100               	movlb	0	; () banked
 33816  007862  6F65               	movwf	HALSPISend@data& (0+255),b
 33817                           
 33818                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33819  007864  5165               	movf	HALSPISend@data& (0+255),w,b
 33820  007866  EFA1  F03B         	goto	_SPI2_Exchange8bit
 33821  00786A                     __end_of_HALSPISend:
 33822                           	opt stack 0
 33823                           tosu	equ	0xFFF
 33824                           tosh	equ	0xFFE
 33825                           tosl	equ	0xFFD
 33826                           pclath	equ	0xFFA
 33827                           tblptru	equ	0xFF8
 33828                           tblptrh	equ	0xFF7
 33829                           tblptrl	equ	0xFF6
 33830                           tablat	equ	0xFF5
 33831                           prodh	equ	0xFF4
 33832                           prodl	equ	0xFF3
 33833                           intcon	equ	0xFF2
 33834                           intcon2	equ	0xFF1
 33835                           intcon3	equ	0xFF0
 33836                           indf0	equ	0xFEF
 33837                           postinc0	equ	0xFEE
 33838                           plusw0	equ	0xFEB
 33839                           fsr0h	equ	0xFEA
 33840                           fsr0l	equ	0xFE9
 33841                           wreg	equ	0xFE8
 33842                           postinc1	equ	0xFE6
 33843                           postdec1	equ	0xFE5
 33844                           plusw1	equ	0xFE3
 33845                           fsr1h	equ	0xFE2
 33846                           fsr1l	equ	0xFE1
 33847                           indf2	equ	0xFDF
 33848                           postinc2	equ	0xFDE
 33849                           postdec2	equ	0xFDD
 33850                           plusw2	equ	0xFDB
 33851                           fsr2h	equ	0xFDA
 33852                           fsr2l	equ	0xFD9
 33853                           status	equ	0xFD8
 33854                           
 33855 ;; *************** function _SPI2_Exchange8bit *****************
 33856 ;; Defined at:
 33857 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33858 ;; Parameters:    Size  Location     Type
 33859 ;;  data            1    wreg     unsigned char 
 33860 ;; Auto vars:     Size  Location     Type
 33861 ;;  data            1    4[BANK0 ] unsigned char 
 33862 ;; Return value:  Size  Location     Type
 33863 ;;                  1    wreg      unsigned char 
 33864 ;; Registers used:
 33865 ;;		wreg, status,2
 33866 ;; Tracked objects:
 33867 ;;		On entry : F/0
 33868 ;;		On exit  : 0/0
 33869 ;;		Unchanged: 0/0
 33870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33875 ;;Total ram usage:        1 bytes
 33876 ;; Hardware stack levels used:    1
 33877 ;; Hardware stack levels required when called:    7
 33878 ;; This function calls:
 33879 ;;		Nothing
 33880 ;; This function is called by:
 33881 ;;		_HALSPISend
 33882 ;; This function uses a non-reentrant model
 33883 ;;
 33884                           
 33885                           	psect	text175
 33886  007742                     __ptext175:
 33887                           	opt stack 0
 33888  007742                     _SPI2_Exchange8bit:
 33889                           	opt stack 17
 33890                           
 33891                           ;incstack = 0
 33892                           ;SPI2_Exchange8bit@data stored from wreg
 33893  007742  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 33894                           
 33895                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 33896  007744  9E6C               	bcf	3948,7,c	;volatile
 33897                           
 33898                           ;spi2.c: 82: SSP2BUF = data;
 33899  007746  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 33900  00774A                     l192:
 33901  00774A  A06D               	btfss	3949,0,c	;volatile
 33902  00774C  D7FE               	goto	l192
 33903                           
 33904                           ;spi2.c: 86: }
 33905                           ;spi2.c: 88: return (SSP2BUF);
 33906  00774E  506F               	movf	3951,w,c	;volatile
 33907  007750  0012               	return		;funcret
 33908  007752                     __end_of_SPI2_Exchange8bit:
 33909                           	opt stack 0
 33910                           tosu	equ	0xFFF
 33911                           tosh	equ	0xFFE
 33912                           tosl	equ	0xFFD
 33913                           pclath	equ	0xFFA
 33914                           tblptru	equ	0xFF8
 33915                           tblptrh	equ	0xFF7
 33916                           tblptrl	equ	0xFF6
 33917                           tablat	equ	0xFF5
 33918                           prodh	equ	0xFF4
 33919                           prodl	equ	0xFF3
 33920                           intcon	equ	0xFF2
 33921                           intcon2	equ	0xFF1
 33922                           intcon3	equ	0xFF0
 33923                           indf0	equ	0xFEF
 33924                           postinc0	equ	0xFEE
 33925                           plusw0	equ	0xFEB
 33926                           fsr0h	equ	0xFEA
 33927                           fsr0l	equ	0xFE9
 33928                           wreg	equ	0xFE8
 33929                           postinc1	equ	0xFE6
 33930                           postdec1	equ	0xFE5
 33931                           plusw1	equ	0xFE3
 33932                           fsr1h	equ	0xFE2
 33933                           fsr1l	equ	0xFE1
 33934                           indf2	equ	0xFDF
 33935                           postinc2	equ	0xFDE
 33936                           postdec2	equ	0xFDD
 33937                           plusw2	equ	0xFDB
 33938                           fsr2h	equ	0xFDA
 33939                           fsr2l	equ	0xFD9
 33940                           status	equ	0xFD8
 33941                           
 33942 ;; *************** function _HALSPICSDeassert *****************
 33943 ;; Defined at:
 33944 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33945 ;; Parameters:    Size  Location     Type
 33946 ;;		None
 33947 ;; Auto vars:     Size  Location     Type
 33948 ;;		None
 33949 ;; Return value:  Size  Location     Type
 33950 ;;                  1    wreg      void 
 33951 ;; Registers used:
 33952 ;;		None
 33953 ;; Tracked objects:
 33954 ;;		On entry : 0/0
 33955 ;;		On exit  : 0/0
 33956 ;;		Unchanged: 0/0
 33957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33962 ;;Total ram usage:        0 bytes
 33963 ;; Hardware stack levels used:    1
 33964 ;; Hardware stack levels required when called:    7
 33965 ;; This function calls:
 33966 ;;		Nothing
 33967 ;; This function is called by:
 33968 ;;		_RADIO_RegisterWrite
 33969 ;;		_RADIO_RegisterRead
 33970 ;;		_RADIO_Transmit
 33971 ;;		_RADIO_RxDone
 33972 ;;		_RADIO_FSKPayloadReady
 33973 ;; This function uses a non-reentrant model
 33974 ;;
 33975                           
 33976                           	psect	text176
 33977  00790C                     __ptext176:
 33978                           	opt stack 0
 33979  00790C                     _HALSPICSDeassert:
 33980                           	opt stack 18
 33981                           
 33982                           ;incstack = 0
 33983                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 33984  00790C  868C               	bsf	3980,3,c	;volatile
 33985  00790E  0012               	return		;funcret
 33986  007910                     __end_of_HALSPICSDeassert:
 33987                           	opt stack 0
 33988                           tosu	equ	0xFFF
 33989                           tosh	equ	0xFFE
 33990                           tosl	equ	0xFFD
 33991                           pclath	equ	0xFFA
 33992                           tblptru	equ	0xFF8
 33993                           tblptrh	equ	0xFF7
 33994                           tblptrl	equ	0xFF6
 33995                           tablat	equ	0xFF5
 33996                           prodh	equ	0xFF4
 33997                           prodl	equ	0xFF3
 33998                           intcon	equ	0xFF2
 33999                           intcon2	equ	0xFF1
 34000                           intcon3	equ	0xFF0
 34001                           indf0	equ	0xFEF
 34002                           postinc0	equ	0xFEE
 34003                           plusw0	equ	0xFEB
 34004                           fsr0h	equ	0xFEA
 34005                           fsr0l	equ	0xFE9
 34006                           wreg	equ	0xFE8
 34007                           postinc1	equ	0xFE6
 34008                           postdec1	equ	0xFE5
 34009                           plusw1	equ	0xFE3
 34010                           fsr1h	equ	0xFE2
 34011                           fsr1l	equ	0xFE1
 34012                           indf2	equ	0xFDF
 34013                           postinc2	equ	0xFDE
 34014                           postdec2	equ	0xFDD
 34015                           plusw2	equ	0xFDB
 34016                           fsr2h	equ	0xFDA
 34017                           fsr2l	equ	0xFD9
 34018                           status	equ	0xFD8
 34019                           
 34020 ;; *************** function _HALSPICSAssert *****************
 34021 ;; Defined at:
 34022 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34023 ;; Parameters:    Size  Location     Type
 34024 ;;		None
 34025 ;; Auto vars:     Size  Location     Type
 34026 ;;		None
 34027 ;; Return value:  Size  Location     Type
 34028 ;;                  1    wreg      void 
 34029 ;; Registers used:
 34030 ;;		None
 34031 ;; Tracked objects:
 34032 ;;		On entry : 0/1
 34033 ;;		On exit  : 0/0
 34034 ;;		Unchanged: 0/0
 34035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34040 ;;Total ram usage:        0 bytes
 34041 ;; Hardware stack levels used:    1
 34042 ;; Hardware stack levels required when called:    7
 34043 ;; This function calls:
 34044 ;;		Nothing
 34045 ;; This function is called by:
 34046 ;;		_RADIO_RegisterWrite
 34047 ;;		_RADIO_RegisterRead
 34048 ;;		_RADIO_Transmit
 34049 ;;		_RADIO_RxDone
 34050 ;;		_RADIO_FSKPayloadReady
 34051 ;; This function uses a non-reentrant model
 34052 ;;
 34053                           
 34054                           	psect	text177
 34055  007910                     __ptext177:
 34056                           	opt stack 0
 34057  007910                     _HALSPICSAssert:
 34058                           	opt stack 18
 34059                           
 34060                           ;incstack = 0
 34061                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 34062  007910  968C               	bcf	3980,3,c	;volatile
 34063  007912  0012               	return		;funcret
 34064  007914                     __end_of_HALSPICSAssert:
 34065                           	opt stack 0
 34066                           tosu	equ	0xFFF
 34067                           tosh	equ	0xFFE
 34068                           tosl	equ	0xFFD
 34069                           pclath	equ	0xFFA
 34070                           tblptru	equ	0xFF8
 34071                           tblptrh	equ	0xFF7
 34072                           tblptrl	equ	0xFF6
 34073                           tablat	equ	0xFF5
 34074                           prodh	equ	0xFF4
 34075                           prodl	equ	0xFF3
 34076                           intcon	equ	0xFF2
 34077                           intcon2	equ	0xFF1
 34078                           intcon3	equ	0xFF0
 34079                           indf0	equ	0xFEF
 34080                           postinc0	equ	0xFEE
 34081                           plusw0	equ	0xFEB
 34082                           fsr0h	equ	0xFEA
 34083                           fsr0l	equ	0xFE9
 34084                           wreg	equ	0xFE8
 34085                           postinc1	equ	0xFE6
 34086                           postdec1	equ	0xFE5
 34087                           plusw1	equ	0xFE3
 34088                           fsr1h	equ	0xFE2
 34089                           fsr1l	equ	0xFE1
 34090                           indf2	equ	0xFDF
 34091                           postinc2	equ	0xFDE
 34092                           postdec2	equ	0xFDD
 34093                           plusw2	equ	0xFDB
 34094                           fsr2h	equ	0xFDA
 34095                           fsr2l	equ	0xFD9
 34096                           status	equ	0xFD8
 34097                           
 34098 ;; *************** function _RADIO_Reset *****************
 34099 ;; Defined at:
 34100 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34101 ;; Parameters:    Size  Location     Type
 34102 ;;		None
 34103 ;; Auto vars:     Size  Location     Type
 34104 ;;		None
 34105 ;; Return value:  Size  Location     Type
 34106 ;;                  1    wreg      void 
 34107 ;; Registers used:
 34108 ;;		wreg, status,2, status,0, cstack
 34109 ;; Tracked objects:
 34110 ;;		On entry : E/1
 34111 ;;		On exit  : E/0
 34112 ;;		Unchanged: 0/0
 34113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34118 ;;Total ram usage:        0 bytes
 34119 ;; Hardware stack levels used:    1
 34120 ;; Hardware stack levels required when called:    8
 34121 ;; This function calls:
 34122 ;;		_HALResetPinMakeInput
 34123 ;;		_HALResetPinMakeOutput
 34124 ;;		_HALResetPinOutputValue
 34125 ;;		_SystemBlockingWaitMs
 34126 ;; This function is called by:
 34127 ;;		_RADIO_Init
 34128 ;; This function uses a non-reentrant model
 34129 ;;
 34130                           
 34131                           	psect	text178
 34132  006FD8                     __ptext178:
 34133                           	opt stack 0
 34134  006FD8                     _RADIO_Reset:
 34135                           	opt stack 20
 34136                           
 34137                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34138                           
 34139                           ;incstack = 0
 34140  006FD8  EC8A  F03C         	call	_HALResetPinMakeOutput	;wreg free
 34141                           
 34142                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34143  006FDC  0E00               	movlw	0
 34144  006FDE  EC73  F03B         	call	_HALResetPinOutputValue
 34145                           
 34146                           ; BSR set to: 0
 34147                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34148  006FE2  0E01               	movlw	1
 34149  006FE4  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34150  006FE6  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34151  006FE8  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34152  006FEA  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34153  006FEC  ECD7  F038         	call	_SystemBlockingWaitMs	;wreg free
 34154                           
 34155                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34156  006FF0  EC8C  F03C         	call	_HALResetPinMakeInput	;wreg free
 34157                           
 34158                           ; BSR set to: 0
 34159                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34160  006FF4  0E0A               	movlw	10
 34161  006FF6  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34162  006FF8  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34163  006FFA  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34164  006FFC  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34165  006FFE  ECD7  F038         	call	_SystemBlockingWaitMs	;wreg free
 34166                           
 34167                           ; BSR set to: 0
 34168                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34169  007002  0E01               	movlw	1
 34170  007004  EC73  F03B         	call	_HALResetPinOutputValue
 34171                           
 34172                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34173  007008  EF8A  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 34174  00700C                     __end_of_RADIO_Reset:
 34175                           	opt stack 0
 34176                           tosu	equ	0xFFF
 34177                           tosh	equ	0xFFE
 34178                           tosl	equ	0xFFD
 34179                           pclath	equ	0xFFA
 34180                           tblptru	equ	0xFF8
 34181                           tblptrh	equ	0xFF7
 34182                           tblptrl	equ	0xFF6
 34183                           tablat	equ	0xFF5
 34184                           prodh	equ	0xFF4
 34185                           prodl	equ	0xFF3
 34186                           intcon	equ	0xFF2
 34187                           intcon2	equ	0xFF1
 34188                           intcon3	equ	0xFF0
 34189                           indf0	equ	0xFEF
 34190                           postinc0	equ	0xFEE
 34191                           plusw0	equ	0xFEB
 34192                           fsr0h	equ	0xFEA
 34193                           fsr0l	equ	0xFE9
 34194                           wreg	equ	0xFE8
 34195                           postinc1	equ	0xFE6
 34196                           postdec1	equ	0xFE5
 34197                           plusw1	equ	0xFE3
 34198                           fsr1h	equ	0xFE2
 34199                           fsr1l	equ	0xFE1
 34200                           indf2	equ	0xFDF
 34201                           postinc2	equ	0xFDE
 34202                           postdec2	equ	0xFDD
 34203                           plusw2	equ	0xFDB
 34204                           fsr2h	equ	0xFDA
 34205                           fsr2l	equ	0xFD9
 34206                           status	equ	0xFD8
 34207                           
 34208 ;; *************** function _SystemBlockingWaitMs *****************
 34209 ;; Defined at:
 34210 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34211 ;; Parameters:    Size  Location     Type
 34212 ;;  ms              4    4[BANK0 ] unsigned long 
 34213 ;; Auto vars:     Size  Location     Type
 34214 ;;		None
 34215 ;; Return value:  Size  Location     Type
 34216 ;;                  1    wreg      void 
 34217 ;; Registers used:
 34218 ;;		wreg, status,2, status,0
 34219 ;; Tracked objects:
 34220 ;;		On entry : F/0
 34221 ;;		On exit  : F/0
 34222 ;;		Unchanged: 0/0
 34223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34227 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34228 ;;Total ram usage:        5 bytes
 34229 ;; Hardware stack levels used:    1
 34230 ;; Hardware stack levels required when called:    7
 34231 ;; This function calls:
 34232 ;;		Nothing
 34233 ;; This function is called by:
 34234 ;;		_RADIO_WriteMode
 34235 ;;		_RADIO_Reset
 34236 ;;		_RADIO_ReadRandom
 34237 ;; This function uses a non-reentrant model
 34238 ;;
 34239                           
 34240                           	psect	text179
 34241  0071AE                     __ptext179:
 34242                           	opt stack 0
 34243  0071AE                     _SystemBlockingWaitMs:
 34244                           	opt stack 19
 34245                           
 34246                           ; BSR set to: 0
 34247                           ;sw_timer.c: 147: while (ms > 0)
 34248                           
 34249                           ;incstack = 0
 34250  0071AE  D00E               	goto	l11961
 34251  0071B0                     l11957:
 34252                           
 34253                           ; BSR set to: 0
 34254                           ;sw_timer.c: 148: {
 34255                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34256  0071B0  0E06               	movlw	6
 34257  0071B2  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34258  0071B4  0E30               	movlw	48
 34259  0071B6                     u19737:
 34260  0071B6  2EE8               	decfsz	wreg,f,c
 34261  0071B8  D7FE               	goto	u19737
 34262  0071BA  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34263  0071BC  D7FC               	goto	u19737
 34264  0071BE  D000               	nop2	
 34265                           
 34266                           ;sw_timer.c: 150: ms--;
 34267  0071C0  0100               	movlb	0	; () banked
 34268  0071C2  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34269  0071C4  0E00               	movlw	0
 34270  0071C6  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34271  0071C8  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34272  0071CA  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34273  0071CC                     l11961:
 34274                           
 34275                           ; BSR set to: 0
 34276  0071CC  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34277  0071CE  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34278  0071D0  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34279  0071D2  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34280  0071D4  E1ED               	bnz	l11957
 34281                           
 34282                           ; BSR set to: 0
 34283  0071D6  0012               	return		;funcret
 34284  0071D8                     __end_of_SystemBlockingWaitMs:
 34285                           	opt stack 0
 34286                           tosu	equ	0xFFF
 34287                           tosh	equ	0xFFE
 34288                           tosl	equ	0xFFD
 34289                           pclath	equ	0xFFA
 34290                           tblptru	equ	0xFF8
 34291                           tblptrh	equ	0xFF7
 34292                           tblptrl	equ	0xFF6
 34293                           tablat	equ	0xFF5
 34294                           prodh	equ	0xFF4
 34295                           prodl	equ	0xFF3
 34296                           intcon	equ	0xFF2
 34297                           intcon2	equ	0xFF1
 34298                           intcon3	equ	0xFF0
 34299                           indf0	equ	0xFEF
 34300                           postinc0	equ	0xFEE
 34301                           plusw0	equ	0xFEB
 34302                           fsr0h	equ	0xFEA
 34303                           fsr0l	equ	0xFE9
 34304                           wreg	equ	0xFE8
 34305                           postinc1	equ	0xFE6
 34306                           postdec1	equ	0xFE5
 34307                           plusw1	equ	0xFE3
 34308                           fsr1h	equ	0xFE2
 34309                           fsr1l	equ	0xFE1
 34310                           indf2	equ	0xFDF
 34311                           postinc2	equ	0xFDE
 34312                           postdec2	equ	0xFDD
 34313                           plusw2	equ	0xFDB
 34314                           fsr2h	equ	0xFDA
 34315                           fsr2l	equ	0xFD9
 34316                           status	equ	0xFD8
 34317                           
 34318 ;; *************** function _HALResetPinOutputValue *****************
 34319 ;; Defined at:
 34320 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34321 ;; Parameters:    Size  Location     Type
 34322 ;;  value           1    wreg     unsigned char 
 34323 ;; Auto vars:     Size  Location     Type
 34324 ;;  value           1    4[BANK0 ] unsigned char 
 34325 ;; Return value:  Size  Location     Type
 34326 ;;                  1    wreg      void 
 34327 ;; Registers used:
 34328 ;;		wreg, status,2, status,0
 34329 ;; Tracked objects:
 34330 ;;		On entry : E/1
 34331 ;;		On exit  : F/0
 34332 ;;		Unchanged: 0/0
 34333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34338 ;;Total ram usage:        1 bytes
 34339 ;; Hardware stack levels used:    1
 34340 ;; Hardware stack levels required when called:    7
 34341 ;; This function calls:
 34342 ;;		Nothing
 34343 ;; This function is called by:
 34344 ;;		_RADIO_Reset
 34345 ;; This function uses a non-reentrant model
 34346 ;;
 34347                           
 34348                           	psect	text180
 34349  0076E6                     __ptext180:
 34350                           	opt stack 0
 34351  0076E6                     _HALResetPinOutputValue:
 34352                           	opt stack 20
 34353                           
 34354                           ; BSR set to: 0
 34355                           ;incstack = 0
 34356                           ;HALResetPinOutputValue@value stored from wreg
 34357  0076E6  0100               	movlb	0	; () banked
 34358  0076E8  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34359                           
 34360                           ;radio_driver_hal.c: 57: if (value == 0)
 34361  0076EA  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34362  0076EC  E102               	bnz	l13805
 34363                           
 34364                           ; BSR set to: 0
 34365                           
 34366                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34367  0076EE  948B               	bcf	3979,2,c	;volatile
 34368  0076F0  0012               	return	
 34369  0076F2                     l13805:
 34370                           
 34371                           ; BSR set to: 0
 34372                           ;radio_driver_hal.c: 59: else if (value == 1)
 34373  0076F2  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34374  0076F4  B4D8               	btfsc	status,2,c
 34375                           
 34376                           ; BSR set to: 0
 34377                           
 34378                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34379  0076F6  848B               	bsf	3979,2,c	;volatile
 34380                           
 34381                           ; BSR set to: 0
 34382  0076F8  0012               	return		;funcret
 34383  0076FA                     __end_of_HALResetPinOutputValue:
 34384                           	opt stack 0
 34385                           tosu	equ	0xFFF
 34386                           tosh	equ	0xFFE
 34387                           tosl	equ	0xFFD
 34388                           pclath	equ	0xFFA
 34389                           tblptru	equ	0xFF8
 34390                           tblptrh	equ	0xFF7
 34391                           tblptrl	equ	0xFF6
 34392                           tablat	equ	0xFF5
 34393                           prodh	equ	0xFF4
 34394                           prodl	equ	0xFF3
 34395                           intcon	equ	0xFF2
 34396                           intcon2	equ	0xFF1
 34397                           intcon3	equ	0xFF0
 34398                           indf0	equ	0xFEF
 34399                           postinc0	equ	0xFEE
 34400                           plusw0	equ	0xFEB
 34401                           fsr0h	equ	0xFEA
 34402                           fsr0l	equ	0xFE9
 34403                           wreg	equ	0xFE8
 34404                           postinc1	equ	0xFE6
 34405                           postdec1	equ	0xFE5
 34406                           plusw1	equ	0xFE3
 34407                           fsr1h	equ	0xFE2
 34408                           fsr1l	equ	0xFE1
 34409                           indf2	equ	0xFDF
 34410                           postinc2	equ	0xFDE
 34411                           postdec2	equ	0xFDD
 34412                           plusw2	equ	0xFDB
 34413                           fsr2h	equ	0xFDA
 34414                           fsr2l	equ	0xFD9
 34415                           status	equ	0xFD8
 34416                           
 34417 ;; *************** function _HALResetPinMakeOutput *****************
 34418 ;; Defined at:
 34419 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34420 ;; Parameters:    Size  Location     Type
 34421 ;;		None
 34422 ;; Auto vars:     Size  Location     Type
 34423 ;;		None
 34424 ;; Return value:  Size  Location     Type
 34425 ;;                  1    wreg      void 
 34426 ;; Registers used:
 34427 ;;		None
 34428 ;; Tracked objects:
 34429 ;;		On entry : E/1
 34430 ;;		On exit  : E/0
 34431 ;;		Unchanged: E/0
 34432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34437 ;;Total ram usage:        0 bytes
 34438 ;; Hardware stack levels used:    1
 34439 ;; Hardware stack levels required when called:    7
 34440 ;; This function calls:
 34441 ;;		Nothing
 34442 ;; This function is called by:
 34443 ;;		_RADIO_Reset
 34444 ;; This function uses a non-reentrant model
 34445 ;;
 34446                           
 34447                           	psect	text181
 34448  007914                     __ptext181:
 34449                           	opt stack 0
 34450  007914                     _HALResetPinMakeOutput:
 34451                           	opt stack 20
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;incstack = 0
 34455                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34456  007914  9494               	bcf	3988,2,c	;volatile
 34457  007916  0012               	return		;funcret
 34458  007918                     __end_of_HALResetPinMakeOutput:
 34459                           	opt stack 0
 34460                           tosu	equ	0xFFF
 34461                           tosh	equ	0xFFE
 34462                           tosl	equ	0xFFD
 34463                           pclath	equ	0xFFA
 34464                           tblptru	equ	0xFF8
 34465                           tblptrh	equ	0xFF7
 34466                           tblptrl	equ	0xFF6
 34467                           tablat	equ	0xFF5
 34468                           prodh	equ	0xFF4
 34469                           prodl	equ	0xFF3
 34470                           intcon	equ	0xFF2
 34471                           intcon2	equ	0xFF1
 34472                           intcon3	equ	0xFF0
 34473                           indf0	equ	0xFEF
 34474                           postinc0	equ	0xFEE
 34475                           plusw0	equ	0xFEB
 34476                           fsr0h	equ	0xFEA
 34477                           fsr0l	equ	0xFE9
 34478                           wreg	equ	0xFE8
 34479                           postinc1	equ	0xFE6
 34480                           postdec1	equ	0xFE5
 34481                           plusw1	equ	0xFE3
 34482                           fsr1h	equ	0xFE2
 34483                           fsr1l	equ	0xFE1
 34484                           indf2	equ	0xFDF
 34485                           postinc2	equ	0xFDE
 34486                           postdec2	equ	0xFDD
 34487                           plusw2	equ	0xFDB
 34488                           fsr2h	equ	0xFDA
 34489                           fsr2l	equ	0xFD9
 34490                           status	equ	0xFD8
 34491                           
 34492 ;; *************** function _HALResetPinMakeInput *****************
 34493 ;; Defined at:
 34494 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34495 ;; Parameters:    Size  Location     Type
 34496 ;;		None
 34497 ;; Auto vars:     Size  Location     Type
 34498 ;;		None
 34499 ;; Return value:  Size  Location     Type
 34500 ;;                  1    wreg      void 
 34501 ;; Registers used:
 34502 ;;		None
 34503 ;; Tracked objects:
 34504 ;;		On entry : F/0
 34505 ;;		On exit  : F/0
 34506 ;;		Unchanged: F/0
 34507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34512 ;;Total ram usage:        0 bytes
 34513 ;; Hardware stack levels used:    1
 34514 ;; Hardware stack levels required when called:    7
 34515 ;; This function calls:
 34516 ;;		Nothing
 34517 ;; This function is called by:
 34518 ;;		_RADIO_Reset
 34519 ;; This function uses a non-reentrant model
 34520 ;;
 34521                           
 34522                           	psect	text182
 34523  007918                     __ptext182:
 34524                           	opt stack 0
 34525  007918                     _HALResetPinMakeInput:
 34526                           	opt stack 20
 34527                           
 34528                           ; BSR set to: 0
 34529                           
 34530                           ;incstack = 0
 34531                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 34532  007918  8494               	bsf	3988,2,c	;volatile
 34533                           
 34534                           ; BSR set to: 0
 34535  00791A  0012               	return		;funcret
 34536  00791C                     __end_of_HALResetPinMakeInput:
 34537                           	opt stack 0
 34538                           tosu	equ	0xFFF
 34539                           tosh	equ	0xFFE
 34540                           tosl	equ	0xFFD
 34541                           pclath	equ	0xFFA
 34542                           tblptru	equ	0xFF8
 34543                           tblptrh	equ	0xFF7
 34544                           tblptrl	equ	0xFF6
 34545                           tablat	equ	0xFF5
 34546                           prodh	equ	0xFF4
 34547                           prodl	equ	0xFF3
 34548                           intcon	equ	0xFF2
 34549                           intcon2	equ	0xFF1
 34550                           intcon3	equ	0xFF0
 34551                           indf0	equ	0xFEF
 34552                           postinc0	equ	0xFEE
 34553                           plusw0	equ	0xFEB
 34554                           fsr0h	equ	0xFEA
 34555                           fsr0l	equ	0xFE9
 34556                           wreg	equ	0xFE8
 34557                           postinc1	equ	0xFE6
 34558                           postdec1	equ	0xFE5
 34559                           plusw1	equ	0xFE3
 34560                           fsr1h	equ	0xFE2
 34561                           fsr1l	equ	0xFE1
 34562                           indf2	equ	0xFDF
 34563                           postinc2	equ	0xFDE
 34564                           postdec2	equ	0xFDD
 34565                           plusw2	equ	0xFDB
 34566                           fsr2h	equ	0xFDA
 34567                           fsr2l	equ	0xFD9
 34568                           status	equ	0xFD8
 34569                           
 34570 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34571 ;; Defined at:
 34572 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34573 ;; Parameters:    Size  Location     Type
 34574 ;;  period          2   54[BANK0 ] unsigned int 
 34575 ;; Auto vars:     Size  Location     Type
 34576 ;;  iCtr            1   68[BANK0 ] unsigned char 
 34577 ;; Return value:  Size  Location     Type
 34578 ;;                  1    wreg      void 
 34579 ;; Registers used:
 34580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34581 ;; Tracked objects:
 34582 ;;		On entry : F/0
 34583 ;;		On exit  : D/0
 34584 ;;		Unchanged: 0/0
 34585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34587 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34588 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34589 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34590 ;;Total ram usage:       15 bytes
 34591 ;; Hardware stack levels used:    1
 34592 ;; Hardware stack levels required when called:   11
 34593 ;; This function calls:
 34594 ;;		_SwTimerSetTimeout
 34595 ;;		_SwTimerStart
 34596 ;;		_SwTimerStop
 34597 ;;		___lldiv
 34598 ;; This function is called by:
 34599 ;;		_LORAWAN_Reset
 34600 ;; This function uses a non-reentrant model
 34601 ;;
 34602                           
 34603                           	psect	text183
 34604  0036D0                     __ptext183:
 34605                           	opt stack 0
 34606  0036D0                     _LORAWAN_LinkCheckConfigure:
 34607                           	opt stack 17
 34608                           
 34609                           ; BSR set to: 0
 34610                           ;lorawan.c: 757: uint8_t iCtr;
 34611                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34612                           
 34613                           ; BSR set to: 0
 34614                           ;incstack = 0
 34615  0036D0  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34616  0036D2  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34617  0036D4  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34618  0036D6  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34619  0036D8  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34620  0036DA  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34621  0036DC  0EE8               	movlw	232
 34622  0036DE  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34623  0036E0  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34624  0036E4  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34625  0036E8  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34626  0036EA  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34627  0036EC  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34628  0036EE  50F3               	movf	prodl,w,c
 34629  0036F0  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34630  0036F2  50F4               	movf	prodh,w,c
 34631  0036F4  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34632  0036F6  0E00               	movlw	0
 34633  0036F8  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34634  0036FA  0E03               	movlw	3
 34635  0036FC  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34636  0036FE  50F3               	movf	prodl,w,c
 34637  003700  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34638  003702  50F4               	movf	prodh,w,c
 34639  003704  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34640  003706  0E00               	movlw	0
 34641  003708  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34642  00370A  0EE8               	movlw	232
 34643  00370C  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34644  00370E  50F3               	movf	prodl,w,c
 34645  003710  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34646  003712  50F4               	movf	prodh,w,c
 34647  003714  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34648  003716  0E03               	movlw	3
 34649  003718  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34650  00371A  50F3               	movf	prodl,w,c
 34651  00371C  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34652  00371E  50F4               	movf	prodh,w,c
 34653  003720  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34654  003722  0E00               	movlw	0
 34655  003724  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34656  003726  50F3               	movf	prodl,w,c
 34657  003728  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34658  00372A  50F4               	movf	prodh,w,c
 34659  00372C  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34660  00372E  0EE8               	movlw	232
 34661  003730  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34662  003732  50F3               	movf	prodl,w,c
 34663  003734  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34664  003736  0E03               	movlw	3
 34665  003738  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34666  00373A  50F3               	movf	prodl,w,c
 34667  00373C  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34668  00373E  0E00               	movlw	0
 34669  003740  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34670  003742  50F3               	movf	prodl,w,c
 34671  003744  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34672  003746  0E00               	movlw	0
 34673  003748  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34674  00374A  50F3               	movf	prodl,w,c
 34675  00374C  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34676  00374E  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34677  003752  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34678  003756  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34679  00375A  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34680                           
 34681                           ; BSR set to: 0
 34682                           ;lorawan.c: 761: if (period == 0)
 34683  00375E  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34684  003760  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34685  003762  E127               	bnz	l1993
 34686                           
 34687                           ; BSR set to: 0
 34688                           ;lorawan.c: 762: {
 34689                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34690  003764  0102               	movlb	2	; () banked
 34691  003766  51E7               	movf	(_loRa+231)& (0+255),w,b
 34692  003768  EC78  F03A         	call	_SwTimerStop
 34693                           
 34694                           ; BSR set to: 0
 34695                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34696  00376C  0102               	movlb	2	; () banked
 34697  00376E  9503               	bcf	(_loRa+3)& (0+255),2,b
 34698                           
 34699                           ; BSR set to: 2
 34700                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34701  003770  0100               	movlb	0	; () banked
 34702  003772  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34703  003774  D018               	goto	l15095
 34704  003776                     l15087:
 34705                           
 34706                           ; BSR set to: 0
 34707                           ;lorawan.c: 766: {
 34708                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34709  003776  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34710  003778  0D02               	mullw	2
 34711  00377A  0EA8               	movlw	low (_loRa+168)
 34712  00377C  24F3               	addwf	prodl,w,c
 34713  00377E  6ED9               	movwf	fsr2l,c
 34714  003780  0E02               	movlw	high (_loRa+168)
 34715  003782  20F4               	addwfc	prodh,w,c
 34716  003784  6EDA               	movwf	fsr2h,c
 34717  003786  0E02               	movlw	2
 34718  003788  18DE               	xorwf	postinc2,w,c
 34719  00378A  E10B               	bnz	l15093
 34720                           
 34721                           ; BSR set to: 0
 34722                           ;lorawan.c: 768: {
 34723                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34724  00378C  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34725  00378E  0D02               	mullw	2
 34726  003790  0EA8               	movlw	low (_loRa+168)
 34727  003792  24F3               	addwf	prodl,w,c
 34728  003794  6ED9               	movwf	fsr2l,c
 34729  003796  0E02               	movlw	high (_loRa+168)
 34730  003798  20F4               	addwfc	prodh,w,c
 34731  00379A  6EDA               	movwf	fsr2h,c
 34732  00379C  68DF               	setf	indf2,c
 34733                           
 34734                           ; BSR set to: 0
 34735                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34736  00379E  0102               	movlb	2	; () banked
 34737  0037A0  07A7               	decf	(_loRa+167)& (0+255),f,b
 34738  0037A2                     l15093:
 34739  0037A2  0100               	movlb	0	; () banked
 34740  0037A4  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34741  0037A6                     l15095:
 34742                           
 34743                           ; BSR set to: 0
 34744  0037A6  0102               	movlb	2	; () banked
 34745  0037A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 34746  0037AA  0100               	movlb	0	; () banked
 34747  0037AC  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34748  0037AE  E3E3               	bnc	l15087
 34749  0037B0  0012               	return	
 34750  0037B2                     l1993:
 34751                           
 34752                           ; BSR set to: 0
 34753                           ;lorawan.c: 776: else
 34754                           ;lorawan.c: 777: {
 34755                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34756  0037B2  0102               	movlb	2	; () banked
 34757  0037B4  8503               	bsf	(_loRa+3)& (0+255),2,b
 34758                           
 34759                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34760  0037B6  A902               	btfss	(_loRa+2)& (0+255),4,b
 34761  0037B8  0012               	return	
 34762                           
 34763                           ; BSR set to: 2
 34764                           ;lorawan.c: 782: {
 34765                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34766  0037BA  51CF               	movf	(_loRa+207)& (0+255),w,b
 34767  0037BC  E106               	bnz	u17530
 34768  0037BE  29CC               	incf	(_loRa+204)& (0+255),w,b
 34769  0037C0  0EFF               	movlw	255
 34770  0037C2  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34771  0037C4  0E0F               	movlw	15
 34772  0037C6  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34773  0037C8  E319               	bnc	l15101
 34774  0037CA                     u17530:
 34775                           
 34776                           ; BSR set to: 2
 34777  0037CA  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34778  0037CE  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34779  0037D2  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34780  0037D6  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34781  0037DA  0E7D               	movlw	125
 34782  0037DC  0100               	movlb	0	; () banked
 34783  0037DE  6F68               	movwf	___lldiv@divisor& (0+255),b
 34784  0037E0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34785  0037E2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34786  0037E4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34787  0037E6  EC1B  F030         	call	___lldiv	;wreg free
 34788  0037EA  0E0C               	movlw	12
 34789  0037EC                     u17545:
 34790  0037EC  90D8               	bcf	status,0,c
 34791  0037EE  3764               	rlcf	?___lldiv& (0+255),f,b
 34792  0037F0  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34793  0037F2  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34794  0037F4  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34795  0037F6  2EE8               	decfsz	wreg,f,c
 34796  0037F8  D7F9               	goto	u17545
 34797  0037FA  D020               	goto	L21
 34798  0037FC                     l15101:
 34799                           
 34800                           ; BSR set to: 2
 34801  0037FC  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34802  003800  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34803  003804  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34804  003808  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34805  00380C  0E0C               	movlw	12
 34806  00380E                     u17555:
 34807  00380E  90D8               	bcf	status,0,c
 34808  003810  0100               	movlb	0	; () banked
 34809  003812  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34810  003814  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34811  003816  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34812  003818  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34813  00381A  2EE8               	decfsz	wreg,f,c
 34814  00381C  D7F8               	goto	u17555
 34815  00381E  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34816  003822  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34817  003826  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34818  00382A  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34819  00382E  0E7D               	movlw	125
 34820  003830  6F68               	movwf	___lldiv@divisor& (0+255),b
 34821  003832  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34822  003834  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34823  003836  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34824  003838  EC1B  F030         	call	___lldiv	;wreg free
 34825  00383C                     L21:
 34826  00383C  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3502
 34827  003840  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3502+1
 34828  003844  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3502+2
 34829  003848  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3502+3
 34830                           
 34831                           ; BSR set to: 0
 34832  00384C  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3502,SwTimerSetTimeout@timeout
 34833  003850  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3502+1,SwTimerSetTimeout@timeout+1
 34834  003854  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3502+2,SwTimerSetTimeout@timeout+2
 34835  003858  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3502+3,SwTimerSetTimeout@timeout+3
 34836  00385C  0102               	movlb	2	; () banked
 34837  00385E  51E7               	movf	(_loRa+231)& (0+255),w,b
 34838  003860  EC70  F036         	call	_SwTimerSetTimeout
 34839                           
 34840                           ; BSR set to: 0
 34841                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34842  003864  0102               	movlb	2	; () banked
 34843  003866  51E7               	movf	(_loRa+231)& (0+255),w,b
 34844  003868  EF59  F02E         	goto	_SwTimerStart
 34845  00386C                     __end_of_LORAWAN_LinkCheckConfigure:
 34846                           	opt stack 0
 34847                           tosu	equ	0xFFF
 34848                           tosh	equ	0xFFE
 34849                           tosl	equ	0xFFD
 34850                           pclath	equ	0xFFA
 34851                           tblptru	equ	0xFF8
 34852                           tblptrh	equ	0xFF7
 34853                           tblptrl	equ	0xFF6
 34854                           tablat	equ	0xFF5
 34855                           prodh	equ	0xFF4
 34856                           prodl	equ	0xFF3
 34857                           intcon	equ	0xFF2
 34858                           intcon2	equ	0xFF1
 34859                           intcon3	equ	0xFF0
 34860                           indf0	equ	0xFEF
 34861                           postinc0	equ	0xFEE
 34862                           plusw0	equ	0xFEB
 34863                           fsr0h	equ	0xFEA
 34864                           fsr0l	equ	0xFE9
 34865                           wreg	equ	0xFE8
 34866                           postinc1	equ	0xFE6
 34867                           postdec1	equ	0xFE5
 34868                           plusw1	equ	0xFE3
 34869                           fsr1h	equ	0xFE2
 34870                           fsr1l	equ	0xFE1
 34871                           indf2	equ	0xFDF
 34872                           postinc2	equ	0xFDE
 34873                           postdec2	equ	0xFDD
 34874                           plusw2	equ	0xFDB
 34875                           fsr2h	equ	0xFDA
 34876                           fsr2l	equ	0xFD9
 34877                           status	equ	0xFD8
 34878                           
 34879 ;; *************** function ___lldiv *****************
 34880 ;; Defined at:
 34881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 34882 ;; Parameters:    Size  Location     Type
 34883 ;;  dividend        4    4[BANK0 ] unsigned long 
 34884 ;;  divisor         4    8[BANK0 ] unsigned long 
 34885 ;; Auto vars:     Size  Location     Type
 34886 ;;  quotient        4   12[BANK0 ] unsigned long 
 34887 ;;  counter         1   16[BANK0 ] unsigned char 
 34888 ;; Return value:  Size  Location     Type
 34889 ;;                  4    4[BANK0 ] unsigned long 
 34890 ;; Registers used:
 34891 ;;		wreg, status,2, status,0
 34892 ;; Tracked objects:
 34893 ;;		On entry : F/0
 34894 ;;		On exit  : F/0
 34895 ;;		Unchanged: 0/0
 34896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34897 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34898 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34900 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34901 ;;Total ram usage:       13 bytes
 34902 ;; Hardware stack levels used:    1
 34903 ;; Hardware stack levels required when called:    7
 34904 ;; This function calls:
 34905 ;;		Nothing
 34906 ;; This function is called by:
 34907 ;;		_RADIO_WriteFrequency
 34908 ;;		_RADIO_WriteFSKFrequencyDeviation
 34909 ;;		_RADIO_WriteFSKBitRate
 34910 ;;		_RADIO_Transmit
 34911 ;;		_RADIO_ReceiveStart
 34912 ;;		_LORAWAN_TxDone
 34913 ;;		_LORAWAN_RxTimeout
 34914 ;;		_StartReTxTimer
 34915 ;;		_DutyCycleCallback
 34916 ;;		_LORAWAN_LinkCheckConfigure
 34917 ;;		_LORAWAN_LinkCheckCallback
 34918 ;;		_UpdateRetransmissionAckTimeoutState
 34919 ;;		_UpdateJoinSuccessState
 34920 ;; This function uses a non-reentrant model
 34921 ;;
 34922                           
 34923                           	psect	text184
 34924  006036                     __ptext184:
 34925                           	opt stack 0
 34926  006036                     ___lldiv:
 34927                           	opt stack 20
 34928                           
 34929                           ; BSR set to: 0
 34930                           
 34931                           ;incstack = 0
 34932  006036  6B6C               	clrf	___lldiv@quotient& (0+255),b
 34933  006038  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 34934  00603A  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 34935  00603C  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 34936                           
 34937                           ; BSR set to: 0
 34938  00603E  5168               	movf	___lldiv@divisor& (0+255),w,b
 34939  006040  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34940  006042  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34941  006044  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34942  006046  E029               	bz	l3103
 34943                           
 34944                           ; BSR set to: 0
 34945  006048  0E01               	movlw	1
 34946  00604A  6F70               	movwf	___lldiv@counter& (0+255),b
 34947  00604C  D006               	goto	l12097
 34948  00604E                     l12095:
 34949                           
 34950                           ; BSR set to: 0
 34951  00604E  90D8               	bcf	status,0,c
 34952  006050  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 34953  006052  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34954  006054  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34955  006056  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34956  006058  2B70               	incf	___lldiv@counter& (0+255),f,b
 34957  00605A                     l12097:
 34958                           
 34959                           ; BSR set to: 0
 34960  00605A  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34961  00605C  D7F8               	goto	l12095
 34962  00605E                     l12099:
 34963                           
 34964                           ; BSR set to: 0
 34965  00605E  90D8               	bcf	status,0,c
 34966  006060  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 34967  006062  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34968  006064  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34969  006066  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34970                           
 34971                           ; BSR set to: 0
 34972  006068  5168               	movf	___lldiv@divisor& (0+255),w,b
 34973  00606A  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 34974  00606C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34975  00606E  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34976  006070  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34977  006072  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34978  006074  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34979  006076  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34980  006078  E309               	bnc	l12107
 34981                           
 34982                           ; BSR set to: 0
 34983  00607A  5168               	movf	___lldiv@divisor& (0+255),w,b
 34984  00607C  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 34985  00607E  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34986  006080  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34987  006082  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34988  006084  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34989  006086  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34990  006088  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34991                           
 34992                           ; BSR set to: 0
 34993  00608A  816C               	bsf	___lldiv@quotient& (0+255),0,b
 34994  00608C                     l12107:
 34995                           
 34996                           ; BSR set to: 0
 34997  00608C  90D8               	bcf	status,0,c
 34998  00608E  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34999  006090  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35000  006092  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35001  006094  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 35002                           
 35003                           ; BSR set to: 0
 35004  006096  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 35005  006098  D7E2               	goto	l12099
 35006  00609A                     l3103:
 35007                           
 35008                           ; BSR set to: 0
 35009  00609A  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 35010  00609E  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 35011  0060A2  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 35012  0060A6  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 35013                           
 35014                           ; BSR set to: 0
 35015  0060AA  0012               	return		;funcret
 35016  0060AC                     __end_of___lldiv:
 35017                           	opt stack 0
 35018                           tosu	equ	0xFFF
 35019                           tosh	equ	0xFFE
 35020                           tosl	equ	0xFFD
 35021                           pclath	equ	0xFFA
 35022                           tblptru	equ	0xFF8
 35023                           tblptrh	equ	0xFF7
 35024                           tblptrl	equ	0xFF6
 35025                           tablat	equ	0xFF5
 35026                           prodh	equ	0xFF4
 35027                           prodl	equ	0xFF3
 35028                           intcon	equ	0xFF2
 35029                           intcon2	equ	0xFF1
 35030                           intcon3	equ	0xFF0
 35031                           indf0	equ	0xFEF
 35032                           postinc0	equ	0xFEE
 35033                           plusw0	equ	0xFEB
 35034                           fsr0h	equ	0xFEA
 35035                           fsr0l	equ	0xFE9
 35036                           wreg	equ	0xFE8
 35037                           postinc1	equ	0xFE6
 35038                           postdec1	equ	0xFE5
 35039                           plusw1	equ	0xFE3
 35040                           fsr1h	equ	0xFE2
 35041                           fsr1l	equ	0xFE1
 35042                           indf2	equ	0xFDF
 35043                           postinc2	equ	0xFDE
 35044                           postdec2	equ	0xFDD
 35045                           plusw2	equ	0xFDB
 35046                           fsr2h	equ	0xFDA
 35047                           fsr2l	equ	0xFD9
 35048                           status	equ	0xFD8
 35049                           
 35050 ;; *************** function _SwTimerStop *****************
 35051 ;; Defined at:
 35052 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35053 ;; Parameters:    Size  Location     Type
 35054 ;;  timerId         1    wreg     unsigned char 
 35055 ;; Auto vars:     Size  Location     Type
 35056 ;;  timerId         1    4[BANK0 ] unsigned char 
 35057 ;; Return value:  Size  Location     Type
 35058 ;;                  1    wreg      void 
 35059 ;; Registers used:
 35060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35061 ;; Tracked objects:
 35062 ;;		On entry : C/1
 35063 ;;		On exit  : F/0
 35064 ;;		Unchanged: 0/0
 35065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35069 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35070 ;;Total ram usage:        1 bytes
 35071 ;; Hardware stack levels used:    1
 35072 ;; Hardware stack levels required when called:    7
 35073 ;; This function calls:
 35074 ;;		Nothing
 35075 ;; This function is called by:
 35076 ;;		_RADIO_Init
 35077 ;;		_RADIO_Transmit
 35078 ;;		_RADIO_RxDone
 35079 ;;		_RADIO_FSKPayloadReady
 35080 ;;		_RADIO_RxTimeout
 35081 ;;		_RADIO_TxDone
 35082 ;;		_RADIO_FSKPacketSent
 35083 ;;		_RADIO_RxFSKTimeout
 35084 ;;		_LORAWAN_TxDone
 35085 ;;		_StopAllSoftwareTimers
 35086 ;;		_LORAWAN_LinkCheckConfigure
 35087 ;;		_LORAWAN_RxDone
 35088 ;; This function uses a non-reentrant model
 35089 ;;
 35090                           
 35091                           	psect	text185
 35092  0074F0                     __ptext185:
 35093                           	opt stack 0
 35094  0074F0                     _SwTimerStop:
 35095                           	opt stack 20
 35096                           
 35097                           ; BSR set to: 0
 35098                           ;incstack = 0
 35099                           ;SwTimerStop@timerId stored from wreg
 35100  0074F0  0100               	movlb	0	; () banked
 35101  0074F2  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 35102                           
 35103                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35104  0074F4  9EF2               	bcf	intcon,7,c	;volatile
 35105                           
 35106                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35107  0074F6  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 35108  0074F8  0D08               	mullw	8
 35109  0074FA  0E04               	movlw	low (_swTimers+4)
 35110  0074FC  24F3               	addwf	prodl,w,c
 35111  0074FE  6ED9               	movwf	fsr2l,c
 35112  007500  0E03               	movlw	high (_swTimers+4)
 35113  007502  20F4               	addwfc	prodh,w,c
 35114  007504  6EDA               	movwf	fsr2h,c
 35115  007506  6ADF               	clrf	indf2,c
 35116                           
 35117                           ; BSR set to: 0
 35118                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35119  007508  8EF2               	bsf	intcon,7,c	;volatile
 35120                           
 35121                           ; BSR set to: 0
 35122  00750A  0C00               	retlw	0	;funcret
 35123  00750C                     __end_of_SwTimerStop:
 35124                           	opt stack 0
 35125                           tosu	equ	0xFFF
 35126                           tosh	equ	0xFFE
 35127                           tosl	equ	0xFFD
 35128                           pclath	equ	0xFFA
 35129                           tblptru	equ	0xFF8
 35130                           tblptrh	equ	0xFF7
 35131                           tblptrl	equ	0xFF6
 35132                           tablat	equ	0xFF5
 35133                           prodh	equ	0xFF4
 35134                           prodl	equ	0xFF3
 35135                           intcon	equ	0xFF2
 35136                           intcon2	equ	0xFF1
 35137                           intcon3	equ	0xFF0
 35138                           indf0	equ	0xFEF
 35139                           postinc0	equ	0xFEE
 35140                           plusw0	equ	0xFEB
 35141                           fsr0h	equ	0xFEA
 35142                           fsr0l	equ	0xFE9
 35143                           wreg	equ	0xFE8
 35144                           postinc1	equ	0xFE6
 35145                           postdec1	equ	0xFE5
 35146                           plusw1	equ	0xFE3
 35147                           fsr1h	equ	0xFE2
 35148                           fsr1l	equ	0xFE1
 35149                           indf2	equ	0xFDF
 35150                           postinc2	equ	0xFDE
 35151                           postdec2	equ	0xFDD
 35152                           plusw2	equ	0xFDB
 35153                           fsr2h	equ	0xFDA
 35154                           fsr2l	equ	0xFD9
 35155                           status	equ	0xFD8
 35156                           
 35157 ;; *************** function _SwTimerStart *****************
 35158 ;; Defined at:
 35159 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35160 ;; Parameters:    Size  Location     Type
 35161 ;;  timerId         1    wreg     unsigned char 
 35162 ;; Auto vars:     Size  Location     Type
 35163 ;;  timerId         1   53[BANK0 ] unsigned char 
 35164 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 35165 ;; Return value:  Size  Location     Type
 35166 ;;                  1    wreg      void 
 35167 ;; Registers used:
 35168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35169 ;; Tracked objects:
 35170 ;;		On entry : C/2
 35171 ;;		On exit  : F/0
 35172 ;;		Unchanged: 0/0
 35173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35175 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35176 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35177 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35178 ;;Total ram usage:        9 bytes
 35179 ;; Hardware stack levels used:    1
 35180 ;; Hardware stack levels required when called:   10
 35181 ;; This function calls:
 35182 ;;		_SwTimersInterrupt
 35183 ;;		_TMR_OverrideRemaining
 35184 ;; This function is called by:
 35185 ;;		_RADIO_Transmit
 35186 ;;		_RADIO_ReceiveStart
 35187 ;;		_LORAWAN_TxDone
 35188 ;;		_LORAWAN_RxTimeout
 35189 ;;		_StartReTxTimer
 35190 ;;		_DutyCycleCallback
 35191 ;;		_LORAWAN_Join
 35192 ;;		_LORAWAN_LinkCheckConfigure
 35193 ;;		_LORAWAN_LinkCheckCallback
 35194 ;;		_UpdateRetransmissionAckTimeoutState
 35195 ;;		_UpdateJoinSuccessState
 35196 ;; This function uses a non-reentrant model
 35197 ;;
 35198                           
 35199                           	psect	text186
 35200  005CB2                     __ptext186:
 35201                           	opt stack 0
 35202  005CB2                     _SwTimerStart:
 35203                           	opt stack 17
 35204                           
 35205                           ; BSR set to: 0
 35206                           ;incstack = 0
 35207                           ;SwTimerStart@timerId stored from wreg
 35208  005CB2  0100               	movlb	0	; () banked
 35209  005CB4  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 35210                           
 35211                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35212                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35213  005CB6  9EF2               	bcf	intcon,7,c	;volatile
 35214                           
 35215                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35216  005CB8  ECA7  F025         	call	_SwTimersInterrupt	;wreg free
 35217  005CBC  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35218  005CC0  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35219  005CC4  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35220  005CC8  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35221                           
 35222                           ; BSR set to: 0
 35223                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35224  005CCC  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35225  005CCE  0D08               	mullw	8
 35226  005CD0  0E00               	movlw	low _swTimers
 35227  005CD2  24F3               	addwf	prodl,w,c
 35228  005CD4  6ED9               	movwf	fsr2l,c
 35229  005CD6  0E03               	movlw	high _swTimers
 35230  005CD8  20F4               	addwfc	prodh,w,c
 35231  005CDA  6EDA               	movwf	fsr2h,c
 35232  005CDC  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35233  005CDE  5CDE               	subwf	postinc2,w,c
 35234  005CE0  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35235  005CE2  58DE               	subwfb	postinc2,w,c
 35236  005CE4  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35237  005CE6  58DE               	subwfb	postinc2,w,c
 35238  005CE8  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35239  005CEA  58DE               	subwfb	postinc2,w,c
 35240  005CEC  E210               	bc	l12433
 35241                           
 35242                           ; BSR set to: 0
 35243                           ;sw_timer.c: 225: {
 35244                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35245  005CEE  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35246  005CF0  0D08               	mullw	8
 35247  005CF2  0E00               	movlw	low _swTimers
 35248  005CF4  24F3               	addwf	prodl,w,c
 35249  005CF6  6ED9               	movwf	fsr2l,c
 35250  005CF8  0E03               	movlw	high _swTimers
 35251  005CFA  20F4               	addwfc	prodh,w,c
 35252  005CFC  6EDA               	movwf	fsr2h,c
 35253  005CFE  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 35254  005D02  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35255  005D06  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35256  005D0A  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35257  005D0E                     l12433:
 35258                           
 35259                           ; BSR set to: 0
 35260                           ;sw_timer.c: 227: }
 35261                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35262  005D0E  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35263  005D12  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35264  005D16  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35265  005D1A  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35266  005D1E  ECDD  F02F         	call	_TMR_OverrideRemaining	;wreg free
 35267                           
 35268                           ; BSR set to: 0
 35269                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35270  005D22  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35271  005D24  0D08               	mullw	8
 35272  005D26  0E04               	movlw	low (_swTimers+4)
 35273  005D28  24F3               	addwf	prodl,w,c
 35274  005D2A  6ED9               	movwf	fsr2l,c
 35275  005D2C  0E03               	movlw	high (_swTimers+4)
 35276  005D2E  20F4               	addwfc	prodh,w,c
 35277  005D30  6EDA               	movwf	fsr2h,c
 35278  005D32  0E01               	movlw	1
 35279  005D34  6EDF               	movwf	indf2,c
 35280                           
 35281                           ; BSR set to: 0
 35282                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35283  005D36  8EF2               	bsf	intcon,7,c	;volatile
 35284                           
 35285                           ; BSR set to: 0
 35286  005D38  0C01               	retlw	1	;funcret
 35287  005D3A                     __end_of_SwTimerStart:
 35288                           	opt stack 0
 35289                           tosu	equ	0xFFF
 35290                           tosh	equ	0xFFE
 35291                           tosl	equ	0xFFD
 35292                           pclath	equ	0xFFA
 35293                           tblptru	equ	0xFF8
 35294                           tblptrh	equ	0xFF7
 35295                           tblptrl	equ	0xFF6
 35296                           tablat	equ	0xFF5
 35297                           prodh	equ	0xFF4
 35298                           prodl	equ	0xFF3
 35299                           intcon	equ	0xFF2
 35300                           intcon2	equ	0xFF1
 35301                           intcon3	equ	0xFF0
 35302                           indf0	equ	0xFEF
 35303                           postinc0	equ	0xFEE
 35304                           plusw0	equ	0xFEB
 35305                           fsr0h	equ	0xFEA
 35306                           fsr0l	equ	0xFE9
 35307                           wreg	equ	0xFE8
 35308                           postinc1	equ	0xFE6
 35309                           postdec1	equ	0xFE5
 35310                           plusw1	equ	0xFE3
 35311                           fsr1h	equ	0xFE2
 35312                           fsr1l	equ	0xFE1
 35313                           indf2	equ	0xFDF
 35314                           postinc2	equ	0xFDE
 35315                           postdec2	equ	0xFDD
 35316                           plusw2	equ	0xFDB
 35317                           fsr2h	equ	0xFDA
 35318                           fsr2l	equ	0xFD9
 35319                           status	equ	0xFD8
 35320                           
 35321 ;; *************** function _TMR_OverrideRemaining *****************
 35322 ;; Defined at:
 35323 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35324 ;; Parameters:    Size  Location     Type
 35325 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 35326 ;; Auto vars:     Size  Location     Type
 35327 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 35328 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 35329 ;; Return value:  Size  Location     Type
 35330 ;;                  1    wreg      void 
 35331 ;; Registers used:
 35332 ;;		wreg, status,2, status,0, cstack
 35333 ;; Tracked objects:
 35334 ;;		On entry : F/0
 35335 ;;		On exit  : F/0
 35336 ;;		Unchanged: 0/0
 35337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35339 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35341 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35342 ;;Total ram usage:       10 bytes
 35343 ;; Hardware stack levels used:    1
 35344 ;; Hardware stack levels required when called:    9
 35345 ;; This function calls:
 35346 ;;		_TMR_SwapTimer
 35347 ;; This function is called by:
 35348 ;;		_SwTimerStart
 35349 ;; This function uses a non-reentrant model
 35350 ;;
 35351                           
 35352                           	psect	text187
 35353  005FBA                     __ptext187:
 35354                           	opt stack 0
 35355  005FBA                     _TMR_OverrideRemaining:
 35356                           	opt stack 17
 35357                           
 35358                           ; BSR set to: 0
 35359                           ;sw_timer.c: 67: uint16_t tmrVal;
 35360                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35361                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35362                           
 35363                           ; BSR set to: 0
 35364                           ;incstack = 0
 35365  005FBA  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35366  005FBC  1058               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35367  005FBE  1057               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35368  005FC0  E104               	bnz	u12730
 35369  005FC2  0E0B               	movlw	11
 35370  005FC4  5C56               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35371  005FC6  A0D8               	btfss	status,0,c
 35372  005FC8  0012               	return	
 35373  005FCA                     u12730:
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;sw_timer.c: 72: {
 35377                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35378  005FCA  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35379  005FCC  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35380  005FCE  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35381  005FD0  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35382  005FD2  5058               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35383  005FD4  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35384  005FD6  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35385  005FD8  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35386  005FDA  B0D8               	btfsc	status,0,c
 35387  005FDC  0012               	return	
 35388                           
 35389                           ; BSR set to: 0
 35390                           ;sw_timer.c: 74: {
 35391                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35392  005FDE  C06E  F056         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35393  005FE2  C06F  F057         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35394  005FE6  C070  F058         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35395  005FEA  C071  F059         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35396                           
 35397                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35398  005FEE  C0EC  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35399  005FF2  C0ED  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35403  005FF6  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35404  005FF8  0800               	sublw	0
 35405  005FFA  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 35406  005FFC  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35407  005FFE  A0D8               	btfss	status,0,c
 35408  006000  2AE8               	incf	wreg,f,c
 35409  006002  0800               	sublw	0
 35410  006004  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 35411                           
 35412                           ; BSR set to: 0
 35413                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35414  006006  C0EC  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35415  00600A  C0ED  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35416  00600E  ECCF  F036         	call	_TMR_SwapTimer	;wreg free
 35417  006012  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35418  006016  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35419                           
 35420                           ; BSR set to: 0
 35421                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35422  00601A  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35423  00601C  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35424  00601E  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35425  006020  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35426  006022  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35427  006024  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35428  006026  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35429  006028  263A               	addwf	_ticksAdded,f,c	;volatile
 35430  00602A  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35431  00602C  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 35432  00602E  0E00               	movlw	0
 35433  006030  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 35434  006032  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 35435                           
 35436                           ; BSR set to: 0
 35437  006034  0C00               	retlw	0	;funcret
 35438  006036                     __end_of_TMR_OverrideRemaining:
 35439                           	opt stack 0
 35440                           tosu	equ	0xFFF
 35441                           tosh	equ	0xFFE
 35442                           tosl	equ	0xFFD
 35443                           pclath	equ	0xFFA
 35444                           tblptru	equ	0xFF8
 35445                           tblptrh	equ	0xFF7
 35446                           tblptrl	equ	0xFF6
 35447                           tablat	equ	0xFF5
 35448                           prodh	equ	0xFF4
 35449                           prodl	equ	0xFF3
 35450                           intcon	equ	0xFF2
 35451                           intcon2	equ	0xFF1
 35452                           intcon3	equ	0xFF0
 35453                           indf0	equ	0xFEF
 35454                           postinc0	equ	0xFEE
 35455                           plusw0	equ	0xFEB
 35456                           fsr0h	equ	0xFEA
 35457                           fsr0l	equ	0xFE9
 35458                           wreg	equ	0xFE8
 35459                           postinc1	equ	0xFE6
 35460                           postdec1	equ	0xFE5
 35461                           plusw1	equ	0xFE3
 35462                           fsr1h	equ	0xFE2
 35463                           fsr1l	equ	0xFE1
 35464                           indf2	equ	0xFDF
 35465                           postinc2	equ	0xFDE
 35466                           postdec2	equ	0xFDD
 35467                           plusw2	equ	0xFDB
 35468                           fsr2h	equ	0xFDA
 35469                           fsr2l	equ	0xFD9
 35470                           status	equ	0xFD8
 35471                           
 35472 ;; *************** function _TMR_SwapTimer *****************
 35473 ;; Defined at:
 35474 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35475 ;; Parameters:    Size  Location     Type
 35476 ;;  timerVal        2   12[BANK0 ] unsigned int 
 35477 ;; Auto vars:     Size  Location     Type
 35478 ;;		None
 35479 ;; Return value:  Size  Location     Type
 35480 ;;                  2   12[BANK0 ] unsigned int 
 35481 ;; Registers used:
 35482 ;;		wreg, status,2, status,0, cstack
 35483 ;; Tracked objects:
 35484 ;;		On entry : F/0
 35485 ;;		On exit  : F/0
 35486 ;;		Unchanged: 0/0
 35487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35492 ;;Total ram usage:        2 bytes
 35493 ;; Hardware stack levels used:    1
 35494 ;; Hardware stack levels required when called:    8
 35495 ;; This function calls:
 35496 ;;		_TMR1_ReadTimer
 35497 ;;		_TMR1_WriteTimer
 35498 ;; This function is called by:
 35499 ;;		_TMR_OverrideRemaining
 35500 ;; This function uses a non-reentrant model
 35501 ;;
 35502                           
 35503                           	psect	text188
 35504  006D9E                     __ptext188:
 35505                           	opt stack 0
 35506  006D9E                     _TMR_SwapTimer:
 35507                           	opt stack 17
 35508                           
 35509                           ; BSR set to: 0
 35510                           ;sw_timer.c: 114: static uint16_t oldVal;
 35511                           ;sw_timer.c: 115: static uint16_t retVal;
 35512                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35513                           
 35514                           ; BSR set to: 0
 35515                           ;incstack = 0
 35516  006D9E  EC5A  F03A         	call	_TMR1_ReadTimer	;wreg free
 35517  006DA2  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35518  006DA6  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35519  006DAA                     l11923:
 35520                           
 35521                           ; BSR set to: 0
 35522  006DAA  EC5A  F03A         	call	_TMR1_ReadTimer	;wreg free
 35523  006DAE  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35524  006DB0  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35525  006DB2  E103               	bnz	u12520
 35526  006DB4  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35527  006DB6  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35528  006DB8  E0F8               	bz	l11923
 35529  006DBA                     u12520:
 35530                           
 35531                           ; BSR set to: 0
 35532                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35533  006DBA  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35534  006DBE  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35535  006DC2  EC86  F03A         	call	_TMR1_WriteTimer	;wreg free
 35536                           
 35537                           ; BSR set to: 0
 35538                           ;sw_timer.c: 128: oldVal++;
 35539  006DC6  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35540  006DC8  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35541                           
 35542                           ; BSR set to: 0
 35543                           ;sw_timer.c: 130: retVal = oldVal;
 35544  006DCA  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35545  006DCE  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35546                           
 35547                           ; BSR set to: 0
 35548                           ;sw_timer.c: 132: return retVal;
 35549  006DD2  C042  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35550  006DD6  C043  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35551                           
 35552                           ; BSR set to: 0
 35553  006DDA  0012               	return		;funcret
 35554  006DDC                     __end_of_TMR_SwapTimer:
 35555                           	opt stack 0
 35556                           tosu	equ	0xFFF
 35557                           tosh	equ	0xFFE
 35558                           tosl	equ	0xFFD
 35559                           pclath	equ	0xFFA
 35560                           tblptru	equ	0xFF8
 35561                           tblptrh	equ	0xFF7
 35562                           tblptrl	equ	0xFF6
 35563                           tablat	equ	0xFF5
 35564                           prodh	equ	0xFF4
 35565                           prodl	equ	0xFF3
 35566                           intcon	equ	0xFF2
 35567                           intcon2	equ	0xFF1
 35568                           intcon3	equ	0xFF0
 35569                           indf0	equ	0xFEF
 35570                           postinc0	equ	0xFEE
 35571                           plusw0	equ	0xFEB
 35572                           fsr0h	equ	0xFEA
 35573                           fsr0l	equ	0xFE9
 35574                           wreg	equ	0xFE8
 35575                           postinc1	equ	0xFE6
 35576                           postdec1	equ	0xFE5
 35577                           plusw1	equ	0xFE3
 35578                           fsr1h	equ	0xFE2
 35579                           fsr1l	equ	0xFE1
 35580                           indf2	equ	0xFDF
 35581                           postinc2	equ	0xFDE
 35582                           postdec2	equ	0xFDD
 35583                           plusw2	equ	0xFDB
 35584                           fsr2h	equ	0xFDA
 35585                           fsr2l	equ	0xFD9
 35586                           status	equ	0xFD8
 35587                           
 35588 ;; *************** function _TMR1_WriteTimer *****************
 35589 ;; Defined at:
 35590 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 35591 ;; Parameters:    Size  Location     Type
 35592 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35593 ;; Auto vars:     Size  Location     Type
 35594 ;;		None
 35595 ;; Return value:  Size  Location     Type
 35596 ;;                  1    wreg      void 
 35597 ;; Registers used:
 35598 ;;		None
 35599 ;; Tracked objects:
 35600 ;;		On entry : F/0
 35601 ;;		On exit  : F/0
 35602 ;;		Unchanged: F/0
 35603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35608 ;;Total ram usage:        2 bytes
 35609 ;; Hardware stack levels used:    1
 35610 ;; Hardware stack levels required when called:    7
 35611 ;; This function calls:
 35612 ;;		Nothing
 35613 ;; This function is called by:
 35614 ;;		_TMR_SwapTimer
 35615 ;; This function uses a non-reentrant model
 35616 ;;
 35617                           
 35618                           	psect	text189
 35619  00750C                     __ptext189:
 35620                           	opt stack 0
 35621  00750C                     _TMR1_WriteTimer:
 35622                           	opt stack 17
 35623                           
 35624                           ; BSR set to: 0
 35625                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 35626                           
 35627                           ; BSR set to: 0
 35628                           ;incstack = 0
 35629  00750C  A4CD               	btfss	4045,2,c	;volatile
 35630  00750E  D007               	goto	l1347
 35631                           
 35632                           ; BSR set to: 0
 35633                           ;tmr1.c: 123: {
 35634                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 35635  007510  90CD               	bcf	4045,0,c	;volatile
 35636                           
 35637                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 35638  007512  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35639                           
 35640                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 35641  007516  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35642                           
 35643                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 35644  00751A  80CD               	bsf	4045,0,c	;volatile
 35645                           
 35646                           ;tmr1.c: 133: }
 35647  00751C  0012               	return	
 35648  00751E                     l1347:
 35649                           
 35650                           ; BSR set to: 0
 35651                           ;tmr1.c: 134: else
 35652                           ;tmr1.c: 135: {
 35653                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 35654  00751E  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35655                           
 35656                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 35657  007522  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35658                           
 35659                           ; BSR set to: 0
 35660  007526  0012               	return		;funcret
 35661  007528                     __end_of_TMR1_WriteTimer:
 35662                           	opt stack 0
 35663                           tosu	equ	0xFFF
 35664                           tosh	equ	0xFFE
 35665                           tosl	equ	0xFFD
 35666                           pclath	equ	0xFFA
 35667                           tblptru	equ	0xFF8
 35668                           tblptrh	equ	0xFF7
 35669                           tblptrl	equ	0xFF6
 35670                           tablat	equ	0xFF5
 35671                           prodh	equ	0xFF4
 35672                           prodl	equ	0xFF3
 35673                           intcon	equ	0xFF2
 35674                           intcon2	equ	0xFF1
 35675                           intcon3	equ	0xFF0
 35676                           indf0	equ	0xFEF
 35677                           postinc0	equ	0xFEE
 35678                           plusw0	equ	0xFEB
 35679                           fsr0h	equ	0xFEA
 35680                           fsr0l	equ	0xFE9
 35681                           wreg	equ	0xFE8
 35682                           postinc1	equ	0xFE6
 35683                           postdec1	equ	0xFE5
 35684                           plusw1	equ	0xFE3
 35685                           fsr1h	equ	0xFE2
 35686                           fsr1l	equ	0xFE1
 35687                           indf2	equ	0xFDF
 35688                           postinc2	equ	0xFDE
 35689                           postdec2	equ	0xFDD
 35690                           plusw2	equ	0xFDB
 35691                           fsr2h	equ	0xFDA
 35692                           fsr2l	equ	0xFD9
 35693                           status	equ	0xFD8
 35694                           
 35695 ;; *************** function _SwTimersInterrupt *****************
 35696 ;; Defined at:
 35697 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35698 ;; Parameters:    Size  Location     Type
 35699 ;;		None
 35700 ;; Auto vars:     Size  Location     Type
 35701 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 35702 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 35703 ;;  i               1   44[BANK0 ] unsigned char 
 35704 ;; Return value:  Size  Location     Type
 35705 ;;                  4   28[BANK0 ] unsigned long 
 35706 ;; Registers used:
 35707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35708 ;; Tracked objects:
 35709 ;;		On entry : 0/0
 35710 ;;		On exit  : F/0
 35711 ;;		Unchanged: 0/0
 35712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35714 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35716 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35717 ;;Total ram usage:       17 bytes
 35718 ;; Hardware stack levels used:    1
 35719 ;; Hardware stack levels required when called:    9
 35720 ;; This function calls:
 35721 ;;		_TMR_GetDeltaTime
 35722 ;; This function is called by:
 35723 ;;		_SwTimerReadValue
 35724 ;;		_SwTimerStart
 35725 ;; This function uses a non-reentrant model
 35726 ;;
 35727                           
 35728                           	psect	text190
 35729  004B4E                     __ptext190:
 35730                           	opt stack 0
 35731  004B4E                     _SwTimersInterrupt:
 35732                           	opt stack 17
 35733                           
 35734                           ;sw_timer.c: 289: uint8_t i;
 35735                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35736                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35737                           
 35738                           ; BSR set to: 0
 35739                           ;incstack = 0
 35740  004B4E  0100               	movlb	0	; () banked
 35741  004B50  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35742  004B52  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35743  004B54  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35744  004B56  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35745                           
 35746                           ; BSR set to: 0
 35747                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35748  004B58  EC95  F026         	call	_TMR_GetDeltaTime	;wreg free
 35749  004B5C  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35750  004B60  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35751  004B64  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35752  004B68  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35753                           
 35754                           ; BSR set to: 0
 35755                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35756  004B6C  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 35757  004B6E  D05A               	goto	l12157
 35758  004B70                     l12145:
 35759                           
 35760                           ; BSR set to: 0
 35761                           ;sw_timer.c: 298: {
 35762                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35763  004B70  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35764  004B72  0D08               	mullw	8
 35765  004B74  0E04               	movlw	low (_swTimers+4)
 35766  004B76  24F3               	addwf	prodl,w,c
 35767  004B78  6ED9               	movwf	fsr2l,c
 35768  004B7A  0E03               	movlw	high (_swTimers+4)
 35769  004B7C  20F4               	addwfc	prodh,w,c
 35770  004B7E  6EDA               	movwf	fsr2h,c
 35771  004B80  04DE               	decf	postinc2,w,c
 35772  004B82  E14F               	bnz	l12155
 35773                           
 35774                           ; BSR set to: 0
 35775                           ;sw_timer.c: 302: {
 35776                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35777  004B84  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35778  004B86  0D08               	mullw	8
 35779  004B88  0E00               	movlw	low _swTimers
 35780  004B8A  24F3               	addwf	prodl,w,c
 35781  004B8C  6ED9               	movwf	fsr2l,c
 35782  004B8E  0E03               	movlw	high _swTimers
 35783  004B90  20F4               	addwfc	prodh,w,c
 35784  004B92  6EDA               	movwf	fsr2h,c
 35785  004B94  50DE               	movf	postinc2,w,c
 35786  004B96  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35787  004B98  50DE               	movf	postinc2,w,c
 35788  004B9A  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35789  004B9C  50DE               	movf	postinc2,w,c
 35790  004B9E  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35791  004BA0  50DE               	movf	postinc2,w,c
 35792  004BA2  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35793  004BA4  E30D               	bnc	l12151
 35794                           
 35795                           ; BSR set to: 0
 35796                           ;sw_timer.c: 304: {
 35797                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35798  004BA6  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35799  004BA8  0D08               	mullw	8
 35800  004BAA  0E00               	movlw	low _swTimers
 35801  004BAC  24F3               	addwf	prodl,w,c
 35802  004BAE  6ED9               	movwf	fsr2l,c
 35803  004BB0  0E03               	movlw	high _swTimers
 35804  004BB2  20F4               	addwfc	prodh,w,c
 35805  004BB4  6EDA               	movwf	fsr2h,c
 35806  004BB6  6ADE               	clrf	postinc2,c
 35807  004BB8  6ADE               	clrf	postinc2,c
 35808  004BBA  6ADE               	clrf	postinc2,c
 35809  004BBC  6ADD               	clrf	postdec2,c
 35810                           
 35811                           ;sw_timer.c: 306: }
 35812  004BBE  D031               	goto	l12155
 35813  004BC0                     l12151:
 35814                           
 35815                           ; BSR set to: 0
 35816                           ;sw_timer.c: 307: else
 35817                           ;sw_timer.c: 308: {
 35818                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35819  004BC0  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35820  004BC2  0D08               	mullw	8
 35821  004BC4  0E00               	movlw	low _swTimers
 35822  004BC6  24F3               	addwf	prodl,w,c
 35823  004BC8  6ED9               	movwf	fsr2l,c
 35824  004BCA  0E03               	movlw	high _swTimers
 35825  004BCC  20F4               	addwfc	prodh,w,c
 35826  004BCE  6EDA               	movwf	fsr2h,c
 35827  004BD0  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35828  004BD2  5EDE               	subwf	postinc2,f,c
 35829  004BD4  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35830  004BD6  5ADE               	subwfb	postinc2,f,c
 35831  004BD8  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35832  004BDA  5ADE               	subwfb	postinc2,f,c
 35833  004BDC  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35834  004BDE  5ADE               	subwfb	postinc2,f,c
 35835                           
 35836                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35837  004BE0  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35838  004BE2  0D08               	mullw	8
 35839  004BE4  0E00               	movlw	low _swTimers
 35840  004BE6  24F3               	addwf	prodl,w,c
 35841  004BE8  6ED9               	movwf	fsr2l,c
 35842  004BEA  0E03               	movlw	high _swTimers
 35843  004BEC  20F4               	addwfc	prodh,w,c
 35844  004BEE  6EDA               	movwf	fsr2h,c
 35845  004BF0  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35846  004BF2  5CDE               	subwf	postinc2,w,c
 35847  004BF4  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35848  004BF6  58DE               	subwfb	postinc2,w,c
 35849  004BF8  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35850  004BFA  58DE               	subwfb	postinc2,w,c
 35851  004BFC  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35852  004BFE  58DE               	subwfb	postinc2,w,c
 35853  004C00  E210               	bc	l12155
 35854                           
 35855                           ; BSR set to: 0
 35856                           ;sw_timer.c: 313: {
 35857                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35858  004C02  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35859  004C04  0D08               	mullw	8
 35860  004C06  0E00               	movlw	low _swTimers
 35861  004C08  24F3               	addwf	prodl,w,c
 35862  004C0A  6ED9               	movwf	fsr2l,c
 35863  004C0C  0E03               	movlw	high _swTimers
 35864  004C0E  20F4               	addwfc	prodh,w,c
 35865  004C10  6EDA               	movwf	fsr2h,c
 35866  004C12  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 35867  004C16  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 35868  004C1A  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 35869  004C1E  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 35870  004C22                     l12155:
 35871                           
 35872                           ; BSR set to: 0
 35873  004C22  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 35874  004C24                     l12157:
 35875                           
 35876                           ; BSR set to: 0
 35877  004C24  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 35878  004C26  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 35879  004C28  E3A3               	bnc	l12145
 35880                           
 35881                           ; BSR set to: 0
 35882                           ;sw_timer.c: 315: }
 35883                           ;sw_timer.c: 316: }
 35884                           ;sw_timer.c: 317: }
 35885                           ;sw_timer.c: 318: }
 35886                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 35887  004C2A  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 35888  004C2E  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 35889  004C32  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 35890  004C36  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 35891                           
 35892                           ; BSR set to: 0
 35893  004C3A  0012               	return		;funcret
 35894  004C3C                     __end_of_SwTimersInterrupt:
 35895                           	opt stack 0
 35896                           tosu	equ	0xFFF
 35897                           tosh	equ	0xFFE
 35898                           tosl	equ	0xFFD
 35899                           pclath	equ	0xFFA
 35900                           tblptru	equ	0xFF8
 35901                           tblptrh	equ	0xFF7
 35902                           tblptrl	equ	0xFF6
 35903                           tablat	equ	0xFF5
 35904                           prodh	equ	0xFF4
 35905                           prodl	equ	0xFF3
 35906                           intcon	equ	0xFF2
 35907                           intcon2	equ	0xFF1
 35908                           intcon3	equ	0xFF0
 35909                           indf0	equ	0xFEF
 35910                           postinc0	equ	0xFEE
 35911                           plusw0	equ	0xFEB
 35912                           fsr0h	equ	0xFEA
 35913                           fsr0l	equ	0xFE9
 35914                           wreg	equ	0xFE8
 35915                           postinc1	equ	0xFE6
 35916                           postdec1	equ	0xFE5
 35917                           plusw1	equ	0xFE3
 35918                           fsr1h	equ	0xFE2
 35919                           fsr1l	equ	0xFE1
 35920                           indf2	equ	0xFDF
 35921                           postinc2	equ	0xFDE
 35922                           postdec2	equ	0xFDD
 35923                           plusw2	equ	0xFDB
 35924                           fsr2h	equ	0xFDA
 35925                           fsr2l	equ	0xFD9
 35926                           status	equ	0xFD8
 35927                           
 35928 ;; *************** function _TMR_GetDeltaTime *****************
 35929 ;; Defined at:
 35930 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35931 ;; Parameters:    Size  Location     Type
 35932 ;;		None
 35933 ;; Auto vars:     Size  Location     Type
 35934 ;;		None
 35935 ;; Return value:  Size  Location     Type
 35936 ;;                  4   12[BANK0 ] unsigned long 
 35937 ;; Registers used:
 35938 ;;		wreg, status,2, status,0, cstack
 35939 ;; Tracked objects:
 35940 ;;		On entry : F/0
 35941 ;;		On exit  : F/0
 35942 ;;		Unchanged: 0/0
 35943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35946 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35947 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35948 ;;Total ram usage:       16 bytes
 35949 ;; Hardware stack levels used:    1
 35950 ;; Hardware stack levels required when called:    8
 35951 ;; This function calls:
 35952 ;;		_TMR1_ReadTimer
 35953 ;; This function is called by:
 35954 ;;		_SwTimersInterrupt
 35955 ;; This function uses a non-reentrant model
 35956 ;;
 35957                           
 35958                           	psect	text191
 35959  004D2A                     __ptext191:
 35960                           	opt stack 0
 35961  004D2A                     _TMR_GetDeltaTime:
 35962                           	opt stack 17
 35963                           
 35964                           ; BSR set to: 0
 35965                           ;sw_timer.c: 90: static uint32_t retVal;
 35966                           ;sw_timer.c: 91: static uint16_t tmrVal;
 35967                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 35968                           
 35969                           ; BSR set to: 0
 35970                           ;incstack = 0
 35971  004D2A  EC5A  F03A         	call	_TMR1_ReadTimer	;wreg free
 35972  004D2E  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 35973  004D32  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 35974                           
 35975                           ; BSR set to: 0
 35976                           ;sw_timer.c: 95: if (timerOverflow == 1)
 35977  004D36  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 35978  004D38  E13D               	bnz	l11949
 35979                           
 35980                           ; BSR set to: 0
 35981                           ;sw_timer.c: 96: {
 35982                           ;sw_timer.c: 97: timerOverflow = 0;
 35983  004D3A  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 35987  004D3C  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 35988  004D3E  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 35989  004D40  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 35990  004D42  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 35991  004D44  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 35992  004D46  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 35993  004D48  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 35994  004D4A  A0D8               	btfss	status,0,c
 35995  004D4C  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 35996  004D4E  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35997  004D50  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 35998  004D52  5036               	movf	_ticksAccounted,w,c	;volatile
 35999  004D54  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36000  004D56  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36001  004D58  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36002  004D5A  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36003  004D5C  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36004  004D5E  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36005  004D60  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36006  004D62  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36007  004D64  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36008  004D66  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36009  004D68  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36010  004D6A  503A               	movf	_ticksAdded,w,c	;volatile
 36011  004D6C  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36012  004D6E  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 36013  004D70  503B               	movf	_ticksAdded+1,w,c	;volatile
 36014  004D72  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36015  004D74  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 36016  004D76  503C               	movf	_ticksAdded+2,w,c	;volatile
 36017  004D78  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36018  004D7A  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 36019  004D7C  503D               	movf	_ticksAdded+3,w,c	;volatile
 36020  004D7E  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36021  004D80  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 36022  004D82  0E00               	movlw	0
 36023  004D84  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 36024  004D86  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36025  004D88  0E00               	movlw	0
 36026  004D8A  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 36027  004D8C  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36028  004D8E  0E01               	movlw	1
 36029  004D90  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 36030  004D92  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36031  004D94  0E00               	movlw	0
 36032  004D96  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 36033  004D98  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36034                           
 36035                           ; BSR set to: 0
 36036                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 36037  004D9A  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 36038  004D9E  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 36039  004DA2  6A38               	clrf	_ticksAccounted+2,c	;volatile
 36040  004DA4  6A39               	clrf	_ticksAccounted+3,c	;volatile
 36041                           
 36042                           ; BSR set to: 0
 36043                           ;sw_timer.c: 100: ticksAdded = 0;
 36044  004DA6  6A3A               	clrf	_ticksAdded,c	;volatile
 36045  004DA8  6A3B               	clrf	_ticksAdded+1,c	;volatile
 36046  004DAA  6A3C               	clrf	_ticksAdded+2,c	;volatile
 36047  004DAC  6A3D               	clrf	_ticksAdded+3,c	;volatile
 36048                           
 36049                           ; BSR set to: 0
 36050                           ;sw_timer.c: 101: reloadVal = 0;
 36051  004DAE  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 36052  004DB0  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 36053                           
 36054                           ;sw_timer.c: 102: }
 36055  004DB2  D028               	goto	l11951
 36056  004DB4                     l11949:
 36057                           
 36058                           ; BSR set to: 0
 36059                           ;sw_timer.c: 103: else
 36060                           ;sw_timer.c: 104: {
 36061                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 36062  004DB4  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36063  004DB6  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36064  004DB8  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36065  004DBA  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36066  004DBC  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36067  004DBE  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36068  004DC0  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36069  004DC2  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36070  004DC4  5036               	movf	_ticksAccounted,w,c	;volatile
 36071  004DC6  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36072  004DC8  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36073  004DCA  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36074  004DCC  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36075  004DCE  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36076  004DD0  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36077  004DD2  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36078  004DD4  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36079  004DD6  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36080  004DD8  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36081  004DDA  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36082  004DDC  503A               	movf	_ticksAdded,w,c	;volatile
 36083  004DDE  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36084  004DE0  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36085  004DE2  503B               	movf	_ticksAdded+1,w,c	;volatile
 36086  004DE4  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36087  004DE6  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36088  004DE8  503C               	movf	_ticksAdded+2,w,c	;volatile
 36089  004DEA  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36090  004DEC  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36091  004DEE  503D               	movf	_ticksAdded+3,w,c	;volatile
 36092  004DF0  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36093  004DF2  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36094                           
 36095                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36096  004DF4  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 36097  004DF6  2636               	addwf	_ticksAccounted,f,c	;volatile
 36098  004DF8  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 36099  004DFA  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 36100  004DFC  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 36101  004DFE  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 36102  004E00  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 36103  004E02  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 36104  004E04                     l11951:
 36105                           
 36106                           ; BSR set to: 0
 36107                           ;sw_timer.c: 107: }
 36108                           ;sw_timer.c: 109: return retVal;
 36109  004E04  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36110  004E08  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36111  004E0C  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36112  004E10  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36113                           
 36114                           ; BSR set to: 0
 36115  004E14  0012               	return		;funcret
 36116  004E16                     __end_of_TMR_GetDeltaTime:
 36117                           	opt stack 0
 36118                           tosu	equ	0xFFF
 36119                           tosh	equ	0xFFE
 36120                           tosl	equ	0xFFD
 36121                           pclath	equ	0xFFA
 36122                           tblptru	equ	0xFF8
 36123                           tblptrh	equ	0xFF7
 36124                           tblptrl	equ	0xFF6
 36125                           tablat	equ	0xFF5
 36126                           prodh	equ	0xFF4
 36127                           prodl	equ	0xFF3
 36128                           intcon	equ	0xFF2
 36129                           intcon2	equ	0xFF1
 36130                           intcon3	equ	0xFF0
 36131                           indf0	equ	0xFEF
 36132                           postinc0	equ	0xFEE
 36133                           plusw0	equ	0xFEB
 36134                           fsr0h	equ	0xFEA
 36135                           fsr0l	equ	0xFE9
 36136                           wreg	equ	0xFE8
 36137                           postinc1	equ	0xFE6
 36138                           postdec1	equ	0xFE5
 36139                           plusw1	equ	0xFE3
 36140                           fsr1h	equ	0xFE2
 36141                           fsr1l	equ	0xFE1
 36142                           indf2	equ	0xFDF
 36143                           postinc2	equ	0xFDE
 36144                           postdec2	equ	0xFDD
 36145                           plusw2	equ	0xFDB
 36146                           fsr2h	equ	0xFDA
 36147                           fsr2l	equ	0xFD9
 36148                           status	equ	0xFD8
 36149                           
 36150 ;; *************** function _TMR1_ReadTimer *****************
 36151 ;; Defined at:
 36152 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 36153 ;; Parameters:    Size  Location     Type
 36154 ;;		None
 36155 ;; Auto vars:     Size  Location     Type
 36156 ;;  readVal         2    8[BANK0 ] unsigned int 
 36157 ;;  readValLow      1   11[BANK0 ] unsigned char 
 36158 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 36159 ;; Return value:  Size  Location     Type
 36160 ;;                  2    4[BANK0 ] unsigned int 
 36161 ;; Registers used:
 36162 ;;		wreg, status,2
 36163 ;; Tracked objects:
 36164 ;;		On entry : F/0
 36165 ;;		On exit  : F/0
 36166 ;;		Unchanged: 0/0
 36167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36171 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36172 ;;Total ram usage:        8 bytes
 36173 ;; Hardware stack levels used:    1
 36174 ;; Hardware stack levels required when called:    7
 36175 ;; This function calls:
 36176 ;;		Nothing
 36177 ;; This function is called by:
 36178 ;;		_TMR_GetDeltaTime
 36179 ;;		_TMR_SwapTimer
 36180 ;; This function uses a non-reentrant model
 36181 ;;
 36182                           
 36183                           	psect	text192
 36184  0074B4                     __ptext192:
 36185                           	opt stack 0
 36186  0074B4                     _TMR1_ReadTimer:
 36187                           	opt stack 17
 36188                           
 36189                           ; BSR set to: 0
 36190                           ;tmr1.c: 108: uint16_t readVal;
 36191                           ;tmr1.c: 109: uint8_t readValHigh;
 36192                           ;tmr1.c: 110: uint8_t readValLow;
 36193                           ;tmr1.c: 112: readValLow = TMR1L;
 36194                           
 36195                           ; BSR set to: 0
 36196                           ;incstack = 0
 36197  0074B4  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36198                           
 36199                           ;tmr1.c: 113: readValHigh = TMR1H;
 36200  0074B8  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36201                           
 36202                           ; BSR set to: 0
 36203                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36204  0074BC  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36205  0074BE  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 36206  0074C0  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36207  0074C2  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36208  0074C4  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36209                           
 36210                           ; BSR set to: 0
 36211                           ;tmr1.c: 117: return readVal;
 36212  0074C8  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36213  0074CC  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36214                           
 36215                           ; BSR set to: 0
 36216  0074D0  0012               	return		;funcret
 36217  0074D2                     __end_of_TMR1_ReadTimer:
 36218                           	opt stack 0
 36219                           tosu	equ	0xFFF
 36220                           tosh	equ	0xFFE
 36221                           tosl	equ	0xFFD
 36222                           pclath	equ	0xFFA
 36223                           tblptru	equ	0xFF8
 36224                           tblptrh	equ	0xFF7
 36225                           tblptrl	equ	0xFF6
 36226                           tablat	equ	0xFF5
 36227                           prodh	equ	0xFF4
 36228                           prodl	equ	0xFF3
 36229                           intcon	equ	0xFF2
 36230                           intcon2	equ	0xFF1
 36231                           intcon3	equ	0xFF0
 36232                           indf0	equ	0xFEF
 36233                           postinc0	equ	0xFEE
 36234                           plusw0	equ	0xFEB
 36235                           fsr0h	equ	0xFEA
 36236                           fsr0l	equ	0xFE9
 36237                           wreg	equ	0xFE8
 36238                           postinc1	equ	0xFE6
 36239                           postdec1	equ	0xFE5
 36240                           plusw1	equ	0xFE3
 36241                           fsr1h	equ	0xFE2
 36242                           fsr1l	equ	0xFE1
 36243                           indf2	equ	0xFDF
 36244                           postinc2	equ	0xFDE
 36245                           postdec2	equ	0xFDD
 36246                           plusw2	equ	0xFDB
 36247                           fsr2h	equ	0xFDA
 36248                           fsr2l	equ	0xFD9
 36249                           status	equ	0xFD8
 36250                           
 36251 ;; *************** function _SwTimerSetTimeout *****************
 36252 ;; Defined at:
 36253 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36254 ;; Parameters:    Size  Location     Type
 36255 ;;  timerId         1    wreg     unsigned char 
 36256 ;;  timeout         4   17[BANK0 ] unsigned long 
 36257 ;; Auto vars:     Size  Location     Type
 36258 ;;  timerId         1   25[BANK0 ] unsigned char 
 36259 ;; Return value:  Size  Location     Type
 36260 ;;                  1    wreg      void 
 36261 ;; Registers used:
 36262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36263 ;; Tracked objects:
 36264 ;;		On entry : C/2
 36265 ;;		On exit  : F/0
 36266 ;;		Unchanged: 0/0
 36267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36271 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36272 ;;Total ram usage:        9 bytes
 36273 ;; Hardware stack levels used:    1
 36274 ;; Hardware stack levels required when called:    7
 36275 ;; This function calls:
 36276 ;;		Nothing
 36277 ;; This function is called by:
 36278 ;;		_RADIO_Transmit
 36279 ;;		_RADIO_ReceiveStart
 36280 ;;		_LORAWAN_TxDone
 36281 ;;		_LORAWAN_RxTimeout
 36282 ;;		_StartReTxTimer
 36283 ;;		_DutyCycleCallback
 36284 ;;		_LORAWAN_Join
 36285 ;;		_LORAWAN_LinkCheckConfigure
 36286 ;;		_LORAWAN_LinkCheckCallback
 36287 ;;		_UpdateRetransmissionAckTimeoutState
 36288 ;;		_UpdateJoinSuccessState
 36289 ;; This function uses a non-reentrant model
 36290 ;;
 36291                           
 36292                           	psect	text193
 36293  006CE0                     __ptext193:
 36294                           	opt stack 0
 36295  006CE0                     _SwTimerSetTimeout:
 36296                           	opt stack 20
 36297                           
 36298                           ; BSR set to: 0
 36299                           ;incstack = 0
 36300                           ;SwTimerSetTimeout@timerId stored from wreg
 36301  006CE0  0100               	movlb	0	; () banked
 36302  006CE2  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 36303                           
 36304                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 36305  006CE4  9EF2               	bcf	intcon,7,c	;volatile
 36306                           
 36307                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 36308  006CE6  0EE0               	movlw	224
 36309  006CE8  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 36310  006CEA  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 36311  006CEC  0EFF               	movlw	255
 36312  006CEE  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 36313  006CF0  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 36314  006CF2  0EFF               	movlw	255
 36315  006CF4  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 36316  006CF6  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 36317  006CF8  0EFF               	movlw	255
 36318  006CFA  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 36319  006CFC  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 36320  006CFE  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 36321  006D00  0D08               	mullw	8
 36322  006D02  0E00               	movlw	low _swTimers
 36323  006D04  24F3               	addwf	prodl,w,c
 36324  006D06  6ED9               	movwf	fsr2l,c
 36325  006D08  0E03               	movlw	high _swTimers
 36326  006D0A  20F4               	addwfc	prodh,w,c
 36327  006D0C  6EDA               	movwf	fsr2h,c
 36328  006D0E  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 36329  006D12  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36330  006D16  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36331  006D1A  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36332                           
 36333                           ; BSR set to: 0
 36334                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36335  006D1E  8EF2               	bsf	intcon,7,c	;volatile
 36336                           
 36337                           ; BSR set to: 0
 36338  006D20  0012               	return		;funcret
 36339  006D22                     __end_of_SwTimerSetTimeout:
 36340                           	opt stack 0
 36341                           tosu	equ	0xFFF
 36342                           tosh	equ	0xFFE
 36343                           tosl	equ	0xFFD
 36344                           pclath	equ	0xFFA
 36345                           tblptru	equ	0xFF8
 36346                           tblptrh	equ	0xFF7
 36347                           tblptrl	equ	0xFF6
 36348                           tablat	equ	0xFF5
 36349                           prodh	equ	0xFF4
 36350                           prodl	equ	0xFF3
 36351                           intcon	equ	0xFF2
 36352                           intcon2	equ	0xFF1
 36353                           intcon3	equ	0xFF0
 36354                           indf0	equ	0xFEF
 36355                           postinc0	equ	0xFEE
 36356                           plusw0	equ	0xFEB
 36357                           fsr0h	equ	0xFEA
 36358                           fsr0l	equ	0xFE9
 36359                           wreg	equ	0xFE8
 36360                           postinc1	equ	0xFE6
 36361                           postdec1	equ	0xFE5
 36362                           plusw1	equ	0xFE3
 36363                           fsr1h	equ	0xFE2
 36364                           fsr1l	equ	0xFE1
 36365                           indf2	equ	0xFDF
 36366                           postinc2	equ	0xFDE
 36367                           postdec2	equ	0xFDD
 36368                           plusw2	equ	0xFDB
 36369                           fsr2h	equ	0xFDA
 36370                           fsr2l	equ	0xFD9
 36371                           status	equ	0xFD8
 36372                           
 36373 ;; *************** function _InitDefault868Channels *****************
 36374 ;; Defined at:
 36375 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36376 ;; Parameters:    Size  Location     Type
 36377 ;;		None
 36378 ;; Auto vars:     Size  Location     Type
 36379 ;;  i               1   14[BANK0 ] unsigned char 
 36380 ;; Return value:  Size  Location     Type
 36381 ;;                  1    wreg      void 
 36382 ;; Registers used:
 36383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36384 ;; Tracked objects:
 36385 ;;		On entry : F/1
 36386 ;;		On exit  : F/0
 36387 ;;		Unchanged: 0/0
 36388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36392 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36393 ;;Total ram usage:        1 bytes
 36394 ;; Hardware stack levels used:    1
 36395 ;; Hardware stack levels required when called:    8
 36396 ;; This function calls:
 36397 ;;		_memcpy
 36398 ;;		_memset
 36399 ;; This function is called by:
 36400 ;;		_LORAWAN_Reset
 36401 ;; This function uses a non-reentrant model
 36402 ;;
 36403                           
 36404                           	psect	text194
 36405  006394                     __ptext194:
 36406                           	opt stack 0
 36407  006394                     _InitDefault868Channels:
 36408                           	opt stack 20
 36409                           
 36410                           ; BSR set to: 1
 36411                           ;lorawan_eu.c: 981: uint8_t i;
 36412                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36413                           
 36414                           ; BSR set to: 0
 36415                           ;incstack = 0
 36416  006394  0E00               	movlw	low _Channels
 36417  006396  0100               	movlb	0	; () banked
 36418  006398  6F64               	movwf	memset@p1& (0+255),b
 36419  00639A  0E04               	movlw	high _Channels
 36420  00639C  6F65               	movwf	(memset@p1+1)& (0+255),b
 36421  00639E  6B67               	clrf	(memset@c+1)& (0+255),b
 36422  0063A0  6B66               	clrf	memset@c& (0+255),b
 36423  0063A2  6B69               	clrf	(memset@n+1)& (0+255),b
 36424  0063A4  0EE0               	movlw	224
 36425  0063A6  6F68               	movwf	memset@n& (0+255),b
 36426  0063A8  ECEC  F038         	call	_memset	;wreg free
 36427                           
 36428                           ; BSR set to: 0
 36429                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36430  0063AC  0E00               	movlw	low _Channels
 36431  0063AE  6F64               	movwf	memcpy@d1& (0+255),b
 36432  0063B0  0E04               	movlw	high _Channels
 36433  0063B2  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36434  0063B4  0ED2               	movlw	low _DefaultChannels868
 36435  0063B6  6F66               	movwf	memcpy@s1& (0+255),b
 36436  0063B8  0EFF               	movlw	high _DefaultChannels868
 36437  0063BA  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36438  0063BC  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36439  0063BE  0E2A               	movlw	42
 36440  0063C0  6F68               	movwf	memcpy@n& (0+255),b
 36441  0063C2  EC0F  F034         	call	_memcpy	;wreg free
 36442                           
 36443                           ; BSR set to: 0
 36444                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36445  0063C6  0E03               	movlw	3
 36446  0063C8  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36447  0063CA                     l15035:
 36448                           
 36449                           ; BSR set to: 0
 36450                           ;lorawan_eu.c: 986: {
 36451                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36452  0063CA  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36453  0063CC  0D0E               	mullw	14
 36454  0063CE  0E06               	movlw	low (_Channels+6)
 36455  0063D0  24F3               	addwf	prodl,w,c
 36456  0063D2  6ED9               	movwf	fsr2l,c
 36457  0063D4  0E04               	movlw	high (_Channels+6)
 36458  0063D6  20F4               	addwfc	prodh,w,c
 36459  0063D8  6EDA               	movwf	fsr2h,c
 36460  0063DA  68DE               	setf	postinc2,c
 36461  0063DC  68DD               	setf	postdec2,c
 36462                           
 36463                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36464  0063DE  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36465  0063E0  0D0E               	mullw	14
 36466  0063E2  0E05               	movlw	low (_Channels+5)
 36467  0063E4  24F3               	addwf	prodl,w,c
 36468  0063E6  6ED9               	movwf	fsr2l,c
 36469  0063E8  0E04               	movlw	high (_Channels+5)
 36470  0063EA  20F4               	addwfc	prodh,w,c
 36471  0063EC  6EDA               	movwf	fsr2h,c
 36472  0063EE  68DF               	setf	indf2,c
 36473                           
 36474                           ; BSR set to: 0
 36475  0063F0  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36476                           
 36477                           ; BSR set to: 0
 36478  0063F2  0E0F               	movlw	15
 36479  0063F4  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36480  0063F6  D7E9               	goto	l15035
 36481  0063F8  0C0F               	retlw	15
 36482  0063FA                     __end_of_InitDefault868Channels:
 36483                           	opt stack 0
 36484                           tosu	equ	0xFFF
 36485                           tosh	equ	0xFFE
 36486                           tosl	equ	0xFFD
 36487                           pclath	equ	0xFFA
 36488                           tblptru	equ	0xFF8
 36489                           tblptrh	equ	0xFF7
 36490                           tblptrl	equ	0xFF6
 36491                           tablat	equ	0xFF5
 36492                           prodh	equ	0xFF4
 36493                           prodl	equ	0xFF3
 36494                           intcon	equ	0xFF2
 36495                           intcon2	equ	0xFF1
 36496                           intcon3	equ	0xFF0
 36497                           indf0	equ	0xFEF
 36498                           postinc0	equ	0xFEE
 36499                           plusw0	equ	0xFEB
 36500                           fsr0h	equ	0xFEA
 36501                           fsr0l	equ	0xFE9
 36502                           wreg	equ	0xFE8
 36503                           postinc1	equ	0xFE6
 36504                           postdec1	equ	0xFE5
 36505                           plusw1	equ	0xFE3
 36506                           fsr1h	equ	0xFE2
 36507                           fsr1l	equ	0xFE1
 36508                           indf2	equ	0xFDF
 36509                           postinc2	equ	0xFDE
 36510                           postdec2	equ	0xFDD
 36511                           plusw2	equ	0xFDB
 36512                           fsr2h	equ	0xFDA
 36513                           fsr2l	equ	0xFD9
 36514                           status	equ	0xFD8
 36515                           
 36516 ;; *************** function _InitDefault433Channels *****************
 36517 ;; Defined at:
 36518 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36519 ;; Parameters:    Size  Location     Type
 36520 ;;		None
 36521 ;; Auto vars:     Size  Location     Type
 36522 ;;  i               1   14[BANK0 ] unsigned char 
 36523 ;; Return value:  Size  Location     Type
 36524 ;;                  1    wreg      void 
 36525 ;; Registers used:
 36526 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36527 ;; Tracked objects:
 36528 ;;		On entry : F/1
 36529 ;;		On exit  : F/0
 36530 ;;		Unchanged: 0/0
 36531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36536 ;;Total ram usage:        1 bytes
 36537 ;; Hardware stack levels used:    1
 36538 ;; Hardware stack levels required when called:    8
 36539 ;; This function calls:
 36540 ;;		_memcpy
 36541 ;;		_memset
 36542 ;; This function is called by:
 36543 ;;		_LORAWAN_Reset
 36544 ;; This function uses a non-reentrant model
 36545 ;;
 36546                           
 36547                           	psect	text195
 36548  0063FA                     __ptext195:
 36549                           	opt stack 0
 36550  0063FA                     _InitDefault433Channels:
 36551                           	opt stack 20
 36552                           
 36553                           ; BSR set to: 1
 36554                           ;lorawan_eu.c: 996: uint8_t i;
 36555                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36556                           
 36557                           ; BSR set to: 0
 36558                           ;incstack = 0
 36559  0063FA  0E00               	movlw	low _Channels
 36560  0063FC  0100               	movlb	0	; () banked
 36561  0063FE  6F64               	movwf	memset@p1& (0+255),b
 36562  006400  0E04               	movlw	high _Channels
 36563  006402  6F65               	movwf	(memset@p1+1)& (0+255),b
 36564  006404  6B67               	clrf	(memset@c+1)& (0+255),b
 36565  006406  6B66               	clrf	memset@c& (0+255),b
 36566  006408  6B69               	clrf	(memset@n+1)& (0+255),b
 36567  00640A  0EE0               	movlw	224
 36568  00640C  6F68               	movwf	memset@n& (0+255),b
 36569  00640E  ECEC  F038         	call	_memset	;wreg free
 36570                           
 36571                           ; BSR set to: 0
 36572                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36573  006412  0E00               	movlw	low _Channels
 36574  006414  6F64               	movwf	memcpy@d1& (0+255),b
 36575  006416  0E04               	movlw	high _Channels
 36576  006418  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36577  00641A  0EA8               	movlw	low _DefaultChannels433
 36578  00641C  6F66               	movwf	memcpy@s1& (0+255),b
 36579  00641E  0EFF               	movlw	high _DefaultChannels433
 36580  006420  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36581  006422  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36582  006424  0E2A               	movlw	42
 36583  006426  6F68               	movwf	memcpy@n& (0+255),b
 36584  006428  EC0F  F034         	call	_memcpy	;wreg free
 36585                           
 36586                           ; BSR set to: 0
 36587                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36588  00642C  0E03               	movlw	3
 36589  00642E  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36590  006430                     l15051:
 36591                           
 36592                           ; BSR set to: 0
 36593                           ;lorawan_eu.c: 1001: {
 36594                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36595  006430  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36596  006432  0D0E               	mullw	14
 36597  006434  0E06               	movlw	low (_Channels+6)
 36598  006436  24F3               	addwf	prodl,w,c
 36599  006438  6ED9               	movwf	fsr2l,c
 36600  00643A  0E04               	movlw	high (_Channels+6)
 36601  00643C  20F4               	addwfc	prodh,w,c
 36602  00643E  6EDA               	movwf	fsr2h,c
 36603  006440  68DE               	setf	postinc2,c
 36604  006442  68DD               	setf	postdec2,c
 36605                           
 36606                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36607  006444  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36608  006446  0D0E               	mullw	14
 36609  006448  0E05               	movlw	low (_Channels+5)
 36610  00644A  24F3               	addwf	prodl,w,c
 36611  00644C  6ED9               	movwf	fsr2l,c
 36612  00644E  0E04               	movlw	high (_Channels+5)
 36613  006450  20F4               	addwfc	prodh,w,c
 36614  006452  6EDA               	movwf	fsr2h,c
 36615  006454  68DF               	setf	indf2,c
 36616                           
 36617                           ; BSR set to: 0
 36618  006456  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36619                           
 36620                           ; BSR set to: 0
 36621  006458  0E0F               	movlw	15
 36622  00645A  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36623  00645C  D7E9               	goto	l15051
 36624  00645E  0C0F               	retlw	15
 36625  006460                     __end_of_InitDefault433Channels:
 36626                           	opt stack 0
 36627                           tosu	equ	0xFFF
 36628                           tosh	equ	0xFFE
 36629                           tosl	equ	0xFFD
 36630                           pclath	equ	0xFFA
 36631                           tblptru	equ	0xFF8
 36632                           tblptrh	equ	0xFF7
 36633                           tblptrl	equ	0xFF6
 36634                           tablat	equ	0xFF5
 36635                           prodh	equ	0xFF4
 36636                           prodl	equ	0xFF3
 36637                           intcon	equ	0xFF2
 36638                           intcon2	equ	0xFF1
 36639                           intcon3	equ	0xFF0
 36640                           indf0	equ	0xFEF
 36641                           postinc0	equ	0xFEE
 36642                           plusw0	equ	0xFEB
 36643                           fsr0h	equ	0xFEA
 36644                           fsr0l	equ	0xFE9
 36645                           wreg	equ	0xFE8
 36646                           postinc1	equ	0xFE6
 36647                           postdec1	equ	0xFE5
 36648                           plusw1	equ	0xFE3
 36649                           fsr1h	equ	0xFE2
 36650                           fsr1l	equ	0xFE1
 36651                           indf2	equ	0xFDF
 36652                           postinc2	equ	0xFDE
 36653                           postdec2	equ	0xFDD
 36654                           plusw2	equ	0xFDB
 36655                           fsr2h	equ	0xFDA
 36656                           fsr2l	equ	0xFD9
 36657                           status	equ	0xFD8
 36658                           
 36659 ;; *************** function _memset *****************
 36660 ;; Defined at:
 36661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36662 ;; Parameters:    Size  Location     Type
 36663 ;;  p1              2    4[BANK0 ] PTR void 
 36664 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36665 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36666 ;;  c               2    6[BANK0 ] int 
 36667 ;;  n               2    8[BANK0 ] unsigned int 
 36668 ;; Auto vars:     Size  Location     Type
 36669 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36670 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36671 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36672 ;; Return value:  Size  Location     Type
 36673 ;;                  2    4[BANK0 ] PTR void 
 36674 ;; Registers used:
 36675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36676 ;; Tracked objects:
 36677 ;;		On entry : F/0
 36678 ;;		On exit  : F/0
 36679 ;;		Unchanged: 0/0
 36680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36681 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36685 ;;Total ram usage:        8 bytes
 36686 ;; Hardware stack levels used:    1
 36687 ;; Hardware stack levels required when called:    7
 36688 ;; This function calls:
 36689 ;;		Nothing
 36690 ;; This function is called by:
 36691 ;;		_LORAWAN_Reset
 36692 ;;		_InitDefault868Channels
 36693 ;;		_InitDefault433Channels
 36694 ;;		_AESCmac
 36695 ;;		_GenerateSubkey
 36696 ;;		_AssemblePacket
 36697 ;;		_PrepareJoinRequestFrame
 36698 ;;		_PrepareSessionKeys
 36699 ;;		_AssembleEncryptionBlock
 36700 ;; This function uses a non-reentrant model
 36701 ;;
 36702                           
 36703                           	psect	text196
 36704  0071D8                     __ptext196:
 36705                           	opt stack 0
 36706  0071D8                     _memset:
 36707                           	opt stack 20
 36708                           
 36709                           ; BSR set to: 0
 36710                           
 36711                           ; BSR set to: 0
 36712                           ;incstack = 0
 36713  0071D8  C064  F06A         	movff	memset@p1,memset@p
 36714  0071DC  C065  F06B         	movff	memset@p1+1,memset@p+1
 36715  0071E0  D008               	goto	l12355
 36716  0071E2                     l12351:
 36717                           
 36718                           ; BSR set to: 0
 36719  0071E2  C06A  FFD9         	movff	memset@p,fsr2l
 36720  0071E6  C06B  FFDA         	movff	memset@p+1,fsr2h
 36721  0071EA  C066  FFDF         	movff	memset@c,indf2
 36722                           
 36723                           ; BSR set to: 0
 36724  0071EE  4B6A               	infsnz	memset@p& (0+255),f,b
 36725  0071F0  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36726  0071F2                     l12355:
 36727                           
 36728                           ; BSR set to: 0
 36729  0071F2  0768               	decf	memset@n& (0+255),f,b
 36730  0071F4  A0D8               	btfss	status,0,c
 36731  0071F6  0769               	decf	(memset@n+1)& (0+255),f,b
 36732  0071F8  2968               	incf	memset@n& (0+255),w,b
 36733  0071FA  E1F3               	bnz	l12351
 36734  0071FC  2969               	incf	(memset@n+1)& (0+255),w,b
 36735  0071FE  E1F1               	bnz	l12351
 36736                           
 36737                           ; BSR set to: 0
 36738  007200  0012               	return		;funcret
 36739  007202                     __end_of_memset:
 36740                           	opt stack 0
 36741                           tosu	equ	0xFFF
 36742                           tosh	equ	0xFFE
 36743                           tosl	equ	0xFFD
 36744                           pclath	equ	0xFFA
 36745                           tblptru	equ	0xFF8
 36746                           tblptrh	equ	0xFF7
 36747                           tblptrl	equ	0xFF6
 36748                           tablat	equ	0xFF5
 36749                           prodh	equ	0xFF4
 36750                           prodl	equ	0xFF3
 36751                           intcon	equ	0xFF2
 36752                           intcon2	equ	0xFF1
 36753                           intcon3	equ	0xFF0
 36754                           indf0	equ	0xFEF
 36755                           postinc0	equ	0xFEE
 36756                           plusw0	equ	0xFEB
 36757                           fsr0h	equ	0xFEA
 36758                           fsr0l	equ	0xFE9
 36759                           wreg	equ	0xFE8
 36760                           postinc1	equ	0xFE6
 36761                           postdec1	equ	0xFE5
 36762                           plusw1	equ	0xFE3
 36763                           fsr1h	equ	0xFE2
 36764                           fsr1l	equ	0xFE1
 36765                           indf2	equ	0xFDF
 36766                           postinc2	equ	0xFDE
 36767                           postdec2	equ	0xFDD
 36768                           plusw2	equ	0xFDB
 36769                           fsr2h	equ	0xFDA
 36770                           fsr2l	equ	0xFD9
 36771                           status	equ	0xFD8
 36772                           
 36773 ;; *************** function _memcpy *****************
 36774 ;; Defined at:
 36775 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36776 ;; Parameters:    Size  Location     Type
 36777 ;;  d1              2    4[BANK0 ] PTR void 
 36778 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36779 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36780 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36781 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36782 ;;  s1              2    6[BANK0 ] PTR const void 
 36783 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36784 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36785 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36786 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36787 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36788 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36789 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36790 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36791 ;;		 -> NULL(0), 
 36792 ;;  n               2    8[BANK0 ] unsigned int 
 36793 ;; Auto vars:     Size  Location     Type
 36794 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36795 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36796 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36797 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36798 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36799 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36800 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36801 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36802 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36803 ;;		 -> NULL(0), 
 36804 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36805 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36806 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36807 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36808 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36809 ;; Return value:  Size  Location     Type
 36810 ;;                  2    4[BANK0 ] PTR void 
 36811 ;; Registers used:
 36812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36813 ;; Tracked objects:
 36814 ;;		On entry : F/0
 36815 ;;		On exit  : F/0
 36816 ;;		Unchanged: 0/0
 36817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36818 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36819 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36821 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36822 ;;Total ram usage:       10 bytes
 36823 ;; Hardware stack levels used:    1
 36824 ;; Hardware stack levels required when called:    7
 36825 ;; This function calls:
 36826 ;;		Nothing
 36827 ;; This function is called by:
 36828 ;;		_RADIO_SetFSKSyncWord
 36829 ;;		_UpdateCfList
 36830 ;;		_InitDefault868Channels
 36831 ;;		_InitDefault433Channels
 36832 ;;		_AESCmac
 36833 ;;		_LORAWAN_SetNetworkSessionKey
 36834 ;;		_LORAWAN_SetApplicationSessionKey
 36835 ;;		_LORAWAN_RxDone
 36836 ;;		_AssemblePacket
 36837 ;;		_PrepareJoinRequestFrame
 36838 ;;		_PrepareSessionKeys
 36839 ;;		_AssembleEncryptionBlock
 36840 ;;		_ExtractMic
 36841 ;;		_ComputeMic
 36842 ;;		_AESEncodeLoRa
 36843 ;; This function uses a non-reentrant model
 36844 ;;
 36845                           
 36846                           	psect	text197
 36847  00681E                     __ptext197:
 36848                           	opt stack 0
 36849  00681E                     _memcpy:
 36850                           	opt stack 17
 36851                           
 36852                           ; BSR set to: 0
 36853                           
 36854                           ; BSR set to: 0
 36855                           ;incstack = 0
 36856  00681E  C066  F06C         	movff	memcpy@s1,memcpy@s
 36857  006822  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36858  006826  C064  F06A         	movff	memcpy@d1,memcpy@d
 36859  00682A  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36860  00682E  D01B               	goto	l11997
 36861  006830                     l11991:
 36862                           
 36863                           ; BSR set to: 0
 36864  006830  C06C  FFF6         	movff	memcpy@s,tblptrl
 36865  006834  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36866  006838  0E00               	movlw	low (__mediumconst shr (0+16))
 36867  00683A  6EF8               	movwf	tblptru,c
 36868  00683C  C06A  FFD9         	movff	memcpy@d,fsr2l
 36869  006840  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 36870  006844  0E0F               	movlw	(high __ramtop+-1)
 36871  006846  64F7               	cpfsgt	tblptrh,c
 36872  006848  D003               	bra	u12567
 36873  00684A  0008               	tblrd		*
 36874  00684C  50F5               	movf	tablat,w,c
 36875  00684E  D005               	bra	u12560
 36876  006850                     u12567:
 36877  006850  CFF6 FFE9          	movff	tblptrl,fsr0l
 36878  006854  CFF7 FFEA          	movff	tblptrh,fsr0h
 36879  006858  50EF               	movf	indf0,w,c
 36880  00685A                     u12560:
 36881  00685A  6EDF               	movwf	indf2,c
 36882  00685C  0100               	movlb	0	; () banked
 36883  00685E  4B6C               	infsnz	memcpy@s& (0+255),f,b
 36884  006860  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 36885                           
 36886                           ; BSR set to: 0
 36887  006862  4B6A               	infsnz	memcpy@d& (0+255),f,b
 36888  006864  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 36889  006866                     l11997:
 36890                           
 36891                           ; BSR set to: 0
 36892  006866  0768               	decf	memcpy@n& (0+255),f,b
 36893  006868  A0D8               	btfss	status,0,c
 36894  00686A  0769               	decf	(memcpy@n+1)& (0+255),f,b
 36895  00686C  2968               	incf	memcpy@n& (0+255),w,b
 36896  00686E  E1E0               	bnz	l11991
 36897  006870  2969               	incf	(memcpy@n+1)& (0+255),w,b
 36898  006872  E1DE               	bnz	l11991
 36899                           
 36900                           ; BSR set to: 0
 36901  006874  0012               	return		;funcret
 36902  006876                     __end_of_memcpy:
 36903                           	opt stack 0
 36904                           tosu	equ	0xFFF
 36905                           tosh	equ	0xFFE
 36906                           tosl	equ	0xFFD
 36907                           pclath	equ	0xFFA
 36908                           tblptru	equ	0xFF8
 36909                           tblptrh	equ	0xFF7
 36910                           tblptrl	equ	0xFF6
 36911                           tablat	equ	0xFF5
 36912                           prodh	equ	0xFF4
 36913                           prodl	equ	0xFF3
 36914                           intcon	equ	0xFF2
 36915                           intcon2	equ	0xFF1
 36916                           intcon3	equ	0xFF0
 36917                           indf0	equ	0xFEF
 36918                           postinc0	equ	0xFEE
 36919                           plusw0	equ	0xFEB
 36920                           fsr0h	equ	0xFEA
 36921                           fsr0l	equ	0xFE9
 36922                           wreg	equ	0xFE8
 36923                           postinc1	equ	0xFE6
 36924                           postdec1	equ	0xFE5
 36925                           plusw1	equ	0xFE3
 36926                           fsr1h	equ	0xFE2
 36927                           fsr1l	equ	0xFE1
 36928                           indf2	equ	0xFDF
 36929                           postinc2	equ	0xFDE
 36930                           postdec2	equ	0xFDD
 36931                           plusw2	equ	0xFDB
 36932                           fsr2h	equ	0xFDA
 36933                           fsr2l	equ	0xFD9
 36934                           status	equ	0xFD8
 36935                           
 36936 ;; *************** function _CreateAllSoftwareTimers *****************
 36937 ;; Defined at:
 36938 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36939 ;; Parameters:    Size  Location     Type
 36940 ;;		None
 36941 ;; Auto vars:     Size  Location     Type
 36942 ;;		None
 36943 ;; Return value:  Size  Location     Type
 36944 ;;                  1    wreg      void 
 36945 ;; Registers used:
 36946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36947 ;; Tracked objects:
 36948 ;;		On entry : F/2
 36949 ;;		On exit  : F/2
 36950 ;;		Unchanged: 0/0
 36951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36956 ;;Total ram usage:        0 bytes
 36957 ;; Hardware stack levels used:    1
 36958 ;; Hardware stack levels required when called:    8
 36959 ;; This function calls:
 36960 ;;		_SwTimerCreate
 36961 ;; This function is called by:
 36962 ;;		_LORAWAN_Init
 36963 ;; This function uses a non-reentrant model
 36964 ;;
 36965                           
 36966                           	psect	text198
 36967  00691A                     __ptext198:
 36968                           	opt stack 0
 36969  00691A                     _CreateAllSoftwareTimers:
 36970                           	opt stack 21
 36971                           
 36972                           ; BSR set to: 2
 36973                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 36974                           
 36975                           ; BSR set to: 0
 36976                           ;incstack = 0
 36977  00691A  ECFC  F030         	call	_SwTimerCreate	;wreg free
 36978  00691E  0102               	movlb	2	; () banked
 36979  006920  6FE2               	movwf	(_loRa+226)& (0+255),b
 36980                           
 36981                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 36982  006922  ECFC  F030         	call	_SwTimerCreate	;wreg free
 36983  006926  0102               	movlb	2	; () banked
 36984  006928  6FE3               	movwf	(_loRa+227)& (0+255),b
 36985                           
 36986                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 36987  00692A  ECFC  F030         	call	_SwTimerCreate	;wreg free
 36988  00692E  0102               	movlb	2	; () banked
 36989  006930  6FE4               	movwf	(_loRa+228)& (0+255),b
 36990                           
 36991                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 36992  006932  ECFC  F030         	call	_SwTimerCreate	;wreg free
 36993  006936  0102               	movlb	2	; () banked
 36994  006938  6FE5               	movwf	(_loRa+229)& (0+255),b
 36995                           
 36996                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 36997  00693A  ECFC  F030         	call	_SwTimerCreate	;wreg free
 36998  00693E  0102               	movlb	2	; () banked
 36999  006940  6FE7               	movwf	(_loRa+231)& (0+255),b
 37000                           
 37001                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 37002  006942  ECFC  F030         	call	_SwTimerCreate	;wreg free
 37003  006946  0102               	movlb	2	; () banked
 37004  006948  6FE8               	movwf	(_loRa+232)& (0+255),b
 37005                           
 37006                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 37007  00694A  ECFC  F030         	call	_SwTimerCreate	;wreg free
 37008  00694E  0102               	movlb	2	; () banked
 37009  006950  6FE6               	movwf	(_loRa+230)& (0+255),b
 37010                           
 37011                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 37012  006952  ECFC  F030         	call	_SwTimerCreate	;wreg free
 37013  006956  0102               	movlb	2	; () banked
 37014  006958  6FEA               	movwf	(_loRa+234)& (0+255),b
 37015                           
 37016                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 37017  00695A  ECFC  F030         	call	_SwTimerCreate	;wreg free
 37018  00695E  0102               	movlb	2	; () banked
 37019  006960  6FF3               	movwf	(_loRa+243)& (0+255),b
 37020                           
 37021                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 37022  006962  ECFC  F030         	call	_SwTimerCreate	;wreg free
 37023  006966  0102               	movlb	2	; () banked
 37024  006968  6FE9               	movwf	(_loRa+233)& (0+255),b
 37025                           
 37026                           ; BSR set to: 2
 37027  00696A  0012               	return		;funcret
 37028  00696C                     __end_of_CreateAllSoftwareTimers:
 37029                           	opt stack 0
 37030                           tosu	equ	0xFFF
 37031                           tosh	equ	0xFFE
 37032                           tosl	equ	0xFFD
 37033                           pclath	equ	0xFFA
 37034                           tblptru	equ	0xFF8
 37035                           tblptrh	equ	0xFF7
 37036                           tblptrl	equ	0xFF6
 37037                           tablat	equ	0xFF5
 37038                           prodh	equ	0xFF4
 37039                           prodl	equ	0xFF3
 37040                           intcon	equ	0xFF2
 37041                           intcon2	equ	0xFF1
 37042                           intcon3	equ	0xFF0
 37043                           indf0	equ	0xFEF
 37044                           postinc0	equ	0xFEE
 37045                           plusw0	equ	0xFEB
 37046                           fsr0h	equ	0xFEA
 37047                           fsr0l	equ	0xFE9
 37048                           wreg	equ	0xFE8
 37049                           postinc1	equ	0xFE6
 37050                           postdec1	equ	0xFE5
 37051                           plusw1	equ	0xFE3
 37052                           fsr1h	equ	0xFE2
 37053                           fsr1l	equ	0xFE1
 37054                           indf2	equ	0xFDF
 37055                           postinc2	equ	0xFDE
 37056                           postdec2	equ	0xFDD
 37057                           plusw2	equ	0xFDB
 37058                           fsr2h	equ	0xFDA
 37059                           fsr2l	equ	0xFD9
 37060                           status	equ	0xFD8
 37061                           
 37062 ;; *************** function _SwTimerCreate *****************
 37063 ;; Defined at:
 37064 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37065 ;; Parameters:    Size  Location     Type
 37066 ;;		None
 37067 ;; Auto vars:     Size  Location     Type
 37068 ;;  retVal          1    4[BANK0 ] unsigned char 
 37069 ;; Return value:  Size  Location     Type
 37070 ;;                  1    wreg      unsigned char 
 37071 ;; Registers used:
 37072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37073 ;; Tracked objects:
 37074 ;;		On entry : C/1
 37075 ;;		On exit  : F/0
 37076 ;;		Unchanged: 0/0
 37077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37081 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37082 ;;Total ram usage:        1 bytes
 37083 ;; Hardware stack levels used:    1
 37084 ;; Hardware stack levels required when called:    7
 37085 ;; This function calls:
 37086 ;;		Nothing
 37087 ;; This function is called by:
 37088 ;;		_RADIO_Init
 37089 ;;		_CreateAllSoftwareTimers
 37090 ;; This function uses a non-reentrant model
 37091 ;;
 37092                           
 37093                           	psect	text199
 37094  0061F8                     __ptext199:
 37095                           	opt stack 0
 37096  0061F8                     _SwTimerCreate:
 37097                           	opt stack 21
 37098                           
 37099                           ;sw_timer.c: 156: uint8_t retVal;
 37100                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37101                           
 37102                           ; BSR set to: 2
 37103                           ;incstack = 0
 37104  0061F8  0E14               	movlw	20
 37105  0061FA  0100               	movlb	0	; () banked
 37106  0061FC  61EF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37107  0061FE  D02E               	goto	l126
 37108                           
 37109                           ; BSR set to: 0
 37110                           ;sw_timer.c: 158: {
 37111                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37112  006200  9EF2               	bcf	intcon,7,c	;volatile
 37113                           
 37114                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37115  006202  C0EF  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37116                           
 37117                           ; BSR set to: 0
 37118                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37119  006206  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37120  006208  0D08               	mullw	8
 37121  00620A  0E04               	movlw	low (_swTimers+4)
 37122  00620C  24F3               	addwf	prodl,w,c
 37123  00620E  6ED9               	movwf	fsr2l,c
 37124  006210  0E03               	movlw	high (_swTimers+4)
 37125  006212  20F4               	addwfc	prodh,w,c
 37126  006214  6EDA               	movwf	fsr2h,c
 37127  006216  6ADF               	clrf	indf2,c
 37128                           
 37129                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37130  006218  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37131  00621A  0D08               	mullw	8
 37132  00621C  0E00               	movlw	low _swTimers
 37133  00621E  24F3               	addwf	prodl,w,c
 37134  006220  6ED9               	movwf	fsr2l,c
 37135  006222  0E03               	movlw	high _swTimers
 37136  006224  20F4               	addwfc	prodh,w,c
 37137  006226  6EDA               	movwf	fsr2h,c
 37138  006228  6ADE               	clrf	postinc2,c
 37139  00622A  6ADE               	clrf	postinc2,c
 37140  00622C  6ADE               	clrf	postinc2,c
 37141  00622E  6ADD               	clrf	postdec2,c
 37142                           
 37143                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37144  006230  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37145  006232  0D08               	mullw	8
 37146  006234  0E05               	movlw	low (_swTimers+5)
 37147  006236  24F3               	addwf	prodl,w,c
 37148  006238  6ED9               	movwf	fsr2l,c
 37149  00623A  0E03               	movlw	high (_swTimers+5)
 37150  00623C  20F4               	addwfc	prodh,w,c
 37151  00623E  6EDA               	movwf	fsr2h,c
 37152  006240  6ADF               	clrf	indf2,c
 37153                           
 37154                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37155  006242  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37156  006244  0D08               	mullw	8
 37157  006246  0E06               	movlw	low (_swTimers+6)
 37158  006248  24F3               	addwf	prodl,w,c
 37159  00624A  6ED9               	movwf	fsr2l,c
 37160  00624C  0E03               	movlw	high (_swTimers+6)
 37161  00624E  20F4               	addwfc	prodh,w,c
 37162  006250  6EDA               	movwf	fsr2h,c
 37163  006252  6ADE               	clrf	postinc2,c
 37164  006254  6ADD               	clrf	postdec2,c
 37165                           
 37166                           ; BSR set to: 0
 37167                           ;sw_timer.c: 165: allocatedTimers++;
 37168  006256  2BEF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37169                           
 37170                           ; BSR set to: 0
 37171                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37172  006258  8EF2               	bsf	intcon,7,c	;volatile
 37173                           
 37174                           ;sw_timer.c: 167: }
 37175  00625A  D001               	goto	l14149
 37176  00625C                     l126:
 37177  00625C  D7FF               	goto	l126
 37178  00625E                     l14149:
 37179                           
 37180                           ; BSR set to: 0
 37181                           ;sw_timer.c: 175: }
 37182                           ;sw_timer.c: 176: }
 37183                           ;sw_timer.c: 177: return retVal;
 37184  00625E  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37185                           
 37186                           ; BSR set to: 0
 37187  006260  0012               	return		;funcret
 37188  006262                     __end_of_SwTimerCreate:
 37189                           	opt stack 0
 37190                           tosu	equ	0xFFF
 37191                           tosh	equ	0xFFE
 37192                           tosl	equ	0xFFD
 37193                           pclath	equ	0xFFA
 37194                           tblptru	equ	0xFF8
 37195                           tblptrh	equ	0xFF7
 37196                           tblptrl	equ	0xFF6
 37197                           tablat	equ	0xFF5
 37198                           prodh	equ	0xFF4
 37199                           prodl	equ	0xFF3
 37200                           intcon	equ	0xFF2
 37201                           intcon2	equ	0xFF1
 37202                           intcon3	equ	0xFF0
 37203                           indf0	equ	0xFEF
 37204                           postinc0	equ	0xFEE
 37205                           plusw0	equ	0xFEB
 37206                           fsr0h	equ	0xFEA
 37207                           fsr0l	equ	0xFE9
 37208                           wreg	equ	0xFE8
 37209                           postinc1	equ	0xFE6
 37210                           postdec1	equ	0xFE5
 37211                           plusw1	equ	0xFE3
 37212                           fsr1h	equ	0xFE2
 37213                           fsr1l	equ	0xFE1
 37214                           indf2	equ	0xFDF
 37215                           postinc2	equ	0xFDE
 37216                           postdec2	equ	0xFDD
 37217                           plusw2	equ	0xFDB
 37218                           fsr2h	equ	0xFDA
 37219                           fsr2l	equ	0xFD9
 37220                           status	equ	0xFD8
 37221                           
 37222 ;; *************** function _LORAWAN_GetState *****************
 37223 ;; Defined at:
 37224 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37225 ;; Parameters:    Size  Location     Type
 37226 ;;		None
 37227 ;; Auto vars:     Size  Location     Type
 37228 ;;		None
 37229 ;; Return value:  Size  Location     Type
 37230 ;;                  1    wreg      unsigned char 
 37231 ;; Registers used:
 37232 ;;		wreg, status,2, status,0
 37233 ;; Tracked objects:
 37234 ;;		On entry : F/1
 37235 ;;		On exit  : F/2
 37236 ;;		Unchanged: 0/0
 37237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37242 ;;Total ram usage:        0 bytes
 37243 ;; Hardware stack levels used:    1
 37244 ;; Hardware stack levels required when called:    7
 37245 ;; This function calls:
 37246 ;;		Nothing
 37247 ;; This function is called by:
 37248 ;;		_main
 37249 ;; This function uses a non-reentrant model
 37250 ;;
 37251                           
 37252                           	psect	text200
 37253  0078B4                     __ptext200:
 37254                           	opt stack 0
 37255  0078B4                     _LORAWAN_GetState:
 37256                           	opt stack 23
 37257                           
 37258                           ; BSR set to: 1
 37259                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 37260                           
 37261                           ; BSR set to: 0
 37262                           ;incstack = 0
 37263  0078B4  0102               	movlb	2	; () banked
 37264  0078B6  5102               	movf	(_loRa+2)& (0+255),w,b
 37265  0078B8  0B0F               	andlw	15
 37266                           
 37267                           ; BSR set to: 2
 37268  0078BA  0012               	return		;funcret
 37269  0078BC                     __end_of_LORAWAN_GetState:
 37270                           	opt stack 0
 37271                           tosu	equ	0xFFF
 37272                           tosh	equ	0xFFE
 37273                           tosl	equ	0xFFD
 37274                           pclath	equ	0xFFA
 37275                           tblptru	equ	0xFF8
 37276                           tblptrh	equ	0xFF7
 37277                           tblptrl	equ	0xFF6
 37278                           tablat	equ	0xFF5
 37279                           prodh	equ	0xFF4
 37280                           prodl	equ	0xFF3
 37281                           intcon	equ	0xFF2
 37282                           intcon2	equ	0xFF1
 37283                           intcon3	equ	0xFF0
 37284                           indf0	equ	0xFEF
 37285                           postinc0	equ	0xFEE
 37286                           plusw0	equ	0xFEB
 37287                           fsr0h	equ	0xFEA
 37288                           fsr0l	equ	0xFE9
 37289                           wreg	equ	0xFE8
 37290                           postinc1	equ	0xFE6
 37291                           postdec1	equ	0xFE5
 37292                           plusw1	equ	0xFE3
 37293                           fsr1h	equ	0xFE2
 37294                           fsr1l	equ	0xFE1
 37295                           indf2	equ	0xFDF
 37296                           postinc2	equ	0xFDE
 37297                           postdec2	equ	0xFDD
 37298                           plusw2	equ	0xFDB
 37299                           fsr2h	equ	0xFDA
 37300                           fsr2l	equ	0xFD9
 37301                           status	equ	0xFD8
 37302                           
 37303 ;; *************** function _IO_pins_init *****************
 37304 ;; Defined at:
 37305 ;;		line 123 in file "main.c"
 37306 ;; Parameters:    Size  Location     Type
 37307 ;;		None
 37308 ;; Auto vars:     Size  Location     Type
 37309 ;;		None
 37310 ;; Return value:  Size  Location     Type
 37311 ;;                  1    wreg      void 
 37312 ;; Registers used:
 37313 ;;		None
 37314 ;; Tracked objects:
 37315 ;;		On entry : F/F
 37316 ;;		On exit  : F/F
 37317 ;;		Unchanged: 0/0
 37318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37323 ;;Total ram usage:        0 bytes
 37324 ;; Hardware stack levels used:    1
 37325 ;; Hardware stack levels required when called:    7
 37326 ;; This function calls:
 37327 ;;		Nothing
 37328 ;; This function is called by:
 37329 ;;		_main
 37330 ;; This function uses a non-reentrant model
 37331 ;;
 37332                           
 37333                           	psect	text201
 37334  007720                     __ptext201:
 37335                           	opt stack 0
 37336  007720                     _IO_pins_init:
 37337                           	opt stack 23
 37338                           
 37339                           ; BSR set to: 15
 37340                           ;main.c: 125: TRISCbits.TRISC5 = 0;
 37341                           
 37342                           ; BSR set to: 2
 37343                           ;incstack = 0
 37344  007720  9A94               	bcf	3988,5,c	;volatile
 37345                           
 37346                           ;main.c: 126: TRISDbits.TRISD5 = 0;
 37347  007722  9A95               	bcf	3989,5,c	;volatile
 37348                           
 37349                           ;main.c: 127: TRISDbits.TRISD6 = 1;
 37350  007724  8C95               	bsf	3989,6,c	;volatile
 37351                           
 37352                           ;main.c: 128: TRISDbits.TRISD7 = 1;
 37353  007726  8E95               	bsf	3989,7,c	;volatile
 37354                           
 37355                           ;main.c: 130: ANSELCbits.ANSC5 = 0;
 37356  007728  9B3A               	bcf	58,5,b	;volatile
 37357                           
 37358                           ;main.c: 131: ANSELDbits.ANSD5 = 0;
 37359  00772A  9B3B               	bcf	59,5,b	;volatile
 37360                           
 37361                           ;main.c: 132: ANSELDbits.ANSD6 = 1;
 37362  00772C  8D3B               	bsf	59,6,b	;volatile
 37363                           
 37364                           ;main.c: 133: ANSELDbits.ANSD7 = 1;
 37365  00772E  8F3B               	bsf	59,7,b	;volatile
 37366                           
 37367                           ; BSR set to: 15
 37368  007730  0012               	return		;funcret
 37369  007732                     __end_of_IO_pins_init:
 37370                           	opt stack 0
 37371                           tosu	equ	0xFFF
 37372                           tosh	equ	0xFFE
 37373                           tosl	equ	0xFFD
 37374                           pclath	equ	0xFFA
 37375                           tblptru	equ	0xFF8
 37376                           tblptrh	equ	0xFF7
 37377                           tblptrl	equ	0xFF6
 37378                           tablat	equ	0xFF5
 37379                           prodh	equ	0xFF4
 37380                           prodl	equ	0xFF3
 37381                           intcon	equ	0xFF2
 37382                           intcon2	equ	0xFF1
 37383                           intcon3	equ	0xFF0
 37384                           indf0	equ	0xFEF
 37385                           postinc0	equ	0xFEE
 37386                           plusw0	equ	0xFEB
 37387                           fsr0h	equ	0xFEA
 37388                           fsr0l	equ	0xFE9
 37389                           wreg	equ	0xFE8
 37390                           postinc1	equ	0xFE6
 37391                           postdec1	equ	0xFE5
 37392                           plusw1	equ	0xFE3
 37393                           fsr1h	equ	0xFE2
 37394                           fsr1l	equ	0xFE1
 37395                           indf2	equ	0xFDF
 37396                           postinc2	equ	0xFDE
 37397                           postdec2	equ	0xFDD
 37398                           plusw2	equ	0xFDB
 37399                           fsr2h	equ	0xFDA
 37400                           fsr2l	equ	0xFD9
 37401                           status	equ	0xFD8
 37402                           
 37403 ;; *************** function _ADC_Init *****************
 37404 ;; Defined at:
 37405 ;;		line 151 in file "main.c"
 37406 ;; Parameters:    Size  Location     Type
 37407 ;;		None
 37408 ;; Auto vars:     Size  Location     Type
 37409 ;;		None
 37410 ;; Return value:  Size  Location     Type
 37411 ;;                  1    wreg      void 
 37412 ;; Registers used:
 37413 ;;		wreg, status,2
 37414 ;; Tracked objects:
 37415 ;;		On entry : F/F
 37416 ;;		On exit  : F/F
 37417 ;;		Unchanged: E/0
 37418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37423 ;;Total ram usage:        0 bytes
 37424 ;; Hardware stack levels used:    1
 37425 ;; Hardware stack levels required when called:    7
 37426 ;; This function calls:
 37427 ;;		Nothing
 37428 ;; This function is called by:
 37429 ;;		_main
 37430 ;; This function uses a non-reentrant model
 37431 ;;
 37432                           
 37433                           	psect	text202
 37434  00778A                     __ptext202:
 37435                           	opt stack 0
 37436  00778A                     _ADC_Init:
 37437                           	opt stack 23
 37438                           
 37439                           ; BSR set to: 15
 37440                           ;main.c: 152: ADCON0bits.GO = 0;
 37441                           
 37442                           ; BSR set to: 15
 37443                           ;incstack = 0
 37444  00778A  92C2               	bcf	4034,1,c	;volatile
 37445                           
 37446                           ;main.c: 153: ADCON2bits.ADFM = 1;
 37447  00778C  8EC0               	bsf	4032,7,c	;volatile
 37448                           
 37449                           ; BSR set to: 15
 37450                           ;main.c: 154: ADCON2bits.ADCS = 3;
 37451  00778E  50C0               	movf	4032,w,c	;volatile
 37452  007790  0BF8               	andlw	-8
 37453  007792  0903               	iorlw	3
 37454  007794  6EC0               	movwf	4032,c	;volatile
 37455                           
 37456                           ; BSR set to: 15
 37457  007796  0012               	return		;funcret
 37458  007798                     __end_of_ADC_Init:
 37459                           	opt stack 0
 37460                           tosu	equ	0xFFF
 37461                           tosh	equ	0xFFE
 37462                           tosl	equ	0xFFD
 37463                           pclath	equ	0xFFA
 37464                           tblptru	equ	0xFF8
 37465                           tblptrh	equ	0xFF7
 37466                           tblptrl	equ	0xFF6
 37467                           tablat	equ	0xFF5
 37468                           prodh	equ	0xFF4
 37469                           prodl	equ	0xFF3
 37470                           intcon	equ	0xFF2
 37471                           intcon2	equ	0xFF1
 37472                           intcon3	equ	0xFF0
 37473                           indf0	equ	0xFEF
 37474                           postinc0	equ	0xFEE
 37475                           plusw0	equ	0xFEB
 37476                           fsr0h	equ	0xFEA
 37477                           fsr0l	equ	0xFE9
 37478                           wreg	equ	0xFE8
 37479                           postinc1	equ	0xFE6
 37480                           postdec1	equ	0xFE5
 37481                           plusw1	equ	0xFE3
 37482                           fsr1h	equ	0xFE2
 37483                           fsr1l	equ	0xFE1
 37484                           indf2	equ	0xFDF
 37485                           postinc2	equ	0xFDE
 37486                           postdec2	equ	0xFDD
 37487                           plusw2	equ	0xFDB
 37488                           fsr2h	equ	0xFDA
 37489                           fsr2l	equ	0xFD9
 37490                           status	equ	0xFD8
 37491                           
 37492 ;; *************** function _INTERRUPT_InterruptManager *****************
 37493 ;; Defined at:
 37494 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 37495 ;; Parameters:    Size  Location     Type
 37496 ;;		None
 37497 ;; Auto vars:     Size  Location     Type
 37498 ;;		None
 37499 ;; Return value:  Size  Location     Type
 37500 ;;                  1    wreg      void 
 37501 ;; Registers used:
 37502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37503 ;; Tracked objects:
 37504 ;;		On entry : 0/0
 37505 ;;		On exit  : 0/0
 37506 ;;		Unchanged: 0/0
 37507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37510 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37512 ;;Total ram usage:        8 bytes
 37513 ;; Hardware stack levels used:    1
 37514 ;; Hardware stack levels required when called:    6
 37515 ;; This function calls:
 37516 ;;		_INT1_ISR
 37517 ;;		_INT2_ISR
 37518 ;;		_PIN_MANAGER_IOC
 37519 ;;		_TMR1_ISR
 37520 ;;		_TMR3_ISR
 37521 ;; This function is called by:
 37522 ;;		Interrupt level 2
 37523 ;; This function uses a non-reentrant model
 37524 ;;
 37525                           
 37526                           	psect	intcode
 37527  000008                     __pintcode:
 37528                           	opt stack 0
 37529  000008                     _INTERRUPT_InterruptManager:
 37530                           	opt stack 12
 37531                           
 37532                           ; BSR set to: 15
 37533                           ;incstack = 0
 37534  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 37535  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37536  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37537  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37538  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37539  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37540  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37541  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37542  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 37543                           
 37544                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37545  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37546  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37547  000030  D003               	goto	i2l2497
 37548                           
 37549                           ;interrupt_manager.c: 61: {
 37550                           ;interrupt_manager.c: 62: INT1_ISR();
 37551  000032  EC76  F03C         	call	_INT1_ISR	;wreg free
 37552                           
 37553                           ;interrupt_manager.c: 63: }
 37554  000036  D01B               	goto	i2l2507
 37555  000038                     i2l2497:
 37556                           
 37557                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37558  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37559  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37560  00003C  D003               	goto	i2l2499
 37561                           
 37562                           ;interrupt_manager.c: 65: {
 37563                           ;interrupt_manager.c: 66: INT2_ISR();
 37564  00003E  EC70  F03C         	call	_INT2_ISR	;wreg free
 37565                           
 37566                           ;interrupt_manager.c: 67: }
 37567  000042  D015               	goto	i2l2507
 37568  000044                     i2l2499:
 37569                           
 37570                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.TMR3IE == 1 && PIR2bi
      +                          ts.TMR3IF == 1)
 37571  000044  BCF2               	btfsc	intcon,6,c	;volatile
 37572  000046  A2A0               	btfss	4000,1,c	;volatile
 37573  000048  D005               	goto	i2l2501
 37574  00004A  A2A1               	btfss	4001,1,c	;volatile
 37575  00004C  D003               	goto	i2l2501
 37576                           
 37577                           ;interrupt_manager.c: 69: {
 37578                           ;interrupt_manager.c: 70: TMR3_ISR();
 37579  00004E  ECCC  F03B         	call	_TMR3_ISR	;wreg free
 37580                           
 37581                           ;interrupt_manager.c: 71: }
 37582  000052  D00D               	goto	i2l2507
 37583  000054                     i2l2501:
 37584                           
 37585                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 37586  000054  BCF2               	btfsc	intcon,6,c	;volatile
 37587  000056  A09D               	btfss	3997,0,c	;volatile
 37588  000058  D005               	goto	i2l2503
 37589  00005A  A09E               	btfss	3998,0,c	;volatile
 37590  00005C  D003               	goto	i2l2503
 37591                           
 37592                           ;interrupt_manager.c: 73: {
 37593                           ;interrupt_manager.c: 74: TMR1_ISR();
 37594  00005E  ECD3  F03B         	call	_TMR1_ISR	;wreg free
 37595                           
 37596                           ;interrupt_manager.c: 75: }
 37597  000062  D005               	goto	i2l2507
 37598  000064                     i2l2503:
 37599                           
 37600                           ;interrupt_manager.c: 76: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37601  000064  B6F2               	btfsc	intcon,3,c	;volatile
 37602  000066  A0F2               	btfss	intcon,0,c	;volatile
 37603  000068  D002               	goto	i2l2507
 37604                           
 37605                           ;interrupt_manager.c: 77: {
 37606                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37607  00006A  EC35  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37608  00006E                     i2l2507:
 37609  00006E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37610  000072  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37611  000076  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37612  00007A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37613  00007E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37614  000082  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37615  000086  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37616  00008A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37617  00008E  0011               	retfie		f
 37618  000090                     __end_of_INTERRUPT_InterruptManager:
 37619                           	opt stack 0
 37620                           tosu	equ	0xFFF
 37621                           tosh	equ	0xFFE
 37622                           tosl	equ	0xFFD
 37623                           pclatu	equ	0xFFB
 37624                           pclath	equ	0xFFA
 37625                           tblptru	equ	0xFF8
 37626                           tblptrh	equ	0xFF7
 37627                           tblptrl	equ	0xFF6
 37628                           tablat	equ	0xFF5
 37629                           prodh	equ	0xFF4
 37630                           prodl	equ	0xFF3
 37631                           intcon	equ	0xFF2
 37632                           intcon2	equ	0xFF1
 37633                           intcon3	equ	0xFF0
 37634                           indf0	equ	0xFEF
 37635                           postinc0	equ	0xFEE
 37636                           plusw0	equ	0xFEB
 37637                           fsr0h	equ	0xFEA
 37638                           fsr0l	equ	0xFE9
 37639                           wreg	equ	0xFE8
 37640                           postinc1	equ	0xFE6
 37641                           postdec1	equ	0xFE5
 37642                           plusw1	equ	0xFE3
 37643                           fsr1h	equ	0xFE2
 37644                           fsr1l	equ	0xFE1
 37645                           indf2	equ	0xFDF
 37646                           postinc2	equ	0xFDE
 37647                           postdec2	equ	0xFDD
 37648                           plusw2	equ	0xFDB
 37649                           fsr2h	equ	0xFDA
 37650                           fsr2l	equ	0xFD9
 37651                           status	equ	0xFD8
 37652                           
 37653 ;; *************** function _TMR3_ISR *****************
 37654 ;; Defined at:
 37655 ;;		line 159 in file "mcc_generated_files/tmr3.c"
 37656 ;; Parameters:    Size  Location     Type
 37657 ;;		None
 37658 ;; Auto vars:     Size  Location     Type
 37659 ;;		None
 37660 ;; Return value:  Size  Location     Type
 37661 ;;                  1    wreg      void 
 37662 ;; Registers used:
 37663 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37664 ;; Tracked objects:
 37665 ;;		On entry : 0/0
 37666 ;;		On exit  : 0/0
 37667 ;;		Unchanged: 0/0
 37668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37673 ;;Total ram usage:        0 bytes
 37674 ;; Hardware stack levels used:    1
 37675 ;; Hardware stack levels required when called:    2
 37676 ;; This function calls:
 37677 ;;		_TMR3_CallBack
 37678 ;; This function is called by:
 37679 ;;		_INTERRUPT_InterruptManager
 37680 ;; This function uses a non-reentrant model
 37681 ;;
 37682                           
 37683                           	psect	text204
 37684  007798                     __ptext204:
 37685                           	opt stack 0
 37686  007798                     _TMR3_ISR:
 37687                           	opt stack 15
 37688                           
 37689                           ;tmr3.c: 163: PIR2bits.TMR3IF = 0;
 37690                           
 37691                           ;incstack = 0
 37692  007798  92A1               	bcf	4001,1,c	;volatile
 37693                           
 37694                           ;tmr3.c: 166: TMR3H = (timer3ReloadVal >> 8);
 37695  00779A  C05F  FFB3         	movff	_timer3ReloadVal+1,4019	;volatile
 37696                           
 37697                           ;tmr3.c: 167: TMR3L = (uint8_t) timer3ReloadVal;
 37698  00779E  C05E  FFB2         	movff	_timer3ReloadVal,4018	;volatile
 37699                           
 37700                           ;tmr3.c: 171: TMR3_CallBack();
 37701  0077A2  EF94  F03A         	goto	_TMR3_CallBack	;wreg free
 37702  0077A6                     __end_of_TMR3_ISR:
 37703                           	opt stack 0
 37704                           tosu	equ	0xFFF
 37705                           tosh	equ	0xFFE
 37706                           tosl	equ	0xFFD
 37707                           pclatu	equ	0xFFB
 37708                           pclath	equ	0xFFA
 37709                           tblptru	equ	0xFF8
 37710                           tblptrh	equ	0xFF7
 37711                           tblptrl	equ	0xFF6
 37712                           tablat	equ	0xFF5
 37713                           prodh	equ	0xFF4
 37714                           prodl	equ	0xFF3
 37715                           intcon	equ	0xFF2
 37716                           intcon2	equ	0xFF1
 37717                           intcon3	equ	0xFF0
 37718                           indf0	equ	0xFEF
 37719                           postinc0	equ	0xFEE
 37720                           plusw0	equ	0xFEB
 37721                           fsr0h	equ	0xFEA
 37722                           fsr0l	equ	0xFE9
 37723                           wreg	equ	0xFE8
 37724                           postinc1	equ	0xFE6
 37725                           postdec1	equ	0xFE5
 37726                           plusw1	equ	0xFE3
 37727                           fsr1h	equ	0xFE2
 37728                           fsr1l	equ	0xFE1
 37729                           indf2	equ	0xFDF
 37730                           postinc2	equ	0xFDE
 37731                           postdec2	equ	0xFDD
 37732                           plusw2	equ	0xFDB
 37733                           fsr2h	equ	0xFDA
 37734                           fsr2l	equ	0xFD9
 37735                           status	equ	0xFD8
 37736                           
 37737 ;; *************** function _TMR3_CallBack *****************
 37738 ;; Defined at:
 37739 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 37740 ;; Parameters:    Size  Location     Type
 37741 ;;		None
 37742 ;; Auto vars:     Size  Location     Type
 37743 ;;		None
 37744 ;; Return value:  Size  Location     Type
 37745 ;;                  1    wreg      void 
 37746 ;; Registers used:
 37747 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37748 ;; Tracked objects:
 37749 ;;		On entry : 0/0
 37750 ;;		On exit  : 0/0
 37751 ;;		Unchanged: 0/0
 37752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37757 ;;Total ram usage:        0 bytes
 37758 ;; Hardware stack levels used:    1
 37759 ;; Hardware stack levels required when called:    1
 37760 ;; This function calls:
 37761 ;;		Absolute function
 37762 ;;		_TMR3_DefaultInterruptHandler
 37763 ;;		_handle16sInterrupt
 37764 ;; This function is called by:
 37765 ;;		_TMR3_ISR
 37766 ;; This function uses a non-reentrant model
 37767 ;;
 37768                           
 37769                           	psect	text205
 37770  007528                     __ptext205:
 37771                           	opt stack 0
 37772  007528                     _TMR3_CallBack:
 37773                           	opt stack 15
 37774                           
 37775                           ;tmr3.c: 177: if(TMR3_InterruptHandler)
 37776                           
 37777                           ;incstack = 0
 37778  007528  0101               	movlb	1	; () banked
 37779  00752A  51EF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37780  00752C  11F0               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37781  00752E  B4D8               	btfsc	status,2,c
 37782  007530  0012               	return	
 37783                           
 37784                           ; BSR set to: 1
 37785                           ;tmr3.c: 178: {
 37786                           ;tmr3.c: 179: TMR3_InterruptHandler();
 37787  007532  0005               	push	
 37788  007534  6EFA               	movwf	pclath,c
 37789  007536  51EF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37790  007538  6EFD               	movwf	tosl,c
 37791  00753A  51F0               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37792  00753C  6EFE               	movwf	tosh,c
 37793  00753E  6AFF               	clrf	tosu,c
 37794  007540  50FA               	movf	pclath,w,c
 37795  007542  0012               	return		;indir
 37796  007544                     __end_of_TMR3_CallBack:
 37797                           	opt stack 0
 37798                           tosu	equ	0xFFF
 37799                           tosh	equ	0xFFE
 37800                           tosl	equ	0xFFD
 37801                           pclatu	equ	0xFFB
 37802                           pclath	equ	0xFFA
 37803                           tblptru	equ	0xFF8
 37804                           tblptrh	equ	0xFF7
 37805                           tblptrl	equ	0xFF6
 37806                           tablat	equ	0xFF5
 37807                           prodh	equ	0xFF4
 37808                           prodl	equ	0xFF3
 37809                           intcon	equ	0xFF2
 37810                           intcon2	equ	0xFF1
 37811                           intcon3	equ	0xFF0
 37812                           indf0	equ	0xFEF
 37813                           postinc0	equ	0xFEE
 37814                           plusw0	equ	0xFEB
 37815                           fsr0h	equ	0xFEA
 37816                           fsr0l	equ	0xFE9
 37817                           wreg	equ	0xFE8
 37818                           postinc1	equ	0xFE6
 37819                           postdec1	equ	0xFE5
 37820                           plusw1	equ	0xFE3
 37821                           fsr1h	equ	0xFE2
 37822                           fsr1l	equ	0xFE1
 37823                           indf2	equ	0xFDF
 37824                           postinc2	equ	0xFDE
 37825                           postdec2	equ	0xFDD
 37826                           plusw2	equ	0xFDB
 37827                           fsr2h	equ	0xFDA
 37828                           fsr2l	equ	0xFD9
 37829                           status	equ	0xFD8
 37830                           
 37831 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37832 ;; Defined at:
 37833 ;;		line 187 in file "mcc_generated_files/tmr3.c"
 37834 ;; Parameters:    Size  Location     Type
 37835 ;;		None
 37836 ;; Auto vars:     Size  Location     Type
 37837 ;;		None
 37838 ;; Return value:  Size  Location     Type
 37839 ;;                  1    wreg      void 
 37840 ;; Registers used:
 37841 ;;		None
 37842 ;; Tracked objects:
 37843 ;;		On entry : F/1
 37844 ;;		On exit  : F/1
 37845 ;;		Unchanged: F/0
 37846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37851 ;;Total ram usage:        0 bytes
 37852 ;; Hardware stack levels used:    1
 37853 ;; This function calls:
 37854 ;;		Nothing
 37855 ;; This function is called by:
 37856 ;;		_TMR3_Initialize
 37857 ;;		_TMR3_CallBack
 37858 ;; This function uses a non-reentrant model
 37859 ;;
 37860                           
 37861                           	psect	text206
 37862  007922                     __ptext206:
 37863                           	opt stack 0
 37864  007922                     _TMR3_DefaultInterruptHandler:
 37865                           	opt stack 15
 37866                           
 37867                           ; BSR set to: 1
 37868                           
 37869                           ;incstack = 0
 37870  007922  0012               	return		;funcret
 37871  007924                     __end_of_TMR3_DefaultInterruptHandler:
 37872                           	opt stack 0
 37873                           tosu	equ	0xFFF
 37874                           tosh	equ	0xFFE
 37875                           tosl	equ	0xFFD
 37876                           pclatu	equ	0xFFB
 37877                           pclath	equ	0xFFA
 37878                           tblptru	equ	0xFF8
 37879                           tblptrh	equ	0xFF7
 37880                           tblptrl	equ	0xFF6
 37881                           tablat	equ	0xFF5
 37882                           prodh	equ	0xFF4
 37883                           prodl	equ	0xFF3
 37884                           intcon	equ	0xFF2
 37885                           intcon2	equ	0xFF1
 37886                           intcon3	equ	0xFF0
 37887                           indf0	equ	0xFEF
 37888                           postinc0	equ	0xFEE
 37889                           plusw0	equ	0xFEB
 37890                           fsr0h	equ	0xFEA
 37891                           fsr0l	equ	0xFE9
 37892                           wreg	equ	0xFE8
 37893                           postinc1	equ	0xFE6
 37894                           postdec1	equ	0xFE5
 37895                           plusw1	equ	0xFE3
 37896                           fsr1h	equ	0xFE2
 37897                           fsr1l	equ	0xFE1
 37898                           indf2	equ	0xFDF
 37899                           postinc2	equ	0xFDE
 37900                           postdec2	equ	0xFDD
 37901                           plusw2	equ	0xFDB
 37902                           fsr2h	equ	0xFDA
 37903                           fsr2l	equ	0xFD9
 37904                           status	equ	0xFD8
 37905                           
 37906 ;; *************** function _handle16sInterrupt *****************
 37907 ;; Defined at:
 37908 ;;		line 87 in file "main.c"
 37909 ;; Parameters:    Size  Location     Type
 37910 ;;		None
 37911 ;; Auto vars:     Size  Location     Type
 37912 ;;		None
 37913 ;; Return value:  Size  Location     Type
 37914 ;;                  1    wreg      void 
 37915 ;; Registers used:
 37916 ;;		wreg, status,2, status,0
 37917 ;; Tracked objects:
 37918 ;;		On entry : F/1
 37919 ;;		On exit  : 0/0
 37920 ;;		Unchanged: 0/0
 37921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37926 ;;Total ram usage:        0 bytes
 37927 ;; Hardware stack levels used:    1
 37928 ;; This function calls:
 37929 ;;		Nothing
 37930 ;; This function is called by:
 37931 ;;		_main
 37932 ;;		_TMR3_CallBack
 37933 ;; This function uses a non-reentrant model
 37934 ;;
 37935                           
 37936                           	psect	text207
 37937  0076FA                     __ptext207:
 37938                           	opt stack 0
 37939  0076FA                     _handle16sInterrupt:
 37940                           	opt stack 15
 37941                           
 37942                           ; BSR set to: 1
 37943                           ;main.c: 89: static volatile uint8_t counterSleepTimeout = 0;
 37944                           ;main.c: 90: if( ++counterSleepTimeout == 85 )
 37945                           
 37946                           ; BSR set to: 1
 37947                           ;incstack = 0
 37948  0076FA  2A45               	incf	handle16sInterrupt@counterSleepTimeout,f,c	;volatile
 37949  0076FC  0E55               	movlw	85
 37950  0076FE  1845               	xorwf	handle16sInterrupt@counterSleepTimeout,w,c	;volatile
 37951  007700  E104               	bnz	i2l2722
 37952                           
 37953                           ; BSR set to: 1
 37954                           ;main.c: 91: {
 37955                           ;main.c: 93: TimeToSend = 1;
 37956  007702  0E01               	movlw	1
 37957  007704  6F7D               	movwf	_TimeToSend& (0+255),b
 37958                           
 37959                           ; BSR set to: 1
 37960                           ;main.c: 94: counterSleepTimeout = 0;
 37961  007706  6A45               	clrf	handle16sInterrupt@counterSleepTimeout,c	;volatile
 37962                           
 37963                           ;main.c: 95: }
 37964  007708  0012               	return	
 37965  00770A                     i2l2722:
 37966                           
 37967                           ; BSR set to: 1
 37968  00770A  0003               	sleep		;# 
 37969  00770C  0012               	return		;funcret
 37970  00770E                     __end_of_handle16sInterrupt:
 37971                           	opt stack 0
 37972                           tosu	equ	0xFFF
 37973                           tosh	equ	0xFFE
 37974                           tosl	equ	0xFFD
 37975                           pclatu	equ	0xFFB
 37976                           pclath	equ	0xFFA
 37977                           tblptru	equ	0xFF8
 37978                           tblptrh	equ	0xFF7
 37979                           tblptrl	equ	0xFF6
 37980                           tablat	equ	0xFF5
 37981                           prodh	equ	0xFF4
 37982                           prodl	equ	0xFF3
 37983                           intcon	equ	0xFF2
 37984                           intcon2	equ	0xFF1
 37985                           intcon3	equ	0xFF0
 37986                           indf0	equ	0xFEF
 37987                           postinc0	equ	0xFEE
 37988                           plusw0	equ	0xFEB
 37989                           fsr0h	equ	0xFEA
 37990                           fsr0l	equ	0xFE9
 37991                           wreg	equ	0xFE8
 37992                           postinc1	equ	0xFE6
 37993                           postdec1	equ	0xFE5
 37994                           plusw1	equ	0xFE3
 37995                           fsr1h	equ	0xFE2
 37996                           fsr1l	equ	0xFE1
 37997                           indf2	equ	0xFDF
 37998                           postinc2	equ	0xFDE
 37999                           postdec2	equ	0xFDD
 38000                           plusw2	equ	0xFDB
 38001                           fsr2h	equ	0xFDA
 38002                           fsr2l	equ	0xFD9
 38003                           status	equ	0xFD8
 38004                           
 38005 ;; *************** function _TMR1_ISR *****************
 38006 ;; Defined at:
 38007 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 38008 ;; Parameters:    Size  Location     Type
 38009 ;;		None
 38010 ;; Auto vars:     Size  Location     Type
 38011 ;;		None
 38012 ;; Return value:  Size  Location     Type
 38013 ;;                  1    wreg      void 
 38014 ;; Registers used:
 38015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38016 ;; Tracked objects:
 38017 ;;		On entry : 0/0
 38018 ;;		On exit  : 0/0
 38019 ;;		Unchanged: 0/0
 38020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38025 ;;Total ram usage:        0 bytes
 38026 ;; Hardware stack levels used:    1
 38027 ;; Hardware stack levels required when called:    5
 38028 ;; This function calls:
 38029 ;;		_TMR1_CallBack
 38030 ;; This function is called by:
 38031 ;;		_INTERRUPT_InterruptManager
 38032 ;; This function uses a non-reentrant model
 38033 ;;
 38034                           
 38035                           	psect	text208
 38036  0077A6                     __ptext208:
 38037                           	opt stack 0
 38038  0077A6                     _TMR1_ISR:
 38039                           	opt stack 12
 38040                           
 38041                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 38042                           
 38043                           ;incstack = 0
 38044  0077A6  909E               	bcf	3998,0,c	;volatile
 38045                           
 38046                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 38047  0077A8  C05D  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 38048                           
 38049                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 38050  0077AC  C05C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 38051                           
 38052                           ;tmr1.c: 171: TMR1_CallBack();
 38053  0077B0  EFA2  F03A         	goto	_TMR1_CallBack	;wreg free
 38054  0077B4                     __end_of_TMR1_ISR:
 38055                           	opt stack 0
 38056                           tosu	equ	0xFFF
 38057                           tosh	equ	0xFFE
 38058                           tosl	equ	0xFFD
 38059                           pclatu	equ	0xFFB
 38060                           pclath	equ	0xFFA
 38061                           tblptru	equ	0xFF8
 38062                           tblptrh	equ	0xFF7
 38063                           tblptrl	equ	0xFF6
 38064                           tablat	equ	0xFF5
 38065                           prodh	equ	0xFF4
 38066                           prodl	equ	0xFF3
 38067                           intcon	equ	0xFF2
 38068                           intcon2	equ	0xFF1
 38069                           intcon3	equ	0xFF0
 38070                           indf0	equ	0xFEF
 38071                           postinc0	equ	0xFEE
 38072                           plusw0	equ	0xFEB
 38073                           fsr0h	equ	0xFEA
 38074                           fsr0l	equ	0xFE9
 38075                           wreg	equ	0xFE8
 38076                           postinc1	equ	0xFE6
 38077                           postdec1	equ	0xFE5
 38078                           plusw1	equ	0xFE3
 38079                           fsr1h	equ	0xFE2
 38080                           fsr1l	equ	0xFE1
 38081                           indf2	equ	0xFDF
 38082                           postinc2	equ	0xFDE
 38083                           postdec2	equ	0xFDD
 38084                           plusw2	equ	0xFDB
 38085                           fsr2h	equ	0xFDA
 38086                           fsr2l	equ	0xFD9
 38087                           status	equ	0xFD8
 38088                           
 38089 ;; *************** function _TMR1_CallBack *****************
 38090 ;; Defined at:
 38091 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 38092 ;; Parameters:    Size  Location     Type
 38093 ;;		None
 38094 ;; Auto vars:     Size  Location     Type
 38095 ;;		None
 38096 ;; Return value:  Size  Location     Type
 38097 ;;                  1    wreg      void 
 38098 ;; Registers used:
 38099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38100 ;; Tracked objects:
 38101 ;;		On entry : 0/0
 38102 ;;		On exit  : 0/0
 38103 ;;		Unchanged: 0/0
 38104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38109 ;;Total ram usage:        0 bytes
 38110 ;; Hardware stack levels used:    1
 38111 ;; Hardware stack levels required when called:    4
 38112 ;; This function calls:
 38113 ;;		Absolute function
 38114 ;;		_TMR1_DefaultInterruptHandler
 38115 ;;		_TMR_ISR_lora
 38116 ;; This function is called by:
 38117 ;;		_TMR1_ISR
 38118 ;; This function uses a non-reentrant model
 38119 ;;
 38120                           
 38121                           	psect	text209
 38122  007544                     __ptext209:
 38123                           	opt stack 0
 38124  007544                     _TMR1_CallBack:
 38125                           	opt stack 12
 38126                           
 38127                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 38128                           
 38129                           ;incstack = 0
 38130  007544  0101               	movlb	1	; () banked
 38131  007546  51ED               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38132  007548  11EE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38133  00754A  B4D8               	btfsc	status,2,c
 38134  00754C  0012               	return	
 38135                           
 38136                           ; BSR set to: 1
 38137                           ;tmr1.c: 178: {
 38138                           ;tmr1.c: 179: TMR1_InterruptHandler();
 38139  00754E  0005               	push	
 38140  007550  6EFA               	movwf	pclath,c
 38141  007552  51ED               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38142  007554  6EFD               	movwf	tosl,c
 38143  007556  51EE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38144  007558  6EFE               	movwf	tosh,c
 38145  00755A  6AFF               	clrf	tosu,c
 38146  00755C  50FA               	movf	pclath,w,c
 38147  00755E  0012               	return		;indir
 38148  007560                     __end_of_TMR1_CallBack:
 38149                           	opt stack 0
 38150                           tosu	equ	0xFFF
 38151                           tosh	equ	0xFFE
 38152                           tosl	equ	0xFFD
 38153                           pclatu	equ	0xFFB
 38154                           pclath	equ	0xFFA
 38155                           tblptru	equ	0xFF8
 38156                           tblptrh	equ	0xFF7
 38157                           tblptrl	equ	0xFF6
 38158                           tablat	equ	0xFF5
 38159                           prodh	equ	0xFF4
 38160                           prodl	equ	0xFF3
 38161                           intcon	equ	0xFF2
 38162                           intcon2	equ	0xFF1
 38163                           intcon3	equ	0xFF0
 38164                           indf0	equ	0xFEF
 38165                           postinc0	equ	0xFEE
 38166                           plusw0	equ	0xFEB
 38167                           fsr0h	equ	0xFEA
 38168                           fsr0l	equ	0xFE9
 38169                           wreg	equ	0xFE8
 38170                           postinc1	equ	0xFE6
 38171                           postdec1	equ	0xFE5
 38172                           plusw1	equ	0xFE3
 38173                           fsr1h	equ	0xFE2
 38174                           fsr1l	equ	0xFE1
 38175                           indf2	equ	0xFDF
 38176                           postinc2	equ	0xFDE
 38177                           postdec2	equ	0xFDD
 38178                           plusw2	equ	0xFDB
 38179                           fsr2h	equ	0xFDA
 38180                           fsr2l	equ	0xFD9
 38181                           status	equ	0xFD8
 38182                           
 38183 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38184 ;; Defined at:
 38185 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 38186 ;; Parameters:    Size  Location     Type
 38187 ;;		None
 38188 ;; Auto vars:     Size  Location     Type
 38189 ;;		None
 38190 ;; Return value:  Size  Location     Type
 38191 ;;                  1    wreg      void 
 38192 ;; Registers used:
 38193 ;;		None
 38194 ;; Tracked objects:
 38195 ;;		On entry : F/1
 38196 ;;		On exit  : F/1
 38197 ;;		Unchanged: F/0
 38198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38203 ;;Total ram usage:        0 bytes
 38204 ;; Hardware stack levels used:    1
 38205 ;; This function calls:
 38206 ;;		Nothing
 38207 ;; This function is called by:
 38208 ;;		_TMR1_Initialize
 38209 ;;		_TMR1_CallBack
 38210 ;; This function uses a non-reentrant model
 38211 ;;
 38212                           
 38213                           	psect	text210
 38214  007924                     __ptext210:
 38215                           	opt stack 0
 38216  007924                     _TMR1_DefaultInterruptHandler:
 38217                           	opt stack 15
 38218                           
 38219                           ; BSR set to: 1
 38220                           
 38221                           ;incstack = 0
 38222  007924  0012               	return		;funcret
 38223  007926                     __end_of_TMR1_DefaultInterruptHandler:
 38224                           	opt stack 0
 38225                           tosu	equ	0xFFF
 38226                           tosh	equ	0xFFE
 38227                           tosl	equ	0xFFD
 38228                           pclatu	equ	0xFFB
 38229                           pclath	equ	0xFFA
 38230                           tblptru	equ	0xFF8
 38231                           tblptrh	equ	0xFF7
 38232                           tblptrl	equ	0xFF6
 38233                           tablat	equ	0xFF5
 38234                           prodh	equ	0xFF4
 38235                           prodl	equ	0xFF3
 38236                           intcon	equ	0xFF2
 38237                           intcon2	equ	0xFF1
 38238                           intcon3	equ	0xFF0
 38239                           indf0	equ	0xFEF
 38240                           postinc0	equ	0xFEE
 38241                           plusw0	equ	0xFEB
 38242                           fsr0h	equ	0xFEA
 38243                           fsr0l	equ	0xFE9
 38244                           wreg	equ	0xFE8
 38245                           postinc1	equ	0xFE6
 38246                           postdec1	equ	0xFE5
 38247                           plusw1	equ	0xFE3
 38248                           fsr1h	equ	0xFE2
 38249                           fsr1l	equ	0xFE1
 38250                           indf2	equ	0xFDF
 38251                           postinc2	equ	0xFDE
 38252                           postdec2	equ	0xFDD
 38253                           plusw2	equ	0xFDB
 38254                           fsr2h	equ	0xFDA
 38255                           fsr2l	equ	0xFD9
 38256                           status	equ	0xFD8
 38257                           
 38258 ;; *************** function _TMR_ISR_lora *****************
 38259 ;; Defined at:
 38260 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38261 ;; Parameters:    Size  Location     Type
 38262 ;;		None
 38263 ;; Auto vars:     Size  Location     Type
 38264 ;;		None
 38265 ;; Return value:  Size  Location     Type
 38266 ;;                  1    wreg      void 
 38267 ;; Registers used:
 38268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38269 ;; Tracked objects:
 38270 ;;		On entry : F/1
 38271 ;;		On exit  : 0/0
 38272 ;;		Unchanged: 0/0
 38273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38278 ;;Total ram usage:        0 bytes
 38279 ;; Hardware stack levels used:    1
 38280 ;; Hardware stack levels required when called:    3
 38281 ;; This function calls:
 38282 ;;		i2_SwTimersInterrupt
 38283 ;;		i2_TMR_SwapTimer
 38284 ;; This function is called by:
 38285 ;;		_TMR_ISR_Lora_Init
 38286 ;;		_TMR1_CallBack
 38287 ;; This function uses a non-reentrant model
 38288 ;;
 38289                           
 38290                           	psect	text211
 38291  006A56                     __ptext211:
 38292                           	opt stack 0
 38293  006A56                     _TMR_ISR_lora:
 38294                           	opt stack 12
 38295                           
 38296                           ; BSR set to: 1
 38297                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38298                           
 38299                           ; BSR set to: 1
 38300                           ;incstack = 0
 38301  006A56  0E01               	movlw	1
 38302  006A58  0100               	movlb	0	; () banked
 38303  006A5A  6FF2               	movwf	_timerOverflow& (0+255),b	;volatile
 38304                           
 38305                           ; BSR set to: 0
 38306                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38307  006A5C  EC0B  F027         	call	i2_SwTimersInterrupt	;wreg free
 38308  006A60  C019  F056         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38309  006A64  C01A  F057         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38310  006A68  C01B  F058         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38311  006A6C  C01C  F059         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38312                           
 38313                           ; BSR set to: 0
 38314                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38315  006A70  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38316  006A72  E117               	bnz	i2l242
 38317  006A74  0458               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38318  006A76  B0D8               	btfsc	status,0,c
 38319  006A78  0012               	return	
 38320                           
 38321                           ; BSR set to: 0
 38322                           ;tmr_lora_addons.c: 66: {
 38323                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38324  006A7A  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38325  006A7C  0800               	sublw	0
 38326  006A7E  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 38327  006A80  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38328  006A82  A0D8               	btfss	status,0,c
 38329  006A84  2AE8               	incf	wreg,f,c
 38330  006A86  0800               	sublw	0
 38331  006A88  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38332                           
 38333                           ; BSR set to: 0
 38334                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38335  006A8A  C0EC  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38336  006A8E  C0ED  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38337  006A92  ECEE  F036         	call	i2_TMR_SwapTimer	;wreg free
 38338  006A96  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38339  006A9A  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38340  006A9E  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38341  006AA0  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38342  006AA2                     i2l242:
 38343  006AA2  0012               	return		;funcret
 38344  006AA4                     __end_of_TMR_ISR_lora:
 38345                           	opt stack 0
 38346                           tosu	equ	0xFFF
 38347                           tosh	equ	0xFFE
 38348                           tosl	equ	0xFFD
 38349                           pclatu	equ	0xFFB
 38350                           pclath	equ	0xFFA
 38351                           tblptru	equ	0xFF8
 38352                           tblptrh	equ	0xFF7
 38353                           tblptrl	equ	0xFF6
 38354                           tablat	equ	0xFF5
 38355                           prodh	equ	0xFF4
 38356                           prodl	equ	0xFF3
 38357                           intcon	equ	0xFF2
 38358                           intcon2	equ	0xFF1
 38359                           intcon3	equ	0xFF0
 38360                           indf0	equ	0xFEF
 38361                           postinc0	equ	0xFEE
 38362                           plusw0	equ	0xFEB
 38363                           fsr0h	equ	0xFEA
 38364                           fsr0l	equ	0xFE9
 38365                           wreg	equ	0xFE8
 38366                           postinc1	equ	0xFE6
 38367                           postdec1	equ	0xFE5
 38368                           plusw1	equ	0xFE3
 38369                           fsr1h	equ	0xFE2
 38370                           fsr1l	equ	0xFE1
 38371                           indf2	equ	0xFDF
 38372                           postinc2	equ	0xFDE
 38373                           postdec2	equ	0xFDD
 38374                           plusw2	equ	0xFDB
 38375                           fsr2h	equ	0xFDA
 38376                           fsr2l	equ	0xFD9
 38377                           status	equ	0xFD8
 38378                           
 38379 ;; *************** function i2_TMR_SwapTimer *****************
 38380 ;; Defined at:
 38381 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38382 ;; Parameters:    Size  Location     Type
 38383 ;;  timerVal        2    8[COMRAM] unsigned int 
 38384 ;; Auto vars:     Size  Location     Type
 38385 ;;		None
 38386 ;; Return value:  Size  Location     Type
 38387 ;;                  2    8[COMRAM] unsigned int 
 38388 ;; Registers used:
 38389 ;;		wreg, status,2, status,0, cstack
 38390 ;; Tracked objects:
 38391 ;;		On entry : F/0
 38392 ;;		On exit  : 0/0
 38393 ;;		Unchanged: 0/0
 38394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38399 ;;Total ram usage:        2 bytes
 38400 ;; Hardware stack levels used:    1
 38401 ;; Hardware stack levels required when called:    1
 38402 ;; This function calls:
 38403 ;;		i2_TMR1_ReadTimer
 38404 ;;		i2_TMR1_WriteTimer
 38405 ;; This function is called by:
 38406 ;;		_TMR_ISR_lora
 38407 ;; This function uses a non-reentrant model
 38408 ;;
 38409                           
 38410                           	psect	text212
 38411  006DDC                     __ptext212:
 38412                           	opt stack 0
 38413  006DDC                     i2_TMR_SwapTimer:
 38414                           	opt stack 13
 38415                           
 38416                           ; BSR set to: 0
 38417                           ;sw_timer.c: 114: static uint16_t oldVal;
 38418                           ;sw_timer.c: 115: static uint16_t retVal;
 38419                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38420                           
 38421                           ;incstack = 0
 38422  006DDC  EC69  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38423  006DE0  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38424  006DE4  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38425  006DE8                     i2l10603:
 38426  006DE8  EC69  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38427  006DEC  5040               	movf	TMR_SwapTimer@oldVal,w,c
 38428  006DEE  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38429  006DF0  E103               	bnz	i2u1093_40
 38430  006DF2  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 38431  006DF4  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38432  006DF6  E0F8               	bz	i2l10603
 38433  006DF8                     i2u1093_40:
 38434                           
 38435                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38436  006DF8  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38437  006DFC  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38438  006E00  ECB0  F03A         	call	i2_TMR1_WriteTimer	;wreg free
 38439                           
 38440                           ;sw_timer.c: 128: oldVal++;
 38441  006E04  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 38442  006E06  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 38443                           
 38444                           ;sw_timer.c: 130: retVal = oldVal;
 38445  006E08  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38446  006E0C  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38447                           
 38448                           ;sw_timer.c: 132: return retVal;
 38449  006E10  C042  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38450  006E14  C043  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38451  006E18  0012               	return		;funcret
 38452  006E1A                     __end_ofi2_TMR_SwapTimer:
 38453                           	opt stack 0
 38454                           tosu	equ	0xFFF
 38455                           tosh	equ	0xFFE
 38456                           tosl	equ	0xFFD
 38457                           pclatu	equ	0xFFB
 38458                           pclath	equ	0xFFA
 38459                           tblptru	equ	0xFF8
 38460                           tblptrh	equ	0xFF7
 38461                           tblptrl	equ	0xFF6
 38462                           tablat	equ	0xFF5
 38463                           prodh	equ	0xFF4
 38464                           prodl	equ	0xFF3
 38465                           intcon	equ	0xFF2
 38466                           intcon2	equ	0xFF1
 38467                           intcon3	equ	0xFF0
 38468                           indf0	equ	0xFEF
 38469                           postinc0	equ	0xFEE
 38470                           plusw0	equ	0xFEB
 38471                           fsr0h	equ	0xFEA
 38472                           fsr0l	equ	0xFE9
 38473                           wreg	equ	0xFE8
 38474                           postinc1	equ	0xFE6
 38475                           postdec1	equ	0xFE5
 38476                           plusw1	equ	0xFE3
 38477                           fsr1h	equ	0xFE2
 38478                           fsr1l	equ	0xFE1
 38479                           indf2	equ	0xFDF
 38480                           postinc2	equ	0xFDE
 38481                           postdec2	equ	0xFDD
 38482                           plusw2	equ	0xFDB
 38483                           fsr2h	equ	0xFDA
 38484                           fsr2l	equ	0xFD9
 38485                           status	equ	0xFD8
 38486                           
 38487 ;; *************** function i2_TMR1_WriteTimer *****************
 38488 ;; Defined at:
 38489 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38490 ;; Parameters:    Size  Location     Type
 38491 ;;  timerVal        2    0[COMRAM] unsigned int 
 38492 ;; Auto vars:     Size  Location     Type
 38493 ;;		None
 38494 ;; Return value:  Size  Location     Type
 38495 ;;                  1    wreg      void 
 38496 ;; Registers used:
 38497 ;;		None
 38498 ;; Tracked objects:
 38499 ;;		On entry : 0/0
 38500 ;;		On exit  : 0/0
 38501 ;;		Unchanged: 0/0
 38502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38507 ;;Total ram usage:        2 bytes
 38508 ;; Hardware stack levels used:    1
 38509 ;; This function calls:
 38510 ;;		Nothing
 38511 ;; This function is called by:
 38512 ;;		i2_TMR_SwapTimer
 38513 ;; This function uses a non-reentrant model
 38514 ;;
 38515                           
 38516                           	psect	text213
 38517  007560                     __ptext213:
 38518                           	opt stack 0
 38519  007560                     i2_TMR1_WriteTimer:
 38520                           	opt stack 13
 38521                           
 38522                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38523                           
 38524                           ;incstack = 0
 38525  007560  A4CD               	btfss	4045,2,c	;volatile
 38526  007562  D007               	goto	i2l1347
 38527                           
 38528                           ;tmr1.c: 123: {
 38529                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38530  007564  90CD               	bcf	4045,0,c	;volatile
 38531                           
 38532                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38533  007566  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38534                           
 38535                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38536  00756A  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38537                           
 38538                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38539  00756E  80CD               	bsf	4045,0,c	;volatile
 38540                           
 38541                           ;tmr1.c: 133: }
 38542  007570  0012               	return	
 38543  007572                     i2l1347:
 38544                           
 38545                           ;tmr1.c: 134: else
 38546                           ;tmr1.c: 135: {
 38547                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 38548  007572  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38549                           
 38550                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 38551  007576  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38552  00757A  0012               	return		;funcret
 38553  00757C                     __end_ofi2_TMR1_WriteTimer:
 38554                           	opt stack 0
 38555                           tosu	equ	0xFFF
 38556                           tosh	equ	0xFFE
 38557                           tosl	equ	0xFFD
 38558                           pclatu	equ	0xFFB
 38559                           pclath	equ	0xFFA
 38560                           tblptru	equ	0xFF8
 38561                           tblptrh	equ	0xFF7
 38562                           tblptrl	equ	0xFF6
 38563                           tablat	equ	0xFF5
 38564                           prodh	equ	0xFF4
 38565                           prodl	equ	0xFF3
 38566                           intcon	equ	0xFF2
 38567                           intcon2	equ	0xFF1
 38568                           intcon3	equ	0xFF0
 38569                           indf0	equ	0xFEF
 38570                           postinc0	equ	0xFEE
 38571                           plusw0	equ	0xFEB
 38572                           fsr0h	equ	0xFEA
 38573                           fsr0l	equ	0xFE9
 38574                           wreg	equ	0xFE8
 38575                           postinc1	equ	0xFE6
 38576                           postdec1	equ	0xFE5
 38577                           plusw1	equ	0xFE3
 38578                           fsr1h	equ	0xFE2
 38579                           fsr1l	equ	0xFE1
 38580                           indf2	equ	0xFDF
 38581                           postinc2	equ	0xFDE
 38582                           postdec2	equ	0xFDD
 38583                           plusw2	equ	0xFDB
 38584                           fsr2h	equ	0xFDA
 38585                           fsr2l	equ	0xFD9
 38586                           status	equ	0xFD8
 38587                           
 38588 ;; *************** function i2_SwTimersInterrupt *****************
 38589 ;; Defined at:
 38590 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38591 ;; Parameters:    Size  Location     Type
 38592 ;;		None
 38593 ;; Auto vars:     Size  Location     Type
 38594 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 38595 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 38596 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 38597 ;; Return value:  Size  Location     Type
 38598 ;;                  4   24[COMRAM] unsigned long 
 38599 ;; Registers used:
 38600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38601 ;; Tracked objects:
 38602 ;;		On entry : F/0
 38603 ;;		On exit  : F/0
 38604 ;;		Unchanged: 0/0
 38605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38607 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38608 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38609 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38610 ;;Total ram usage:       17 bytes
 38611 ;; Hardware stack levels used:    1
 38612 ;; Hardware stack levels required when called:    2
 38613 ;; This function calls:
 38614 ;;		i2_TMR_GetDeltaTime
 38615 ;; This function is called by:
 38616 ;;		_TMR_ISR_lora
 38617 ;; This function uses a non-reentrant model
 38618 ;;
 38619                           
 38620                           	psect	text214
 38621  004E16                     __ptext214:
 38622                           	opt stack 0
 38623  004E16                     i2_SwTimersInterrupt:
 38624                           	opt stack 12
 38625                           
 38626                           ; BSR set to: 0
 38627                           ;sw_timer.c: 289: uint8_t i;
 38628                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38629                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38630                           
 38631                           ;incstack = 0
 38632  004E16  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38633  004E18  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38634  004E1A  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38635  004E1C  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38636                           
 38637                           ; BSR set to: 0
 38638                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38639  004E1E  EC1E  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 38640  004E22  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38641  004E26  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38642  004E2A  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38643  004E2E  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38644                           
 38645                           ; BSR set to: 0
 38646                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38647  004E32  6A29               	clrf	i2SwTimersInterrupt@i,c
 38648  004E34  D05A               	goto	i2l10633
 38649  004E36                     i2l10621:
 38650                           
 38651                           ; BSR set to: 0
 38652                           ;sw_timer.c: 298: {
 38653                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38654  004E36  5029               	movf	i2SwTimersInterrupt@i,w,c
 38655  004E38  0D08               	mullw	8
 38656  004E3A  0E04               	movlw	low (_swTimers+4)
 38657  004E3C  24F3               	addwf	prodl,w,c
 38658  004E3E  6ED9               	movwf	fsr2l,c
 38659  004E40  0E03               	movlw	high (_swTimers+4)
 38660  004E42  20F4               	addwfc	prodh,w,c
 38661  004E44  6EDA               	movwf	fsr2h,c
 38662  004E46  04DE               	decf	postinc2,w,c
 38663  004E48  E14F               	bnz	i2l10631
 38664                           
 38665                           ; BSR set to: 0
 38666                           ;sw_timer.c: 302: {
 38667                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38668  004E4A  5029               	movf	i2SwTimersInterrupt@i,w,c
 38669  004E4C  0D08               	mullw	8
 38670  004E4E  0E00               	movlw	low _swTimers
 38671  004E50  24F3               	addwf	prodl,w,c
 38672  004E52  6ED9               	movwf	fsr2l,c
 38673  004E54  0E03               	movlw	high _swTimers
 38674  004E56  20F4               	addwfc	prodh,w,c
 38675  004E58  6EDA               	movwf	fsr2h,c
 38676  004E5A  50DE               	movf	postinc2,w,c
 38677  004E5C  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38678  004E5E  50DE               	movf	postinc2,w,c
 38679  004E60  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38680  004E62  50DE               	movf	postinc2,w,c
 38681  004E64  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38682  004E66  50DE               	movf	postinc2,w,c
 38683  004E68  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38684  004E6A  E30D               	bnc	i2l10627
 38685                           
 38686                           ; BSR set to: 0
 38687                           ;sw_timer.c: 304: {
 38688                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38689  004E6C  5029               	movf	i2SwTimersInterrupt@i,w,c
 38690  004E6E  0D08               	mullw	8
 38691  004E70  0E00               	movlw	low _swTimers
 38692  004E72  24F3               	addwf	prodl,w,c
 38693  004E74  6ED9               	movwf	fsr2l,c
 38694  004E76  0E03               	movlw	high _swTimers
 38695  004E78  20F4               	addwfc	prodh,w,c
 38696  004E7A  6EDA               	movwf	fsr2h,c
 38697  004E7C  6ADE               	clrf	postinc2,c
 38698  004E7E  6ADE               	clrf	postinc2,c
 38699  004E80  6ADE               	clrf	postinc2,c
 38700  004E82  6ADD               	clrf	postdec2,c
 38701                           
 38702                           ;sw_timer.c: 306: }
 38703  004E84  D031               	goto	i2l10631
 38704  004E86                     i2l10627:
 38705                           
 38706                           ; BSR set to: 0
 38707                           ;sw_timer.c: 307: else
 38708                           ;sw_timer.c: 308: {
 38709                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38710  004E86  5029               	movf	i2SwTimersInterrupt@i,w,c
 38711  004E88  0D08               	mullw	8
 38712  004E8A  0E00               	movlw	low _swTimers
 38713  004E8C  24F3               	addwf	prodl,w,c
 38714  004E8E  6ED9               	movwf	fsr2l,c
 38715  004E90  0E03               	movlw	high _swTimers
 38716  004E92  20F4               	addwfc	prodh,w,c
 38717  004E94  6EDA               	movwf	fsr2h,c
 38718  004E96  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38719  004E98  5EDE               	subwf	postinc2,f,c
 38720  004E9A  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38721  004E9C  5ADE               	subwfb	postinc2,f,c
 38722  004E9E  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38723  004EA0  5ADE               	subwfb	postinc2,f,c
 38724  004EA2  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38725  004EA4  5ADE               	subwfb	postinc2,f,c
 38726                           
 38727                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38728  004EA6  5029               	movf	i2SwTimersInterrupt@i,w,c
 38729  004EA8  0D08               	mullw	8
 38730  004EAA  0E00               	movlw	low _swTimers
 38731  004EAC  24F3               	addwf	prodl,w,c
 38732  004EAE  6ED9               	movwf	fsr2l,c
 38733  004EB0  0E03               	movlw	high _swTimers
 38734  004EB2  20F4               	addwfc	prodh,w,c
 38735  004EB4  6EDA               	movwf	fsr2h,c
 38736  004EB6  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38737  004EB8  5CDE               	subwf	postinc2,w,c
 38738  004EBA  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38739  004EBC  58DE               	subwfb	postinc2,w,c
 38740  004EBE  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38741  004EC0  58DE               	subwfb	postinc2,w,c
 38742  004EC2  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38743  004EC4  58DE               	subwfb	postinc2,w,c
 38744  004EC6  E210               	bc	i2l10631
 38745                           
 38746                           ; BSR set to: 0
 38747                           ;sw_timer.c: 313: {
 38748                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38749  004EC8  5029               	movf	i2SwTimersInterrupt@i,w,c
 38750  004ECA  0D08               	mullw	8
 38751  004ECC  0E00               	movlw	low _swTimers
 38752  004ECE  24F3               	addwf	prodl,w,c
 38753  004ED0  6ED9               	movwf	fsr2l,c
 38754  004ED2  0E03               	movlw	high _swTimers
 38755  004ED4  20F4               	addwfc	prodh,w,c
 38756  004ED6  6EDA               	movwf	fsr2h,c
 38757  004ED8  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38758  004EDC  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38759  004EE0  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38760  004EE4  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38761  004EE8                     i2l10631:
 38762                           
 38763                           ; BSR set to: 0
 38764  004EE8  2A29               	incf	i2SwTimersInterrupt@i,f,c
 38765  004EEA                     i2l10633:
 38766                           
 38767                           ; BSR set to: 0
 38768  004EEA  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38769  004EEC  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 38770  004EEE  E3A3               	bnc	i2l10621
 38771                           
 38772                           ; BSR set to: 0
 38773                           ;sw_timer.c: 315: }
 38774                           ;sw_timer.c: 316: }
 38775                           ;sw_timer.c: 317: }
 38776                           ;sw_timer.c: 318: }
 38777                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38778  004EF0  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38779  004EF4  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38780  004EF8  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38781  004EFC  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38782                           
 38783                           ; BSR set to: 0
 38784  004F00  0012               	return		;funcret
 38785  004F02                     __end_ofi2_SwTimersInterrupt:
 38786                           	opt stack 0
 38787                           tosu	equ	0xFFF
 38788                           tosh	equ	0xFFE
 38789                           tosl	equ	0xFFD
 38790                           pclatu	equ	0xFFB
 38791                           pclath	equ	0xFFA
 38792                           tblptru	equ	0xFF8
 38793                           tblptrh	equ	0xFF7
 38794                           tblptrl	equ	0xFF6
 38795                           tablat	equ	0xFF5
 38796                           prodh	equ	0xFF4
 38797                           prodl	equ	0xFF3
 38798                           intcon	equ	0xFF2
 38799                           intcon2	equ	0xFF1
 38800                           intcon3	equ	0xFF0
 38801                           indf0	equ	0xFEF
 38802                           postinc0	equ	0xFEE
 38803                           plusw0	equ	0xFEB
 38804                           fsr0h	equ	0xFEA
 38805                           fsr0l	equ	0xFE9
 38806                           wreg	equ	0xFE8
 38807                           postinc1	equ	0xFE6
 38808                           postdec1	equ	0xFE5
 38809                           plusw1	equ	0xFE3
 38810                           fsr1h	equ	0xFE2
 38811                           fsr1l	equ	0xFE1
 38812                           indf2	equ	0xFDF
 38813                           postinc2	equ	0xFDE
 38814                           postdec2	equ	0xFDD
 38815                           plusw2	equ	0xFDB
 38816                           fsr2h	equ	0xFDA
 38817                           fsr2l	equ	0xFD9
 38818                           status	equ	0xFD8
 38819                           
 38820 ;; *************** function i2_TMR_GetDeltaTime *****************
 38821 ;; Defined at:
 38822 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38823 ;; Parameters:    Size  Location     Type
 38824 ;;		None
 38825 ;; Auto vars:     Size  Location     Type
 38826 ;;		None
 38827 ;; Return value:  Size  Location     Type
 38828 ;;                  4    8[COMRAM] unsigned long 
 38829 ;; Registers used:
 38830 ;;		wreg, status,2, status,0, cstack
 38831 ;; Tracked objects:
 38832 ;;		On entry : F/0
 38833 ;;		On exit  : F/0
 38834 ;;		Unchanged: 0/0
 38835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38838 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38839 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38840 ;;Total ram usage:       16 bytes
 38841 ;; Hardware stack levels used:    1
 38842 ;; Hardware stack levels required when called:    1
 38843 ;; This function calls:
 38844 ;;		i2_TMR1_ReadTimer
 38845 ;; This function is called by:
 38846 ;;		i2_SwTimersInterrupt
 38847 ;; This function uses a non-reentrant model
 38848 ;;
 38849                           
 38850                           	psect	text215
 38851  004C3C                     __ptext215:
 38852                           	opt stack 0
 38853  004C3C                     i2_TMR_GetDeltaTime:
 38854                           	opt stack 12
 38855                           
 38856                           ; BSR set to: 0
 38857                           ;sw_timer.c: 90: static uint32_t retVal;
 38858                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38859                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38860                           
 38861                           ; BSR set to: 0
 38862                           ;incstack = 0
 38863  004C3C  EC69  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38864  004C40  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38865  004C44  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38866                           
 38867                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38868  004C48  0100               	movlb	0	; () banked
 38869  004C4A  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 38870  004C4C  E13D               	bnz	i2l9939
 38871                           
 38872                           ; BSR set to: 0
 38873                           ;sw_timer.c: 96: {
 38874                           ;sw_timer.c: 97: timerOverflow = 0;
 38875  004C4E  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 38876                           
 38877                           ; BSR set to: 0
 38878                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38879  004C50  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38880  004C52  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38881  004C54  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38882  004C56  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38883  004C58  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38884  004C5A  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38885  004C5C  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38886  004C5E  A0D8               	btfss	status,0,c
 38887  004C60  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 38888  004C62  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 38889  004C64  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38890  004C66  5036               	movf	_ticksAccounted,w,c	;volatile
 38891  004C68  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38892  004C6A  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38893  004C6C  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38894  004C6E  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38895  004C70  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38896  004C72  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38897  004C74  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38898  004C76  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38899  004C78  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38900  004C7A  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38901  004C7C  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38902  004C7E  503A               	movf	_ticksAdded,w,c	;volatile
 38903  004C80  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38904  004C82  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 38905  004C84  503B               	movf	_ticksAdded+1,w,c	;volatile
 38906  004C86  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38907  004C88  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 38908  004C8A  503C               	movf	_ticksAdded+2,w,c	;volatile
 38909  004C8C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38910  004C8E  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 38911  004C90  503D               	movf	_ticksAdded+3,w,c	;volatile
 38912  004C92  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38913  004C94  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 38914  004C96  0E00               	movlw	0
 38915  004C98  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 38916  004C9A  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 38917  004C9C  0E00               	movlw	0
 38918  004C9E  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 38919  004CA0  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 38920  004CA2  0E01               	movlw	1
 38921  004CA4  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 38922  004CA6  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 38923  004CA8  0E00               	movlw	0
 38924  004CAA  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 38925  004CAC  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 38926                           
 38927                           ; BSR set to: 0
 38928                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38929  004CAE  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38930  004CB2  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38931  004CB6  6A38               	clrf	_ticksAccounted+2,c	;volatile
 38932  004CB8  6A39               	clrf	_ticksAccounted+3,c	;volatile
 38933                           
 38934                           ; BSR set to: 0
 38935                           ;sw_timer.c: 100: ticksAdded = 0;
 38936  004CBA  6A3A               	clrf	_ticksAdded,c	;volatile
 38937  004CBC  6A3B               	clrf	_ticksAdded+1,c	;volatile
 38938  004CBE  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38939  004CC0  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38940                           
 38941                           ; BSR set to: 0
 38942                           ;sw_timer.c: 101: reloadVal = 0;
 38943  004CC2  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 38944  004CC4  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 38945                           
 38946                           ;sw_timer.c: 102: }
 38947  004CC6  D028               	goto	i2l9941
 38948  004CC8                     i2l9939:
 38949                           
 38950                           ; BSR set to: 0
 38951                           ;sw_timer.c: 103: else
 38952                           ;sw_timer.c: 104: {
 38953                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38954  004CC8  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38955  004CCA  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38956  004CCC  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38957  004CCE  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38958  004CD0  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38959  004CD2  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38960  004CD4  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38961  004CD6  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38962  004CD8  5036               	movf	_ticksAccounted,w,c	;volatile
 38963  004CDA  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38964  004CDC  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38965  004CDE  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38966  004CE0  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38967  004CE2  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38968  004CE4  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38969  004CE6  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38970  004CE8  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38971  004CEA  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38972  004CEC  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38973  004CEE  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38974  004CF0  503A               	movf	_ticksAdded,w,c	;volatile
 38975  004CF2  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38976  004CF4  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 38977  004CF6  503B               	movf	_ticksAdded+1,w,c	;volatile
 38978  004CF8  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38979  004CFA  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 38980  004CFC  503C               	movf	_ticksAdded+2,w,c	;volatile
 38981  004CFE  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38982  004D00  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 38983  004D02  503D               	movf	_ticksAdded+3,w,c	;volatile
 38984  004D04  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38985  004D06  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 38986                           
 38987                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38988  004D08  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 38989  004D0A  2636               	addwf	_ticksAccounted,f,c	;volatile
 38990  004D0C  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 38991  004D0E  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 38992  004D10  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 38993  004D12  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 38994  004D14  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 38995  004D16  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 38996  004D18                     i2l9941:
 38997                           
 38998                           ; BSR set to: 0
 38999                           ;sw_timer.c: 107: }
 39000                           ;sw_timer.c: 109: return retVal;
 39001  004D18  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 39002  004D1C  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 39003  004D20  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 39004  004D24  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 39005                           
 39006                           ; BSR set to: 0
 39007  004D28  0012               	return		;funcret
 39008  004D2A                     __end_ofi2_TMR_GetDeltaTime:
 39009                           	opt stack 0
 39010                           tosu	equ	0xFFF
 39011                           tosh	equ	0xFFE
 39012                           tosl	equ	0xFFD
 39013                           pclatu	equ	0xFFB
 39014                           pclath	equ	0xFFA
 39015                           tblptru	equ	0xFF8
 39016                           tblptrh	equ	0xFF7
 39017                           tblptrl	equ	0xFF6
 39018                           tablat	equ	0xFF5
 39019                           prodh	equ	0xFF4
 39020                           prodl	equ	0xFF3
 39021                           intcon	equ	0xFF2
 39022                           intcon2	equ	0xFF1
 39023                           intcon3	equ	0xFF0
 39024                           indf0	equ	0xFEF
 39025                           postinc0	equ	0xFEE
 39026                           plusw0	equ	0xFEB
 39027                           fsr0h	equ	0xFEA
 39028                           fsr0l	equ	0xFE9
 39029                           wreg	equ	0xFE8
 39030                           postinc1	equ	0xFE6
 39031                           postdec1	equ	0xFE5
 39032                           plusw1	equ	0xFE3
 39033                           fsr1h	equ	0xFE2
 39034                           fsr1l	equ	0xFE1
 39035                           indf2	equ	0xFDF
 39036                           postinc2	equ	0xFDE
 39037                           postdec2	equ	0xFDD
 39038                           plusw2	equ	0xFDB
 39039                           fsr2h	equ	0xFDA
 39040                           fsr2l	equ	0xFD9
 39041                           status	equ	0xFD8
 39042                           
 39043 ;; *************** function i2_TMR1_ReadTimer *****************
 39044 ;; Defined at:
 39045 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 39046 ;; Parameters:    Size  Location     Type
 39047 ;;		None
 39048 ;; Auto vars:     Size  Location     Type
 39049 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 39050 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 39051 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 39052 ;; Return value:  Size  Location     Type
 39053 ;;                  2    0[COMRAM] unsigned int 
 39054 ;; Registers used:
 39055 ;;		wreg, status,2
 39056 ;; Tracked objects:
 39057 ;;		On entry : 0/0
 39058 ;;		On exit  : 0/0
 39059 ;;		Unchanged: 0/0
 39060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39062 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39064 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39065 ;;Total ram usage:        8 bytes
 39066 ;; Hardware stack levels used:    1
 39067 ;; This function calls:
 39068 ;;		Nothing
 39069 ;; This function is called by:
 39070 ;;		i2_TMR_GetDeltaTime
 39071 ;;		i2_TMR_SwapTimer
 39072 ;; This function uses a non-reentrant model
 39073 ;;
 39074                           
 39075                           	psect	text216
 39076  0074D2                     __ptext216:
 39077                           	opt stack 0
 39078  0074D2                     i2_TMR1_ReadTimer:
 39079                           	opt stack 13
 39080                           
 39081                           ;tmr1.c: 108: uint16_t readVal;
 39082                           ;tmr1.c: 109: uint8_t readValHigh;
 39083                           ;tmr1.c: 110: uint8_t readValLow;
 39084                           ;tmr1.c: 112: readValLow = TMR1L;
 39085                           
 39086                           ; BSR set to: 0
 39087                           ;incstack = 0
 39088  0074D2  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39089                           
 39090                           ;tmr1.c: 113: readValHigh = TMR1H;
 39091  0074D6  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39092                           
 39093                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39094  0074DA  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39095  0074DC  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39096  0074DE  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39097  0074E0  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39098  0074E2  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39099                           
 39100                           ;tmr1.c: 117: return readVal;
 39101  0074E6  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39102  0074EA  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39103  0074EE  0012               	return		;funcret
 39104  0074F0                     __end_ofi2_TMR1_ReadTimer:
 39105                           	opt stack 0
 39106                           tosu	equ	0xFFF
 39107                           tosh	equ	0xFFE
 39108                           tosl	equ	0xFFD
 39109                           pclatu	equ	0xFFB
 39110                           pclath	equ	0xFFA
 39111                           tblptru	equ	0xFF8
 39112                           tblptrh	equ	0xFF7
 39113                           tblptrl	equ	0xFF6
 39114                           tablat	equ	0xFF5
 39115                           prodh	equ	0xFF4
 39116                           prodl	equ	0xFF3
 39117                           intcon	equ	0xFF2
 39118                           intcon2	equ	0xFF1
 39119                           intcon3	equ	0xFF0
 39120                           indf0	equ	0xFEF
 39121                           postinc0	equ	0xFEE
 39122                           plusw0	equ	0xFEB
 39123                           fsr0h	equ	0xFEA
 39124                           fsr0l	equ	0xFE9
 39125                           wreg	equ	0xFE8
 39126                           postinc1	equ	0xFE6
 39127                           postdec1	equ	0xFE5
 39128                           plusw1	equ	0xFE3
 39129                           fsr1h	equ	0xFE2
 39130                           fsr1l	equ	0xFE1
 39131                           indf2	equ	0xFDF
 39132                           postinc2	equ	0xFDE
 39133                           postdec2	equ	0xFDD
 39134                           plusw2	equ	0xFDB
 39135                           fsr2h	equ	0xFDA
 39136                           fsr2l	equ	0xFD9
 39137                           status	equ	0xFD8
 39138                           
 39139 ;; *************** function _PIN_MANAGER_IOC *****************
 39140 ;; Defined at:
 39141 ;;		line 103 in file "mcc_generated_files/pin_manager.c"
 39142 ;; Parameters:    Size  Location     Type
 39143 ;;		None
 39144 ;; Auto vars:     Size  Location     Type
 39145 ;;		None
 39146 ;; Return value:  Size  Location     Type
 39147 ;;                  1    wreg      void 
 39148 ;; Registers used:
 39149 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39150 ;; Tracked objects:
 39151 ;;		On entry : 0/0
 39152 ;;		On exit  : 0/0
 39153 ;;		Unchanged: 0/0
 39154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39159 ;;Total ram usage:        0 bytes
 39160 ;; Hardware stack levels used:    1
 39161 ;; Hardware stack levels required when called:    2
 39162 ;; This function calls:
 39163 ;;		_IOCB4_ISR
 39164 ;; This function is called by:
 39165 ;;		_INTERRUPT_InterruptManager
 39166 ;; This function uses a non-reentrant model
 39167 ;;
 39168                           
 39169                           	psect	text217
 39170  00786A                     __ptext217:
 39171                           	opt stack 0
 39172  00786A                     _PIN_MANAGER_IOC:
 39173                           	opt stack 15
 39174                           
 39175                           ;pin_manager.c: 106: if(IOCBbits.IOCB4 == 1)
 39176                           
 39177                           ;incstack = 0
 39178  00786A  B862               	btfsc	3938,4,c	;volatile
 39179                           
 39180                           ;pin_manager.c: 107: {
 39181                           ;pin_manager.c: 108: IOCB4_ISR();
 39182  00786C  ECBE  F03A         	call	_IOCB4_ISR	;wreg free
 39183                           
 39184                           ;pin_manager.c: 109: }
 39185                           ;pin_manager.c: 112: INTCONbits.RBIF = 0;
 39186  007870  90F2               	bcf	intcon,0,c	;volatile
 39187  007872  0012               	return		;funcret
 39188  007874                     __end_of_PIN_MANAGER_IOC:
 39189                           	opt stack 0
 39190                           tosu	equ	0xFFF
 39191                           tosh	equ	0xFFE
 39192                           tosl	equ	0xFFD
 39193                           pclatu	equ	0xFFB
 39194                           pclath	equ	0xFFA
 39195                           tblptru	equ	0xFF8
 39196                           tblptrh	equ	0xFF7
 39197                           tblptrl	equ	0xFF6
 39198                           tablat	equ	0xFF5
 39199                           prodh	equ	0xFF4
 39200                           prodl	equ	0xFF3
 39201                           intcon	equ	0xFF2
 39202                           intcon2	equ	0xFF1
 39203                           intcon3	equ	0xFF0
 39204                           indf0	equ	0xFEF
 39205                           postinc0	equ	0xFEE
 39206                           plusw0	equ	0xFEB
 39207                           fsr0h	equ	0xFEA
 39208                           fsr0l	equ	0xFE9
 39209                           wreg	equ	0xFE8
 39210                           postinc1	equ	0xFE6
 39211                           postdec1	equ	0xFE5
 39212                           plusw1	equ	0xFE3
 39213                           fsr1h	equ	0xFE2
 39214                           fsr1l	equ	0xFE1
 39215                           indf2	equ	0xFDF
 39216                           postinc2	equ	0xFDE
 39217                           postdec2	equ	0xFDD
 39218                           plusw2	equ	0xFDB
 39219                           fsr2h	equ	0xFDA
 39220                           fsr2l	equ	0xFD9
 39221                           status	equ	0xFD8
 39222                           
 39223 ;; *************** function _IOCB4_ISR *****************
 39224 ;; Defined at:
 39225 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 39226 ;; Parameters:    Size  Location     Type
 39227 ;;		None
 39228 ;; Auto vars:     Size  Location     Type
 39229 ;;		None
 39230 ;; Return value:  Size  Location     Type
 39231 ;;                  1    wreg      void 
 39232 ;; Registers used:
 39233 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39234 ;; Tracked objects:
 39235 ;;		On entry : 0/0
 39236 ;;		On exit  : 0/0
 39237 ;;		Unchanged: 0/0
 39238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39243 ;;Total ram usage:        0 bytes
 39244 ;; Hardware stack levels used:    1
 39245 ;; Hardware stack levels required when called:    1
 39246 ;; This function calls:
 39247 ;;		Absolute function
 39248 ;;		_DIO2_ISR_Lora
 39249 ;;		_IOCB4_DefaultInterruptHandler
 39250 ;; This function is called by:
 39251 ;;		_PIN_MANAGER_IOC
 39252 ;; This function uses a non-reentrant model
 39253 ;;
 39254                           
 39255                           	psect	text218
 39256  00757C                     __ptext218:
 39257                           	opt stack 0
 39258  00757C                     _IOCB4_ISR:
 39259                           	opt stack 15
 39260                           
 39261                           ;pin_manager.c: 124: if(IOCB4_InterruptHandler)
 39262                           
 39263                           ;incstack = 0
 39264  00757C  0101               	movlb	1	; () banked
 39265  00757E  51EB               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39266  007580  11EC               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39267  007582  B4D8               	btfsc	status,2,c
 39268  007584  0012               	return	
 39269                           
 39270                           ; BSR set to: 1
 39271                           ;pin_manager.c: 125: {
 39272                           ;pin_manager.c: 126: IOCB4_InterruptHandler();
 39273  007586  0005               	push	
 39274  007588  6EFA               	movwf	pclath,c
 39275  00758A  51EB               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39276  00758C  6EFD               	movwf	tosl,c
 39277  00758E  51EC               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39278  007590  6EFE               	movwf	tosh,c
 39279  007592  6AFF               	clrf	tosu,c
 39280  007594  50FA               	movf	pclath,w,c
 39281  007596  0012               	return		;indir
 39282  007598                     __end_of_IOCB4_ISR:
 39283                           	opt stack 0
 39284                           tosu	equ	0xFFF
 39285                           tosh	equ	0xFFE
 39286                           tosl	equ	0xFFD
 39287                           pclatu	equ	0xFFB
 39288                           pclath	equ	0xFFA
 39289                           tblptru	equ	0xFF8
 39290                           tblptrh	equ	0xFF7
 39291                           tblptrl	equ	0xFF6
 39292                           tablat	equ	0xFF5
 39293                           prodh	equ	0xFF4
 39294                           prodl	equ	0xFF3
 39295                           intcon	equ	0xFF2
 39296                           intcon2	equ	0xFF1
 39297                           intcon3	equ	0xFF0
 39298                           indf0	equ	0xFEF
 39299                           postinc0	equ	0xFEE
 39300                           plusw0	equ	0xFEB
 39301                           fsr0h	equ	0xFEA
 39302                           fsr0l	equ	0xFE9
 39303                           wreg	equ	0xFE8
 39304                           postinc1	equ	0xFE6
 39305                           postdec1	equ	0xFE5
 39306                           plusw1	equ	0xFE3
 39307                           fsr1h	equ	0xFE2
 39308                           fsr1l	equ	0xFE1
 39309                           indf2	equ	0xFDF
 39310                           postinc2	equ	0xFDE
 39311                           postdec2	equ	0xFDD
 39312                           plusw2	equ	0xFDB
 39313                           fsr2h	equ	0xFDA
 39314                           fsr2l	equ	0xFD9
 39315                           status	equ	0xFD8
 39316                           
 39317 ;; *************** function _DIO2_ISR_Lora *****************
 39318 ;; Defined at:
 39319 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39320 ;; Parameters:    Size  Location     Type
 39321 ;;		None
 39322 ;; Auto vars:     Size  Location     Type
 39323 ;;		None
 39324 ;; Return value:  Size  Location     Type
 39325 ;;                  1    wreg      void 
 39326 ;; Registers used:
 39327 ;;		status,2, status,0
 39328 ;; Tracked objects:
 39329 ;;		On entry : F/1
 39330 ;;		On exit  : F/0
 39331 ;;		Unchanged: 0/0
 39332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39337 ;;Total ram usage:        0 bytes
 39338 ;; Hardware stack levels used:    1
 39339 ;; This function calls:
 39340 ;;		Nothing
 39341 ;; This function is called by:
 39342 ;;		_DIO2_ISR_Lora_Init
 39343 ;;		_IOCB4_ISR
 39344 ;; This function uses a non-reentrant model
 39345 ;;
 39346                           
 39347                           	psect	text219
 39348  0078DA                     __ptext219:
 39349                           	opt stack 0
 39350  0078DA                     _DIO2_ISR_Lora:
 39351                           	opt stack 15
 39352                           
 39353                           ; BSR set to: 1
 39354                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39355                           
 39356                           ;incstack = 0
 39357  0078DA  0100               	movlb	0	; () banked
 39358  0078DC  85F0               	bsf	_dioStatus& (0+255),2,b	;volatile
 39359                           
 39360                           ; BSR set to: 0
 39361  0078DE  0012               	return		;funcret
 39362  0078E0                     __end_of_DIO2_ISR_Lora:
 39363                           	opt stack 0
 39364                           tosu	equ	0xFFF
 39365                           tosh	equ	0xFFE
 39366                           tosl	equ	0xFFD
 39367                           pclatu	equ	0xFFB
 39368                           pclath	equ	0xFFA
 39369                           tblptru	equ	0xFF8
 39370                           tblptrh	equ	0xFF7
 39371                           tblptrl	equ	0xFF6
 39372                           tablat	equ	0xFF5
 39373                           prodh	equ	0xFF4
 39374                           prodl	equ	0xFF3
 39375                           intcon	equ	0xFF2
 39376                           intcon2	equ	0xFF1
 39377                           intcon3	equ	0xFF0
 39378                           indf0	equ	0xFEF
 39379                           postinc0	equ	0xFEE
 39380                           plusw0	equ	0xFEB
 39381                           fsr0h	equ	0xFEA
 39382                           fsr0l	equ	0xFE9
 39383                           wreg	equ	0xFE8
 39384                           postinc1	equ	0xFE6
 39385                           postdec1	equ	0xFE5
 39386                           plusw1	equ	0xFE3
 39387                           fsr1h	equ	0xFE2
 39388                           fsr1l	equ	0xFE1
 39389                           indf2	equ	0xFDF
 39390                           postinc2	equ	0xFDE
 39391                           postdec2	equ	0xFDD
 39392                           plusw2	equ	0xFDB
 39393                           fsr2h	equ	0xFDA
 39394                           fsr2l	equ	0xFD9
 39395                           status	equ	0xFD8
 39396                           
 39397 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39398 ;; Defined at:
 39399 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 39400 ;; Parameters:    Size  Location     Type
 39401 ;;		None
 39402 ;; Auto vars:     Size  Location     Type
 39403 ;;		None
 39404 ;; Return value:  Size  Location     Type
 39405 ;;                  1    wreg      void 
 39406 ;; Registers used:
 39407 ;;		None
 39408 ;; Tracked objects:
 39409 ;;		On entry : F/1
 39410 ;;		On exit  : F/1
 39411 ;;		Unchanged: F/0
 39412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39417 ;;Total ram usage:        0 bytes
 39418 ;; Hardware stack levels used:    1
 39419 ;; This function calls:
 39420 ;;		Nothing
 39421 ;; This function is called by:
 39422 ;;		_PIN_MANAGER_Initialize
 39423 ;;		_IOCB4_ISR
 39424 ;; This function uses a non-reentrant model
 39425 ;;
 39426                           
 39427                           	psect	text220
 39428  007926                     __ptext220:
 39429                           	opt stack 0
 39430  007926                     _IOCB4_DefaultInterruptHandler:
 39431                           	opt stack 15
 39432                           
 39433                           ; BSR set to: 1
 39434                           
 39435                           ; BSR set to: 0
 39436                           ;incstack = 0
 39437  007926  0012               	return		;funcret
 39438  007928                     __end_of_IOCB4_DefaultInterruptHandler:
 39439                           	opt stack 0
 39440                           tosu	equ	0xFFF
 39441                           tosh	equ	0xFFE
 39442                           tosl	equ	0xFFD
 39443                           pclatu	equ	0xFFB
 39444                           pclath	equ	0xFFA
 39445                           tblptru	equ	0xFF8
 39446                           tblptrh	equ	0xFF7
 39447                           tblptrl	equ	0xFF6
 39448                           tablat	equ	0xFF5
 39449                           prodh	equ	0xFF4
 39450                           prodl	equ	0xFF3
 39451                           intcon	equ	0xFF2
 39452                           intcon2	equ	0xFF1
 39453                           intcon3	equ	0xFF0
 39454                           indf0	equ	0xFEF
 39455                           postinc0	equ	0xFEE
 39456                           plusw0	equ	0xFEB
 39457                           fsr0h	equ	0xFEA
 39458                           fsr0l	equ	0xFE9
 39459                           wreg	equ	0xFE8
 39460                           postinc1	equ	0xFE6
 39461                           postdec1	equ	0xFE5
 39462                           plusw1	equ	0xFE3
 39463                           fsr1h	equ	0xFE2
 39464                           fsr1l	equ	0xFE1
 39465                           indf2	equ	0xFDF
 39466                           postinc2	equ	0xFDE
 39467                           postdec2	equ	0xFDD
 39468                           plusw2	equ	0xFDB
 39469                           fsr2h	equ	0xFDA
 39470                           fsr2l	equ	0xFD9
 39471                           status	equ	0xFD8
 39472                           
 39473 ;; *************** function _INT2_ISR *****************
 39474 ;; Defined at:
 39475 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 39476 ;; Parameters:    Size  Location     Type
 39477 ;;		None
 39478 ;; Auto vars:     Size  Location     Type
 39479 ;;		None
 39480 ;; Return value:  Size  Location     Type
 39481 ;;                  1    wreg      void 
 39482 ;; Registers used:
 39483 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39484 ;; Tracked objects:
 39485 ;;		On entry : 0/0
 39486 ;;		On exit  : 0/0
 39487 ;;		Unchanged: 0/0
 39488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39493 ;;Total ram usage:        0 bytes
 39494 ;; Hardware stack levels used:    1
 39495 ;; Hardware stack levels required when called:    2
 39496 ;; This function calls:
 39497 ;;		_INT2_CallBack
 39498 ;; This function is called by:
 39499 ;;		_INTERRUPT_InterruptManager
 39500 ;; This function uses a non-reentrant model
 39501 ;;
 39502                           
 39503                           	psect	text221
 39504  0078E0                     __ptext221:
 39505                           	opt stack 0
 39506  0078E0                     _INT2_ISR:
 39507                           	opt stack 15
 39508                           
 39509                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 39510                           
 39511                           ; BSR set to: 1
 39512                           ;incstack = 0
 39513  0078E0  92F0               	bcf	intcon3,1,c	;volatile
 39514                           
 39515                           ;ext_int.c: 95: INT2_CallBack();
 39516  0078E2  EFCC  F03A         	goto	_INT2_CallBack	;wreg free
 39517  0078E6                     __end_of_INT2_ISR:
 39518                           	opt stack 0
 39519                           tosu	equ	0xFFF
 39520                           tosh	equ	0xFFE
 39521                           tosl	equ	0xFFD
 39522                           pclatu	equ	0xFFB
 39523                           pclath	equ	0xFFA
 39524                           tblptru	equ	0xFF8
 39525                           tblptrh	equ	0xFF7
 39526                           tblptrl	equ	0xFF6
 39527                           tablat	equ	0xFF5
 39528                           prodh	equ	0xFF4
 39529                           prodl	equ	0xFF3
 39530                           intcon	equ	0xFF2
 39531                           intcon2	equ	0xFF1
 39532                           intcon3	equ	0xFF0
 39533                           indf0	equ	0xFEF
 39534                           postinc0	equ	0xFEE
 39535                           plusw0	equ	0xFEB
 39536                           fsr0h	equ	0xFEA
 39537                           fsr0l	equ	0xFE9
 39538                           wreg	equ	0xFE8
 39539                           postinc1	equ	0xFE6
 39540                           postdec1	equ	0xFE5
 39541                           plusw1	equ	0xFE3
 39542                           fsr1h	equ	0xFE2
 39543                           fsr1l	equ	0xFE1
 39544                           indf2	equ	0xFDF
 39545                           postinc2	equ	0xFDE
 39546                           postdec2	equ	0xFDD
 39547                           plusw2	equ	0xFDB
 39548                           fsr2h	equ	0xFDA
 39549                           fsr2l	equ	0xFD9
 39550                           status	equ	0xFD8
 39551                           
 39552 ;; *************** function _INT2_CallBack *****************
 39553 ;; Defined at:
 39554 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 39555 ;; Parameters:    Size  Location     Type
 39556 ;;		None
 39557 ;; Auto vars:     Size  Location     Type
 39558 ;;		None
 39559 ;; Return value:  Size  Location     Type
 39560 ;;                  1    wreg      void 
 39561 ;; Registers used:
 39562 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39563 ;; Tracked objects:
 39564 ;;		On entry : 0/0
 39565 ;;		On exit  : 0/0
 39566 ;;		Unchanged: 0/0
 39567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39572 ;;Total ram usage:        0 bytes
 39573 ;; Hardware stack levels used:    1
 39574 ;; Hardware stack levels required when called:    1
 39575 ;; This function calls:
 39576 ;;		Absolute function
 39577 ;;		_DIO1_ISR_Lora
 39578 ;;		_INT2_DefaultInterruptHandler
 39579 ;; This function is called by:
 39580 ;;		_INT2_ISR
 39581 ;; This function uses a non-reentrant model
 39582 ;;
 39583                           
 39584                           	psect	text222
 39585  007598                     __ptext222:
 39586                           	opt stack 0
 39587  007598                     _INT2_CallBack:
 39588                           	opt stack 15
 39589                           
 39590                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 39591                           
 39592                           ;incstack = 0
 39593  007598  0101               	movlb	1	; () banked
 39594  00759A  51E9               	movf	_INT2_InterruptHandler& (0+255),w,b
 39595  00759C  11EA               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39596  00759E  B4D8               	btfsc	status,2,c
 39597  0075A0  0012               	return	
 39598                           
 39599                           ; BSR set to: 1
 39600                           ;ext_int.c: 105: {
 39601                           ;ext_int.c: 106: INT2_InterruptHandler();
 39602  0075A2  0005               	push	
 39603  0075A4  6EFA               	movwf	pclath,c
 39604  0075A6  51E9               	movf	_INT2_InterruptHandler& (0+255),w,b
 39605  0075A8  6EFD               	movwf	tosl,c
 39606  0075AA  51EA               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39607  0075AC  6EFE               	movwf	tosh,c
 39608  0075AE  6AFF               	clrf	tosu,c
 39609  0075B0  50FA               	movf	pclath,w,c
 39610  0075B2  0012               	return		;indir
 39611  0075B4                     __end_of_INT2_CallBack:
 39612                           	opt stack 0
 39613                           tosu	equ	0xFFF
 39614                           tosh	equ	0xFFE
 39615                           tosl	equ	0xFFD
 39616                           pclatu	equ	0xFFB
 39617                           pclath	equ	0xFFA
 39618                           tblptru	equ	0xFF8
 39619                           tblptrh	equ	0xFF7
 39620                           tblptrl	equ	0xFF6
 39621                           tablat	equ	0xFF5
 39622                           prodh	equ	0xFF4
 39623                           prodl	equ	0xFF3
 39624                           intcon	equ	0xFF2
 39625                           intcon2	equ	0xFF1
 39626                           intcon3	equ	0xFF0
 39627                           indf0	equ	0xFEF
 39628                           postinc0	equ	0xFEE
 39629                           plusw0	equ	0xFEB
 39630                           fsr0h	equ	0xFEA
 39631                           fsr0l	equ	0xFE9
 39632                           wreg	equ	0xFE8
 39633                           postinc1	equ	0xFE6
 39634                           postdec1	equ	0xFE5
 39635                           plusw1	equ	0xFE3
 39636                           fsr1h	equ	0xFE2
 39637                           fsr1l	equ	0xFE1
 39638                           indf2	equ	0xFDF
 39639                           postinc2	equ	0xFDE
 39640                           postdec2	equ	0xFDD
 39641                           plusw2	equ	0xFDB
 39642                           fsr2h	equ	0xFDA
 39643                           fsr2l	equ	0xFD9
 39644                           status	equ	0xFD8
 39645                           
 39646 ;; *************** function _DIO1_ISR_Lora *****************
 39647 ;; Defined at:
 39648 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39649 ;; Parameters:    Size  Location     Type
 39650 ;;		None
 39651 ;; Auto vars:     Size  Location     Type
 39652 ;;		None
 39653 ;; Return value:  Size  Location     Type
 39654 ;;                  1    wreg      void 
 39655 ;; Registers used:
 39656 ;;		status,2, status,0
 39657 ;; Tracked objects:
 39658 ;;		On entry : F/1
 39659 ;;		On exit  : F/0
 39660 ;;		Unchanged: 0/0
 39661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39666 ;;Total ram usage:        0 bytes
 39667 ;; Hardware stack levels used:    1
 39668 ;; This function calls:
 39669 ;;		Nothing
 39670 ;; This function is called by:
 39671 ;;		_DIO1_ISR_Lora_Init
 39672 ;;		_INT2_CallBack
 39673 ;; This function uses a non-reentrant model
 39674 ;;
 39675                           
 39676                           	psect	text223
 39677  0078E6                     __ptext223:
 39678                           	opt stack 0
 39679  0078E6                     _DIO1_ISR_Lora:
 39680                           	opt stack 15
 39681                           
 39682                           ; BSR set to: 1
 39683                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39684                           
 39685                           ;incstack = 0
 39686  0078E6  0100               	movlb	0	; () banked
 39687  0078E8  83F0               	bsf	_dioStatus& (0+255),1,b	;volatile
 39688                           
 39689                           ; BSR set to: 0
 39690  0078EA  0012               	return		;funcret
 39691  0078EC                     __end_of_DIO1_ISR_Lora:
 39692                           	opt stack 0
 39693                           tosu	equ	0xFFF
 39694                           tosh	equ	0xFFE
 39695                           tosl	equ	0xFFD
 39696                           pclatu	equ	0xFFB
 39697                           pclath	equ	0xFFA
 39698                           tblptru	equ	0xFF8
 39699                           tblptrh	equ	0xFF7
 39700                           tblptrl	equ	0xFF6
 39701                           tablat	equ	0xFF5
 39702                           prodh	equ	0xFF4
 39703                           prodl	equ	0xFF3
 39704                           intcon	equ	0xFF2
 39705                           intcon2	equ	0xFF1
 39706                           intcon3	equ	0xFF0
 39707                           indf0	equ	0xFEF
 39708                           postinc0	equ	0xFEE
 39709                           plusw0	equ	0xFEB
 39710                           fsr0h	equ	0xFEA
 39711                           fsr0l	equ	0xFE9
 39712                           wreg	equ	0xFE8
 39713                           postinc1	equ	0xFE6
 39714                           postdec1	equ	0xFE5
 39715                           plusw1	equ	0xFE3
 39716                           fsr1h	equ	0xFE2
 39717                           fsr1l	equ	0xFE1
 39718                           indf2	equ	0xFDF
 39719                           postinc2	equ	0xFDE
 39720                           postdec2	equ	0xFDD
 39721                           plusw2	equ	0xFDB
 39722                           fsr2h	equ	0xFDA
 39723                           fsr2l	equ	0xFD9
 39724                           status	equ	0xFD8
 39725                           
 39726 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39727 ;; Defined at:
 39728 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 39729 ;; Parameters:    Size  Location     Type
 39730 ;;		None
 39731 ;; Auto vars:     Size  Location     Type
 39732 ;;		None
 39733 ;; Return value:  Size  Location     Type
 39734 ;;                  1    wreg      void 
 39735 ;; Registers used:
 39736 ;;		None
 39737 ;; Tracked objects:
 39738 ;;		On entry : F/1
 39739 ;;		On exit  : F/1
 39740 ;;		Unchanged: F/0
 39741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39746 ;;Total ram usage:        0 bytes
 39747 ;; Hardware stack levels used:    1
 39748 ;; This function calls:
 39749 ;;		Nothing
 39750 ;; This function is called by:
 39751 ;;		_EXT_INT_Initialize
 39752 ;;		_INT2_CallBack
 39753 ;; This function uses a non-reentrant model
 39754 ;;
 39755                           
 39756                           	psect	text224
 39757  007928                     __ptext224:
 39758                           	opt stack 0
 39759  007928                     _INT2_DefaultInterruptHandler:
 39760                           	opt stack 15
 39761                           
 39762                           ; BSR set to: 1
 39763                           
 39764                           ; BSR set to: 0
 39765                           ;incstack = 0
 39766  007928  0012               	return		;funcret
 39767  00792A                     __end_of_INT2_DefaultInterruptHandler:
 39768                           	opt stack 0
 39769                           tosu	equ	0xFFF
 39770                           tosh	equ	0xFFE
 39771                           tosl	equ	0xFFD
 39772                           pclatu	equ	0xFFB
 39773                           pclath	equ	0xFFA
 39774                           tblptru	equ	0xFF8
 39775                           tblptrh	equ	0xFF7
 39776                           tblptrl	equ	0xFF6
 39777                           tablat	equ	0xFF5
 39778                           prodh	equ	0xFF4
 39779                           prodl	equ	0xFF3
 39780                           intcon	equ	0xFF2
 39781                           intcon2	equ	0xFF1
 39782                           intcon3	equ	0xFF0
 39783                           indf0	equ	0xFEF
 39784                           postinc0	equ	0xFEE
 39785                           plusw0	equ	0xFEB
 39786                           fsr0h	equ	0xFEA
 39787                           fsr0l	equ	0xFE9
 39788                           wreg	equ	0xFE8
 39789                           postinc1	equ	0xFE6
 39790                           postdec1	equ	0xFE5
 39791                           plusw1	equ	0xFE3
 39792                           fsr1h	equ	0xFE2
 39793                           fsr1l	equ	0xFE1
 39794                           indf2	equ	0xFDF
 39795                           postinc2	equ	0xFDE
 39796                           postdec2	equ	0xFDD
 39797                           plusw2	equ	0xFDB
 39798                           fsr2h	equ	0xFDA
 39799                           fsr2l	equ	0xFD9
 39800                           status	equ	0xFD8
 39801                           
 39802 ;; *************** function _INT1_ISR *****************
 39803 ;; Defined at:
 39804 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 39805 ;; Parameters:    Size  Location     Type
 39806 ;;		None
 39807 ;; Auto vars:     Size  Location     Type
 39808 ;;		None
 39809 ;; Return value:  Size  Location     Type
 39810 ;;                  1    wreg      void 
 39811 ;; Registers used:
 39812 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39813 ;; Tracked objects:
 39814 ;;		On entry : 0/0
 39815 ;;		On exit  : 0/0
 39816 ;;		Unchanged: 0/0
 39817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39822 ;;Total ram usage:        0 bytes
 39823 ;; Hardware stack levels used:    1
 39824 ;; Hardware stack levels required when called:    2
 39825 ;; This function calls:
 39826 ;;		_INT1_CallBack
 39827 ;; This function is called by:
 39828 ;;		_INTERRUPT_InterruptManager
 39829 ;; This function uses a non-reentrant model
 39830 ;;
 39831                           
 39832                           	psect	text225
 39833  0078EC                     __ptext225:
 39834                           	opt stack 0
 39835  0078EC                     _INT1_ISR:
 39836                           	opt stack 15
 39837                           
 39838                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 39839                           
 39840                           ; BSR set to: 1
 39841                           ;incstack = 0
 39842  0078EC  90F0               	bcf	intcon3,0,c	;volatile
 39843                           
 39844                           ;ext_int.c: 54: INT1_CallBack();
 39845  0078EE  EFF4  F03A         	goto	_INT1_CallBack	;wreg free
 39846  0078F2                     __end_of_INT1_ISR:
 39847                           	opt stack 0
 39848                           tosu	equ	0xFFF
 39849                           tosh	equ	0xFFE
 39850                           tosl	equ	0xFFD
 39851                           pclatu	equ	0xFFB
 39852                           pclath	equ	0xFFA
 39853                           tblptru	equ	0xFF8
 39854                           tblptrh	equ	0xFF7
 39855                           tblptrl	equ	0xFF6
 39856                           tablat	equ	0xFF5
 39857                           prodh	equ	0xFF4
 39858                           prodl	equ	0xFF3
 39859                           intcon	equ	0xFF2
 39860                           intcon2	equ	0xFF1
 39861                           intcon3	equ	0xFF0
 39862                           indf0	equ	0xFEF
 39863                           postinc0	equ	0xFEE
 39864                           plusw0	equ	0xFEB
 39865                           fsr0h	equ	0xFEA
 39866                           fsr0l	equ	0xFE9
 39867                           wreg	equ	0xFE8
 39868                           postinc1	equ	0xFE6
 39869                           postdec1	equ	0xFE5
 39870                           plusw1	equ	0xFE3
 39871                           fsr1h	equ	0xFE2
 39872                           fsr1l	equ	0xFE1
 39873                           indf2	equ	0xFDF
 39874                           postinc2	equ	0xFDE
 39875                           postdec2	equ	0xFDD
 39876                           plusw2	equ	0xFDB
 39877                           fsr2h	equ	0xFDA
 39878                           fsr2l	equ	0xFD9
 39879                           status	equ	0xFD8
 39880                           
 39881 ;; *************** function _INT1_CallBack *****************
 39882 ;; Defined at:
 39883 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 39884 ;; Parameters:    Size  Location     Type
 39885 ;;		None
 39886 ;; Auto vars:     Size  Location     Type
 39887 ;;		None
 39888 ;; Return value:  Size  Location     Type
 39889 ;;                  1    wreg      void 
 39890 ;; Registers used:
 39891 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39892 ;; Tracked objects:
 39893 ;;		On entry : 0/0
 39894 ;;		On exit  : 0/0
 39895 ;;		Unchanged: 0/0
 39896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39901 ;;Total ram usage:        0 bytes
 39902 ;; Hardware stack levels used:    1
 39903 ;; Hardware stack levels required when called:    1
 39904 ;; This function calls:
 39905 ;;		Absolute function
 39906 ;;		_DIO0_ISR_Lora
 39907 ;;		_INT1_DefaultInterruptHandler
 39908 ;; This function is called by:
 39909 ;;		_INT1_ISR
 39910 ;; This function uses a non-reentrant model
 39911 ;;
 39912                           
 39913                           	psect	text226
 39914  0075E8                     __ptext226:
 39915                           	opt stack 0
 39916  0075E8                     _INT1_CallBack:
 39917                           	opt stack 15
 39918                           
 39919                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 39920                           
 39921                           ;incstack = 0
 39922  0075E8  505A               	movf	_INT1_InterruptHandler,w,c
 39923  0075EA  105B               	iorwf	_INT1_InterruptHandler+1,w,c
 39924  0075EC  B4D8               	btfsc	status,2,c
 39925  0075EE  0012               	return	
 39926                           
 39927                           ;ext_int.c: 64: {
 39928                           ;ext_int.c: 65: INT1_InterruptHandler();
 39929  0075F0  0005               	push	
 39930  0075F2  6EFA               	movwf	pclath,c
 39931  0075F4  505A               	movf	_INT1_InterruptHandler,w,c
 39932  0075F6  6EFD               	movwf	tosl,c
 39933  0075F8  505B               	movf	_INT1_InterruptHandler+1,w,c
 39934  0075FA  6EFE               	movwf	tosh,c
 39935  0075FC  6AFF               	clrf	tosu,c
 39936  0075FE  50FA               	movf	pclath,w,c
 39937  007600  0012               	return		;indir
 39938  007602                     __end_of_INT1_CallBack:
 39939                           	opt stack 0
 39940                           tosu	equ	0xFFF
 39941                           tosh	equ	0xFFE
 39942                           tosl	equ	0xFFD
 39943                           pclatu	equ	0xFFB
 39944                           pclath	equ	0xFFA
 39945                           tblptru	equ	0xFF8
 39946                           tblptrh	equ	0xFF7
 39947                           tblptrl	equ	0xFF6
 39948                           tablat	equ	0xFF5
 39949                           prodh	equ	0xFF4
 39950                           prodl	equ	0xFF3
 39951                           intcon	equ	0xFF2
 39952                           intcon2	equ	0xFF1
 39953                           intcon3	equ	0xFF0
 39954                           indf0	equ	0xFEF
 39955                           postinc0	equ	0xFEE
 39956                           plusw0	equ	0xFEB
 39957                           fsr0h	equ	0xFEA
 39958                           fsr0l	equ	0xFE9
 39959                           wreg	equ	0xFE8
 39960                           postinc1	equ	0xFE6
 39961                           postdec1	equ	0xFE5
 39962                           plusw1	equ	0xFE3
 39963                           fsr1h	equ	0xFE2
 39964                           fsr1l	equ	0xFE1
 39965                           indf2	equ	0xFDF
 39966                           postinc2	equ	0xFDE
 39967                           postdec2	equ	0xFDD
 39968                           plusw2	equ	0xFDB
 39969                           fsr2h	equ	0xFDA
 39970                           fsr2l	equ	0xFD9
 39971                           status	equ	0xFD8
 39972                           
 39973 ;; *************** function _DIO0_ISR_Lora *****************
 39974 ;; Defined at:
 39975 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39976 ;; Parameters:    Size  Location     Type
 39977 ;;		None
 39978 ;; Auto vars:     Size  Location     Type
 39979 ;;		None
 39980 ;; Return value:  Size  Location     Type
 39981 ;;                  1    wreg      void 
 39982 ;; Registers used:
 39983 ;;		status,2, status,0
 39984 ;; Tracked objects:
 39985 ;;		On entry : 0/0
 39986 ;;		On exit  : F/0
 39987 ;;		Unchanged: 0/0
 39988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39993 ;;Total ram usage:        0 bytes
 39994 ;; Hardware stack levels used:    1
 39995 ;; This function calls:
 39996 ;;		Nothing
 39997 ;; This function is called by:
 39998 ;;		_DIO0_ISR_Lora_Init
 39999 ;;		_INT1_CallBack
 40000 ;; This function uses a non-reentrant model
 40001 ;;
 40002                           
 40003                           	psect	text227
 40004  0078F2                     __ptext227:
 40005                           	opt stack 0
 40006  0078F2                     _DIO0_ISR_Lora:
 40007                           	opt stack 15
 40008                           
 40009                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 40010                           
 40011                           ;incstack = 0
 40012  0078F2  0100               	movlb	0	; () banked
 40013  0078F4  81F0               	bsf	_dioStatus& (0+255),0,b	;volatile
 40014                           
 40015                           ; BSR set to: 0
 40016  0078F6  0012               	return		;funcret
 40017  0078F8                     __end_of_DIO0_ISR_Lora:
 40018                           	opt stack 0
 40019                           tosu	equ	0xFFF
 40020                           tosh	equ	0xFFE
 40021                           tosl	equ	0xFFD
 40022                           pclatu	equ	0xFFB
 40023                           pclath	equ	0xFFA
 40024                           tblptru	equ	0xFF8
 40025                           tblptrh	equ	0xFF7
 40026                           tblptrl	equ	0xFF6
 40027                           tablat	equ	0xFF5
 40028                           prodh	equ	0xFF4
 40029                           prodl	equ	0xFF3
 40030                           intcon	equ	0xFF2
 40031                           intcon2	equ	0xFF1
 40032                           intcon3	equ	0xFF0
 40033                           indf0	equ	0xFEF
 40034                           postinc0	equ	0xFEE
 40035                           plusw0	equ	0xFEB
 40036                           fsr0h	equ	0xFEA
 40037                           fsr0l	equ	0xFE9
 40038                           wreg	equ	0xFE8
 40039                           postinc1	equ	0xFE6
 40040                           postdec1	equ	0xFE5
 40041                           plusw1	equ	0xFE3
 40042                           fsr1h	equ	0xFE2
 40043                           fsr1l	equ	0xFE1
 40044                           indf2	equ	0xFDF
 40045                           postinc2	equ	0xFDE
 40046                           postdec2	equ	0xFDD
 40047                           plusw2	equ	0xFDB
 40048                           fsr2h	equ	0xFDA
 40049                           fsr2l	equ	0xFD9
 40050                           status	equ	0xFD8
 40051                           
 40052 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40053 ;; Defined at:
 40054 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 40055 ;; Parameters:    Size  Location     Type
 40056 ;;		None
 40057 ;; Auto vars:     Size  Location     Type
 40058 ;;		None
 40059 ;; Return value:  Size  Location     Type
 40060 ;;                  1    wreg      void 
 40061 ;; Registers used:
 40062 ;;		None
 40063 ;; Tracked objects:
 40064 ;;		On entry : 0/0
 40065 ;;		On exit  : 0/0
 40066 ;;		Unchanged: 0/0
 40067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40072 ;;Total ram usage:        0 bytes
 40073 ;; Hardware stack levels used:    1
 40074 ;; This function calls:
 40075 ;;		Nothing
 40076 ;; This function is called by:
 40077 ;;		_EXT_INT_Initialize
 40078 ;;		_INT1_CallBack
 40079 ;; This function uses a non-reentrant model
 40080 ;;
 40081                           
 40082                           	psect	text228
 40083  00792A                     __ptext228:
 40084                           	opt stack 0
 40085  00792A                     _INT1_DefaultInterruptHandler:
 40086                           	opt stack 15
 40087                           
 40088                           ; BSR set to: 0
 40089                           ;incstack = 0
 40090  00792A  0012               	return		;funcret
 40091  00792C                     __end_of_INT1_DefaultInterruptHandler:
 40092                           	opt stack 0
 40093                           tosu	equ	0xFFF
 40094                           tosh	equ	0xFFE
 40095                           tosl	equ	0xFFD
 40096                           pclatu	equ	0xFFB
 40097                           pclath	equ	0xFFA
 40098                           tblptru	equ	0xFF8
 40099                           tblptrh	equ	0xFF7
 40100                           tblptrl	equ	0xFF6
 40101                           tablat	equ	0xFF5
 40102                           prodh	equ	0xFF4
 40103                           prodl	equ	0xFF3
 40104                           intcon	equ	0xFF2
 40105                           intcon2	equ	0xFF1
 40106                           intcon3	equ	0xFF0
 40107                           indf0	equ	0xFEF
 40108                           postinc0	equ	0xFEE
 40109                           plusw0	equ	0xFEB
 40110                           fsr0h	equ	0xFEA
 40111                           fsr0l	equ	0xFE9
 40112                           wreg	equ	0xFE8
 40113                           postinc1	equ	0xFE6
 40114                           postdec1	equ	0xFE5
 40115                           plusw1	equ	0xFE3
 40116                           fsr1h	equ	0xFE2
 40117                           fsr1l	equ	0xFE1
 40118                           indf2	equ	0xFDF
 40119                           postinc2	equ	0xFDE
 40120                           postdec2	equ	0xFDD
 40121                           plusw2	equ	0xFDB
 40122                           fsr2h	equ	0xFDA
 40123                           fsr2l	equ	0xFD9
 40124                           status	equ	0xFD8
 40125                           tosu	equ	0xFFF
 40126                           tosh	equ	0xFFE
 40127                           tosl	equ	0xFFD
 40128                           pclatu	equ	0xFFB
 40129                           pclath	equ	0xFFA
 40130                           tblptru	equ	0xFF8
 40131                           tblptrh	equ	0xFF7
 40132                           tblptrl	equ	0xFF6
 40133                           tablat	equ	0xFF5
 40134                           prodh	equ	0xFF4
 40135                           prodl	equ	0xFF3
 40136                           intcon	equ	0xFF2
 40137                           intcon2	equ	0xFF1
 40138                           intcon3	equ	0xFF0
 40139                           indf0	equ	0xFEF
 40140                           postinc0	equ	0xFEE
 40141                           plusw0	equ	0xFEB
 40142                           fsr0h	equ	0xFEA
 40143                           fsr0l	equ	0xFE9
 40144                           wreg	equ	0xFE8
 40145                           postinc1	equ	0xFE6
 40146                           postdec1	equ	0xFE5
 40147                           plusw1	equ	0xFE3
 40148                           fsr1h	equ	0xFE2
 40149                           fsr1l	equ	0xFE1
 40150                           indf2	equ	0xFDF
 40151                           postinc2	equ	0xFDE
 40152                           postdec2	equ	0xFDD
 40153                           plusw2	equ	0xFDB
 40154                           fsr2h	equ	0xFDA
 40155                           fsr2l	equ	0xFD9
 40156                           status	equ	0xFD8
 40157                           
 40158                           	psect	text229
 40159  000000                     __ptext229:
 40160                           	opt stack 0
 40161                           tosu	equ	0xFFF
 40162                           tosh	equ	0xFFE
 40163                           tosl	equ	0xFFD
 40164                           pclatu	equ	0xFFB
 40165                           pclath	equ	0xFFA
 40166                           tblptru	equ	0xFF8
 40167                           tblptrh	equ	0xFF7
 40168                           tblptrl	equ	0xFF6
 40169                           tablat	equ	0xFF5
 40170                           prodh	equ	0xFF4
 40171                           prodl	equ	0xFF3
 40172                           intcon	equ	0xFF2
 40173                           intcon2	equ	0xFF1
 40174                           intcon3	equ	0xFF0
 40175                           indf0	equ	0xFEF
 40176                           postinc0	equ	0xFEE
 40177                           plusw0	equ	0xFEB
 40178                           fsr0h	equ	0xFEA
 40179                           fsr0l	equ	0xFE9
 40180                           wreg	equ	0xFE8
 40181                           postinc1	equ	0xFE6
 40182                           postdec1	equ	0xFE5
 40183                           plusw1	equ	0xFE3
 40184                           fsr1h	equ	0xFE2
 40185                           fsr1l	equ	0xFE1
 40186                           indf2	equ	0xFDF
 40187                           postinc2	equ	0xFDE
 40188                           postdec2	equ	0xFDD
 40189                           plusw2	equ	0xFDB
 40190                           fsr2h	equ	0xFDA
 40191                           fsr2l	equ	0xFD9
 40192                           status	equ	0xFD8
 40193                           
 40194                           	psect	rparam
 40195  0000                     tosu	equ	0xFFF
 40196                           tosh	equ	0xFFE
 40197                           tosl	equ	0xFFD
 40198                           pclatu	equ	0xFFB
 40199                           pclath	equ	0xFFA
 40200                           tblptru	equ	0xFF8
 40201                           tblptrh	equ	0xFF7
 40202                           tblptrl	equ	0xFF6
 40203                           tablat	equ	0xFF5
 40204                           prodh	equ	0xFF4
 40205                           prodl	equ	0xFF3
 40206                           intcon	equ	0xFF2
 40207                           intcon2	equ	0xFF1
 40208                           intcon3	equ	0xFF0
 40209                           indf0	equ	0xFEF
 40210                           postinc0	equ	0xFEE
 40211                           plusw0	equ	0xFEB
 40212                           fsr0h	equ	0xFEA
 40213                           fsr0l	equ	0xFE9
 40214                           wreg	equ	0xFE8
 40215                           postinc1	equ	0xFE6
 40216                           postdec1	equ	0xFE5
 40217                           plusw1	equ	0xFE3
 40218                           fsr1h	equ	0xFE2
 40219                           fsr1l	equ	0xFE1
 40220                           indf2	equ	0xFDF
 40221                           postinc2	equ	0xFDE
 40222                           postdec2	equ	0xFDD
 40223                           plusw2	equ	0xFDB
 40224                           fsr2h	equ	0xFDA
 40225                           fsr2l	equ	0xFD9
 40226                           status	equ	0xFD8
 40227                           
 40228                           	psect	temp
 40229  000046                     btemp:
 40230                           	opt stack 0
 40231  000046                     	ds	12
 40232                           tosu	equ	0xFFF
 40233                           tosh	equ	0xFFE
 40234                           tosl	equ	0xFFD
 40235                           pclatu	equ	0xFFB
 40236                           pclath	equ	0xFFA
 40237                           tblptru	equ	0xFF8
 40238                           tblptrh	equ	0xFF7
 40239                           tblptrl	equ	0xFF6
 40240                           tablat	equ	0xFF5
 40241                           prodh	equ	0xFF4
 40242                           prodl	equ	0xFF3
 40243                           intcon	equ	0xFF2
 40244                           intcon2	equ	0xFF1
 40245                           intcon3	equ	0xFF0
 40246                           indf0	equ	0xFEF
 40247                           postinc0	equ	0xFEE
 40248                           plusw0	equ	0xFEB
 40249                           fsr0h	equ	0xFEA
 40250                           fsr0l	equ	0xFE9
 40251                           wreg	equ	0xFE8
 40252                           postinc1	equ	0xFE6
 40253                           postdec1	equ	0xFE5
 40254                           plusw1	equ	0xFE3
 40255                           fsr1h	equ	0xFE2
 40256                           fsr1l	equ	0xFE1
 40257                           indf2	equ	0xFDF
 40258                           postinc2	equ	0xFDE
 40259                           postdec2	equ	0xFDD
 40260                           plusw2	equ	0xFDB
 40261                           fsr2h	equ	0xFDA
 40262                           fsr2l	equ	0xFD9
 40263                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        57
    BSS         1277
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      83
    BANK0           160    136     147
    BANK1           256    125     241
    BANK2           256      0     245
    BANK3           256      0     176
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1658$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[4]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK1[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1658$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1658$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S983$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S983$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6564273
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
           _TMR3_SetInterruptHandler
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          3     3      0  311952
                                            125 BANK0      3     3      0
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      99
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      31
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2593
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     239
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     239
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     239
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0    1177
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     239
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     221
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     239
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     239
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     239
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     699
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     221
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     135
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5805823
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2269142
                                            125 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148084
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  663461
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  489571
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  311785
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  158035
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  535477
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  499123
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2935216
                                            132 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  200110
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1035557
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     549
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1498950
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  473692
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  316096
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1009218
                                            125 BANK0      5     5      0
                                            102 BANK1     23    20      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9258
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  162961
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  311785
                                            118 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151121
                                            106 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   43958
                                             52 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37564
                                             52 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  190558
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  174085
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  158048
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           5     1      4    4913
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      34
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248071
                                            124 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101368
                                            115 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80839
                                            106 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   66989
                                             92 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26238
                                             52 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19756
                                             32 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           23    20      3    4744
                                             10 BANK0     22    19      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  169004
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     135
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2620
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   93263
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     223
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46271
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2620
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     680
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      62
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     158
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     158
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                 _handle16sInterrupt *
 ---------------------------------------------------------------------------------
 (16) _handle16sInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
   _SysConfigSleep
   _TMR3_SetInterruptHandler
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _handle16sInterrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B0      11       68.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     7D      F1       7       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      53       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C      12        0.0%
DATA                 0      0     67C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Aug 08 19:02:18 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 7920  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 7692  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6A56  
                                   __end_of_AESEncodeLoRa 727A  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 625C  
                                                     l192 774A  
                                                     l460 152A  
                                                     l453 14A2  
                                                     l382 50EE  
                                                     l447 14DA  
                                                     l466 1714  
                                             ?_RADIO_Init 007D  
                                                     l670 6F9E  
                                                     l479 17E6  
                                                     l592 7122  
                                                     l673 6C88  
                                                     l690 5E30  
                                                     l676 6C9A  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 66AE  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 664E  
                                  _ExecuteRxParamSetupReq 428A  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 77CC  
                                      __size_of_AESEncode 02DA  
                                         _timer1ReloadVal 005C  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 611E  
                                   _RADIO_SetLoRaSyncWord 7856  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B16  
                                 __end_of_SwTimersExecute 5906  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00DC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 5A5E  
                     __end_of_RADIO_SetFrequencyHopPeriod 7856  
                             _RADIO_SetFrequencyHopPeriod 784C  
                                              _CheckFlags 66AE  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 75E8  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                                    l1110 3434  
                                                    l1031 11F4  
                                                    l1204 49EC  
                                                    l2012 5714  
                                                    l1133 4F1C  
                                                    l2014 5796  
                                                    l1215 47F4  
                                                    l1231 67C2  
                                                    l1223 76CE  
                                                    l1127 4360  
                                                    l1151 31A6  
                                                    l1063 27E8  
                                                    l1136 4FAA  
                                                    l2121 010A  
                                                    l1049 26F8  
                                                    l2017 53E8  
                                                    l2041 412C  
                                                    l1146 4FDE  
                                                    l1250 768E  
                                                    l2026 53F8  
                                                    l1091 69A6  
                                                    l1083 7374  
                                                    l1244 7474  
                                                    l2133 0262  
                                                    l1238 6FD4  
                                                    l2150 053C  
                                                    l3103 609A  
                                                    l2231 1E74  
                                                    l1079 76E2  
                                                    l2151 0544  
                                                    l2063 4B48  
                                                    l2232 1F1A  
                                                    l1264 6F0A  
                                                    l3113 663C  
                                                    l2241 1F28  
                                                    l2233 1F18  
                                                    l2090 4628  
                                                    l1347 751E  
                                                    l1099 35F6  
                                                    l2307 6344  
                                                    l2171 0978  
                                         _timer3ReloadVal 005E  
                                                    l2236 1F14  
                                                    l2069 632A  
                                                    l1454 1866  
                                                    l2095 57FA  
                                                    l1279 67F4  
                                                    l1297 23E0  
                                                    l2522 2418  
                                                    l2283 1D96  
                                                    l2292 59CC  
                                                    l1469 19CE  
                                                    l1717 5C3A  
                                                    l3166 6D94  
                                                    l1718 5C82  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l1746 556C  
                                                    l2744 6F46  
                                                    l1993 37B2  
                                        _RADIO_WritePower 5266  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4632  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1196 00A1  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                                    _TMR3 000FB2  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 7598  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5F3E  
                                                    _loRa 0200  
                                                    _main 5AFC  
                                                    _rand 69BA  
                          __end_of_UpdateMinMaxChDataRate 5854  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 0046  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00CF  
                                           ComputeMic@key 00CA  
                               __end_of_LORAWAN_RxTimeout 2962  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init 7798  
                                        __end_of_ADC_Read 6F6E  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6A56  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0090  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5636  
                                         _TMR3_Initialize 7202  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00CF  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 78C8  
                                            ___param_bank 000010  
                                              _GetRx1Freq 770E  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 696C  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 658A  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 78F2  
                                        __end_of_INT2_ISR 78E6  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 77C0  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12007 23F4  
                                                   l12201 5150  
                                                   l12041 252C  
                                                   l12033 246C  
                                                   l12017 241A  
                                                   l13001 4FC8  
                                                   l12107 608C  
                                                   l12123 662E  
                                                   l12115 65FC  
                                                   l12203 5154  
                                                   l12043 2536  
                                                   l12117 6608  
                                                   l12205 515E  
                                                   l12053 2584  
                                                   l13005 4FDA  
                                                   l12151 4BC0  
                                                   l12119 660C  
                                                   l12215 517E  
                                                   l12055 258E  
                                                   l12047 2558  
                                                   l13103 1AA8  
                                                   l12311 5312  
                                                   l12145 4B70  
                                                   l12217 5188  
                                                   l12073 2696  
                                                   l12049 2562  
                                                   l12065 268C  
                                                   l13041 1878  
                                                   l12305 530A  
                                                   l12155 4C22  
                                                   l13035 1852  
                                                   l12411 6D78  
                                                   l13203 5582  
                                                   l13211 5628  
                                                   l13131 5A24  
                                                   l13123 59D0  
                                         __end_of___abdiv 68C8  
                                                   l12157 4C24  
                                                   l12181 5110  
                                                   l12173 50F0  
                                                   l12165 50D6  
                                                   l12325 5DE6  
                                                   l13213 5632  
                                                   l13133 5A26  
                                                   l13141 5A40  
                                                   l14101 2EB2  
                                                   l12351 71E2  
                                                   l12095 604E  
                                                   l13063 195A  
                                                   l13055 1912  
                                                   l13047 18B4  
                                                   l12415 6D8A  
                                                   l12407 6D6C  
                                                   l12263 528A  
                                                   l13207 55EA  
                                                   l13135 5A30  
                                                   l13231 1BA8  
                                                   l13223 1B24  
                                                   l14111 2F20  
                                                   l14103 2EC8  
                                                   l12433 5D0E  
                                                   l12097 605A  
                                                   l12185 511A  
                                                   l13073 1972  
                                                   l13065 1968  
                                                   l13049 18EC  
                                                   l12409 6D74  
                                                   l12505 159A  
                                                   l12513 15B6  
                                                   l12329 5E0A  
                                                   l12345 713A  
                                                   l14041 6108  
                                                   l13209 5626  
                                                   l13145 5A50  
                                                   l13305 1D9C  
                                                   l13241 1BEE  
                                                   l13321 1E02  
                                                   l12361 47A2  
                                                   l14105 2EDE  
                                                   l14121 2F60  
                                                   l12355 71F2  
                                                   l12099 605E  
                                                   l12187 5122  
                                                   l13059 193C  
                                                   l12291 52E4  
                                                   l12283 52CC  
                                                   l12259 527E  
                                                   l12451 144C  
                                                   l13411 318C  
                                                   l14035 60F6  
                                                   l14027 60E2  
                                                   l13251 1C42  
                                                   l13315 1DC0  
                                                   l12363 47A6  
                                                   l14131 2F9C  
                                                   l14107 2EF4  
                                                   l14203 019C  
                                                   l15101 37FC  
                                                   l12189 512C  
                                                   l12277 52B2  
                                                   l12461 14E4  
                                                   l12453 146E  
                                                   l13405 311C  
                                                   l13333 2FB8  
                                                   l13149 5A58  
                                                   l13261 1C88  
                                                   l13317 1DF4  
                                                   l13245 1C14  
                                                   l12381 4858  
                                                   l12373 483E  
                                                   l14109 2F0A  
                                                   l12703 4932  
                                                   l13087 19D2  
                                                   l13079 19B0  
                                                   l12287 52D8  
                                                   l12279 52BE  
                                                   l13175 417E  
                                                   l13167 4146  
                                                   l13271 1CC6  
                                                   l13247 1C2A  
                                                   l13319 1DF6  
                                                   l12375 4842  
                                                   l13159 6B2A  
                                                   l14119 2F32  
                                                   l14127 2F7E  
                                                   l14063 637C  
                                                   l14311 046E  
                                                   l14207 01AC  
                                                   l12393 6B7C  
                                                   l13097 1A70  
                                                   l12473 1520  
                                                   l12449 142A  
                                                   l12457 14AE  
                                                   l13193 4234  
                                                   l13185 41E8  
                                                   l13281 1CFE  
                                                   l13265 1CAE  
                                                   l13249 1C3C  
                                                   l13521 3690  
                                                   l13601 433E  
                                                   l14065 6380  
                                                   l14241 02B4  
                                                   l15051 6430  
                                                   l15035 63CA  
                                                   l11923 6DAA  
                                                   l12563 16FC  
                                                   l12555 16CA  
                                                   l12547 1686  
                                                   l12475 1526  
                                                   l12459 14C0  
                                                   l13371 306A  
                                                   l13347 2FE6  
                                                   l13339 2FCE  
                                                   l14083 66F0  
                                                   l14075 66C4  
                                                   l12731 5984  
                                                   l12651 67E8  
                                                   l13523 36C6  
                                                   l12619 7470  
                                                   l14091 2DC2  
                                                   l14315 0486  
                                                   l15203 4040  
                                                   l14149 625E  
                                                   l12389 6B44  
                                                   l12581 17A0  
                                                   l12557 16D6  
                                                   l12469 1514  
                                                   l12565 171E  
                                                   l13381 3090  
                                                   l13365 3046  
                                                   l12725 595E  
                                                   l13285 1D10  
                                                   l12645 67D2  
                                                   l13517 3678  
                                                   l14229 0248  
                                                   l15125 21EC  
                                                   l15117 2132  
                                                   l11951 4E04  
                                                   l15063 57AC  
                                                   l12591 17DC  
                                                   l12495 1570  
                                                   l13367 305A  
                                                   l12639 5C18  
                                                   l14079 66DA  
                                                   l12727 5964  
                                                   l13199 427A  
                                                   l13711 1FA6  
                                                   l12663 6816  
                                                   l13519 368C  
                                                   l13615 43C8  
                                                   l14095 2E72  
                                                   l14503 09E2  
                                                   l14407 0734  
                                                   l14351 05A8  
                                                   l14319 0494  
                                                   l14247 02C2  
                                                   l15127 2206  
                                                   l15135 229E  
                                                   l11961 71CC  
                                                   l15073 5844  
                                                   l12585 17BC  
                                                   l12577 1790  
                                                   l13377 307A  
                                                   l13449 66A8  
                                                   l12761 2BFE  
                                                   l13289 1D28  
                                                   l13465 69B0  
                                                   l12657 6804  
                                                   l12649 67E0  
                                                   l12817 6798  
                                                   l13553 3400  
                                                   l14097 2E86  
                                                   l14513 09F4  
                                                   l14521 0A28  
                                                   l14417 0788  
                                                   l14409 074C  
                                                   l14281 0434  
                                                   l14185 010C  
                                                   l15209 4096  
                                                   l15075 5848  
                                                   l12691 48F4  
                                                   l12755 2BDE  
                                                   l13299 1D6E  
                                                   l13723 201C  
                                                   l13627 6ACA  
                                                   l12659 680C  
                                                   l12907 7368  
                                                   l12819 679E  
                                                   l13555 3414  
                                                   l14099 2E9C  
                                                   l14531 0A66  
                                                   l14523 0A2E  
                                                   l14451 0810  
                                                   l14443 07B4  
                                                   l14427 078E  
                                                   l14267 0402  
                                                   l14347 057C  
                                                   l14179 00CE  
                                                   l15243 4AF2  
                                                   l15147 2342  
                                                   l11949 4DB4  
                                                   l15093 37A2  
                                                   l13805 76F2  
                                                   l11957 71B0  
                                                   l11893 2A5C  
                                                   l12685 48D0  
                                                   l12677 48B8  
                                                   l12765 2C26  
                                                   l12749 2BC8  
                                                   l13629 6AEA  
                                                   l12941 6F28  
                                                   l12909 7370  
                                                   l12853 499E  
                                                   l13573 3506  
                                                   l13901 4496  
                                                   l14517 0A1C  
                                                   l14453 0818  
                                                   l14429 07A0  
                                                   l15421 648E  
                                                   l15165 5704  
                                                   l16301 58FC  
                                                   l11991 6830  
                                                   l15087 3776  
                                                   l15095 37A6  
                                                   l15503 5EEE  
                                                   l11895 2A66  
                                                   l12695 4918  
                                                   l12791 2D3E  
                                                   l12775 2C6E  
                                                   l12767 2C4E  
                                                   l12759 2BF2  
                                                   l12871 4A50  
                                                   l12863 4A36  
                                                   l12839 6FD0  
                                                   l13575 3510  
                                                   l13567 34AC  
                                                   l14519 0A22  
                                                   l14439 07A6  
                                                   l14359 05B4  
                                                   l14279 041C  
                                                   l14615 27EC  
                                                   l15423 64A0  
                                                   l15239 4AEC  
                                                   l12785 2CF0  
                                                   l13729 2072  
                                                   l13649 1E6C  
                                                   l13497 35D6  
                                                   l13489 35A6  
                                                   l12881 6EDC  
                                                   l12865 4A3A  
                                                   l13569 34B6  
                                                   l13577 3514  
                                                   l14393 072E  
                                                   l14609 27DA  
                                                   l14633 2912  
                                                   l15433 64B8  
                                                   l15417 6488  
                                                   l13833 53E0  
                                                   l15169 5716  
                                                   l15193 4010  
                                                   l15249 4B0E  
                                                   l12779 2C86  
                                                   l14707 1256  
                                                   l14731 1336  
                                                   l13675 1EDE  
                                                   l13931 54FC  
                                                   l13923 54D8  
                                                   l14563 0AD8  
                                                   l14539 0A76  
                                                   l14379 06AC  
                                                   l14299 045A  
                                                   l14627 289E  
                                                   l15427 64AE  
                                                   l15451 6E78  
                                                   l15195 401C  
                                                   l15187 3FF4  
                                                   l15259 4B44  
                                                   l11997 6866  
                                                   l12797 2DAE  
                                                   l14725 1320  
                                                   l14661 0D4A  
                                                   l13693 1F3A  
                                                   l13597 431C  
                                                   l14469 08E4  
                                                   l14557 0AA0  
                                                   l14629 28A2  
                                                   l15437 64BE  
                                                   l15269 62FE  
                                                   l13837 53F0  
                                                   l13829 53D2  
                                                   l15527 3E8E  
                                                   l12975 4F20  
                                                   l12991 4FAE  
                                                   l14735 135E  
                                                   l14719 12B2  
                                                   l14671 0F84  
                                                   l13695 1F42  
                                                   l13927 54E6  
                                                   l13871 3342  
                                                   l14479 0980  
                                                   l14591 2774  
                                                   l14575 26EA  
                                                   l14639 293C  
                                                   l14903 5AAE  
                                                   l14751 6886  
                                                   l15447 6E72  
                                                   l15455 6E8A  
                                                   l15463 6BF4  
                                                   l13697 1F50  
                                                   l13945 5516  
                                                   l13937 5508  
                                                   l13873 334C  
                                                   l13881 75C2  
                                                   l16417 5B72  
                                                   l14827 3946  
                                                   l12995 4FB8  
                                                   l12987 4FA8  
                                                   l14683 1122  
                                                   l14595 2782  
                                                   l14923 5AE6  
                                                   l14763 689C  
                                                   l15467 6BFA  
                                                   l16427 5B88  
                                                   l14837 398E  
                                                   l14829 395C  
                                                   l14669 0E50  
                                                   l13949 5522  
                                                   l14597 279C  
                                                   l14917 5ADC  
                                                   l14757 6890  
                                                   l15751 6726  
                                                   l15671 46A4  
                                                   l12999 4FC4  
                                                   l14679 1058  
                                                   l13887 43E0  
                                                   l14919 5AE2  
                                                   l14783 68C4  
                                                   l14775 68B6  
                                                   l14767 68A2  
                                                   l14863 51F6  
                                                   l14855 51D2  
                                                   l16287 585C  
                                  __end_of_SysConfigSleep 618E  
                                                   l14689 1124  
                                                   l14769 68A6  
                                                   l14953 3C60  
                                                   l13985 460A  
                                                   l16297 58F6  
                                                   l15659 4666  
                                                   l14699 11DC  
                                                   l13899 4492  
                                                   l14779 68BE  
                                                   l14867 5210  
                                                   l13979 4574  
                                                   l16299 58F8  
                                                   l15589 3F3E  
                                                   l15749 6722  
                                                   l14877 5240  
                                                   l14975 3ACE  
                                                   l14879 5244  
                                                   l14899 5A94  
                                                   l14987 7344  
                                                   l15891 626E  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                              _FillSubKey 6B3A  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 78FC  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 781A  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 60AC  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 664E  
                                                   u12520 6DBA  
                                                   u13260 14D4  
                                       ??_EnableChannels1 006D  
                                                   u12560 685A  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _T3CON 000FB1  
                                                   u13265 14CA  
                                                   _LATD1 007C61  
                                                   u12730 5FCA  
                                    RxJoinResponse@status 0001  
                                                   u14155 1836  
                                                   _LATD3 007C63  
                                                   _LATD4 007C64  
                                                   u13365 15CE  
                                                   u12567 6850  
                       __end_of_AckRetransmissionCallback 4B4E  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u13730 2D0C  
                                                   u17010 1282  
                                                   u16130 04D2  
                                                   u13715 2CA4  
                                                   u13591 486E  
                                                   u14480 1BA6  
                                                   u16320 0850  
                                                   u16160 05A4  
                                                   u14705 312E  
                                                   u13745 2D2E  
                                                   u17025 12A2  
                                                   u15425 44B8  
                                                   u16058 041A  
                                                   u13755 2D50  
                                                   u17035 12C4  
                                                   u16180 06A6  
                                                   u17300 3CE6  
                                                   u15268 53C0  
                                                   u15605 4586  
                                                   u16238 071C  
                                                   u16158 056A  
                                                   u14680 30EA  
                                                   u17305 3CDC  
                                                   u17330 3A42  
                                                   u17340 3A58  
                                                   u14764 6996  
                                                   u15900 017A  
                                                   u15628 4616  
                                                   u15580 4532  
                                                   u14765 6990  
                                                   u15565 61AC  
                                                   u17350 3B54  
                                          __CFG_DEBUG$OFF 000000  
                                                   u14695 310C  
                                                   u17280 3BD4  
                                                   u17345 3A4E  
                                                   u18065 646C  
                                                   u17530 37CA  
                                                   u16458 0A54  
                                                   u17290 3BEA  
                                                   u17355 3B4A  
                                                   u15595 4564  
                                                   u16900 0FC4  
                                                   u15748 636A  
                                                   u16388 09D0  
                                                   u16645 2728  
                                                   u16910 0FE2  
                                                   u17630 22F2  
                                                   u17295 3BE0  
                                                   u16920 10E6  
                                                   u17545 37EC  
                                                   u17555 380E  
                                                   u16915 0FD8  
                                                   u16925 10DC  
                                                   u16845 0B5E  
                                                   u15981 029E  
                                                   u17645 2332  
                                                   u16855 0BD8  
                                                   u16775 28BC  
                                                   u17655 235C  
                                                   u17760 4054  
                                                   u16865 0D7E  
                                                   u18490 6292  
                                                   u16875 0DF8  
                                                   u17860 4AE6  
                                                   u19438 58E4  
                                                   u17775 4086  
                                                   u17928 4B32  
                                                   u17785 40A8  
                                                   u19727 6274  
                                                   u17968 6318  
                                                   u17888 4B0C  
                                                   u19737 71B6  
                                         __end_of___lwmod 6D9E  
                                                   i2l242 6AA2  
                                           ?_RADIO_RxDone 0001  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR3H 000FB3  
                                                   _TMR1L 000FCE  
                                                   _TMR3L 000FB2  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 787C  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                       __size_of_TMR3_SetInterruptHandler 000A  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7908  
                                 ?_SetReceptionNotOkState 0001  
                               ?_TMR3_SetInterruptHandler 0064  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 77B4  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                        __end_of_TMR3_ISR 77A6  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 00EE  
                          ??_TMR3_DefaultInterruptHandler 0001  
                                 __end_of_PIN_MANAGER_IOC 7874  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6C9E  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0052  
                          LORAWAN_RxDone@frmPayloadLength 017A  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 777C  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 0178  
                                  _UpdateJoinSuccessState 4506  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 7824  
                                              _ComputeMic 68C8  
                                 __end_of_TMR1_Initialize 72A0  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 7894  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4864  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2DB6  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 750C  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 0169  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 26C4  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 17FA  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 53FC  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 00D6  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 7742  
                                            __end_of_main 5B98  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 6A08  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5F3E  
                                        _SetJoinFailState 72EC  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 75CE  
                                    _ExecuteRxTimingSetup 7310  
                                       __end_of_IOCB4_ISR 7598  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00BE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 789C  
                                               ??_AESCmac 00C3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00E8  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E2  
                                          ??_RADIO_TxDone 00D2  
                                         _TMR3_StartTimer 78F8  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 790C  
                                   _TMR3_InterruptHandler 01EF  
                       __end_of_LORAWAN_LinkCheckCallback 4136  
                          __end_of_SetReceptionNotOkState 6394  
                             __end_of_UpdateReceiveDelays 6B3A  
                         __end_of_AssembleEncryptionBlock 59B8  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6D9E  
                                              _RxDataDone 70A2  
                                          _EnableChannels 76A8  
                                      __size_of_LoRaSleep 0020  
                               ??_PrepareJoinRequestFrame 00D3  
                                          _HALSPICSAssert 7910  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6C9E  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 76E6  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 57A0  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 56EC  
                                _RADIO_FSKPacketSent$1215 00DA  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 7356  
                                                  _T1GCON 000FCC  
                                                  _T3GCON 000FB4  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 351E  
                                 __end_of_TMR3_Initialize 722A  
                  __end_of_LORAWAN_ReceiveWindow2Callback 53FC  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 5334  
                                                  i2l1347 7572  
                                                  i2l2501 0054  
                                                  i2l2503 0064  
                                                  i2l2507 006E  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2722 770A  
                                                  i2l2497 0038  
                                                  i2l2499 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9941 4D18  
                                                  i2l9939 4CC8  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00D6  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 029E  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 77F0  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FE6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 7752  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 60AC  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 7378  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 017D  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 7926  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 7924  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 7100  
                                               ??___abdiv 0065  
                                                  ___lmul 5D3A  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 7900  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 59B8  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 681E  
                                                  _memset 71D8  
                                                  clear_0 5464  
                                                  clear_1 5476  
                                                  clear_2 5482  
                                                  clear_3 548E  
                                                  clear_4 549A  
                                                  clear_5 54A6  
                                                  clear_6 54B2  
                                 SwTimerIsRunning@timerId 0064  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 76BE  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 792A  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 7928  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 7914  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 008D  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4966  
                                  __end_of_ExecuteLinkAdr 36D0  
                                      ??_ExecuteDutyCycle 0066  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR3_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 6F00  
                              _LORAWAN_SetChannelIdStatus 6EC8  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007D  
                                           AESEncode@aux2 007C  
                                           AESEncode@aux3 007E  
                                 __end_of_TMR1_WriteTimer 7528  
                                   __end_of_SwTimerCreate 6262  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00CA  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 7560  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 73BC  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DC  
                                          ??_LORAWAN_Send 00DA  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 54B8  
                           __end_of_RADIO_FSKPayloadReady 5AFC  
                                          _RADIO_Transmit 2FA6  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 72A0  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6C14  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 0172  
                                          _maxPayloadSize FF6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                                   __end_of_TMR3_CallBack 7544  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 786A  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 741C  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 4F02  
                              __end_of_handle16sInterrupt 770E  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 739A  
                                            __pidataBANK3 7732  
                                     ??_SYSTEM_Initialize 0066  
                                 __end_of_TMR3_StartTimer 78FC  
                              __end_of_DIO4_ISR_Lora_Init 791E  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                               ?_TMR3_ISR 0001  
                                _RADIO_WriteConfiguration 1382  
                                    __size_of_readAndSend 0066  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF9B  
                               __size_of_LORAWAN_Mainloop 003A  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 7928  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 7926  
                                __end_of_RADIO_WritePower 5334  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 778A  
                                       LORAWAN_RxDone@hdr 017B  
                                            ??_RADIO_DIO0 00E4  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 63FA  
                                         _UpdateFrequency 6E8E  
                                  _AutomaticReplyCallback 743C  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 016A  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 700C  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 7378  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 791E  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput 791C  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 7824  
                                        RADIO_DIO0@opMode 00E7  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0064  
                      __end_of_IncludeMacCommandsResponse 1E0E  
                              _IncludeMacCommandsResponse 1B16  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00DC  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 76D2  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 73DC  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 3194  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3E80  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00E8  
                                              __pbssBANK1 017D  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 750C  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 611E  
                                        ?_TMR3_Initialize 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 7894  
                                              __pnvCOMRAM 005A  
                                    __end_of_RADIO_SetCRC 784C  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 5266  
                              __end_of_RADIO_RxFSKTimeout 6FA4  
                                    __end_of_RADIO_TxDone 3D1E  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 64C4  
                                      __end_of_RADIO_DIO1 6E8E  
                                      __end_of_RADIO_DIO2 6C14  
                                      __end_of_RADIO_DIO3 767A  
                                      __end_of_RADIO_DIO4 7662  
                                      __end_of_RADIO_DIO5 764A  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A02  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 74D2  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 67C6  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                            readAndSend@j 00DE  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 43D2  
                        __end_of_TMR3_SetInterruptHandler 7806  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0006  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00A8  
                                      EncryptFRMPayload@j 00A9  
                                      EncryptFRMPayload@k 00A7  
                                              ??_TMR1_ISR 002A  
                                              ??_TMR3_ISR 0001  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 75B4  
                                        _ValidateRxOffset 76BE  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 77C0  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A02  
                                                 _AESCmac 17FA  
                                  ComputeMic@bufferLength 00CE  
                                 __size_of_ADC_SelChannel 0018  
                                 __end_of_UpdateDataRange 4A5C  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10603 6DE8  
                                                 i2l10621 4E36  
                                                 i2l10631 4EE8  
                                                 i2l10633 4EEA  
                                                 i2l10627 4E86  
                                    EncryptFRMPayload@dir 0097  
                                      _RADIO_GetPacketSnr 78C2  
                                    EncryptFRMPayload@key 009C  
                                   __end_of_UpdateTxPower 788C  
                                     _RADIO_SetIQInverted 7838  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00EE  
                                     i2_SwTimersInterrupt 4E16  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 7310  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 767A  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 00CD  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 5E42  
                             PrepareJoinRequestFrame@iCtr 00DB  
                               _IOCB4_SetInterruptHandler 7810  
                       __end_of_SetCallbackSoftwareTimers 56EC  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4A5C  
                             PrepareJoinRequestFrame@mhdr 00D9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00BC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FFA2  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D5  
                                  _InitDefault868Channels 6394  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00D9  
                                   _StopAllSoftwareTimers 6A08  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 6EC8  
                                     AssemblePacket@fCtrl 00D3  
                                                 ___abdiv 6876  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0030  
                                              AESEncode@i 007F  
                                               _AESEncode 23EA  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 77CC  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                        ?_TMR3_StartTimer 0001  
                                 __end_of_UpdateDutyCycle 703E  
                                                 ___lldiv 6036  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 65EC  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6D60  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 53FC  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 03A0  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2DB6  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00A1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5AFC  
                                                 __ptext1 6262  
                                                 __ptext2 6F38  
                                                 __ptext3 7602  
                                                 __ptext4 611E  
                                                 __ptext5 73BC  
                                                 __ptext6 7202  
                                                 __ptext7 78F8  
                                                 __ptext8 77FC  
                                                 __ptext9 727A  
                                    __end_of_LORAWAN_Init 676A  
                                    __end_of_LORAWAN_Join 5CB2  
                                    __end_of_LORAWAN_Send 557A  
                                           _DIO0_ISR_Lora 78F2  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D1E  
                                               _IOCB4_ISR 757C  
                              ExecuteNewChannel@frequency 0073  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A62  
                                   _OSCILLATOR_Initialize 77B4  
                          __end_of_UpdateJoinSuccessState 4632  
                                 __size_of_LORAWAN_TxDone 0888  
                              __end_of_RADIO_SetBandwidth 78B4  
                                         _RADIO_GetStatus 78C8  
                                               _T3CONbits 000FB1  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 78E6  
                                             _SwTimerStop 74F0  
                                                 _payload 01C4  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01D9  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 335C  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 78DA  
                              __size_of_SYSTEM_Initialize 0020  
                    __end_of_LORAWAN_SetNetworkSessionKey 7184  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 715A  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00CC  
                                    end_of_initialization 54B8  
                                 _CreateAllSoftwareTimers 691A  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 781A  
                                   ??_RADIO_FSKPacketSent 00D2  
                                          _GenerateSubkey 4864  
                                   _RADIO_WatchdogTimeout 6C5C  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 681E  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 3FDE  
                                          ??_SwTimerStart 008D  
                                               i2u1093_40 6DF8  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 788C  
                                   _UpdateChannelIdStatus 475E  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 77E4  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 6F00  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 0094  
                                        _LORAWAN_GetState 78B4  
                                    _HALResetPinMakeInput 7918  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 78A4  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 7900  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6E1A  
                            __end_of_RADIO_SetFSKSyncWord 715A  
                                      LORAWAN_Join@result 00DD  
                                      __end_of_CheckFlags 670C  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3E80  
                                      _DIO0_ISR_Lora_Init 77E4  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 005A  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                            ??_FillSubKey 0069  
                                        RxDataDone@status 0067  
                            SwTimersInterrupt@timeElapsed 0084  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 7252  
                               __size_of_ExecuteDevStatus 000A  
                                _TMR3_SetInterruptHandler 77FC  
                            __end_of_RADIO_WriteFrequency 50BE  
                              __end_of_RADIO_RegisterRead 72EC  
                       __end_of_LORAWAN_GetMaxPayloadSize 6AF0  
                          __end_of_HALResetPinOutputValue 76FA  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 72C6  
                                __end_of_ConfigureRadioTx 6C5C  
                                              _portNumber 01D8  
                                         _RADIO_RxTimeout 722A  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 351E  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02F4  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6CE0  
                                          _TMR1_ReadTimer 74B4  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4966  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 0036  
                                           RADIO_RxDone@i 00E3  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D4  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00F1  
                                      __end_of_GetRx1Freq 7720  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00CF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 009E  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5EC0  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 776E  
                                         _RADIO_WriteMode 50BE  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D1  
                                      __end_of_FillSubKey 6B84  
                                 _AssembleEncryptionBlock 5906  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF6D  
                                     AESEncodeLoRa@useKey 0084  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 7884  
                                      LORAWAN_Send@buffer 00D7  
                                          __end_of_Random 739A  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 76E6  
                            __end_of_INTERRUPT_Initialize 7908  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 78C2  
                                 __end_of_RADIO_GetStatus 78CE  
                                          __end_of___lmul 5DC0  
                                      LORAWAN_Send@result 00DB  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 73FC  
                                           __pidataCOMRAM 7874  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0080  
                                       __size_of_TMR1_ISR 000E  
                                       __size_of_TMR3_ISR 000E  
                                          _ADC_SelChannel 7602  
                                      __end_of_ComputeMic 691A  
                                               Random@max 0077  
                                          __end_of_memcpy 6876  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6D22  
                                  __end_of_TMR1_ReadTimer 74D2  
                                          __end_of_memset 7202  
                                         _SPI2_Initialize 77F0  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 7842  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 5196  
                                            _RADIO_TxDone 3B94  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 53FC  
                                      _handle16sInterrupt 76FA  
                                          _ConfigureRadio 5B98  
                                      LORAWAN_RxDone@mhdr 016B  
                                      LORAWAN_RxDone@temp 0171  
                                            ??_RxDataDone 0068  
                                      _DIO4_ISR_Lora_Init 791C  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer 74F0  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 7496  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0066  
                         __size_of_PIN_MANAGER_Initialize 0048  
                           __end_of_TMR_OverrideRemaining 6036  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 7602  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 009F  
                                            AESCmac@input 00C0  
                        __end_of_LORAWAN_SetDeviceAddress 7632  
                                         ?_GenerateSubkey 0094  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 75B4  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 75CE  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                     ?_handle16sInterrupt 0001  
                                __end_of_ValidateRxOffset 76D2  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 78A4  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 4FE2  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6DDC  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 7904  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5A5E  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 7918  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00DD  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 6460  
                          __end_of_AutomaticReplyCallback 745A  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0026  
                                    _macEndDevCmdReplyLen FF94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F2  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BC  
                                 __end_of_RADIO_RxTimeout 7252  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 70D2  
                                ??_SetReceptionNotOkState 00A0  
                                          ??_TMR_ISR_lora 002A  
                                  __end_of_ADC_SelChannel 761A  
                                         ??_DIO0_ISR_Lora 0001  
                                    ??_handle16sInterrupt 0001  
                                             __pdataBANK1 01C8  
                                             __pdataBANK3 03A0  
                                       _ValidateDataRange 6FA4  
                                      __end_of_ExtractMic 6CE0  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 7100  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 745A  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor 789C  
                                      _RADIO_RxFSKTimeout 6F6E  
                                                ?_AESCmac 00BC  
                                  __size_of_TMR1_CallBack 001C  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 007B  
                                            AESEncode@key 006C  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 5C26  
                                          _LORAWAN_RxDone 0098  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0AFA  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5D3A  
                  __end_of_LORAWAN_EnterContinuousReceive 658A  
                 __size_of_LORAWAN_EnterContinuousReceive 0062  
                          _LORAWAN_EnterContinuousReceive 6528  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 7922  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                  __size_of_TMR3_CallBack 001C  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D2A  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 5196  
                 __end_of_UnconfirmedTransmissionCallback 632E  
                __size_of_UnconfirmedTransmissionCallback 0066  
                         _UnconfirmedTransmissionCallback 62C8  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                                 _RADIO_ReceiveStart$1199 009C  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01B4  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 712E  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 70A2  
       __end_of_ResetParametersForUnconfirmedTransmission 7760  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 7752  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01E9  
                                               _bandwidth FF8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 670C  
                                            _LORAWAN_Join 5C26  
                                            _LORAWAN_Send 54BE  
                                  RADIO_FSKPayloadReady@i 00E3  
                                       _ValidateFrequency 676A  
                                               __pnvBANK1 01E9  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 4FE2  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 790C  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 700C  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 6B84  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 335C  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                __size_of_TMR3_Initialize 0028  
                                               _macBuffer 04E0  
                                               _dioStatus 00F0  
                               __end_of_ValidateDataRange 6FD8  
                           RADIO_FSKPayloadReady@irqFlags 00E2  
                                       _SwTimersInterrupt 4B4E  
                                       ??_SwTimersExecute 00DD  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 7810  
                                           __pmediumconst FE6C  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 77FC  
                                               __ptext100 1B16  
                                               __ptext101 78C2  
                                               __ptext110 66AE  
                                               __ptext102 59B8  
                               __end_of_ValidateChannelId 7478  
                                               __ptext111 3A02  
                                               __ptext103 4136  
                                               __ptext200 78B4  
                                               __ptext120 78CE  
                                               __ptext112 0AFA  
                                               __ptext104 5906  
                                               __ptext201 7720  
                                               __ptext121 7478  
                                               __ptext113 6D22  
                                               __ptext105 557A  
                                               __ptext210 7924  
                                               __ptext202 778A  
                                               __ptext130 7894  
                                               __ptext122 2BB6  
                                               __ptext114 741C  
                                               __ptext106 6C9E  
                                               __ptext211 6A56  
                                               __ptext131 7838  
                                               __ptext123 72A0  
                                               __ptext115 78C8  
                                               __ptext107 5E42  
                                               __ptext220 7926  
                                               __ptext212 6DDC  
                                               __ptext204 7798  
                                               __ptext140 2FA6  
                                               __ptext132 7842  
                                               __ptext124 776E  
                                               __ptext116 6528  
                                               __ptext108 5F3E  
                                               __ptext221 78E0  
                                               __ptext213 7560  
                                               __ptext205 7528  
                                               __ptext141 1382  
                                               __ptext133 5B98  
                                               __ptext125 5C26  
                                               __ptext117 70A2  
                                               __ptext109 60AC  
                                               __ptext222 7598  
                                               __ptext214 4E16  
                                               __ptext206 7922  
                                               __ptext150 68C8  
                                               __ptext142 5266  
                                               __ptext134 789C  
                                               __ptext126 75CE  
                                               __ptext118 7752  
                                               __ptext223 78E6  
                                               __ptext215 4C3C  
                                               __ptext207 76FA  
                                               __ptext151 17FA  
                                               __ptext143 64C4  
                                               __ptext135 78A4  
                                               __ptext127 664E  
                                               __ptext119 7760  
                                               __ptext224 7928  
                                               __ptext216 74D2  
                                               __ptext208 77A6  
                                               __ptext160 5636  
                                               __ptext152 4864  
                                               __ptext144 658A  
                                               __ptext136 784C  
                                               __ptext128 4F02  
                                               __ptext225 78EC  
                                               __ptext217 786A  
                                               __ptext209 7544  
                                               __ptext161 5EC0  
                                               __ptext153 6B3A  
                                               __ptext145 4632  
                                               __ptext137 712E  
                                               __ptext129 6C14  
                                               __ptext226 75E8  
                                               __ptext218 757C  
                                               __ptext170 78D4  
                                               __ptext162 3E80  
                                               __ptext154 7252  
                                               __ptext146 7378  
                                               __ptext138 5DC0  
                                               __ptext227 78F2  
                                               __ptext219 78DA  
                                               __ptext171 4FE2  
                                               __ptext163 57A0  
                                               __ptext155 23EA  
                                               __ptext147 69BA  
                                               __ptext139 78AC  
                                               __ptext228 792A  
                                               __ptext180 76E6  
                                               __ptext172 65EC  
                                               __ptext164 6A08  
                                               __ptext156 3D1E  
                                               __ptext148 5D3A  
                                               __ptext229 0000  
                                               __ptext181 7914  
                                               __ptext173 7496  
                                               __ptext165 7856  
                                               __ptext157 2962  
                                               __ptext149 6D60  
                                               __ptext190 4B4E  
                                               __ptext182 7918  
                                               __ptext174 7860  
                                               __ptext166 386C  
                                               __ptext158 670C  
                                               __ptext191 4D2A  
                                               __ptext183 36D0  
                                               __ptext175 7742  
                                               __ptext167 7070  
                                               __ptext159 777C  
                                               __ptext192 74B4  
                                               __ptext184 6036  
                                               __ptext176 790C  
                                               __ptext168 50BE  
                                               __ptext193 6CE0  
                                               __ptext185 74F0  
                                               __ptext177 7910  
                                               __ptext169 72C6  
                                               __ptext194 6394  
                                               __ptext186 5CB2  
                                               __ptext178 6FD8  
                                               __ptext195 63FA  
                                               __ptext187 5FBA  
                                               __ptext179 71AE  
                                               __ptext196 71D8  
                                               __ptext188 6D9E  
                                               __ptext197 681E  
                                               __ptext189 750C  
                                               __ptext198 691A  
                                               __ptext199 61F8  
                                       _EncryptFRMPayload 4136  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0084  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 475E  
                                                ?___lwmod 0072  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5DC0  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5636  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0AFA  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 1382  
                                      ?_EncryptFRMPayload 0094  
                                     __end_of_readAndSend 62C8  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 73FC  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 782E  
                           __end_of_RADIO_SetLoRaSyncWord 7860  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1E0E  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00D5  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4D2A  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00E6  
                                       _DutyCycleCallback 2102  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6DDC  
                                                _ADC_Init 778A  
                                                _ADC_Read 6F38  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00A2  
                                __end_of_LORAWAN_GetState 78BC  
                                 __end_ofi2_TMR_SwapTimer 6E1A  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00D2  
                                      AssemblePacket@port 00CA  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2BB6  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6E54  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 7904  
                                           _SwTimerCreate 61F8  
                          __end_of_InitDefault868Channels 63FA  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 7544  
                               __end_of_ValidateFrequency 67C6  
                                        _SwTimerIsRunning 741C  
                                        _ExecuteLinkCheck 703E  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 78EC  
                                _LORAWAN_SetDeviceAddress 761A  
                                                _INT2_ISR 78E0  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 78AC  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00EC  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6D22  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                                        _ExecuteDutyCycle 696C  
                                         _HALDIO5PinValue 78D4  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4C3C  
                                __size_of_TMR1_WriteTimer 001C  
                     __size_of_INTERRUPT_InterruptManager 0088  
                              __end_of_DIO2_ISR_Lora_Init 77D8  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0096  
                                        GenerateSubkey@k2 0098  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0076  
                              ??_TMR3_SetInterruptHandler 0066  
                                           _TMR3_CallBack 7528  
                               __end_of_EncryptFRMPayload 428A  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 0170  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 65EC  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0064  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 00E8  
                                    __end_of_IO_pins_init 7732  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 57A0  
                           EncryptFRMPayload@bufferLength 0096  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 77A6  
                                ConfigureRadioTx@dataRate 007A  
                                                _TMR3_ISR 7798  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6AF0  
                         __size_of_SetReceptionNotOkState 0066  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2102  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init 77D8  
                               __end_of_DutyCycleCallback 23EA  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 5FBA  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                __size_of_TMR3_StartTimer 0004  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0080  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3B94  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 0174  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 5410  
                                               copy_data1 5430  
                                               copy_data2 5450  
                                   ?_INTERRUPT_Initialize 0001  
                                     _EncKeySchedule$4148 0068  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 7920  
                             __end_of_RADIO_SetIQInverted 7842  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6AA4  
                                             _RADIO_Reset 6FD8  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 72C6  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 43D2  
                             __end_ofi2_SwTimersInterrupt 4F02  
                               _LORAWAN_GetMaxPayloadSize 6AA4  
                              LORAWAN_RxDone@extractedMic 016C  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0098  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00C2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                   handle16sInterrupt@counterSleepTimeout 0045  
                                          ?_TMR3_CallBack 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 71D8  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 7560  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 6262  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 0056  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5E42  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 00CA  
                                    AssemblePacket@buffer 00CB  
                                        SwTimersExecute@i 00E1  
                                      ??_ValidateDataRate 0064  
                                       ??_TMR3_Initialize 0066  
                                _TMR1_SetInterruptHandler 7806  
                                  _IOCB4_InterruptHandler 01EB  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 776E  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 7760  
                                   _TMR1_InterruptHandler 01ED  
                                        ??_GenerateSubkey 009A  
                                        _CountfOptsLength 557A  
                                              _HALSPISend 7860  
                                     ?_ComputeSessionKeys 0094  
                                          _rxWindowOffset FF7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 2FA6  
                                 __size_of_SysConfigSleep 0070  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 7356  
                                           _UpdateTxPower 7884  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 712E  
                                         _allocatedTimers 00EF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 777C  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 78BC  
                                                __ptext10 78FC  
                                                __ptext11 6B84  
                                                __ptext20 77CC  
                                                __ptext12 77B4  
                                                __ptext21 7810  
                                                __ptext13 73DC  
                                                __ptext30 77F0  
                                                __ptext22 77D8  
                                                __ptext14 77C0  
                                                __ptext31 73FC  
                                                __ptext23 77E4  
                                                __ptext15 7806  
                                                __ptext40 4A5C  
                                                __ptext32 715A  
                                                __ptext24 7904  
                                                __ptext16 7900  
                                                __ptext41 3FDE  
                                                __ptext33 761A  
                                                __ptext25 70D2  
                                                __ptext17 78BC  
                                                __ptext50 7662  
                                                __ptext42 56EC  
                                                __ptext34 7184  
                                                __ptext26 781A  
                                                __ptext18 791C  
                                                __ptext51 6BCC  
                                                __ptext43 5334  
                                                __ptext35 6E1A  
                                                __ptext27 7824  
                                                __ptext19 791E  
                                                __ptext60 5A5E  
                                                __ptext52 6E54  
                                                __ptext44 6C5C  
                                                __ptext36 5854  
                                                __ptext28 7920  
                                                __ptext61 26C4  
                                                __ptext53 722A  
                                                __ptext45 6F6E  
                                                __ptext37 2102  
                                                __ptext29 787C  
                                                __ptext70 2DB6  
                                                __ptext62 0098  
                                                __ptext54 7100  
                                                __ptext46 62C8  
                                                __ptext38 4506  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 7310  
                                                __ptext63 618E  
                                                __ptext55 6460  
                                                __ptext47 770E  
                                                __ptext39 743C  
                                                __ptext80 700C  
                                                __ptext72 6AF0  
                                                __ptext64 75B4  
                                                __ptext56 7334  
                                                __ptext48 7632  
                                                __ptext81 4966  
                                                __ptext73 428A  
                                                __ptext65 3194  
                                                __ptext57 3B94  
                                                __ptext49 764A  
                                                __ptext90 7884  
                                                __ptext82 6EC8  
                                                __ptext74 76BE  
                                                __ptext66 43D2  
                                                __ptext58 5196  
                                                __ptext91 788C  
                                                __ptext83 745A  
                                                __ptext75 7692  
                                                __ptext67 632E  
                                                __ptext59 6876  
                                                __ptext92 76A8  
                                                __ptext84 703E  
                                                __ptext76 335C  
                                                __ptext68 72EC  
                                                __ptext93 67C6  
                                                __ptext85 351E  
                                                __ptext77 676A  
                                                __ptext69 7908  
                                                __ptext94 475E  
                                                __ptext86 7356  
                                                __ptext78 6FA4  
                                                __ptext95 696C  
                                                __ptext87 76D2  
                                                __ptext79 6E8E  
                                                __ptext96 782E  
                                                __ptext88 767A  
                                                __ptext97 54BE  
                                                __ptext89 6F00  
                                                __ptext98 6AA4  
                                                __ptext99 1E0E  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 3FDE  
                                  __end_of_StartReTxTimer 4506  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 632E  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01C8  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 78DA  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 009C  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 7478  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 73DC  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 757C  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 0096  
                                           _timerOverflow 00F2  
                                            _SwTimerStart 5CB2  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00BB  
                                         GenerateSubkey@l 00AB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E16  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E2  
                             __end_of_ValidateChannelMask 6F38  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0090  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 78CE  
                                       ??_TMR1_WriteTimer 0066  
                    __end_of_TMR3_DefaultInterruptHandler 7924  
                   __size_of_TMR3_DefaultInterruptHandler 0002  
                            _TMR3_DefaultInterruptHandler 7922  
                                              _RADIO_DIO0 6460  
                                              _RADIO_DIO1 6E54  
                                              _RADIO_DIO2 6BCC  
                                              _RADIO_DIO3 7662  
                                              _RADIO_DIO4 764A  
                                              _RADIO_DIO5 7632  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 792C  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 792A  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FF85  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 0094  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FF7D  
                                              _RADIO_Init 386C  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0044  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 7910  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 2962  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 3194  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5EC0  
                                       _RADIO_TxDone$1211 00DA  
                                      _EXT_INT_Initialize 70D2  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 5FBA  
                                       ??_TMR3_StartTimer 0064  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 7496  
                                         _SwTimersExecute 5854  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 7838  
                                 ?_PIN_MANAGER_Initialize 0001  
                                         ??_TMR3_CallBack 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 009B  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2092 00BC  
                                     _LORAWAN_TxDone$2093 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 386C  
                               __end_of_RADIO_ReleaseData 78D4  
                              _LORAWAN_LinkCheckConfigure 36D0  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 7914  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001A  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0082  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 7070  
             __end_of_UpdateRetransmissionAckTimeoutState 61F8  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 618E  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                             __size_of_handle16sInterrupt 0014  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$4143 0075  
                                          _AESEncode$4144 0077  
                                          _AESEncode$4145 0079  
                                   __end_of_DIO0_ISR_Lora 78F8  
                                __end_of_SwTimerIsRunning 743C  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 7070  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                           ?_TMR3_DefaultInterruptHandler 0001  
                                            _rxWindowSize FF85  
                                  __end_of_EncKeySchedule 2BB6  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 78EC  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6D60  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 69BA  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 76A8  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 7692  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3502 00A0  
                        __end_of_INT1_SetInterruptHandler 782E  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00DE  
                                   __size_of_TMR_ISR_lora 004E  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 78E0  
                                    _SystemBlockingWaitMs 71AE  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 0094  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 75E8  
                            __end_of_ExecuteRxTimingSetup 7334  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init 7720  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 6528  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 64C4  
                __end_of_LORAWAN_SetApplicationSessionKey 71AE  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 7184  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E2  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 7334  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6BCC  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 74B4  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4C3C  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 786A  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00E8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 727A  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 017E  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 26C4  
                             __end_of_RADIO_SetModulation 78AC  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00DD  
                                     ?i2_TMR_GetDeltaTime 0009  
