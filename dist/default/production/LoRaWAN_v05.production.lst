

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Mon Aug 08 16:48:37 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   253                           	psect	text229,global,reloc=2,class=CODE,delta=1
   254                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   255                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   256  0000                     
   257 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   258  0000                     
   259 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   260  0000                     
   261 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   262 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   263 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   264 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   265 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   266 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   267 ;;_LORAWAN_LinkCheckCallback$3516	offset	0
   268 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   269 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   270 ;;_DutyCycleCallback$2268	offset	0
   271 ;;DutyCycleCallback@minim	offset	4
   272 ;;DutyCycleCallback@i	offset	8
   273 ;;DutyCycleCallback@found	offset	9
   274 ;;DutyCycleCallback@param	offset=-1 (param)
   275 ;;AutomaticReplyCallback@param	offset=-1 (param)
   276 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   277 ;;AckRetransmissionCallback@param	offset=-1 (param)
   278 ;;_param	offset=-1 (param)
   279 ;;_UpdateJoinSuccessState$3533	offset	0
   280 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   281                           
   282                           	psect	idataCOMRAM
   283  007826                     __pidataCOMRAM:
   284                           	opt stack 0
   285                           
   286                           ;initializer for _randx
   287  007826  0001               	dw	1
   288  007828  0000               	dw	0
   289                           
   290                           ;initializer for _ticksToScheduledInterrupt
   291  00782A  FFFF               	dw	65535
   292  00782C  FFFF               	dw	65535
   293                           
   294                           	psect	idataBANK1
   295  007086                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for GenerateSubkey@F7870
   299  007086  00                 	db	0
   300  007087  00                 	db	0
   301  007088  00                 	db	0
   302  007089  00                 	db	0
   303  00708A  00                 	db	0
   304  00708B  00                 	db	0
   305  00708C  00                 	db	0
   306  00708D  00                 	db	0
   307  00708E  00                 	db	0
   308  00708F  00                 	db	0
   309  007090  00                 	db	0
   310  007091  00                 	db	0
   311  007092  00                 	db	0
   312  007093  00                 	db	0
   313  007094  00                 	db	0
   314  007095  87                 	db	135
   315                           
   316                           ;initializer for _appSKey
   317  007096  DD                 	db	221
   318  007097  32                 	db	50
   319  007098  54                 	db	84
   320  007099  F0                 	db	240
   321  00709A  8D                 	db	141
   322  00709B  55                 	db	85
   323  00709C  D6                 	db	214
   324  00709D  52                 	db	82
   325  00709E  E7                 	db	231
   326  00709F  73                 	db	115
   327  0070A0  0B                 	db	11
   328  0070A1  BC                 	db	188
   329  0070A2  26                 	db	38
   330  0070A3  3E                 	db	62
   331  0070A4  0A                 	db	10
   332  0070A5  DA                 	db	218
   333                           
   334                           ;initializer for _nwkSKey
   335  0070A6  75                 	db	117
   336  0070A7  E0                 	db	224
   337  0070A8  66                 	db	102
   338  0070A9  1A                 	db	26
   339  0070AA  A0                 	db	160
   340  0070AB  BC                 	db	188
   341  0070AC  21                 	db	33
   342  0070AD  E4                 	db	228
   343  0070AE  4B                 	db	75
   344  0070AF  57                 	db	87
   345  0070B0  21                 	db	33
   346  0070B1  B0                 	db	176
   347  0070B2  D6                 	db	214
   348  0070B3  30                 	db	48
   349  0070B4  F7                 	db	247
   350  0070B5  B2                 	db	178
   351                           
   352                           	psect	mediumconst
   353  00FE6C                     __pmediumconst:
   354                           	opt stack 0
   355  00FE6C  00                 	db	0
   356  00FE6D                     _STable:
   357                           	opt stack 0
   358  00FE6D  63                 	db	99
   359  00FE6E  7C                 	db	124
   360  00FE6F  77                 	db	119
   361  00FE70  7B                 	db	123
   362  00FE71  F2                 	db	242
   363  00FE72  6B                 	db	107
   364  00FE73  6F                 	db	111
   365  00FE74  C5                 	db	197
   366  00FE75  30                 	db	48
   367  00FE76  01                 	db	1
   368  00FE77  67                 	db	103
   369  00FE78  2B                 	db	43
   370  00FE79  FE                 	db	254
   371  00FE7A  D7                 	db	215
   372  00FE7B  AB                 	db	171
   373  00FE7C  76                 	db	118
   374  00FE7D  CA                 	db	202
   375  00FE7E  82                 	db	130
   376  00FE7F  C9                 	db	201
   377  00FE80  7D                 	db	125
   378  00FE81  FA                 	db	250
   379  00FE82  59                 	db	89
   380  00FE83  47                 	db	71
   381  00FE84  F0                 	db	240
   382  00FE85  AD                 	db	173
   383  00FE86  D4                 	db	212
   384  00FE87  A2                 	db	162
   385  00FE88  AF                 	db	175
   386  00FE89  9C                 	db	156
   387  00FE8A  A4                 	db	164
   388  00FE8B  72                 	db	114
   389  00FE8C  C0                 	db	192
   390  00FE8D  B7                 	db	183
   391  00FE8E  FD                 	db	253
   392  00FE8F  93                 	db	147
   393  00FE90  26                 	db	38
   394  00FE91  36                 	db	54
   395  00FE92  3F                 	db	63
   396  00FE93  F7                 	db	247
   397  00FE94  CC                 	db	204
   398  00FE95  34                 	db	52
   399  00FE96  A5                 	db	165
   400  00FE97  E5                 	db	229
   401  00FE98  F1                 	db	241
   402  00FE99  71                 	db	113
   403  00FE9A  D8                 	db	216
   404  00FE9B  31                 	db	49
   405  00FE9C  15                 	db	21
   406  00FE9D  04                 	db	4
   407  00FE9E  C7                 	db	199
   408  00FE9F  23                 	db	35
   409  00FEA0  C3                 	db	195
   410  00FEA1  18                 	db	24
   411  00FEA2  96                 	db	150
   412  00FEA3  05                 	db	5
   413  00FEA4  9A                 	db	154
   414  00FEA5  07                 	db	7
   415  00FEA6  12                 	db	18
   416  00FEA7  80                 	db	128
   417  00FEA8  E2                 	db	226
   418  00FEA9  EB                 	db	235
   419  00FEAA  27                 	db	39
   420  00FEAB  B2                 	db	178
   421  00FEAC  75                 	db	117
   422  00FEAD  09                 	db	9
   423  00FEAE  83                 	db	131
   424  00FEAF  2C                 	db	44
   425  00FEB0  1A                 	db	26
   426  00FEB1  1B                 	db	27
   427  00FEB2  6E                 	db	110
   428  00FEB3  5A                 	db	90
   429  00FEB4  A0                 	db	160
   430  00FEB5  52                 	db	82
   431  00FEB6  3B                 	db	59
   432  00FEB7  D6                 	db	214
   433  00FEB8  B3                 	db	179
   434  00FEB9  29                 	db	41
   435  00FEBA  E3                 	db	227
   436  00FEBB  2F                 	db	47
   437  00FEBC  84                 	db	132
   438  00FEBD  53                 	db	83
   439  00FEBE  D1                 	db	209
   440  00FEBF  00                 	db	0
   441  00FEC0  ED                 	db	237
   442  00FEC1  20                 	db	32
   443  00FEC2  FC                 	db	252
   444  00FEC3  B1                 	db	177
   445  00FEC4  5B                 	db	91
   446  00FEC5  6A                 	db	106
   447  00FEC6  CB                 	db	203
   448  00FEC7  BE                 	db	190
   449  00FEC8  39                 	db	57
   450  00FEC9  4A                 	db	74
   451  00FECA  4C                 	db	76
   452  00FECB  58                 	db	88
   453  00FECC  CF                 	db	207
   454  00FECD  D0                 	db	208
   455  00FECE  EF                 	db	239
   456  00FECF  AA                 	db	170
   457  00FED0  FB                 	db	251
   458  00FED1  43                 	db	67
   459  00FED2  4D                 	db	77
   460  00FED3  33                 	db	51
   461  00FED4  85                 	db	133
   462  00FED5  45                 	db	69
   463  00FED6  F9                 	db	249
   464  00FED7  02                 	db	2
   465  00FED8  7F                 	db	127
   466  00FED9  50                 	db	80
   467  00FEDA  3C                 	db	60
   468  00FEDB  9F                 	db	159
   469  00FEDC  A8                 	db	168
   470  00FEDD  51                 	db	81
   471  00FEDE  A3                 	db	163
   472  00FEDF  40                 	db	64
   473  00FEE0  8F                 	db	143
   474  00FEE1  92                 	db	146
   475  00FEE2  9D                 	db	157
   476  00FEE3  38                 	db	56
   477  00FEE4  F5                 	db	245
   478  00FEE5  BC                 	db	188
   479  00FEE6  B6                 	db	182
   480  00FEE7  DA                 	db	218
   481  00FEE8  21                 	db	33
   482  00FEE9  10                 	db	16
   483  00FEEA  FF                 	db	255
   484  00FEEB  F3                 	db	243
   485  00FEEC  D2                 	db	210
   486  00FEED  CD                 	db	205
   487  00FEEE  0C                 	db	12
   488  00FEEF  13                 	db	19
   489  00FEF0  EC                 	db	236
   490  00FEF1  5F                 	db	95
   491  00FEF2  97                 	db	151
   492  00FEF3  44                 	db	68
   493  00FEF4  17                 	db	23
   494  00FEF5  C4                 	db	196
   495  00FEF6  A7                 	db	167
   496  00FEF7  7E                 	db	126
   497  00FEF8  3D                 	db	61
   498  00FEF9  64                 	db	100
   499  00FEFA  5D                 	db	93
   500  00FEFB  19                 	db	25
   501  00FEFC  73                 	db	115
   502  00FEFD  60                 	db	96
   503  00FEFE  81                 	db	129
   504  00FEFF  4F                 	db	79
   505  00FF00  DC                 	db	220
   506  00FF01  22                 	db	34
   507  00FF02  2A                 	db	42
   508  00FF03  90                 	db	144
   509  00FF04  88                 	db	136
   510  00FF05  46                 	db	70
   511  00FF06  EE                 	db	238
   512  00FF07  B8                 	db	184
   513  00FF08  14                 	db	20
   514  00FF09  DE                 	db	222
   515  00FF0A  5E                 	db	94
   516  00FF0B  0B                 	db	11
   517  00FF0C  DB                 	db	219
   518  00FF0D  E0                 	db	224
   519  00FF0E  32                 	db	50
   520  00FF0F  3A                 	db	58
   521  00FF10  0A                 	db	10
   522  00FF11  49                 	db	73
   523  00FF12  06                 	db	6
   524  00FF13  24                 	db	36
   525  00FF14  5C                 	db	92
   526  00FF15  C2                 	db	194
   527  00FF16  D3                 	db	211
   528  00FF17  AC                 	db	172
   529  00FF18  62                 	db	98
   530  00FF19  91                 	db	145
   531  00FF1A  95                 	db	149
   532  00FF1B  E4                 	db	228
   533  00FF1C  79                 	db	121
   534  00FF1D  E7                 	db	231
   535  00FF1E  C8                 	db	200
   536  00FF1F  37                 	db	55
   537  00FF20  6D                 	db	109
   538  00FF21  8D                 	db	141
   539  00FF22  D5                 	db	213
   540  00FF23  4E                 	db	78
   541  00FF24  A9                 	db	169
   542  00FF25  6C                 	db	108
   543  00FF26  56                 	db	86
   544  00FF27  F4                 	db	244
   545  00FF28  EA                 	db	234
   546  00FF29  65                 	db	101
   547  00FF2A  7A                 	db	122
   548  00FF2B  AE                 	db	174
   549  00FF2C  08                 	db	8
   550  00FF2D  BA                 	db	186
   551  00FF2E  78                 	db	120
   552  00FF2F  25                 	db	37
   553  00FF30  2E                 	db	46
   554  00FF31  1C                 	db	28
   555  00FF32  A6                 	db	166
   556  00FF33  B4                 	db	180
   557  00FF34  C6                 	db	198
   558  00FF35  E8                 	db	232
   559  00FF36  DD                 	db	221
   560  00FF37  74                 	db	116
   561  00FF38  1F                 	db	31
   562  00FF39  4B                 	db	75
   563  00FF3A  BD                 	db	189
   564  00FF3B  8B                 	db	139
   565  00FF3C  8A                 	db	138
   566  00FF3D  70                 	db	112
   567  00FF3E  3E                 	db	62
   568  00FF3F  B5                 	db	181
   569  00FF40  66                 	db	102
   570  00FF41  48                 	db	72
   571  00FF42  03                 	db	3
   572  00FF43  F6                 	db	246
   573  00FF44  0E                 	db	14
   574  00FF45  61                 	db	97
   575  00FF46  35                 	db	53
   576  00FF47  57                 	db	87
   577  00FF48  B9                 	db	185
   578  00FF49  86                 	db	134
   579  00FF4A  C1                 	db	193
   580  00FF4B  1D                 	db	29
   581  00FF4C  9E                 	db	158
   582  00FF4D  E1                 	db	225
   583  00FF4E  F8                 	db	248
   584  00FF4F  98                 	db	152
   585  00FF50  11                 	db	17
   586  00FF51  69                 	db	105
   587  00FF52  D9                 	db	217
   588  00FF53  8E                 	db	142
   589  00FF54  94                 	db	148
   590  00FF55  9B                 	db	155
   591  00FF56  1E                 	db	30
   592  00FF57  87                 	db	135
   593  00FF58  E9                 	db	233
   594  00FF59  CE                 	db	206
   595  00FF5A  55                 	db	85
   596  00FF5B  28                 	db	40
   597  00FF5C  DF                 	db	223
   598  00FF5D  8C                 	db	140
   599  00FF5E  A1                 	db	161
   600  00FF5F  89                 	db	137
   601  00FF60  0D                 	db	13
   602  00FF61  BF                 	db	191
   603  00FF62  E6                 	db	230
   604  00FF63  42                 	db	66
   605  00FF64  68                 	db	104
   606  00FF65  41                 	db	65
   607  00FF66  99                 	db	153
   608  00FF67  2D                 	db	45
   609  00FF68  0F                 	db	15
   610  00FF69  B0                 	db	176
   611  00FF6A  54                 	db	84
   612  00FF6B  BB                 	db	187
   613  00FF6C  16                 	db	22
   614  00FF6D                     __end_of_STable:
   615                           	opt stack 0
   616  00FF6D                     _maxPayloadSize:
   617                           	opt stack 0
   618  00FF6D  33                 	db	51
   619  00FF6E  33                 	db	51
   620  00FF6F  33                 	db	51
   621  00FF70  73                 	db	115
   622  00FF71  F2                 	db	242
   623  00FF72  F2                 	db	242
   624  00FF73  F2                 	db	242
   625  00FF74  38                 	db	56
   626  00FF75                     __end_of_maxPayloadSize:
   627                           	opt stack 0
   628  00FF75                     _modulation:
   629                           	opt stack 0
   630  00FF75  01                 	db	1
   631  00FF76  01                 	db	1
   632  00FF77  01                 	db	1
   633  00FF78  01                 	db	1
   634  00FF79  01                 	db	1
   635  00FF7A  01                 	db	1
   636  00FF7B  01                 	db	1
   637  00FF7C  00                 	db	0
   638  00FF7D                     __end_of_modulation:
   639                           	opt stack 0
   640  00FF7D                     _rxWindowOffset:
   641                           	opt stack 0
   642  00FF7D  DF                 	db	223
   643  00FF7E  CE                 	db	206
   644  00FF7F  C6                 	db	198
   645  00FF80  C2                 	db	194
   646  00FF81  BE                 	db	190
   647  00FF82  BC                 	db	188
   648  00FF83  F1                 	db	241
   649  00FF84  FE                 	db	254
   650  00FF85                     __end_of_rxWindowOffset:
   651                           	opt stack 0
   652  00FF85                     _rxWindowSize:
   653                           	opt stack 0
   654  00FF85  08                 	db	8
   655  00FF86  0A                 	db	10
   656  00FF87  0E                 	db	14
   657  00FF88  1A                 	db	26
   658  00FF89  31                 	db	49
   659  00FF8A  58                 	db	88
   660  00FF8B  3C                 	db	60
   661  00FF8C  08                 	db	8
   662  00FF8D                     __end_of_rxWindowSize:
   663                           	opt stack 0
   664  00FF8D                     _bandwidth:
   665                           	opt stack 0
   666  00FF8D  07                 	db	7
   667  00FF8E  07                 	db	7
   668  00FF8F  07                 	db	7
   669  00FF90  07                 	db	7
   670  00FF91  07                 	db	7
   671  00FF92  07                 	db	7
   672  00FF93  08                 	db	8
   673  00FF94                     __end_of_bandwidth:
   674                           	opt stack 0
   675  00FF94                     _macEndDevCmdReplyLen:
   676                           	opt stack 0
   677  00FF94  01                 	db	1
   678  00FF95  02                 	db	2
   679  00FF96  01                 	db	1
   680  00FF97  02                 	db	2
   681  00FF98  03                 	db	3
   682  00FF99  02                 	db	2
   683  00FF9A  01                 	db	1
   684  00FF9B                     __end_of_macEndDevCmdReplyLen:
   685                           	opt stack 0
   686  00FF9B                     _spreadingFactor:
   687                           	opt stack 0
   688  00FF9B  0C                 	db	12
   689  00FF9C  0B                 	db	11
   690  00FF9D  0A                 	db	10
   691  00FF9E  09                 	db	9
   692  00FF9F  08                 	db	8
   693  00FFA0  07                 	db	7
   694  00FFA1  07                 	db	7
   695  00FFA2                     __end_of_spreadingFactor:
   696                           	opt stack 0
   697  00FFA2                     _txPower868:
   698                           	opt stack 0
   699  00FFA2  14                 	db	20
   700  00FFA3  0E                 	db	14
   701  00FFA4  0B                 	db	11
   702  00FFA5  08                 	db	8
   703  00FFA6  05                 	db	5
   704  00FFA7  02                 	db	2
   705  00FFA8                     __end_of_txPower868:
   706                           	opt stack 0
   707  00FFA8                     _DefaultChannels433:
   708                           	opt stack 0
   709  00FFA8  B9D8               	dw	47576
   710  00FFAA  19D1               	dw	6609
   711  00FFAC  01                 	db	1
   712  00FFAD  50                 	db	80
   713  00FFAE  012E               	dw	302
   714  00FFB0  0000               	dw	0
   715  00FFB2  0000               	dw	0
   716  00FFB4  01                 	db	1
   717  00FFB5  FF                 	db	255
   718  00FFB6  C718               	dw	50968
   719  00FFB8  19D4               	dw	6612
   720  00FFBA  01                 	db	1
   721  00FFBB  50                 	db	80
   722  00FFBC  012E               	dw	302
   723  00FFBE  0000               	dw	0
   724  00FFC0  0000               	dw	0
   725  00FFC2  01                 	db	1
   726  00FFC3  FF                 	db	255
   727  00FFC4  D458               	dw	54360
   728  00FFC6  19D7               	dw	6615
   729  00FFC8  01                 	db	1
   730  00FFC9  50                 	db	80
   731  00FFCA  012E               	dw	302
   732  00FFCC  0000               	dw	0
   733  00FFCE  0000               	dw	0
   734  00FFD0  01                 	db	1
   735  00FFD1  FF                 	db	255
   736  00FFD2                     __end_of_DefaultChannels433:
   737                           	opt stack 0
   738  00FFD2                     _DefaultChannels868:
   739                           	opt stack 0
   740  00FFD2  27A0               	dw	10144
   741  00FFD4  33BE               	dw	13246
   742  00FFD6  01                 	db	1
   743  00FFD7  50                 	db	80
   744  00FFD8  012E               	dw	302
   745  00FFDA  0000               	dw	0
   746  00FFDC  0000               	dw	0
   747  00FFDE  01                 	db	1
   748  00FFDF  FF                 	db	255
   749  00FFE0  34E0               	dw	13536
   750  00FFE2  33C1               	dw	13249
   751  00FFE4  01                 	db	1
   752  00FFE5  50                 	db	80
   753  00FFE6  012E               	dw	302
   754  00FFE8  0000               	dw	0
   755  00FFEA  0000               	dw	0
   756  00FFEC  01                 	db	1
   757  00FFED  FF                 	db	255
   758  00FFEE  4220               	dw	16928
   759  00FFF0  33C4               	dw	13252
   760  00FFF2  01                 	db	1
   761  00FFF3  50                 	db	80
   762  00FFF4  012E               	dw	302
   763  00FFF6  0000               	dw	0
   764  00FFF8  0000               	dw	0
   765  00FFFA  01                 	db	1
   766  00FFFB  FF                 	db	255
   767  00FFFC                     __end_of_DefaultChannels868:
   768                           	opt stack 0
   769  00FFFC                     _FskSyncWordBuff:
   770                           	opt stack 0
   771  00FFFC  C1                 	db	193
   772  00FFFD  94                 	db	148
   773  00FFFE  C1                 	db	193
   774  00FFFF                     __end_of_FskSyncWordBuff:
   775                           	opt stack 0
   776  00FFFF  00                 	db	0	; dummy byte at the end
   777  0000                     
   778                           	psect	nvCOMRAM
   779  00005A                     __pnvCOMRAM:
   780                           	opt stack 0
   781  00005A                     _INT1_InterruptHandler:
   782                           	opt stack 0
   783  00005A                     	ds	2
   784  00005C                     _timer1ReloadVal:
   785                           	opt stack 0
   786  00005C                     	ds	2
   787  00005E                     _timer3ReloadVal:
   788                           	opt stack 0
   789  00005E                     	ds	2
   790                           
   791                           	psect	nvBANK1
   792  0001F8                     __pnvBANK1:
   793                           	opt stack 0
   794  0001F8                     _INT2_InterruptHandler:
   795                           	opt stack 0
   796  0001F8                     	ds	2
   797  0001FA                     _IOCB4_InterruptHandler:
   798                           	opt stack 0
   799  0001FA                     	ds	2
   800  0001FC                     _TMR1_InterruptHandler:
   801                           	opt stack 0
   802  0001FC                     	ds	2
   803  0001FE                     _TMR3_InterruptHandler:
   804                           	opt stack 0
   805  0001FE                     	ds	2
   806  0000                     _ANSELA	set	3896
   807  0000                     _ANSELB	set	3897
   808  0000                     _ANSELC	set	3898
   809  0000                     _ANSELCbits	set	3898
   810  0000                     _ANSELD	set	3899
   811  0000                     _ANSELDbits	set	3899
   812  0000                     _ANSELE	set	3900
   813  0000                     _ANSD0	set	31192
   814  0000                     _ANSD1	set	31193
   815  0000                     _ANSD3	set	31195
   816  0000                     _ANSD4	set	31196
   817  0000                     _CCP1MD	set	31216
   818  0000                     _CCP2MD	set	31217
   819  0000                     _CCP3MD	set	31218
   820  0000                     _CCP4MD	set	31219
   821  0000                     _CCP5MD	set	31220
   822  0000                     _CMP1MD	set	31209
   823  0000                     _CMP2MD	set	31210
   824  0000                     _CTMUMD	set	31211
   825  0000                     _MSSP1MD	set	31222
   826  0000                     _MSSP2MD	set	31223
   827  0000                     _TMR2MD	set	31225
   828  0000                     _TMR4MD	set	31227
   829  0000                     _TMR5MD	set	31228
   830  0000                     _TMR6MD	set	31229
   831  0000                     _UART1MD	set	31230
   832  0000                     _UART2MD	set	31231
   833  0000                     _TMR1	set	4046
   834  0000                     _TMR3	set	4018
   835  0000                     _ADCON0bits	set	4034
   836  0000                     _ADCON2bits	set	4032
   837  0000                     _ADRESH	set	4036
   838  0000                     _ADRESL	set	4035
   839  0000                     _INTCON2bits	set	4081
   840  0000                     _INTCON3bits	set	4080
   841  0000                     _INTCONbits	set	4082
   842  0000                     _IOCBbits	set	3938
   843  0000                     _LATA	set	3977
   844  0000                     _LATB	set	3978
   845  0000                     _LATBbits	set	3978
   846  0000                     _LATC	set	3979
   847  0000                     _LATCbits	set	3979
   848  0000                     _LATD	set	3980
   849  0000                     _LATDbits	set	3980
   850  0000                     _LATE	set	3981
   851  0000                     _LATEbits	set	3981
   852  0000                     _OSCCON	set	4051
   853  0000                     _OSCCON2	set	4050
   854  0000                     _OSCTUNE	set	3995
   855  0000                     _PIE1bits	set	3997
   856  0000                     _PIE2bits	set	4000
   857  0000                     _PIR1bits	set	3998
   858  0000                     _PIR2bits	set	4001
   859  0000                     _PORTBbits	set	3969
   860  0000                     _PORTCbits	set	3970
   861  0000                     _PORTDbits	set	3971
   862  0000                     _RCONbits	set	4048
   863  0000                     _SSP2ADD	set	3950
   864  0000                     _SSP2BUF	set	3951
   865  0000                     _SSP2CON1	set	3948
   866  0000                     _SSP2CON1bits	set	3948
   867  0000                     _SSP2STAT	set	3949
   868  0000                     _SSP2STATbits	set	3949
   869  0000                     _T1CON	set	4045
   870  0000                     _T1CONbits	set	4045
   871  0000                     _T1GCON	set	4044
   872  0000                     _T3CON	set	4017
   873  0000                     _T3CONbits	set	4017
   874  0000                     _T3GCON	set	4020
   875  0000                     _TMR1H	set	4047
   876  0000                     _TMR1L	set	4046
   877  0000                     _TMR3H	set	4019
   878  0000                     _TMR3L	set	4018
   879  0000                     _TRISA	set	3986
   880  0000                     _TRISB	set	3987
   881  0000                     _TRISBbits	set	3987
   882  0000                     _TRISC	set	3988
   883  0000                     _TRISCbits	set	3988
   884  0000                     _TRISD	set	3989
   885  0000                     _TRISDbits	set	3989
   886  0000                     _TRISE	set	3990
   887  0000                     _TRISEbits	set	3990
   888  0000                     _WPUB	set	3937
   889  0000                     _IDLEN	set	32415
   890  0000                     _LATC2	set	31834
   891  0000                     _LATD0	set	31840
   892  0000                     _LATD1	set	31841
   893  0000                     _LATD3	set	31843
   894  0000                     _LATD4	set	31844
   895  0000                     _TRISC2	set	31906
   896  0000                     _TRISD0	set	31912
   897  0000                     _TRISD1	set	31913
   898  0000                     _TRISD3	set	31915
   899  0000                     _TRISD4	set	31916
   900                           
   901                           ; #config settings
   902  0000                     
   903                           	psect	cinit
   904  00599C                     __pcinit:
   905                           	opt stack 0
   906  00599C                     start_initialization:
   907                           	opt stack 0
   908  00599C                     __initialization:
   909                           	opt stack 0
   910                           
   911                           ; Initialize objects allocated to BANK1 (48 bytes)
   912                           ; load TBLPTR registers with __pidataBANK1
   913  00599C  0E86               	movlw	low __pidataBANK1
   914  00599E  6EF6               	movwf	tblptrl,c
   915  0059A0  0E70               	movlw	high __pidataBANK1
   916  0059A2  6EF7               	movwf	tblptrh,c
   917  0059A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   918  0059A6  6EF8               	movwf	tblptru,c
   919  0059A8  EE01  F0C8         	lfsr	0,__pdataBANK1
   920  0059AC  EE20 F030          	lfsr	2,48
   921  0059B0                     copy_data0:
   922  0059B0  0009               	tblrd		*+
   923  0059B2  CFF5 FFEE          	movff	tablat,postinc0
   924  0059B6  50DD               	movf	postdec2,w,c
   925  0059B8  50D9               	movf	fsr2l,w,c
   926  0059BA  E1FA               	bnz	copy_data0
   927                           
   928                           ; Initialize objects allocated to COMRAM (8 bytes)
   929                           ; load TBLPTR registers with __pidataCOMRAM
   930  0059BC  0E26               	movlw	low __pidataCOMRAM
   931  0059BE  6EF6               	movwf	tblptrl,c
   932  0059C0  0E78               	movlw	high __pidataCOMRAM
   933  0059C2  6EF7               	movwf	tblptrh,c
   934  0059C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   935  0059C6  6EF8               	movwf	tblptru,c
   936  0059C8  EE00  F052         	lfsr	0,__pdataCOMRAM
   937  0059CC  EE20 F008          	lfsr	2,8
   938  0059D0                     copy_data1:
   939  0059D0  0009               	tblrd		*+
   940  0059D2  CFF5 FFEE          	movff	tablat,postinc0
   941  0059D6  50DD               	movf	postdec2,w,c
   942  0059D8  50D9               	movf	fsr2l,w,c
   943  0059DA  E1FA               	bnz	copy_data1
   944                           
   945                           ; Clear objects allocated to BIGRAM (542 bytes)
   946  0059DC  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   947  0059E0  EE22 F01E          	lfsr	2,542
   948  0059E4                     clear_0:
   949  0059E4  6AEE               	clrf	postinc0,c
   950  0059E6  50DD               	movf	postdec2,w,c
   951  0059E8  50D9               	movf	fsr2l,w,c
   952  0059EA  E1FC               	bnz	clear_0
   953  0059EC  50DA               	movf	fsr2h,w,c
   954  0059EE  E1FA               	bnz	clear_0
   955                           
   956                           ; Clear objects allocated to BANK4 (224 bytes)
   957  0059F0  EE04  F000         	lfsr	0,__pbssBANK4
   958  0059F4  0EE0               	movlw	224
   959  0059F6                     clear_1:
   960  0059F6  6AEE               	clrf	postinc0,c
   961  0059F8  06E8               	decf	wreg,f,c
   962  0059FA  E1FD               	bnz	clear_1
   963                           
   964                           ; Clear objects allocated to BANK3 (160 bytes)
   965  0059FC  EE03  F000         	lfsr	0,__pbssBANK3
   966  005A00  0EA0               	movlw	160
   967  005A02                     clear_2:
   968  005A02  6AEE               	clrf	postinc0,c
   969  005A04  06E8               	decf	wreg,f,c
   970  005A06  E1FD               	bnz	clear_2
   971                           
   972                           ; Clear objects allocated to BANK2 (245 bytes)
   973  005A08  EE02  F000         	lfsr	0,__pbssBANK2
   974  005A0C  0EF5               	movlw	245
   975  005A0E                     clear_3:
   976  005A0E  6AEE               	clrf	postinc0,c
   977  005A10  06E8               	decf	wreg,f,c
   978  005A12  E1FD               	bnz	clear_3
   979                           
   980                           ; Clear objects allocated to BANK1 (75 bytes)
   981  005A14  EE01  F07D         	lfsr	0,__pbssBANK1
   982  005A18  0E4B               	movlw	75
   983  005A1A                     clear_4:
   984  005A1A  6AEE               	clrf	postinc0,c
   985  005A1C  06E8               	decf	wreg,f,c
   986  005A1E  E1FD               	bnz	clear_4
   987                           
   988                           ; Clear objects allocated to BANK0 (11 bytes)
   989  005A20  EE00  F0E8         	lfsr	0,__pbssBANK0
   990  005A24  0E0B               	movlw	11
   991  005A26                     clear_5:
   992  005A26  6AEE               	clrf	postinc0,c
   993  005A28  06E8               	decf	wreg,f,c
   994  005A2A  E1FD               	bnz	clear_5
   995                           
   996                           ; Clear objects allocated to COMRAM (20 bytes)
   997  005A2C  EE00  F032         	lfsr	0,__pbssCOMRAM
   998  005A30  0E14               	movlw	20
   999  005A32                     clear_6:
  1000  005A32  6AEE               	clrf	postinc0,c
  1001  005A34  06E8               	decf	wreg,f,c
  1002  005A36  E1FD               	bnz	clear_6
  1003  005A38                     end_of_initialization:
  1004                           	opt stack 0
  1005  005A38                     __end_of__initialization:
  1006                           	opt stack 0
  1007  005A38  0100               	movlb	0
  1008  005A3A  EF1F  F02D         	goto	_main	;jump to C main() function
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           postdec2	equ	0xFDD
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           
  1019                           	psect	bssCOMRAM
  1020  000032                     __pbssCOMRAM:
  1021                           	opt stack 0
  1022  000032                     TMR_GetDeltaTime@retVal:
  1023                           	opt stack 0
  1024  000032                     	ds	4
  1025  000036                     _ticksAccounted:
  1026                           	opt stack 0
  1027  000036                     	ds	4
  1028  00003A                     _ticksAdded:
  1029                           	opt stack 0
  1030  00003A                     	ds	4
  1031  00003E                     TMR_GetDeltaTime@tmrVal:
  1032                           	opt stack 0
  1033  00003E                     	ds	2
  1034  000040                     TMR_SwapTimer@oldVal:
  1035                           	opt stack 0
  1036  000040                     	ds	2
  1037  000042                     TMR_SwapTimer@retVal:
  1038                           	opt stack 0
  1039  000042                     	ds	2
  1040  000044                     __roundCounter:
  1041                           	opt stack 0
  1042  000044                     	ds	1
  1043  000045                     handle16sInterrupt@counterSleepTimeout:
  1044                           	opt stack 0
  1045  000045                     	ds	1
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec2	equ	0xFDD
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           
  1056                           	psect	dataCOMRAM
  1057  000052                     __pdataCOMRAM:
  1058                           	opt stack 0
  1059  000052                     _randx:
  1060                           	opt stack 0
  1061  000052                     	ds	4
  1062  000056                     _ticksToScheduledInterrupt:
  1063                           	opt stack 0
  1064  000056                     	ds	4
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec2	equ	0xFDD
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           
  1075                           	psect	bssBANK0
  1076  0000E8                     __pbssBANK0:
  1077                           	opt stack 0
  1078  0000E8                     _rxPayload:
  1079                           	opt stack 0
  1080  0000E8                     	ds	4
  1081  0000EC                     _reloadVal:
  1082                           	opt stack 0
  1083  0000EC                     	ds	2
  1084  0000EE                     __rcon:
  1085                           	opt stack 0
  1086  0000EE                     	ds	1
  1087  0000EF                     _allocatedTimers:
  1088                           	opt stack 0
  1089  0000EF                     	ds	1
  1090  0000F0                     _dioStatus:
  1091                           	opt stack 0
  1092  0000F0                     	ds	1
  1093  0000F1                     _localDioStatus:
  1094                           	opt stack 0
  1095  0000F1                     	ds	1
  1096  0000F2                     _timerOverflow:
  1097                           	opt stack 0
  1098  0000F2                     	ds	1
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec2	equ	0xFDD
  1106                           fsr2h	equ	0xFDA
  1107                           fsr2l	equ	0xFD9
  1108                           
  1109                           	psect	bssBANK1
  1110  00017D                     __pbssBANK1:
  1111                           	opt stack 0
  1112  00017D                     _TimeToSend:
  1113                           	opt stack 0
  1114  00017D                     	ds	1
  1115  00017E                     _RadioConfiguration:
  1116                           	opt stack 0
  1117  00017E                     	ds	54
  1118  0001B4                     _aesBuffer:
  1119                           	opt stack 0
  1120  0001B4                     	ds	16
  1121  0001C4                     _payload:
  1122                           	opt stack 0
  1123  0001C4                     	ds	4
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           postdec2	equ	0xFDD
  1131                           fsr2h	equ	0xFDA
  1132                           fsr2l	equ	0xFD9
  1133                           
  1134                           	psect	dataBANK1
  1135  0001C8                     __pdataBANK1:
  1136                           	opt stack 0
  1137  0001C8                     GenerateSubkey@F7870:
  1138                           	opt stack 0
  1139  0001C8                     	ds	16
  1140  0001D8                     _appSKey:
  1141                           	opt stack 0
  1142  0001D8                     	ds	16
  1143  0001E8                     _nwkSKey:
  1144                           	opt stack 0
  1145  0001E8                     	ds	16
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           postinc0	equ	0xFEE
  1151                           wreg	equ	0xFE8
  1152                           postdec2	equ	0xFDD
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           
  1156                           	psect	bssBANK2
  1157  000200                     __pbssBANK2:
  1158                           	opt stack 0
  1159  000200                     _loRa:
  1160                           	opt stack 0
  1161  000200                     	ds	245
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec2	equ	0xFDD
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           
  1172                           	psect	bssBANK3
  1173  000300                     __pbssBANK3:
  1174                           	opt stack 0
  1175  000300                     _swTimers:
  1176                           	opt stack 0
  1177  000300                     	ds	160
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec2	equ	0xFDD
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           
  1188                           	psect	bssBANK4
  1189  000400                     __pbssBANK4:
  1190                           	opt stack 0
  1191  000400                     _Channels:
  1192                           	opt stack 0
  1193  000400                     	ds	224
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           postinc0	equ	0xFEE
  1199                           wreg	equ	0xFE8
  1200                           postdec2	equ	0xFDD
  1201                           fsr2h	equ	0xFDA
  1202                           fsr2l	equ	0xFD9
  1203                           
  1204                           	psect	bssBIGRAM
  1205  0004E0                     __pbssBIGRAM:
  1206                           	opt stack 0
  1207  0004E0                     _macBuffer:
  1208                           	opt stack 0
  1209  0004E0                     	ds	271
  1210  0005EF                     _radioBuffer:
  1211                           	opt stack 0
  1212  0005EF                     	ds	271
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec2	equ	0xFDD
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           
  1223                           	psect	cstackBANK1
  1224  000100                     __pcstackBANK1:
  1225                           	opt stack 0
  1226  000100                     AESCmac@k2:
  1227                           	opt stack 0
  1228                           
  1229                           ; 16 bytes @ 0x0
  1230  000100                     	ds	16
  1231  000110                     AESCmac@k1:
  1232                           	opt stack 0
  1233                           
  1234                           ; 16 bytes @ 0x10
  1235  000110                     	ds	16
  1236  000120                     AESCmac@mLast:
  1237                           	opt stack 0
  1238                           
  1239                           ; 16 bytes @ 0x20
  1240  000120                     	ds	16
  1241  000130                     AESCmac@padded:
  1242                           	opt stack 0
  1243                           
  1244                           ; 16 bytes @ 0x30
  1245  000130                     	ds	16
  1246  000140                     AESCmac@y:
  1247                           	opt stack 0
  1248                           
  1249                           ; 16 bytes @ 0x40
  1250  000140                     	ds	16
  1251  000150                     AESCmac@x:
  1252                           	opt stack 0
  1253                           
  1254                           ; 16 bytes @ 0x50
  1255  000150                     	ds	16
  1256  000160                     AESCmac@ptr:
  1257                           	opt stack 0
  1258                           
  1259                           ; 2 bytes @ 0x60
  1260  000160                     	ds	2
  1261  000162                     AESCmac@flag:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x62
  1265  000162                     	ds	1
  1266  000163                     AESCmac@n:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0x63
  1270  000163                     	ds	1
  1271  000164                     AESCmac@j:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0x64
  1275  000164                     	ds	1
  1276  000165                     AESCmac@i:
  1277                           	opt stack 0
  1278                           
  1279                           ; 1 bytes @ 0x65
  1280  000165                     	ds	1
  1281  000166                     LORAWAN_RxDone@buffer:
  1282                           	opt stack 0
  1283                           
  1284                           ; 2 bytes @ 0x66
  1285  000166                     	ds	2
  1286  000168                     LORAWAN_RxDone@bufferLength:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x68
  1290  000168                     	ds	1
  1291  000169                     LORAWAN_RxDone@fPort:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x69
  1295  000169                     	ds	1
  1296  00016A                     LORAWAN_RxDone@channelIndex:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x6A
  1300  00016A                     	ds	1
  1301  00016B                     LORAWAN_RxDone@mhdr:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x6B
  1305  00016B                     	ds	1
  1306  00016C                     LORAWAN_RxDone@extractedMic:
  1307                           	opt stack 0
  1308                           
  1309                           ; 4 bytes @ 0x6C
  1310  00016C                     	ds	4
  1311  000170                     LORAWAN_RxDone@bufferIndex:
  1312                           	opt stack 0
  1313                           
  1314                           ; 1 bytes @ 0x70
  1315  000170                     	ds	1
  1316  000171                     LORAWAN_RxDone@temp:
  1317                           	opt stack 0
  1318                           
  1319                           ; 1 bytes @ 0x71
  1320  000171                     	ds	1
  1321  000172                     LORAWAN_RxDone@packet:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x72
  1325  000172                     	ds	2
  1326  000174                     LORAWAN_RxDone@computedMic:
  1327                           	opt stack 0
  1328                           
  1329                           ; 4 bytes @ 0x74
  1330  000174                     	ds	4
  1331  000178                     LORAWAN_RxDone@joinAccept:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x78
  1335  000178                     	ds	2
  1336  00017A                     LORAWAN_RxDone@frmPayloadLength:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x7A
  1340  00017A                     	ds	1
  1341  00017B                     LORAWAN_RxDone@hdr:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0x7B
  1345  00017B                     	ds	2
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           postdec2	equ	0xFDD
  1353                           fsr2h	equ	0xFDA
  1354                           fsr2l	equ	0xFD9
  1355                           
  1356                           	psect	cstackBANK0
  1357  000060                     __pcstackBANK0:
  1358                           	opt stack 0
  1359  000060                     	ds	4
  1360  000064                     ??_UpdateMinMaxChDataRate:
  1361  000064                     ??_FindSmallestDataRate:
  1362  000064                     ??_UpdateReceiveDelays:
  1363  000064                     ??_CountfOptsLength:
  1364  000064                     ??_ADC_SelChannel:
  1365  000064                     ?_TMR1_ReadTimer:
  1366                           	opt stack 0
  1367  000064                     ?_ExecuteLinkCheck:
  1368                           	opt stack 0
  1369  000064                     ?_ExecuteDutyCycle:
  1370                           	opt stack 0
  1371  000064                     ?_ExecuteDevStatus:
  1372                           	opt stack 0
  1373  000064                     ?_GetRx1Freq:
  1374                           	opt stack 0
  1375  000064                     ?___lmul:
  1376                           	opt stack 0
  1377  000064                     ?___lldiv:
  1378                           	opt stack 0
  1379  000064                     ?___llmod:
  1380                           	opt stack 0
  1381  000064                     SwTimerCreate@retVal:
  1382                           	opt stack 0
  1383  000064                     SwTimerIsRunning@timerId:
  1384                           	opt stack 0
  1385  000064                     SwTimerStop@timerId:
  1386                           	opt stack 0
  1387  000064                     SPI2_Exchange8bit@data:
  1388                           	opt stack 0
  1389  000064                     HALResetPinOutputValue@value:
  1390                           	opt stack 0
  1391  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1392                           	opt stack 0
  1393  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1394                           	opt stack 0
  1395  000064                     RADIO_SetOutputPower@power:
  1396                           	opt stack 0
  1397  000064                     RADIO_SetCRC@crc:
  1398                           	opt stack 0
  1399  000064                     RADIO_SetIQInverted@iqInverted:
  1400                           	opt stack 0
  1401  000064                     RADIO_SetBandwidth@bandwidth:
  1402                           	opt stack 0
  1403  000064                     RADIO_SetModulation@modulation:
  1404                           	opt stack 0
  1405  000064                     ValidateDataRate@dataRate:
  1406                           	opt stack 0
  1407  000064                     ValidateTxPower@result:
  1408                           	opt stack 0
  1409  000064                     UpdateDLSettings@dlRx1DrOffset:
  1410                           	opt stack 0
  1411  000064                     UpdateDataRange@dataRangeNew:
  1412                           	opt stack 0
  1413  000064                     UpdateChannelIdStatus@statusNew:
  1414                           	opt stack 0
  1415  000064                     ValidateRxOffset@rxOffset:
  1416                           	opt stack 0
  1417  000064                     ValidateChannelId@allowedForDefaultChannels:
  1418                           	opt stack 0
  1419  000064                     ValidateChannelMaskCntl@result:
  1420                           	opt stack 0
  1421  000064                     UpdateCurrentDataRate@valueNew:
  1422                           	opt stack 0
  1423  000064                     UpdateTxPower@txPowerNew:
  1424                           	opt stack 0
  1425  000064                     UpdateJoinInProgress@state:
  1426                           	opt stack 0
  1427  000064                     INTERRUPT_GetDioStatus@a:
  1428                           	opt stack 0
  1429  000064                     EncKeySchedule@key:
  1430                           	opt stack 0
  1431  000064                     ___abdiv@divisor:
  1432                           	opt stack 0
  1433  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1434                           	opt stack 0
  1435  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1436                           	opt stack 0
  1437  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1438                           	opt stack 0
  1439  000064                     SwTimerSetCallback@callback:
  1440                           	opt stack 0
  1441  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1442                           	opt stack 0
  1443  000064                     ExecuteDutyCycle@ptr:
  1444                           	opt stack 0
  1445  000064                     ExecuteDevStatus@ptr:
  1446                           	opt stack 0
  1447  000064                     UpdateDutyCycle@dutyCycleNew:
  1448                           	opt stack 0
  1449  000064                     ValidateChannelMask@channelMask:
  1450                           	opt stack 0
  1451  000064                     TMR1_WriteTimer@timerVal:
  1452                           	opt stack 0
  1453  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1454                           	opt stack 0
  1455  000064                     TMR3_SetInterruptHandler@InterruptHandler:
  1456                           	opt stack 0
  1457  000064                     FillSubKey@source:
  1458                           	opt stack 0
  1459  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1460                           	opt stack 0
  1461  000064                     ExecuteLinkCheck@ptr:
  1462                           	opt stack 0
  1463  000064                     IncludeMacCommandsResponse@macBuffer:
  1464                           	opt stack 0
  1465  000064                     CheckFlags@hdr:
  1466                           	opt stack 0
  1467  000064                     CheckMcastFlags@hdr:
  1468                           	opt stack 0
  1469  000064                     EncodeShiftRow@stateTable:
  1470                           	opt stack 0
  1471  000064                     RxDataDone@pData:
  1472                           	opt stack 0
  1473  000064                     memcpy@d1:
  1474                           	opt stack 0
  1475  000064                     memset@p1:
  1476                           	opt stack 0
  1477  000064                     SystemBlockingWaitMs@ms:
  1478                           	opt stack 0
  1479  000064                     RADIO_SetChannelFrequency@frequency:
  1480                           	opt stack 0
  1481  000064                     ValidateFrequency@frequencyNew:
  1482                           	opt stack 0
  1483  000064                     UpdateFrequency@frequencyNew:
  1484                           	opt stack 0
  1485  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1486                           	opt stack 0
  1487  000064                     UpdateReceiveWindow2Parameters@frequency:
  1488                           	opt stack 0
  1489  000064                     ___lmul@multiplier:
  1490                           	opt stack 0
  1491  000064                     ___lldiv@dividend:
  1492                           	opt stack 0
  1493  000064                     ___llmod@dividend:
  1494                           	opt stack 0
  1495                           
  1496                           ; 4 bytes @ 0x4
  1497  000064                     	ds	1
  1498  000065                     ??_UpdateDataRange:
  1499  000065                     ??_UpdateChannelIdStatus:
  1500  000065                     ??_EncKeySchedule:
  1501  000065                     SwTimerIsRunning@isRunning:
  1502                           	opt stack 0
  1503  000065                     HALSPISend@data:
  1504                           	opt stack 0
  1505  000065                     ValidateDataRate@result:
  1506                           	opt stack 0
  1507  000065                     ValidateTxPower@txPowerNew:
  1508                           	opt stack 0
  1509  000065                     UpdateDLSettings@dlRx2Dr:
  1510                           	opt stack 0
  1511  000065                     ValidateRxOffset@result:
  1512                           	opt stack 0
  1513  000065                     ValidateChannelId@result:
  1514                           	opt stack 0
  1515  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1516                           	opt stack 0
  1517  000065                     UpdateMinMaxChDataRate@i:
  1518                           	opt stack 0
  1519  000065                     FindSmallestDataRate@found:
  1520                           	opt stack 0
  1521  000065                     ADC_SelChannel@c:
  1522                           	opt stack 0
  1523  000065                     ___abdiv@counter:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x5
  1527  000065                     	ds	1
  1528  000066                     ??_TMR1_ReadTimer:
  1529  000066                     ??_ExecuteDutyCycle:
  1530  000066                     ?_ADC_Read:
  1531                           	opt stack 0
  1532  000066                     SwTimerSetCallback@callbackParameter:
  1533                           	opt stack 0
  1534  000066                     RADIO_RegisterWrite@value:
  1535                           	opt stack 0
  1536  000066                     RADIO_RegisterRead@reg:
  1537                           	opt stack 0
  1538  000066                     UpdateDataRange@channelId:
  1539                           	opt stack 0
  1540  000066                     UpdateChannelIdStatus@channelId:
  1541                           	opt stack 0
  1542  000066                     ValidateDataRange@result:
  1543                           	opt stack 0
  1544  000066                     ValidateChannelId@channelId:
  1545                           	opt stack 0
  1546  000066                     UpdateDutyCycle@channelId:
  1547                           	opt stack 0
  1548  000066                     ValidateChannelMask@i:
  1549                           	opt stack 0
  1550  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1551                           	opt stack 0
  1552  000066                     FindSmallestDataRate@i:
  1553                           	opt stack 0
  1554  000066                     EncodeShiftRow@temp:
  1555                           	opt stack 0
  1556  000066                     RxDataDone@dataLength:
  1557                           	opt stack 0
  1558  000066                     ___abdiv@sign:
  1559                           	opt stack 0
  1560  000066                     FillSubKey@key:
  1561                           	opt stack 0
  1562  000066                     memcpy@s1:
  1563                           	opt stack 0
  1564  000066                     memset@c:
  1565                           	opt stack 0
  1566                           
  1567                           ; 2 bytes @ 0x6
  1568  000066                     	ds	1
  1569  000067                     SwTimerSetCallback@timerId:
  1570                           	opt stack 0
  1571  000067                     RADIO_RegisterWrite@reg:
  1572                           	opt stack 0
  1573  000067                     RADIO_RegisterRead@readValue:
  1574                           	opt stack 0
  1575  000067                     UpdateDataRange@i:
  1576                           	opt stack 0
  1577  000067                     UpdateChannelIdStatus@i:
  1578                           	opt stack 0
  1579  000067                     ValidateDataRange@dataRangeNew:
  1580                           	opt stack 0
  1581  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1582                           	opt stack 0
  1583  000067                     FindSmallestDataRate@dataRate:
  1584                           	opt stack 0
  1585  000067                     RxDataDone@status:
  1586                           	opt stack 0
  1587  000067                     ___abdiv@quotient:
  1588                           	opt stack 0
  1589                           
  1590                           ; 1 bytes @ 0x7
  1591  000067                     	ds	1
  1592  000068                     ??_IncludeMacCommandsResponse:
  1593  000068                     ??_ADC_Read:
  1594  000068                     ??_SystemBlockingWaitMs:
  1595  000068                     RADIO_WritePower@ocp:
  1596                           	opt stack 0
  1597  000068                     RADIO_UnhandledInterrupt@modulation:
  1598                           	opt stack 0
  1599  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1600                           	opt stack 0
  1601  000068                     ValidateFrequency@result:
  1602                           	opt stack 0
  1603  000068                     ValidateDataRange@dataRateMax:
  1604                           	opt stack 0
  1605  000068                     UpdateFrequency@channelId:
  1606                           	opt stack 0
  1607  000068                     FillSubKey@size:
  1608                           	opt stack 0
  1609  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1610                           	opt stack 0
  1611  000068                     UpdateReceiveDelays@delay:
  1612                           	opt stack 0
  1613  000068                     ___abdiv@dividend:
  1614                           	opt stack 0
  1615  000068                     EnableChannels1@channelMask:
  1616                           	opt stack 0
  1617  000068                     TMR1_ReadTimer@readVal:
  1618                           	opt stack 0
  1619  000068                     _EncKeySchedule$4148:
  1620                           	opt stack 0
  1621  000068                     memcpy@n:
  1622                           	opt stack 0
  1623  000068                     memset@n:
  1624                           	opt stack 0
  1625  000068                     ___lmul@multiplicand:
  1626                           	opt stack 0
  1627  000068                     ___lldiv@divisor:
  1628                           	opt stack 0
  1629  000068                     ___llmod@divisor:
  1630                           	opt stack 0
  1631                           
  1632                           ; 4 bytes @ 0x8
  1633  000068                     	ds	1
  1634  000069                     ??_FillSubKey:
  1635  000069                     ??_RADIO_DIO3:
  1636  000069                     ??_RADIO_DIO4:
  1637  000069                     ??_RADIO_DIO5:
  1638  000069                     ?_ExecuteRxTimingSetup:
  1639                           	opt stack 0
  1640  000069                     RADIO_WriteMode@newModulation:
  1641                           	opt stack 0
  1642  000069                     RADIO_WritePower@paDac:
  1643                           	opt stack 0
  1644  000069                     ExecuteDutyCycle@maxDCycle:
  1645                           	opt stack 0
  1646  000069                     ValidateDataRange@dataRateMin:
  1647                           	opt stack 0
  1648  000069                     ExecuteRxTimingSetup@ptr:
  1649                           	opt stack 0
  1650                           
  1651                           ; 2 bytes @ 0x9
  1652  000069                     	ds	1
  1653  00006A                     RADIO_WriteMode@blocking:
  1654                           	opt stack 0
  1655  00006A                     RADIO_WritePower@power:
  1656                           	opt stack 0
  1657  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1658                           	opt stack 0
  1659  00006A                     EnableChannels1@channelMaskCntl:
  1660                           	opt stack 0
  1661  00006A                     TMR1_ReadTimer@readValHigh:
  1662                           	opt stack 0
  1663  00006A                     FillSubKey@carry:
  1664                           	opt stack 0
  1665  00006A                     CountfOptsLength@macCommandLength:
  1666                           	opt stack 0
  1667  00006A                     ADC_Read@channel:
  1668                           	opt stack 0
  1669  00006A                     AESEncode@block:
  1670                           	opt stack 0
  1671  00006A                     memcpy@d:
  1672                           	opt stack 0
  1673  00006A                     memset@p:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0xA
  1677  00006A                     	ds	1
  1678  00006B                     RADIO_WriteMode@currentModulation:
  1679                           	opt stack 0
  1680  00006B                     EnableChannels1@channelIndexMin:
  1681                           	opt stack 0
  1682  00006B                     TMR1_ReadTimer@readValLow:
  1683                           	opt stack 0
  1684  00006B                     FillSubKey@i:
  1685                           	opt stack 0
  1686  00006B                     ExecuteRxTimingSetup@delay:
  1687                           	opt stack 0
  1688  00006B                     CountfOptsLength@i:
  1689                           	opt stack 0
  1690  00006B                     ADC_Read@result:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0xB
  1694  00006B                     	ds	1
  1695  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1696  00006C                     ?_TMR_SwapTimer:
  1697                           	opt stack 0
  1698  00006C                     ?_TMR_GetDeltaTime:
  1699                           	opt stack 0
  1700  00006C                     RADIO_WriteMode@dioMapping:
  1701                           	opt stack 0
  1702  00006C                     EnableChannels1@channelIndexMax:
  1703                           	opt stack 0
  1704  00006C                     AESEncode@key:
  1705                           	opt stack 0
  1706  00006C                     ___llmod@counter:
  1707                           	opt stack 0
  1708  00006C                     TMR_SwapTimer@timerVal:
  1709                           	opt stack 0
  1710  00006C                     memcpy@s:
  1711                           	opt stack 0
  1712  00006C                     ___lmul@product:
  1713                           	opt stack 0
  1714  00006C                     ___lldiv@quotient:
  1715                           	opt stack 0
  1716                           
  1717                           ; 4 bytes @ 0xC
  1718  00006C                     	ds	1
  1719  00006D                     ??_AESEncode:
  1720  00006D                     RADIO_WriteMode@currentMode:
  1721                           	opt stack 0
  1722  00006D                     EnableChannels1@i:
  1723                           	opt stack 0
  1724  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0xD
  1728  00006D                     	ds	1
  1729  00006E                     ?_ExtractMic:
  1730                           	opt stack 0
  1731  00006E                     RADIO_WriteMode@newMode:
  1732                           	opt stack 0
  1733  00006E                     InitDefault868Channels@i:
  1734                           	opt stack 0
  1735  00006E                     InitDefault433Channels@i:
  1736                           	opt stack 0
  1737  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1738                           	opt stack 0
  1739  00006E                     IncludeMacCommandsResponse@i:
  1740                           	opt stack 0
  1741  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1742                           	opt stack 0
  1743  00006E                     EnableChannels@channelMask:
  1744                           	opt stack 0
  1745  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1746                           	opt stack 0
  1747  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1748                           	opt stack 0
  1749  00006E                     PrepareSessionKeys@sessionKey:
  1750                           	opt stack 0
  1751  00006E                     ExtractMic@buffer:
  1752                           	opt stack 0
  1753  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1754                           	opt stack 0
  1755  00006E                     AssembleEncryptionBlock@frameCounter:
  1756                           	opt stack 0
  1757                           
  1758                           ; 4 bytes @ 0xE
  1759  00006E                     	ds	1
  1760  00006F                     RADIO_WriteMode@opMode:
  1761                           	opt stack 0
  1762  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1763                           	opt stack 0
  1764                           
  1765                           ; 1 bytes @ 0xF
  1766  00006F                     	ds	1
  1767  000070                     ??_TMR_GetDeltaTime:
  1768  000070                     ?_rand:
  1769                           	opt stack 0
  1770  000070                     ?_RADIO_ReadRandom:
  1771                           	opt stack 0
  1772  000070                     ?_ExecuteNewChannel:
  1773                           	opt stack 0
  1774  000070                     ?_ExecuteRxParamSetupReq:
  1775                           	opt stack 0
  1776  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1777                           	opt stack 0
  1778  000070                     EnableChannels@channelMaskCntl:
  1779                           	opt stack 0
  1780  000070                     ExtractMic@bufferLength:
  1781                           	opt stack 0
  1782  000070                     ___lldiv@counter:
  1783                           	opt stack 0
  1784  000070                     ExecuteNewChannel@ptr:
  1785                           	opt stack 0
  1786  000070                     ExecuteRxParamSetupReq@ptr:
  1787                           	opt stack 0
  1788  000070                     UpdateCfList@joinAccept:
  1789                           	opt stack 0
  1790  000070                     PrepareSessionKeys@appNonce:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x10
  1794  000070                     	ds	1
  1795  000071                     ?_ExecuteLinkAdr:
  1796                           	opt stack 0
  1797  000071                     ExecuteLinkAdr@ptr:
  1798                           	opt stack 0
  1799  000071                     SwTimerSetTimeout@timeout:
  1800                           	opt stack 0
  1801  000071                     RADIO_WriteFrequency@frequency:
  1802                           	opt stack 0
  1803  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1804                           	opt stack 0
  1805  000071                     RADIO_WriteFSKBitRate@bitRate:
  1806                           	opt stack 0
  1807  000071                     ConfigureRadio@freq:
  1808                           	opt stack 0
  1809                           
  1810                           ; 4 bytes @ 0x11
  1811  000071                     	ds	1
  1812  000072                     ??_ExtractMic:
  1813  000072                     ??_TMR_OverrideRemaining:
  1814  000072                     ??_UpdateCfList:
  1815  000072                     ?___lwmod:
  1816                           	opt stack 0
  1817  000072                     ExecuteNewChannel@drRange:
  1818                           	opt stack 0
  1819  000072                     AssembleEncryptionBlock@blockId:
  1820                           	opt stack 0
  1821  000072                     RADIO_ReadRandom@retVal:
  1822                           	opt stack 0
  1823  000072                     PrepareSessionKeys@networkId:
  1824                           	opt stack 0
  1825  000072                     ___lwmod@dividend:
  1826                           	opt stack 0
  1827  000072                     ExecuteRxParamSetupReq@frequency:
  1828                           	opt stack 0
  1829                           
  1830                           ; 4 bytes @ 0x12
  1831  000072                     	ds	1
  1832  000073                     ??_ExecuteLinkAdr:
  1833  000073                     AssembleEncryptionBlock@firstByte:
  1834                           	opt stack 0
  1835  000073                     ExecuteNewChannel@frequency:
  1836                           	opt stack 0
  1837                           
  1838                           ; 4 bytes @ 0x13
  1839  000073                     	ds	1
  1840  000074                     RADIO_ReadRandom@i:
  1841                           	opt stack 0
  1842  000074                     UpdateCfList@bufferLength:
  1843                           	opt stack 0
  1844  000074                     PrepareSessionKeys@index:
  1845                           	opt stack 0
  1846  000074                     AssembleEncryptionBlock@multicastStatus:
  1847                           	opt stack 0
  1848  000074                     TMR_OverrideRemaining@tmrVal:
  1849                           	opt stack 0
  1850  000074                     ExecuteLinkAdr@channelMask:
  1851                           	opt stack 0
  1852  000074                     ___lwmod@divisor:
  1853                           	opt stack 0
  1854  000074                     ExtractMic@mic:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x14
  1858  000074                     	ds	1
  1859  000075                     ??_SwTimerSetTimeout:
  1860  000075                     ConfigureRadio@dataRate:
  1861                           	opt stack 0
  1862  000075                     AssembleEncryptionBlock@dir:
  1863                           	opt stack 0
  1864  000075                     _AESEncode$4143:
  1865                           	opt stack 0
  1866  000075                     srand@x:
  1867                           	opt stack 0
  1868  000075                     RADIO_WriteFrequency@num_mod:
  1869                           	opt stack 0
  1870  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1871                           	opt stack 0
  1872  000075                     RADIO_WriteFSKBitRate@num:
  1873                           	opt stack 0
  1874  000075                     UpdateCfList@frequency:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x15
  1878  000075                     	ds	1
  1879  000076                     ExecuteLinkAdr@txPower:
  1880                           	opt stack 0
  1881  000076                     ExecuteRxParamSetupReq@dlSettings:
  1882                           	opt stack 0
  1883  000076                     AssembleEncryptionBlock@bufferIndex:
  1884                           	opt stack 0
  1885  000076                     ___lwmod@counter:
  1886                           	opt stack 0
  1887  000076                     TMR_OverrideRemaining@oldReloadVal:
  1888                           	opt stack 0
  1889  000076                     ConfigureRadioTx@freq:
  1890                           	opt stack 0
  1891  000076                     ConfigureRadioRx@freq:
  1892                           	opt stack 0
  1893                           
  1894                           ; 4 bytes @ 0x16
  1895  000076                     	ds	1
  1896  000077                     ?_Random:
  1897                           	opt stack 0
  1898  000077                     ExecuteNewChannel@channelIndex:
  1899                           	opt stack 0
  1900  000077                     ExecuteLinkAdr@redundancy:
  1901                           	opt stack 0
  1902  000077                     Random@max:
  1903                           	opt stack 0
  1904  000077                     _AESEncode$4144:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x17
  1908  000077                     	ds	2
  1909  000079                     SwTimerSetTimeout@timerId:
  1910                           	opt stack 0
  1911  000079                     ExecuteLinkAdr@dataRate:
  1912                           	opt stack 0
  1913  000079                     SearchAvailableChannel@transmissionType:
  1914                           	opt stack 0
  1915  000079                     UpdateCfList@channelIndex:
  1916                           	opt stack 0
  1917  000079                     _AESEncode$4145:
  1918                           	opt stack 0
  1919  000079                     RADIO_WriteFrequency@num:
  1920                           	opt stack 0
  1921                           
  1922                           ; 4 bytes @ 0x19
  1923  000079                     	ds	1
  1924  00007A                     ?_MacExecuteCommands:
  1925                           	opt stack 0
  1926  00007A                     UpdateCfList@i:
  1927                           	opt stack 0
  1928  00007A                     ConfigureRadioTx@dataRate:
  1929                           	opt stack 0
  1930  00007A                     ConfigureRadioRx@dataRate:
  1931                           	opt stack 0
  1932  00007A                     SearchAvailableChannel@channelIndex:
  1933                           	opt stack 0
  1934  00007A                     MacExecuteCommands@buffer:
  1935                           	opt stack 0
  1936                           
  1937                           ; 2 bytes @ 0x1A
  1938  00007A                     	ds	1
  1939  00007B                     ConfigureRadioTx@txPower:
  1940                           	opt stack 0
  1941  00007B                     AESEncode@aux:
  1942                           	opt stack 0
  1943                           
  1944                           ; 1 bytes @ 0x1B
  1945  00007B                     	ds	1
  1946  00007C                     ??_SearchAvailableChannel:
  1947  00007C                     ?_SwTimersInterrupt:
  1948                           	opt stack 0
  1949  00007C                     MacExecuteCommands@fOptsLen:
  1950                           	opt stack 0
  1951  00007C                     AESEncode@aux2:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x1C
  1955  00007C                     	ds	1
  1956  00007D                     ??_MacExecuteCommands:
  1957  00007D                     ??_RADIO_DIO2:
  1958  00007D                     AESEncode@aux1:
  1959                           	opt stack 0
  1960  00007D                     RADIO_Init@radioBuffer:
  1961                           	opt stack 0
  1962  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0x1D
  1966  00007D                     	ds	1
  1967  00007E                     RADIO_DIO2@dioMapping:
  1968                           	opt stack 0
  1969  00007E                     AESEncode@aux3:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0x1E
  1973  00007E                     	ds	1
  1974  00007F                     ??_RADIO_WriteConfiguration:
  1975  00007F                     MacExecuteCommands@done:
  1976                           	opt stack 0
  1977  00007F                     AESEncode@i:
  1978                           	opt stack 0
  1979  00007F                     RADIO_Init@frequency:
  1980                           	opt stack 0
  1981                           
  1982                           ; 4 bytes @ 0x1F
  1983  00007F                     	ds	1
  1984  000080                     SearchAvailableChannel@randomNumberCopy:
  1985                           	opt stack 0
  1986  000080                     MacExecuteCommands@ptr:
  1987                           	opt stack 0
  1988  000080                     AESEncodeLoRa@block:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x20
  1992  000080                     	ds	1
  1993  000081                     RADIO_WriteConfiguration@i:
  1994                           	opt stack 0
  1995  000081                     SearchAvailableChannel@result:
  1996                           	opt stack 0
  1997                           
  1998                           ; 1 bytes @ 0x21
  1999  000081                     	ds	1
  2000  000082                     SearchAvailableChannel@maxChannels:
  2001                           	opt stack 0
  2002  000082                     AESEncodeLoRa@key:
  2003                           	opt stack 0
  2004  000082                     RADIO_WriteConfiguration@tempValue:
  2005                           	opt stack 0
  2006                           
  2007                           ; 4 bytes @ 0x22
  2008  000082                     	ds	1
  2009  000083                     ??_RADIO_Init:
  2010  000083                     SearchAvailableChannel@randomNumber:
  2011                           	opt stack 0
  2012                           
  2013                           ; 1 bytes @ 0x23
  2014  000083                     	ds	1
  2015  000084                     SearchAvailableChannel@i:
  2016                           	opt stack 0
  2017  000084                     SwTimersInterrupt@timeElapsed:
  2018                           	opt stack 0
  2019  000084                     AESEncodeLoRa@useKey:
  2020                           	opt stack 0
  2021                           
  2022                           ; 16 bytes @ 0x24
  2023  000084                     	ds	1
  2024  000085                     SelectChannelForTransmission@transmissionType:
  2025                           	opt stack 0
  2026                           
  2027                           ; 1 bytes @ 0x25
  2028  000085                     	ds	1
  2029  000086                     RADIO_WriteConfiguration@regValue:
  2030                           	opt stack 0
  2031  000086                     SelectChannelForTransmission@result:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x26
  2035  000086                     	ds	1
  2036  000087                     SelectChannelForTransmission@channelIndex:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x27
  2040  000087                     	ds	1
  2041  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2042                           	opt stack 0
  2043                           
  2044                           ; 4 bytes @ 0x28
  2045  000088                     	ds	4
  2046  00008C                     SwTimersInterrupt@i:
  2047                           	opt stack 0
  2048                           
  2049                           ; 1 bytes @ 0x2C
  2050  00008C                     	ds	1
  2051  00008D                     ?_SwTimerReadValue:
  2052                           	opt stack 0
  2053                           
  2054                           ; 4 bytes @ 0x2D
  2055  00008D                     	ds	4
  2056  000091                     SwTimerReadValue@ticksCount:
  2057                           	opt stack 0
  2058  000091                     SwTimerStart@ticksRemaining:
  2059                           	opt stack 0
  2060                           
  2061                           ; 4 bytes @ 0x31
  2062  000091                     	ds	3
  2063  000094                     GenerateSubkey@key:
  2064                           	opt stack 0
  2065  000094                     ComputeSessionKeys@joinAcceptBuffer:
  2066                           	opt stack 0
  2067  000094                     EncryptFRMPayload@buffer:
  2068                           	opt stack 0
  2069                           
  2070                           ; 2 bytes @ 0x34
  2071  000094                     	ds	1
  2072  000095                     SwTimerReadValue@timerId:
  2073                           	opt stack 0
  2074  000095                     SwTimerStart@timerId:
  2075                           	opt stack 0
  2076                           
  2077                           ; 1 bytes @ 0x35
  2078  000095                     	ds	1
  2079  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2080  000096                     ??_StartReTxTimer:
  2081  000096                     ?_RADIO_Transmit:
  2082                           	opt stack 0
  2083  000096                     ?_RADIO_ReceiveStart:
  2084                           	opt stack 0
  2085  000096                     EncryptFRMPayload@bufferLength:
  2086                           	opt stack 0
  2087  000096                     RADIO_Transmit@buffer:
  2088                           	opt stack 0
  2089  000096                     RADIO_ReceiveStart@rxWindowSize:
  2090                           	opt stack 0
  2091  000096                     GenerateSubkey@k1:
  2092                           	opt stack 0
  2093  000096                     LORAWAN_LinkCheckConfigure@period:
  2094                           	opt stack 0
  2095                           
  2096                           ; 2 bytes @ 0x36
  2097  000096                     	ds	1
  2098  000097                     EncryptFRMPayload@dir:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x37
  2102  000097                     	ds	1
  2103  000098                     ??_LORAWAN_LinkCheckConfigure:
  2104  000098                     ??_RADIO_ReceiveStart:
  2105  000098                     RADIO_Transmit@bufferLen:
  2106                           	opt stack 0
  2107  000098                     GenerateSubkey@k2:
  2108                           	opt stack 0
  2109  000098                     EncryptFRMPayload@frameCounter:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x38
  2113  000098                     	ds	1
  2114  000099                     ??_RADIO_Transmit:
  2115                           
  2116                           ; 1 bytes @ 0x39
  2117  000099                     	ds	1
  2118  00009A                     ??_GenerateSubkey:
  2119  00009A                     StartReTxTimer@minim:
  2120                           	opt stack 0
  2121                           
  2122                           ; 4 bytes @ 0x3A
  2123  00009A                     	ds	1
  2124  00009B                     GenerateSubkey@const_Rb:
  2125                           	opt stack 0
  2126                           
  2127                           ; 16 bytes @ 0x3B
  2128  00009B                     	ds	1
  2129  00009C                     EncryptFRMPayload@key:
  2130                           	opt stack 0
  2131  00009C                     _RADIO_ReceiveStart$1199:
  2132                           	opt stack 0
  2133                           
  2134                           ; 4 bytes @ 0x3C
  2135  00009C                     	ds	2
  2136  00009E                     StartReTxTimer@i:
  2137                           	opt stack 0
  2138  00009E                     EncryptFRMPayload@macBufferIndex:
  2139                           	opt stack 0
  2140                           
  2141                           ; 1 bytes @ 0x3E
  2142  00009E                     	ds	1
  2143  00009F                     EncryptFRMPayload@bufferToBeEncrypted:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x3F
  2147  00009F                     	ds	1
  2148  0000A0                     LORAWAN_TxDone@timeOnAir:
  2149                           	opt stack 0
  2150  0000A0                     _LORAWAN_LinkCheckConfigure$3502:
  2151                           	opt stack 0
  2152                           
  2153                           ; 4 bytes @ 0x40
  2154  0000A0                     	ds	1
  2155  0000A1                     EncryptFRMPayload@multicastStatus:
  2156                           	opt stack 0
  2157  0000A1                     _RADIO_Transmit$1196:
  2158                           	opt stack 0
  2159                           
  2160                           ; 4 bytes @ 0x41
  2161  0000A1                     	ds	1
  2162  0000A2                     ??_LORAWAN_TxDone:
  2163  0000A2                     ??_EncryptFRMPayload:
  2164                           
  2165                           ; 1 bytes @ 0x42
  2166  0000A2                     	ds	2
  2167  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2168                           	opt stack 0
  2169                           
  2170                           ; 1 bytes @ 0x44
  2171  0000A4                     	ds	1
  2172  0000A5                     RADIO_Transmit@regValue:
  2173                           	opt stack 0
  2174  0000A5                     LORAWAN_Reset@ismBandNew:
  2175                           	opt stack 0
  2176                           
  2177                           ; 1 bytes @ 0x45
  2178  0000A5                     	ds	1
  2179  0000A6                     RADIO_Transmit@i:
  2180                           	opt stack 0
  2181  0000A6                     LORAWAN_Init@RxPayload:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x46
  2185  0000A6                     	ds	1
  2186  0000A7                     ??_LORAWAN_RxTimeout:
  2187  0000A7                     EncryptFRMPayload@k:
  2188                           	opt stack 0
  2189                           
  2190                           ; 1 bytes @ 0x47
  2191  0000A7                     	ds	1
  2192  0000A8                     EncryptFRMPayload@i:
  2193                           	opt stack 0
  2194  0000A8                     LORAWAN_Init@RxJoinResponse:
  2195                           	opt stack 0
  2196                           
  2197                           ; 2 bytes @ 0x48
  2198  0000A8                     	ds	1
  2199  0000A9                     EncryptFRMPayload@j:
  2200                           	opt stack 0
  2201                           
  2202                           ; 1 bytes @ 0x49
  2203  0000A9                     	ds	1
  2204  0000AA                     
  2205                           ; 1 bytes @ 0x4A
  2206  0000AA                     	ds	1
  2207  0000AB                     LORAWAN_RxTimeout@minim:
  2208                           	opt stack 0
  2209  0000AB                     GenerateSubkey@l:
  2210                           	opt stack 0
  2211                           
  2212                           ; 16 bytes @ 0x4B
  2213  0000AB                     	ds	4
  2214  0000AF                     LORAWAN_RxTimeout@i:
  2215                           	opt stack 0
  2216                           
  2217                           ; 1 bytes @ 0x4F
  2218  0000AF                     	ds	1
  2219  0000B0                     ??_RADIO_DIO1:
  2220                           
  2221                           ; 1 bytes @ 0x50
  2222  0000B0                     	ds	1
  2223  0000B1                     RADIO_DIO1@dioMapping:
  2224                           	opt stack 0
  2225                           
  2226                           ; 1 bytes @ 0x51
  2227  0000B1                     	ds	10
  2228  0000BB                     GenerateSubkey@i:
  2229                           	opt stack 0
  2230                           
  2231                           ; 1 bytes @ 0x5B
  2232  0000BB                     	ds	1
  2233  0000BC                     AESCmac@key:
  2234                           	opt stack 0
  2235  0000BC                     _LORAWAN_TxDone$2092:
  2236                           	opt stack 0
  2237                           
  2238                           ; 4 bytes @ 0x5C
  2239  0000BC                     	ds	2
  2240  0000BE                     AESCmac@output:
  2241                           	opt stack 0
  2242                           
  2243                           ; 2 bytes @ 0x5E
  2244  0000BE                     	ds	2
  2245  0000C0                     AESCmac@input:
  2246                           	opt stack 0
  2247  0000C0                     _LORAWAN_TxDone$2093:
  2248                           	opt stack 0
  2249                           
  2250                           ; 4 bytes @ 0x60
  2251  0000C0                     	ds	2
  2252  0000C2                     AESCmac@size:
  2253                           	opt stack 0
  2254                           
  2255                           ; 1 bytes @ 0x62
  2256  0000C2                     	ds	1
  2257  0000C3                     ??_AESCmac:
  2258                           
  2259                           ; 1 bytes @ 0x63
  2260  0000C3                     	ds	1
  2261  0000C4                     LORAWAN_TxDone@found:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x64
  2265  0000C4                     	ds	1
  2266  0000C5                     LORAWAN_TxDone@delta:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x65
  2270  0000C5                     	ds	4
  2271  0000C9                     LORAWAN_TxDone@ticks:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x69
  2275  0000C9                     	ds	1
  2276  0000CA                     ?_ComputeMic:
  2277                           	opt stack 0
  2278  0000CA                     AssemblePacket@port:
  2279                           	opt stack 0
  2280  0000CA                     ComputeMic@key:
  2281                           	opt stack 0
  2282                           
  2283                           ; 2 bytes @ 0x6A
  2284  0000CA                     	ds	1
  2285  0000CB                     AssemblePacket@buffer:
  2286                           	opt stack 0
  2287                           
  2288                           ; 2 bytes @ 0x6B
  2289  0000CB                     	ds	1
  2290  0000CC                     ComputeMic@buffer:
  2291                           	opt stack 0
  2292                           
  2293                           ; 2 bytes @ 0x6C
  2294  0000CC                     	ds	1
  2295  0000CD                     AssemblePacket@bufferLength:
  2296                           	opt stack 0
  2297  0000CD                     LORAWAN_TxDone@minim:
  2298                           	opt stack 0
  2299                           
  2300                           ; 4 bytes @ 0x6D
  2301  0000CD                     	ds	1
  2302  0000CE                     ComputeMic@bufferLength:
  2303                           	opt stack 0
  2304                           
  2305                           ; 1 bytes @ 0x6E
  2306  0000CE                     	ds	1
  2307  0000CF                     ??_AssemblePacket:
  2308  0000CF                     ComputeMic@mic:
  2309                           	opt stack 0
  2310                           
  2311                           ; 4 bytes @ 0x6F
  2312  0000CF                     	ds	2
  2313  0000D1                     LORAWAN_TxDone@i:
  2314                           	opt stack 0
  2315  0000D1                     AssemblePacket@confirmed:
  2316                           	opt stack 0
  2317                           
  2318                           ; 1 bytes @ 0x71
  2319  0000D1                     	ds	1
  2320  0000D2                     ??_RADIO_TxDone:
  2321  0000D2                     ??_RADIO_FSKPacketSent:
  2322  0000D2                     AssemblePacket@mhdr:
  2323                           	opt stack 0
  2324                           
  2325                           ; 1 bytes @ 0x72
  2326  0000D2                     	ds	1
  2327  0000D3                     ??_PrepareJoinRequestFrame:
  2328  0000D3                     AssemblePacket@fCtrl:
  2329                           	opt stack 0
  2330                           
  2331                           ; 1 bytes @ 0x73
  2332  0000D3                     	ds	1
  2333  0000D4                     AssemblePacket@macCmdIdx:
  2334                           	opt stack 0
  2335                           
  2336                           ; 1 bytes @ 0x74
  2337  0000D4                     	ds	1
  2338  0000D5                     AssemblePacket@bufferIndex:
  2339                           	opt stack 0
  2340  0000D5                     PrepareJoinRequestFrame@mic:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x75
  2344  0000D5                     	ds	1
  2345  0000D6                     LORAWAN_Send@port:
  2346                           	opt stack 0
  2347  0000D6                     RADIO_TxDone@timeOnAir:
  2348                           	opt stack 0
  2349  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2350                           	opt stack 0
  2351                           
  2352                           ; 4 bytes @ 0x76
  2353  0000D6                     	ds	1
  2354  0000D7                     LORAWAN_Send@buffer:
  2355                           	opt stack 0
  2356                           
  2357                           ; 2 bytes @ 0x77
  2358  0000D7                     	ds	2
  2359  0000D9                     LORAWAN_Send@bufferLength:
  2360                           	opt stack 0
  2361  0000D9                     PrepareJoinRequestFrame@mhdr:
  2362                           	opt stack 0
  2363                           
  2364                           ; 1 bytes @ 0x79
  2365  0000D9                     	ds	1
  2366  0000DA                     ??_LORAWAN_Send:
  2367  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2368                           	opt stack 0
  2369  0000DA                     _RADIO_TxDone$1211:
  2370                           	opt stack 0
  2371  0000DA                     _RADIO_FSKPacketSent$1215:
  2372                           	opt stack 0
  2373                           
  2374                           ; 4 bytes @ 0x7A
  2375  0000DA                     	ds	1
  2376  0000DB                     LORAWAN_Send@result:
  2377                           	opt stack 0
  2378  0000DB                     PrepareJoinRequestFrame@iCtr:
  2379                           	opt stack 0
  2380                           
  2381                           ; 1 bytes @ 0x7B
  2382  0000DB                     	ds	1
  2383  0000DC                     LORAWAN_Join@bufferIndex:
  2384                           	opt stack 0
  2385  0000DC                     LORAWAN_Send@confirmed:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0x7C
  2389  0000DC                     	ds	1
  2390  0000DD                     ??_LORAWAN_RxDone:
  2391  0000DD                     ??_readAndSend:
  2392  0000DD                     ??_SwTimersExecute:
  2393  0000DD                     LORAWAN_Join@result:
  2394                           	opt stack 0
  2395                           
  2396                           ; 1 bytes @ 0x7D
  2397  0000DD                     	ds	1
  2398  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2399                           	opt stack 0
  2400  0000DE                     LORAWAN_Join@activationTypeNew:
  2401                           	opt stack 0
  2402  0000DE                     readAndSend@j:
  2403                           	opt stack 0
  2404                           
  2405                           ; 2 bytes @ 0x7E
  2406  0000DE                     	ds	3
  2407  0000E1                     SwTimersExecute@i:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x81
  2411  0000E1                     	ds	1
  2412  0000E2                     RADIO_RxDone@irqFlags:
  2413                           	opt stack 0
  2414  0000E2                     RADIO_FSKPayloadReady@irqFlags:
  2415                           	opt stack 0
  2416                           
  2417                           ; 1 bytes @ 0x82
  2418  0000E2                     	ds	1
  2419  0000E3                     RADIO_RxDone@i:
  2420                           	opt stack 0
  2421  0000E3                     RADIO_FSKPayloadReady@i:
  2422                           	opt stack 0
  2423                           
  2424                           ; 1 bytes @ 0x83
  2425  0000E3                     	ds	1
  2426  0000E4                     ??_RADIO_DIO0:
  2427                           
  2428                           ; 1 bytes @ 0x84
  2429  0000E4                     	ds	2
  2430  0000E6                     RADIO_DIO0@dioMapping:
  2431                           	opt stack 0
  2432                           
  2433                           ; 1 bytes @ 0x86
  2434  0000E6                     	ds	1
  2435  0000E7                     RADIO_DIO0@opMode:
  2436                           	opt stack 0
  2437                           
  2438                           ; 1 bytes @ 0x87
  2439  0000E7                     	ds	1
  2440  0000E8                     tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec2	equ	0xFDD
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           
  2450                           ; 1 bytes @ 0x88
  2451                           
  2452                           	psect	cstackCOMRAM
  2453  000001                     __pcstackCOMRAM:
  2454                           	opt stack 0
  2455  000001                     ?i2_TMR1_ReadTimer:
  2456                           	opt stack 0
  2457  000001                     i2TMR1_WriteTimer@timerVal:
  2458                           	opt stack 0
  2459                           
  2460                           ; 2 bytes @ 0x0
  2461  000001                     	ds	2
  2462  000003                     ??i2_TMR1_ReadTimer:
  2463  000003                     
  2464                           ; 1 bytes @ 0x2
  2465  000003                     	ds	2
  2466  000005                     i2TMR1_ReadTimer@readVal:
  2467                           	opt stack 0
  2468                           
  2469                           ; 2 bytes @ 0x4
  2470  000005                     	ds	2
  2471  000007                     i2TMR1_ReadTimer@readValHigh:
  2472                           	opt stack 0
  2473                           
  2474                           ; 1 bytes @ 0x6
  2475  000007                     	ds	1
  2476  000008                     i2TMR1_ReadTimer@readValLow:
  2477                           	opt stack 0
  2478                           
  2479                           ; 1 bytes @ 0x7
  2480  000008                     	ds	1
  2481  000009                     ?i2_TMR_SwapTimer:
  2482                           	opt stack 0
  2483  000009                     ?i2_TMR_GetDeltaTime:
  2484                           	opt stack 0
  2485  000009                     i2TMR_SwapTimer@timerVal:
  2486                           	opt stack 0
  2487                           
  2488                           ; 2 bytes @ 0x8
  2489  000009                     	ds	2
  2490  00000B                     
  2491                           ; 1 bytes @ 0xA
  2492  00000B                     	ds	2
  2493  00000D                     ??i2_TMR_GetDeltaTime:
  2494                           
  2495                           ; 1 bytes @ 0xC
  2496  00000D                     	ds	12
  2497  000019                     ?i2_SwTimersInterrupt:
  2498                           	opt stack 0
  2499                           
  2500                           ; 4 bytes @ 0x18
  2501  000019                     	ds	4
  2502  00001D                     
  2503                           ; 1 bytes @ 0x1C
  2504  00001D                     	ds	4
  2505  000021                     i2SwTimersInterrupt@timeElapsed:
  2506                           	opt stack 0
  2507                           
  2508                           ; 4 bytes @ 0x20
  2509  000021                     	ds	4
  2510  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2511                           	opt stack 0
  2512                           
  2513                           ; 4 bytes @ 0x24
  2514  000025                     	ds	4
  2515  000029                     i2SwTimersInterrupt@i:
  2516                           	opt stack 0
  2517                           
  2518                           ; 1 bytes @ 0x28
  2519  000029                     	ds	1
  2520  00002A                     ??_INTERRUPT_InterruptManager:
  2521                           
  2522                           ; 1 bytes @ 0x29
  2523  00002A                     	ds	8
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           
  2534 ;;
  2535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2536 ;;
  2537 ;; *************** function _main *****************
  2538 ;; Defined at:
  2539 ;;		line 34 in file "main.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels required when called:   19
  2559 ;; This function calls:
  2560 ;;		_ADC_Init
  2561 ;;		_IO_pins_init
  2562 ;;		_LORAWAN_GetState
  2563 ;;		_LORAWAN_Init
  2564 ;;		_LORAWAN_Join
  2565 ;;		_LORAWAN_Mainloop
  2566 ;;		_LORAWAN_SetApplicationSessionKey
  2567 ;;		_LORAWAN_SetDeviceAddress
  2568 ;;		_LORAWAN_SetNetworkSessionKey
  2569 ;;		_LoRaSleep
  2570 ;;		_LoRaWakeUp
  2571 ;;		_SYSTEM_Initialize
  2572 ;;		_SysConfigSleep
  2573 ;;		_TMR3_SetInterruptHandler
  2574 ;;		_readAndSend
  2575 ;; This function is called by:
  2576 ;;		Startup code after reset
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text0
  2581  005A3E                     __ptext0:
  2582                           	opt stack 0
  2583  005A3E                     _main:
  2584                           	opt stack 12
  2585                           
  2586                           ;main.c: 37: SYSTEM_Initialize();
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;incstack = 0
  2590  005A3E  ECBF  F039         	call	_SYSTEM_Initialize	;wreg free
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;main.c: 40: PORTCbits.RC5 = 1;
  2594  005A42  8A82               	bsf	3970,5,c	;volatile
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;main.c: 42: (INTCONbits.GIE = 1);
  2598  005A44  8EF2               	bsf	intcon,7,c	;volatile
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;main.c: 43: (INTCONbits.PEIE = 1);
  2602  005A46  8CF2               	bsf	intcon,6,c	;volatile
  2603                           
  2604                           ;main.c: 44: TMR3_SetInterruptHandler(handle16sInterrupt);
  2605  005A48  0EBC               	movlw	low _handle16sInterrupt
  2606  005A4A  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2607  005A4C  0E76               	movlw	high _handle16sInterrupt
  2608  005A4E  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2609  005A50  ECD7  F03B         	call	_TMR3_SetInterruptHandler	;wreg free
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;main.c: 45: SysConfigSleep();
  2613  005A54  EC81  F030         	call	_SysConfigSleep	;wreg free
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;main.c: 46: ADC_Init();
  2617  005A58  EC9E  F03B         	call	_ADC_Init	;wreg free
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;main.c: 47: IO_pins_init();
  2621  005A5C  EC71  F03B         	call	_IO_pins_init	;wreg free
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;main.c: 49: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2625  005A60  0ED4               	movlw	low _RxDataDone
  2626  005A62  0100               	movlb	0	; () banked
  2627  005A64  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2628  005A66  0E78               	movlw	high _RxDataDone
  2629  005A68  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2630  005A6A  0EBA               	movlw	low _RxJoinResponse
  2631  005A6C  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2632  005A6E  0E78               	movlw	high _RxJoinResponse
  2633  005A70  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2634  005A72  EC78  F033         	call	_LORAWAN_Init	;wreg free
  2635                           
  2636                           ;main.c: 50: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2637  005A76  0EE8               	movlw	low _nwkSKey
  2638  005A78  0100               	movlb	0	; () banked
  2639  005A7A  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2640  005A7C  0E01               	movlw	high _nwkSKey
  2641  005A7E  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2642  005A80  EC9F  F038         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2643                           
  2644                           ;main.c: 51: LORAWAN_SetApplicationSessionKey(appSKey);
  2645  005A84  0ED8               	movlw	low _appSKey
  2646  005A86  0100               	movlb	0	; () banked
  2647  005A88  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2648  005A8A  0E01               	movlw	high _appSKey
  2649  005A8C  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2650  005A8E  ECB4  F038         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2651                           
  2652                           ;main.c: 52: LORAWAN_SetDeviceAddress(devAddr);
  2653  005A92  0E78               	movlw	120
  2654  005A94  0100               	movlb	0	; () banked
  2655  005A96  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2656  005A98  0E56               	movlw	86
  2657  005A9A  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2658  005A9C  0E34               	movlw	52
  2659  005A9E  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2660  005AA0  0E12               	movlw	18
  2661  005AA2  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2662  005AA4  ECEE  F03A         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2663                           
  2664                           ; BSR set to: 2
  2665                           ;main.c: 53: LORAWAN_Join(ABP);
  2666  005AA8  0E01               	movlw	1
  2667  005AAA  EC05  F02E         	call	_LORAWAN_Join
  2668                           
  2669                           ;main.c: 56: TimeToSend = 1;
  2670  005AAE  0E01               	movlw	1
  2671  005AB0  0101               	movlb	1	; () banked
  2672  005AB2  6F7D               	movwf	_TimeToSend& (0+255),b
  2673  005AB4                     l16143:
  2674                           
  2675                           ;main.c: 59: {
  2676                           ;main.c: 60: LORAWAN_Mainloop();
  2677  005AB4  ECFF  F036         	call	_LORAWAN_Mainloop	;wreg free
  2678                           
  2679                           ;main.c: 61: PORTDbits.RD5 = 1;
  2680  005AB8  8A83               	bsf	3971,5,c	;volatile
  2681                           
  2682                           ;main.c: 63: if(TimeToSend){
  2683  005ABA  0101               	movlb	1	; () banked
  2684  005ABC  517D               	movf	_TimeToSend& (0+255),w,b
  2685  005ABE  E006               	bz	l16155
  2686                           
  2687                           ; BSR set to: 1
  2688                           ;main.c: 64: LoRaWakeUp();
  2689  005AC0  EC17  F03C         	call	_LoRaWakeUp	;wreg free
  2690                           
  2691                           ;main.c: 65: readAndSend();
  2692  005AC4  EC23  F031         	call	_readAndSend	;wreg free
  2693                           
  2694                           ;main.c: 66: TimeToSend = 0;
  2695  005AC8  0101               	movlb	1	; () banked
  2696  005ACA  6B7D               	clrf	_TimeToSend& (0+255),b
  2697  005ACC                     l16155:
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;main.c: 68: }
  2701                           ;main.c: 70: if(LORAWAN_GetState() == IDLE){
  2702  005ACC  EC33  F03C         	call	_LORAWAN_GetState	;wreg free
  2703  005AD0  0900               	iorlw	0
  2704  005AD2  E1F0               	bnz	l16143
  2705                           
  2706                           ; BSR set to: 2
  2707                           ;main.c: 71: LoRaSleep();
  2708  005AD4  ECDF  F039         	call	_LoRaSleep	;wreg free
  2709                           
  2710                           ; BSR set to: 15
  2711                           ;main.c: 72: PORTDbits.RD5 = 0;
  2712  005AD8  9A83               	bcf	3971,5,c	;volatile
  2713  005ADA  0003               	sleep		;# 
  2714  005ADC  D7EB               	goto	l16143
  2715  005ADE                     __end_of_main:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           intcon	equ	0xFF2
  2722                           postinc0	equ	0xFEE
  2723                           wreg	equ	0xFE8
  2724                           postdec2	equ	0xFDD
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           
  2728 ;; *************** function _readAndSend *****************
  2729 ;; Defined at:
  2730 ;;		line 105 in file "main.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  j               2  126[BANK0 ] int 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/1
  2741 ;;		On exit  : D/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        3 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:   14
  2751 ;; This function calls:
  2752 ;;		_ADC_Read
  2753 ;;		_LORAWAN_Send
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text1
  2760  006246                     __ptext1:
  2761                           	opt stack 0
  2762  006246                     _readAndSend:
  2763                           	opt stack 16
  2764                           
  2765                           ;main.c: 106: PORTCbits.RC5 = 1;
  2766                           
  2767                           ;incstack = 0
  2768  006246  8A82               	bsf	3970,5,c	;volatile
  2769                           
  2770                           ;main.c: 107: for(int j = 1; j<100; j++) _delay((unsigned long)((1)*(16000000/4000.0)));
  2771  006248  0E00               	movlw	0
  2772  00624A  0100               	movlb	0	; () banked
  2773  00624C  6FDF               	movwf	(readAndSend@j+1)& (0+255),b
  2774  00624E  0E01               	movlw	1
  2775  006250  6FDE               	movwf	readAndSend@j& (0+255),b
  2776  006252                     l15607:
  2777                           
  2778                           ; BSR set to: 0
  2779  006252  0E06               	movlw	6
  2780  006254  6FDD               	movwf	??_readAndSend& (0+255),b
  2781  006256  0E30               	movlw	48
  2782  006258                     u19577:
  2783  006258  2EE8               	decfsz	wreg,f,c
  2784  00625A  D7FE               	goto	u19577
  2785  00625C  2FDD               	decfsz	??_readAndSend& (0+255),f,b
  2786  00625E  D7FC               	goto	u19577
  2787  006260  D000               	nop2	
  2788  006262  0100               	movlb	0	; () banked
  2789  006264  4BDE               	infsnz	readAndSend@j& (0+255),f,b
  2790  006266  2BDF               	incf	(readAndSend@j+1)& (0+255),f,b
  2791  006268  BFDF               	btfsc	(readAndSend@j+1)& (0+255),7,b
  2792  00626A  D7F3               	goto	l15607
  2793  00626C  51DF               	movf	(readAndSend@j+1)& (0+255),w,b
  2794  00626E  E103               	bnz	u18340
  2795  006270  0E64               	movlw	100
  2796  006272  5DDE               	subwf	readAndSend@j& (0+255),w,b
  2797  006274  E3EE               	bnc	l15607
  2798  006276                     u18340:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;main.c: 108: payload[0] = ADC_Read(27);
  2802  006276  0E1B               	movlw	27
  2803  006278  EC8E  F037         	call	_ADC_Read
  2804  00627C  C066  F1C4         	movff	?_ADC_Read,_payload
  2805  006280  C067  F1C5         	movff	?_ADC_Read+1,_payload+1
  2806                           
  2807                           ;main.c: 109: payload[1] = ADC_Read(26);
  2808  006284  0E1A               	movlw	26
  2809  006286  EC8E  F037         	call	_ADC_Read
  2810  00628A  C066  F1C6         	movff	?_ADC_Read,_payload+2
  2811  00628E  C067  F1C7         	movff	?_ADC_Read+1,_payload+3
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;main.c: 112: LORAWAN_Send(UNCNF, 2, &payload, sizeof(payload));
  2815  006292  0E02               	movlw	2
  2816  006294  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  2817  006296  0EC4               	movlw	low _payload
  2818  006298  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  2819  00629A  0E01               	movlw	high _payload
  2820  00629C  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2821  00629E  0E04               	movlw	4
  2822  0062A0  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2823  0062A2  0E00               	movlw	0
  2824  0062A4  ECFE  F029         	call	_LORAWAN_Send
  2825                           
  2826                           ;main.c: 113: PORTCbits.RC5 = 0;
  2827  0062A8  9A82               	bcf	3970,5,c	;volatile
  2828  0062AA  0012               	return		;funcret
  2829  0062AC                     __end_of_readAndSend:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           intcon	equ	0xFF2
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           postdec2	equ	0xFDD
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           
  2842 ;; *************** function _ADC_Read *****************
  2843 ;; Defined at:
  2844 ;;		line 134 in file "main.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  channel         1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  channel         1   10[BANK0 ] unsigned char 
  2849 ;;  result          2   11[BANK0 ] unsigned int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    6[BANK0 ] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : F/0
  2856 ;;		On exit  : F/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        7 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    8
  2866 ;; This function calls:
  2867 ;;		_ADC_SelChannel
  2868 ;; This function is called by:
  2869 ;;		_readAndSend
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text2
  2874  006F1C                     __ptext2:
  2875                           	opt stack 0
  2876  006F1C                     _ADC_Read:
  2877                           	opt stack 21
  2878                           
  2879                           ;incstack = 0
  2880                           ;ADC_Read@channel stored from wreg
  2881  006F1C  6F6A               	movwf	ADC_Read@channel& (0+255),b
  2882                           
  2883                           ;main.c: 136: ADCON0bits.ADON = 1;
  2884  006F1E  80C2               	bsf	4034,0,c	;volatile
  2885                           
  2886                           ;main.c: 137: ADC_SelChannel(channel);
  2887  006F20  0100               	movlb	0	; () banked
  2888  006F22  516A               	movf	ADC_Read@channel& (0+255),w,b
  2889  006F24  ECE2  F03A         	call	_ADC_SelChannel
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;main.c: 138: ADCON0bits.GO = 1;
  2893  006F28  82C2               	bsf	4034,1,c	;volatile
  2894  006F2A                     l2742:
  2895  006F2A  B2C2               	btfsc	4034,1,c	;volatile
  2896  006F2C  D7FE               	goto	l2742
  2897                           
  2898                           ;main.c: 140: result = (ADRESH<<8) | ADRESL;
  2899  006F2E  50C3               	movf	4035,w,c	;volatile
  2900  006F30  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  2901  006F34  0100               	movlb	0	; () banked
  2902  006F36  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  2903  006F38  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  2904  006F3C  6B68               	clrf	??_ADC_Read& (0+255),b
  2905  006F3E  1168               	iorwf	??_ADC_Read& (0+255),w,b
  2906  006F40  6F6B               	movwf	ADC_Read@result& (0+255),b
  2907  006F42  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  2908  006F44  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;main.c: 141: ADCON0bits.ADON = 0;
  2912  006F46  90C2               	bcf	4034,0,c	;volatile
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;main.c: 142: return result;
  2916  006F48  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  2917  006F4C  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  2918                           
  2919                           ; BSR set to: 0
  2920  006F50  0012               	return		;funcret
  2921  006F52                     __end_of_ADC_Read:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           intcon	equ	0xFF2
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           postdec2	equ	0xFDD
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           
  2934 ;; *************** function _ADC_SelChannel *****************
  2935 ;; Defined at:
  2936 ;;		line 129 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  c               1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  c               1    5[BANK0 ] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : F/0
  2947 ;;		On exit  : F/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;Total ram usage:        2 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    7
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_ADC_Read
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text3
  2965  0075C4                     __ptext3:
  2966                           	opt stack 0
  2967  0075C4                     _ADC_SelChannel:
  2968                           	opt stack 21
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;incstack = 0
  2972                           ;ADC_SelChannel@c stored from wreg
  2973  0075C4  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  2974                           
  2975                           ;main.c: 130: ADCON0bits.CHS = c;
  2976  0075C6  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  2977  0075CA  0100               	movlb	0	; () banked
  2978  0075CC  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2979  0075CE  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2980  0075D0  50C2               	movf	4034,w,c	;volatile
  2981  0075D2  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2982  0075D4  0B83               	andlw	-125
  2983  0075D6  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2984  0075D8  6EC2               	movwf	4034,c	;volatile
  2985                           
  2986                           ; BSR set to: 0
  2987  0075DA  0012               	return		;funcret
  2988  0075DC                     __end_of_ADC_SelChannel:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           intcon	equ	0xFF2
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postdec2	equ	0xFDD
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           
  3001 ;; *************** function _SysConfigSleep *****************
  3002 ;; Defined at:
  3003 ;;		line 152 in file "main.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		None
  3012 ;; Tracked objects:
  3013 ;;		On entry : F/0
  3014 ;;		On exit  : F/F
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    7
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text4
  3032  006102                     __ptext4:
  3033                           	opt stack 0
  3034  006102                     _SysConfigSleep:
  3035                           	opt stack 23
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;main.c: 155: UART2MD = 1;
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;incstack = 0
  3042  006102  010F               	movlb	15	; () banked
  3043  006104  8F3F               	bsf	63,7,b	;volatile
  3044                           
  3045                           ;main.c: 156: UART1MD = 1;
  3046  006106  8D3F               	bsf	63,6,b	;volatile
  3047                           
  3048                           ;main.c: 157: TMR6MD = 1;
  3049  006108  8B3F               	bsf	63,5,b	;volatile
  3050                           
  3051                           ;main.c: 158: TMR5MD = 1;
  3052  00610A  893F               	bsf	63,4,b	;volatile
  3053                           
  3054                           ;main.c: 159: TMR4MD = 1;
  3055  00610C  873F               	bsf	63,3,b	;volatile
  3056                           
  3057                           ;main.c: 160: TMR2MD = 1;
  3058  00610E  833F               	bsf	63,1,b	;volatile
  3059                           
  3060                           ;main.c: 161: MSSP1MD = 1;
  3061  006110  8D3E               	bsf	62,6,b	;volatile
  3062                           
  3063                           ;main.c: 162: CCP5MD = 1;
  3064  006112  893E               	bsf	62,4,b	;volatile
  3065                           
  3066                           ;main.c: 163: CCP4MD = 1;
  3067  006114  873E               	bsf	62,3,b	;volatile
  3068                           
  3069                           ;main.c: 164: CCP3MD = 1;
  3070  006116  853E               	bsf	62,2,b	;volatile
  3071                           
  3072                           ;main.c: 165: CCP2MD = 1;
  3073  006118  833E               	bsf	62,1,b	;volatile
  3074                           
  3075                           ;main.c: 166: CCP1MD = 1;
  3076  00611A  813E               	bsf	62,0,b	;volatile
  3077                           
  3078                           ;main.c: 167: CTMUMD = 1;
  3079  00611C  873D               	bsf	61,3,b	;volatile
  3080                           
  3081                           ;main.c: 168: CMP2MD = 1;
  3082  00611E  853D               	bsf	61,2,b	;volatile
  3083                           
  3084                           ;main.c: 169: CMP1MD = 1;
  3085  006120  833D               	bsf	61,1,b	;volatile
  3086                           
  3087                           ;main.c: 172: IDLEN = 0;
  3088  006122  9ED3               	bcf	4051,7,c	;volatile
  3089                           
  3090                           ;main.c: 176: TRISA = 0x00;
  3091  006124  6A92               	clrf	3986,c	;volatile
  3092                           
  3093                           ;main.c: 177: LATA = 0x00;
  3094  006126  6A89               	clrf	3977,c	;volatile
  3095                           
  3096                           ;main.c: 180: TRISBbits.RB4 = 0;
  3097  006128  9893               	bcf	3987,4,c	;volatile
  3098                           
  3099                           ;main.c: 181: TRISBbits.RB5 = 0;
  3100  00612A  9A93               	bcf	3987,5,c	;volatile
  3101                           
  3102                           ;main.c: 182: TRISBbits.RB6 = 0;
  3103  00612C  9C93               	bcf	3987,6,c	;volatile
  3104                           
  3105                           ;main.c: 183: TRISBbits.RB7 = 0;
  3106  00612E  9E93               	bcf	3987,7,c	;volatile
  3107                           
  3108                           ;main.c: 184: LATBbits.LATB4 = 0;
  3109  006130  988A               	bcf	3978,4,c	;volatile
  3110                           
  3111                           ;main.c: 185: LATBbits.LATB5 = 0;
  3112  006132  9A8A               	bcf	3978,5,c	;volatile
  3113                           
  3114                           ;main.c: 186: LATBbits.LATB6 = 0;
  3115  006134  9C8A               	bcf	3978,6,c	;volatile
  3116                           
  3117                           ;main.c: 187: LATBbits.LATB7 = 0;
  3118  006136  9E8A               	bcf	3978,7,c	;volatile
  3119                           
  3120                           ;main.c: 190: TRISCbits.RC0 = 0;
  3121  006138  9094               	bcf	3988,0,c	;volatile
  3122                           
  3123                           ;main.c: 191: TRISCbits.RC1 = 0;
  3124  00613A  9294               	bcf	3988,1,c	;volatile
  3125                           
  3126                           ;main.c: 192: TRISCbits.RC3 = 0;
  3127  00613C  9694               	bcf	3988,3,c	;volatile
  3128                           
  3129                           ;main.c: 193: TRISCbits.RC4 = 0;
  3130  00613E  9894               	bcf	3988,4,c	;volatile
  3131                           
  3132                           ;main.c: 195: TRISCbits.RC6 = 0;
  3133  006140  9C94               	bcf	3988,6,c	;volatile
  3134                           
  3135                           ;main.c: 196: TRISCbits.RC7 = 0;
  3136  006142  9E94               	bcf	3988,7,c	;volatile
  3137                           
  3138                           ;main.c: 197: LATCbits.LATC0 = 0;
  3139  006144  908B               	bcf	3979,0,c	;volatile
  3140                           
  3141                           ;main.c: 198: LATCbits.LATC1 = 0;
  3142  006146  928B               	bcf	3979,1,c	;volatile
  3143                           
  3144                           ;main.c: 199: LATCbits.LATC3 = 0;
  3145  006148  968B               	bcf	3979,3,c	;volatile
  3146                           
  3147                           ;main.c: 200: LATCbits.LATC4 = 0;
  3148  00614A  988B               	bcf	3979,4,c	;volatile
  3149                           
  3150                           ;main.c: 202: LATCbits.LATC6 = 0;
  3151  00614C  9C8B               	bcf	3979,6,c	;volatile
  3152                           
  3153                           ;main.c: 203: LATCbits.LATC7 = 0;
  3154  00614E  9E8B               	bcf	3979,7,c	;volatile
  3155                           
  3156                           ;main.c: 206: TRISDbits.RD0 = 0;
  3157  006150  9095               	bcf	3989,0,c	;volatile
  3158                           
  3159                           ;main.c: 207: TRISDbits.RD1 = 0;
  3160  006152  9295               	bcf	3989,1,c	;volatile
  3161                           
  3162                           ;main.c: 208: TRISDbits.RD2 = 0;
  3163  006154  9495               	bcf	3989,2,c	;volatile
  3164                           
  3165                           ;main.c: 209: TRISDbits.RD4 = 0;
  3166  006156  9895               	bcf	3989,4,c	;volatile
  3167                           
  3168                           ;main.c: 210: TRISDbits.RD5 = 0;
  3169  006158  9A95               	bcf	3989,5,c	;volatile
  3170                           
  3171                           ;main.c: 211: TRISDbits.RD7 = 0;
  3172  00615A  9E95               	bcf	3989,7,c	;volatile
  3173                           
  3174                           ;main.c: 212: LATDbits.LATD0 = 0;
  3175  00615C  908C               	bcf	3980,0,c	;volatile
  3176                           
  3177                           ;main.c: 213: LATDbits.LATD1 = 0;
  3178  00615E  928C               	bcf	3980,1,c	;volatile
  3179                           
  3180                           ;main.c: 214: LATDbits.LATD2 = 0;
  3181  006160  948C               	bcf	3980,2,c	;volatile
  3182                           
  3183                           ;main.c: 215: LATDbits.LATD4 = 0;
  3184  006162  988C               	bcf	3980,4,c	;volatile
  3185                           
  3186                           ;main.c: 220: TRISEbits.RE0 = 0;
  3187  006164  9096               	bcf	3990,0,c	;volatile
  3188                           
  3189                           ;main.c: 221: TRISEbits.RE1 = 0;
  3190  006166  9296               	bcf	3990,1,c	;volatile
  3191                           
  3192                           ;main.c: 222: TRISEbits.RE2 = 0;
  3193  006168  9496               	bcf	3990,2,c	;volatile
  3194                           
  3195                           ;main.c: 223: LATEbits.LATE0 = 0;
  3196  00616A  908D               	bcf	3981,0,c	;volatile
  3197                           
  3198                           ;main.c: 224: LATEbits.LATE1 = 0;
  3199  00616C  928D               	bcf	3981,1,c	;volatile
  3200                           
  3201                           ;main.c: 225: LATEbits.LATE2 = 0;
  3202  00616E  948D               	bcf	3981,2,c	;volatile
  3203                           
  3204                           ; BSR set to: 15
  3205  006170  0012               	return		;funcret
  3206  006172                     __end_of_SysConfigSleep:
  3207                           	opt stack 0
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           intcon	equ	0xFF2
  3213                           postinc0	equ	0xFEE
  3214                           wreg	equ	0xFE8
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           
  3219 ;; *************** function _SYSTEM_Initialize *****************
  3220 ;; Defined at:
  3221 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : F/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:   10
  3242 ;; This function calls:
  3243 ;;		_EXT_INT_Initialize
  3244 ;;		_INTERRUPT_Initialize
  3245 ;;		_LORAWAN_PlatformInit
  3246 ;;		_OSCILLATOR_Initialize
  3247 ;;		_PIN_MANAGER_Initialize
  3248 ;;		_SPI2_Initialize
  3249 ;;		_TMR1_Initialize
  3250 ;;		_TMR3_Initialize
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text5
  3257  00737E                     __ptext5:
  3258                           	opt stack 0
  3259  00737E                     _SYSTEM_Initialize:
  3260                           	opt stack 20
  3261                           
  3262                           ;mcc.c: 114: INTERRUPT_Initialize();
  3263                           
  3264                           ; BSR set to: 15
  3265                           ;incstack = 0
  3266  00737E  EC5B  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3267                           
  3268                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3269  007382  ECB4  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3273  007386  ECB3  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;mcc.c: 117: SPI2_Initialize();
  3277  00738A  ECD1  F03B         	call	_SPI2_Initialize	;wreg free
  3278                           
  3279                           ;mcc.c: 118: TMR3_Initialize();
  3280  00738E  ECF3  F038         	call	_TMR3_Initialize	;wreg free
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;mcc.c: 119: EXT_INT_Initialize();
  3284  007392  EC5B  F038         	call	_EXT_INT_Initialize	;wreg free
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;mcc.c: 120: TMR1_Initialize();
  3288  007396  EC2F  F039         	call	_TMR1_Initialize	;wreg free
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;mcc.c: 121: LORAWAN_PlatformInit();
  3292  00739A  EFCF  F039         	goto	_LORAWAN_PlatformInit	;wreg free
  3293  00739E                     __end_of_SYSTEM_Initialize:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           intcon	equ	0xFF2
  3300                           postinc0	equ	0xFEE
  3301                           wreg	equ	0xFE8
  3302                           postdec2	equ	0xFDD
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           
  3306 ;; *************** function _TMR3_Initialize *****************
  3307 ;; Defined at:
  3308 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : F/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    8
  3329 ;; This function calls:
  3330 ;;		_TMR3_SetInterruptHandler
  3331 ;;		_TMR3_StartTimer
  3332 ;; This function is called by:
  3333 ;;		_SYSTEM_Initialize
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text6
  3338  0071E6                     __ptext6:
  3339                           	opt stack 0
  3340  0071E6                     _TMR3_Initialize:
  3341                           	opt stack 21
  3342                           
  3343                           ;tmr3.c: 67: T3CON = 0xBC;
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;incstack = 0
  3347  0071E6  0EBC               	movlw	188
  3348  0071E8  6EB1               	movwf	4017,c	;volatile
  3349                           
  3350                           ;tmr3.c: 70: T3GCON = 0x00;
  3351  0071EA  6AB4               	clrf	4020,c	;volatile
  3352                           
  3353                           ;tmr3.c: 73: TMR3H = 0x00;
  3354  0071EC  6AB3               	clrf	4019,c	;volatile
  3355                           
  3356                           ;tmr3.c: 76: TMR3L = 0x00;
  3357  0071EE  6AB2               	clrf	4018,c	;volatile
  3358                           
  3359                           ;tmr3.c: 79: timer3ReloadVal=TMR3;
  3360  0071F0  CFB2 F05E          	movff	4018,_timer3ReloadVal	;volatile
  3361  0071F4  CFB3 F05F          	movff	4019,_timer3ReloadVal+1	;volatile
  3362                           
  3363                           ;tmr3.c: 82: PIR2bits.TMR3IF = 0;
  3364  0071F8  92A1               	bcf	4001,1,c	;volatile
  3365                           
  3366                           ;tmr3.c: 85: PIE2bits.TMR3IE = 1;
  3367  0071FA  82A0               	bsf	4000,1,c	;volatile
  3368                           
  3369                           ;tmr3.c: 88: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  3370  0071FC  0ED6               	movlw	low _TMR3_DefaultInterruptHandler
  3371  0071FE  0100               	movlb	0	; () banked
  3372  007200  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3373  007202  0E78               	movlw	high _TMR3_DefaultInterruptHandler
  3374  007204  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3375  007206  ECD7  F03B         	call	_TMR3_SetInterruptHandler	;wreg free
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;tmr3.c: 91: TMR3_StartTimer();
  3379  00720A  EF55  F03C         	goto	_TMR3_StartTimer	;wreg free
  3380  00720E                     __end_of_TMR3_Initialize:
  3381                           	opt stack 0
  3382                           tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           intcon	equ	0xFF2
  3387                           postinc0	equ	0xFEE
  3388                           wreg	equ	0xFE8
  3389                           postdec2	equ	0xFDD
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           
  3393 ;; *************** function _TMR3_StartTimer *****************
  3394 ;; Defined at:
  3395 ;;		line 94 in file "mcc_generated_files/tmr3.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		None
  3404 ;; Tracked objects:
  3405 ;;		On entry : F/0
  3406 ;;		On exit  : F/0
  3407 ;;		Unchanged: F/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    7
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_TMR3_Initialize
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text7
  3424  0078AA                     __ptext7:
  3425                           	opt stack 0
  3426  0078AA                     _TMR3_StartTimer:
  3427                           	opt stack 21
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;tmr3.c: 97: T3CONbits.TMR3ON = 1;
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;incstack = 0
  3434  0078AA  80B1               	bsf	4017,0,c	;volatile
  3435                           
  3436                           ; BSR set to: 0
  3437  0078AC  0012               	return		;funcret
  3438  0078AE                     __end_of_TMR3_StartTimer:
  3439                           	opt stack 0
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           intcon	equ	0xFF2
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           postdec2	equ	0xFDD
  3448                           fsr2h	equ	0xFDA
  3449                           fsr2l	equ	0xFD9
  3450                           
  3451 ;; *************** function _TMR3_SetInterruptHandler *****************
  3452 ;; Defined at:
  3453 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3456 ;;		 -> handle16sInterrupt(1), TMR3_DefaultInterruptHandler(1), 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : F/0
  3465 ;;		On exit  : F/0
  3466 ;;		Unchanged: F/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        2 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    7
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_TMR3_Initialize
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text8
  3484  0077AE                     __ptext8:
  3485                           	opt stack 0
  3486  0077AE                     _TMR3_SetInterruptHandler:
  3487                           	opt stack 23
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;tmr3.c: 184: TMR3_InterruptHandler = InterruptHandler;
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;incstack = 0
  3494  0077AE  C064  F1FE         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3495  0077B2  C065  F1FF         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3496                           
  3497                           ; BSR set to: 0
  3498  0077B6  0012               	return		;funcret
  3499  0077B8                     __end_of_TMR3_SetInterruptHandler:
  3500                           	opt stack 0
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           intcon	equ	0xFF2
  3506                           postinc0	equ	0xFEE
  3507                           wreg	equ	0xFE8
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           
  3512 ;; *************** function _TMR1_Initialize *****************
  3513 ;; Defined at:
  3514 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : F/0
  3525 ;;		On exit  : F/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    8
  3535 ;; This function calls:
  3536 ;;		_TMR1_SetInterruptHandler
  3537 ;;		_TMR1_StartTimer
  3538 ;; This function is called by:
  3539 ;;		_SYSTEM_Initialize
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text9
  3544  00725E                     __ptext9:
  3545                           	opt stack 0
  3546  00725E                     _TMR1_Initialize:
  3547                           	opt stack 21
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;tmr1.c: 67: T1CON = 0x8C;
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;incstack = 0
  3554  00725E  0E8C               	movlw	140
  3555  007260  6ECD               	movwf	4045,c	;volatile
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;tmr1.c: 70: T1GCON = 0x00;
  3559  007262  6ACC               	clrf	4044,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;tmr1.c: 73: TMR1H = 0x00;
  3563  007264  6ACF               	clrf	4047,c	;volatile
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;tmr1.c: 76: TMR1L = 0x00;
  3567  007266  6ACE               	clrf	4046,c	;volatile
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3571  007268  CFCE F05C          	movff	4046,_timer1ReloadVal	;volatile
  3572  00726C  CFCF F05D          	movff	4047,_timer1ReloadVal+1	;volatile
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3576  007270  909E               	bcf	3998,0,c	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3580  007272  809D               	bsf	3997,0,c	;volatile
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3584  007274  0ED8               	movlw	low _TMR1_DefaultInterruptHandler
  3585  007276  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3586  007278  0E78               	movlw	high _TMR1_DefaultInterruptHandler
  3587  00727A  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3588  00727C  ECDC  F03B         	call	_TMR1_SetInterruptHandler	;wreg free
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;tmr1.c: 91: TMR1_StartTimer();
  3592  007280  EF57  F03C         	goto	_TMR1_StartTimer	;wreg free
  3593  007284                     __end_of_TMR1_Initialize:
  3594                           	opt stack 0
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           intcon	equ	0xFF2
  3600                           postinc0	equ	0xFEE
  3601                           wreg	equ	0xFE8
  3602                           postdec2	equ	0xFDD
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           
  3606 ;; *************** function _TMR1_StartTimer *****************
  3607 ;; Defined at:
  3608 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		None
  3617 ;; Tracked objects:
  3618 ;;		On entry : F/0
  3619 ;;		On exit  : F/0
  3620 ;;		Unchanged: F/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    7
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_TMR1_Initialize
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text10
  3637  0078AE                     __ptext10:
  3638                           	opt stack 0
  3639  0078AE                     _TMR1_StartTimer:
  3640                           	opt stack 21
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;incstack = 0
  3647  0078AE  80CD               	bsf	4045,0,c	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650  0078B0  0012               	return		;funcret
  3651  0078B2                     __end_of_TMR1_StartTimer:
  3652                           	opt stack 0
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           intcon	equ	0xFF2
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           postdec2	equ	0xFDD
  3661                           fsr2h	equ	0xFDA
  3662                           fsr2l	equ	0xFD9
  3663                           
  3664 ;; *************** function _PIN_MANAGER_Initialize *****************
  3665 ;; Defined at:
  3666 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : F/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;Total ram usage:        0 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    8
  3687 ;; This function calls:
  3688 ;;		_IOCB4_SetInterruptHandler
  3689 ;; This function is called by:
  3690 ;;		_SYSTEM_Initialize
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text11
  3695  006B68                     __ptext11:
  3696                           	opt stack 0
  3697  006B68                     _PIN_MANAGER_Initialize:
  3698                           	opt stack 21
  3699                           
  3700                           ;pin_manager.c: 57: LATE = 0x00;
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;incstack = 0
  3704  006B68  6A8D               	clrf	3981,c	;volatile
  3705                           
  3706                           ;pin_manager.c: 58: LATD = 0x00;
  3707  006B6A  6A8C               	clrf	3980,c	;volatile
  3708                           
  3709                           ;pin_manager.c: 59: LATA = 0x00;
  3710  006B6C  6A89               	clrf	3977,c	;volatile
  3711                           
  3712                           ;pin_manager.c: 60: LATB = 0x00;
  3713  006B6E  6A8A               	clrf	3978,c	;volatile
  3714                           
  3715                           ;pin_manager.c: 61: LATC = 0x00;
  3716  006B70  6A8B               	clrf	3979,c	;volatile
  3717                           
  3718                           ;pin_manager.c: 66: TRISE = 0x07;
  3719  006B72  0E07               	movlw	7
  3720  006B74  6E96               	movwf	3990,c	;volatile
  3721                           
  3722                           ;pin_manager.c: 67: TRISA = 0xFF;
  3723  006B76  6892               	setf	3986,c	;volatile
  3724                           
  3725                           ;pin_manager.c: 68: TRISB = 0xFF;
  3726  006B78  6893               	setf	3987,c	;volatile
  3727                           
  3728                           ;pin_manager.c: 69: TRISC = 0xFE;
  3729  006B7A  0EFE               	movlw	254
  3730  006B7C  6E94               	movwf	3988,c	;volatile
  3731                           
  3732                           ;pin_manager.c: 70: TRISD = 0xE6;
  3733  006B7E  0EE6               	movlw	230
  3734  006B80  6E95               	movwf	3989,c	;volatile
  3735                           
  3736                           ;pin_manager.c: 75: ANSELC = 0xF8;
  3737  006B82  0EF8               	movlw	248
  3738  006B84  010F               	movlb	15	; () banked
  3739  006B86  6F3A               	movwf	58,b	;volatile
  3740                           
  3741                           ;pin_manager.c: 76: ANSELB = 0x28;
  3742  006B88  0E28               	movlw	40
  3743  006B8A  6F39               	movwf	57,b	;volatile
  3744                           
  3745                           ;pin_manager.c: 77: ANSELD = 0xE4;
  3746  006B8C  0EE4               	movlw	228
  3747  006B8E  6F3B               	movwf	59,b	;volatile
  3748                           
  3749                           ;pin_manager.c: 78: ANSELE = 0x07;
  3750  006B90  0E07               	movlw	7
  3751  006B92  6F3C               	movwf	60,b	;volatile
  3752                           
  3753                           ;pin_manager.c: 79: ANSELA = 0x2F;
  3754  006B94  0E2F               	movlw	47
  3755  006B96  6F38               	movwf	56,b	;volatile
  3756                           
  3757                           ; BSR set to: 15
  3758                           ;pin_manager.c: 84: WPUB = 0xFF;
  3759  006B98  6861               	setf	3937,c	;volatile
  3760                           
  3761                           ; BSR set to: 15
  3762                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  3763  006B9A  9EF1               	bcf	intcon2,7,c	;volatile
  3764                           
  3765                           ; BSR set to: 15
  3766                           ;pin_manager.c: 93: IOCBbits.IOCB4 = 1;
  3767  006B9C  8862               	bsf	3938,4,c	;volatile
  3768                           
  3769                           ; BSR set to: 15
  3770                           ;pin_manager.c: 96: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3771  006B9E  0EDA               	movlw	low _IOCB4_DefaultInterruptHandler
  3772  006BA0  0100               	movlb	0	; () banked
  3773  006BA2  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3774  006BA4  0E78               	movlw	high _IOCB4_DefaultInterruptHandler
  3775  006BA6  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3776  006BA8  ECE1  F03B         	call	_IOCB4_SetInterruptHandler	;wreg free
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;pin_manager.c: 99: INTCONbits.RBIE = 1;
  3780  006BAC  86F2               	bsf	intcon,3,c	;volatile
  3781                           
  3782                           ; BSR set to: 0
  3783  006BAE  0012               	return		;funcret
  3784  006BB0                     __end_of_PIN_MANAGER_Initialize:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           intcon	equ	0xFF2
  3791                           intcon2	equ	0xFF1
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           
  3798 ;; *************** function _OSCILLATOR_Initialize *****************
  3799 ;; Defined at:
  3800 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2
  3809 ;; Tracked objects:
  3810 ;;		On entry : F/0
  3811 ;;		On exit  : F/0
  3812 ;;		Unchanged: F/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    7
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_SYSTEM_Initialize
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text12
  3829  007766                     __ptext12:
  3830                           	opt stack 0
  3831  007766                     _OSCILLATOR_Initialize:
  3832                           	opt stack 22
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;mcc.c: 127: OSCCON = 0x70;
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;incstack = 0
  3839  007766  0E70               	movlw	112
  3840  007768  6ED3               	movwf	4051,c	;volatile
  3841                           
  3842                           ;mcc.c: 129: OSCCON2 = 0x04;
  3843  00776A  0E04               	movlw	4
  3844  00776C  6ED2               	movwf	4050,c	;volatile
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;mcc.c: 131: OSCTUNE = 0x00;
  3848  00776E  6A9B               	clrf	3995,c	;volatile
  3849                           
  3850                           ; BSR set to: 0
  3851  007770  0012               	return		;funcret
  3852  007772                     __end_of_OSCILLATOR_Initialize:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           intcon	equ	0xFF2
  3859                           intcon2	equ	0xFF1
  3860                           postinc0	equ	0xFEE
  3861                           wreg	equ	0xFE8
  3862                           postdec2	equ	0xFDD
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           
  3866 ;; *************** function _LORAWAN_PlatformInit *****************
  3867 ;; Defined at:
  3868 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : F/0
  3879 ;;		On exit  : F/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    9
  3889 ;; This function calls:
  3890 ;;		_DIO0_ISR_Lora_Init
  3891 ;;		_DIO1_ISR_Lora_Init
  3892 ;;		_DIO2_ISR_Lora_Init
  3893 ;;		_DIO3_ISR_Lora_Init
  3894 ;;		_DIO4_ISR_Lora_Init
  3895 ;;		_DIO5_ISR_Lora_Init
  3896 ;;		_SystemTimerInit
  3897 ;;		_TMR_ISR_Lora_Init
  3898 ;; This function is called by:
  3899 ;;		_SYSTEM_Initialize
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text13
  3904  00739E                     __ptext13:
  3905                           	opt stack 0
  3906  00739E                     _LORAWAN_PlatformInit:
  3907                           	opt stack 20
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;incstack = 0
  3914  00739E  ECB9  F03B         	call	_TMR_ISR_Lora_Init	;wreg free
  3915                           
  3916                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3917  0073A2  ECCB  F03B         	call	_DIO0_ISR_Lora_Init	;wreg free
  3918                           
  3919                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3920  0073A6  ECC5  F03B         	call	_DIO1_ISR_Lora_Init	;wreg free
  3921                           
  3922                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3923  0073AA  ECBF  F03B         	call	_DIO2_ISR_Lora_Init	;wreg free
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3927  0073AE  EC68  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3931  0073B2  EC67  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3932                           
  3933                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3934  0073B6  EC37  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;lorawan_init.c: 81: SystemTimerInit();
  3938  0073BA  EF59  F03C         	goto	_SystemTimerInit	;wreg free
  3939  0073BE                     __end_of_LORAWAN_PlatformInit:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           intcon	equ	0xFF2
  3946                           intcon2	equ	0xFF1
  3947                           postinc0	equ	0xFEE
  3948                           wreg	equ	0xFE8
  3949                           postdec2	equ	0xFDD
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           
  3953 ;; *************** function _TMR_ISR_Lora_Init *****************
  3954 ;; Defined at:
  3955 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : F/0
  3966 ;;		On exit  : F/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    8
  3976 ;; This function calls:
  3977 ;;		_TMR1_SetInterruptHandler
  3978 ;; This function is called by:
  3979 ;;		_LORAWAN_PlatformInit
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text14
  3984  007772                     __ptext14:
  3985                           	opt stack 0
  3986  007772                     _TMR_ISR_Lora_Init:
  3987                           	opt stack 20
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;incstack = 0
  3994  007772  0E3A               	movlw	low _TMR_ISR_lora
  3995  007774  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3996  007776  0E6A               	movlw	high _TMR_ISR_lora
  3997  007778  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3998  00777A  EFDC  F03B         	goto	_TMR1_SetInterruptHandler	;wreg free
  3999  00777E                     __end_of_TMR_ISR_Lora_Init:
  4000                           	opt stack 0
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           intcon	equ	0xFF2
  4006                           intcon2	equ	0xFF1
  4007                           postinc0	equ	0xFEE
  4008                           wreg	equ	0xFE8
  4009                           postdec2	equ	0xFDD
  4010                           fsr2h	equ	0xFDA
  4011                           fsr2l	equ	0xFD9
  4012                           
  4013 ;; *************** function _TMR1_SetInterruptHandler *****************
  4014 ;; Defined at:
  4015 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4018 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : F/0
  4027 ;;		On exit  : F/0
  4028 ;;		Unchanged: F/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    7
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_TMR_ISR_Lora_Init
  4041 ;;		_TMR1_Initialize
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text15
  4046  0077B8                     __ptext15:
  4047                           	opt stack 0
  4048  0077B8                     _TMR1_SetInterruptHandler:
  4049                           	opt stack 21
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;incstack = 0
  4056  0077B8  C064  F1FC         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4057  0077BC  C065  F1FD         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4058                           
  4059                           ; BSR set to: 0
  4060  0077C0  0012               	return		;funcret
  4061  0077C2                     __end_of_TMR1_SetInterruptHandler:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           intcon	equ	0xFF2
  4068                           intcon2	equ	0xFF1
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postdec2	equ	0xFDD
  4072                           fsr2h	equ	0xFDA
  4073                           fsr2l	equ	0xFD9
  4074                           
  4075 ;; *************** function _SystemTimerInit *****************
  4076 ;; Defined at:
  4077 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		None
  4086 ;; Tracked objects:
  4087 ;;		On entry : F/0
  4088 ;;		On exit  : F/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    7
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_LORAWAN_PlatformInit
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text16
  4106  0078B2                     __ptext16:
  4107                           	opt stack 0
  4108  0078B2                     _SystemTimerInit:
  4109                           	opt stack 21
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;sw_timer.c: 137: allocatedTimers = 0;
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;incstack = 0
  4116  0078B2  6BEF               	clrf	_allocatedTimers& (0+255),b	;volatile
  4117                           
  4118                           ; BSR set to: 0
  4119  0078B4  0012               	return		;funcret
  4120  0078B6                     __end_of_SystemTimerInit:
  4121                           	opt stack 0
  4122                           tblptru	equ	0xFF8
  4123                           tblptrh	equ	0xFF7
  4124                           tblptrl	equ	0xFF6
  4125                           tablat	equ	0xFF5
  4126                           intcon	equ	0xFF2
  4127                           intcon2	equ	0xFF1
  4128                           postinc0	equ	0xFEE
  4129                           wreg	equ	0xFE8
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           
  4134 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4135 ;; Defined at:
  4136 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : F/0
  4147 ;;		On exit  : F/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    8
  4157 ;; This function calls:
  4158 ;;		_INT0_SetInterruptHandler
  4159 ;; This function is called by:
  4160 ;;		_LORAWAN_PlatformInit
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text17
  4165  00786E                     __ptext17:
  4166                           	opt stack 0
  4167  00786E                     _DIO5_ISR_Lora_Init:
  4168                           	opt stack 20
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;incstack = 0
  4175  00786E  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4176  007870  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4177  007872  0C00               	retlw	0	;wreg free
  4178  007874                     __end_of_DIO5_ISR_Lora_Init:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           intcon	equ	0xFF2
  4185                           intcon2	equ	0xFF1
  4186                           postinc0	equ	0xFEE
  4187                           wreg	equ	0xFE8
  4188                           postdec2	equ	0xFDD
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           
  4192 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4193 ;; Defined at:
  4194 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		None
  4203 ;; Tracked objects:
  4204 ;;		On entry : F/0
  4205 ;;		On exit  : F/0
  4206 ;;		Unchanged: F/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    7
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_LORAWAN_PlatformInit
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text18
  4223  0078CE                     __ptext18:
  4224                           	opt stack 0
  4225  0078CE                     _DIO4_ISR_Lora_Init:
  4226                           	opt stack 21
  4227                           
  4228                           ; BSR set to: 0
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;incstack = 0
  4232  0078CE  0012               	return		;funcret
  4233  0078D0                     __end_of_DIO4_ISR_Lora_Init:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           intcon	equ	0xFF2
  4240                           intcon2	equ	0xFF1
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           postdec2	equ	0xFDD
  4244                           fsr2h	equ	0xFDA
  4245                           fsr2l	equ	0xFD9
  4246                           
  4247 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4248 ;; Defined at:
  4249 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		None
  4258 ;; Tracked objects:
  4259 ;;		On entry : F/0
  4260 ;;		On exit  : F/0
  4261 ;;		Unchanged: F/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    7
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_LORAWAN_PlatformInit
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text19
  4278  0078D0                     __ptext19:
  4279                           	opt stack 0
  4280  0078D0                     _DIO3_ISR_Lora_Init:
  4281                           	opt stack 21
  4282                           
  4283                           ; BSR set to: 0
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;incstack = 0
  4287  0078D0  0012               	return		;funcret
  4288  0078D2                     __end_of_DIO3_ISR_Lora_Init:
  4289                           	opt stack 0
  4290                           tblptru	equ	0xFF8
  4291                           tblptrh	equ	0xFF7
  4292                           tblptrl	equ	0xFF6
  4293                           tablat	equ	0xFF5
  4294                           intcon	equ	0xFF2
  4295                           intcon2	equ	0xFF1
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           postdec2	equ	0xFDD
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           
  4302 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4303 ;; Defined at:
  4304 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : F/0
  4315 ;;		On exit  : F/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    8
  4325 ;; This function calls:
  4326 ;;		_IOCB4_SetInterruptHandler
  4327 ;; This function is called by:
  4328 ;;		_LORAWAN_PlatformInit
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text20
  4333  00777E                     __ptext20:
  4334                           	opt stack 0
  4335  00777E                     _DIO2_ISR_Lora_Init:
  4336                           	opt stack 20
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;incstack = 0
  4343  00777E  0E8C               	movlw	low _DIO2_ISR_Lora
  4344  007780  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4345  007782  0E78               	movlw	high _DIO2_ISR_Lora
  4346  007784  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4347  007786  EFE1  F03B         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4348  00778A                     __end_of_DIO2_ISR_Lora_Init:
  4349                           	opt stack 0
  4350                           tblptru	equ	0xFF8
  4351                           tblptrh	equ	0xFF7
  4352                           tblptrl	equ	0xFF6
  4353                           tablat	equ	0xFF5
  4354                           intcon	equ	0xFF2
  4355                           intcon2	equ	0xFF1
  4356                           postinc0	equ	0xFEE
  4357                           wreg	equ	0xFE8
  4358                           postdec2	equ	0xFDD
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           
  4362 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4363 ;; Defined at:
  4364 ;;		line 133 in file "mcc_generated_files/pin_manager.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4367 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : F/0
  4376 ;;		On exit  : F/0
  4377 ;;		Unchanged: F/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;Total ram usage:        2 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    7
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_PIN_MANAGER_Initialize
  4390 ;;		_DIO2_ISR_Lora_Init
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text21
  4395  0077C2                     __ptext21:
  4396                           	opt stack 0
  4397  0077C2                     _IOCB4_SetInterruptHandler:
  4398                           	opt stack 21
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;pin_manager.c: 134: IOCB4_InterruptHandler = InterruptHandler;
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;incstack = 0
  4405  0077C2  C064  F1FA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4406  0077C6  C065  F1FB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4407                           
  4408                           ; BSR set to: 0
  4409  0077CA  0012               	return		;funcret
  4410  0077CC                     __end_of_IOCB4_SetInterruptHandler:
  4411                           	opt stack 0
  4412                           tblptru	equ	0xFF8
  4413                           tblptrh	equ	0xFF7
  4414                           tblptrl	equ	0xFF6
  4415                           tablat	equ	0xFF5
  4416                           intcon	equ	0xFF2
  4417                           intcon2	equ	0xFF1
  4418                           postinc0	equ	0xFEE
  4419                           wreg	equ	0xFE8
  4420                           postdec2	equ	0xFDD
  4421                           fsr2h	equ	0xFDA
  4422                           fsr2l	equ	0xFD9
  4423                           
  4424 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4425 ;; Defined at:
  4426 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : F/0
  4437 ;;		On exit  : F/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    8
  4447 ;; This function calls:
  4448 ;;		_INT2_SetInterruptHandler
  4449 ;; This function is called by:
  4450 ;;		_LORAWAN_PlatformInit
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text22
  4455  00778A                     __ptext22:
  4456                           	opt stack 0
  4457  00778A                     _DIO1_ISR_Lora_Init:
  4458                           	opt stack 20
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;incstack = 0
  4465  00778A  0E98               	movlw	low _DIO1_ISR_Lora
  4466  00778C  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4467  00778E  0E78               	movlw	high _DIO1_ISR_Lora
  4468  007790  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4469  007792  EFE6  F03B         	goto	_INT2_SetInterruptHandler	;wreg free
  4470  007796                     __end_of_DIO1_ISR_Lora_Init:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           intcon	equ	0xFF2
  4477                           intcon2	equ	0xFF1
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           postdec2	equ	0xFDD
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           
  4484 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4485 ;; Defined at:
  4486 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : F/0
  4497 ;;		On exit  : F/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    8
  4507 ;; This function calls:
  4508 ;;		_INT1_SetInterruptHandler
  4509 ;; This function is called by:
  4510 ;;		_LORAWAN_PlatformInit
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text23
  4515  007796                     __ptext23:
  4516                           	opt stack 0
  4517  007796                     _DIO0_ISR_Lora_Init:
  4518                           	opt stack 20
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;incstack = 0
  4525  007796  0EA4               	movlw	low _DIO0_ISR_Lora
  4526  007798  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4527  00779A  0E78               	movlw	high _DIO0_ISR_Lora
  4528  00779C  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4529  00779E  EFEB  F03B         	goto	_INT1_SetInterruptHandler	;wreg free
  4530  0077A2                     __end_of_DIO0_ISR_Lora_Init:
  4531                           	opt stack 0
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           intcon	equ	0xFF2
  4537                           intcon2	equ	0xFF1
  4538                           postinc0	equ	0xFEE
  4539                           wreg	equ	0xFE8
  4540                           postdec2	equ	0xFDD
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           
  4544 ;; *************** function _INTERRUPT_Initialize *****************
  4545 ;; Defined at:
  4546 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		None
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    7
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_SYSTEM_Initialize
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text24
  4575  0078B6                     __ptext24:
  4576                           	opt stack 0
  4577  0078B6                     _INTERRUPT_Initialize:
  4578                           	opt stack 22
  4579                           
  4580                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;incstack = 0
  4584  0078B6  9ED0               	bcf	4048,7,c	;volatile
  4585  0078B8  0012               	return		;funcret
  4586  0078BA                     __end_of_INTERRUPT_Initialize:
  4587                           	opt stack 0
  4588                           tblptru	equ	0xFF8
  4589                           tblptrh	equ	0xFF7
  4590                           tblptrl	equ	0xFF6
  4591                           tablat	equ	0xFF5
  4592                           intcon	equ	0xFF2
  4593                           intcon2	equ	0xFF1
  4594                           postinc0	equ	0xFEE
  4595                           wreg	equ	0xFE8
  4596                           postdec2	equ	0xFDD
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           
  4600 ;; *************** function _EXT_INT_Initialize *****************
  4601 ;; Defined at:
  4602 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : F/0
  4613 ;;		On exit  : F/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    8
  4623 ;; This function calls:
  4624 ;;		_INT0_SetInterruptHandler
  4625 ;;		_INT1_SetInterruptHandler
  4626 ;;		_INT2_SetInterruptHandler
  4627 ;; This function is called by:
  4628 ;;		_SYSTEM_Initialize
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text25
  4633  0070B6                     __ptext25:
  4634                           	opt stack 0
  4635  0070B6                     _EXT_INT_Initialize:
  4636                           	opt stack 21
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4640                           
  4641                           ;incstack = 0
  4642  0070B6  90F0               	bcf	intcon3,0,c	;volatile
  4643                           
  4644                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4645  0070B8  8AF1               	bsf	intcon2,5,c	;volatile
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4649  0070BA  0EDE               	movlw	low _INT1_DefaultInterruptHandler
  4650  0070BC  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4651  0070BE  0E78               	movlw	high _INT1_DefaultInterruptHandler
  4652  0070C0  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4653  0070C2  ECEB  F03B         	call	_INT1_SetInterruptHandler	;wreg free
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4657  0070C6  86F0               	bsf	intcon3,3,c	;volatile
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4661  0070C8  92F0               	bcf	intcon3,1,c	;volatile
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4665  0070CA  88F1               	bsf	intcon2,4,c	;volatile
  4666                           
  4667                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4668  0070CC  0EDC               	movlw	low _INT2_DefaultInterruptHandler
  4669  0070CE  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4670  0070D0  0E78               	movlw	high _INT2_DefaultInterruptHandler
  4671  0070D2  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4672  0070D4  ECE6  F03B         	call	_INT2_SetInterruptHandler	;wreg free
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4676  0070D8  88F0               	bsf	intcon3,4,c	;volatile
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4680  0070DA  92F2               	bcf	intcon,1,c	;volatile
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4684  0070DC  8CF1               	bsf	intcon2,6,c	;volatile
  4685                           
  4686                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4687  0070DE  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4688  0070E0  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4689  0070E2  0C00               	retlw	0	;wreg free
  4690  0070E4                     __end_of_EXT_INT_Initialize:
  4691                           	opt stack 0
  4692                           tblptru	equ	0xFF8
  4693                           tblptrh	equ	0xFF7
  4694                           tblptrl	equ	0xFF6
  4695                           tablat	equ	0xFF5
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           intcon3	equ	0xFF0
  4699                           postinc0	equ	0xFEE
  4700                           wreg	equ	0xFE8
  4701                           postdec2	equ	0xFDD
  4702                           fsr2h	equ	0xFDA
  4703                           fsr2l	equ	0xFD9
  4704                           
  4705 ;; *************** function _INT2_SetInterruptHandler *****************
  4706 ;; Defined at:
  4707 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4710 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : F/0
  4719 ;;		On exit  : F/0
  4720 ;;		Unchanged: F/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:        2 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    7
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_EXT_INT_Initialize
  4733 ;;		_DIO1_ISR_Lora_Init
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text26
  4738  0077CC                     __ptext26:
  4739                           	opt stack 0
  4740  0077CC                     _INT2_SetInterruptHandler:
  4741                           	opt stack 20
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;incstack = 0
  4748  0077CC  C064  F1F8         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4749  0077D0  C065  F1F9         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4750                           
  4751                           ; BSR set to: 0
  4752  0077D4  0012               	return		;funcret
  4753  0077D6                     __end_of_INT2_SetInterruptHandler:
  4754                           	opt stack 0
  4755                           tblptru	equ	0xFF8
  4756                           tblptrh	equ	0xFF7
  4757                           tblptrl	equ	0xFF6
  4758                           tablat	equ	0xFF5
  4759                           intcon	equ	0xFF2
  4760                           intcon2	equ	0xFF1
  4761                           intcon3	equ	0xFF0
  4762                           postinc0	equ	0xFEE
  4763                           wreg	equ	0xFE8
  4764                           postdec2	equ	0xFDD
  4765                           fsr2h	equ	0xFDA
  4766                           fsr2l	equ	0xFD9
  4767                           
  4768 ;; *************** function _INT1_SetInterruptHandler *****************
  4769 ;; Defined at:
  4770 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4773 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, status,2, status,0
  4780 ;; Tracked objects:
  4781 ;;		On entry : F/0
  4782 ;;		On exit  : F/0
  4783 ;;		Unchanged: F/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;Total ram usage:        2 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    7
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_EXT_INT_Initialize
  4796 ;;		_DIO0_ISR_Lora_Init
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text27
  4801  0077D6                     __ptext27:
  4802                           	opt stack 0
  4803  0077D6                     _INT1_SetInterruptHandler:
  4804                           	opt stack 20
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;incstack = 0
  4811  0077D6  C064  F05A         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4812  0077DA  C065  F05B         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4813                           
  4814                           ; BSR set to: 0
  4815  0077DE  0012               	return		;funcret
  4816  0077E0                     __end_of_INT1_SetInterruptHandler:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           intcon	equ	0xFF2
  4823                           intcon2	equ	0xFF1
  4824                           intcon3	equ	0xFF0
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           postdec2	equ	0xFDD
  4828                           fsr2h	equ	0xFDA
  4829                           fsr2l	equ	0xFD9
  4830                           
  4831 ;; *************** function _INT0_SetInterruptHandler *****************
  4832 ;; Defined at:
  4833 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4836 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		None
  4843 ;; Tracked objects:
  4844 ;;		On entry : F/0
  4845 ;;		On exit  : F/0
  4846 ;;		Unchanged: F/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;Total ram usage:        2 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    7
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_EXT_INT_Initialize
  4859 ;;		_DIO5_ISR_Lora_Init
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text28
  4864  0078D2                     __ptext28:
  4865                           	opt stack 0
  4866  0078D2                     _INT0_SetInterruptHandler:
  4867                           	opt stack 20
  4868                           
  4869                           ; BSR set to: 0
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;incstack = 0
  4873  0078D2  0012               	return		;funcret
  4874  0078D4                     __end_of_INT0_SetInterruptHandler:
  4875                           	opt stack 0
  4876                           tblptru	equ	0xFF8
  4877                           tblptrh	equ	0xFF7
  4878                           tblptrl	equ	0xFF6
  4879                           tablat	equ	0xFF5
  4880                           intcon	equ	0xFF2
  4881                           intcon2	equ	0xFF1
  4882                           intcon3	equ	0xFF0
  4883                           postinc0	equ	0xFEE
  4884                           wreg	equ	0xFE8
  4885                           postdec2	equ	0xFDD
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           
  4889 ;; *************** function _LoRaWakeUp *****************
  4890 ;; Defined at:
  4891 ;;		line 259 in file "main.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : F/1
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    8
  4912 ;; This function calls:
  4913 ;;		_SPI2_Initialize
  4914 ;; This function is called by:
  4915 ;;		_main
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text29
  4920  00782E                     __ptext29:
  4921                           	opt stack 0
  4922  00782E                     _LoRaWakeUp:
  4923                           	opt stack 22
  4924                           
  4925                           ; BSR set to: 1
  4926                           ;main.c: 261: MSSP2MD = 0;
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;incstack = 0
  4930  00782E  010F               	movlb	15	; () banked
  4931  007830  9F3E               	bcf	62,7,b	;volatile
  4932                           
  4933                           ; BSR set to: 15
  4934                           ;main.c: 262: SPI2_Initialize();
  4935  007832  EFD1  F03B         	goto	_SPI2_Initialize	;wreg free
  4936  007836                     __end_of_LoRaWakeUp:
  4937                           	opt stack 0
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           intcon	equ	0xFF2
  4943                           intcon2	equ	0xFF1
  4944                           intcon3	equ	0xFF0
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           postdec2	equ	0xFDD
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           
  4951 ;; *************** function _SPI2_Initialize *****************
  4952 ;; Defined at:
  4953 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    7
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_SYSTEM_Initialize
  4978 ;;		_LoRaWakeUp
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text30
  4983  0077A2                     __ptext30:
  4984                           	opt stack 0
  4985  0077A2                     _SPI2_Initialize:
  4986                           	opt stack 22
  4987                           
  4988                           ;spi2.c: 68: SSP2STAT = 0x40;
  4989                           
  4990                           ;incstack = 0
  4991  0077A2  0E40               	movlw	64
  4992  0077A4  6E6D               	movwf	3949,c	;volatile
  4993                           
  4994                           ;spi2.c: 71: SSP2CON1 = 0x20;
  4995  0077A6  0E20               	movlw	32
  4996  0077A8  6E6C               	movwf	3948,c	;volatile
  4997                           
  4998                           ;spi2.c: 74: SSP2ADD = 0x00;
  4999  0077AA  6A6E               	clrf	3950,c	;volatile
  5000  0077AC  0012               	return		;funcret
  5001  0077AE                     __end_of_SPI2_Initialize:
  5002                           	opt stack 0
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           intcon	equ	0xFF2
  5008                           intcon2	equ	0xFF1
  5009                           intcon3	equ	0xFF0
  5010                           postinc0	equ	0xFEE
  5011                           wreg	equ	0xFE8
  5012                           postdec2	equ	0xFDD
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           
  5016 ;; *************** function _LoRaSleep *****************
  5017 ;; Defined at:
  5018 ;;		line 229 in file "main.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		None
  5027 ;; Tracked objects:
  5028 ;;		On entry : F/2
  5029 ;;		On exit  : F/F
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    7
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_main
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text31
  5047  0073BE                     __ptext31:
  5048                           	opt stack 0
  5049  0073BE                     _LoRaSleep:
  5050                           	opt stack 23
  5051                           
  5052                           ; BSR set to: 2
  5053                           ;main.c: 232: SSP2CON1 = 0x00;
  5054                           
  5055                           ;incstack = 0
  5056  0073BE  6A6C               	clrf	3948,c	;volatile
  5057                           
  5058                           ;main.c: 235: MSSP2MD = 1;
  5059  0073C0  010F               	movlb	15	; () banked
  5060  0073C2  8F3E               	bsf	62,7,b	;volatile
  5061                           
  5062                           ;main.c: 239: ANSD3 = 0;
  5063  0073C4  973B               	bcf	59,3,b	;volatile
  5064                           
  5065                           ;main.c: 240: TRISD3 = 0;
  5066  0073C6  9695               	bcf	3989,3,c	;volatile
  5067                           
  5068                           ;main.c: 241: LATD3 = 1;
  5069  0073C8  868C               	bsf	3980,3,c	;volatile
  5070                           
  5071                           ;main.c: 244: ANSD1 = 0;
  5072  0073CA  933B               	bcf	59,1,b	;volatile
  5073                           
  5074                           ;main.c: 245: TRISD1 = 0;
  5075  0073CC  9295               	bcf	3989,1,c	;volatile
  5076                           
  5077                           ;main.c: 246: LATD1 = 0;
  5078  0073CE  928C               	bcf	3980,1,c	;volatile
  5079                           
  5080                           ;main.c: 249: ANSD4 = 0;
  5081  0073D0  993B               	bcf	59,4,b	;volatile
  5082                           
  5083                           ;main.c: 250: TRISD4 = 0;
  5084  0073D2  9895               	bcf	3989,4,c	;volatile
  5085                           
  5086                           ;main.c: 251: LATD4 = 0;
  5087  0073D4  988C               	bcf	3980,4,c	;volatile
  5088                           
  5089                           ;main.c: 254: ANSD0 = 0;
  5090  0073D6  913B               	bcf	59,0,b	;volatile
  5091                           
  5092                           ;main.c: 255: TRISD0 = 0;
  5093  0073D8  9095               	bcf	3989,0,c	;volatile
  5094                           
  5095                           ;main.c: 256: LATD0 = 0;
  5096  0073DA  908C               	bcf	3980,0,c	;volatile
  5097                           
  5098                           ; BSR set to: 15
  5099  0073DC  0012               	return		;funcret
  5100  0073DE                     __end_of_LoRaSleep:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           intcon	equ	0xFF2
  5107                           intcon2	equ	0xFF1
  5108                           intcon3	equ	0xFF0
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           postdec2	equ	0xFDD
  5112                           fsr2h	equ	0xFDA
  5113                           fsr2l	equ	0xFD9
  5114                           
  5115 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5116 ;; Defined at:
  5117 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5120 ;;		 -> nwkSKey(16), 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : F/0
  5129 ;;		On exit  : D/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:        2 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    8
  5139 ;; This function calls:
  5140 ;;		_memcpy
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text32
  5147  00713E                     __ptext32:
  5148                           	opt stack 0
  5149  00713E                     _LORAWAN_SetNetworkSessionKey:
  5150                           	opt stack 22
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5154                           
  5155                           ; BSR set to: 15
  5156                           ;incstack = 0
  5157  00713E  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5158  007140  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5159  007142  B4D8               	btfsc	status,2,c
  5160  007144  0012               	return	
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;lorawan.c: 382: {
  5164                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5165  007146  0E22               	movlw	low (_loRa+34)
  5166  007148  6F64               	movwf	memcpy@d1& (0+255),b
  5167  00714A  0E02               	movlw	high (_loRa+34)
  5168  00714C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5169  00714E  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5170  007152  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5171  007156  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5172  007158  0E10               	movlw	16
  5173  00715A  6F68               	movwf	memcpy@n& (0+255),b
  5174  00715C  EC01  F034         	call	_memcpy	;wreg free
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5178  007160  0102               	movlb	2	; () banked
  5179  007162  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5180                           
  5181                           ; BSR set to: 2
  5182                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5183  007164  9902               	bcf	(_loRa+2)& (0+255),4,b
  5184  007166  0012               	return		;funcret
  5185  007168                     __end_of_LORAWAN_SetNetworkSessionKey:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           intcon	equ	0xFF2
  5192                           intcon2	equ	0xFF1
  5193                           intcon3	equ	0xFF0
  5194                           postinc0	equ	0xFEE
  5195                           wreg	equ	0xFE8
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5202 ;; Defined at:
  5203 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		None
  5212 ;; Tracked objects:
  5213 ;;		On entry : F/0
  5214 ;;		On exit  : F/2
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;Total ram usage:        4 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    7
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_main
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text33
  5232  0075DC                     __ptext33:
  5233                           	opt stack 0
  5234  0075DC                     _LORAWAN_SetDeviceAddress:
  5235                           	opt stack 23
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5239                           
  5240                           ;incstack = 0
  5241  0075DC  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5242  0075E0  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5243  0075E4  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5244  0075E8  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5245                           
  5246                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5247  0075EC  0102               	movlb	2	; () banked
  5248  0075EE  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5249                           
  5250                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5251  0075F0  9902               	bcf	(_loRa+2)& (0+255),4,b
  5252                           
  5253                           ; BSR set to: 2
  5254  0075F2  0012               	return		;funcret
  5255  0075F4                     __end_of_LORAWAN_SetDeviceAddress:
  5256                           	opt stack 0
  5257                           tblptru	equ	0xFF8
  5258                           tblptrh	equ	0xFF7
  5259                           tblptrl	equ	0xFF6
  5260                           tablat	equ	0xFF5
  5261                           intcon	equ	0xFF2
  5262                           intcon2	equ	0xFF1
  5263                           intcon3	equ	0xFF0
  5264                           postinc0	equ	0xFEE
  5265                           wreg	equ	0xFE8
  5266                           postdec2	equ	0xFDD
  5267                           fsr2h	equ	0xFDA
  5268                           fsr2l	equ	0xFD9
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5272 ;; Defined at:
  5273 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5276 ;;		 -> appSKey(16), 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : F/0
  5285 ;;		On exit  : D/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;Total ram usage:        2 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    8
  5295 ;; This function calls:
  5296 ;;		_memcpy
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text34
  5303  007168                     __ptext34:
  5304                           	opt stack 0
  5305  007168                     _LORAWAN_SetApplicationSessionKey:
  5306                           	opt stack 22
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5310                           
  5311                           ; BSR set to: 2
  5312                           ;incstack = 0
  5313  007168  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5314  00716A  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5315  00716C  B4D8               	btfsc	status,2,c
  5316  00716E  0012               	return	
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;lorawan.c: 397: {
  5320                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5321  007170  0E32               	movlw	low (_loRa+50)
  5322  007172  6F64               	movwf	memcpy@d1& (0+255),b
  5323  007174  0E02               	movlw	high (_loRa+50)
  5324  007176  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5325  007178  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5326  00717C  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5327  007180  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5328  007182  0E10               	movlw	16
  5329  007184  6F68               	movwf	memcpy@n& (0+255),b
  5330  007186  EC01  F034         	call	_memcpy	;wreg free
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5334  00718A  0102               	movlb	2	; () banked
  5335  00718C  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5336                           
  5337                           ; BSR set to: 2
  5338                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5339  00718E  9902               	bcf	(_loRa+2)& (0+255),4,b
  5340  007190  0012               	return		;funcret
  5341  007192                     __end_of_LORAWAN_SetApplicationSessionKey:
  5342                           	opt stack 0
  5343                           tblptru	equ	0xFF8
  5344                           tblptrh	equ	0xFF7
  5345                           tblptrl	equ	0xFF6
  5346                           tablat	equ	0xFF5
  5347                           intcon	equ	0xFF2
  5348                           intcon2	equ	0xFF1
  5349                           intcon3	equ	0xFF0
  5350                           postinc0	equ	0xFEE
  5351                           wreg	equ	0xFE8
  5352                           postdec2	equ	0xFDD
  5353                           fsr2h	equ	0xFDA
  5354                           fsr2l	equ	0xFD9
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function _LORAWAN_Mainloop *****************
  5358 ;; Defined at:
  5359 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/1
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:   18
  5380 ;; This function calls:
  5381 ;;		_INTERRUPT_GetDioStatus
  5382 ;;		_RADIO_DIO0
  5383 ;;		_RADIO_DIO1
  5384 ;;		_RADIO_DIO2
  5385 ;;		_RADIO_DIO3
  5386 ;;		_RADIO_DIO4
  5387 ;;		_RADIO_DIO5
  5388 ;;		_SwTimersExecute
  5389 ;; This function is called by:
  5390 ;;		_main
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text35
  5395  006DFE                     __ptext35:
  5396                           	opt stack 0
  5397  006DFE                     _LORAWAN_Mainloop:
  5398                           	opt stack 12
  5399                           
  5400                           ;lorawan.c: 2240: SwTimersExecute();
  5401                           
  5402                           ;incstack = 0
  5403  006DFE  ECC9  F02B         	call	_SwTimersExecute	;wreg free
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5407  006E02  EC90  F03B         	call	_INTERRUPT_GetDioStatus	;wreg free
  5408  006E06  6FF1               	movwf	_localDioStatus& (0+255),b
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5412  006E08  B1F1               	btfsc	_localDioStatus& (0+255),0,b
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;lorawan.c: 2246: {
  5416                           ;lorawan.c: 2247: RADIO_DIO0();
  5417  006E0A  EC22  F032         	call	_RADIO_DIO0	;wreg free
  5418                           
  5419                           ;lorawan.c: 2248: }
  5420                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5421  006E0E  0100               	movlb	0	; () banked
  5422  006E10  B3F1               	btfsc	_localDioStatus& (0+255),1,b
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;lorawan.c: 2250: {
  5426                           ;lorawan.c: 2251: RADIO_DIO1();
  5427  006E12  EC1C  F037         	call	_RADIO_DIO1	;wreg free
  5428                           
  5429                           ;lorawan.c: 2252: }
  5430                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5431  006E16  0100               	movlb	0	; () banked
  5432  006E18  B5F1               	btfsc	_localDioStatus& (0+255),2,b
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;lorawan.c: 2254: {
  5436                           ;lorawan.c: 2255: RADIO_DIO2();
  5437  006E1A  ECD8  F035         	call	_RADIO_DIO2	;wreg free
  5438                           
  5439                           ;lorawan.c: 2256: }
  5440                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5441  006E1E  0100               	movlb	0	; () banked
  5442  006E20  B7F1               	btfsc	_localDioStatus& (0+255),3,b
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;lorawan.c: 2258: {
  5446                           ;lorawan.c: 2259: RADIO_DIO3();
  5447  006E22  EC12  F03B         	call	_RADIO_DIO3	;wreg free
  5448                           
  5449                           ;lorawan.c: 2260: }
  5450                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5451  006E26  0100               	movlb	0	; () banked
  5452  006E28  B9F1               	btfsc	_localDioStatus& (0+255),4,b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;lorawan.c: 2262: {
  5456                           ;lorawan.c: 2263: RADIO_DIO4();
  5457  006E2A  EC06  F03B         	call	_RADIO_DIO4	;wreg free
  5458                           
  5459                           ;lorawan.c: 2264: }
  5460                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5461  006E2E  0100               	movlb	0	; () banked
  5462  006E30  BBF1               	btfsc	_localDioStatus& (0+255),5,b
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;lorawan.c: 2266: {
  5466                           ;lorawan.c: 2267: RADIO_DIO5();
  5467  006E32  ECFA  F03A         	call	_RADIO_DIO5	;wreg free
  5468  006E36  0012               	return		;funcret
  5469  006E38                     __end_of_LORAWAN_Mainloop:
  5470                           	opt stack 0
  5471                           tblptru	equ	0xFF8
  5472                           tblptrh	equ	0xFF7
  5473                           tblptrl	equ	0xFF6
  5474                           tablat	equ	0xFF5
  5475                           intcon	equ	0xFF2
  5476                           intcon2	equ	0xFF1
  5477                           intcon3	equ	0xFF0
  5478                           postinc0	equ	0xFEE
  5479                           wreg	equ	0xFE8
  5480                           postdec2	equ	0xFDD
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8
  5484                           
  5485 ;; *************** function _SwTimersExecute *****************
  5486 ;; Defined at:
  5487 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  i               1  129[BANK0 ] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/1
  5498 ;;		On exit  : F/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        5 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:   17
  5508 ;; This function calls:
  5509 ;;		Absolute function
  5510 ;;		_AckRetransmissionCallback
  5511 ;;		_AutomaticReplyCallback
  5512 ;;		_DutyCycleCallback
  5513 ;;		_LORAWAN_LinkCheckCallback
  5514 ;;		_LORAWAN_ReceiveWindow1Callback
  5515 ;;		_LORAWAN_ReceiveWindow2Callback
  5516 ;;		_RADIO_RxFSKTimeout
  5517 ;;		_RADIO_WatchdogTimeout
  5518 ;;		_UnconfirmedTransmissionCallback
  5519 ;;		_UpdateJoinSuccessState
  5520 ;; This function is called by:
  5521 ;;		_LORAWAN_Mainloop
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text36
  5526  005792                     __ptext36:
  5527                           	opt stack 0
  5528  005792                     _SwTimersExecute:
  5529                           	opt stack 12
  5530                           
  5531                           ;sw_timer.c: 262: uint8_t i;
  5532                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5533                           
  5534                           ;incstack = 0
  5535  005792  9EF2               	bcf	intcon,7,c	;volatile
  5536                           
  5537                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5538  005794  0100               	movlb	0	; () banked
  5539  005796  6BE1               	clrf	SwTimersExecute@i& (0+255),b
  5540  005798  D050               	goto	l16027
  5541  00579A                     l16013:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;sw_timer.c: 266: {
  5545                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5546  00579A  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5547  00579C  0D08               	mullw	8
  5548  00579E  0E04               	movlw	low (_swTimers+4)
  5549  0057A0  24F3               	addwf	prodl,w,c
  5550  0057A2  6ED9               	movwf	fsr2l,c
  5551  0057A4  0E03               	movlw	high (_swTimers+4)
  5552  0057A6  20F4               	addwfc	prodh,w,c
  5553  0057A8  6EDA               	movwf	fsr2h,c
  5554  0057AA  04DE               	decf	postinc2,w,c
  5555  0057AC  E144               	bnz	l16025
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;sw_timer.c: 270: {
  5559                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5560  0057AE  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5561  0057B0  0D08               	mullw	8
  5562  0057B2  0E00               	movlw	low _swTimers
  5563  0057B4  24F3               	addwf	prodl,w,c
  5564  0057B6  6ED9               	movwf	fsr2l,c
  5565  0057B8  0E03               	movlw	high _swTimers
  5566  0057BA  20F4               	addwfc	prodh,w,c
  5567  0057BC  6EDA               	movwf	fsr2h,c
  5568  0057BE  50DE               	movf	postinc2,w,c
  5569  0057C0  10DE               	iorwf	postinc2,w,c
  5570  0057C2  10DE               	iorwf	postinc2,w,c
  5571  0057C4  10DE               	iorwf	postinc2,w,c
  5572  0057C6  E137               	bnz	l16025
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;sw_timer.c: 272: {
  5576                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5577  0057C8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5578  0057CA  0D08               	mullw	8
  5579  0057CC  0E04               	movlw	low (_swTimers+4)
  5580  0057CE  24F3               	addwf	prodl,w,c
  5581  0057D0  6ED9               	movwf	fsr2l,c
  5582  0057D2  0E03               	movlw	high (_swTimers+4)
  5583  0057D4  20F4               	addwfc	prodh,w,c
  5584  0057D6  6EDA               	movwf	fsr2h,c
  5585  0057D8  6ADF               	clrf	indf2,c
  5586                           
  5587                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5588  0057DA  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5589  0057DC  0D08               	mullw	8
  5590  0057DE  0E06               	movlw	low (_swTimers+6)
  5591  0057E0  24F3               	addwf	prodl,w,c
  5592  0057E2  6ED9               	movwf	fsr2l,c
  5593  0057E4  0E03               	movlw	high (_swTimers+6)
  5594  0057E6  20F4               	addwfc	prodh,w,c
  5595  0057E8  6EDA               	movwf	fsr2h,c
  5596  0057EA  50DE               	movf	postinc2,w,c
  5597  0057EC  10DE               	iorwf	postinc2,w,c
  5598  0057EE  E023               	bz	l16025
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;sw_timer.c: 275: {
  5602                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5603  0057F0  8EF2               	bsf	intcon,7,c	;volatile
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5607  0057F2  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5608  0057F4  0D08               	mullw	8
  5609  0057F6  0E05               	movlw	low (_swTimers+5)
  5610  0057F8  24F3               	addwf	prodl,w,c
  5611  0057FA  6ED9               	movwf	fsr2l,c
  5612  0057FC  0E03               	movlw	high (_swTimers+5)
  5613  0057FE  20F4               	addwfc	prodh,w,c
  5614  005800  6EDA               	movwf	fsr2h,c
  5615  005802  50DF               	movf	indf2,w,c
  5616  005804  6EE6               	movwf	postinc1,c
  5617  005806  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5618  005808  0D08               	mullw	8
  5619  00580A  0E06               	movlw	low (_swTimers+6)
  5620  00580C  24F3               	addwf	prodl,w,c
  5621  00580E  6ED9               	movwf	fsr2l,c
  5622  005810  0E03               	movlw	high (_swTimers+6)
  5623  005812  20F4               	addwfc	prodh,w,c
  5624  005814  6EDA               	movwf	fsr2h,c
  5625  005816  CFDE F0DD          	movff	postinc2,??_SwTimersExecute
  5626  00581A  CFDD F0DE          	movff	postdec2,??_SwTimersExecute+1
  5627  00581E  D801               	call	u19288
  5628  005820  D009               	goto	l16023
  5629  005822                     u19288:
  5630  005822  0005               	push	
  5631  005824  6EFA               	movwf	pclath,c
  5632  005826  51DD               	movf	??_SwTimersExecute& (0+255),w,b
  5633  005828  6EFD               	movwf	tosl,c
  5634  00582A  51DE               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5635  00582C  6EFE               	movwf	tosh,c
  5636  00582E  6AFF               	clrf	tosu,c
  5637  005830  50FA               	movf	pclath,w,c
  5638  005832  0012               	return		;indir
  5639  005834                     l16023:
  5640                           
  5641                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5642  005834  9EF2               	bcf	intcon,7,c	;volatile
  5643  005836                     l16025:
  5644  005836  0100               	movlb	0	; () banked
  5645  005838  2BE1               	incf	SwTimersExecute@i& (0+255),f,b
  5646  00583A                     l16027:
  5647                           
  5648                           ; BSR set to: 0
  5649  00583A  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5650  00583C  5DE1               	subwf	SwTimersExecute@i& (0+255),w,b
  5651  00583E  E3AD               	bnc	l16013
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;sw_timer.c: 279: }
  5655                           ;sw_timer.c: 280: }
  5656                           ;sw_timer.c: 281: }
  5657                           ;sw_timer.c: 282: }
  5658                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5659  005840  8EF2               	bsf	intcon,7,c	;volatile
  5660                           
  5661                           ; BSR set to: 0
  5662  005842  0012               	return		;funcret
  5663  005844                     __end_of_SwTimersExecute:
  5664                           	opt stack 0
  5665                           tosu	equ	0xFFF
  5666                           tosh	equ	0xFFE
  5667                           tosl	equ	0xFFD
  5668                           pclath	equ	0xFFA
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           prodh	equ	0xFF4
  5674                           prodl	equ	0xFF3
  5675                           intcon	equ	0xFF2
  5676                           intcon2	equ	0xFF1
  5677                           intcon3	equ	0xFF0
  5678                           postinc0	equ	0xFEE
  5679                           wreg	equ	0xFE8
  5680                           postinc1	equ	0xFE6
  5681                           indf2	equ	0xFDF
  5682                           postinc2	equ	0xFDE
  5683                           postdec2	equ	0xFDD
  5684                           fsr2h	equ	0xFDA
  5685                           fsr2l	equ	0xFD9
  5686                           status	equ	0xFD8
  5687                           
  5688 ;; *************** function _DutyCycleCallback *****************
  5689 ;; Defined at:
  5690 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  param           1  [STACK] unsigned char 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  minim           4  [STACK] unsigned long 
  5695 ;;  i               1  [STACK] unsigned char 
  5696 ;;  found           1  [STACK] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1  [STACK] void 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : F/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;Total ram usage:        0 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:   11
  5713 ;; This function calls:
  5714 ;;		_SwTimerSetTimeout
  5715 ;;		_SwTimerStart
  5716 ;;		___lldiv
  5717 ;; This function is called by:
  5718 ;;		_SetCallbackSoftwareTimers
  5719 ;;		_SwTimersExecute
  5720 ;; This function uses a reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text37
  5724  002102                     __ptext37:
  5725                           	opt stack 0
  5726  002102                     _DutyCycleCallback:
  5727                           	opt stack 0
  5728                           
  5729                           ; BSR set to: 0
  5730                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5731  002102  0E0A               	movlw	10
  5732  002104  26E1               	addwf	fsr1l,f,c
  5733  002106  0E00               	movlw	0
  5734  002108  22E2               	addwfc	fsr1h,f,c
  5735                           
  5736                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5737                           
  5738                           ;incstack = 0
  5739  00210A  684E               	setf	btemp+8,c
  5740  00210C  684F               	setf	btemp+9,c
  5741  00210E  6850               	setf	btemp+10,c
  5742  002110  6851               	setf	btemp+11,c
  5743                           
  5744                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5745  002112  0EFA               	movlw	-6
  5746  002114  C04E  FFE3         	movff	btemp+8,plusw1
  5747  002118  0EFB               	movlw	-5
  5748  00211A  C04F  FFE3         	movff	btemp+9,plusw1
  5749  00211E  0EFC               	movlw	-4
  5750  002120  C050  FFE3         	movff	btemp+10,plusw1
  5751  002124  0EFD               	movlw	-3
  5752  002126  C051  FFE3         	movff	btemp+11,plusw1
  5753                           
  5754                           ;lorawan_eu.c: 1224: bool found = 0;
  5755                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5756  00212A  0EFF               	movlw	-1
  5757  00212C  6AE3               	clrf	plusw1,c
  5758                           
  5759                           ;lorawan_eu.c: 1225: uint8_t i;
  5760                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5761                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5762  00212E  0EFE               	movlw	-2
  5763  002130  6AE3               	clrf	plusw1,c
  5764  002132                     l15003:
  5765                           
  5766                           ;lorawan_eu.c: 1228: {
  5767                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5768                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5769  002132  0EFE               	movlw	-2
  5770  002134  50E3               	movf	plusw1,w,c
  5771  002136  0D0E               	mullw	14
  5772  002138  0E04               	movlw	low (_Channels+4)
  5773  00213A  24F3               	addwf	prodl,w,c
  5774  00213C  6ED9               	movwf	fsr2l,c
  5775  00213E  0E04               	movlw	high (_Channels+4)
  5776  002140  20F4               	addwfc	prodh,w,c
  5777  002142  6EDA               	movwf	fsr2h,c
  5778  002144  04DE               	decf	postinc2,w,c
  5779  002146  E001 D0AA          	bnz	l15021
  5780                           
  5781                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5782  00214A  0EFE               	movlw	-2
  5783  00214C  50E3               	movf	plusw1,w,c
  5784  00214E  0D0E               	mullw	14
  5785  002150  0E08               	movlw	low (_Channels+8)
  5786  002152  24F3               	addwf	prodl,w,c
  5787  002154  6ED9               	movwf	fsr2l,c
  5788  002156  0E04               	movlw	high (_Channels+8)
  5789  002158  20F4               	addwfc	prodh,w,c
  5790  00215A  6EDA               	movwf	fsr2h,c
  5791  00215C  50DE               	movf	postinc2,w,c
  5792  00215E  10DE               	iorwf	postinc2,w,c
  5793  002160  10DE               	iorwf	postinc2,w,c
  5794  002162  10DE               	iorwf	postinc2,w,c
  5795  002164  E101 D09B          	bz	l15021
  5796                           
  5797                           ;lorawan_eu.c: 1231: {
  5798                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5799                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5800  002168  0EFE               	movlw	-2
  5801  00216A  50E3               	movf	plusw1,w,c
  5802  00216C  0D0E               	mullw	14
  5803  00216E  0E08               	movlw	low (_Channels+8)
  5804  002170  24F3               	addwf	prodl,w,c
  5805  002172  6ED9               	movwf	fsr2l,c
  5806  002174  0E04               	movlw	high (_Channels+8)
  5807  002176  20F4               	addwfc	prodh,w,c
  5808  002178  6EDA               	movwf	fsr2h,c
  5809  00217A  50DE               	movf	postinc2,w,c
  5810  00217C  0102               	movlb	2	; () banked
  5811  00217E  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5812  002180  50DE               	movf	postinc2,w,c
  5813  002182  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5814  002184  50DE               	movf	postinc2,w,c
  5815  002186  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5816  002188  50DE               	movf	postinc2,w,c
  5817  00218A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5818  00218C  E22F               	bc	l15011
  5819                           
  5820                           ; BSR set to: 2
  5821                           ;lorawan_eu.c: 1233: {
  5822                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5823                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5824  00218E  0EFE               	movlw	-2
  5825  002190  50E3               	movf	plusw1,w,c
  5826  002192  0D0E               	mullw	14
  5827  002194  0E08               	movlw	low (_Channels+8)
  5828  002196  24F3               	addwf	prodl,w,c
  5829  002198  6ED9               	movwf	fsr2l,c
  5830  00219A  0E04               	movlw	high (_Channels+8)
  5831  00219C  20F4               	addwfc	prodh,w,c
  5832  00219E  6EDA               	movwf	fsr2h,c
  5833  0021A0  CFDE F04E          	movff	postinc2,btemp+8
  5834  0021A4  CFDE F04F          	movff	postinc2,btemp+9
  5835  0021A8  CFDE F050          	movff	postinc2,btemp+10
  5836  0021AC  CFDE F051          	movff	postinc2,btemp+11
  5837  0021B0  51C8               	movf	(_loRa+200)& (0+255),w,b
  5838  0021B2  5C4E               	subwf	btemp+8,w,c
  5839  0021B4  6E4A               	movwf	btemp+4,c
  5840  0021B6  51C9               	movf	(_loRa+201)& (0+255),w,b
  5841  0021B8  584F               	subwfb	btemp+9,w,c
  5842  0021BA  6E4B               	movwf	btemp+5,c
  5843  0021BC  51CA               	movf	(_loRa+202)& (0+255),w,b
  5844  0021BE  5850               	subwfb	btemp+10,w,c
  5845  0021C0  6E4C               	movwf	btemp+6,c
  5846  0021C2  51CB               	movf	(_loRa+203)& (0+255),w,b
  5847  0021C4  5851               	subwfb	btemp+11,w,c
  5848  0021C6  6E4D               	movwf	btemp+7,c
  5849                           
  5850                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5851  0021C8  0EFE               	movlw	-2
  5852  0021CA  50E3               	movf	plusw1,w,c
  5853  0021CC  0D0E               	mullw	14
  5854  0021CE  0E08               	movlw	low (_Channels+8)
  5855  0021D0  24F3               	addwf	prodl,w,c
  5856  0021D2  6ED9               	movwf	fsr2l,c
  5857  0021D4  0E04               	movlw	high (_Channels+8)
  5858  0021D6  20F4               	addwfc	prodh,w,c
  5859  0021D8  6EDA               	movwf	fsr2h,c
  5860  0021DA  C04A  FFDE         	movff	btemp+4,postinc2
  5861  0021DE  C04B  FFDE         	movff	btemp+5,postinc2
  5862  0021E2  C04C  FFDE         	movff	btemp+6,postinc2
  5863  0021E6  C04D  FFDE         	movff	btemp+7,postinc2
  5864                           
  5865                           ;lorawan_eu.c: 1235: }
  5866  0021EA  D00D               	goto	l15013
  5867  0021EC                     l15011:
  5868                           
  5869                           ; BSR set to: 2
  5870                           ;lorawan_eu.c: 1236: else
  5871                           ;lorawan_eu.c: 1237: {
  5872                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5873                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5874  0021EC  0EFE               	movlw	-2
  5875  0021EE  50E3               	movf	plusw1,w,c
  5876  0021F0  0D0E               	mullw	14
  5877  0021F2  0E08               	movlw	low (_Channels+8)
  5878  0021F4  24F3               	addwf	prodl,w,c
  5879  0021F6  6ED9               	movwf	fsr2l,c
  5880  0021F8  0E04               	movlw	high (_Channels+8)
  5881  0021FA  20F4               	addwfc	prodh,w,c
  5882  0021FC  6EDA               	movwf	fsr2h,c
  5883  0021FE  6ADE               	clrf	postinc2,c
  5884  002200  6ADE               	clrf	postinc2,c
  5885  002202  6ADE               	clrf	postinc2,c
  5886  002204  6ADD               	clrf	postdec2,c
  5887  002206                     l15013:
  5888                           
  5889                           ; BSR set to: 2
  5890                           ;lorawan_eu.c: 1239: }
  5891                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5892                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5893  002206  0EFE               	movlw	-2
  5894  002208  50E3               	movf	plusw1,w,c
  5895  00220A  0D0E               	mullw	14
  5896  00220C  0E08               	movlw	low (_Channels+8)
  5897  00220E  24F3               	addwf	prodl,w,c
  5898  002210  6ED9               	movwf	fsr2l,c
  5899  002212  0E04               	movlw	high (_Channels+8)
  5900  002214  20F4               	addwfc	prodh,w,c
  5901  002216  6EDA               	movwf	fsr2h,c
  5902                           
  5903                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5904  002218  0EFA               	movlw	-6
  5905  00221A  CFE3 F047          	movff	plusw1,btemp+1
  5906  00221E  50DE               	movf	postinc2,w,c
  5907  002220  5C47               	subwf	btemp+1,w,c
  5908  002222  0EFB               	movlw	-5
  5909  002224  CFE3 F047          	movff	plusw1,btemp+1
  5910  002228  50DE               	movf	postinc2,w,c
  5911  00222A  5847               	subwfb	btemp+1,w,c
  5912  00222C  0EFC               	movlw	-4
  5913  00222E  CFE3 F047          	movff	plusw1,btemp+1
  5914  002232  50DE               	movf	postinc2,w,c
  5915  002234  5847               	subwfb	btemp+1,w,c
  5916  002236  0EFD               	movlw	-3
  5917  002238  CFE3 F047          	movff	plusw1,btemp+1
  5918  00223C  50DE               	movf	postinc2,w,c
  5919  00223E  5847               	subwfb	btemp+1,w,c
  5920  002240  E32E               	bnc	l15021
  5921                           
  5922                           ; BSR set to: 2
  5923                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5924  002242  0EFE               	movlw	-2
  5925  002244  50E3               	movf	plusw1,w,c
  5926  002246  0D0E               	mullw	14
  5927  002248  0E08               	movlw	low (_Channels+8)
  5928  00224A  24F3               	addwf	prodl,w,c
  5929  00224C  6ED9               	movwf	fsr2l,c
  5930  00224E  0E04               	movlw	high (_Channels+8)
  5931  002250  20F4               	addwfc	prodh,w,c
  5932  002252  6EDA               	movwf	fsr2h,c
  5933  002254  50DE               	movf	postinc2,w,c
  5934  002256  10DE               	iorwf	postinc2,w,c
  5935  002258  10DE               	iorwf	postinc2,w,c
  5936  00225A  10DE               	iorwf	postinc2,w,c
  5937  00225C  E020               	bz	l15021
  5938                           
  5939                           ; BSR set to: 2
  5940                           ;lorawan_eu.c: 1241: {
  5941                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5942                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5943  00225E  0EFE               	movlw	-2
  5944  002260  50E3               	movf	plusw1,w,c
  5945  002262  0D0E               	mullw	14
  5946  002264  0E08               	movlw	low (_Channels+8)
  5947  002266  24F3               	addwf	prodl,w,c
  5948  002268  6ED9               	movwf	fsr2l,c
  5949  00226A  0E04               	movlw	high (_Channels+8)
  5950  00226C  20F4               	addwfc	prodh,w,c
  5951  00226E  6EDA               	movwf	fsr2h,c
  5952  002270  CFDE F04E          	movff	postinc2,btemp+8
  5953  002274  CFDE F04F          	movff	postinc2,btemp+9
  5954  002278  CFDE F050          	movff	postinc2,btemp+10
  5955  00227C  CFDE F051          	movff	postinc2,btemp+11
  5956                           
  5957                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5958  002280  0EFA               	movlw	-6
  5959  002282  C04E  FFE3         	movff	btemp+8,plusw1
  5960  002286  0EFB               	movlw	-5
  5961  002288  C04F  FFE3         	movff	btemp+9,plusw1
  5962  00228C  0EFC               	movlw	-4
  5963  00228E  C050  FFE3         	movff	btemp+10,plusw1
  5964  002292  0EFD               	movlw	-3
  5965  002294  C051  FFE3         	movff	btemp+11,plusw1
  5966                           
  5967                           ; BSR set to: 2
  5968                           ;lorawan_eu.c: 1243: found = 1;
  5969                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5970  002298  0EFF               	movlw	-1
  5971  00229A  6AE3               	clrf	plusw1,c
  5972  00229C  2AE3               	incf	plusw1,f,c
  5973  00229E                     l15021:
  5974                           
  5975                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5976  00229E  0EFE               	movlw	-2
  5977  0022A0  2AE3               	incf	plusw1,f,c
  5978                           
  5979                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5980  0022A2  CFE3 F047          	movff	plusw1,btemp+1
  5981  0022A6  0E0F               	movlw	15
  5982  0022A8  6447               	cpfsgt	btemp+1,c
  5983  0022AA  D743               	goto	l15003
  5984                           
  5985                           ;lorawan_eu.c: 1244: }
  5986                           ;lorawan_eu.c: 1245: }
  5987                           ;lorawan_eu.c: 1246: }
  5988                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5989                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5990  0022AC  0EFF               	movlw	-1
  5991  0022AE  04E3               	decf	plusw1,w,c
  5992  0022B0  E001 D096          	bnz	l1297
  5993                           
  5994                           ;lorawan_eu.c: 1248: {
  5995                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5996                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5997  0022B4  50E1               	movf	fsr1l,w,c
  5998  0022B6  0FFA               	addlw	-6
  5999  0022B8  6ED9               	movwf	fsr2l,c
  6000  0022BA  50E2               	movf	fsr1h,w,c
  6001  0022BC  6EDA               	movwf	fsr2h,c
  6002  0022BE  0EFF               	movlw	255
  6003  0022C0  22DA               	addwfc	fsr2h,f,c
  6004  0022C2  CFDE F2C8          	movff	postinc2,_loRa+200
  6005  0022C6  CFDE F2C9          	movff	postinc2,_loRa+201
  6006  0022CA  CFDE F2CA          	movff	postinc2,_loRa+202
  6007  0022CE  CFDE F2CB          	movff	postinc2,_loRa+203
  6008                           
  6009                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6010                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6011  0022D2  0EFD               	movlw	-3
  6012  0022D4  50E3               	movf	plusw1,w,c
  6013  0022D6  E10D               	bnz	u17490
  6014  0022D8  0EFA               	movlw	-6
  6015  0022DA  28E3               	incf	plusw1,w,c
  6016  0022DC  0EFB               	movlw	-5
  6017  0022DE  CFE3 F047          	movff	plusw1,btemp+1
  6018  0022E2  0EFF               	movlw	255
  6019  0022E4  5A47               	subwfb	btemp+1,f,c
  6020  0022E6  0EFC               	movlw	-4
  6021  0022E8  CFE3 F047          	movff	plusw1,btemp+1
  6022  0022EC  0E0F               	movlw	15
  6023  0022EE  5A47               	subwfb	btemp+1,f,c
  6024  0022F0  E328               	bnc	l15033
  6025  0022F2                     u17490:
  6026                           
  6027                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6028  0022F2  50E1               	movf	fsr1l,w,c
  6029  0022F4  0FFA               	addlw	-6
  6030  0022F6  6ED9               	movwf	fsr2l,c
  6031  0022F8  50E2               	movf	fsr1h,w,c
  6032  0022FA  6EDA               	movwf	fsr2h,c
  6033  0022FC  0EFF               	movlw	255
  6034  0022FE  22DA               	addwfc	fsr2h,f,c
  6035  002300  CFDE F064          	movff	postinc2,___lldiv@dividend
  6036  002304  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6037  002308  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6038  00230C  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6039  002310  0E7D               	movlw	125
  6040  002312  0100               	movlb	0	; () banked
  6041  002314  6F68               	movwf	___lldiv@divisor& (0+255),b
  6042  002316  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6043  002318  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6044  00231A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6045  00231C  EC0D  F030         	call	___lldiv	;wreg free
  6046  002320  C064  F04E         	movff	?___lldiv,btemp+8
  6047  002324  C065  F04F         	movff	?___lldiv+1,btemp+9
  6048  002328  C066  F050         	movff	?___lldiv+2,btemp+10
  6049  00232C  C067  F051         	movff	?___lldiv+3,btemp+11
  6050  002330  0E0C               	movlw	12
  6051  002332                     u17505:
  6052  002332  90D8               	bcf	status,0,c
  6053  002334  364E               	rlcf	btemp+8,f,c
  6054  002336  364F               	rlcf	btemp+9,f,c
  6055  002338  3650               	rlcf	btemp+10,f,c
  6056  00233A  3651               	rlcf	btemp+11,f,c
  6057  00233C  2EE8               	decfsz	wreg,f,c
  6058  00233E  D7F9               	goto	u17505
  6059  002340  D02C               	goto	L1
  6060  002342                     l15033:
  6061                           
  6062                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6063  002342  0EFA               	movlw	-6
  6064  002344  CFE3 F04E          	movff	plusw1,btemp+8
  6065  002348  0EFB               	movlw	-5
  6066  00234A  CFE3 F04F          	movff	plusw1,btemp+9
  6067  00234E  0EFC               	movlw	-4
  6068  002350  CFE3 F050          	movff	plusw1,btemp+10
  6069  002354  0EFD               	movlw	-3
  6070  002356  CFE3 F051          	movff	plusw1,btemp+11
  6071  00235A  0E0C               	movlw	12
  6072  00235C                     u17515:
  6073  00235C  90D8               	bcf	status,0,c
  6074  00235E  364E               	rlcf	btemp+8,f,c
  6075  002360  364F               	rlcf	btemp+9,f,c
  6076  002362  3650               	rlcf	btemp+10,f,c
  6077  002364  3651               	rlcf	btemp+11,f,c
  6078  002366  2EE8               	decfsz	wreg,f,c
  6079  002368  D7F9               	goto	u17515
  6080  00236A  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6081  00236E  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6082  002372  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6083  002376  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6084  00237A  0E7D               	movlw	125
  6085  00237C  0100               	movlb	0	; () banked
  6086  00237E  6F68               	movwf	___lldiv@divisor& (0+255),b
  6087  002380  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6088  002382  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6089  002384  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6090  002386  EC0D  F030         	call	___lldiv	;wreg free
  6091  00238A  C064  F04E         	movff	?___lldiv,btemp+8
  6092  00238E  C065  F04F         	movff	?___lldiv+1,btemp+9
  6093  002392  C066  F050         	movff	?___lldiv+2,btemp+10
  6094  002396  C067  F051         	movff	?___lldiv+3,btemp+11
  6095  00239A                     L1:
  6096                           
  6097                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6098  00239A  0EF6               	movlw	-10
  6099  00239C  C04E  FFE3         	movff	btemp+8,plusw1
  6100  0023A0  0EF7               	movlw	-9
  6101  0023A2  C04F  FFE3         	movff	btemp+9,plusw1
  6102  0023A6  0EF8               	movlw	-8
  6103  0023A8  C050  FFE3         	movff	btemp+10,plusw1
  6104  0023AC  0EF9               	movlw	-7
  6105  0023AE  C051  FFE3         	movff	btemp+11,plusw1
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6109  0023B2  50E1               	movf	fsr1l,w,c
  6110  0023B4  0FF6               	addlw	-10
  6111  0023B6  6ED9               	movwf	fsr2l,c
  6112  0023B8  50E2               	movf	fsr1h,w,c
  6113  0023BA  6EDA               	movwf	fsr2h,c
  6114  0023BC  0EFF               	movlw	255
  6115  0023BE  22DA               	addwfc	fsr2h,f,c
  6116  0023C0  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6117  0023C4  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6118  0023C8  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6119  0023CC  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6120  0023D0  0102               	movlb	2	; () banked
  6121  0023D2  51E9               	movf	(_loRa+233)& (0+255),w,b
  6122  0023D4  EC62  F036         	call	_SwTimerSetTimeout
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6126  0023D8  0102               	movlb	2	; () banked
  6127  0023DA  51E9               	movf	(_loRa+233)& (0+255),w,b
  6128  0023DC  EC4B  F02E         	call	_SwTimerStart
  6129  0023E0                     l1297:
  6130                           
  6131                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6132  0023E0  0EF5               	movlw	245
  6133  0023E2  26E1               	addwf	fsr1l,f,c
  6134  0023E4  0EFF               	movlw	255
  6135  0023E6  22E2               	addwfc	fsr1h,f,c
  6136  0023E8  0CFF               	retlw	255	;funcret
  6137  0023EA                     __end_of_DutyCycleCallback:
  6138                           	opt stack 0
  6139                           tosu	equ	0xFFF
  6140                           tosh	equ	0xFFE
  6141                           tosl	equ	0xFFD
  6142                           pclath	equ	0xFFA
  6143                           tblptru	equ	0xFF8
  6144                           tblptrh	equ	0xFF7
  6145                           tblptrl	equ	0xFF6
  6146                           tablat	equ	0xFF5
  6147                           prodh	equ	0xFF4
  6148                           prodl	equ	0xFF3
  6149                           intcon	equ	0xFF2
  6150                           intcon2	equ	0xFF1
  6151                           intcon3	equ	0xFF0
  6152                           postinc0	equ	0xFEE
  6153                           wreg	equ	0xFE8
  6154                           postinc1	equ	0xFE6
  6155                           plusw1	equ	0xFE3
  6156                           fsr1h	equ	0xFE2
  6157                           fsr1l	equ	0xFE1
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165 ;; *************** function _UpdateJoinSuccessState *****************
  6166 ;; Defined at:
  6167 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  param           1  [STACK] unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1  [STACK] void 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : F/0
  6178 ;;		On exit  : F/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:   11
  6188 ;; This function calls:
  6189 ;;		_RxJoinResponse
  6190 ;;		_SwTimerSetTimeout
  6191 ;;		_SwTimerStart
  6192 ;;		___lldiv
  6193 ;; This function is called by:
  6194 ;;		_SetCallbackSoftwareTimers
  6195 ;;		_LORAWAN_RxDone
  6196 ;;		_SwTimersExecute
  6197 ;; This function uses a reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text38
  6201  004506                     __ptext38:
  6202                           	opt stack 0
  6203  004506                     _UpdateJoinSuccessState:
  6204                           	opt stack 0
  6205                           
  6206                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6207  004506  52E6               	movf	postinc1,f,c
  6208  004508  52E6               	movf	postinc1,f,c
  6209  00450A  52E6               	movf	postinc1,f,c
  6210  00450C  52E6               	movf	postinc1,f,c
  6211                           
  6212                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6213                           
  6214                           ;incstack = 0
  6215  00450E  0102               	movlb	2	; () banked
  6216  004510  9500               	bcf	_loRa& (0+255),2,b
  6217                           
  6218                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6219  004512  8902               	bsf	(_loRa+2)& (0+255),4,b
  6220                           
  6221                           ; BSR set to: 2
  6222                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6223  004514  0EF0               	movlw	-16
  6224  004516  1702               	andwf	(_loRa+2)& (0+255),f,b
  6225                           
  6226                           ; BSR set to: 2
  6227                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6228  004518  6BD0               	clrf	(_loRa+208)& (0+255),b
  6229  00451A  6BD1               	clrf	(_loRa+209)& (0+255),b
  6230                           
  6231                           ; BSR set to: 2
  6232                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6233  00451C  6BEE               	clrf	(_loRa+238)& (0+255),b
  6234                           
  6235                           ; BSR set to: 2
  6236                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6237  00451E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6238  004520  D074               	goto	l13965
  6239                           
  6240                           ; BSR set to: 2
  6241                           ;lorawan.c: 1052: {
  6242                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6243  004522  51CF               	movf	(_loRa+207)& (0+255),w,b
  6244  004524  E106               	bnz	u15560
  6245  004526  29CC               	incf	(_loRa+204)& (0+255),w,b
  6246  004528  0EFF               	movlw	255
  6247  00452A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6248  00452C  0E0F               	movlw	15
  6249  00452E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6250  004530  E321               	bnc	l13959
  6251  004532                     u15560:
  6252                           
  6253                           ; BSR set to: 2
  6254  004532  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6255  004536  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6256  00453A  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6257  00453E  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6258  004542  0E7D               	movlw	125
  6259  004544  0100               	movlb	0	; () banked
  6260  004546  6F68               	movwf	___lldiv@divisor& (0+255),b
  6261  004548  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6262  00454A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6263  00454C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6264  00454E  EC0D  F030         	call	___lldiv	;wreg free
  6265  004552  C064  F04E         	movff	?___lldiv,btemp+8
  6266  004556  C065  F04F         	movff	?___lldiv+1,btemp+9
  6267  00455A  C066  F050         	movff	?___lldiv+2,btemp+10
  6268  00455E  C067  F051         	movff	?___lldiv+3,btemp+11
  6269  004562  0E0C               	movlw	12
  6270  004564                     u15575:
  6271  004564  90D8               	bcf	status,0,c
  6272  004566  364E               	rlcf	btemp+8,f,c
  6273  004568  364F               	rlcf	btemp+9,f,c
  6274  00456A  3650               	rlcf	btemp+10,f,c
  6275  00456C  3651               	rlcf	btemp+11,f,c
  6276  00456E  2EE8               	decfsz	wreg,f,c
  6277  004570  D7F9               	goto	u15575
  6278  004572  D028               	goto	L2
  6279  004574                     l13959:
  6280                           
  6281                           ; BSR set to: 2
  6282  004574  C2CC  F04E         	movff	_loRa+204,btemp+8
  6283  004578  C2CD  F04F         	movff	_loRa+205,btemp+9
  6284  00457C  C2CE  F050         	movff	_loRa+206,btemp+10
  6285  004580  C2CF  F051         	movff	_loRa+207,btemp+11
  6286  004584  0E0C               	movlw	12
  6287  004586                     u15585:
  6288  004586  90D8               	bcf	status,0,c
  6289  004588  364E               	rlcf	btemp+8,f,c
  6290  00458A  364F               	rlcf	btemp+9,f,c
  6291  00458C  3650               	rlcf	btemp+10,f,c
  6292  00458E  3651               	rlcf	btemp+11,f,c
  6293  004590  2EE8               	decfsz	wreg,f,c
  6294  004592  D7F9               	goto	u15585
  6295  004594  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6296  004598  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6297  00459C  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6298  0045A0  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6299  0045A4  0E7D               	movlw	125
  6300  0045A6  0100               	movlb	0	; () banked
  6301  0045A8  6F68               	movwf	___lldiv@divisor& (0+255),b
  6302  0045AA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6303  0045AC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6304  0045AE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6305  0045B0  EC0D  F030         	call	___lldiv	;wreg free
  6306  0045B4  C064  F04E         	movff	?___lldiv,btemp+8
  6307  0045B8  C065  F04F         	movff	?___lldiv+1,btemp+9
  6308  0045BC  C066  F050         	movff	?___lldiv+2,btemp+10
  6309  0045C0  C067  F051         	movff	?___lldiv+3,btemp+11
  6310  0045C4                     L2:
  6311                           
  6312                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6313  0045C4  0EFC               	movlw	-4
  6314  0045C6  C04E  FFE3         	movff	btemp+8,plusw1
  6315  0045CA  0EFD               	movlw	-3
  6316  0045CC  C04F  FFE3         	movff	btemp+9,plusw1
  6317  0045D0  0EFE               	movlw	-2
  6318  0045D2  C050  FFE3         	movff	btemp+10,plusw1
  6319  0045D6  0EFF               	movlw	-1
  6320  0045D8  C051  FFE3         	movff	btemp+11,plusw1
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6324  0045DC  50E1               	movf	fsr1l,w,c
  6325  0045DE  0FFC               	addlw	-4
  6326  0045E0  6ED9               	movwf	fsr2l,c
  6327  0045E2  50E2               	movf	fsr1h,w,c
  6328  0045E4  6EDA               	movwf	fsr2h,c
  6329  0045E6  0EFF               	movlw	255
  6330  0045E8  22DA               	addwfc	fsr2h,f,c
  6331  0045EA  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6332  0045EE  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6333  0045F2  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6334  0045F6  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6335  0045FA  0102               	movlb	2	; () banked
  6336  0045FC  51E7               	movf	(_loRa+231)& (0+255),w,b
  6337  0045FE  EC62  F036         	call	_SwTimerSetTimeout
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6341  004602  0102               	movlb	2	; () banked
  6342  004604  51E7               	movf	(_loRa+231)& (0+255),w,b
  6343  004606  EC4B  F02E         	call	_SwTimerStart
  6344  00460A                     l13965:
  6345                           
  6346                           ;lorawan.c: 1055: }
  6347                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6348  00460A  0100               	movlb	0	; () banked
  6349  00460C  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6350  00460E  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
  6351  004610  E00B               	bz	l2090
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;lorawan.c: 1058: {
  6355                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6356  004612  D801               	call	u15608
  6357  004614  D009               	goto	l2090
  6358  004616                     u15608:
  6359  004616  0005               	push	
  6360  004618  6EFA               	movwf	pclath,c
  6361  00461A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6362  00461C  6EFD               	movwf	tosl,c
  6363  00461E  51EB               	movf	(_rxPayload+3)& (0+255),w,b
  6364  004620  6EFE               	movwf	tosh,c
  6365  004622  6AFF               	clrf	tosu,c
  6366  004624  50FA               	movf	pclath,w,c
  6367  004626  0C01               	retlw	1	;indir
  6368  004628                     l2090:
  6369                           
  6370                           ; BSR set to: 0
  6371                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6372  004628  0EFB               	movlw	251
  6373  00462A  26E1               	addwf	fsr1l,f,c
  6374  00462C  0EFF               	movlw	255
  6375  00462E  22E2               	addwfc	fsr1h,f,c
  6376  004630  0CFF               	retlw	255	;funcret
  6377  004632                     __end_of_UpdateJoinSuccessState:
  6378                           	opt stack 0
  6379                           tosu	equ	0xFFF
  6380                           tosh	equ	0xFFE
  6381                           tosl	equ	0xFFD
  6382                           pclath	equ	0xFFA
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           intcon	equ	0xFF2
  6390                           intcon2	equ	0xFF1
  6391                           intcon3	equ	0xFF0
  6392                           postinc0	equ	0xFEE
  6393                           wreg	equ	0xFE8
  6394                           postinc1	equ	0xFE6
  6395                           plusw1	equ	0xFE3
  6396                           fsr1h	equ	0xFE2
  6397                           fsr1l	equ	0xFE1
  6398                           indf2	equ	0xFDF
  6399                           postinc2	equ	0xFDE
  6400                           postdec2	equ	0xFDD
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function _AutomaticReplyCallback *****************
  6406 ;; Defined at:
  6407 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  param           1  [STACK] unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1  [STACK] void 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : F/0
  6418 ;;		On exit  : F/2
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;Total ram usage:        0 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:   14
  6428 ;; This function calls:
  6429 ;;		_LORAWAN_Send
  6430 ;; This function is called by:
  6431 ;;		_SetCallbackSoftwareTimers
  6432 ;;		_SwTimersExecute
  6433 ;; This function uses a reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text39
  6437  0073FE                     __ptext39:
  6438                           	opt stack 0
  6439  0073FE                     _AutomaticReplyCallback:
  6440                           	opt stack 14
  6441                           
  6442                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6443                           
  6444                           ; BSR set to: 0
  6445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6446                           ;incstack = 0
  6447  0073FE  0EF0               	movlw	-16
  6448  007400  0102               	movlb	2	; () banked
  6449  007402  1702               	andwf	(_loRa+2)& (0+255),f,b
  6450                           
  6451                           ; BSR set to: 2
  6452                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6453  007404  0E00               	movlw	0
  6454  007406  0100               	movlb	0	; () banked
  6455  007408  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  6456  00740A  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  6457  00740C  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6458  00740E  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6459  007410  ECFE  F029         	call	_LORAWAN_Send
  6460                           
  6461                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6462  007414  0102               	movlb	2	; () banked
  6463  007416  9700               	bcf	_loRa& (0+255),3,b
  6464                           
  6465                           ; BSR set to: 2
  6466                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6467  007418  52E5               	movf	postdec1,f,c
  6468  00741A  0012               	return		;funcret
  6469  00741C                     __end_of_AutomaticReplyCallback:
  6470                           	opt stack 0
  6471                           tosu	equ	0xFFF
  6472                           tosh	equ	0xFFE
  6473                           tosl	equ	0xFFD
  6474                           pclath	equ	0xFFA
  6475                           tblptru	equ	0xFF8
  6476                           tblptrh	equ	0xFF7
  6477                           tblptrl	equ	0xFF6
  6478                           tablat	equ	0xFF5
  6479                           prodh	equ	0xFF4
  6480                           prodl	equ	0xFF3
  6481                           intcon	equ	0xFF2
  6482                           intcon2	equ	0xFF1
  6483                           intcon3	equ	0xFF0
  6484                           postinc0	equ	0xFEE
  6485                           wreg	equ	0xFE8
  6486                           postinc1	equ	0xFE6
  6487                           postdec1	equ	0xFE5
  6488                           plusw1	equ	0xFE3
  6489                           fsr1h	equ	0xFE2
  6490                           fsr1l	equ	0xFE1
  6491                           indf2	equ	0xFDF
  6492                           postinc2	equ	0xFDE
  6493                           postdec2	equ	0xFDD
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function _AckRetransmissionCallback *****************
  6499 ;; Defined at:
  6500 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  param           1  [STACK] unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  maximumPacke    1  [STACK] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1  [STACK] void 
  6507 ;; Registers used:
  6508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : F/0
  6511 ;;		On exit  : D/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:   13
  6521 ;; This function calls:
  6522 ;;		_FindSmallestDataRate
  6523 ;;		_LORAWAN_GetMaxPayloadSize
  6524 ;;		_RADIO_Transmit
  6525 ;;		_ResetParametersForConfirmedTransmission
  6526 ;;		_RxDataDone
  6527 ;;		_SelectChannelForTransmission
  6528 ;;		_UpdateRetransmissionAckTimeoutState
  6529 ;; This function is called by:
  6530 ;;		_SetCallbackSoftwareTimers
  6531 ;;		_SwTimersExecute
  6532 ;; This function uses a reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text40
  6536  004A5C                     __ptext40:
  6537                           	opt stack 0
  6538  004A5C                     _AckRetransmissionCallback:
  6539                           	opt stack 0
  6540                           
  6541                           ; BSR set to: 2
  6542                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6543  004A5C  52E6               	movf	postinc1,f,c
  6544                           
  6545                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6546                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6547                           
  6548                           ;incstack = 0
  6549  004A5E  0102               	movlb	2	; () banked
  6550  004A60  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6551  004A62  D070               	goto	l15139
  6552                           
  6553                           ; BSR set to: 2
  6554                           ;lorawan.c: 939: {
  6555                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6556  004A64  51D9               	movf	(_loRa+217)& (0+255),w,b
  6557  004A66  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6558  004A68  E352               	bnc	l15129
  6559                           
  6560                           ; BSR set to: 2
  6561                           ;lorawan.c: 941: {
  6562                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6563  004A6A  EC44  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6564  004A6E  6E51               	movwf	btemp+11,c
  6565  004A70  0E0D               	movlw	13
  6566  004A72  2651               	addwf	btemp+11,f,c
  6567                           
  6568                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6569  004A74  0EFF               	movlw	-1
  6570  004A76  C051  FFE3         	movff	btemp+11,plusw1
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6574                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6575  004A7A  50E3               	movf	plusw1,w,c
  6576  004A7C  6E47               	movwf	btemp+1,c
  6577  004A7E  6A48               	clrf	btemp+2,c
  6578  004A80  0102               	movlb	2	; () banked
  6579  004A82  51D4               	movf	(_loRa+212)& (0+255),w,b
  6580  004A84  5C47               	subwf	btemp+1,w,c
  6581  004A86  51D5               	movf	(_loRa+213)& (0+255),w,b
  6582  004A88  5848               	subwfb	btemp+2,w,c
  6583  004A8A  E333               	bnc	l15123
  6584                           
  6585                           ; BSR set to: 2
  6586                           ;lorawan.c: 946: {
  6587                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6588  004A8C  0E01               	movlw	1
  6589  004A8E  EC19  F033         	call	_SelectChannelForTransmission
  6590  004A92  0900               	iorlw	0
  6591  004A94  E12B               	bnz	l15119
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;lorawan.c: 948: {
  6595                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6596  004A96  0EF0               	movlw	low (_macBuffer+16)
  6597  004A98  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6598  004A9A  0E04               	movlw	high (_macBuffer+16)
  6599  004A9C  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6600  004A9E  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6601  004AA2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
  6602  004AA6  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  6603  004AAA  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  6604  004AAE  5047               	movf	btemp+1,w,c
  6605  004AB0  1048               	iorwf	btemp+2,w,c
  6606  004AB2  E11C               	bnz	l15119
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;lorawan.c: 951: {
  6610                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6611  004AB4  0102               	movlb	2	; () banked
  6612  004AB6  5102               	movf	(_loRa+2)& (0+255),w,b
  6613  004AB8  0BF0               	andlw	-16
  6614  004ABA  0901               	iorlw	1
  6615  004ABC  6F02               	movwf	(_loRa+2)& (0+255),b
  6616                           
  6617                           ; BSR set to: 2
  6618                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6619  004ABE  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6620                           
  6621                           ; BSR set to: 2
  6622                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6623  004AC0  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6624  004AC2  D042               	goto	l2063
  6625                           
  6626                           ; BSR set to: 2
  6627  004AC4  51DF               	movf	(_loRa+223)& (0+255),w,b
  6628  004AC6  E040               	bz	l2063
  6629                           
  6630                           ; BSR set to: 2
  6631  004AC8  51D9               	movf	(_loRa+217)& (0+255),w,b
  6632  004ACA  6E47               	movwf	btemp+1,c
  6633  004ACC  6A48               	clrf	btemp+2,c
  6634  004ACE  51D7               	movf	(_loRa+215)& (0+255),w,b
  6635  004AD0  6E50               	movwf	btemp+10,c
  6636  004AD2  6A51               	clrf	btemp+11,c
  6637  004AD4  2A50               	incf	btemp+10,f,c
  6638  004AD6  0E00               	movlw	0
  6639  004AD8  2251               	addwfc	btemp+11,f,c
  6640  004ADA  5047               	movf	btemp+1,w,c
  6641  004ADC  1850               	xorwf	btemp+10,w,c
  6642  004ADE  E103               	bnz	u17720
  6643  004AE0  5048               	movf	btemp+2,w,c
  6644  004AE2  1851               	xorwf	btemp+11,w,c
  6645  004AE4  E031               	bz	l2063
  6646  004AE6                     u17720:
  6647                           
  6648                           ; BSR set to: 2
  6649                           ;lorawan.c: 957: {
  6650                           ;lorawan.c: 958: FindSmallestDataRate();
  6651  004AE6  EC7B  F02C         	call	_FindSmallestDataRate	;wreg free
  6652  004AEA  D02E               	goto	l2063
  6653  004AEC                     l15119:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;lorawan.c: 961: else
  6657                           ;lorawan.c: 962: {
  6658                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6659  004AEC  ECB9  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6660  004AF0  D02B               	goto	l2063
  6661  004AF2                     l15123:
  6662                           
  6663                           ; BSR set to: 2
  6664                           ;lorawan.c: 973: else
  6665                           ;lorawan.c: 974: {
  6666                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6667  004AF2  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6668                           
  6669                           ; BSR set to: 2
  6670                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6671  004AF6  0100               	movlb	0	; () banked
  6672  004AF8  51E8               	movf	_rxPayload& (0+255),w,b
  6673  004AFA  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6674  004AFC  E025               	bz	l2063
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;lorawan.c: 977: {
  6678                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6679  004AFE  6B64               	clrf	RxDataDone@pData& (0+255),b
  6680  004B00  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  6681  004B02  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  6682  004B04  0E04               	movlw	4
  6683  004B06  6F67               	movwf	RxDataDone@status& (0+255),b
  6684  004B08  D801               	call	u17748
  6685  004B0A  D01E               	goto	l2063
  6686  004B0C                     u17748:
  6687  004B0C  D012               	goto	u17788
  6688  004B0E                     l15129:
  6689                           
  6690                           ; BSR set to: 2
  6691                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6692  004B0E  51D9               	movf	(_loRa+217)& (0+255),w,b
  6693  004B10  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6694  004B12  E21A               	bc	l2063
  6695                           
  6696                           ; BSR set to: 2
  6697  004B14  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6698  004B16  D018               	goto	l2063
  6699                           
  6700                           ; BSR set to: 2
  6701                           ;lorawan.c: 983: {
  6702                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6703  004B18  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6704                           
  6705                           ; BSR set to: 2
  6706                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6707  004B1C  0100               	movlb	0	; () banked
  6708  004B1E  51E8               	movf	_rxPayload& (0+255),w,b
  6709  004B20  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6710  004B22  E012               	bz	l2063
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;lorawan.c: 986: {
  6714                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6715  004B24  0E00               	movlw	0
  6716  004B26  6B64               	clrf	RxDataDone@pData& (0+255),b
  6717  004B28  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  6718  004B2A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  6719  004B2C  6B67               	clrf	RxDataDone@status& (0+255),b
  6720  004B2E  D801               	call	u17788
  6721  004B30  D00B               	goto	l2063
  6722  004B32                     u17788:
  6723  004B32  0005               	push	
  6724  004B34  6EFA               	movwf	pclath,c
  6725  004B36  51E8               	movf	_rxPayload& (0+255),w,b
  6726  004B38  6EFD               	movwf	tosl,c
  6727  004B3A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  6728  004B3C  6EFE               	movwf	tosh,c
  6729  004B3E  6AFF               	clrf	tosu,c
  6730  004B40  50FA               	movf	pclath,w,c
  6731  004B42  0012               	return		;indir
  6732  004B44                     l15139:
  6733                           
  6734                           ; BSR set to: 2
  6735                           ;lorawan.c: 991: else
  6736                           ;lorawan.c: 992: {
  6737                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6738  004B44  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6739  004B48                     l2063:
  6740                           
  6741                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6742  004B48  52E5               	movf	postdec1,f,c
  6743  004B4A  52E5               	movf	postdec1,f,c
  6744  004B4C  0012               	return		;funcret
  6745  004B4E                     __end_of_AckRetransmissionCallback:
  6746                           	opt stack 0
  6747                           tosu	equ	0xFFF
  6748                           tosh	equ	0xFFE
  6749                           tosl	equ	0xFFD
  6750                           pclath	equ	0xFFA
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           prodh	equ	0xFF4
  6756                           prodl	equ	0xFF3
  6757                           intcon	equ	0xFF2
  6758                           intcon2	equ	0xFF1
  6759                           intcon3	equ	0xFF0
  6760                           postinc0	equ	0xFEE
  6761                           wreg	equ	0xFE8
  6762                           postinc1	equ	0xFE6
  6763                           postdec1	equ	0xFE5
  6764                           plusw1	equ	0xFE3
  6765                           fsr1h	equ	0xFE2
  6766                           fsr1l	equ	0xFE1
  6767                           indf2	equ	0xFDF
  6768                           postinc2	equ	0xFDE
  6769                           postdec2	equ	0xFDD
  6770                           fsr2h	equ	0xFDA
  6771                           fsr2l	equ	0xFD9
  6772                           status	equ	0xFD8
  6773                           
  6774 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6775 ;; Defined at:
  6776 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  param           1  [STACK] unsigned char 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  iCtr            1  [STACK] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1  [STACK] void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6785 ;; Tracked objects:
  6786 ;;		On entry : F/0
  6787 ;;		On exit  : D/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:   11
  6797 ;; This function calls:
  6798 ;;		_SwTimerSetTimeout
  6799 ;;		_SwTimerStart
  6800 ;;		___lldiv
  6801 ;; This function is called by:
  6802 ;;		_SetCallbackSoftwareTimers
  6803 ;;		_SwTimersExecute
  6804 ;; This function uses a reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text41
  6808  003FDE                     __ptext41:
  6809                           	opt stack 0
  6810  003FDE                     _LORAWAN_LinkCheckCallback:
  6811                           	opt stack 0
  6812                           
  6813                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6814  003FDE  0E05               	movlw	5
  6815  003FE0  26E1               	addwf	fsr1l,f,c
  6816  003FE2  0E00               	movlw	0
  6817  003FE4  22E2               	addwfc	fsr1h,f,c
  6818                           
  6819                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6820                           
  6821                           ;incstack = 0
  6822  003FE6  0102               	movlb	2	; () banked
  6823  003FE8  A103               	btfss	(_loRa+3)& (0+255),0,b
  6824                           
  6825                           ; BSR set to: 2
  6826  003FEA  A503               	btfss	(_loRa+3)& (0+255),2,b
  6827  003FEC  D029               	goto	l15083
  6828                           
  6829                           ; BSR set to: 2
  6830                           ;lorawan.c: 886: {
  6831                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6832                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6833  003FEE  0EFF               	movlw	-1
  6834  003FF0  6AE3               	clrf	plusw1,c
  6835  003FF2  D00E               	goto	l15073
  6836  003FF4                     l15067:
  6837                           
  6838                           ; BSR set to: 2
  6839                           ;lorawan.c: 889: {
  6840                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6841                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6842  003FF4  0EFF               	movlw	-1
  6843  003FF6  50E3               	movf	plusw1,w,c
  6844  003FF8  0D02               	mullw	2
  6845  003FFA  0EA8               	movlw	low (_loRa+168)
  6846  003FFC  24F3               	addwf	prodl,w,c
  6847  003FFE  6ED9               	movwf	fsr2l,c
  6848  004000  0E02               	movlw	high (_loRa+168)
  6849  004002  20F4               	addwfc	prodh,w,c
  6850  004004  6EDA               	movwf	fsr2h,c
  6851  004006  0E02               	movlw	2
  6852  004008  18DE               	xorwf	postinc2,w,c
  6853  00400A  E008               	bz	l15075
  6854                           
  6855                           ; BSR set to: 2
  6856                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6857  00400C  0EFF               	movlw	-1
  6858  00400E  2AE3               	incf	plusw1,f,c
  6859  004010                     l15073:
  6860                           
  6861                           ; BSR set to: 2
  6862                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6863  004010  0EFF               	movlw	-1
  6864  004012  CFE3 F047          	movff	plusw1,btemp+1
  6865  004016  51A7               	movf	(_loRa+167)& (0+255),w,b
  6866  004018  5C47               	subwf	btemp+1,w,c
  6867  00401A  E3EC               	bnc	l15067
  6868  00401C                     l15075:
  6869                           
  6870                           ; BSR set to: 2
  6871                           ;lorawan.c: 893: }
  6872                           ;lorawan.c: 894: }
  6873                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6874                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6875  00401C  0EFF               	movlw	-1
  6876  00401E  50E3               	movf	plusw1,w,c
  6877  004020  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6878  004022  E10E               	bnz	l15083
  6879                           
  6880                           ; BSR set to: 2
  6881                           ;lorawan.c: 897: {
  6882                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6883  004024  51A7               	movf	(_loRa+167)& (0+255),w,b
  6884  004026  0D02               	mullw	2
  6885  004028  0EA8               	movlw	low (_loRa+168)
  6886  00402A  24F3               	addwf	prodl,w,c
  6887  00402C  6ED9               	movwf	fsr2l,c
  6888  00402E  0E02               	movlw	high (_loRa+168)
  6889  004030  20F4               	addwfc	prodh,w,c
  6890  004032  6EDA               	movwf	fsr2h,c
  6891  004034  0E02               	movlw	2
  6892  004036  6EDF               	movwf	indf2,c
  6893                           
  6894                           ; BSR set to: 2
  6895                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6896  004038  0E10               	movlw	16
  6897  00403A  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6898  00403C  D001               	goto	l15083
  6899                           
  6900                           ; BSR set to: 2
  6901                           ;lorawan.c: 901: {
  6902                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6903  00403E  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6904  004040                     l15083:
  6905                           
  6906                           ; BSR set to: 2
  6907                           ;lorawan.c: 903: }
  6908                           ;lorawan.c: 904: }
  6909                           ;lorawan.c: 905: }
  6910                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6911  004040  A503               	btfss	(_loRa+3)& (0+255),2,b
  6912  004042  D074               	goto	l2041
  6913                           
  6914                           ; BSR set to: 2
  6915                           ;lorawan.c: 909: {
  6916                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6917  004044  51CF               	movf	(_loRa+207)& (0+255),w,b
  6918  004046  E106               	bnz	u17620
  6919  004048  29CC               	incf	(_loRa+204)& (0+255),w,b
  6920  00404A  0EFF               	movlw	255
  6921  00404C  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6922  00404E  0E0F               	movlw	15
  6923  004050  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6924  004052  E321               	bnc	l15089
  6925  004054                     u17620:
  6926                           
  6927                           ; BSR set to: 2
  6928  004054  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6929  004058  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6930  00405C  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6931  004060  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6932  004064  0E7D               	movlw	125
  6933  004066  0100               	movlb	0	; () banked
  6934  004068  6F68               	movwf	___lldiv@divisor& (0+255),b
  6935  00406A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6936  00406C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6937  00406E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6938  004070  EC0D  F030         	call	___lldiv	;wreg free
  6939  004074  C064  F04E         	movff	?___lldiv,btemp+8
  6940  004078  C065  F04F         	movff	?___lldiv+1,btemp+9
  6941  00407C  C066  F050         	movff	?___lldiv+2,btemp+10
  6942  004080  C067  F051         	movff	?___lldiv+3,btemp+11
  6943  004084  0E0C               	movlw	12
  6944  004086                     u17635:
  6945  004086  90D8               	bcf	status,0,c
  6946  004088  364E               	rlcf	btemp+8,f,c
  6947  00408A  364F               	rlcf	btemp+9,f,c
  6948  00408C  3650               	rlcf	btemp+10,f,c
  6949  00408E  3651               	rlcf	btemp+11,f,c
  6950  004090  2EE8               	decfsz	wreg,f,c
  6951  004092  D7F9               	goto	u17635
  6952  004094  D028               	goto	L3
  6953  004096                     l15089:
  6954                           
  6955                           ; BSR set to: 2
  6956  004096  C2CC  F04E         	movff	_loRa+204,btemp+8
  6957  00409A  C2CD  F04F         	movff	_loRa+205,btemp+9
  6958  00409E  C2CE  F050         	movff	_loRa+206,btemp+10
  6959  0040A2  C2CF  F051         	movff	_loRa+207,btemp+11
  6960  0040A6  0E0C               	movlw	12
  6961  0040A8                     u17645:
  6962  0040A8  90D8               	bcf	status,0,c
  6963  0040AA  364E               	rlcf	btemp+8,f,c
  6964  0040AC  364F               	rlcf	btemp+9,f,c
  6965  0040AE  3650               	rlcf	btemp+10,f,c
  6966  0040B0  3651               	rlcf	btemp+11,f,c
  6967  0040B2  2EE8               	decfsz	wreg,f,c
  6968  0040B4  D7F9               	goto	u17645
  6969  0040B6  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6970  0040BA  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6971  0040BE  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6972  0040C2  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6973  0040C6  0E7D               	movlw	125
  6974  0040C8  0100               	movlb	0	; () banked
  6975  0040CA  6F68               	movwf	___lldiv@divisor& (0+255),b
  6976  0040CC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6977  0040CE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6978  0040D0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6979  0040D2  EC0D  F030         	call	___lldiv	;wreg free
  6980  0040D6  C064  F04E         	movff	?___lldiv,btemp+8
  6981  0040DA  C065  F04F         	movff	?___lldiv+1,btemp+9
  6982  0040DE  C066  F050         	movff	?___lldiv+2,btemp+10
  6983  0040E2  C067  F051         	movff	?___lldiv+3,btemp+11
  6984  0040E6                     L3:
  6985                           
  6986                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6987  0040E6  0EFB               	movlw	-5
  6988  0040E8  C04E  FFE3         	movff	btemp+8,plusw1
  6989  0040EC  0EFC               	movlw	-4
  6990  0040EE  C04F  FFE3         	movff	btemp+9,plusw1
  6991  0040F2  0EFD               	movlw	-3
  6992  0040F4  C050  FFE3         	movff	btemp+10,plusw1
  6993  0040F8  0EFE               	movlw	-2
  6994  0040FA  C051  FFE3         	movff	btemp+11,plusw1
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6998  0040FE  50E1               	movf	fsr1l,w,c
  6999  004100  0FFB               	addlw	-5
  7000  004102  6ED9               	movwf	fsr2l,c
  7001  004104  50E2               	movf	fsr1h,w,c
  7002  004106  6EDA               	movwf	fsr2h,c
  7003  004108  0EFF               	movlw	255
  7004  00410A  22DA               	addwfc	fsr2h,f,c
  7005  00410C  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  7006  004110  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7007  004114  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7008  004118  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7009  00411C  0102               	movlb	2	; () banked
  7010  00411E  51E7               	movf	(_loRa+231)& (0+255),w,b
  7011  004120  EC62  F036         	call	_SwTimerSetTimeout
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7015  004124  0102               	movlb	2	; () banked
  7016  004126  51E7               	movf	(_loRa+231)& (0+255),w,b
  7017  004128  EC4B  F02E         	call	_SwTimerStart
  7018  00412C                     l2041:
  7019                           
  7020                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7021  00412C  0EFA               	movlw	250
  7022  00412E  26E1               	addwf	fsr1l,f,c
  7023  004130  0EFF               	movlw	255
  7024  004132  22E2               	addwfc	fsr1h,f,c
  7025  004134  0CFF               	retlw	255	;funcret
  7026  004136                     __end_of_LORAWAN_LinkCheckCallback:
  7027                           	opt stack 0
  7028                           tosu	equ	0xFFF
  7029                           tosh	equ	0xFFE
  7030                           tosl	equ	0xFFD
  7031                           pclath	equ	0xFFA
  7032                           tblptru	equ	0xFF8
  7033                           tblptrh	equ	0xFF7
  7034                           tblptrl	equ	0xFF6
  7035                           tablat	equ	0xFF5
  7036                           prodh	equ	0xFF4
  7037                           prodl	equ	0xFF3
  7038                           intcon	equ	0xFF2
  7039                           intcon2	equ	0xFF1
  7040                           intcon3	equ	0xFF0
  7041                           postinc0	equ	0xFEE
  7042                           wreg	equ	0xFE8
  7043                           postinc1	equ	0xFE6
  7044                           postdec1	equ	0xFE5
  7045                           plusw1	equ	0xFE3
  7046                           fsr1h	equ	0xFE2
  7047                           fsr1l	equ	0xFE1
  7048                           indf2	equ	0xFDF
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           fsr2h	equ	0xFDA
  7052                           fsr2l	equ	0xFD9
  7053                           status	equ	0xFD8
  7054                           
  7055 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7056 ;; Defined at:
  7057 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  param           1  [STACK] unsigned char 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  freq            4  [STACK] unsigned long 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1  [STACK] void 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : F/0
  7068 ;;		On exit  : D/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:   13
  7078 ;; This function calls:
  7079 ;;		_ConfigureRadioRx
  7080 ;;		_GetRx1Freq
  7081 ;;		_RADIO_ReceiveStart
  7082 ;;		_RADIO_ReceiveStop
  7083 ;;		_RADIO_ReleaseData
  7084 ;; This function is called by:
  7085 ;;		_SetCallbackSoftwareTimers
  7086 ;;		_SwTimersExecute
  7087 ;; This function uses a reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text42
  7091  00562A                     __ptext42:
  7092                           	opt stack 0
  7093  00562A                     _LORAWAN_ReceiveWindow1Callback:
  7094                           	opt stack 0
  7095                           
  7096                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7097  00562A  52E6               	movf	postinc1,f,c
  7098  00562C  52E6               	movf	postinc1,f,c
  7099  00562E  52E6               	movf	postinc1,f,c
  7100  005630  52E6               	movf	postinc1,f,c
  7101                           
  7102                           ;lorawan.c: 798: uint32_t freq;
  7103                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7104                           
  7105                           ;incstack = 0
  7106  005632  0102               	movlb	2	; () banked
  7107  005634  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7108  005636  D04E               	goto	l2014
  7109                           
  7110                           ; BSR set to: 2
  7111                           ;lorawan.c: 801: {
  7112                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7113  005638  0E02               	movlw	2
  7114  00563A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7115  00563C  E102               	bnz	l15045
  7116                           
  7117                           ; BSR set to: 2
  7118                           ;lorawan.c: 803: {
  7119                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7120  00563E  EC1D  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7121  005642                     l15045:
  7122                           
  7123                           ;lorawan.c: 805: }
  7124                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7125  005642  0102               	movlb	2	; () banked
  7126  005644  51EF               	movf	(_loRa+239)& (0+255),w,b
  7127  005646  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7128  005648  E304               	bnc	l2012
  7129                           
  7130                           ; BSR set to: 2
  7131                           ;lorawan.c: 807: {
  7132                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7133  00564A  51EF               	movf	(_loRa+239)& (0+255),w,b
  7134  00564C  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7135  00564E  6F17               	movwf	(_loRa+23)& (0+255),b
  7136                           
  7137                           ;lorawan.c: 809: }
  7138  005650  D001               	goto	l15049
  7139  005652                     l2012:
  7140                           
  7141                           ; BSR set to: 2
  7142                           ;lorawan.c: 810: else
  7143                           ;lorawan.c: 811: {
  7144                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7145  005652  6B17               	clrf	(_loRa+23)& (0+255),b
  7146  005654                     l15049:
  7147                           
  7148                           ; BSR set to: 2
  7149                           ;lorawan.c: 813: }
  7150                           ;lorawan.c: 815: freq = GetRx1Freq();
  7151  005654  EC68  F03B         	call	_GetRx1Freq	;wreg free
  7152  005658  C064  F04E         	movff	?_GetRx1Freq,btemp+8
  7153  00565C  C065  F04F         	movff	?_GetRx1Freq+1,btemp+9
  7154  005660  C066  F050         	movff	?_GetRx1Freq+2,btemp+10
  7155  005664  C067  F051         	movff	?_GetRx1Freq+3,btemp+11
  7156                           
  7157                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7158  005668  0EFC               	movlw	-4
  7159  00566A  C04E  FFE3         	movff	btemp+8,plusw1
  7160  00566E  0EFD               	movlw	-3
  7161  005670  C04F  FFE3         	movff	btemp+9,plusw1
  7162  005674  0EFE               	movlw	-2
  7163  005676  C050  FFE3         	movff	btemp+10,plusw1
  7164  00567A  0EFF               	movlw	-1
  7165  00567C  C051  FFE3         	movff	btemp+11,plusw1
  7166                           
  7167                           ; BSR set to: 2
  7168                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7169  005680  5102               	movf	(_loRa+2)& (0+255),w,b
  7170  005682  0BF0               	andlw	-16
  7171  005684  0903               	iorlw	3
  7172  005686  6F02               	movwf	(_loRa+2)& (0+255),b
  7173                           
  7174                           ; BSR set to: 2
  7175                           ;lorawan.c: 819: RADIO_ReleaseData();
  7176  005688  EC40  F03C         	call	_RADIO_ReleaseData	;wreg free
  7177                           
  7178                           ; BSR set to: 1
  7179                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7180                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7181  00568C  50E1               	movf	fsr1l,w,c
  7182  00568E  0FFC               	addlw	-4
  7183  005690  6ED9               	movwf	fsr2l,c
  7184  005692  50E2               	movf	fsr1h,w,c
  7185  005694  6EDA               	movwf	fsr2h,c
  7186  005696  0EFF               	movlw	255
  7187  005698  22DA               	addwfc	fsr2h,f,c
  7188  00569A  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7189  00569E  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7190  0056A2  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7191  0056A6  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7192  0056AA  0102               	movlb	2	; () banked
  7193  0056AC  5117               	movf	(_loRa+23)& (0+255),w,b
  7194  0056AE  EC42  F039         	call	_ConfigureRadioRx
  7195                           
  7196                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7197  0056B2  0E85               	movlw	low _rxWindowSize
  7198  0056B4  0102               	movlb	2	; () banked
  7199  0056B6  2517               	addwf	(_loRa+23)& (0+255),w,b
  7200  0056B8  6EF6               	movwf	tblptrl,c
  7201  0056BA  6AF7               	clrf	tblptrh,c
  7202  0056BC  0EFF               	movlw	high _rxWindowSize
  7203  0056BE  22F7               	addwfc	tblptrh,f,c
  7204  0056C0                     	if	1	;There are 3 active tblptr bytes
  7205  0056C0  6AF8               	clrf	tblptru,c
  7206  0056C2  0E00               	movlw	low (__mediumconst shr (0+16))
  7207  0056C4  22F8               	addwfc	tblptru,f,c
  7208  0056C6                     	endif
  7209  0056C6  0008               	tblrd		*
  7210  0056C8  50F5               	movf	tablat,w,c
  7211  0056CA  0100               	movlb	0	; () banked
  7212  0056CC  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7213  0056CE  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7214  0056D0  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
  7215  0056D4                     l2014:
  7216                           
  7217                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7218  0056D4  0EFB               	movlw	251
  7219  0056D6  26E1               	addwf	fsr1l,f,c
  7220  0056D8  0EFF               	movlw	255
  7221  0056DA  22E2               	addwfc	fsr1h,f,c
  7222  0056DC  0CFF               	retlw	255	;funcret
  7223  0056DE                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7224                           	opt stack 0
  7225                           tosu	equ	0xFFF
  7226                           tosh	equ	0xFFE
  7227                           tosl	equ	0xFFD
  7228                           pclath	equ	0xFFA
  7229                           tblptru	equ	0xFF8
  7230                           tblptrh	equ	0xFF7
  7231                           tblptrl	equ	0xFF6
  7232                           tablat	equ	0xFF5
  7233                           prodh	equ	0xFF4
  7234                           prodl	equ	0xFF3
  7235                           intcon	equ	0xFF2
  7236                           intcon2	equ	0xFF1
  7237                           intcon3	equ	0xFF0
  7238                           postinc0	equ	0xFEE
  7239                           wreg	equ	0xFE8
  7240                           postinc1	equ	0xFE6
  7241                           postdec1	equ	0xFE5
  7242                           plusw1	equ	0xFE3
  7243                           fsr1h	equ	0xFE2
  7244                           fsr1l	equ	0xFE1
  7245                           indf2	equ	0xFDF
  7246                           postinc2	equ	0xFDE
  7247                           postdec2	equ	0xFDD
  7248                           fsr2h	equ	0xFDA
  7249                           fsr2l	equ	0xFD9
  7250                           status	equ	0xFD8
  7251                           
  7252 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7253 ;; Defined at:
  7254 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  param           1  [STACK] unsigned char 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1  [STACK] void 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : D/0
  7265 ;;		On exit  : D/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:   14
  7275 ;; This function calls:
  7276 ;;		_ConfigureRadioRx
  7277 ;;		_LORAWAN_EnterContinuousReceive
  7278 ;;		_RADIO_GetStatus
  7279 ;;		_RADIO_ReceiveStart
  7280 ;;		_RADIO_ReceiveStop
  7281 ;;		_RADIO_ReleaseData
  7282 ;;		_ResetParametersForConfirmedTransmission
  7283 ;;		_ResetParametersForUnconfirmedTransmission
  7284 ;;		_RxDataDone
  7285 ;; This function is called by:
  7286 ;;		_LORAWAN_RxTimeout
  7287 ;;		_SetCallbackSoftwareTimers
  7288 ;;		_SwTimersExecute
  7289 ;; This function uses a reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text43
  7293  005334                     __ptext43:
  7294                           	opt stack 0
  7295  005334                     _LORAWAN_ReceiveWindow2Callback:
  7296                           	opt stack 12
  7297                           
  7298                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7299                           
  7300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7301                           ;incstack = 0
  7302  005334  0102               	movlb	2	; () banked
  7303  005336  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7304  005338  D057               	goto	l2017
  7305                           
  7306                           ; BSR set to: 2
  7307                           ;lorawan.c: 831: {
  7308                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7309  00533A  EC3D  F03C         	call	_RADIO_GetStatus	;wreg free
  7310  00533E  6E51               	movwf	btemp+11,c
  7311  005340  B251               	btfsc	btemp+11,1,c
  7312  005342  D04E               	goto	l13813
  7313                           
  7314                           ; BSR set to: 1
  7315                           ;lorawan.c: 833: {
  7316                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7317  005344  0102               	movlb	2	; () banked
  7318  005346  5102               	movf	(_loRa+2)& (0+255),w,b
  7319  005348  0BF0               	andlw	-16
  7320  00534A  0905               	iorlw	5
  7321  00534C  6F02               	movwf	(_loRa+2)& (0+255),b
  7322                           
  7323                           ; BSR set to: 2
  7324                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7325  00534E  EC1D  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;lorawan.c: 837: RADIO_ReleaseData();
  7329  005352  EC40  F03C         	call	_RADIO_ReleaseData	;wreg free
  7330                           
  7331                           ; BSR set to: 1
  7332                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7333  005356  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7334  00535A  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7335  00535E  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7336  005362  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7337  005366  0102               	movlb	2	; () banked
  7338  005368  511C               	movf	(_loRa+28)& (0+255),w,b
  7339  00536A  EC42  F039         	call	_ConfigureRadioRx
  7340                           
  7341                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7342  00536E  0102               	movlb	2	; () banked
  7343  005370  5112               	movf	(_loRa+18)& (0+255),w,b
  7344  005372  E12F               	bnz	l13809
  7345                           
  7346                           ; BSR set to: 2
  7347                           ;lorawan.c: 842: {
  7348                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7349  005374  0E85               	movlw	low _rxWindowSize
  7350  005376  251C               	addwf	(_loRa+28)& (0+255),w,b
  7351  005378  6EF6               	movwf	tblptrl,c
  7352  00537A  6AF7               	clrf	tblptrh,c
  7353  00537C  0EFF               	movlw	high _rxWindowSize
  7354  00537E  22F7               	addwfc	tblptrh,f,c
  7355  005380                     	if	1	;There are 3 active tblptr bytes
  7356  005380  6AF8               	clrf	tblptru,c
  7357  005382  0E00               	movlw	low (__mediumconst shr (0+16))
  7358  005384  22F8               	addwfc	tblptru,f,c
  7359  005386                     	endif
  7360  005386  0008               	tblrd		*
  7361  005388  50F5               	movf	tablat,w,c
  7362  00538A  0100               	movlb	0	; () banked
  7363  00538C  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7364  00538E  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7365  005390  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
  7366  005394  C096  F047         	movff	?_RADIO_ReceiveStart,btemp+1
  7367  005398  C097  F048         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7368  00539C  5047               	movf	btemp+1,w,c
  7369  00539E  1048               	iorwf	btemp+2,w,c
  7370  0053A0  E02B               	bz	l2026
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;lorawan.c: 844: {
  7374                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7375  0053A2  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7376                           
  7377                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7378  0053A6  EC82  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7379                           
  7380                           ; BSR set to: 2
  7381                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7382  0053AA  0100               	movlb	0	; () banked
  7383  0053AC  51E8               	movf	_rxPayload& (0+255),w,b
  7384  0053AE  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7385  0053B0  E023               	bz	l2026
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;lorawan.c: 848: {
  7389                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7390  0053B2  0E00               	movlw	0
  7391  0053B4  6B64               	clrf	RxDataDone@pData& (0+255),b
  7392  0053B6  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7393  0053B8  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7394  0053BA  6B67               	clrf	RxDataDone@status& (0+255),b
  7395  0053BC  D801               	call	u15248
  7396  0053BE  D01C               	goto	l2026
  7397  0053C0                     u15248:
  7398  0053C0  0005               	push	
  7399  0053C2  6EFA               	movwf	pclath,c
  7400  0053C4  51E8               	movf	_rxPayload& (0+255),w,b
  7401  0053C6  6EFD               	movwf	tosl,c
  7402  0053C8  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7403  0053CA  6EFE               	movwf	tosh,c
  7404  0053CC  6AFF               	clrf	tosu,c
  7405  0053CE  50FA               	movf	pclath,w,c
  7406  0053D0  0012               	return		;indir
  7407  0053D2                     l13809:
  7408                           
  7409                           ; BSR set to: 2
  7410                           ;lorawan.c: 853: else
  7411                           ;lorawan.c: 854: {
  7412                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7413  0053D2  5102               	movf	(_loRa+2)& (0+255),w,b
  7414  0053D4  0BF0               	andlw	-16
  7415  0053D6  0909               	iorlw	9
  7416  0053D8  6F02               	movwf	(_loRa+2)& (0+255),b
  7417                           
  7418                           ; BSR set to: 2
  7419                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7420  0053DA  EC86  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7421  0053DE  D00C               	goto	l2026
  7422  0053E0                     l13813:
  7423                           
  7424                           ; BSR set to: 1
  7425                           ;lorawan.c: 859: else
  7426                           ;lorawan.c: 860: {
  7427                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7428  0053E0  0E01               	movlw	1
  7429  0053E2  0102               	movlb	2	; () banked
  7430  0053E4  6FF1               	movwf	(_loRa+241)& (0+255),b
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;lorawan.c: 864: }
  7434                           ;lorawan.c: 865: }
  7435  0053E6  D008               	goto	l2026
  7436  0053E8                     l2017:
  7437                           
  7438                           ; BSR set to: 2
  7439                           ;lorawan.c: 866: else
  7440                           ;lorawan.c: 867: {
  7441                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7442  0053E8  A500               	btfss	_loRa& (0+255),2,b
  7443  0053EA  D002               	goto	l13817
  7444                           
  7445                           ; BSR set to: 2
  7446                           ;lorawan.c: 871: {
  7447                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7448  0053EC  9500               	bcf	_loRa& (0+255),2,b
  7449                           
  7450                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7451  0053EE  9902               	bcf	(_loRa+2)& (0+255),4,b
  7452  0053F0                     l13817:
  7453                           
  7454                           ; BSR set to: 2
  7455                           ;lorawan.c: 874: }
  7456                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7457  0053F0  EC82  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7458                           
  7459                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7460  0053F4  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7461  0053F8                     l2026:
  7462                           
  7463                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7464  0053F8  52E5               	movf	postdec1,f,c
  7465  0053FA  0012               	return		;funcret
  7466  0053FC                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7467                           	opt stack 0
  7468                           tosu	equ	0xFFF
  7469                           tosh	equ	0xFFE
  7470                           tosl	equ	0xFFD
  7471                           pclath	equ	0xFFA
  7472                           tblptru	equ	0xFF8
  7473                           tblptrh	equ	0xFF7
  7474                           tblptrl	equ	0xFF6
  7475                           tablat	equ	0xFF5
  7476                           prodh	equ	0xFF4
  7477                           prodl	equ	0xFF3
  7478                           intcon	equ	0xFF2
  7479                           intcon2	equ	0xFF1
  7480                           intcon3	equ	0xFF0
  7481                           postinc0	equ	0xFEE
  7482                           wreg	equ	0xFE8
  7483                           postinc1	equ	0xFE6
  7484                           postdec1	equ	0xFE5
  7485                           plusw1	equ	0xFE3
  7486                           fsr1h	equ	0xFE2
  7487                           fsr1l	equ	0xFE1
  7488                           indf2	equ	0xFDF
  7489                           postinc2	equ	0xFDE
  7490                           postdec2	equ	0xFDD
  7491                           fsr2h	equ	0xFDA
  7492                           fsr2l	equ	0xFD9
  7493                           status	equ	0xFD8
  7494                           
  7495 ;; *************** function _RADIO_WatchdogTimeout *****************
  7496 ;; Defined at:
  7497 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  param           1  [STACK] unsigned char 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1  [STACK] void 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : F/0
  7508 ;;		On exit  : C/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;Total ram usage:        0 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:   16
  7518 ;; This function calls:
  7519 ;;		_LORAWAN_RxTimeout
  7520 ;;		_LORAWAN_TxDone
  7521 ;;		_RADIO_WriteMode
  7522 ;; This function is called by:
  7523 ;;		_RADIO_Init
  7524 ;;		_SwTimersExecute
  7525 ;; This function uses a reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text44
  7529  006C40                     __ptext44:
  7530                           	opt stack 0
  7531  006C40                     _RADIO_WatchdogTimeout:
  7532                           	opt stack 12
  7533                           
  7534                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7535                           
  7536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7537                           ;incstack = 0
  7538  006C40  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7539  006C44  0E01               	movlw	1
  7540  006C46  0100               	movlb	0	; () banked
  7541  006C48  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7542  006C4A  EC5F  F028         	call	_RADIO_WriteMode
  7543                           
  7544                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7545  006C4E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7546  006C52  0E00               	movlw	0
  7547  006C54  0100               	movlb	0	; () banked
  7548  006C56  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7549  006C58  EC5F  F028         	call	_RADIO_WriteMode
  7550                           
  7551                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7552  006C5C  0101               	movlb	1	; () banked
  7553  006C5E  89A1               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7554                           
  7555                           ; BSR set to: 1
  7556                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7557  006C60  A3A1               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7558  006C62  D004               	goto	l673
  7559                           
  7560                           ; BSR set to: 1
  7561                           ;radio_driver_SX1276.c: 1414: {
  7562                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7563  006C64  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7564                           
  7565                           ; BSR set to: 1
  7566                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7567  006C66  EC62  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7568                           
  7569                           ;radio_driver_SX1276.c: 1417: }
  7570  006C6A  D009               	goto	l676
  7571  006C6C                     l673:
  7572                           
  7573                           ; BSR set to: 1
  7574                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7575  006C6C  A1A1               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7576  006C6E  D007               	goto	l676
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;radio_driver_SX1276.c: 1419: {
  7580                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7581  006C70  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7585  006C72  C1A8  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7586  006C76  C1A9  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7587  006C7A  EC7D  F005         	call	_LORAWAN_TxDone	;wreg free
  7588  006C7E                     l676:
  7589                           
  7590                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7591  006C7E  52E5               	movf	postdec1,f,c
  7592  006C80  0012               	return		;funcret
  7593  006C82                     __end_of_RADIO_WatchdogTimeout:
  7594                           	opt stack 0
  7595                           tosu	equ	0xFFF
  7596                           tosh	equ	0xFFE
  7597                           tosl	equ	0xFFD
  7598                           pclath	equ	0xFFA
  7599                           tblptru	equ	0xFF8
  7600                           tblptrh	equ	0xFF7
  7601                           tblptrl	equ	0xFF6
  7602                           tablat	equ	0xFF5
  7603                           prodh	equ	0xFF4
  7604                           prodl	equ	0xFF3
  7605                           intcon	equ	0xFF2
  7606                           intcon2	equ	0xFF1
  7607                           intcon3	equ	0xFF0
  7608                           postinc0	equ	0xFEE
  7609                           wreg	equ	0xFE8
  7610                           postinc1	equ	0xFE6
  7611                           postdec1	equ	0xFE5
  7612                           plusw1	equ	0xFE3
  7613                           fsr1h	equ	0xFE2
  7614                           fsr1l	equ	0xFE1
  7615                           indf2	equ	0xFDF
  7616                           postinc2	equ	0xFDE
  7617                           postdec2	equ	0xFDD
  7618                           fsr2h	equ	0xFDA
  7619                           fsr2l	equ	0xFD9
  7620                           status	equ	0xFD8
  7621                           
  7622 ;; *************** function _RADIO_RxFSKTimeout *****************
  7623 ;; Defined at:
  7624 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  param           1  [STACK] unsigned char 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  irqFlags        1  [STACK] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1  [STACK] void 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : F/0
  7635 ;;		On exit  : D/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;Total ram usage:        0 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:   16
  7645 ;; This function calls:
  7646 ;;		_LORAWAN_RxTimeout
  7647 ;;		_RADIO_RegisterRead
  7648 ;;		_RADIO_WriteMode
  7649 ;;		_SwTimerStop
  7650 ;; This function is called by:
  7651 ;;		_RADIO_Init
  7652 ;;		_SwTimersExecute
  7653 ;; This function uses a reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text45
  7657  006F52                     __ptext45:
  7658                           	opt stack 0
  7659  006F52                     _RADIO_RxFSKTimeout:
  7660                           	opt stack 0
  7661                           
  7662                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7663  006F52  52E6               	movf	postinc1,f,c
  7664                           
  7665                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7666                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7667                           
  7668                           ;incstack = 0
  7669  006F54  0E3E               	movlw	62
  7670  006F56  EC55  F039         	call	_RADIO_RegisterRead
  7671  006F5A  6E51               	movwf	btemp+11,c
  7672                           
  7673                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7674  006F5C  0EFF               	movlw	-1
  7675  006F5E  C051  FFE3         	movff	btemp+11,plusw1
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7679                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7680  006F62  B0E3               	btfsc	plusw1,0,c
  7681  006F64  D00E               	goto	l670
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;radio_driver_SX1276.c: 1397: {
  7685                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7686  006F66  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7687  006F6A  0E00               	movlw	0
  7688  006F6C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7689  006F6E  EC5F  F028         	call	_RADIO_WriteMode
  7690                           
  7691                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7692  006F72  0101               	movlb	1	; () banked
  7693  006F74  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7694  006F76  EC59  F03A         	call	_SwTimerStop
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7698  006F7A  0101               	movlb	1	; () banked
  7699  006F7C  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7700                           
  7701                           ; BSR set to: 1
  7702                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7703  006F7E  EC62  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7704  006F82                     l670:
  7705                           
  7706                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7707  006F82  52E5               	movf	postdec1,f,c
  7708  006F84  52E5               	movf	postdec1,f,c
  7709  006F86  0012               	return		;funcret
  7710  006F88                     __end_of_RADIO_RxFSKTimeout:
  7711                           	opt stack 0
  7712                           tosu	equ	0xFFF
  7713                           tosh	equ	0xFFE
  7714                           tosl	equ	0xFFD
  7715                           pclath	equ	0xFFA
  7716                           tblptru	equ	0xFF8
  7717                           tblptrh	equ	0xFF7
  7718                           tblptrl	equ	0xFF6
  7719                           tablat	equ	0xFF5
  7720                           prodh	equ	0xFF4
  7721                           prodl	equ	0xFF3
  7722                           intcon	equ	0xFF2
  7723                           intcon2	equ	0xFF1
  7724                           intcon3	equ	0xFF0
  7725                           postinc0	equ	0xFEE
  7726                           wreg	equ	0xFE8
  7727                           postinc1	equ	0xFE6
  7728                           postdec1	equ	0xFE5
  7729                           plusw1	equ	0xFE3
  7730                           fsr1h	equ	0xFE2
  7731                           fsr1l	equ	0xFE1
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           postdec2	equ	0xFDD
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7740 ;; Defined at:
  7741 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  param           1  [STACK] unsigned char 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1  [STACK] void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : F/0
  7752 ;;		On exit  : D/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:   13
  7762 ;; This function calls:
  7763 ;;		_RADIO_Transmit
  7764 ;;		_ResetParametersForUnconfirmedTransmission
  7765 ;;		_RxDataDone
  7766 ;;		_SelectChannelForTransmission
  7767 ;; This function is called by:
  7768 ;;		_SetCallbackSoftwareTimers
  7769 ;;		_SwTimersExecute
  7770 ;; This function uses a reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text46
  7774  0062AC                     __ptext46:
  7775                           	opt stack 0
  7776  0062AC                     _UnconfirmedTransmissionCallback:
  7777                           	opt stack 15
  7778                           
  7779                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7780                           
  7781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7782                           ;incstack = 0
  7783  0062AC  0E01               	movlw	1
  7784  0062AE  EC19  F033         	call	_SelectChannelForTransmission
  7785  0062B2  0900               	iorlw	0
  7786  0062B4  E116               	bnz	l15149
  7787                           
  7788                           ; BSR set to: 0
  7789  0062B6  0EF0               	movlw	low (_macBuffer+16)
  7790  0062B8  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  7791  0062BA  0E04               	movlw	high (_macBuffer+16)
  7792  0062BC  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7793  0062BE  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7794  0062C2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
  7795  0062C6  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  7796  0062CA  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  7797  0062CE  5047               	movf	btemp+1,w,c
  7798  0062D0  1048               	iorwf	btemp+2,w,c
  7799  0062D2  E107               	bnz	l15149
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;lorawan.c: 1001: {
  7803                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7804  0062D4  0102               	movlb	2	; () banked
  7805  0062D6  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7806                           
  7807                           ; BSR set to: 2
  7808                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7809  0062D8  5102               	movf	(_loRa+2)& (0+255),w,b
  7810  0062DA  0BF0               	andlw	-16
  7811  0062DC  0901               	iorlw	1
  7812  0062DE  6F02               	movwf	(_loRa+2)& (0+255),b
  7813                           
  7814                           ;lorawan.c: 1005: }
  7815  0062E0  D016               	goto	l2069
  7816  0062E2                     l15149:
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;lorawan.c: 1006: else
  7820                           ;lorawan.c: 1008: {
  7821                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7822  0062E2  EC82  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7823                           
  7824                           ; BSR set to: 2
  7825                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7826  0062E6  0100               	movlb	0	; () banked
  7827  0062E8  51E8               	movf	_rxPayload& (0+255),w,b
  7828  0062EA  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7829  0062EC  E010               	bz	l2069
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;lorawan.c: 1011: {
  7833                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7834  0062EE  0E00               	movlw	0
  7835  0062F0  6B64               	clrf	RxDataDone@pData& (0+255),b
  7836  0062F2  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7837  0062F4  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7838  0062F6  6B67               	clrf	RxDataDone@status& (0+255),b
  7839  0062F8  D801               	call	u17828
  7840  0062FA  D009               	goto	l2069
  7841  0062FC                     u17828:
  7842  0062FC  0005               	push	
  7843  0062FE  6EFA               	movwf	pclath,c
  7844  006300  51E8               	movf	_rxPayload& (0+255),w,b
  7845  006302  6EFD               	movwf	tosl,c
  7846  006304  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7847  006306  6EFE               	movwf	tosh,c
  7848  006308  6AFF               	clrf	tosu,c
  7849  00630A  50FA               	movf	pclath,w,c
  7850  00630C  0012               	return		;indir
  7851  00630E                     l2069:
  7852                           
  7853                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7854  00630E  52E5               	movf	postdec1,f,c
  7855  006310  0012               	return		;funcret
  7856  006312                     __end_of_UnconfirmedTransmissionCallback:
  7857                           	opt stack 0
  7858                           tosu	equ	0xFFF
  7859                           tosh	equ	0xFFE
  7860                           tosl	equ	0xFFD
  7861                           pclath	equ	0xFFA
  7862                           tblptru	equ	0xFF8
  7863                           tblptrh	equ	0xFF7
  7864                           tblptrl	equ	0xFF6
  7865                           tablat	equ	0xFF5
  7866                           prodh	equ	0xFF4
  7867                           prodl	equ	0xFF3
  7868                           intcon	equ	0xFF2
  7869                           intcon2	equ	0xFF1
  7870                           intcon3	equ	0xFF0
  7871                           postinc0	equ	0xFEE
  7872                           wreg	equ	0xFE8
  7873                           postinc1	equ	0xFE6
  7874                           postdec1	equ	0xFE5
  7875                           plusw1	equ	0xFE3
  7876                           fsr1h	equ	0xFE2
  7877                           fsr1l	equ	0xFE1
  7878                           indf2	equ	0xFDF
  7879                           postinc2	equ	0xFDE
  7880                           postdec2	equ	0xFDD
  7881                           fsr2h	equ	0xFDA
  7882                           fsr2l	equ	0xFD9
  7883                           status	equ	0xFD8
  7884                           
  7885 ;; *************** function _GetRx1Freq *****************
  7886 ;; Defined at:
  7887 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  4    4[BANK0 ] unsigned long 
  7894 ;; Registers used:
  7895 ;;		None
  7896 ;; Tracked objects:
  7897 ;;		On entry : F/2
  7898 ;;		On exit  : F/2
  7899 ;;		Unchanged: F/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;Total ram usage:        4 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    7
  7908 ;; This function calls:
  7909 ;;		Nothing
  7910 ;; This function is called by:
  7911 ;;		_LORAWAN_ReceiveWindow1Callback
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text47
  7916  0076D0                     __ptext47:
  7917                           	opt stack 0
  7918  0076D0                     _GetRx1Freq:
  7919                           	opt stack 20
  7920                           
  7921                           ; BSR set to: 2
  7922                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7923                           
  7924                           ;incstack = 0
  7925  0076D0  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7926  0076D4  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7927  0076D8  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7928  0076DC  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7929                           
  7930                           ; BSR set to: 2
  7931  0076E0  0012               	return		;funcret
  7932  0076E2                     __end_of_GetRx1Freq:
  7933                           	opt stack 0
  7934                           tosu	equ	0xFFF
  7935                           tosh	equ	0xFFE
  7936                           tosl	equ	0xFFD
  7937                           pclath	equ	0xFFA
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           prodh	equ	0xFF4
  7943                           prodl	equ	0xFF3
  7944                           intcon	equ	0xFF2
  7945                           intcon2	equ	0xFF1
  7946                           intcon3	equ	0xFF0
  7947                           postinc0	equ	0xFEE
  7948                           wreg	equ	0xFE8
  7949                           postinc1	equ	0xFE6
  7950                           postdec1	equ	0xFE5
  7951                           plusw1	equ	0xFE3
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           indf2	equ	0xFDF
  7955                           postinc2	equ	0xFDE
  7956                           postdec2	equ	0xFDD
  7957                           fsr2h	equ	0xFDA
  7958                           fsr2l	equ	0xFD9
  7959                           status	equ	0xFD8
  7960                           
  7961 ;; *************** function _RADIO_DIO5 *****************
  7962 ;; Defined at:
  7963 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  dioMapping      1    0        unsigned char 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, status,2, status,0, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : F/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;Total ram usage:        1 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:   11
  7984 ;; This function calls:
  7985 ;;		_RADIO_RegisterRead
  7986 ;;		_RADIO_UnhandledInterrupt
  7987 ;; This function is called by:
  7988 ;;		_LORAWAN_Mainloop
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text48
  7993  0075F4                     __ptext48:
  7994                           	opt stack 0
  7995  0075F4                     _RADIO_DIO5:
  7996                           	opt stack 18
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8000                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8001                           
  8002                           ; BSR set to: 2
  8003                           ;incstack = 0
  8004  0075F4  0E41               	movlw	65
  8005  0075F6  EC55  F039         	call	_RADIO_RegisterRead
  8006                           
  8007                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8008  0075FA  0E01               	movlw	1
  8009  0075FC  EC55  F039         	call	_RADIO_RegisterRead
  8010  007600  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8011  007602  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8012  007604  0012               	return	
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8016  007606  0E01               	movlw	1
  8017  007608  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8018  00760C                     __end_of_RADIO_DIO5:
  8019                           	opt stack 0
  8020                           tosu	equ	0xFFF
  8021                           tosh	equ	0xFFE
  8022                           tosl	equ	0xFFD
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           intcon2	equ	0xFF1
  8032                           intcon3	equ	0xFF0
  8033                           postinc0	equ	0xFEE
  8034                           wreg	equ	0xFE8
  8035                           postinc1	equ	0xFE6
  8036                           postdec1	equ	0xFE5
  8037                           plusw1	equ	0xFE3
  8038                           fsr1h	equ	0xFE2
  8039                           fsr1l	equ	0xFE1
  8040                           indf2	equ	0xFDF
  8041                           postinc2	equ	0xFDE
  8042                           postdec2	equ	0xFDD
  8043                           fsr2h	equ	0xFDA
  8044                           fsr2l	equ	0xFD9
  8045                           status	equ	0xFD8
  8046                           
  8047 ;; *************** function _RADIO_DIO4 *****************
  8048 ;; Defined at:
  8049 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  dioMapping      1    0        unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : F/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;Total ram usage:        1 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:   11
  8070 ;; This function calls:
  8071 ;;		_RADIO_RegisterRead
  8072 ;;		_RADIO_UnhandledInterrupt
  8073 ;; This function is called by:
  8074 ;;		_LORAWAN_Mainloop
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text49
  8079  00760C                     __ptext49:
  8080                           	opt stack 0
  8081  00760C                     _RADIO_DIO4:
  8082                           	opt stack 18
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8086                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8087                           
  8088                           ;incstack = 0
  8089  00760C  0E41               	movlw	65
  8090  00760E  EC55  F039         	call	_RADIO_RegisterRead
  8091                           
  8092                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8093  007612  0E01               	movlw	1
  8094  007614  EC55  F039         	call	_RADIO_RegisterRead
  8095  007618  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8096  00761A  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8097  00761C  0012               	return	
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8101  00761E  0E01               	movlw	1
  8102  007620  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8103  007624                     __end_of_RADIO_DIO4:
  8104                           	opt stack 0
  8105                           tosu	equ	0xFFF
  8106                           tosh	equ	0xFFE
  8107                           tosl	equ	0xFFD
  8108                           pclath	equ	0xFFA
  8109                           tblptru	equ	0xFF8
  8110                           tblptrh	equ	0xFF7
  8111                           tblptrl	equ	0xFF6
  8112                           tablat	equ	0xFF5
  8113                           prodh	equ	0xFF4
  8114                           prodl	equ	0xFF3
  8115                           intcon	equ	0xFF2
  8116                           intcon2	equ	0xFF1
  8117                           intcon3	equ	0xFF0
  8118                           postinc0	equ	0xFEE
  8119                           wreg	equ	0xFE8
  8120                           postinc1	equ	0xFE6
  8121                           postdec1	equ	0xFE5
  8122                           plusw1	equ	0xFE3
  8123                           fsr1h	equ	0xFE2
  8124                           fsr1l	equ	0xFE1
  8125                           indf2	equ	0xFDF
  8126                           postinc2	equ	0xFDE
  8127                           postdec2	equ	0xFDD
  8128                           fsr2h	equ	0xFDA
  8129                           fsr2l	equ	0xFD9
  8130                           status	equ	0xFD8
  8131                           
  8132 ;; *************** function _RADIO_DIO3 *****************
  8133 ;; Defined at:
  8134 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  dioMapping      1    0        unsigned char 
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, status,2, status,0, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : F/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;Total ram usage:        1 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:   11
  8155 ;; This function calls:
  8156 ;;		_RADIO_RegisterRead
  8157 ;;		_RADIO_UnhandledInterrupt
  8158 ;; This function is called by:
  8159 ;;		_LORAWAN_Mainloop
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text50
  8164  007624                     __ptext50:
  8165                           	opt stack 0
  8166  007624                     _RADIO_DIO3:
  8167                           	opt stack 18
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8171                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8172                           
  8173                           ;incstack = 0
  8174  007624  0E40               	movlw	64
  8175  007626  EC55  F039         	call	_RADIO_RegisterRead
  8176                           
  8177                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8178  00762A  0E01               	movlw	1
  8179  00762C  EC55  F039         	call	_RADIO_RegisterRead
  8180  007630  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8181  007632  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8182  007634  0012               	return	
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8186  007636  0E01               	movlw	1
  8187  007638  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8188  00763C                     __end_of_RADIO_DIO3:
  8189                           	opt stack 0
  8190                           tosu	equ	0xFFF
  8191                           tosh	equ	0xFFE
  8192                           tosl	equ	0xFFD
  8193                           pclath	equ	0xFFA
  8194                           tblptru	equ	0xFF8
  8195                           tblptrh	equ	0xFF7
  8196                           tblptrl	equ	0xFF6
  8197                           tablat	equ	0xFF5
  8198                           prodh	equ	0xFF4
  8199                           prodl	equ	0xFF3
  8200                           intcon	equ	0xFF2
  8201                           intcon2	equ	0xFF1
  8202                           intcon3	equ	0xFF0
  8203                           postinc0	equ	0xFEE
  8204                           wreg	equ	0xFE8
  8205                           postinc1	equ	0xFE6
  8206                           postdec1	equ	0xFE5
  8207                           plusw1	equ	0xFE3
  8208                           fsr1h	equ	0xFE2
  8209                           fsr1l	equ	0xFE1
  8210                           indf2	equ	0xFDF
  8211                           postinc2	equ	0xFDE
  8212                           postdec2	equ	0xFDD
  8213                           fsr2h	equ	0xFDA
  8214                           fsr2l	equ	0xFD9
  8215                           status	equ	0xFD8
  8216                           
  8217 ;; *************** function _RADIO_DIO2 *****************
  8218 ;; Defined at:
  8219 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;		None
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8224 ;;  opMode          1    0        unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : F/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;Total ram usage:        2 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:   12
  8241 ;; This function calls:
  8242 ;;		_RADIO_FHSSChangeChannel
  8243 ;;		_RADIO_RegisterRead
  8244 ;;		_RADIO_UnhandledInterrupt
  8245 ;; This function is called by:
  8246 ;;		_LORAWAN_Mainloop
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text51
  8251  006BB0                     __ptext51:
  8252                           	opt stack 0
  8253  006BB0                     _RADIO_DIO2:
  8254                           	opt stack 17
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8258                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8259                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8260                           
  8261                           ;incstack = 0
  8262  006BB0  0E40               	movlw	64
  8263  006BB2  EC55  F039         	call	_RADIO_RegisterRead
  8264  006BB6  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8265  006BB8  90D8               	bcf	status,0,c
  8266  006BBA  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8267  006BBC  90D8               	bcf	status,0,c
  8268  006BBE  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8269  006BC0  0B03               	andlw	3
  8270  006BC2  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8271                           
  8272                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8273  006BC4  0E01               	movlw	1
  8274  006BC6  EC55  F039         	call	_RADIO_RegisterRead
  8275                           
  8276                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8277  006BCA  0E01               	movlw	1
  8278  006BCC  EC55  F039         	call	_RADIO_RegisterRead
  8279  006BD0  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8280  006BD2  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8281  006BD4  0012               	return	
  8282  006BD6  D003               	goto	l15247
  8283  006BD8                     l15243:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8287  006BD8  0E01               	movlw	1
  8288  006BDA  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8289  006BDE                     l15247:
  8290                           
  8291                           ; BSR set to: 0
  8292  006BDE  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8293                           
  8294                           ; Switch size 1, requested type "speed"
  8295                           ; Number of cases is 3, Range of values is 0 to 2
  8296                           ; switch strategies available:
  8297                           ; Name         Instructions Cycles
  8298                           ; simple_byte           10     6 (average)
  8299                           ;	Chosen strategy is simple_byte
  8300  006BE0  E102 EF72  F038    	bz	_RADIO_FHSSChangeChannel
  8301  006BE6  0A01               	xorlw	1	; case 1
  8302  006BE8  E102 EF72  F038    	bz	_RADIO_FHSSChangeChannel
  8303  006BEE  0A03               	xorlw	3	; case 2
  8304  006BF0  E102 EF72  F038    	bz	_RADIO_FHSSChangeChannel
  8305  006BF6  D7F0               	goto	l15243
  8306  006BF8                     __end_of_RADIO_DIO2:
  8307                           	opt stack 0
  8308                           tosu	equ	0xFFF
  8309                           tosh	equ	0xFFE
  8310                           tosl	equ	0xFFD
  8311                           pclath	equ	0xFFA
  8312                           tblptru	equ	0xFF8
  8313                           tblptrh	equ	0xFF7
  8314                           tblptrl	equ	0xFF6
  8315                           tablat	equ	0xFF5
  8316                           prodh	equ	0xFF4
  8317                           prodl	equ	0xFF3
  8318                           intcon	equ	0xFF2
  8319                           intcon2	equ	0xFF1
  8320                           intcon3	equ	0xFF0
  8321                           postinc0	equ	0xFEE
  8322                           wreg	equ	0xFE8
  8323                           postinc1	equ	0xFE6
  8324                           postdec1	equ	0xFE5
  8325                           plusw1	equ	0xFE3
  8326                           fsr1h	equ	0xFE2
  8327                           fsr1l	equ	0xFE1
  8328                           indf2	equ	0xFDF
  8329                           postinc2	equ	0xFDE
  8330                           postdec2	equ	0xFDD
  8331                           fsr2h	equ	0xFDA
  8332                           fsr2l	equ	0xFD9
  8333                           status	equ	0xFD8
  8334                           
  8335 ;; *************** function _RADIO_DIO1 *****************
  8336 ;; Defined at:
  8337 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;		None
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  1    wreg      void 
  8344 ;; Registers used:
  8345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : F/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;Total ram usage:        2 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:   17
  8358 ;; This function calls:
  8359 ;;		_RADIO_FHSSChangeChannel
  8360 ;;		_RADIO_RegisterRead
  8361 ;;		_RADIO_RxTimeout
  8362 ;;		_RADIO_UnhandledInterrupt
  8363 ;; This function is called by:
  8364 ;;		_LORAWAN_Mainloop
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text52
  8369  006E38                     __ptext52:
  8370                           	opt stack 0
  8371  006E38                     _RADIO_DIO1:
  8372                           	opt stack 12
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8376                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8377                           
  8378                           ;incstack = 0
  8379  006E38  0E40               	movlw	64
  8380  006E3A  EC55  F039         	call	_RADIO_RegisterRead
  8381  006E3E  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8382  006E40  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8383  006E42  0B0F               	andlw	15
  8384  006E44  0B03               	andlw	3
  8385  006E46  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8386                           
  8387                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8388  006E48  0E01               	movlw	1
  8389  006E4A  EC55  F039         	call	_RADIO_RegisterRead
  8390  006E4E  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8391  006E50  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8392  006E52  D00D               	goto	l15235
  8393  006E54  D003               	goto	l15231
  8394  006E56                     l15227:
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8398  006E56  0E01               	movlw	1
  8399  006E58  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8400  006E5C                     l15231:
  8401                           
  8402                           ; BSR set to: 0
  8403  006E5C  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8404                           
  8405                           ; Switch size 1, requested type "speed"
  8406                           ; Number of cases is 2, Range of values is 0 to 1
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte            7     4 (average)
  8410                           ;	Chosen strategy is simple_byte
  8411  006E5E  E102 EF07  F039    	bz	_RADIO_RxTimeout
  8412  006E64  0A01               	xorlw	1	; case 1
  8413  006E66  E102 EF72  F038    	bz	_RADIO_FHSSChangeChannel
  8414  006E6C  D7F4               	goto	l15227
  8415  006E6E                     l15235:
  8416                           
  8417                           ; BSR set to: 0
  8418  006E6E  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8419                           
  8420                           ; Switch size 1, requested type "speed"
  8421                           ; Number of cases is 1, Range of values is 0 to 0
  8422                           ; switch strategies available:
  8423                           ; Name         Instructions Cycles
  8424                           ; simple_byte            4     3 (average)
  8425                           ;	Chosen strategy is simple_byte
  8426  006E70  0012               	return	
  8427  006E72                     __end_of_RADIO_DIO1:
  8428                           	opt stack 0
  8429                           tosu	equ	0xFFF
  8430                           tosh	equ	0xFFE
  8431                           tosl	equ	0xFFD
  8432                           pclath	equ	0xFFA
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           intcon2	equ	0xFF1
  8441                           intcon3	equ	0xFF0
  8442                           postinc0	equ	0xFEE
  8443                           wreg	equ	0xFE8
  8444                           postinc1	equ	0xFE6
  8445                           postdec1	equ	0xFE5
  8446                           plusw1	equ	0xFE3
  8447                           fsr1h	equ	0xFE2
  8448                           fsr1l	equ	0xFE1
  8449                           indf2	equ	0xFDF
  8450                           postinc2	equ	0xFDE
  8451                           postdec2	equ	0xFDD
  8452                           fsr2h	equ	0xFDA
  8453                           fsr2l	equ	0xFD9
  8454                           status	equ	0xFD8
  8455                           
  8456 ;; *************** function _RADIO_RxTimeout *****************
  8457 ;; Defined at:
  8458 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8467 ;; Tracked objects:
  8468 ;;		On entry : F/0
  8469 ;;		On exit  : D/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;Total ram usage:        0 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:   16
  8479 ;; This function calls:
  8480 ;;		_LORAWAN_RxTimeout
  8481 ;;		_RADIO_RegisterWrite
  8482 ;;		_RADIO_WriteMode
  8483 ;;		_SwTimerStop
  8484 ;; This function is called by:
  8485 ;;		_RADIO_DIO1
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text53
  8490  00720E                     __ptext53:
  8491                           	opt stack 0
  8492  00720E                     _RADIO_RxTimeout:
  8493                           	opt stack 12
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8497                           
  8498                           ;incstack = 0
  8499  00720E  0101               	movlb	1	; () banked
  8500  007210  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8501  007212  EC59  F03A         	call	_SwTimerStop
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8505  007216  0E80               	movlw	128
  8506  007218  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8507  00721A  0E12               	movlw	18
  8508  00721C  EC2C  F03A         	call	_RADIO_RegisterWrite
  8509                           
  8510                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8511  007220  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8512  007224  0E00               	movlw	0
  8513  007226  0100               	movlb	0	; () banked
  8514  007228  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8515  00722A  EC5F  F028         	call	_RADIO_WriteMode
  8516                           
  8517                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8518  00722E  0101               	movlb	1	; () banked
  8519  007230  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8523  007232  EF62  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8524  007236                     __end_of_RADIO_RxTimeout:
  8525                           	opt stack 0
  8526                           tosu	equ	0xFFF
  8527                           tosh	equ	0xFFE
  8528                           tosl	equ	0xFFD
  8529                           pclath	equ	0xFFA
  8530                           tblptru	equ	0xFF8
  8531                           tblptrh	equ	0xFF7
  8532                           tblptrl	equ	0xFF6
  8533                           tablat	equ	0xFF5
  8534                           prodh	equ	0xFF4
  8535                           prodl	equ	0xFF3
  8536                           intcon	equ	0xFF2
  8537                           intcon2	equ	0xFF1
  8538                           intcon3	equ	0xFF0
  8539                           postinc0	equ	0xFEE
  8540                           wreg	equ	0xFE8
  8541                           postinc1	equ	0xFE6
  8542                           postdec1	equ	0xFE5
  8543                           plusw1	equ	0xFE3
  8544                           fsr1h	equ	0xFE2
  8545                           fsr1l	equ	0xFE1
  8546                           indf2	equ	0xFDF
  8547                           postinc2	equ	0xFDE
  8548                           postdec2	equ	0xFDD
  8549                           fsr2h	equ	0xFDA
  8550                           fsr2l	equ	0xFD9
  8551                           status	equ	0xFD8
  8552                           
  8553 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8554 ;; Defined at:
  8555 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  irqFlags        1    0        unsigned char 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : F/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:   11
  8576 ;; This function calls:
  8577 ;;		_RADIO_RegisterRead
  8578 ;;		_RADIO_RegisterWrite
  8579 ;;		_RADIO_WriteFrequency
  8580 ;; This function is called by:
  8581 ;;		_RADIO_DIO1
  8582 ;;		_RADIO_DIO2
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text54
  8587  0070E4                     __ptext54:
  8588                           	opt stack 0
  8589  0070E4                     _RADIO_FHSSChangeChannel:
  8590                           	opt stack 17
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8594                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8595                           
  8596                           ;incstack = 0
  8597  0070E4  0E12               	movlw	18
  8598  0070E6  EC55  F039         	call	_RADIO_RegisterRead
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8602  0070EA  0101               	movlb	1	; () banked
  8603  0070EC  519C               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8604  0070EE  119D               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8605  0070F0  E00A               	bz	l592
  8606                           
  8607                           ; BSR set to: 1
  8608                           ;radio_driver_SX1276.c: 1164: {
  8609                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8610  0070F2  51AD               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8611  0070F4  11AE               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8612  0070F6  E007               	bz	l592
  8613                           
  8614                           ; BSR set to: 1
  8615                           ;radio_driver_SX1276.c: 1166: {
  8616                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8617  0070F8  0100               	movlb	0	; () banked
  8618  0070FA  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8619  0070FC  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8620  0070FE  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8621  007100  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8622  007102  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
  8623  007106                     l592:
  8624                           
  8625                           ;radio_driver_SX1276.c: 1168: }
  8626                           ;radio_driver_SX1276.c: 1169: }
  8627                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8628  007106  0E02               	movlw	2
  8629  007108  0100               	movlb	0	; () banked
  8630  00710A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8631  00710C  0E12               	movlw	18
  8632  00710E  EF2C  F03A         	goto	_RADIO_RegisterWrite
  8633  007112                     __end_of_RADIO_FHSSChangeChannel:
  8634                           	opt stack 0
  8635                           tosu	equ	0xFFF
  8636                           tosh	equ	0xFFE
  8637                           tosl	equ	0xFFD
  8638                           pclath	equ	0xFFA
  8639                           tblptru	equ	0xFF8
  8640                           tblptrh	equ	0xFF7
  8641                           tblptrl	equ	0xFF6
  8642                           tablat	equ	0xFF5
  8643                           prodh	equ	0xFF4
  8644                           prodl	equ	0xFF3
  8645                           intcon	equ	0xFF2
  8646                           intcon2	equ	0xFF1
  8647                           intcon3	equ	0xFF0
  8648                           postinc0	equ	0xFEE
  8649                           wreg	equ	0xFE8
  8650                           postinc1	equ	0xFE6
  8651                           postdec1	equ	0xFE5
  8652                           plusw1	equ	0xFE3
  8653                           fsr1h	equ	0xFE2
  8654                           fsr1l	equ	0xFE1
  8655                           indf2	equ	0xFDF
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           
  8662 ;; *************** function _RADIO_DIO0 *****************
  8663 ;; Defined at:
  8664 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;  opMode          1  135[BANK0 ] unsigned char 
  8669 ;;  dioMapping      1  134[BANK0 ] unsigned char 
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  1    wreg      void 
  8672 ;; Registers used:
  8673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8674 ;; Tracked objects:
  8675 ;;		On entry : F/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8680 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8682 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;Total ram usage:        4 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; Hardware stack levels required when called:   17
  8686 ;; This function calls:
  8687 ;;		_RADIO_FSKPacketSent
  8688 ;;		_RADIO_FSKPayloadReady
  8689 ;;		_RADIO_RegisterRead
  8690 ;;		_RADIO_RxDone
  8691 ;;		_RADIO_TxDone
  8692 ;;		_RADIO_UnhandledInterrupt
  8693 ;; This function is called by:
  8694 ;;		_LORAWAN_Mainloop
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text55
  8699  006444                     __ptext55:
  8700                           	opt stack 0
  8701  006444                     _RADIO_DIO0:
  8702                           	opt stack 12
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8706                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8707                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8708                           
  8709                           ;incstack = 0
  8710  006444  0E40               	movlw	64
  8711  006446  EC55  F039         	call	_RADIO_RegisterRead
  8712  00644A  6FE4               	movwf	??_RADIO_DIO0& (0+255),b
  8713  00644C  0E06               	movlw	6
  8714  00644E  6FE5               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8715  006450                     u17925:
  8716  006450  90D8               	bcf	status,0,c
  8717  006452  33E4               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8718  006454  2FE5               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8719  006456  D7FC               	goto	u17925
  8720  006458  51E4               	movf	??_RADIO_DIO0& (0+255),w,b
  8721  00645A  0B03               	andlw	3
  8722  00645C  6FE6               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8723                           
  8724                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8725  00645E  0E01               	movlw	1
  8726  006460  EC55  F039         	call	_RADIO_RegisterRead
  8727  006464  6FE7               	movwf	RADIO_DIO0@opMode& (0+255),b
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8731  006466  AFE7               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8732  006468  D01C               	goto	l15217
  8733  00646A  D003               	goto	l15201
  8734  00646C                     l15197:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8738  00646C  0E01               	movlw	1
  8739  00646E  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8740  006472                     l15201:
  8741                           
  8742                           ; BSR set to: 0
  8743  006472  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8744                           
  8745                           ; Switch size 1, requested type "speed"
  8746                           ; Number of cases is 2, Range of values is 0 to 1
  8747                           ; switch strategies available:
  8748                           ; Name         Instructions Cycles
  8749                           ; simple_byte            7     4 (average)
  8750                           ;	Chosen strategy is simple_byte
  8751  006474  E102 EFCB  F028    	bz	_RADIO_RxDone
  8752  00647A  0A01               	xorlw	1	; case 1
  8753  00647C  E102 EFCA  F01D    	bz	_RADIO_TxDone
  8754  006482  D7F4               	goto	l15197
  8755  006484                     l15203:
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8759  006484  0E07               	movlw	7
  8760  006486  17E7               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8761                           
  8762                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8763  006488  0E03               	movlw	3
  8764  00648A  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8765  00648C  E102               	bnz	l15207
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;radio_driver_SX1276.c: 1209: {
  8769                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8770  00648E  EF01  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8771  006492                     l15207:
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8775  006492  0E05               	movlw	5
  8776  006494  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8777  006496  E102               	bnz	l15213
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;radio_driver_SX1276.c: 1214: {
  8781                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8782  006498  EF6F  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8783  00649C                     l15213:
  8784                           
  8785                           ; BSR set to: 0
  8786                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8787  00649C  0E00               	movlw	0
  8788  00649E  EF8C  F039         	goto	_RADIO_UnhandledInterrupt
  8789  0064A2                     l15217:
  8790                           
  8791                           ; BSR set to: 0
  8792  0064A2  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8793                           
  8794                           ; Switch size 1, requested type "speed"
  8795                           ; Number of cases is 1, Range of values is 0 to 0
  8796                           ; switch strategies available:
  8797                           ; Name         Instructions Cycles
  8798                           ; simple_byte            4     3 (average)
  8799                           ;	Chosen strategy is simple_byte
  8800  0064A4  E0EF               	bz	l15203
  8801  0064A6  D7FA               	goto	l15213
  8802  0064A8                     __end_of_RADIO_DIO0:
  8803                           	opt stack 0
  8804                           tosu	equ	0xFFF
  8805                           tosh	equ	0xFFE
  8806                           tosl	equ	0xFFD
  8807                           pclath	equ	0xFFA
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           intcon	equ	0xFF2
  8815                           intcon2	equ	0xFF1
  8816                           intcon3	equ	0xFF0
  8817                           postinc0	equ	0xFEE
  8818                           wreg	equ	0xFE8
  8819                           postinc1	equ	0xFE6
  8820                           postdec1	equ	0xFE5
  8821                           plusw1	equ	0xFE3
  8822                           fsr1h	equ	0xFE2
  8823                           fsr1l	equ	0xFE1
  8824                           indf2	equ	0xFDF
  8825                           postinc2	equ	0xFDE
  8826                           postdec2	equ	0xFDD
  8827                           fsr2h	equ	0xFDA
  8828                           fsr2l	equ	0xFD9
  8829                           status	equ	0xFD8
  8830                           
  8831 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8832 ;; Defined at:
  8833 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  modulation      1    wreg     enum E7751
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  modulation      1    8[BANK0 ] enum E7751
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : F/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;Total ram usage:        1 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:   10
  8854 ;; This function calls:
  8855 ;;		_RADIO_RegisterWrite
  8856 ;; This function is called by:
  8857 ;;		_RADIO_DIO0
  8858 ;;		_RADIO_DIO1
  8859 ;;		_RADIO_DIO2
  8860 ;;		_RADIO_DIO3
  8861 ;;		_RADIO_DIO4
  8862 ;;		_RADIO_DIO5
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text56
  8867  007318                     __ptext56:
  8868                           	opt stack 0
  8869  007318                     _RADIO_UnhandledInterrupt:
  8870                           	opt stack 18
  8871                           
  8872                           ;incstack = 0
  8873                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8874  007318  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8875                           
  8876                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8877  00731A  0100               	movlb	0	; () banked
  8878  00731C  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8879  00731E  E104               	bnz	l14893
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;radio_driver_SX1276.c: 1145: {
  8883                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8884  007320  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8885  007322  0E12               	movlw	18
  8886  007324  EF2C  F03A         	goto	_RADIO_RegisterWrite
  8887  007328                     l14893:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;radio_driver_SX1276.c: 1148: else
  8891                           ;radio_driver_SX1276.c: 1149: {
  8892                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8893  007328  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8894  00732A  0E3E               	movlw	62
  8895  00732C  EC2C  F03A         	call	_RADIO_RegisterWrite
  8896                           
  8897                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8898  007330  0100               	movlb	0	; () banked
  8899  007332  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8900  007334  0E3F               	movlw	63
  8901  007336  EF2C  F03A         	goto	_RADIO_RegisterWrite
  8902  00733A                     __end_of_RADIO_UnhandledInterrupt:
  8903                           	opt stack 0
  8904                           tosu	equ	0xFFF
  8905                           tosh	equ	0xFFE
  8906                           tosl	equ	0xFFD
  8907                           pclath	equ	0xFFA
  8908                           tblptru	equ	0xFF8
  8909                           tblptrh	equ	0xFF7
  8910                           tblptrl	equ	0xFF6
  8911                           tablat	equ	0xFF5
  8912                           prodh	equ	0xFF4
  8913                           prodl	equ	0xFF3
  8914                           intcon	equ	0xFF2
  8915                           intcon2	equ	0xFF1
  8916                           intcon3	equ	0xFF0
  8917                           postinc0	equ	0xFEE
  8918                           wreg	equ	0xFE8
  8919                           postinc1	equ	0xFE6
  8920                           postdec1	equ	0xFE5
  8921                           plusw1	equ	0xFE3
  8922                           fsr1h	equ	0xFE2
  8923                           fsr1l	equ	0xFE1
  8924                           indf2	equ	0xFDF
  8925                           postinc2	equ	0xFDE
  8926                           postdec2	equ	0xFDD
  8927                           fsr2h	equ	0xFDA
  8928                           fsr2l	equ	0xFD9
  8929                           status	equ	0xFD8
  8930                           
  8931 ;; *************** function _RADIO_TxDone *****************
  8932 ;; Defined at:
  8933 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;		None
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : F/0
  8944 ;;		On exit  : C/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;Total ram usage:       12 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:   15
  8954 ;; This function calls:
  8955 ;;		_LORAWAN_TxDone
  8956 ;;		_RADIO_RegisterWrite
  8957 ;;		_RADIO_WriteMode
  8958 ;;		_SwTimerReadValue
  8959 ;;		_SwTimerStop
  8960 ;; This function is called by:
  8961 ;;		_RADIO_DIO0
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text57
  8966  003B94                     __ptext57:
  8967                           	opt stack 0
  8968  003B94                     _RADIO_TxDone:
  8969                           	opt stack 13
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8973                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8974                           
  8975                           ;incstack = 0
  8976  003B94  0101               	movlb	1	; () banked
  8977  003B96  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8978  003B98  EC59  F03A         	call	_SwTimerStop
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8982  003B9C  0E08               	movlw	8
  8983  003B9E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8984  003BA0  0E12               	movlw	18
  8985  003BA2  EC2C  F03A         	call	_RADIO_RegisterWrite
  8986                           
  8987                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8988  003BA6  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8989  003BAA  0E00               	movlw	0
  8990  003BAC  0100               	movlb	0	; () banked
  8991  003BAE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8992  003BB0  EC5F  F028         	call	_RADIO_WriteMode
  8993                           
  8994                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8995  003BB4  0101               	movlb	1	; () banked
  8996  003BB6  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8997                           
  8998                           ; BSR set to: 1
  8999                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9000  003BB8  B9A1               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9001  003BBA  0012               	return	
  9002                           
  9003                           ; BSR set to: 1
  9004                           ;radio_driver_SX1276.c: 1087: {
  9005                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9006  003BBC  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9007  003BBE  EC83  F036         	call	_SwTimerReadValue
  9008  003BC2  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9009  003BC4  E107               	bnz	u17190
  9010  003BC6  0E1F               	movlw	31
  9011  003BC8  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  9012  003BCA  0EAC               	movlw	172
  9013  003BCC  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9014  003BCE  0EDF               	movlw	223
  9015  003BD0  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9016  003BD2  E346               	bnc	l14859
  9017  003BD4                     u17190:
  9018                           
  9019                           ; BSR set to: 0
  9020  003BD4  0101               	movlb	1	; () banked
  9021  003BD6  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9022  003BD8  EC83  F036         	call	_SwTimerReadValue
  9023  003BDC  0E0D               	movlw	13
  9024  003BDE  D005               	goto	u17200
  9025  003BE0                     u17205:
  9026  003BE0  90D8               	bcf	status,0,c
  9027  003BE2  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9028  003BE4  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9029  003BE6  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9030  003BE8  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9031  003BEA                     u17200:
  9032  003BEA  2EE8               	decfsz	wreg,f,c
  9033  003BEC  D7F9               	goto	u17205
  9034  003BEE  0E7D               	movlw	125
  9035  003BF0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9036  003BF2  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9037  003BF6  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9038  003BFA  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9039  003BFC  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9040  003BFE  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9041  003C00  50F3               	movf	prodl,w,c
  9042  003C02  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9043  003C04  50F4               	movf	prodh,w,c
  9044  003C06  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9045  003C08  0E00               	movlw	0
  9046  003C0A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9047  003C0C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9048  003C0E  50F3               	movf	prodl,w,c
  9049  003C10  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9050  003C12  50F4               	movf	prodh,w,c
  9051  003C14  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9052  003C16  0E00               	movlw	0
  9053  003C18  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9054  003C1A  0E7D               	movlw	125
  9055  003C1C  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9056  003C1E  50F3               	movf	prodl,w,c
  9057  003C20  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9058  003C22  50F4               	movf	prodh,w,c
  9059  003C24  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9060  003C26  0E00               	movlw	0
  9061  003C28  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9062  003C2A  50F3               	movf	prodl,w,c
  9063  003C2C  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9064  003C2E  50F4               	movf	prodh,w,c
  9065  003C30  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9066  003C32  0E00               	movlw	0
  9067  003C34  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9068  003C36  50F3               	movf	prodl,w,c
  9069  003C38  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9070  003C3A  50F4               	movf	prodh,w,c
  9071  003C3C  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9072  003C3E  0E7D               	movlw	125
  9073  003C40  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9074  003C42  50F3               	movf	prodl,w,c
  9075  003C44  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9076  003C46  0E00               	movlw	0
  9077  003C48  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9078  003C4A  50F3               	movf	prodl,w,c
  9079  003C4C  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9080  003C4E  0E00               	movlw	0
  9081  003C50  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9082  003C52  50F3               	movf	prodl,w,c
  9083  003C54  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9084  003C56  0E00               	movlw	0
  9085  003C58  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9086  003C5A  50F3               	movf	prodl,w,c
  9087  003C5C  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9088  003C5E  D045               	goto	L4
  9089  003C60                     l14859:
  9090                           
  9091                           ; BSR set to: 0
  9092  003C60  0101               	movlb	1	; () banked
  9093  003C62  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9094  003C64  EC83  F036         	call	_SwTimerReadValue
  9095  003C68  0E7D               	movlw	125
  9096  003C6A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9097  003C6C  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9098  003C70  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9099  003C74  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9100  003C76  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9101  003C78  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9102  003C7A  50F3               	movf	prodl,w,c
  9103  003C7C  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9104  003C7E  50F4               	movf	prodh,w,c
  9105  003C80  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9106  003C82  0E00               	movlw	0
  9107  003C84  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9108  003C86  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9109  003C88  50F3               	movf	prodl,w,c
  9110  003C8A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9111  003C8C  50F4               	movf	prodh,w,c
  9112  003C8E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9113  003C90  0E00               	movlw	0
  9114  003C92  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9115  003C94  0E7D               	movlw	125
  9116  003C96  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9117  003C98  50F3               	movf	prodl,w,c
  9118  003C9A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9119  003C9C  50F4               	movf	prodh,w,c
  9120  003C9E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9121  003CA0  0E00               	movlw	0
  9122  003CA2  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9123  003CA4  50F3               	movf	prodl,w,c
  9124  003CA6  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9125  003CA8  50F4               	movf	prodh,w,c
  9126  003CAA  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9127  003CAC  0E00               	movlw	0
  9128  003CAE  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9129  003CB0  50F3               	movf	prodl,w,c
  9130  003CB2  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9131  003CB4  50F4               	movf	prodh,w,c
  9132  003CB6  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9133  003CB8  0E7D               	movlw	125
  9134  003CBA  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9135  003CBC  50F3               	movf	prodl,w,c
  9136  003CBE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9137  003CC0  0E00               	movlw	0
  9138  003CC2  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9139  003CC4  50F3               	movf	prodl,w,c
  9140  003CC6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9141  003CC8  0E00               	movlw	0
  9142  003CCA  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9143  003CCC  50F3               	movf	prodl,w,c
  9144  003CCE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9145  003CD0  0E00               	movlw	0
  9146  003CD2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9147  003CD4  50F3               	movf	prodl,w,c
  9148  003CD6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9149  003CD8  0E0D               	movlw	13
  9150  003CDA  D005               	goto	u17210
  9151  003CDC                     u17215:
  9152  003CDC  90D8               	bcf	status,0,c
  9153  003CDE  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9154  003CE0  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9155  003CE2  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9156  003CE4  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9157  003CE6                     u17210:
  9158  003CE6  2EE8               	decfsz	wreg,f,c
  9159  003CE8  D7F9               	goto	u17215
  9160  003CEA                     L4:
  9161  003CEA  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1211
  9162  003CEE  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1211+1
  9163  003CF2  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1211+2
  9164  003CF6  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1211+3
  9165                           
  9166                           ; BSR set to: 0
  9167  003CFA  51DA               	movf	_RADIO_TxDone$1211& (0+255),w,b
  9168  003CFC  0820               	sublw	32
  9169  003CFE  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9170  003D00  0E4E               	movlw	78
  9171  003D02  55DB               	subfwb	(_RADIO_TxDone$1211+1)& (0+255),w,b
  9172  003D04  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9173  003D06  0E00               	movlw	0
  9174  003D08  55DC               	subfwb	(_RADIO_TxDone$1211+2)& (0+255),w,b
  9175  003D0A  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9176  003D0C  0E00               	movlw	0
  9177  003D0E  55DD               	subfwb	(_RADIO_TxDone$1211+3)& (0+255),w,b
  9178  003D10  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9182  003D12  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9183  003D16  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9184  003D1A  EF7D  F005         	goto	_LORAWAN_TxDone	;wreg free
  9185  003D1E                     __end_of_RADIO_TxDone:
  9186                           	opt stack 0
  9187                           tosu	equ	0xFFF
  9188                           tosh	equ	0xFFE
  9189                           tosl	equ	0xFFD
  9190                           pclath	equ	0xFFA
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           intcon2	equ	0xFF1
  9199                           intcon3	equ	0xFF0
  9200                           postinc0	equ	0xFEE
  9201                           wreg	equ	0xFE8
  9202                           postinc1	equ	0xFE6
  9203                           postdec1	equ	0xFE5
  9204                           plusw1	equ	0xFE3
  9205                           fsr1h	equ	0xFE2
  9206                           fsr1l	equ	0xFE1
  9207                           indf2	equ	0xFDF
  9208                           postinc2	equ	0xFDE
  9209                           postdec2	equ	0xFDD
  9210                           fsr2h	equ	0xFDA
  9211                           fsr2l	equ	0xFD9
  9212                           status	equ	0xFD8
  9213                           
  9214 ;; *************** function _RADIO_RxDone *****************
  9215 ;; Defined at:
  9216 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  i               1  131[BANK0 ] unsigned char 
  9221 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : F/0
  9228 ;;		On exit  : D/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9235 ;;Total ram usage:        2 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; Hardware stack levels required when called:   16
  9238 ;; This function calls:
  9239 ;;		_HALSPICSAssert
  9240 ;;		_HALSPICSDeassert
  9241 ;;		_HALSPISend
  9242 ;;		_LORAWAN_RxDone
  9243 ;;		_RADIO_RegisterRead
  9244 ;;		_RADIO_RegisterWrite
  9245 ;;		_RADIO_WriteMode
  9246 ;;		_SwTimerStop
  9247 ;;		___abdiv
  9248 ;; This function is called by:
  9249 ;;		_RADIO_DIO0
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text58
  9254  005196                     __ptext58:
  9255                           	opt stack 0
  9256  005196                     _RADIO_RxDone:
  9257                           	opt stack 12
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9261                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9262                           
  9263                           ;incstack = 0
  9264  005196  0E12               	movlw	18
  9265  005198  EC55  F039         	call	_RADIO_RegisterRead
  9266  00519C  6FE2               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9267                           
  9268                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9269  00519E  0E70               	movlw	112
  9270  0051A0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9271  0051A2  0E12               	movlw	18
  9272  0051A4  EC2C  F03A         	call	_RADIO_RegisterWrite
  9273                           
  9274                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9275  0051A8  0100               	movlb	0	; () banked
  9276  0051AA  51E2               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9277  0051AC  0B50               	andlw	80
  9278  0051AE  0A50               	xorlw	80
  9279  0051B0  A4D8               	btfss	status,2,c
  9280  0051B2  0012               	return	
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;radio_driver_SX1276.c: 969: {
  9284                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9285  0051B4  0101               	movlb	1	; () banked
  9286  0051B6  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9287  0051B8  EC59  F03A         	call	_SwTimerStop
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9291  0051BC  0E1C               	movlw	28
  9292  0051BE  EC55  F039         	call	_RADIO_RegisterRead
  9293  0051C2  6FE3               	movwf	RADIO_RxDone@i& (0+255),b
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9297  0051C4  0101               	movlb	1	; () banked
  9298  0051C6  519A               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9299  0051C8  E004               	bz	l14761
  9300                           
  9301                           ; BSR set to: 1
  9302  0051CA  0100               	movlb	0	; () banked
  9303  0051CC  ABE2               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9304                           
  9305                           ; BSR set to: 0
  9306  0051CE  ADE3               	btfss	RADIO_RxDone@i& (0+255),6,b
  9307  0051D0  D037               	goto	l14783
  9308  0051D2                     l14761:
  9309                           
  9310                           ;radio_driver_SX1276.c: 976: {
  9311                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9312  0051D2  0E13               	movlw	19
  9313  0051D4  EC55  F039         	call	_RADIO_RegisterRead
  9314  0051D8  0101               	movlb	1	; () banked
  9315  0051DA  6FA2               	movwf	(_RadioConfiguration+36)& (0+255),b
  9316                           
  9317                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9318  0051DC  0100               	movlb	0	; () banked
  9319  0051DE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9320  0051E0  0E0D               	movlw	13
  9321  0051E2  EC2C  F03A         	call	_RADIO_RegisterWrite
  9322                           
  9323                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9324  0051E6  EC61  F03C         	call	_HALSPICSAssert	;wreg free
  9325                           
  9326                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9327  0051EA  0E00               	movlw	0
  9328  0051EC  EC09  F03C         	call	_HALSPISend
  9329                           
  9330                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9331  0051F0  0100               	movlb	0	; () banked
  9332  0051F2  6BE3               	clrf	RADIO_RxDone@i& (0+255),b
  9333  0051F4  D00D               	goto	l14773
  9334  0051F6                     l14769:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;radio_driver_SX1276.c: 990: {
  9338                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9339  0051F6  51E3               	movf	RADIO_RxDone@i& (0+255),w,b
  9340  0051F8  0101               	movlb	1	; () banked
  9341  0051FA  25A3               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9342  0051FC  6ED9               	movwf	fsr2l,c
  9343  0051FE  0E00               	movlw	0
  9344  005200  21A4               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9345  005202  6EDA               	movwf	fsr2h,c
  9346  005204  0EFF               	movlw	255
  9347  005206  EC09  F03C         	call	_HALSPISend
  9348  00520A  6EDF               	movwf	indf2,c
  9349  00520C  0100               	movlb	0	; () banked
  9350  00520E  2BE3               	incf	RADIO_RxDone@i& (0+255),f,b
  9351  005210                     l14773:
  9352                           
  9353                           ; BSR set to: 0
  9354  005210  0101               	movlb	1	; () banked
  9355  005212  51A2               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9356  005214  0100               	movlb	0	; () banked
  9357  005216  5DE3               	subwf	RADIO_RxDone@i& (0+255),w,b
  9358  005218  E3EE               	bnc	l14769
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;radio_driver_SX1276.c: 992: }
  9362                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9363  00521A  EC5F  F03C         	call	_HALSPICSDeassert	;wreg free
  9364                           
  9365                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9366  00521E  0101               	movlb	1	; () banked
  9367  005220  85A1               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9368                           
  9369                           ; BSR set to: 1
  9370                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9371  005222  0E19               	movlw	25
  9372  005224  EC55  F039         	call	_RADIO_RegisterRead
  9373  005228  0101               	movlb	1	; () banked
  9374  00522A  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9378  00522C  0E04               	movlw	4
  9379  00522E  0100               	movlb	0	; () banked
  9380  005230  6F64               	movwf	___abdiv@divisor& (0+255),b
  9381  005232  0101               	movlb	1	; () banked
  9382  005234  51B0               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9383  005236  EC2D  F034         	call	___abdiv
  9384  00523A  0101               	movlb	1	; () banked
  9385  00523C  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9386                           
  9387                           ;radio_driver_SX1276.c: 998: }
  9388  00523E  D002               	goto	l14785
  9389  005240                     l14783:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;radio_driver_SX1276.c: 999: else
  9393                           ;radio_driver_SX1276.c: 1000: {
  9394                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9395  005240  0101               	movlb	1	; () banked
  9396  005242  87A1               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9397  005244                     l14785:
  9398                           
  9399                           ; BSR set to: 1
  9400                           ;radio_driver_SX1276.c: 1003: }
  9401                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9402  005244  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9403  005248  0E00               	movlw	0
  9404  00524A  0100               	movlb	0	; () banked
  9405  00524C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9406  00524E  EC5F  F028         	call	_RADIO_WriteMode
  9407                           
  9408                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9409  005252  0101               	movlb	1	; () banked
  9410  005254  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9411                           
  9412                           ; BSR set to: 1
  9413                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9414  005256  C1A3  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9415  00525A  C1A4  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9416  00525E  C1A2  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9417  005262  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9418  005266                     __end_of_RADIO_RxDone:
  9419                           	opt stack 0
  9420                           tosu	equ	0xFFF
  9421                           tosh	equ	0xFFE
  9422                           tosl	equ	0xFFD
  9423                           pclath	equ	0xFFA
  9424                           tblptru	equ	0xFF8
  9425                           tblptrh	equ	0xFF7
  9426                           tblptrl	equ	0xFF6
  9427                           tablat	equ	0xFF5
  9428                           prodh	equ	0xFF4
  9429                           prodl	equ	0xFF3
  9430                           intcon	equ	0xFF2
  9431                           intcon2	equ	0xFF1
  9432                           intcon3	equ	0xFF0
  9433                           postinc0	equ	0xFEE
  9434                           wreg	equ	0xFE8
  9435                           postinc1	equ	0xFE6
  9436                           postdec1	equ	0xFE5
  9437                           plusw1	equ	0xFE3
  9438                           fsr1h	equ	0xFE2
  9439                           fsr1l	equ	0xFE1
  9440                           indf2	equ	0xFDF
  9441                           postinc2	equ	0xFDE
  9442                           postdec2	equ	0xFDD
  9443                           fsr2h	equ	0xFDA
  9444                           fsr2l	equ	0xFD9
  9445                           status	equ	0xFD8
  9446                           
  9447 ;; *************** function ___abdiv *****************
  9448 ;; Defined at:
  9449 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  dividend        1    wreg     char 
  9452 ;;  divisor         1    4[BANK0 ] char 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  dividend        1    8[BANK0 ] char 
  9455 ;;  quotient        1    7[BANK0 ] char 
  9456 ;;  sign            1    6[BANK0 ] unsigned char 
  9457 ;;  counter         1    5[BANK0 ] unsigned char 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      char 
  9460 ;; Registers used:
  9461 ;;		wreg, status,2, status,0
  9462 ;; Tracked objects:
  9463 ;;		On entry : F/1
  9464 ;;		On exit  : F/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9467 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;Total ram usage:        5 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    7
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_RADIO_RxDone
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text59
  9482  00685A                     __ptext59:
  9483                           	opt stack 0
  9484  00685A                     ___abdiv:
  9485                           	opt stack 20
  9486                           
  9487                           ;incstack = 0
  9488                           ;___abdiv@dividend stored from wreg
  9489  00685A  0100               	movlb	0	; () banked
  9490  00685C  6F68               	movwf	___abdiv@dividend& (0+255),b
  9491  00685E  6B66               	clrf	___abdiv@sign& (0+255),b
  9492                           
  9493                           ; BSR set to: 0
  9494  006860  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9495  006862  D003               	goto	l10559
  9496                           
  9497                           ; BSR set to: 0
  9498  006864  6D64               	negf	___abdiv@divisor& (0+255),b
  9499                           
  9500                           ; BSR set to: 0
  9501  006866  0E01               	movlw	1
  9502  006868  6F66               	movwf	___abdiv@sign& (0+255),b
  9503  00686A                     l10559:
  9504                           
  9505                           ; BSR set to: 0
  9506  00686A  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9507  00686C  D003               	goto	l10565
  9508                           
  9509                           ; BSR set to: 0
  9510  00686E  6D68               	negf	___abdiv@dividend& (0+255),b
  9511                           
  9512                           ; BSR set to: 0
  9513  006870  0E01               	movlw	1
  9514  006872  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9515  006874                     l10565:
  9516                           
  9517                           ; BSR set to: 0
  9518  006874  6B67               	clrf	___abdiv@quotient& (0+255),b
  9519                           
  9520                           ; BSR set to: 0
  9521  006876  5164               	movf	___abdiv@divisor& (0+255),w,b
  9522  006878  E014               	bz	l10587
  9523                           
  9524                           ; BSR set to: 0
  9525  00687A  0E01               	movlw	1
  9526  00687C  6F65               	movwf	___abdiv@counter& (0+255),b
  9527  00687E  D003               	goto	l10575
  9528  006880                     l10571:
  9529                           
  9530                           ; BSR set to: 0
  9531  006880  90D8               	bcf	status,0,c
  9532  006882  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9533                           
  9534                           ; BSR set to: 0
  9535  006884  2B65               	incf	___abdiv@counter& (0+255),f,b
  9536  006886                     l10575:
  9537                           
  9538                           ; BSR set to: 0
  9539  006886  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9540  006888  D7FB               	goto	l10571
  9541  00688A                     l10577:
  9542                           
  9543                           ; BSR set to: 0
  9544  00688A  90D8               	bcf	status,0,c
  9545  00688C  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9546  00688E  5164               	movf	___abdiv@divisor& (0+255),w,b
  9547  006890  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9548  006892  E303               	bnc	l10583
  9549                           
  9550                           ; BSR set to: 0
  9551  006894  5164               	movf	___abdiv@divisor& (0+255),w,b
  9552  006896  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9553                           
  9554                           ; BSR set to: 0
  9555  006898  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9556  00689A                     l10583:
  9557                           
  9558                           ; BSR set to: 0
  9559  00689A  90D8               	bcf	status,0,c
  9560  00689C  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9561                           
  9562                           ; BSR set to: 0
  9563  00689E  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9564  0068A0  D7F4               	goto	l10577
  9565  0068A2                     l10587:
  9566                           
  9567                           ; BSR set to: 0
  9568  0068A2  5166               	movf	___abdiv@sign& (0+255),w,b
  9569  0068A4  E001               	bz	l10591
  9570                           
  9571                           ; BSR set to: 0
  9572  0068A6  6D67               	negf	___abdiv@quotient& (0+255),b
  9573  0068A8                     l10591:
  9574                           
  9575                           ; BSR set to: 0
  9576  0068A8  5167               	movf	___abdiv@quotient& (0+255),w,b
  9577                           
  9578                           ; BSR set to: 0
  9579  0068AA  0012               	return		;funcret
  9580  0068AC                     __end_of___abdiv:
  9581                           	opt stack 0
  9582                           tosu	equ	0xFFF
  9583                           tosh	equ	0xFFE
  9584                           tosl	equ	0xFFD
  9585                           pclath	equ	0xFFA
  9586                           tblptru	equ	0xFF8
  9587                           tblptrh	equ	0xFF7
  9588                           tblptrl	equ	0xFF6
  9589                           tablat	equ	0xFF5
  9590                           prodh	equ	0xFF4
  9591                           prodl	equ	0xFF3
  9592                           intcon	equ	0xFF2
  9593                           intcon2	equ	0xFF1
  9594                           intcon3	equ	0xFF0
  9595                           postinc0	equ	0xFEE
  9596                           wreg	equ	0xFE8
  9597                           postinc1	equ	0xFE6
  9598                           postdec1	equ	0xFE5
  9599                           plusw1	equ	0xFE3
  9600                           fsr1h	equ	0xFE2
  9601                           fsr1l	equ	0xFE1
  9602                           indf2	equ	0xFDF
  9603                           postinc2	equ	0xFDE
  9604                           postdec2	equ	0xFDD
  9605                           fsr2h	equ	0xFDA
  9606                           fsr2l	equ	0xFD9
  9607                           status	equ	0xFD8
  9608                           
  9609 ;; *************** function _RADIO_FSKPayloadReady *****************
  9610 ;; Defined at:
  9611 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;		None
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  i               1  131[BANK0 ] unsigned char 
  9616 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      void 
  9619 ;; Registers used:
  9620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : F/0
  9623 ;;		On exit  : D/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;Total ram usage:        2 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:   16
  9633 ;; This function calls:
  9634 ;;		_HALSPICSAssert
  9635 ;;		_HALSPICSDeassert
  9636 ;;		_HALSPISend
  9637 ;;		_LORAWAN_RxDone
  9638 ;;		_LORAWAN_RxTimeout
  9639 ;;		_RADIO_RegisterRead
  9640 ;;		_RADIO_WriteMode
  9641 ;;		_SwTimerStop
  9642 ;; This function is called by:
  9643 ;;		_RADIO_DIO0
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text60
  9648  005ADE                     __ptext60:
  9649                           	opt stack 0
  9650  005ADE                     _RADIO_FSKPayloadReady:
  9651                           	opt stack 12
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9655                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9656                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;incstack = 0
  9660  005ADE  0E3F               	movlw	63
  9661  005AE0  EC55  F039         	call	_RADIO_RegisterRead
  9662  005AE4  6FE2               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9666  005AE6  A5E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9667  005AE8  0012               	return	
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;radio_driver_SX1276.c: 1017: {
  9671                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9672  005AEA  0101               	movlb	1	; () banked
  9673  005AEC  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9674  005AEE  EC59  F03A         	call	_SwTimerStop
  9675                           
  9676                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9677  005AF2  0101               	movlb	1	; () banked
  9678  005AF4  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9679  005AF6  EC59  F03A         	call	_SwTimerStop
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9683  005AFA  EC61  F03C         	call	_HALSPICSAssert	;wreg free
  9684                           
  9685                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9686  005AFE  0E00               	movlw	0
  9687  005B00  EC09  F03C         	call	_HALSPISend
  9688                           
  9689                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9690  005B04  0EFF               	movlw	255
  9691  005B06  EC09  F03C         	call	_HALSPISend
  9692  005B0A  0101               	movlb	1	; () banked
  9693  005B0C  6FA2               	movwf	(_RadioConfiguration+36)& (0+255),b
  9694                           
  9695                           ; BSR set to: 1
  9696                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9697  005B0E  0100               	movlb	0	; () banked
  9698  005B10  6BE3               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9699  005B12  D00D               	goto	l14809
  9700  005B14                     l14805:
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;radio_driver_SX1276.c: 1029: {
  9704                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9705  005B14  51E3               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9706  005B16  0101               	movlb	1	; () banked
  9707  005B18  25A3               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9708  005B1A  6ED9               	movwf	fsr2l,c
  9709  005B1C  0E00               	movlw	0
  9710  005B1E  21A4               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9711  005B20  6EDA               	movwf	fsr2h,c
  9712  005B22  0EFF               	movlw	255
  9713  005B24  EC09  F03C         	call	_HALSPISend
  9714  005B28  6EDF               	movwf	indf2,c
  9715  005B2A  0100               	movlb	0	; () banked
  9716  005B2C  2BE3               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9717  005B2E                     l14809:
  9718                           
  9719                           ; BSR set to: 0
  9720  005B2E  0101               	movlb	1	; () banked
  9721  005B30  51A2               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9722  005B32  0100               	movlb	0	; () banked
  9723  005B34  5DE3               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9724  005B36  E3EE               	bnc	l14805
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;radio_driver_SX1276.c: 1031: }
  9728                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9729  005B38  EC5F  F03C         	call	_HALSPICSDeassert	;wreg free
  9730                           
  9731                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9732  005B3C  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9733  005B40  0E00               	movlw	0
  9734  005B42  0100               	movlb	0	; () banked
  9735  005B44  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9736  005B46  EC5F  F028         	call	_RADIO_WriteMode
  9737                           
  9738                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9739  005B4A  0101               	movlb	1	; () banked
  9740  005B4C  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9741                           
  9742                           ; BSR set to: 1
  9743                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9744  005B4E  0E80               	movlw	128
  9745  005B50  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9746                           
  9747                           ; BSR set to: 1
  9748                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9749  005B52  059A               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9750  005B54  E103               	bnz	l14823
  9751                           
  9752                           ; BSR set to: 1
  9753                           ;radio_driver_SX1276.c: 1040: {
  9754                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9755  005B56  0100               	movlb	0	; () banked
  9756  005B58  A3E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9757  005B5A  D003               	goto	l14825
  9758  005B5C                     l14823:
  9759                           
  9760                           ;radio_driver_SX1276.c: 1042: {
  9761                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9762  005B5C  0101               	movlb	1	; () banked
  9763  005B5E  85A1               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9764                           
  9765                           ;radio_driver_SX1276.c: 1044: }
  9766  005B60  D002               	goto	l14829
  9767  005B62                     l14825:
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;radio_driver_SX1276.c: 1045: else
  9771                           ;radio_driver_SX1276.c: 1046: {
  9772                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9773  005B62  0101               	movlb	1	; () banked
  9774  005B64  95A1               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9775  005B66                     l14829:
  9776                           
  9777                           ; BSR set to: 1
  9778                           ;radio_driver_SX1276.c: 1053: }
  9779                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9780  005B66  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9781  005B68  EF62  F013         	goto	_LORAWAN_RxTimeout
  9782                           
  9783                           ; BSR set to: 1
  9784                           ;radio_driver_SX1276.c: 1056: {
  9785                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9786  005B6C  C1A3  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9787  005B70  C1A4  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9788  005B74  C1A2  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9789  005B78  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9790  005B7C                     __end_of_RADIO_FSKPayloadReady:
  9791                           	opt stack 0
  9792                           tosu	equ	0xFFF
  9793                           tosh	equ	0xFFE
  9794                           tosl	equ	0xFFD
  9795                           pclath	equ	0xFFA
  9796                           tblptru	equ	0xFF8
  9797                           tblptrh	equ	0xFF7
  9798                           tblptrl	equ	0xFF6
  9799                           tablat	equ	0xFF5
  9800                           prodh	equ	0xFF4
  9801                           prodl	equ	0xFF3
  9802                           intcon	equ	0xFF2
  9803                           intcon2	equ	0xFF1
  9804                           intcon3	equ	0xFF0
  9805                           postinc0	equ	0xFEE
  9806                           wreg	equ	0xFE8
  9807                           postinc1	equ	0xFE6
  9808                           postdec1	equ	0xFE5
  9809                           plusw1	equ	0xFE3
  9810                           fsr1h	equ	0xFE2
  9811                           fsr1l	equ	0xFE1
  9812                           indf2	equ	0xFDF
  9813                           postinc2	equ	0xFDE
  9814                           postdec2	equ	0xFDD
  9815                           fsr2h	equ	0xFDA
  9816                           fsr2l	equ	0xFD9
  9817                           status	equ	0xFD8
  9818                           
  9819 ;; *************** function _LORAWAN_RxTimeout *****************
  9820 ;; Defined at:
  9821 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  minim           4   75[BANK0 ] unsigned long 
  9826 ;;  i               1   79[BANK0 ] unsigned char 
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : F/1
  9833 ;;		On exit  : D/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;Total ram usage:        9 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:   15
  9843 ;; This function calls:
  9844 ;;		_LORAWAN_ReceiveWindow2Callback
  9845 ;;		_RADIO_Transmit
  9846 ;;		_ResetParametersForConfirmedTransmission
  9847 ;;		_ResetParametersForUnconfirmedTransmission
  9848 ;;		_RxDataDone
  9849 ;;		_SelectChannelForTransmission
  9850 ;;		_SetJoinFailState
  9851 ;;		_SwTimerSetTimeout
  9852 ;;		_SwTimerStart
  9853 ;;		___lldiv
  9854 ;; This function is called by:
  9855 ;;		_RADIO_FSKPayloadReady
  9856 ;;		_RADIO_RxTimeout
  9857 ;;		_RADIO_RxFSKTimeout
  9858 ;;		_RADIO_WatchdogTimeout
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text61
  9863  0026C4                     __ptext61:
  9864                           	opt stack 0
  9865  0026C4                     _LORAWAN_RxTimeout:
  9866                           	opt stack 12
  9867                           
  9868                           ; BSR set to: 1
  9869                           ;lorawan_eu.c: 466: uint8_t i;
  9870                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9871                           
  9872                           ;incstack = 0
  9873  0026C4  0100               	movlb	0	; () banked
  9874  0026C6  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9875  0026C8  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9876  0026CA  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9877  0026CC  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9878                           
  9879                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9880  0026CE  0102               	movlb	2	; () banked
  9881  0026D0  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9882  0026D2  D134               	goto	l14597
  9883                           
  9884                           ; BSR set to: 2
  9885                           ;lorawan_eu.c: 470: {
  9886                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9887  0026D4  5102               	movf	(_loRa+2)& (0+255),w,b
  9888  0026D6  0B0F               	andlw	15
  9889  0026D8  0A03               	xorlw	3
  9890  0026DA  E10E               	bnz	l1049
  9891                           
  9892                           ; BSR set to: 2
  9893                           ;lorawan_eu.c: 473: {
  9894                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9895  0026DC  5112               	movf	(_loRa+18)& (0+255),w,b
  9896  0026DE  E105               	bnz	l14533
  9897                           
  9898                           ; BSR set to: 2
  9899                           ;lorawan_eu.c: 475: {
  9900                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9901  0026E0  5102               	movf	(_loRa+2)& (0+255),w,b
  9902  0026E2  0BF0               	andlw	-16
  9903  0026E4  0904               	iorlw	4
  9904  0026E6  6F02               	movwf	(_loRa+2)& (0+255),b
  9905                           
  9906                           ;lorawan_eu.c: 477: }
  9907  0026E8  0012               	return	
  9908  0026EA                     l14533:
  9909                           
  9910                           ; BSR set to: 2
  9911                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9912  0026EA  0E02               	movlw	2
  9913  0026EC  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9914  0026EE  A4D8               	btfss	status,2,c
  9915  0026F0  0012               	return	
  9916                           
  9917                           ; BSR set to: 2
  9918                           ;lorawan_eu.c: 479: {
  9919                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9920  0026F2  6AE6               	clrf	postinc1,c
  9921  0026F4  EF9A  F029         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9922  0026F8                     l1049:
  9923                           
  9924                           ; BSR set to: 2
  9925                           ;lorawan_eu.c: 483: else
  9926                           ;lorawan_eu.c: 484: {
  9927                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9928  0026F8  B500               	btfsc	_loRa& (0+255),2,b
  9929                           
  9930                           ; BSR set to: 2
  9931                           ;lorawan_eu.c: 487: {
  9932                           ;lorawan_eu.c: 488: SetJoinFailState();
  9933  0026FA  EF68  F039         	goto	_SetJoinFailState	;wreg free
  9934                           
  9935                           ; BSR set to: 2
  9936                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9937                           
  9938                           ;lorawan_eu.c: 489: }
  9939  0026FE  A902               	btfss	(_loRa+2)& (0+255),4,b
  9940  002700  0012               	return	
  9941                           
  9942                           ; BSR set to: 2
  9943                           ;lorawan_eu.c: 492: {
  9944                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9945  002702  A100               	btfss	_loRa& (0+255),0,b
  9946  002704  D04B               	goto	l14555
  9947                           
  9948                           ; BSR set to: 2
  9949                           ;lorawan_eu.c: 494: {
  9950                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9951  002706  51D9               	movf	(_loRa+217)& (0+255),w,b
  9952  002708  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9953  00270A  E334               	bnc	l14549
  9954                           
  9955                           ; BSR set to: 2
  9956                           ;lorawan_eu.c: 496: {
  9957                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9958  00270C  5102               	movf	(_loRa+2)& (0+255),w,b
  9959  00270E  0BF0               	andlw	-16
  9960  002710  0906               	iorlw	6
  9961  002712  6F02               	movwf	(_loRa+2)& (0+255),b
  9962                           
  9963                           ; BSR set to: 2
  9964                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9965  002714  51A0               	movf	(_loRa+160)& (0+255),w,b
  9966  002716  0100               	movlb	0	; () banked
  9967  002718  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9968  00271A  0102               	movlb	2	; () banked
  9969  00271C  51A1               	movf	(_loRa+161)& (0+255),w,b
  9970  00271E  0100               	movlb	0	; () banked
  9971  002720  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9972  002722  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9973  002724  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9974  002726  0E0C               	movlw	12
  9975  002728                     u16615:
  9976  002728  90D8               	bcf	status,0,c
  9977  00272A  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9978  00272C  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9979  00272E  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9980  002730  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9981  002732  2EE8               	decfsz	wreg,f,c
  9982  002734  D7F9               	goto	u16615
  9983  002736  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9984  00273A  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9985  00273E  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9986  002742  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9987  002746  0E7D               	movlw	125
  9988  002748  6F68               	movwf	___lldiv@divisor& (0+255),b
  9989  00274A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  9990  00274C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  9991  00274E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  9992  002750  EC0D  F030         	call	___lldiv	;wreg free
  9993  002754  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9994  002758  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9995  00275C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9996  002760  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9997  002764  0102               	movlb	2	; () banked
  9998  002766  51E8               	movf	(_loRa+232)& (0+255),w,b
  9999  002768  EC62  F036         	call	_SwTimerSetTimeout
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10003  00276C  0102               	movlb	2	; () banked
 10004  00276E  51E8               	movf	(_loRa+232)& (0+255),w,b
 10005  002770  EF4B  F02E         	goto	_SwTimerStart
 10006  002774                     l14549:
 10007                           
 10008                           ; BSR set to: 2
 10009                           ;lorawan_eu.c: 501: else
 10010                           ;lorawan_eu.c: 502: {
 10011                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10012  002774  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10013                           
 10014                           ; BSR set to: 2
 10015                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10016  002778  0100               	movlb	0	; () banked
 10017  00277A  51E8               	movf	_rxPayload& (0+255),w,b
 10018  00277C  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10019  00277E  B4D8               	btfsc	status,2,c
 10020  002780  0012               	return	
 10021  002782                     l14553:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;lorawan_eu.c: 505: {
 10025                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10026  002782  6B64               	clrf	RxDataDone@pData& (0+255),b
 10027  002784  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10028  002786  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10029  002788  6B67               	clrf	RxDataDone@status& (0+255),b
 10030  00278A  0005               	push	
 10031  00278C  6AFA               	clrf	pclath,c
 10032  00278E  51E8               	movf	_rxPayload& (0+255),w,b
 10033  002790  6EFD               	movwf	tosl,c
 10034  002792  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10035  002794  6EFE               	movwf	tosh,c
 10036  002796  6AFF               	clrf	tosu,c
 10037  002798  50FA               	movf	pclath,w,c
 10038  00279A  0012               	return		;indir
 10039  00279C                     l14555:
 10040                           
 10041                           ; BSR set to: 2
 10042                           ;lorawan_eu.c: 511: else
 10043                           ;lorawan_eu.c: 512: {
 10044                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10045  00279C  51D8               	movf	(_loRa+216)& (0+255),w,b
 10046  00279E  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10047  0027A0  E201 D0B7          	bnc	l14591
 10048                           
 10049                           ; BSR set to: 2
 10050                           ;lorawan_eu.c: 514: {
 10051                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10052  0027A4  5102               	movf	(_loRa+2)& (0+255),w,b
 10053  0027A6  0BF0               	andlw	-16
 10054  0027A8  0906               	iorlw	6
 10055  0027AA  6F02               	movwf	(_loRa+2)& (0+255),b
 10056                           
 10057                           ; BSR set to: 2
 10058                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10059  0027AC  0E01               	movlw	1
 10060  0027AE  EC19  F033         	call	_SelectChannelForTransmission
 10061  0027B2  0900               	iorlw	0
 10062  0027B4  E119               	bnz	l1063
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;lorawan_eu.c: 517: {
 10066                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10067  0027B6  0EF0               	movlw	low (_macBuffer+16)
 10068  0027B8  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10069  0027BA  0E04               	movlw	high (_macBuffer+16)
 10070  0027BC  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10071  0027BE  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10072  0027C2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 10073  0027C6  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10074  0027C8  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10075  0027CA  E107               	bnz	l14567
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;lorawan_eu.c: 520: {
 10079                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10080  0027CC  0102               	movlb	2	; () banked
 10081  0027CE  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10082                           
 10083                           ; BSR set to: 2
 10084                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10085  0027D0  5102               	movf	(_loRa+2)& (0+255),w,b
 10086  0027D2  0BF0               	andlw	-16
 10087  0027D4  0901               	iorlw	1
 10088  0027D6  6F02               	movwf	(_loRa+2)& (0+255),b
 10089                           
 10090                           ;lorawan_eu.c: 523: }
 10091  0027D8  0012               	return	
 10092  0027DA                     l14567:
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;lorawan_eu.c: 524: else
 10096                           ;lorawan_eu.c: 526: {
 10097                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10098  0027DA  EC82  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10099                           
 10100                           ; BSR set to: 2
 10101                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10102  0027DE  0100               	movlb	0	; () banked
 10103  0027E0  51E8               	movf	_rxPayload& (0+255),w,b
 10104  0027E2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10105  0027E4  E1CE               	bnz	l14553
 10106  0027E6  0012               	return	
 10107  0027E8                     l1063:
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;lorawan_eu.c: 534: else
 10111                           ;lorawan_eu.c: 535: {
 10112                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10113  0027E8  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10114  0027EA  D05B               	goto	l14587
 10115  0027EC                     l14573:
 10116                           
 10117                           ; BSR set to: 2
 10118                           ;lorawan_eu.c: 538: {
 10119                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10120  0027EC  0100               	movlb	0	; () banked
 10121  0027EE  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10122  0027F0  0D0E               	mullw	14
 10123  0027F2  0E04               	movlw	low (_Channels+4)
 10124  0027F4  24F3               	addwf	prodl,w,c
 10125  0027F6  6ED9               	movwf	fsr2l,c
 10126  0027F8  0E04               	movlw	high (_Channels+4)
 10127  0027FA  20F4               	addwfc	prodh,w,c
 10128  0027FC  6EDA               	movwf	fsr2h,c
 10129  0027FE  04DE               	decf	postinc2,w,c
 10130  002800  E14E               	bnz	l14585
 10131                           
 10132                           ; BSR set to: 0
 10133  002802  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10134  002804  0D0E               	mullw	14
 10135  002806  0E08               	movlw	low (_Channels+8)
 10136  002808  24F3               	addwf	prodl,w,c
 10137  00280A  6ED9               	movwf	fsr2l,c
 10138  00280C  0E04               	movlw	high (_Channels+8)
 10139  00280E  20F4               	addwfc	prodh,w,c
 10140  002810  6EDA               	movwf	fsr2h,c
 10141  002812  50DE               	movf	postinc2,w,c
 10142  002814  10DE               	iorwf	postinc2,w,c
 10143  002816  10DE               	iorwf	postinc2,w,c
 10144  002818  10DE               	iorwf	postinc2,w,c
 10145  00281A  E041               	bz	l14585
 10146                           
 10147                           ; BSR set to: 0
 10148  00281C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10149  00281E  0D0E               	mullw	14
 10150  002820  0E08               	movlw	low (_Channels+8)
 10151  002822  24F3               	addwf	prodl,w,c
 10152  002824  6ED9               	movwf	fsr2l,c
 10153  002826  0E04               	movlw	high (_Channels+8)
 10154  002828  20F4               	addwfc	prodh,w,c
 10155  00282A  6EDA               	movwf	fsr2h,c
 10156  00282C  50DE               	movf	postinc2,w,c
 10157  00282E  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10158  002830  50DE               	movf	postinc2,w,c
 10159  002832  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10160  002834  50DE               	movf	postinc2,w,c
 10161  002836  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10162  002838  50DE               	movf	postinc2,w,c
 10163  00283A  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10164  00283C  E330               	bnc	l14585
 10165                           
 10166                           ; BSR set to: 0
 10167  00283E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10168  002840  0D0E               	mullw	14
 10169  002842  0E05               	movlw	low (_Channels+5)
 10170  002844  24F3               	addwf	prodl,w,c
 10171  002846  6ED9               	movwf	fsr2l,c
 10172  002848  0E04               	movlw	high (_Channels+5)
 10173  00284A  20F4               	addwfc	prodh,w,c
 10174  00284C  6EDA               	movwf	fsr2h,c
 10175  00284E  50DF               	movf	223,w,c
 10176  002850  0B0F               	andlw	15
 10177  002852  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10178  002854  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10179  002856  0102               	movlb	2	; () banked
 10180  002858  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10181  00285A  E321               	bnc	l14585
 10182                           
 10183                           ; BSR set to: 2
 10184  00285C  0100               	movlb	0	; () banked
 10185  00285E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10186  002860  0D0E               	mullw	14
 10187  002862  0E05               	movlw	low (_Channels+5)
 10188  002864  24F3               	addwf	prodl,w,c
 10189  002866  6ED9               	movwf	fsr2l,c
 10190  002868  0E04               	movlw	high (_Channels+5)
 10191  00286A  20F4               	addwfc	prodh,w,c
 10192  00286C  6EDA               	movwf	fsr2h,c
 10193  00286E  38DF               	swapf	223,w,c
 10194  002870  0B0F               	andlw	15
 10195  002872  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10196  002874  0102               	movlb	2	; () banked
 10197  002876  51DF               	movf	(_loRa+223)& (0+255),w,b
 10198  002878  0100               	movlb	0	; () banked
 10199  00287A  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10200  00287C  E310               	bnc	l14585
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;lorawan_eu.c: 540: {
 10204                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10205  00287E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10206  002880  0D0E               	mullw	14
 10207  002882  0E08               	movlw	low (_Channels+8)
 10208  002884  24F3               	addwf	prodl,w,c
 10209  002886  6ED9               	movwf	fsr2l,c
 10210  002888  0E04               	movlw	high (_Channels+8)
 10211  00288A  20F4               	addwfc	prodh,w,c
 10212  00288C  6EDA               	movwf	fsr2h,c
 10213  00288E  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10214  002892  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10215  002896  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10216  00289A  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10217  00289E                     l14585:
 10218  00289E  0100               	movlb	0	; () banked
 10219  0028A0  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10220  0028A2                     l14587:
 10221                           
 10222                           ; BSR set to: 0
 10223  0028A2  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10224  0028A4  0102               	movlb	2	; () banked
 10225  0028A6  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10226  0028A8  E2A1               	bc	l14573
 10227                           
 10228                           ; BSR set to: 2
 10229                           ;lorawan_eu.c: 542: }
 10230                           ;lorawan_eu.c: 543: }
 10231                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10232  0028AA  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10233  0028AE  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10234  0028B2  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10235  0028B6  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10236  0028BA  0E0C               	movlw	12
 10237  0028BC                     u16745:
 10238  0028BC  90D8               	bcf	status,0,c
 10239  0028BE  0100               	movlb	0	; () banked
 10240  0028C0  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10241  0028C2  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10242  0028C4  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10243  0028C6  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10244  0028C8  2EE8               	decfsz	wreg,f,c
 10245  0028CA  D7F8               	goto	u16745
 10246  0028CC  0E00               	movlw	0
 10247  0028CE  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10248  0028D0  6F64               	movwf	___lldiv@dividend& (0+255),b
 10249  0028D2  0E20               	movlw	32
 10250  0028D4  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10251  0028D6  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10252  0028D8  0E03               	movlw	3
 10253  0028DA  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10254  0028DC  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10255  0028DE  0E00               	movlw	0
 10256  0028E0  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10257  0028E2  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10258  0028E4  0E7D               	movlw	125
 10259  0028E6  6F68               	movwf	___lldiv@divisor& (0+255),b
 10260  0028E8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10261  0028EA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10262  0028EC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10263  0028EE  EC0D  F030         	call	___lldiv	;wreg free
 10264  0028F2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10265  0028F6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10266  0028FA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10267  0028FE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10268  002902  0102               	movlb	2	; () banked
 10269  002904  51EA               	movf	(_loRa+234)& (0+255),w,b
 10270  002906  EC62  F036         	call	_SwTimerSetTimeout
 10271                           
 10272                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10273  00290A  0102               	movlb	2	; () banked
 10274  00290C  51EA               	movf	(_loRa+234)& (0+255),w,b
 10275  00290E  EF4B  F02E         	goto	_SwTimerStart
 10276  002912                     l14591:
 10277                           
 10278                           ; BSR set to: 2
 10279                           ;lorawan_eu.c: 548: else
 10280                           ;lorawan_eu.c: 549: {
 10281                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10282  002912  EC82  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10283                           
 10284                           ; BSR set to: 2
 10285                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10286  002916  0100               	movlb	0	; () banked
 10287  002918  51E8               	movf	_rxPayload& (0+255),w,b
 10288  00291A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10289  00291C  B4D8               	btfsc	status,2,c
 10290  00291E  0012               	return	
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;lorawan_eu.c: 552: {
 10294                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10295  002920  6B64               	clrf	RxDataDone@pData& (0+255),b
 10296  002922  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10297  002924  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10298  002926  0E01               	movlw	1
 10299  002928  6F67               	movwf	RxDataDone@status& (0+255),b
 10300  00292A  0005               	push	
 10301  00292C  6EFA               	movwf	pclath,c
 10302  00292E  51E8               	movf	_rxPayload& (0+255),w,b
 10303  002930  6EFD               	movwf	tosl,c
 10304  002932  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10305  002934  6EFE               	movwf	tosh,c
 10306  002936  6AFF               	clrf	tosu,c
 10307  002938  50FA               	movf	pclath,w,c
 10308  00293A  0012               	return		;indir
 10309  00293C                     l14597:
 10310                           
 10311                           ; BSR set to: 2
 10312                           ;lorawan_eu.c: 560: else
 10313                           ;lorawan_eu.c: 561: {
 10314                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10315  00293C  0100               	movlb	0	; () banked
 10316  00293E  51E8               	movf	_rxPayload& (0+255),w,b
 10317  002940  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10318  002942  B4D8               	btfsc	status,2,c
 10319  002944  0012               	return	
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;lorawan_eu.c: 564: {
 10323                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10324  002946  6B64               	clrf	RxDataDone@pData& (0+255),b
 10325  002948  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10326  00294A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10327  00294C  0E02               	movlw	2
 10328  00294E  6F67               	movwf	RxDataDone@status& (0+255),b
 10329  002950  0005               	push	
 10330  002952  6EFA               	movwf	pclath,c
 10331  002954  51E8               	movf	_rxPayload& (0+255),w,b
 10332  002956  6EFD               	movwf	tosl,c
 10333  002958  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10334  00295A  6EFE               	movwf	tosh,c
 10335  00295C  6AFF               	clrf	tosu,c
 10336  00295E  50FA               	movf	pclath,w,c
 10337  002960  0012               	return		;indir
 10338  002962                     __end_of_LORAWAN_RxTimeout:
 10339                           	opt stack 0
 10340                           tosu	equ	0xFFF
 10341                           tosh	equ	0xFFE
 10342                           tosl	equ	0xFFD
 10343                           pclath	equ	0xFFA
 10344                           tblptru	equ	0xFF8
 10345                           tblptrh	equ	0xFF7
 10346                           tblptrl	equ	0xFF6
 10347                           tablat	equ	0xFF5
 10348                           prodh	equ	0xFF4
 10349                           prodl	equ	0xFF3
 10350                           intcon	equ	0xFF2
 10351                           intcon2	equ	0xFF1
 10352                           intcon3	equ	0xFF0
 10353                           postinc0	equ	0xFEE
 10354                           wreg	equ	0xFE8
 10355                           postinc1	equ	0xFE6
 10356                           postdec1	equ	0xFE5
 10357                           plusw1	equ	0xFE3
 10358                           fsr1h	equ	0xFE2
 10359                           fsr1l	equ	0xFE1
 10360                           indf2	equ	0xFDF
 10361                           postinc2	equ	0xFDE
 10362                           postdec2	equ	0xFDD
 10363                           fsr2h	equ	0xFDA
 10364                           fsr2l	equ	0xFD9
 10365                           status	equ	0xFD8
 10366                           
 10367 ;; *************** function _LORAWAN_RxDone *****************
 10368 ;; Defined at:
 10369 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10372 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10373 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  hdr             2  123[BANK1 ] PTR struct .
 10376 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10377 ;;  joinAccept      2  120[BANK1 ] PTR struct .
 10378 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10379 ;;  computedMic     4  116[BANK1 ] unsigned long 
 10380 ;;  extractedMic    4  108[BANK1 ] unsigned long 
 10381 ;;  packet          2  114[BANK1 ] PTR unsigned char 
 10382 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10383 ;;  frmPayloadLe    1  122[BANK1 ] unsigned char 
 10384 ;;  temp            1  113[BANK1 ] unsigned char 
 10385 ;;  bufferIndex     1  112[BANK1 ] unsigned char 
 10386 ;;  mhdr            1  107[BANK1 ] struct .
 10387 ;;  channelIndex    1  106[BANK1 ] unsigned char 
 10388 ;;  fPort           1  105[BANK1 ] unsigned char 
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      enum E8191
 10391 ;; Registers used:
 10392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10393 ;; Tracked objects:
 10394 ;;		On entry : F/1
 10395 ;;		On exit  : D/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10398 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Totals:         0       5      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;Total ram usage:       28 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:   15
 10405 ;; This function calls:
 10406 ;;		_AESCmac
 10407 ;;		_AESEncodeLoRa
 10408 ;;		_AssembleEncryptionBlock
 10409 ;;		_CheckFlags
 10410 ;;		_CheckMcastFlags
 10411 ;;		_ComputeMic
 10412 ;;		_ComputeSessionKeys
 10413 ;;		_EncryptFRMPayload
 10414 ;;		_ExtractMic
 10415 ;;		_LORAWAN_EnterContinuousReceive
 10416 ;;		_LORAWAN_Send
 10417 ;;		_MacExecuteCommands
 10418 ;;		_RADIO_GetStatus
 10419 ;;		_RADIO_ReleaseData
 10420 ;;		_RxDataDone
 10421 ;;		_SearchAvailableChannel
 10422 ;;		_SetJoinFailState
 10423 ;;		_SetReceptionNotOkState
 10424 ;;		_StartReTxTimer
 10425 ;;		_SwTimerStop
 10426 ;;		_UpdateCfList
 10427 ;;		_UpdateDLSettings
 10428 ;;		_UpdateJoinSuccessState
 10429 ;;		_UpdateReceiveDelays
 10430 ;;		_UpdateRetransmissionAckTimeoutState
 10431 ;;		_memcpy
 10432 ;; This function is called by:
 10433 ;;		_RADIO_RxDone
 10434 ;;		_RADIO_FSKPayloadReady
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text62
 10439  000098                     __ptext62:
 10440                           	opt stack 0
 10441  000098                     _LORAWAN_RxDone:
 10442                           	opt stack 12
 10443                           
 10444                           ; BSR set to: 1
 10445                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10446                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10447                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10448                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10449                           ;lorawan.c: 1127: uint8_t *packet;
 10450                           ;lorawan.c: 1128: uint8_t temp;
 10451                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10452                           
 10453                           ;incstack = 0
 10454  000098  EC40  F03C         	call	_RADIO_ReleaseData	;wreg free
 10455                           
 10456                           ; BSR set to: 1
 10457                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10458  00009C  0102               	movlb	2	; () banked
 10459  00009E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10460  0000A0  EF50  F005         	goto	l14515
 10461                           
 10462                           ; BSR set to: 2
 10463                           ;lorawan.c: 1133: {
 10464                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10465  0000A4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10466  0000A8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10467  0000AC  50DF               	movf	indf2,w,c
 10468  0000AE  0101               	movlb	1	; () banked
 10469  0000B0  6F6B               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10470                           
 10471                           ; BSR set to: 1
 10472                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10473  0000B2  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10474  0000B4  32E8               	rrcf	wreg,f,c
 10475  0000B6  0B07               	andlw	7
 10476  0000B8  06E8               	decf	wreg,f,c
 10477  0000BA  E001 D0C5          	bnz	l14187
 10478                           
 10479                           ; BSR set to: 1
 10480  0000BE  0102               	movlb	2	; () banked
 10481  0000C0  511D               	movf	(_loRa+29)& (0+255),w,b
 10482  0000C2  E001 D0C1          	bnz	l14187
 10483                           
 10484                           ; BSR set to: 2
 10485                           ;lorawan.c: 1136: {
 10486                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10487  0000C6  0101               	movlb	1	; () banked
 10488  0000C8  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10489  0000CA  6F71               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10490                           
 10491                           ;lorawan.c: 1138: while (temp > 0)
 10492  0000CC  D01F               	goto	l14143
 10493  0000CE                     l14137:
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;lorawan.c: 1139: {
 10497                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10498  0000CE  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10499  0000D0  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10500  0000D2  0100               	movlb	0	; () banked
 10501  0000D4  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 10502  0000D6  0E00               	movlw	0
 10503  0000D8  0101               	movlb	1	; () banked
 10504  0000DA  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10505  0000DC  0100               	movlb	0	; () banked
 10506  0000DE  6FDE               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10507  0000E0  0101               	movlb	1	; () banked
 10508  0000E2  5171               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10509  0000E4  0100               	movlb	0	; () banked
 10510  0000E6  5DDD               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10511  0000E8  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 10512  0000EA  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10513  0000EC  A0D8               	btfss	status,0,c
 10514  0000EE  05DE               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10515  0000F0  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10516  0000F2  0E42               	movlw	low (_loRa+66)
 10517  0000F4  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 10518  0000F6  0E02               	movlw	high (_loRa+66)
 10519  0000F8  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10520  0000FA  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;lorawan.c: 1142: if (temp > 16)
 10524  0000FE  0E10               	movlw	16
 10525  000100  0101               	movlb	1	; () banked
 10526  000102  6571               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10527  000104  D002               	goto	l2121
 10528                           
 10529                           ; BSR set to: 1
 10530                           ;lorawan.c: 1143: {
 10531                           ;lorawan.c: 1144: temp -= 16;
 10532  000106  5F71               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10533                           
 10534                           ;lorawan.c: 1145: }
 10535  000108  D001               	goto	l14143
 10536  00010A                     l2121:
 10537                           
 10538                           ; BSR set to: 1
 10539                           ;lorawan.c: 1146: else
 10540                           ;lorawan.c: 1147: {
 10541                           ;lorawan.c: 1148: temp = 0;
 10542  00010A  6B71               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10543  00010C                     l14143:
 10544                           
 10545                           ; BSR set to: 1
 10546  00010C  5171               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10547  00010E  E1DF               	bnz	l14137
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;lorawan.c: 1149: }
 10551                           ;lorawan.c: 1150: }
 10552                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10553  000110  0E42               	movlw	low (_loRa+66)
 10554  000112  0100               	movlb	0	; () banked
 10555  000114  6FCA               	movwf	ComputeMic@key& (0+255),b
 10556  000116  0E02               	movlw	high (_loRa+66)
 10557  000118  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 10558  00011A  C166  F0CC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10559  00011E  C167  F0CD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10560  000122  0101               	movlb	1	; () banked
 10561  000124  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10562  000126  0FFC               	addlw	252
 10563  000128  0100               	movlb	0	; () banked
 10564  00012A  6FCE               	movwf	ComputeMic@bufferLength& (0+255),b
 10565  00012C  EC56  F034         	call	_ComputeMic	;wreg free
 10566  000130  C0CA  F174         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10567  000134  C0CB  F175         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10568  000138  C0CC  F176         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10569  00013C  C0CD  F177         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10573  000140  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10574  000144  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10575  000148  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10576  00014C  EC41  F036         	call	_ExtractMic	;wreg free
 10577  000150  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10578  000154  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10579  000158  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10580  00015C  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10584  000160  0101               	movlb	1	; () banked
 10585  000162  5174               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10586  000164  196C               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10587  000166  E109               	bnz	u15870
 10588  000168  5175               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10589  00016A  196D               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10590  00016C  E106               	bnz	u15870
 10591  00016E  5176               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10592  000170  196E               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10593  000172  E103               	bnz	u15870
 10594  000174  5177               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10595  000176  196F               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10596  000178  E011               	bz	l14161
 10597  00017A                     u15870:
 10598                           
 10599                           ; BSR set to: 1
 10600                           ;lorawan.c: 1156: {
 10601                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10602  00017A  0102               	movlb	2	; () banked
 10603  00017C  5102               	movf	(_loRa+2)& (0+255),w,b
 10604  00017E  0B0F               	andlw	15
 10605  000180  0A05               	xorlw	5
 10606  000182  E102 EF68  F039    	bz	_SetJoinFailState
 10607                           
 10608                           ; BSR set to: 2
 10609  000188  5102               	movf	(_loRa+2)& (0+255),w,b
 10610  00018A  0B0F               	andlw	15
 10611  00018C  0A03               	xorlw	3
 10612  00018E  A4D8               	btfss	status,2,c
 10613  000190  0012               	return	
 10614                           
 10615                           ; BSR set to: 2
 10616  000192  51F1               	movf	(_loRa+241)& (0+255),w,b
 10617  000194  B4D8               	btfsc	status,2,c
 10618  000196  0012               	return	
 10619                           
 10620                           ; BSR set to: 2
 10621                           ;lorawan.c: 1158: {
 10622                           ;lorawan.c: 1159: SetJoinFailState();
 10623  000198  EF68  F039         	goto	_SetJoinFailState	;wreg free
 10624  00019C                     l14161:
 10625                           
 10626                           ; BSR set to: 1
 10627                           ;lorawan.c: 1163: }
 10628                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10629  00019C  0102               	movlb	2	; () banked
 10630  00019E  5102               	movf	(_loRa+2)& (0+255),w,b
 10631  0001A0  0B0F               	andlw	15
 10632  0001A2  0A03               	xorlw	3
 10633  0001A4  E103               	bnz	l14165
 10634                           
 10635                           ; BSR set to: 2
 10636                           ;lorawan.c: 1167: {
 10637                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10638  0001A6  51E3               	movf	(_loRa+227)& (0+255),w,b
 10639  0001A8  EC59  F03A         	call	_SwTimerStop
 10640  0001AC                     l14165:
 10641                           
 10642                           ;lorawan.c: 1169: }
 10643                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10644                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10645  0001AC  C166  F178         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10646  0001B0  C167  F179         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10647                           
 10648                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10649  0001B4  0101               	movlb	1	; () banked
 10650  0001B6  EE20 F007          	lfsr	2,7
 10651  0001BA  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10652  0001BC  26D9               	addwf	fsr2l,f,c
 10653  0001BE  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10654  0001C0  22DA               	addwfc	fsr2h,f,c
 10655  0001C2  CFDE F21E          	movff	postinc2,_loRa+30
 10656  0001C6  CFDE F21F          	movff	postinc2,_loRa+31
 10657  0001CA  CFDE F220          	movff	postinc2,_loRa+32
 10658  0001CE  CFDE F221          	movff	postinc2,_loRa+33
 10659                           
 10660                           ; BSR set to: 1
 10661                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10662  0001D2  EE20 F00C          	lfsr	2,12
 10663  0001D6  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10664  0001D8  26D9               	addwf	fsr2l,f,c
 10665  0001DA  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10666  0001DC  22DA               	addwfc	fsr2h,f,c
 10667  0001DE  50DF               	movf	indf2,w,c
 10668  0001E0  0B0F               	andlw	15
 10669  0001E2  EC6A  F035         	call	_UpdateReceiveDelays
 10670                           
 10671                           ; BSR set to: 2
 10672                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10673  0001E6  0101               	movlb	1	; () banked
 10674  0001E8  EE20 F00B          	lfsr	2,11
 10675  0001EC  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10676  0001EE  26D9               	addwf	fsr2l,f,c
 10677  0001F0  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10678  0001F2  22DA               	addwfc	fsr2h,f,c
 10679  0001F4  38DF               	swapf	223,w,c
 10680  0001F6  0B07               	andlw	7
 10681  0001F8  0100               	movlb	0	; () banked
 10682  0001FA  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10683  0001FC  0101               	movlb	1	; () banked
 10684  0001FE  EE20 F00B          	lfsr	2,11
 10685  000202  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10686  000204  26D9               	addwf	fsr2l,f,c
 10687  000206  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10688  000208  22DA               	addwfc	fsr2h,f,c
 10689  00020A  50DF               	movf	223,w,c
 10690  00020C  0B0F               	andlw	15
 10691  00020E  ECBB  F03A         	call	_UpdateDLSettings
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10695  000212  C178  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10696  000216  C179  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10697  00021A  0101               	movlb	1	; () banked
 10698  00021C  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10699  00021E  ECCA  F018         	call	_UpdateCfList
 10700                           
 10701                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10702  000222  C178  F094         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10703  000226  C179  F095         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10704  00022A  EC13  F02F         	call	_ComputeSessionKeys	;wreg free
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10708  00022E  6AE6               	clrf	postinc1,c
 10709  000230  EC83  F022         	call	_UpdateJoinSuccessState	;wreg free
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10713  000234  0102               	movlb	2	; () banked
 10714  000236  6B06               	clrf	(_loRa+6)& (0+255),b
 10715  000238  6B07               	clrf	(_loRa+7)& (0+255),b
 10716  00023A  6B08               	clrf	(_loRa+8)& (0+255),b
 10717  00023C  6B09               	clrf	(_loRa+9)& (0+255),b
 10718                           
 10719                           ; BSR set to: 2
 10720                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10721  00023E  6B0A               	clrf	(_loRa+10)& (0+255),b
 10722  000240  6B0B               	clrf	(_loRa+11)& (0+255),b
 10723  000242  6B0C               	clrf	(_loRa+12)& (0+255),b
 10724  000244  6B0D               	clrf	(_loRa+13)& (0+255),b
 10725  000246  0012               	return	
 10726  000248                     l14187:
 10727                           
 10728                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10729  000248  0101               	movlb	1	; () banked
 10730  00024A  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10731  00024C  32E8               	rrcf	wreg,f,c
 10732  00024E  0B07               	andlw	7
 10733  000250  0A03               	xorlw	3
 10734  000252  E007               	bz	l2133
 10735                           
 10736                           ; BSR set to: 1
 10737  000254  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10738  000256  32E8               	rrcf	wreg,f,c
 10739  000258  0B07               	andlw	7
 10740  00025A  0A05               	xorlw	5
 10741  00025C  E002 EF89  F031    	bnz	_SetReceptionNotOkState
 10742  000262                     l2133:
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;lorawan.c: 1192: {
 10746                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10747  000262  0102               	movlb	2	; () banked
 10748  000264  6BA7               	clrf	(_loRa+167)& (0+255),b
 10749                           
 10750                           ; BSR set to: 2
 10751                           ;lorawan.c: 1195: Hdr_t *hdr;
 10752                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10753  000266  C166  F17B         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10754  00026A  C167  F17C         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10755                           
 10756                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10757  00026E  0E02               	movlw	2
 10758  000270  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10759  000272  E001 D183          	bnz	l14305
 10760                           
 10761                           ; BSR set to: 2
 10762  000276  0101               	movlb	1	; () banked
 10763  000278  EE20 F001          	lfsr	2,1
 10764  00027C  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10765  00027E  26D9               	addwf	fsr2l,f,c
 10766  000280  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10767  000282  22DA               	addwfc	fsr2h,f,c
 10768  000284  0102               	movlb	2	; () banked
 10769  000286  5162               	movf	(_loRa+98)& (0+255),w,b
 10770  000288  18DE               	xorwf	postinc2,w,c
 10771  00028A  E109               	bnz	u15951
 10772  00028C  5163               	movf	(_loRa+99)& (0+255),w,b
 10773  00028E  18DE               	xorwf	postinc2,w,c
 10774  000290  E106               	bnz	u15951
 10775  000292  5164               	movf	(_loRa+100)& (0+255),w,b
 10776  000294  18DE               	xorwf	postinc2,w,c
 10777  000296  E103               	bnz	u15951
 10778  000298  5165               	movf	(_loRa+101)& (0+255),w,b
 10779  00029A  18DE               	xorwf	postinc2,w,c
 10780  00029C  A4D8               	btfss	status,2,c
 10781  00029E                     u15951:
 10782  00029E  D16E               	goto	l14305
 10783                           
 10784                           ; BSR set to: 2
 10785  0002A0  A504               	btfss	(_loRa+4)& (0+255),2,b
 10786  0002A2  D16C               	goto	l14305
 10787                           
 10788                           ; BSR set to: 2
 10789                           ;lorawan.c: 1200: {
 10790                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10791  0002A4  C17B  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10792  0002A8  C17C  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10793  0002AC  EC48  F030         	call	_CheckMcastFlags	;wreg free
 10794  0002B0  0900               	iorlw	0
 10795  0002B2  E107               	bnz	l14205
 10796  0002B4                     l14199:
 10797                           
 10798                           ;lorawan.c: 1203: {
 10799                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10800  0002B4  0102               	movlb	2	; () banked
 10801  0002B6  5102               	movf	(_loRa+2)& (0+255),w,b
 10802  0002B8  0BF0               	andlw	-16
 10803  0002BA  0909               	iorlw	9
 10804  0002BC  6F02               	movwf	(_loRa+2)& (0+255),b
 10805                           
 10806                           ; BSR set to: 2
 10807                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10808  0002BE  EF86  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10809  0002C2                     l14205:
 10810                           
 10811                           ;lorawan.c: 1207: }
 10812                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10813  0002C2  0101               	movlb	1	; () banked
 10814  0002C4  EE20 F006          	lfsr	2,6
 10815  0002C8  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10816  0002CA  26D9               	addwf	fsr2l,f,c
 10817  0002CC  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10818  0002CE  22DA               	addwfc	fsr2h,f,c
 10819  0002D0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10820  0002D4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10821  0002D8  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10822  0002DC  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10823  0002E0  0100               	movlb	0	; () banked
 10824  0002E2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10825  0002E4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10826  0002E6  0101               	movlb	1	; () banked
 10827  0002E8  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10828  0002EA  0FFC               	addlw	252
 10829  0002EC  0100               	movlb	0	; () banked
 10830  0002EE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10831  0002F0  0E49               	movlw	73
 10832  0002F2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10833  0002F4  0E01               	movlw	1
 10834  0002F6  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10835  0002F8  EC22  F02C         	call	_AssembleEncryptionBlock
 10836                           
 10837                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10838  0002FC  0EEF               	movlw	low _radioBuffer
 10839  0002FE  6F64               	movwf	memcpy@d1& (0+255),b
 10840  000300  0E05               	movlw	high _radioBuffer
 10841  000302  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10842  000304  0EB4               	movlw	low _aesBuffer
 10843  000306  6F66               	movwf	memcpy@s1& (0+255),b
 10844  000308  0E01               	movlw	high _aesBuffer
 10845  00030A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10846  00030C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10847  00030E  0E10               	movlw	16
 10848  000310  6F68               	movwf	memcpy@n& (0+255),b
 10849  000312  EC01  F034         	call	_memcpy	;wreg free
 10850                           
 10851                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10852  000316  0EFF               	movlw	low (_radioBuffer+16)
 10853  000318  6F64               	movwf	memcpy@d1& (0+255),b
 10854  00031A  0E05               	movlw	high (_radioBuffer+16)
 10855  00031C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10856  00031E  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10857  000322  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10858  000326  0EFC               	movlw	252
 10859  000328  0101               	movlb	1	; () banked
 10860  00032A  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10861  00032C  0100               	movlb	0	; () banked
 10862  00032E  6F68               	movwf	memcpy@n& (0+255),b
 10863  000330  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10864  000332  0EFF               	movlw	255
 10865  000334  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10866  000336  EC01  F034         	call	_memcpy	;wreg free
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10870  00033A  0E66               	movlw	low (_loRa+102)
 10871  00033C  6FBC               	movwf	AESCmac@key& (0+255),b
 10872  00033E  0E02               	movlw	high (_loRa+102)
 10873  000340  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 10874  000342  0EB4               	movlw	low _aesBuffer
 10875  000344  6FBE               	movwf	AESCmac@output& (0+255),b
 10876  000346  0E01               	movlw	high _aesBuffer
 10877  000348  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 10878  00034A  0EEF               	movlw	low _radioBuffer
 10879  00034C  6FC0               	movwf	AESCmac@input& (0+255),b
 10880  00034E  0E05               	movlw	high _radioBuffer
 10881  000350  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 10882  000352  0101               	movlb	1	; () banked
 10883  000354  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10884  000356  0F0C               	addlw	12
 10885  000358  0100               	movlb	0	; () banked
 10886  00035A  6FC2               	movwf	AESCmac@size& (0+255),b
 10887  00035C  ECFD  F00B         	call	_AESCmac	;wreg free
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10891  000360  0E74               	movlw	low LORAWAN_RxDone@computedMic
 10892  000362  6F64               	movwf	memcpy@d1& (0+255),b
 10893  000364  0E01               	movlw	high LORAWAN_RxDone@computedMic
 10894  000366  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10895  000368  0EB4               	movlw	low _aesBuffer
 10896  00036A  6F66               	movwf	memcpy@s1& (0+255),b
 10897  00036C  0E01               	movlw	high _aesBuffer
 10898  00036E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10899  000370  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10900  000372  0E04               	movlw	4
 10901  000374  6F68               	movwf	memcpy@n& (0+255),b
 10902  000376  EC01  F034         	call	_memcpy	;wreg free
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10906  00037A  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10907  00037E  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10908  000382  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10909  000386  EC41  F036         	call	_ExtractMic	;wreg free
 10910  00038A  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10911  00038E  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10912  000392  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10913  000396  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10914                           
 10915                           ; BSR set to: 0
 10916                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10917  00039A  0101               	movlb	1	; () banked
 10918  00039C  516C               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10919  00039E  1974               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10920  0003A0  E189               	bnz	l14199
 10921  0003A2  516D               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10922  0003A4  1975               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10923  0003A6  E186               	bnz	l14199
 10924  0003A8  516E               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10925  0003AA  1976               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10926  0003AC  E183               	bnz	l14199
 10927  0003AE  516F               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10928  0003B0  1977               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10929  0003B2  E180               	bnz	l14199
 10930                           
 10931                           ; BSR set to: 1
 10932                           ;lorawan.c: 1222: }
 10933                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10934  0003B4  EE20 F006          	lfsr	2,6
 10935  0003B8  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10936  0003BA  26D9               	addwf	fsr2l,f,c
 10937  0003BC  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10938  0003BE  22DA               	addwfc	fsr2h,f,c
 10939  0003C0  0102               	movlb	2	; () banked
 10940  0003C2  510E               	movf	(_loRa+14)& (0+255),w,b
 10941  0003C4  5CDE               	subwf	postinc2,w,c
 10942  0003C6  510F               	movf	(_loRa+15)& (0+255),w,b
 10943  0003C8  58DE               	subwfb	postinc2,w,c
 10944  0003CA  E334               	bnc	l14239
 10945                           
 10946                           ; BSR set to: 2
 10947                           ;lorawan.c: 1225: {
 10948                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10949  0003CC  0101               	movlb	1	; () banked
 10950  0003CE  EE20 F006          	lfsr	2,6
 10951  0003D2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10952  0003D4  26D9               	addwf	fsr2l,f,c
 10953  0003D6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10954  0003D8  22DA               	addwfc	fsr2h,f,c
 10955  0003DA  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10956  0003DE  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10957  0003E2  0102               	movlb	2	; () banked
 10958  0003E4  510E               	movf	(_loRa+14)& (0+255),w,b
 10959  0003E6  0100               	movlb	0	; () banked
 10960  0003E8  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10961  0003EA  0102               	movlb	2	; () banked
 10962  0003EC  510F               	movf	(_loRa+15)& (0+255),w,b
 10963  0003EE  0100               	movlb	0	; () banked
 10964  0003F0  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10965  0003F2  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10966  0003F4  0102               	movlb	2	; () banked
 10967  0003F6  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10968  0003F8  0100               	movlb	0	; () banked
 10969  0003FA  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10970  0003FC  0102               	movlb	2	; () banked
 10971  0003FE  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10972  000400  E20D               	bc	l14237
 10973  000402                     l14225:
 10974                           
 10975                           ; BSR set to: 2
 10976                           ;lorawan.c: 1227: {
 10977                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10978  000402  0100               	movlb	0	; () banked
 10979  000404  51E8               	movf	_rxPayload& (0+255),w,b
 10980  000406  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10981  000408  E101 D754          	bz	l14199
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;lorawan.c: 1229: {
 10985                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10986  00040C  6B64               	clrf	RxDataDone@pData& (0+255),b
 10987  00040E  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10988  000410  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10989  000412  0E05               	movlw	5
 10990  000414  6F67               	movwf	RxDataDone@status& (0+255),b
 10991  000416  D801               	call	u16028
 10992  000418  D74D               	goto	l14199
 10993  00041A                     u16028:
 10994  00041A  D0A7               	goto	u16128
 10995  00041C                     l14237:
 10996                           
 10997                           ; BSR set to: 2
 10998                           ;lorawan.c: 1237: else
 10999                           ;lorawan.c: 1238: {
 11000                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11001  00041C  0101               	movlb	1	; () banked
 11002  00041E  EE20 F006          	lfsr	2,6
 11003  000422  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11004  000424  26D9               	addwf	fsr2l,f,c
 11005  000426  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11006  000428  22DA               	addwfc	fsr2h,f,c
 11007  00042A  CFDE F20E          	movff	postinc2,_loRa+14
 11008  00042E  CFDD F20F          	movff	postdec2,_loRa+15
 11009  000432  D013               	goto	l14257
 11010  000434                     l14239:
 11011                           
 11012                           ; BSR set to: 2
 11013                           ;lorawan.c: 1242: else
 11014                           ;lorawan.c: 1243: {
 11015                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11016  000434  0101               	movlb	1	; () banked
 11017  000436  EE20 F006          	lfsr	2,6
 11018  00043A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11019  00043C  26D9               	addwf	fsr2l,f,c
 11020  00043E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11021  000440  22DA               	addwfc	fsr2h,f,c
 11022  000442  50DE               	movf	postinc2,w,c
 11023  000444  10DE               	iorwf	postinc2,w,c
 11024  000446  E1DD               	bnz	l14225
 11025                           
 11026                           ; BSR set to: 1
 11027  000448  0102               	movlb	2	; () banked
 11028  00044A  290E               	incf	(_loRa+14)& (0+255),w,b
 11029  00044C  E1DA               	bnz	l14225
 11030  00044E  290F               	incf	(_loRa+15)& (0+255),w,b
 11031  000450  E1D8               	bnz	l14225
 11032                           
 11033                           ; BSR set to: 2
 11034                           ;lorawan.c: 1245: {
 11035                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11036  000452  6B0E               	clrf	(_loRa+14)& (0+255),b
 11037  000454  6B0F               	clrf	(_loRa+15)& (0+255),b
 11038                           
 11039                           ; BSR set to: 2
 11040                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11041  000456  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11042  000458  2B11               	incf	(_loRa+17)& (0+255),f,b
 11043  00045A                     l14257:
 11044                           
 11045                           ;lorawan.c: 1259: }
 11046                           ;lorawan.c: 1260: }
 11047                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11048  00045A  0102               	movlb	2	; () banked
 11049  00045C  290E               	incf	(_loRa+14)& (0+255),w,b
 11050  00045E  E107               	bnz	l14269
 11051  000460  290F               	incf	(_loRa+15)& (0+255),w,b
 11052  000462  E105               	bnz	l14269
 11053  000464  2910               	incf	(_loRa+16)& (0+255),w,b
 11054  000466  E103               	bnz	l14269
 11055  000468  2911               	incf	(_loRa+17)& (0+255),w,b
 11056  00046A  E101               	bnz	l14269
 11057  00046C  D7CA               	goto	l14225
 11058  00046E                     l14269:
 11059                           
 11060                           ; BSR set to: 2
 11061                           ;lorawan.c: 1272: }
 11062                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11063  00046E  5102               	movf	(_loRa+2)& (0+255),w,b
 11064  000470  0B0F               	andlw	15
 11065  000472  0A08               	xorlw	8
 11066  000474  E108               	bnz	l14273
 11067                           
 11068                           ; BSR set to: 2
 11069                           ;lorawan.c: 1275: {
 11070                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11071  000476  51E4               	movf	(_loRa+228)& (0+255),w,b
 11072  000478  EC59  F03A         	call	_SwTimerStop
 11073                           
 11074                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11075  00047C  0102               	movlb	2	; () banked
 11076  00047E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11077  000480  EC59  F03A         	call	_SwTimerStop
 11078                           
 11079                           ;lorawan.c: 1278: }
 11080  000484  D007               	goto	l14277
 11081  000486                     l14273:
 11082                           
 11083                           ; BSR set to: 2
 11084                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11085  000486  5102               	movf	(_loRa+2)& (0+255),w,b
 11086  000488  0B0F               	andlw	15
 11087  00048A  0A03               	xorlw	3
 11088  00048C  E103               	bnz	l14277
 11089                           
 11090                           ; BSR set to: 2
 11091                           ;lorawan.c: 1280: {
 11092                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11093  00048E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11094  000490  EC59  F03A         	call	_SwTimerStop
 11095  000494                     l14277:
 11096                           
 11097                           ;lorawan.c: 1282: }
 11098                           ;lorawan.c: 1284: buffer = buffer + 8;
 11099  000494  0E08               	movlw	8
 11100  000496  0101               	movlb	1	; () banked
 11101  000498  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11102  00049A  0E00               	movlw	0
 11103  00049C  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11104                           
 11105                           ; BSR set to: 1
 11106                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11107  00049E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11108  0004A0  0100               	movlb	0	; () banked
 11109  0004A2  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11110  0004A4  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11111  0004A6  0101               	movlb	1	; () banked
 11112  0004A8  EE20 F005          	lfsr	2,5
 11113  0004AC  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11114  0004AE  26D9               	addwf	fsr2l,f,c
 11115  0004B0  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11116  0004B2  22DA               	addwfc	fsr2h,f,c
 11117  0004B4  50DF               	movf	223,w,c
 11118  0004B6  0B0F               	andlw	15
 11119  0004B8  0100               	movlb	0	; () banked
 11120  0004BA  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11121  0004BC  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11122  0004BE  0E0C               	movlw	12
 11123  0004C0  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11124  0004C2  0E00               	movlw	0
 11125  0004C4  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11126  0004C6  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11127  0004C8  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11128  0004CA  E103               	bnz	u16100
 11129  0004CC  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11130  0004CE  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11131  0004D0  E035               	bz	l2150
 11132  0004D2                     u16100:
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;lorawan.c: 1287: {
 11136                           ;lorawan.c: 1288: fPort = *(buffer++);
 11137  0004D2  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11138  0004D6  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11139  0004DA  50DF               	movf	indf2,w,c
 11140  0004DC  0101               	movlb	1	; () banked
 11141  0004DE  6F69               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11142                           
 11143                           ; BSR set to: 1
 11144  0004E0  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11145  0004E2  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11146                           
 11147                           ; BSR set to: 1
 11148                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11149  0004E4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11150  0004E6  0FF4               	addlw	244
 11151  0004E8  6F7A               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11152                           
 11153                           ; BSR set to: 1
 11154                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11155  0004EA  0E19               	movlw	25
 11156  0004EC  6F70               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11157                           
 11158                           ; BSR set to: 1
 11159                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11160  0004EE  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11161  0004F2  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11162  0004F6  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11163  0004F8  0100               	movlb	0	; () banked
 11164  0004FA  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11165  0004FC  0E01               	movlw	1
 11166  0004FE  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11167  000500  C20E  F098         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11168  000504  C20F  F099         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11169  000508  C210  F09A         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11170  00050C  C211  F09B         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11171  000510  0E76               	movlw	low (_loRa+118)
 11172  000512  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11173  000514  0E02               	movlw	high (_loRa+118)
 11174  000516  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11175  000518  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11176  00051C  0EEF               	movlw	low _radioBuffer
 11177  00051E  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11178  000520  0E05               	movlw	high _radioBuffer
 11179  000522  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11180  000524  0E01               	movlw	1
 11181  000526  6FA1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11182  000528  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;lorawan.c: 1294: packet = buffer - 1;
 11186  00052C  0EFF               	movlw	255
 11187  00052E  0101               	movlb	1	; () banked
 11188  000530  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11189  000532  6F72               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11190  000534  0EFF               	movlw	255
 11191  000536  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11192  000538  6F73               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11193                           
 11194                           ;lorawan.c: 1295: }
 11195  00053A  D004               	goto	l2151
 11196  00053C                     l2150:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;lorawan.c: 1296: else
 11200                           ;lorawan.c: 1297: {
 11201                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11202  00053C  0101               	movlb	1	; () banked
 11203  00053E  6B7A               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11204                           
 11205                           ;lorawan.c: 1299: packet = (0);
 11206  000540  6B72               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11207  000542  6B73               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11208  000544                     l2151:
 11209                           
 11210                           ; BSR set to: 1
 11211                           ;lorawan.c: 1300: }
 11212                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11213  000544  0102               	movlb	2	; () banked
 11214  000546  8303               	bsf	(_loRa+3)& (0+255),1,b
 11215                           
 11216                           ; BSR set to: 2
 11217                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11218  000548  0EF0               	movlw	-16
 11219  00054A  1702               	andwf	(_loRa+2)& (0+255),f,b
 11220                           
 11221                           ; BSR set to: 2
 11222                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11223  00054C  0100               	movlb	0	; () banked
 11224  00054E  51E8               	movf	_rxPayload& (0+255),w,b
 11225  000550  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11226  000552  E101 D6AF          	bz	l14199
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;lorawan.c: 1306: {
 11230                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11231  000556  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11232  00055A  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11233  00055E  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11234  000562  0E01               	movlw	1
 11235  000564  6F67               	movwf	RxDataDone@status& (0+255),b
 11236  000566  D801               	call	u16128
 11237  000568  D6A5               	goto	l14199
 11238  00056A                     u16128:
 11239  00056A  0005               	push	
 11240  00056C  6EFA               	movwf	pclath,c
 11241  00056E  51E8               	movf	_rxPayload& (0+255),w,b
 11242  000570  6EFD               	movwf	tosl,c
 11243  000572  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11244  000574  6EFE               	movwf	tosh,c
 11245  000576  6AFF               	clrf	tosu,c
 11246  000578  50FA               	movf	pclath,w,c
 11247  00057A  0012               	return		;indir
 11248  00057C                     l14305:
 11249                           
 11250                           ; BSR set to: 2
 11251                           ;lorawan.c: 1313: }
 11252                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11253  00057C  0101               	movlb	1	; () banked
 11254  00057E  EE20 F001          	lfsr	2,1
 11255  000582  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11256  000584  26D9               	addwf	fsr2l,f,c
 11257  000586  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11258  000588  22DA               	addwfc	fsr2h,f,c
 11259  00058A  0102               	movlb	2	; () banked
 11260  00058C  511E               	movf	(_loRa+30)& (0+255),w,b
 11261  00058E  18DE               	xorwf	postinc2,w,c
 11262  000590  E109               	bnz	u16130
 11263  000592  511F               	movf	(_loRa+31)& (0+255),w,b
 11264  000594  18DE               	xorwf	postinc2,w,c
 11265  000596  E106               	bnz	u16130
 11266  000598  5120               	movf	(_loRa+32)& (0+255),w,b
 11267  00059A  18DE               	xorwf	postinc2,w,c
 11268  00059C  E103               	bnz	u16130
 11269  00059E  5121               	movf	(_loRa+33)& (0+255),w,b
 11270  0005A0  18DE               	xorwf	postinc2,w,c
 11271  0005A2  E008               	bz	l14317
 11272  0005A4                     u16130:
 11273                           
 11274                           ; BSR set to: 2
 11275                           ;lorawan.c: 1317: {
 11276                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11277  0005A4  EC89  F031         	call	_SetReceptionNotOkState	;wreg free
 11278  0005A8                     l14309:
 11279                           
 11280                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11281  0005A8  0E02               	movlw	2
 11282  0005AA  0102               	movlb	2	; () banked
 11283  0005AC                     L5:
 11284  0005AC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11285  0005AE  E101 D681          	bz	l14199
 11286  0005B2  0012               	return	
 11287  0005B4                     l14317:
 11288                           
 11289                           ; BSR set to: 2
 11290                           ;lorawan.c: 1325: }
 11291                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11292  0005B4  0101               	movlb	1	; () banked
 11293  0005B6  EE20 F006          	lfsr	2,6
 11294  0005BA  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11295  0005BC  26D9               	addwf	fsr2l,f,c
 11296  0005BE  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11297  0005C0  22DA               	addwfc	fsr2h,f,c
 11298  0005C2  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11299  0005C6  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11300  0005CA  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11301  0005CE  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11302  0005D2  0100               	movlb	0	; () banked
 11303  0005D4  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11304  0005D6  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11305  0005D8  0101               	movlb	1	; () banked
 11306  0005DA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11307  0005DC  0FFC               	addlw	252
 11308  0005DE  0100               	movlb	0	; () banked
 11309  0005E0  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11310  0005E2  0E49               	movlw	73
 11311  0005E4  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11312  0005E6  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11313  0005E8  0E01               	movlw	1
 11314  0005EA  EC22  F02C         	call	_AssembleEncryptionBlock
 11315                           
 11316                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11317  0005EE  0EEF               	movlw	low _radioBuffer
 11318  0005F0  6F64               	movwf	memcpy@d1& (0+255),b
 11319  0005F2  0E05               	movlw	high _radioBuffer
 11320  0005F4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11321  0005F6  0EB4               	movlw	low _aesBuffer
 11322  0005F8  6F66               	movwf	memcpy@s1& (0+255),b
 11323  0005FA  0E01               	movlw	high _aesBuffer
 11324  0005FC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11325  0005FE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11326  000600  0E10               	movlw	16
 11327  000602  6F68               	movwf	memcpy@n& (0+255),b
 11328  000604  EC01  F034         	call	_memcpy	;wreg free
 11329                           
 11330                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11331  000608  0EFF               	movlw	low (_radioBuffer+16)
 11332  00060A  6F64               	movwf	memcpy@d1& (0+255),b
 11333  00060C  0E05               	movlw	high (_radioBuffer+16)
 11334  00060E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11335  000610  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11336  000614  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11337  000618  0EFC               	movlw	252
 11338  00061A  0101               	movlb	1	; () banked
 11339  00061C  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11340  00061E  0100               	movlb	0	; () banked
 11341  000620  6F68               	movwf	memcpy@n& (0+255),b
 11342  000622  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11343  000624  0EFF               	movlw	255
 11344  000626  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11345  000628  EC01  F034         	call	_memcpy	;wreg free
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11349  00062C  0E22               	movlw	low (_loRa+34)
 11350  00062E  6FBC               	movwf	AESCmac@key& (0+255),b
 11351  000630  0E02               	movlw	high (_loRa+34)
 11352  000632  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 11353  000634  0EB4               	movlw	low _aesBuffer
 11354  000636  6FBE               	movwf	AESCmac@output& (0+255),b
 11355  000638  0E01               	movlw	high _aesBuffer
 11356  00063A  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 11357  00063C  0EEF               	movlw	low _radioBuffer
 11358  00063E  6FC0               	movwf	AESCmac@input& (0+255),b
 11359  000640  0E05               	movlw	high _radioBuffer
 11360  000642  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 11361  000644  0101               	movlb	1	; () banked
 11362  000646  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11363  000648  0F0C               	addlw	12
 11364  00064A  0100               	movlb	0	; () banked
 11365  00064C  6FC2               	movwf	AESCmac@size& (0+255),b
 11366  00064E  ECFD  F00B         	call	_AESCmac	;wreg free
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11370  000652  0E74               	movlw	low LORAWAN_RxDone@computedMic
 11371  000654  6F64               	movwf	memcpy@d1& (0+255),b
 11372  000656  0E01               	movlw	high LORAWAN_RxDone@computedMic
 11373  000658  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11374  00065A  0EB4               	movlw	low _aesBuffer
 11375  00065C  6F66               	movwf	memcpy@s1& (0+255),b
 11376  00065E  0E01               	movlw	high _aesBuffer
 11377  000660  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11378  000662  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11379  000664  0E04               	movlw	4
 11380  000666  6F68               	movwf	memcpy@n& (0+255),b
 11381  000668  EC01  F034         	call	_memcpy	;wreg free
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11385  00066C  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11386  000670  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11387  000674  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11388  000678  EC41  F036         	call	_ExtractMic	;wreg free
 11389  00067C  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11390  000680  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11391  000684  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11392  000688  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11396  00068C  0101               	movlb	1	; () banked
 11397  00068E  516C               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11398  000690  1974               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11399  000692  E109               	bnz	u16150
 11400  000694  516D               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11401  000696  1975               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11402  000698  E106               	bnz	u16150
 11403  00069A  516E               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11404  00069C  1976               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11405  00069E  E103               	bnz	u16150
 11406  0006A0  516F               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11407  0006A2  1977               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11408  0006A4  E003               	bz	l14337
 11409  0006A6                     u16150:
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;lorawan.c: 1337: {
 11413                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11414  0006A6  EC89  F031         	call	_SetReceptionNotOkState	;wreg free
 11415  0006AA  D77E               	goto	l14309
 11416  0006AC                     l14337:
 11417                           
 11418                           ; BSR set to: 1
 11419                           ;lorawan.c: 1345: }
 11420                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11421  0006AC  EE20 F006          	lfsr	2,6
 11422  0006B0  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11423  0006B2  26D9               	addwf	fsr2l,f,c
 11424  0006B4  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11425  0006B6  22DA               	addwfc	fsr2h,f,c
 11426  0006B8  0102               	movlb	2	; () banked
 11427  0006BA  510A               	movf	(_loRa+10)& (0+255),w,b
 11428  0006BC  5CDE               	subwf	postinc2,w,c
 11429  0006BE  510B               	movf	(_loRa+11)& (0+255),w,b
 11430  0006C0  58DE               	subwfb	postinc2,w,c
 11431  0006C2  E344               	bnc	l14367
 11432                           
 11433                           ; BSR set to: 2
 11434                           ;lorawan.c: 1349: {
 11435                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11436  0006C4  0101               	movlb	1	; () banked
 11437  0006C6  EE20 F006          	lfsr	2,6
 11438  0006CA  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11439  0006CC  26D9               	addwf	fsr2l,f,c
 11440  0006CE  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11441  0006D0  22DA               	addwfc	fsr2h,f,c
 11442  0006D2  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11443  0006D6  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11444  0006DA  0102               	movlb	2	; () banked
 11445  0006DC  510A               	movf	(_loRa+10)& (0+255),w,b
 11446  0006DE  0100               	movlb	0	; () banked
 11447  0006E0  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11448  0006E2  0102               	movlb	2	; () banked
 11449  0006E4  510B               	movf	(_loRa+11)& (0+255),w,b
 11450  0006E6  0100               	movlb	0	; () banked
 11451  0006E8  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11452  0006EA  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11453  0006EC  0102               	movlb	2	; () banked
 11454  0006EE  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11455  0006F0  0100               	movlb	0	; () banked
 11456  0006F2  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11457  0006F4  0102               	movlb	2	; () banked
 11458  0006F6  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11459  0006F8  E21D               	bc	l14365
 11460                           
 11461                           ; BSR set to: 2
 11462                           ;lorawan.c: 1351: {
 11463                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11464  0006FA  9100               	bcf	_loRa& (0+255),0,b
 11465                           
 11466                           ; BSR set to: 2
 11467                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11468  0006FC  0EF0               	movlw	-16
 11469  0006FE  1702               	andwf	(_loRa+2)& (0+255),f,b
 11470                           
 11471                           ; BSR set to: 2
 11472                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11473  000700  0100               	movlb	0	; () banked
 11474  000702  51E8               	movf	_rxPayload& (0+255),w,b
 11475  000704  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11476  000706  E013               	bz	l14351
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;lorawan.c: 1355: {
 11480                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11481  000708  0102               	movlb	2	; () banked
 11482  00070A  9B00               	bcf	_loRa& (0+255),5,b
 11483                           
 11484                           ; BSR set to: 2
 11485                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11486  00070C  0E00               	movlw	0
 11487  00070E  0100               	movlb	0	; () banked
 11488  000710  6B64               	clrf	RxDataDone@pData& (0+255),b
 11489  000712  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 11490  000714  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 11491  000716  6B67               	clrf	RxDataDone@status& (0+255),b
 11492  000718  D801               	call	u16208
 11493  00071A  D009               	goto	l14351
 11494  00071C                     u16208:
 11495  00071C  0005               	push	
 11496  00071E  6EFA               	movwf	pclath,c
 11497  000720  51E8               	movf	_rxPayload& (0+255),w,b
 11498  000722  6EFD               	movwf	tosl,c
 11499  000724  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11500  000726  6EFE               	movwf	tosh,c
 11501  000728  6AFF               	clrf	tosu,c
 11502  00072A  50FA               	movf	pclath,w,c
 11503  00072C  0012               	return		;indir
 11504  00072E                     l14351:
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;lorawan.c: 1358: }
 11508                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11509  00072E  0102               	movlb	2	; () banked
 11510  000730  9303               	bcf	(_loRa+3)& (0+255),1,b
 11511  000732  D036               	goto	l14387
 11512  000734                     l14365:
 11513                           
 11514                           ; BSR set to: 2
 11515                           ;lorawan.c: 1370: else
 11516                           ;lorawan.c: 1371: {
 11517                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11518  000734  0101               	movlb	1	; () banked
 11519  000736  EE20 F006          	lfsr	2,6
 11520  00073A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11521  00073C  26D9               	addwf	fsr2l,f,c
 11522  00073E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11523  000740  22DA               	addwfc	fsr2h,f,c
 11524  000742  CFDE F20A          	movff	postinc2,_loRa+10
 11525  000746  CFDD F20B          	movff	postdec2,_loRa+11
 11526  00074A  D021               	goto	l14385
 11527  00074C                     l14367:
 11528                           
 11529                           ; BSR set to: 2
 11530                           ;lorawan.c: 1375: else
 11531                           ;lorawan.c: 1376: {
 11532                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11533  00074C  0101               	movlb	1	; () banked
 11534  00074E  EE20 F006          	lfsr	2,6
 11535  000752  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11536  000754  26D9               	addwf	fsr2l,f,c
 11537  000756  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11538  000758  22DA               	addwfc	fsr2h,f,c
 11539  00075A  50DE               	movf	postinc2,w,c
 11540  00075C  10DE               	iorwf	postinc2,w,c
 11541  00075E  E114               	bnz	l14375
 11542                           
 11543                           ; BSR set to: 1
 11544  000760  0102               	movlb	2	; () banked
 11545  000762  290A               	incf	(_loRa+10)& (0+255),w,b
 11546  000764  E111               	bnz	l14375
 11547  000766  290B               	incf	(_loRa+11)& (0+255),w,b
 11548  000768  E10F               	bnz	l14375
 11549                           
 11550                           ; BSR set to: 2
 11551                           ;lorawan.c: 1378: {
 11552                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11553  00076A  0101               	movlb	1	; () banked
 11554  00076C  EE20 F006          	lfsr	2,6
 11555  000770  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11556  000772  26D9               	addwf	fsr2l,f,c
 11557  000774  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11558  000776  22DA               	addwfc	fsr2h,f,c
 11559  000778  CFDE F20A          	movff	postinc2,_loRa+10
 11560  00077C  CFDD F20B          	movff	postdec2,_loRa+11
 11561                           
 11562                           ; BSR set to: 1
 11563                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11564  000780  0102               	movlb	2	; () banked
 11565  000782  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11566  000784  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11567                           
 11568                           ;lorawan.c: 1382: }
 11569  000786  D003               	goto	l14385
 11570  000788                     l14375:
 11571                           
 11572                           ;lorawan.c: 1383: else
 11573                           ;lorawan.c: 1384: {
 11574                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11575  000788  EC89  F031         	call	_SetReceptionNotOkState	;wreg free
 11576  00078C  D70D               	goto	l14309
 11577  00078E                     l14385:
 11578                           
 11579                           ;lorawan.c: 1393: }
 11580                           ;lorawan.c: 1394: }
 11581                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11582  00078E  0102               	movlb	2	; () banked
 11583  000790  290A               	incf	(_loRa+10)& (0+255),w,b
 11584  000792  E109               	bnz	l14397
 11585  000794  290B               	incf	(_loRa+11)& (0+255),w,b
 11586  000796  E107               	bnz	l14397
 11587  000798  290C               	incf	(_loRa+12)& (0+255),w,b
 11588  00079A  E105               	bnz	l14397
 11589  00079C  290D               	incf	(_loRa+13)& (0+255),w,b
 11590  00079E  E103               	bnz	l14397
 11591  0007A0                     l14387:
 11592                           
 11593                           ; BSR set to: 2
 11594                           ;lorawan.c: 1397: {
 11595                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11596  0007A0  8304               	bsf	(_loRa+4)& (0+255),1,b
 11597                           
 11598                           ; BSR set to: 2
 11599                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11600  0007A2  0E02               	movlw	2
 11601  0007A4  D703               	goto	L5
 11602  0007A6                     l14397:
 11603                           
 11604                           ; BSR set to: 2
 11605                           ;lorawan.c: 1407: }
 11606                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11607  0007A6  5102               	movf	(_loRa+2)& (0+255),w,b
 11608  0007A8  0B0F               	andlw	15
 11609  0007AA  0A03               	xorlw	3
 11610  0007AC  E103               	bnz	l14401
 11611                           
 11612                           ; BSR set to: 2
 11613                           ;lorawan.c: 1411: {
 11614                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11615  0007AE  51E5               	movf	(_loRa+229)& (0+255),w,b
 11616  0007B0  EC59  F03A         	call	_SwTimerStop
 11617  0007B4                     l14401:
 11618                           
 11619                           ;lorawan.c: 1413: }
 11620                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11621  0007B4  0E01               	movlw	1
 11622  0007B6  0102               	movlb	2	; () banked
 11623  0007B8  6FD8               	movwf	(_loRa+216)& (0+255),b
 11624                           
 11625                           ; BSR set to: 2
 11626                           ;lorawan.c: 1417: CheckFlags (hdr);
 11627  0007BA  C17B  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11628  0007BE  C17C  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11629  0007C2  EC49  F033         	call	_CheckFlags	;wreg free
 11630                           
 11631                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11632  0007C6  0101               	movlb	1	; () banked
 11633  0007C8  EE20 F005          	lfsr	2,5
 11634  0007CC  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11635  0007CE  26D9               	addwf	fsr2l,f,c
 11636  0007D0  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11637  0007D2  22DA               	addwfc	fsr2h,f,c
 11638  0007D4  50DF               	movf	223,w,c
 11639  0007D6  0B0F               	andlw	15
 11640  0007D8  E01B               	bz	l14409
 11641                           
 11642                           ; BSR set to: 1
 11643                           ;lorawan.c: 1420: {
 11644                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11645  0007DA  0E08               	movlw	8
 11646  0007DC  257B               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11647  0007DE  0100               	movlb	0	; () banked
 11648  0007E0  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11649  0007E2  0E00               	movlw	0
 11650  0007E4  0101               	movlb	1	; () banked
 11651  0007E6  217C               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11652  0007E8  0100               	movlb	0	; () banked
 11653  0007EA  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11654  0007EC  0101               	movlb	1	; () banked
 11655  0007EE  EE20 F005          	lfsr	2,5
 11656  0007F2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11657  0007F4  26D9               	addwf	fsr2l,f,c
 11658  0007F6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11659  0007F8  22DA               	addwfc	fsr2h,f,c
 11660  0007FA  50DF               	movf	223,w,c
 11661  0007FC  0B0F               	andlw	15
 11662  0007FE  0100               	movlb	0	; () banked
 11663  000800  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11664  000802  ECDB  F016         	call	_MacExecuteCommands	;wreg free
 11665  000806  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11666  00080A  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11667                           
 11668                           ;lorawan.c: 1422: }
 11669  00080E  D004               	goto	l14411
 11670  000810                     l14409:
 11671                           
 11672                           ; BSR set to: 1
 11673                           ;lorawan.c: 1423: else
 11674                           ;lorawan.c: 1424: {
 11675                           ;lorawan.c: 1425: buffer = buffer + 8;
 11676  000810  0E08               	movlw	8
 11677  000812  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11678  000814  0E00               	movlw	0
 11679  000816  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11680  000818                     l14411:
 11681                           
 11682                           ;lorawan.c: 1426: }
 11683                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11684  000818  0101               	movlb	1	; () banked
 11685  00081A  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11686  00081C  0100               	movlb	0	; () banked
 11687  00081E  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11688  000820  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11689  000822  0101               	movlb	1	; () banked
 11690  000824  EE20 F005          	lfsr	2,5
 11691  000828  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11692  00082A  26D9               	addwf	fsr2l,f,c
 11693  00082C  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11694  00082E  22DA               	addwfc	fsr2h,f,c
 11695  000830  50DF               	movf	223,w,c
 11696  000832  0B0F               	andlw	15
 11697  000834  0100               	movlb	0	; () banked
 11698  000836  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11699  000838  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11700  00083A  0E0C               	movlw	12
 11701  00083C  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11702  00083E  0E00               	movlw	0
 11703  000840  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11704  000842  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11705  000844  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11706  000846  E104               	bnz	u16290
 11707  000848  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11708  00084A  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11709  00084C  E101 D094          	bz	l2171
 11710  000850                     u16290:
 11711                           
 11712                           ; BSR set to: 0
 11713                           ;lorawan.c: 1428: {
 11714                           ;lorawan.c: 1429: fPort = *(buffer++);
 11715  000850  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11716  000854  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11717  000858  50DF               	movf	indf2,w,c
 11718  00085A  0101               	movlb	1	; () banked
 11719  00085C  6F69               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11720                           
 11721                           ; BSR set to: 1
 11722  00085E  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11723  000860  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11724                           
 11725                           ; BSR set to: 1
 11726                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11727  000862  EE20 F005          	lfsr	2,5
 11728  000866  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11729  000868  26D9               	addwf	fsr2l,f,c
 11730  00086A  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11731  00086C  22DA               	addwfc	fsr2h,f,c
 11732  00086E  50DF               	movf	223,w,c
 11733  000870  0B0F               	andlw	15
 11734  000872  0100               	movlb	0	; () banked
 11735  000874  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11736  000876  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11737  000878  0101               	movlb	1	; () banked
 11738  00087A  5D68               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11739  00087C  0FF4               	addlw	244
 11740  00087E  6F7A               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11741                           
 11742                           ; BSR set to: 1
 11743                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11744  000880  EE20 F005          	lfsr	2,5
 11745  000884  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11746  000886  26D9               	addwf	fsr2l,f,c
 11747  000888  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11748  00088A  22DA               	addwfc	fsr2h,f,c
 11749  00088C  50DF               	movf	223,w,c
 11750  00088E  0B0F               	andlw	15
 11751  000890  0F19               	addlw	25
 11752  000892  6F70               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11753                           
 11754                           ; BSR set to: 1
 11755                           ;lorawan.c: 1434: if (fPort != 0)
 11756  000894  5169               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11757  000896  E026               	bz	l14427
 11758                           
 11759                           ; BSR set to: 1
 11760                           ;lorawan.c: 1435: {
 11761                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11762  000898  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11763  00089C  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11764  0008A0  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11765  0008A2  0100               	movlb	0	; () banked
 11766  0008A4  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11767  0008A6  0E01               	movlw	1
 11768  0008A8  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11769  0008AA  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11770  0008AE  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11771  0008B2  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11772  0008B6  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11773  0008BA  0E32               	movlw	low (_loRa+50)
 11774  0008BC  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11775  0008BE  0E02               	movlw	high (_loRa+50)
 11776  0008C0  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11777  0008C2  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11778  0008C6  0EEF               	movlw	low _radioBuffer
 11779  0008C8  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11780  0008CA  0E05               	movlw	high _radioBuffer
 11781  0008CC  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11782  0008CE  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11783  0008D0  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;lorawan.c: 1437: packet = buffer - 1;
 11787  0008D4  0EFF               	movlw	255
 11788  0008D6  0101               	movlb	1	; () banked
 11789  0008D8  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11790  0008DA  6F72               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11791  0008DC  0EFF               	movlw	255
 11792  0008DE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11793  0008E0  6F73               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11794                           
 11795                           ;lorawan.c: 1438: }
 11796  0008E2  D04E               	goto	l14437
 11797  0008E4                     l14427:
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;lorawan.c: 1439: else
 11801                           ;lorawan.c: 1440: {
 11802                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11803  0008E4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11804  0008E6  0100               	movlb	0	; () banked
 11805  0008E8  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11806  0008EA  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11807  0008EC  0101               	movlb	1	; () banked
 11808  0008EE  EE20 F005          	lfsr	2,5
 11809  0008F2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11810  0008F4  26D9               	addwf	fsr2l,f,c
 11811  0008F6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11812  0008F8  22DA               	addwfc	fsr2h,f,c
 11813  0008FA  50DF               	movf	223,w,c
 11814  0008FC  0B0F               	andlw	15
 11815  0008FE  0100               	movlb	0	; () banked
 11816  000900  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11817  000902  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11818  000904  0E0D               	movlw	13
 11819  000906  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11820  000908  0E00               	movlw	0
 11821  00090A  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11822  00090C  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11823  00090E  5DDF               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11824  000910  51E0               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11825  000912  0A80               	xorlw	128
 11826  000914  6FE1               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11827  000916  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11828  000918  0A80               	xorlw	128
 11829  00091A  59E1               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11830  00091C  E22D               	bc	l2171
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;lorawan.c: 1443: {
 11834                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11835  00091E  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11836  000922  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11837  000926  0101               	movlb	1	; () banked
 11838  000928  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11839  00092A  0100               	movlb	0	; () banked
 11840  00092C  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11841  00092E  0E01               	movlw	1
 11842  000930  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11843  000932  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11844  000936  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11845  00093A  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11846  00093E  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11847  000942  0E22               	movlw	low (_loRa+34)
 11848  000944  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11849  000946  0E02               	movlw	high (_loRa+34)
 11850  000948  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11851  00094A  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11852  00094E  0EEF               	movlw	low _radioBuffer
 11853  000950  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11854  000952  0E05               	movlw	high _radioBuffer
 11855  000954  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11856  000956  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11857  000958  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11861  00095C  C166  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11862  000960  C167  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11863  000964  0101               	movlb	1	; () banked
 11864  000966  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11865  000968  0100               	movlb	0	; () banked
 11866  00096A  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11867  00096C  ECDB  F016         	call	_MacExecuteCommands	;wreg free
 11868  000970  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11869  000974  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11870  000978                     l2171:
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;lorawan.c: 1453: else
 11874                           ;lorawan.c: 1454: {
 11875                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11876  000978  0101               	movlb	1	; () banked
 11877  00097A  6B7A               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11878                           
 11879                           ;lorawan.c: 1456: packet = (0);
 11880  00097C  6B72               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11881  00097E  6B73               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11882  000980                     l14437:
 11883                           
 11884                           ; BSR set to: 1
 11885                           ;lorawan.c: 1457: }
 11886                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11887  000980  0E01               	movlw	1
 11888  000982  0102               	movlb	2	; () banked
 11889  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 11890                           
 11891                           ; BSR set to: 2
 11892                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11893  000986  6BD0               	clrf	(_loRa+208)& (0+255),b
 11894  000988  6BD1               	clrf	(_loRa+209)& (0+255),b
 11895                           
 11896                           ; BSR set to: 2
 11897                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11898  00098A  6BEE               	clrf	(_loRa+238)& (0+255),b
 11899                           
 11900                           ; BSR set to: 2
 11901                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11902  00098C  9900               	bcf	_loRa& (0+255),4,b
 11903                           
 11904                           ; BSR set to: 2
 11905                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11906  00098E  8303               	bsf	(_loRa+3)& (0+255),1,b
 11907                           
 11908                           ; BSR set to: 2
 11909                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11910  000990  A100               	btfss	_loRa& (0+255),0,b
 11911  000992  D04D               	goto	l14481
 11912                           
 11913                           ; BSR set to: 2
 11914                           ;lorawan.c: 1468: {
 11915                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11916  000994  0101               	movlb	1	; () banked
 11917  000996  EE20 F005          	lfsr	2,5
 11918  00099A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11919  00099C  26D9               	addwf	fsr2l,f,c
 11920  00099E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11921  0009A0  22DA               	addwfc	fsr2h,f,c
 11922  0009A2  AADF               	btfss	indf2,5,c
 11923  0009A4  D041               	goto	l14479
 11924                           
 11925                           ; BSR set to: 1
 11926                           ;lorawan.c: 1470: {
 11927                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11928  0009A6  0102               	movlb	2	; () banked
 11929  0009A8  9100               	bcf	_loRa& (0+255),0,b
 11930                           
 11931                           ; BSR set to: 2
 11932                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11933  0009AA  0EF0               	movlw	-16
 11934  0009AC  1702               	andwf	(_loRa+2)& (0+255),f,b
 11935                           
 11936                           ; BSR set to: 2
 11937                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11938  0009AE  0100               	movlb	0	; () banked
 11939  0009B0  51E8               	movf	_rxPayload& (0+255),w,b
 11940  0009B2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11941  0009B4  E016               	bz	l14461
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;lorawan.c: 1474: {
 11945                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11946  0009B6  0102               	movlb	2	; () banked
 11947  0009B8  9B00               	bcf	_loRa& (0+255),5,b
 11948                           
 11949                           ; BSR set to: 2
 11950                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11951  0009BA  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11952  0009BE  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11953  0009C2  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11954  0009C6  0E01               	movlw	1
 11955  0009C8  0100               	movlb	0	; () banked
 11956  0009CA  6F67               	movwf	RxDataDone@status& (0+255),b
 11957  0009CC  D801               	call	u16358
 11958  0009CE  D009               	goto	l14461
 11959  0009D0                     u16358:
 11960  0009D0  0005               	push	
 11961  0009D2  6EFA               	movwf	pclath,c
 11962  0009D4  51E8               	movf	_rxPayload& (0+255),w,b
 11963  0009D6  6EFD               	movwf	tosl,c
 11964  0009D8  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11965  0009DA  6EFE               	movwf	tosh,c
 11966  0009DC  6AFF               	clrf	tosu,c
 11967  0009DE  50FA               	movf	pclath,w,c
 11968  0009E0  0012               	return		;indir
 11969  0009E2                     l14461:
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;lorawan.c: 1477: }
 11973                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11974  0009E2  0102               	movlb	2	; () banked
 11975  0009E4  9303               	bcf	(_loRa+3)& (0+255),1,b
 11976                           
 11977                           ; BSR set to: 2
 11978                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11979  0009E6  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11980                           
 11981                           ; BSR set to: 2
 11982  0009E8  BB00               	btfsc	_loRa& (0+255),5,b
 11983  0009EA  D5DE               	goto	l14309
 11984                           
 11985                           ; BSR set to: 2
 11986  0009EC  B300               	btfsc	_loRa& (0+255),1,b
 11987  0009EE  D002               	goto	l14471
 11988                           
 11989                           ; BSR set to: 2
 11990  0009F0  A700               	btfss	_loRa& (0+255),3,b
 11991  0009F2  D5DA               	goto	l14309
 11992  0009F4                     l14471:
 11993                           
 11994                           ; BSR set to: 2
 11995                           ;lorawan.c: 1480: {
 11996                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11997  0009F4  0E01               	movlw	1
 11998  0009F6  0100               	movlb	0	; () banked
 11999  0009F8  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12000  0009FA  0E6A               	movlw	low LORAWAN_RxDone@channelIndex
 12001  0009FC  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12002  0009FE  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 12003  000A00  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12004  000A02  0102               	movlb	2	; () banked
 12005  000A04  51ED               	movf	(_loRa+237)& (0+255),w,b
 12006  000A06  EC81  F027         	call	_SearchAvailableChannel
 12007  000A0A  0900               	iorlw	0
 12008  000A0C  E10A               	bnz	l14477
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;lorawan.c: 1482: {
 12012                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12013  000A0E  0E00               	movlw	0
 12014  000A10  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12015  000A12  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12016  000A14  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12017  000A16  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12018  000A18  ECFE  F029         	call	_LORAWAN_Send
 12019  000A1C                     l14475:
 12020                           
 12021                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12022  000A1C  0102               	movlb	2	; () banked
 12023  000A1E  9700               	bcf	_loRa& (0+255),3,b
 12024                           
 12025                           ;lorawan.c: 1485: }
 12026  000A20  D5C3               	goto	l14309
 12027  000A22                     l14477:
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;lorawan.c: 1486: else
 12031                           ;lorawan.c: 1487: {
 12032                           ;lorawan.c: 1489: StartReTxTimer();
 12033  000A22  ECE9  F021         	call	_StartReTxTimer	;wreg free
 12034  000A26  D5C0               	goto	l14309
 12035  000A28                     l14479:
 12036                           
 12037                           ; BSR set to: 1
 12038                           ;lorawan.c: 1494: else
 12039                           ;lorawan.c: 1495: {
 12040                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12041  000A28  ECB9  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12042  000A2C  D5BD               	goto	l14309
 12043  000A2E                     l14481:
 12044                           
 12045                           ; BSR set to: 2
 12046                           ;lorawan.c: 1499: else
 12047                           ;lorawan.c: 1500: {
 12048                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12049  000A2E  0EF0               	movlw	-16
 12050  000A30  1702               	andwf	(_loRa+2)& (0+255),f,b
 12051                           
 12052                           ; BSR set to: 2
 12053                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12054  000A32  0100               	movlb	0	; () banked
 12055  000A34  51E8               	movf	_rxPayload& (0+255),w,b
 12056  000A36  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12057  000A38  E016               	bz	l14489
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;lorawan.c: 1504: {
 12061                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12062  000A3A  0102               	movlb	2	; () banked
 12063  000A3C  9B00               	bcf	_loRa& (0+255),5,b
 12064                           
 12065                           ; BSR set to: 2
 12066                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12067  000A3E  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12068  000A42  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12069  000A46  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12070  000A4A  0E01               	movlw	1
 12071  000A4C  0100               	movlb	0	; () banked
 12072  000A4E  6F67               	movwf	RxDataDone@status& (0+255),b
 12073  000A50  D801               	call	u16428
 12074  000A52  D009               	goto	l14489
 12075  000A54                     u16428:
 12076  000A54  0005               	push	
 12077  000A56  6EFA               	movwf	pclath,c
 12078  000A58  51E8               	movf	_rxPayload& (0+255),w,b
 12079  000A5A  6EFD               	movwf	tosl,c
 12080  000A5C  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12081  000A5E  6EFE               	movwf	tosh,c
 12082  000A60  6AFF               	clrf	tosu,c
 12083  000A62  50FA               	movf	pclath,w,c
 12084  000A64  0012               	return		;indir
 12085  000A66                     l14489:
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;lorawan.c: 1507: }
 12089                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12090  000A66  0102               	movlb	2	; () banked
 12091  000A68  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12092                           
 12093                           ; BSR set to: 2
 12094  000A6A  BB00               	btfsc	_loRa& (0+255),5,b
 12095  000A6C  D59D               	goto	l14309
 12096                           
 12097                           ; BSR set to: 2
 12098  000A6E  B300               	btfsc	_loRa& (0+255),1,b
 12099  000A70  D002               	goto	l14497
 12100                           
 12101                           ; BSR set to: 2
 12102  000A72  A700               	btfss	_loRa& (0+255),3,b
 12103  000A74  D599               	goto	l14309
 12104  000A76                     l14497:
 12105                           
 12106                           ; BSR set to: 2
 12107                           ;lorawan.c: 1510: {
 12108                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12109  000A76  0E01               	movlw	1
 12110  000A78  0100               	movlb	0	; () banked
 12111  000A7A  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12112  000A7C  0E6A               	movlw	low LORAWAN_RxDone@channelIndex
 12113  000A7E  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12114  000A80  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 12115  000A82  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12116  000A84  0102               	movlb	2	; () banked
 12117  000A86  51ED               	movf	(_loRa+237)& (0+255),w,b
 12118  000A88  EC81  F027         	call	_SearchAvailableChannel
 12119  000A8C  0900               	iorlw	0
 12120  000A8E  E1C9               	bnz	l14477
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;lorawan.c: 1512: {
 12124                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12125  000A90  0E00               	movlw	0
 12126  000A92  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12127  000A94  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12128  000A96  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12129  000A98  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12130  000A9A  ECFE  F029         	call	_LORAWAN_Send
 12131  000A9E  D7BE               	goto	l14475
 12132  000AA0                     l14515:
 12133                           
 12134                           ; BSR set to: 2
 12135                           ;lorawan.c: 1537: else
 12136                           ;lorawan.c: 1538: {
 12137                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12138  000AA0  0100               	movlb	0	; () banked
 12139  000AA2  51E8               	movf	_rxPayload& (0+255),w,b
 12140  000AA4  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12141  000AA6  B4D8               	btfsc	status,2,c
 12142  000AA8  0012               	return	
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;lorawan.c: 1541: {
 12146                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12147  000AAA  EC3D  F03C         	call	_RADIO_GetStatus	;wreg free
 12148  000AAE  0100               	movlb	0	; () banked
 12149  000AB0  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 12150  000AB2  B7DD               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12151  000AB4  D011               	goto	l14521
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;lorawan.c: 1543: {
 12155                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12156  000AB6  C166  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12157  000ABA  C167  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12158  000ABE  C168  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12159  000AC2  0E03               	movlw	3
 12160  000AC4  6F67               	movwf	RxDataDone@status& (0+255),b
 12161  000AC6  0005               	push	
 12162  000AC8  6EFA               	movwf	pclath,c
 12163  000ACA  51E8               	movf	_rxPayload& (0+255),w,b
 12164  000ACC  6EFD               	movwf	tosl,c
 12165  000ACE  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12166  000AD0  6EFE               	movwf	tosh,c
 12167  000AD2  6AFF               	clrf	tosu,c
 12168  000AD4  50FA               	movf	pclath,w,c
 12169  000AD6  0012               	return		;indir
 12170  000AD8                     l14521:
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;lorawan.c: 1546: else
 12174                           ;lorawan.c: 1547: {
 12175                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12176  000AD8  C166  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12177  000ADC  C167  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12178  000AE0  C168  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12179  000AE4  0E02               	movlw	2
 12180  000AE6  6F67               	movwf	RxDataDone@status& (0+255),b
 12181  000AE8  0005               	push	
 12182  000AEA  6EFA               	movwf	pclath,c
 12183  000AEC  51E8               	movf	_rxPayload& (0+255),w,b
 12184  000AEE  6EFD               	movwf	tosl,c
 12185  000AF0  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12186  000AF2  6EFE               	movwf	tosh,c
 12187  000AF4  6AFF               	clrf	tosu,c
 12188  000AF6  50FA               	movf	pclath,w,c
 12189  000AF8  0012               	return		;indir
 12190  000AFA                     __end_of_LORAWAN_RxDone:
 12191                           	opt stack 0
 12192                           tosu	equ	0xFFF
 12193                           tosh	equ	0xFFE
 12194                           tosl	equ	0xFFD
 12195                           pclath	equ	0xFFA
 12196                           tblptru	equ	0xFF8
 12197                           tblptrh	equ	0xFF7
 12198                           tblptrl	equ	0xFF6
 12199                           tablat	equ	0xFF5
 12200                           prodh	equ	0xFF4
 12201                           prodl	equ	0xFF3
 12202                           intcon	equ	0xFF2
 12203                           intcon2	equ	0xFF1
 12204                           intcon3	equ	0xFF0
 12205                           postinc0	equ	0xFEE
 12206                           wreg	equ	0xFE8
 12207                           postinc1	equ	0xFE6
 12208                           postdec1	equ	0xFE5
 12209                           plusw1	equ	0xFE3
 12210                           fsr1h	equ	0xFE2
 12211                           fsr1l	equ	0xFE1
 12212                           indf2	equ	0xFDF
 12213                           postinc2	equ	0xFDE
 12214                           postdec2	equ	0xFDD
 12215                           fsr2h	equ	0xFDA
 12216                           fsr2l	equ	0xFD9
 12217                           status	equ	0xFD8
 12218                           
 12219 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12220 ;; Defined at:
 12221 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;		None
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;		None
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  1    wreg      void 
 12228 ;; Registers used:
 12229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12230 ;; Tracked objects:
 12231 ;;		On entry : E/0
 12232 ;;		On exit  : F/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;Total ram usage:        4 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; Hardware stack levels required when called:   11
 12242 ;; This function calls:
 12243 ;;		_SwTimerSetTimeout
 12244 ;;		_SwTimerStart
 12245 ;;		___lldiv
 12246 ;; This function is called by:
 12247 ;;		_AckRetransmissionCallback
 12248 ;;		_LORAWAN_RxDone
 12249 ;; This function uses a non-reentrant model
 12250 ;;
 12251                           
 12252                           	psect	text63
 12253  006172                     __ptext63:
 12254                           	opt stack 0
 12255  006172                     _UpdateRetransmissionAckTimeoutState:
 12256                           	opt stack 16
 12257                           
 12258                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12259                           
 12260                           ;incstack = 0
 12261  006172  0102               	movlb	2	; () banked
 12262  006174  5102               	movf	(_loRa+2)& (0+255),w,b
 12263  006176  0BF0               	andlw	-16
 12264  006178  0906               	iorlw	6
 12265  00617A  6F02               	movwf	(_loRa+2)& (0+255),b
 12266                           
 12267                           ; BSR set to: 2
 12268                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12269  00617C  51A0               	movf	(_loRa+160)& (0+255),w,b
 12270  00617E  0100               	movlb	0	; () banked
 12271  006180  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12272  006182  0102               	movlb	2	; () banked
 12273  006184  51A1               	movf	(_loRa+161)& (0+255),w,b
 12274  006186  0100               	movlb	0	; () banked
 12275  006188  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12276  00618A  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12277  00618C  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12278  00618E  0E0C               	movlw	12
 12279  006190                     u15545:
 12280  006190  90D8               	bcf	status,0,c
 12281  006192  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12282  006194  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12283  006196  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12284  006198  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12285  00619A  2EE8               	decfsz	wreg,f,c
 12286  00619C  D7F9               	goto	u15545
 12287  00619E  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12288  0061A2  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12289  0061A6  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12290  0061AA  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12291  0061AE  0E7D               	movlw	125
 12292  0061B0  6F68               	movwf	___lldiv@divisor& (0+255),b
 12293  0061B2  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12294  0061B4  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12295  0061B6  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12296  0061B8  EC0D  F030         	call	___lldiv	;wreg free
 12297  0061BC  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12298  0061C0  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12299  0061C4  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12300  0061C8  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12301  0061CC  0102               	movlb	2	; () banked
 12302  0061CE  51E8               	movf	(_loRa+232)& (0+255),w,b
 12303  0061D0  EC62  F036         	call	_SwTimerSetTimeout
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12307  0061D4  0102               	movlb	2	; () banked
 12308  0061D6  51E8               	movf	(_loRa+232)& (0+255),w,b
 12309  0061D8  EF4B  F02E         	goto	_SwTimerStart
 12310  0061DC                     __end_of_UpdateRetransmissionAckTimeoutState:
 12311                           	opt stack 0
 12312                           tosu	equ	0xFFF
 12313                           tosh	equ	0xFFE
 12314                           tosl	equ	0xFFD
 12315                           pclath	equ	0xFFA
 12316                           tblptru	equ	0xFF8
 12317                           tblptrh	equ	0xFF7
 12318                           tblptrl	equ	0xFF6
 12319                           tablat	equ	0xFF5
 12320                           prodh	equ	0xFF4
 12321                           prodl	equ	0xFF3
 12322                           intcon	equ	0xFF2
 12323                           intcon2	equ	0xFF1
 12324                           intcon3	equ	0xFF0
 12325                           postinc0	equ	0xFEE
 12326                           wreg	equ	0xFE8
 12327                           postinc1	equ	0xFE6
 12328                           postdec1	equ	0xFE5
 12329                           plusw1	equ	0xFE3
 12330                           fsr1h	equ	0xFE2
 12331                           fsr1l	equ	0xFE1
 12332                           indf2	equ	0xFDF
 12333                           postinc2	equ	0xFDE
 12334                           postdec2	equ	0xFDD
 12335                           fsr2h	equ	0xFDA
 12336                           fsr2l	equ	0xFD9
 12337                           status	equ	0xFD8
 12338                           
 12339 ;; *************** function _UpdateDLSettings *****************
 12340 ;; Defined at:
 12341 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;  dlRx2Dr         1    wreg     unsigned char 
 12344 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1    wreg      void 
 12349 ;; Registers used:
 12350 ;;		wreg, status,2, status,0
 12351 ;; Tracked objects:
 12352 ;;		On entry : F/1
 12353 ;;		On exit  : F/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12356 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12360 ;;Total ram usage:        2 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; Hardware stack levels required when called:    7
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_LORAWAN_RxDone
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370                           	psect	text64
 12371  007576                     __ptext64:
 12372                           	opt stack 0
 12373  007576                     _UpdateDLSettings:
 12374                           	opt stack 19
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;incstack = 0
 12378                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12379  007576  0100               	movlb	0	; () banked
 12380  007578  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12381                           
 12382                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12383  00757A  0E08               	movlw	8
 12384  00757C  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12385  00757E  D002               	goto	l13861
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;lorawan_eu.c: 891: {
 12389                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12390  007580  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12391  007584                     l13861:
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;lorawan_eu.c: 893: }
 12395                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12396  007584  0E06               	movlw	6
 12397  007586  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12398  007588  0C06               	retlw	6
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;lorawan_eu.c: 896: {
 12402                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12403  00758A  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12404                           
 12405                           ; BSR set to: 0
 12406  00758E  0C06               	retlw	6	;funcret
 12407  007590                     __end_of_UpdateDLSettings:
 12408                           	opt stack 0
 12409                           tosu	equ	0xFFF
 12410                           tosh	equ	0xFFE
 12411                           tosl	equ	0xFFD
 12412                           pclath	equ	0xFFA
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           intcon	equ	0xFF2
 12420                           intcon2	equ	0xFF1
 12421                           intcon3	equ	0xFF0
 12422                           postinc0	equ	0xFEE
 12423                           wreg	equ	0xFE8
 12424                           postinc1	equ	0xFE6
 12425                           postdec1	equ	0xFE5
 12426                           plusw1	equ	0xFE3
 12427                           fsr1h	equ	0xFE2
 12428                           fsr1l	equ	0xFE1
 12429                           indf2	equ	0xFDF
 12430                           postinc2	equ	0xFDE
 12431                           postdec2	equ	0xFDD
 12432                           fsr2h	equ	0xFDA
 12433                           fsr2l	equ	0xFD9
 12434                           status	equ	0xFD8
 12435                           
 12436 ;; *************** function _UpdateCfList *****************
 12437 ;; Defined at:
 12438 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;  bufferLength    1    wreg     unsigned char 
 12441 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12442 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12443 ;; Auto vars:     Size  Location     Type
 12444 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12445 ;;  frequency       4   21[BANK0 ] unsigned long 
 12446 ;;  i               1   26[BANK0 ] unsigned char 
 12447 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12452 ;; Tracked objects:
 12453 ;;		On entry : F/1
 12454 ;;		On exit  : D/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12458 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;Total ram usage:       11 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:    9
 12464 ;; This function calls:
 12465 ;;		_LORAWAN_SetChannelIdStatus
 12466 ;;		_ValidateFrequency
 12467 ;;		___lmul
 12468 ;;		_memcpy
 12469 ;; This function is called by:
 12470 ;;		_LORAWAN_RxDone
 12471 ;; This function uses a non-reentrant model
 12472 ;;
 12473                           
 12474                           	psect	text65
 12475  003194                     __ptext65:
 12476                           	opt stack 0
 12477  003194                     _UpdateCfList:
 12478                           	opt stack 17
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;incstack = 0
 12482                           ;UpdateCfList@bufferLength stored from wreg
 12483  003194  0100               	movlb	0	; () banked
 12484  003196  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12485                           
 12486                           ;lorawan_eu.c: 826: uint8_t i;
 12487                           ;lorawan_eu.c: 827: uint32_t frequency;
 12488                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12489                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12490  003198  0E21               	movlw	33
 12491  00319A  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12492  00319C  A4D8               	btfss	status,2,c
 12493  00319E  0012               	return	
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;lorawan_eu.c: 831: {
 12497                           ;lorawan_eu.c: 833: channelIndex = 3;
 12498  0031A0  0E03               	movlw	3
 12499  0031A2  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12503  0031A4  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12504  0031A6                     l1151:
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;lorawan_eu.c: 836: {
 12508                           ;lorawan_eu.c: 837: frequency = 0;
 12509  0031A6  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12510  0031A8  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12511  0031AA  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12512  0031AC  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12516  0031AE  0E75               	movlw	low UpdateCfList@frequency
 12517  0031B0  6F64               	movwf	memcpy@d1& (0+255),b
 12518  0031B2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12519  0031B4  517A               	movf	UpdateCfList@i& (0+255),w,b
 12520  0031B6  0D03               	mullw	3
 12521  0031B8  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12522  0031BC  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12523  0031C0  50F3               	movf	prodl,w,c
 12524  0031C2  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12525  0031C4  50F4               	movf	prodh,w,c
 12526  0031C6  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12527  0031C8  0E0D               	movlw	13
 12528  0031CA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12529  0031CC  0E00               	movlw	0
 12530  0031CE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12531  0031D0  5172               	movf	??_UpdateCfList& (0+255),w,b
 12532  0031D2  6F66               	movwf	memcpy@s1& (0+255),b
 12533  0031D4  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12534  0031D6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12535  0031D8  0E03               	movlw	3
 12536  0031DA  6F68               	movwf	memcpy@n& (0+255),b
 12537  0031DC  EC01  F034         	call	_memcpy	;wreg free
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;lorawan_eu.c: 839: frequency *= 100;
 12541  0031E0  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12542  0031E4  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12543  0031E8  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12544  0031EC  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12545  0031F0  0E64               	movlw	100
 12546  0031F2  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12547  0031F4  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12548  0031F6  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12549  0031F8  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12550  0031FA  EC8F  F02E         	call	___lmul	;wreg free
 12551  0031FE  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12552  003202  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12553  003206  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12554  00320A  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;lorawan_eu.c: 840: if (frequency != 0)
 12558  00320E  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12559  003210  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12560  003212  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12561  003214  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12562  003216  E101 D094          	bz	l13851
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;lorawan_eu.c: 841: {
 12566                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12567  00321A  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12568  00321E  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12569  003222  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12570  003226  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12571  00322A  ECA7  F033         	call	_ValidateFrequency	;wreg free
 12572  00322E  0900               	iorlw	0
 12573  003230  E001 D08C          	bnz	l13853
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;lorawan_eu.c: 843: {
 12577                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12578  003234  517A               	movf	UpdateCfList@i& (0+255),w,b
 12579  003236  0D0E               	mullw	14
 12580  003238  0E00               	movlw	low _Channels
 12581  00323A  6F72               	movwf	??_UpdateCfList& (0+255),b
 12582  00323C  0E04               	movlw	high _Channels
 12583  00323E  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12584  003240  50F3               	movf	prodl,w,c
 12585  003242  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12586  003244  50F4               	movf	prodh,w,c
 12587  003246  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12588  003248  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12589  00324A  0D0E               	mullw	14
 12590  00324C  50F3               	movf	prodl,w,c
 12591  00324E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12592  003250  6ED9               	movwf	fsr2l,c
 12593  003252  50F4               	movf	prodh,w,c
 12594  003254  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12595  003256  6EDA               	movwf	fsr2h,c
 12596  003258  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12597  00325C  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12598  003260  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12599  003264  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12600                           
 12601                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12602  003268  517A               	movf	UpdateCfList@i& (0+255),w,b
 12603  00326A  0D0E               	mullw	14
 12604  00326C  0E00               	movlw	low _Channels
 12605  00326E  6F72               	movwf	??_UpdateCfList& (0+255),b
 12606  003270  0E04               	movlw	high _Channels
 12607  003272  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12608  003274  0E05               	movlw	5
 12609  003276  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12610  003278  0E00               	movlw	0
 12611  00327A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12612  00327C  50F3               	movf	prodl,w,c
 12613  00327E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12614  003280  50F4               	movf	prodh,w,c
 12615  003282  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12616  003284  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12617  003286  0D0E               	mullw	14
 12618  003288  50F3               	movf	prodl,w,c
 12619  00328A  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12620  00328C  6ED9               	movwf	fsr2l,c
 12621  00328E  50F4               	movf	prodh,w,c
 12622  003290  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12623  003292  6EDA               	movwf	fsr2h,c
 12624  003294  50DF               	movf	223,w,c
 12625  003296  0B0F               	andlw	-241
 12626  003298  0950               	iorlw	80
 12627  00329A  6EDF               	movwf	223,c
 12628                           
 12629                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12630  00329C  0100               	movlb	0	; () banked
 12631  00329E  517A               	movf	UpdateCfList@i& (0+255),w,b
 12632  0032A0  0D0E               	mullw	14
 12633  0032A2  0E00               	movlw	low _Channels
 12634  0032A4  6F72               	movwf	??_UpdateCfList& (0+255),b
 12635  0032A6  0E04               	movlw	high _Channels
 12636  0032A8  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12637  0032AA  0E05               	movlw	5
 12638  0032AC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12639  0032AE  0E00               	movlw	0
 12640  0032B0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12641  0032B2  50F3               	movf	prodl,w,c
 12642  0032B4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12643  0032B6  50F4               	movf	prodh,w,c
 12644  0032B8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12645  0032BA  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12646  0032BC  0D0E               	mullw	14
 12647  0032BE  50F3               	movf	prodl,w,c
 12648  0032C0  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12649  0032C2  6ED9               	movwf	fsr2l,c
 12650  0032C4  50F4               	movf	prodh,w,c
 12651  0032C6  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12652  0032C8  6EDA               	movwf	fsr2h,c
 12653  0032CA  0EF0               	movlw	-16
 12654  0032CC  16DF               	andwf	223,f,c
 12655                           
 12656                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12657  0032CE  517A               	movf	UpdateCfList@i& (0+255),w,b
 12658  0032D0  0D0E               	mullw	14
 12659  0032D2  0E00               	movlw	low _Channels
 12660  0032D4  6F72               	movwf	??_UpdateCfList& (0+255),b
 12661  0032D6  0E04               	movlw	high _Channels
 12662  0032D8  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12663  0032DA  0E06               	movlw	6
 12664  0032DC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12665  0032DE  0E00               	movlw	0
 12666  0032E0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12667  0032E2  50F3               	movf	prodl,w,c
 12668  0032E4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12669  0032E6  50F4               	movf	prodh,w,c
 12670  0032E8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12671  0032EA  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12672  0032EC  0D0E               	mullw	14
 12673  0032EE  50F3               	movf	prodl,w,c
 12674  0032F0  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12675  0032F2  6ED9               	movwf	fsr2l,c
 12676  0032F4  50F4               	movf	prodh,w,c
 12677  0032F6  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12678  0032F8  6EDA               	movwf	fsr2h,c
 12679  0032FA  0EE7               	movlw	231
 12680  0032FC  6EDE               	movwf	postinc2,c
 12681  0032FE  0E03               	movlw	3
 12682  003300  6EDD               	movwf	postdec2,c
 12683                           
 12684                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12685  003302  517A               	movf	UpdateCfList@i& (0+255),w,b
 12686  003304  0D0E               	mullw	14
 12687  003306  0E00               	movlw	low _Channels
 12688  003308  6F72               	movwf	??_UpdateCfList& (0+255),b
 12689  00330A  0E04               	movlw	high _Channels
 12690  00330C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12691  00330E  0E0D               	movlw	13
 12692  003310  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12693  003312  0E00               	movlw	0
 12694  003314  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12695  003316  50F3               	movf	prodl,w,c
 12696  003318  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12697  00331A  50F4               	movf	prodh,w,c
 12698  00331C  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12699  00331E  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12700  003320  0D0E               	mullw	14
 12701  003322  50F3               	movf	prodl,w,c
 12702  003324  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12703  003326  6ED9               	movwf	fsr2l,c
 12704  003328  50F4               	movf	prodh,w,c
 12705  00332A  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12706  00332C  6EDA               	movwf	fsr2h,c
 12707  00332E  68DF               	setf	indf2,c
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12711  003330  0E01               	movlw	1
 12712  003332  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12713  003334  517A               	movf	UpdateCfList@i& (0+255),w,b
 12714  003336  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12715  003338  EC56  F037         	call	_LORAWAN_SetChannelIdStatus
 12716                           
 12717                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12718  00333C  0102               	movlb	2	; () banked
 12719  00333E  8703               	bsf	(_loRa+3)& (0+255),3,b
 12720  003340  D005               	goto	l13853
 12721  003342                     l13851:
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;lorawan_eu.c: 853: else
 12725                           ;lorawan_eu.c: 854: {
 12726                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12727  003342  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12728  003344  517A               	movf	UpdateCfList@i& (0+255),w,b
 12729  003346  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12730  003348  EC56  F037         	call	_LORAWAN_SetChannelIdStatus
 12731  00334C                     l13853:
 12732  00334C  0100               	movlb	0	; () banked
 12733  00334E  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12734                           
 12735                           ; BSR set to: 0
 12736  003350  0E04               	movlw	4
 12737  003352  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12738  003354  D728               	goto	l1151
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;lorawan_eu.c: 856: }
 12742                           ;lorawan_eu.c: 857: }
 12743                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12744  003356  0102               	movlb	2	; () banked
 12745  003358  8703               	bsf	(_loRa+3)& (0+255),3,b
 12746  00335A  0C04               	retlw	4	;funcret
 12747  00335C                     __end_of_UpdateCfList:
 12748                           	opt stack 0
 12749                           tosu	equ	0xFFF
 12750                           tosh	equ	0xFFE
 12751                           tosl	equ	0xFFD
 12752                           pclath	equ	0xFFA
 12753                           tblptru	equ	0xFF8
 12754                           tblptrh	equ	0xFF7
 12755                           tblptrl	equ	0xFF6
 12756                           tablat	equ	0xFF5
 12757                           prodh	equ	0xFF4
 12758                           prodl	equ	0xFF3
 12759                           intcon	equ	0xFF2
 12760                           intcon2	equ	0xFF1
 12761                           intcon3	equ	0xFF0
 12762                           postinc0	equ	0xFEE
 12763                           wreg	equ	0xFE8
 12764                           postinc1	equ	0xFE6
 12765                           postdec1	equ	0xFE5
 12766                           plusw1	equ	0xFE3
 12767                           fsr1h	equ	0xFE2
 12768                           fsr1l	equ	0xFE1
 12769                           indf2	equ	0xFDF
 12770                           postinc2	equ	0xFDE
 12771                           postdec2	equ	0xFDD
 12772                           fsr2h	equ	0xFDA
 12773                           fsr2l	equ	0xFD9
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function _StartReTxTimer *****************
 12777 ;; Defined at:
 12778 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;		None
 12781 ;; Auto vars:     Size  Location     Type
 12782 ;;  minim           4   58[BANK0 ] unsigned long 
 12783 ;;  i               1   62[BANK0 ] unsigned char 
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : E/0
 12790 ;;		On exit  : F/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12794 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12795 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12796 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12797 ;;Total ram usage:        9 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:   11
 12800 ;; This function calls:
 12801 ;;		_SwTimerSetTimeout
 12802 ;;		_SwTimerStart
 12803 ;;		___lldiv
 12804 ;; This function is called by:
 12805 ;;		_LORAWAN_RxDone
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text66
 12810  0043D2                     __ptext66:
 12811                           	opt stack 0
 12812  0043D2                     _StartReTxTimer:
 12813                           	opt stack 15
 12814                           
 12815                           ;lorawan_eu.c: 904: uint8_t i;
 12816                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12817                           
 12818                           ;incstack = 0
 12819  0043D2  0100               	movlb	0	; () banked
 12820  0043D4  699A               	setf	StartReTxTimer@minim& (0+255),b
 12821  0043D6  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12822  0043D8  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12823  0043DA  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12824                           
 12825                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12826  0043DC  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 12827  0043DE  D05B               	goto	l13881
 12828  0043E0                     l13867:
 12829                           
 12830                           ; BSR set to: 2
 12831                           ;lorawan_eu.c: 908: {
 12832                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12833  0043E0  0100               	movlb	0	; () banked
 12834  0043E2  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12835  0043E4  0D0E               	mullw	14
 12836  0043E6  0E04               	movlw	low (_Channels+4)
 12837  0043E8  24F3               	addwf	prodl,w,c
 12838  0043EA  6ED9               	movwf	fsr2l,c
 12839  0043EC  0E04               	movlw	high (_Channels+4)
 12840  0043EE  20F4               	addwfc	prodh,w,c
 12841  0043F0  6EDA               	movwf	fsr2h,c
 12842  0043F2  04DE               	decf	postinc2,w,c
 12843  0043F4  E14E               	bnz	l13879
 12844                           
 12845                           ; BSR set to: 0
 12846  0043F6  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12847  0043F8  0D0E               	mullw	14
 12848  0043FA  0E08               	movlw	low (_Channels+8)
 12849  0043FC  24F3               	addwf	prodl,w,c
 12850  0043FE  6ED9               	movwf	fsr2l,c
 12851  004400  0E04               	movlw	high (_Channels+8)
 12852  004402  20F4               	addwfc	prodh,w,c
 12853  004404  6EDA               	movwf	fsr2h,c
 12854  004406  50DE               	movf	postinc2,w,c
 12855  004408  10DE               	iorwf	postinc2,w,c
 12856  00440A  10DE               	iorwf	postinc2,w,c
 12857  00440C  10DE               	iorwf	postinc2,w,c
 12858  00440E  E041               	bz	l13879
 12859                           
 12860                           ; BSR set to: 0
 12861  004410  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12862  004412  0D0E               	mullw	14
 12863  004414  0E08               	movlw	low (_Channels+8)
 12864  004416  24F3               	addwf	prodl,w,c
 12865  004418  6ED9               	movwf	fsr2l,c
 12866  00441A  0E04               	movlw	high (_Channels+8)
 12867  00441C  20F4               	addwfc	prodh,w,c
 12868  00441E  6EDA               	movwf	fsr2h,c
 12869  004420  50DE               	movf	postinc2,w,c
 12870  004422  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 12871  004424  50DE               	movf	postinc2,w,c
 12872  004426  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12873  004428  50DE               	movf	postinc2,w,c
 12874  00442A  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12875  00442C  50DE               	movf	postinc2,w,c
 12876  00442E  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12877  004430  E330               	bnc	l13879
 12878                           
 12879                           ; BSR set to: 0
 12880  004432  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12881  004434  0D0E               	mullw	14
 12882  004436  0E05               	movlw	low (_Channels+5)
 12883  004438  24F3               	addwf	prodl,w,c
 12884  00443A  6ED9               	movwf	fsr2l,c
 12885  00443C  0E04               	movlw	high (_Channels+5)
 12886  00443E  20F4               	addwfc	prodh,w,c
 12887  004440  6EDA               	movwf	fsr2h,c
 12888  004442  50DF               	movf	223,w,c
 12889  004444  0B0F               	andlw	15
 12890  004446  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12891  004448  5196               	movf	??_StartReTxTimer& (0+255),w,b
 12892  00444A  0102               	movlb	2	; () banked
 12893  00444C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12894  00444E  E321               	bnc	l13879
 12895                           
 12896                           ; BSR set to: 2
 12897  004450  0100               	movlb	0	; () banked
 12898  004452  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12899  004454  0D0E               	mullw	14
 12900  004456  0E05               	movlw	low (_Channels+5)
 12901  004458  24F3               	addwf	prodl,w,c
 12902  00445A  6ED9               	movwf	fsr2l,c
 12903  00445C  0E04               	movlw	high (_Channels+5)
 12904  00445E  20F4               	addwfc	prodh,w,c
 12905  004460  6EDA               	movwf	fsr2h,c
 12906  004462  38DF               	swapf	223,w,c
 12907  004464  0B0F               	andlw	15
 12908  004466  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12909  004468  0102               	movlb	2	; () banked
 12910  00446A  51DF               	movf	(_loRa+223)& (0+255),w,b
 12911  00446C  0100               	movlb	0	; () banked
 12912  00446E  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 12913  004470  E310               	bnc	l13879
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;lorawan_eu.c: 910: {
 12917                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12918  004472  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12919  004474  0D0E               	mullw	14
 12920  004476  0E08               	movlw	low (_Channels+8)
 12921  004478  24F3               	addwf	prodl,w,c
 12922  00447A  6ED9               	movwf	fsr2l,c
 12923  00447C  0E04               	movlw	high (_Channels+8)
 12924  00447E  20F4               	addwfc	prodh,w,c
 12925  004480  6EDA               	movwf	fsr2h,c
 12926  004482  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 12927  004486  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 12928  00448A  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 12929  00448E  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 12930  004492                     l13879:
 12931  004492  0100               	movlb	0	; () banked
 12932  004494  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 12933  004496                     l13881:
 12934                           
 12935                           ; BSR set to: 0
 12936  004496  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12937  004498  0102               	movlb	2	; () banked
 12938  00449A  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12939  00449C  E2A1               	bc	l13867
 12940                           
 12941                           ; BSR set to: 2
 12942                           ;lorawan_eu.c: 912: }
 12943                           ;lorawan_eu.c: 913: }
 12944                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12945  00449E  5102               	movf	(_loRa+2)& (0+255),w,b
 12946  0044A0  0BF0               	andlw	-16
 12947  0044A2  0906               	iorlw	6
 12948  0044A4  6F02               	movwf	(_loRa+2)& (0+255),b
 12949                           
 12950                           ; BSR set to: 2
 12951                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12952  0044A6  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12953  0044AA  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12954  0044AE  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12955  0044B2  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12956  0044B6  0E0C               	movlw	12
 12957  0044B8                     u15405:
 12958  0044B8  90D8               	bcf	status,0,c
 12959  0044BA  0100               	movlb	0	; () banked
 12960  0044BC  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 12961  0044BE  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12962  0044C0  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12963  0044C2  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12964  0044C4  2EE8               	decfsz	wreg,f,c
 12965  0044C6  D7F8               	goto	u15405
 12966  0044C8  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 12967  0044CC  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12968  0044D0  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12969  0044D4  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12970  0044D8  0E7D               	movlw	125
 12971  0044DA  6F68               	movwf	___lldiv@divisor& (0+255),b
 12972  0044DC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12973  0044DE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12974  0044E0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12975  0044E2  EC0D  F030         	call	___lldiv	;wreg free
 12976  0044E6  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12977  0044EA  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12978  0044EE  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12979  0044F2  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12980  0044F6  0102               	movlb	2	; () banked
 12981  0044F8  51E6               	movf	(_loRa+230)& (0+255),w,b
 12982  0044FA  EC62  F036         	call	_SwTimerSetTimeout
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12986  0044FE  0102               	movlb	2	; () banked
 12987  004500  51E6               	movf	(_loRa+230)& (0+255),w,b
 12988  004502  EF4B  F02E         	goto	_SwTimerStart
 12989  004506                     __end_of_StartReTxTimer:
 12990                           	opt stack 0
 12991                           tosu	equ	0xFFF
 12992                           tosh	equ	0xFFE
 12993                           tosl	equ	0xFFD
 12994                           pclath	equ	0xFFA
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           intcon2	equ	0xFF1
 13003                           intcon3	equ	0xFF0
 13004                           postinc0	equ	0xFEE
 13005                           wreg	equ	0xFE8
 13006                           postinc1	equ	0xFE6
 13007                           postdec1	equ	0xFE5
 13008                           plusw1	equ	0xFE3
 13009                           fsr1h	equ	0xFE2
 13010                           fsr1l	equ	0xFE1
 13011                           indf2	equ	0xFDF
 13012                           postinc2	equ	0xFDE
 13013                           postdec2	equ	0xFDD
 13014                           fsr2h	equ	0xFDA
 13015                           fsr2l	equ	0xFD9
 13016                           status	equ	0xFD8
 13017                           
 13018 ;; *************** function _SetReceptionNotOkState *****************
 13019 ;; Defined at:
 13020 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;		None
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;		None
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      void 
 13027 ;; Registers used:
 13028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13029 ;; Tracked objects:
 13030 ;;		On entry : C/2
 13031 ;;		On exit  : D/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;Total ram usage:        0 bytes
 13039 ;; Hardware stack levels used:    1
 13040 ;; Hardware stack levels required when called:   14
 13041 ;; This function calls:
 13042 ;;		_LORAWAN_EnterContinuousReceive
 13043 ;;		_RxDataDone
 13044 ;; This function is called by:
 13045 ;;		_LORAWAN_RxDone
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049                           	psect	text67
 13050  006312                     __ptext67:
 13051                           	opt stack 0
 13052  006312                     _SetReceptionNotOkState:
 13053                           	opt stack 12
 13054                           
 13055                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;incstack = 0
 13059  006312  0102               	movlb	2	; () banked
 13060  006314  5102               	movf	(_loRa+2)& (0+255),w,b
 13061  006316  0B0F               	andlw	15
 13062  006318  0A05               	xorlw	5
 13063  00631A  E006               	bz	l2307
 13064                           
 13065                           ; BSR set to: 2
 13066  00631C  5102               	movf	(_loRa+2)& (0+255),w,b
 13067  00631E  0B0F               	andlw	15
 13068  006320  0A03               	xorlw	3
 13069  006322  E120               	bnz	l14045
 13070                           
 13071                           ; BSR set to: 2
 13072  006324  51F1               	movf	(_loRa+241)& (0+255),w,b
 13073  006326  E01E               	bz	l14045
 13074  006328                     l2307:
 13075                           
 13076                           ; BSR set to: 2
 13077                           ;lorawan.c: 2000: {
 13078                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13079  006328  9100               	bcf	_loRa& (0+255),0,b
 13080                           
 13081                           ; BSR set to: 2
 13082                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13083  00632A  0EF0               	movlw	-16
 13084  00632C  1702               	andwf	(_loRa+2)& (0+255),f,b
 13085                           
 13086                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13087  00632E  5112               	movf	(_loRa+18)& (0+255),w,b
 13088  006330  E117               	bnz	l14043
 13089                           
 13090                           ; BSR set to: 2
 13091  006332  0100               	movlb	0	; () banked
 13092  006334  51E8               	movf	_rxPayload& (0+255),w,b
 13093  006336  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 13094  006338  E013               	bz	l14043
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;lorawan.c: 2005: {
 13098                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13099  00633A  0102               	movlb	2	; () banked
 13100  00633C  9B00               	bcf	_loRa& (0+255),5,b
 13101                           
 13102                           ; BSR set to: 2
 13103                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13104  00633E  0E00               	movlw	0
 13105  006340  0100               	movlb	0	; () banked
 13106  006342  6B64               	clrf	RxDataDone@pData& (0+255),b
 13107  006344  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 13108  006346  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 13109  006348  6B67               	clrf	RxDataDone@status& (0+255),b
 13110  00634A  D801               	call	u15728
 13111  00634C  D009               	goto	l14043
 13112  00634E                     u15728:
 13113  00634E  0005               	push	
 13114  006350  6EFA               	movwf	pclath,c
 13115  006352  51E8               	movf	_rxPayload& (0+255),w,b
 13116  006354  6EFD               	movwf	tosl,c
 13117  006356  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 13118  006358  6EFE               	movwf	tosh,c
 13119  00635A  6AFF               	clrf	tosu,c
 13120  00635C  50FA               	movf	pclath,w,c
 13121  00635E  0012               	return		;indir
 13122  006360                     l14043:
 13123                           
 13124                           ;lorawan.c: 2008: }
 13125                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13126  006360  0102               	movlb	2	; () banked
 13127  006362  9303               	bcf	(_loRa+3)& (0+255),1,b
 13128  006364                     l14045:
 13129                           
 13130                           ; BSR set to: 2
 13131                           ;lorawan.c: 2010: }
 13132                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13133  006364  0E02               	movlw	2
 13134  006366  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13135  006368  A4D8               	btfss	status,2,c
 13136  00636A  0012               	return	
 13137                           
 13138                           ; BSR set to: 2
 13139                           ;lorawan.c: 2013: {
 13140                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13141  00636C  5102               	movf	(_loRa+2)& (0+255),w,b
 13142  00636E  0BF0               	andlw	-16
 13143  006370  0909               	iorlw	9
 13144  006372  6F02               	movwf	(_loRa+2)& (0+255),b
 13145                           
 13146                           ; BSR set to: 2
 13147                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13148  006374  EF86  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13149  006378                     __end_of_SetReceptionNotOkState:
 13150                           	opt stack 0
 13151                           tosu	equ	0xFFF
 13152                           tosh	equ	0xFFE
 13153                           tosl	equ	0xFFD
 13154                           pclath	equ	0xFFA
 13155                           tblptru	equ	0xFF8
 13156                           tblptrh	equ	0xFF7
 13157                           tblptrl	equ	0xFF6
 13158                           tablat	equ	0xFF5
 13159                           prodh	equ	0xFF4
 13160                           prodl	equ	0xFF3
 13161                           intcon	equ	0xFF2
 13162                           intcon2	equ	0xFF1
 13163                           intcon3	equ	0xFF0
 13164                           postinc0	equ	0xFEE
 13165                           wreg	equ	0xFE8
 13166                           postinc1	equ	0xFE6
 13167                           postdec1	equ	0xFE5
 13168                           plusw1	equ	0xFE3
 13169                           fsr1h	equ	0xFE2
 13170                           fsr1l	equ	0xFE1
 13171                           indf2	equ	0xFDF
 13172                           postinc2	equ	0xFDE
 13173                           postdec2	equ	0xFDD
 13174                           fsr2h	equ	0xFDA
 13175                           fsr2l	equ	0xFD9
 13176                           status	equ	0xFD8
 13177                           
 13178 ;; *************** function _SetJoinFailState *****************
 13179 ;; Defined at:
 13180 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;		None
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;		None
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 13189 ;; Tracked objects:
 13190 ;;		On entry : F/2
 13191 ;;		On exit  : F/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;Total ram usage:        0 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; Hardware stack levels required when called:    8
 13201 ;; This function calls:
 13202 ;;		_RxJoinResponse
 13203 ;; This function is called by:
 13204 ;;		_LORAWAN_RxTimeout
 13205 ;;		_LORAWAN_RxDone
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209                           	psect	text68
 13210  0072D0                     __ptext68:
 13211                           	opt stack 0
 13212  0072D0                     _SetJoinFailState:
 13213                           	opt stack 18
 13214                           
 13215                           ; BSR set to: 2
 13216                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13217                           
 13218                           ;incstack = 0
 13219  0072D0  9902               	bcf	(_loRa+2)& (0+255),4,b
 13220                           
 13221                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13222  0072D2  9500               	bcf	_loRa& (0+255),2,b
 13223                           
 13224                           ; BSR set to: 2
 13225                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13226  0072D4  0EF0               	movlw	-16
 13227  0072D6  1702               	andwf	(_loRa+2)& (0+255),f,b
 13228                           
 13229                           ; BSR set to: 2
 13230                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13231  0072D8  0100               	movlb	0	; () banked
 13232  0072DA  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13233  0072DC  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
 13234  0072DE  B4D8               	btfsc	status,2,c
 13235  0072E0  0012               	return	
 13236                           
 13237                           ; BSR set to: 0
 13238                           ;lorawan.c: 1110: {
 13239                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13240  0072E2  0005               	push	
 13241  0072E4  6EFA               	movwf	pclath,c
 13242  0072E6  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13243  0072E8  6EFD               	movwf	tosl,c
 13244  0072EA  51EB               	movf	(_rxPayload+3)& (0+255),w,b
 13245  0072EC  6EFE               	movwf	tosh,c
 13246  0072EE  6AFF               	clrf	tosu,c
 13247  0072F0  50FA               	movf	pclath,w,c
 13248  0072F2  0C00               	retlw	0	;indir
 13249  0072F4                     __end_of_SetJoinFailState:
 13250                           	opt stack 0
 13251                           tosu	equ	0xFFF
 13252                           tosh	equ	0xFFE
 13253                           tosl	equ	0xFFD
 13254                           pclath	equ	0xFFA
 13255                           tblptru	equ	0xFF8
 13256                           tblptrh	equ	0xFF7
 13257                           tblptrl	equ	0xFF6
 13258                           tablat	equ	0xFF5
 13259                           prodh	equ	0xFF4
 13260                           prodl	equ	0xFF3
 13261                           intcon	equ	0xFF2
 13262                           intcon2	equ	0xFF1
 13263                           intcon3	equ	0xFF0
 13264                           postinc0	equ	0xFEE
 13265                           wreg	equ	0xFE8
 13266                           postinc1	equ	0xFE6
 13267                           postdec1	equ	0xFE5
 13268                           plusw1	equ	0xFE3
 13269                           fsr1h	equ	0xFE2
 13270                           fsr1l	equ	0xFE1
 13271                           indf2	equ	0xFDF
 13272                           postinc2	equ	0xFDE
 13273                           postdec2	equ	0xFDD
 13274                           fsr2h	equ	0xFDA
 13275                           fsr2l	equ	0xFD9
 13276                           status	equ	0xFD8
 13277                           
 13278 ;; *************** function _RxJoinResponse *****************
 13279 ;; Defined at:
 13280 ;;		line 100 in file "main.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;  status          1    wreg     unsigned char 
 13283 ;; Auto vars:     Size  Location     Type
 13284 ;;  status          1    0[COMRAM] unsigned char 
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  1    wreg      void 
 13287 ;; Registers used:
 13288 ;;		wreg
 13289 ;; Tracked objects:
 13290 ;;		On entry : F/0
 13291 ;;		On exit  : F/0
 13292 ;;		Unchanged: F/0
 13293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13298 ;;Total ram usage:        0 bytes
 13299 ;; Hardware stack levels used:    1
 13300 ;; Hardware stack levels required when called:    7
 13301 ;; This function calls:
 13302 ;;		Nothing
 13303 ;; This function is called by:
 13304 ;;		_main
 13305 ;;		_SetJoinFailState
 13306 ;;		_UpdateJoinSuccessState
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310                           	psect	text69
 13311  0078BA                     __ptext69:
 13312                           	opt stack 0
 13313  0078BA                     _RxJoinResponse:
 13314                           	opt stack 20
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;main.c: 102: PORTCbits.RC5 = 0;
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;incstack = 0
 13321  0078BA  9A82               	bcf	3970,5,c	;volatile
 13322                           
 13323                           ; BSR set to: 0
 13324  0078BC  0012               	return		;funcret
 13325  0078BE                     __end_of_RxJoinResponse:
 13326                           	opt stack 0
 13327                           tosu	equ	0xFFF
 13328                           tosh	equ	0xFFE
 13329                           tosl	equ	0xFFD
 13330                           pclath	equ	0xFFA
 13331                           tblptru	equ	0xFF8
 13332                           tblptrh	equ	0xFF7
 13333                           tblptrl	equ	0xFF6
 13334                           tablat	equ	0xFF5
 13335                           prodh	equ	0xFF4
 13336                           prodl	equ	0xFF3
 13337                           intcon	equ	0xFF2
 13338                           intcon2	equ	0xFF1
 13339                           intcon3	equ	0xFF0
 13340                           postinc0	equ	0xFEE
 13341                           wreg	equ	0xFE8
 13342                           postinc1	equ	0xFE6
 13343                           postdec1	equ	0xFE5
 13344                           plusw1	equ	0xFE3
 13345                           fsr1h	equ	0xFE2
 13346                           fsr1l	equ	0xFE1
 13347                           indf2	equ	0xFDF
 13348                           postinc2	equ	0xFDE
 13349                           postdec2	equ	0xFDD
 13350                           fsr2h	equ	0xFDA
 13351                           fsr2l	equ	0xFD9
 13352                           status	equ	0xFD8
 13353                           
 13354 ;; *************** function _MacExecuteCommands *****************
 13355 ;; Defined at:
 13356 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13359 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13360 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13363 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13364 ;;  done            1   31[BANK0 ] unsigned char 
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  2   26[BANK0 ] PTR unsigned char 
 13367 ;; Registers used:
 13368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : F/0
 13371 ;;		On exit  : F/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13374 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13375 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13376 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13377 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13378 ;;Total ram usage:        8 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:   11
 13381 ;; This function calls:
 13382 ;;		_ExecuteDevStatus
 13383 ;;		_ExecuteDutyCycle
 13384 ;;		_ExecuteLinkAdr
 13385 ;;		_ExecuteLinkCheck
 13386 ;;		_ExecuteNewChannel
 13387 ;;		_ExecuteRxParamSetupReq
 13388 ;;		_ExecuteRxTimingSetup
 13389 ;; This function is called by:
 13390 ;;		_LORAWAN_RxDone
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text70
 13395  002DB6                     __ptext70:
 13396                           	opt stack 0
 13397  002DB6                     _MacExecuteCommands:
 13398                           	opt stack 15
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;lorawan.c: 1577: bool done = 0;
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;incstack = 0
 13405  002DB6  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13406                           
 13407                           ; BSR set to: 0
 13408                           ;lorawan.c: 1578: uint8_t *ptr;
 13409                           ;lorawan.c: 1579: ptr = buffer;
 13410  002DB8  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13411  002DBC  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13412                           
 13413                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13414  002DC0  D0DE               	goto	l14107
 13415  002DC2                     l14071:
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;lorawan.c: 1581: {
 13419                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13420  002DC2  0102               	movlb	2	; () banked
 13421  002DC4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13422  002DC6  0D02               	mullw	2
 13423  002DC8  0EA9               	movlw	low (_loRa+169)
 13424  002DCA  24F3               	addwf	prodl,w,c
 13425  002DCC  6ED9               	movwf	fsr2l,c
 13426  002DCE  0E02               	movlw	high (_loRa+169)
 13427  002DD0  20F4               	addwfc	prodh,w,c
 13428  002DD2  6EDA               	movwf	fsr2h,c
 13429  002DD4  90DF               	bcf	indf2,0,c
 13430                           
 13431                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13432  002DD6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13433  002DD8  0D02               	mullw	2
 13434  002DDA  0EA9               	movlw	low (_loRa+169)
 13435  002DDC  24F3               	addwf	prodl,w,c
 13436  002DDE  6ED9               	movwf	fsr2l,c
 13437  002DE0  0E02               	movlw	high (_loRa+169)
 13438  002DE2  20F4               	addwfc	prodh,w,c
 13439  002DE4  6EDA               	movwf	fsr2h,c
 13440  002DE6  92DF               	bcf	indf2,1,c
 13441                           
 13442                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13443  002DE8  51A7               	movf	(_loRa+167)& (0+255),w,b
 13444  002DEA  0D02               	mullw	2
 13445  002DEC  0EA9               	movlw	low (_loRa+169)
 13446  002DEE  24F3               	addwf	prodl,w,c
 13447  002DF0  6ED9               	movwf	fsr2l,c
 13448  002DF2  0E02               	movlw	high (_loRa+169)
 13449  002DF4  20F4               	addwfc	prodh,w,c
 13450  002DF6  6EDA               	movwf	fsr2h,c
 13451  002DF8  94DF               	bcf	indf2,2,c
 13452                           
 13453                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13454  002DFA  51A7               	movf	(_loRa+167)& (0+255),w,b
 13455  002DFC  0D02               	mullw	2
 13456  002DFE  0EA9               	movlw	low (_loRa+169)
 13457  002E00  24F3               	addwf	prodl,w,c
 13458  002E02  6ED9               	movwf	fsr2l,c
 13459  002E04  0E02               	movlw	high (_loRa+169)
 13460  002E06  20F4               	addwfc	prodh,w,c
 13461  002E08  6EDA               	movwf	fsr2h,c
 13462  002E0A  96DF               	bcf	indf2,3,c
 13463                           
 13464                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13465  002E0C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13466  002E0E  0D02               	mullw	2
 13467  002E10  0EA9               	movlw	low (_loRa+169)
 13468  002E12  24F3               	addwf	prodl,w,c
 13469  002E14  6ED9               	movwf	fsr2l,c
 13470  002E16  0E02               	movlw	high (_loRa+169)
 13471  002E18  20F4               	addwfc	prodh,w,c
 13472  002E1A  6EDA               	movwf	fsr2h,c
 13473  002E1C  98DF               	bcf	indf2,4,c
 13474                           
 13475                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13476  002E1E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13477  002E20  0D02               	mullw	2
 13478  002E22  0EA9               	movlw	low (_loRa+169)
 13479  002E24  24F3               	addwf	prodl,w,c
 13480  002E26  6ED9               	movwf	fsr2l,c
 13481  002E28  0E02               	movlw	high (_loRa+169)
 13482  002E2A  20F4               	addwfc	prodh,w,c
 13483  002E2C  6EDA               	movwf	fsr2h,c
 13484  002E2E  9ADF               	bcf	indf2,5,c
 13485                           
 13486                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13487  002E30  51A7               	movf	(_loRa+167)& (0+255),w,b
 13488  002E32  0D02               	mullw	2
 13489  002E34  0EA9               	movlw	low (_loRa+169)
 13490  002E36  24F3               	addwf	prodl,w,c
 13491  002E38  6ED9               	movwf	fsr2l,c
 13492  002E3A  0E02               	movlw	high (_loRa+169)
 13493  002E3C  20F4               	addwfc	prodh,w,c
 13494  002E3E  6EDA               	movwf	fsr2h,c
 13495  002E40  9CDF               	bcf	indf2,6,c
 13496                           
 13497                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13498  002E42  51A7               	movf	(_loRa+167)& (0+255),w,b
 13499  002E44  0D02               	mullw	2
 13500  002E46  0EA9               	movlw	low (_loRa+169)
 13501  002E48  24F3               	addwf	prodl,w,c
 13502  002E4A  6ED9               	movwf	fsr2l,c
 13503  002E4C  0E02               	movlw	high (_loRa+169)
 13504  002E4E  20F4               	addwfc	prodh,w,c
 13505  002E50  6EDA               	movwf	fsr2h,c
 13506  002E52  9EDF               	bcf	indf2,7,c
 13507                           
 13508                           ; BSR set to: 2
 13509                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13510  002E54  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13511  002E58  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13512  002E5C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13513  002E5E  0D02               	mullw	2
 13514  002E60  0EA8               	movlw	low (_loRa+168)
 13515  002E62  24F3               	addwf	prodl,w,c
 13516  002E64  6EE9               	movwf	fsr0l,c
 13517  002E66  0E02               	movlw	high (_loRa+168)
 13518  002E68  20F4               	addwfc	prodh,w,c
 13519  002E6A  6EEA               	movwf	fsr0h,c
 13520  002E6C  CFDF FFEF          	movff	indf2,indf0
 13521                           
 13522                           ;lorawan.c: 1595: switch (*ptr ++)
 13523  002E70  D060               	goto	l14099
 13524  002E72                     l14075:
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;lorawan.c: 1598: {
 13528                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13529  002E72  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13530  002E76  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13531  002E7A  EC11  F038         	call	_ExecuteLinkCheck
 13532  002E7E  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13533  002E82  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13534  002E86                     l14077:
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13538  002E86  0102               	movlb	2	; () banked
 13539  002E88  51A7               	movf	(_loRa+167)& (0+255),w,b
 13540  002E8A  0D02               	mullw	2
 13541  002E8C  0EA8               	movlw	low (_loRa+168)
 13542  002E8E  24F3               	addwf	prodl,w,c
 13543  002E90  6ED9               	movwf	fsr2l,c
 13544  002E92  0E02               	movlw	high (_loRa+168)
 13545  002E94  20F4               	addwfc	prodh,w,c
 13546  002E96  6EDA               	movwf	fsr2h,c
 13547  002E98  68DF               	setf	indf2,c
 13548                           
 13549                           ;lorawan.c: 1602: } break;
 13550  002E9A  D062               	goto	l14101
 13551  002E9C                     l14079:
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;lorawan.c: 1605: {
 13555                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13556  002E9C  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13557  002EA0  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13558  002EA4  EC8F  F01A         	call	_ExecuteLinkAdr	;wreg free
 13559  002EA8  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13560  002EAC  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13561                           
 13562                           ;lorawan.c: 1607: } break;
 13563  002EB0  D057               	goto	l14101
 13564  002EB2                     l14081:
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;lorawan.c: 1610: {
 13568                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13569  002EB2  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13570  002EB6  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13571  002EBA  ECA8  F034         	call	_ExecuteDutyCycle	;wreg free
 13572  002EBE  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13573  002EC2  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13574                           
 13575                           ;lorawan.c: 1612: } break;
 13576  002EC6  D04C               	goto	l14101
 13577  002EC8                     l14083:
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;lorawan.c: 1615: {
 13581                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13582  002EC8  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13583  002ECC  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13584  002ED0  EC45  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13585  002ED4  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13586  002ED8  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13587                           
 13588                           ;lorawan.c: 1617: } break;
 13589  002EDC  D041               	goto	l14101
 13590  002EDE                     l14085:
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;lorawan.c: 1620: {
 13594                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13595  002EDE  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13596  002EE2  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13597  002EE6  ECF0  F03B         	call	_ExecuteDevStatus	;wreg free
 13598  002EEA  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13599  002EEE  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13600                           
 13601                           ;lorawan.c: 1622: } break;
 13602  002EF2  D036               	goto	l14101
 13603  002EF4                     l14087:
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;lorawan.c: 1625: {
 13607                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13608  002EF4  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13609  002EF8  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13610  002EFC  ECAE  F019         	call	_ExecuteNewChannel	;wreg free
 13611  002F00  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13612  002F04  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13613                           
 13614                           ;lorawan.c: 1628: } break;
 13615  002F08  D02B               	goto	l14101
 13616  002F0A                     l14089:
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;lorawan.c: 1631: {
 13620                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13621  002F0A  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13622  002F0E  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13623  002F12  EC7A  F039         	call	_ExecuteRxTimingSetup	;wreg free
 13624  002F16  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13625  002F1A  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13626                           
 13627                           ;lorawan.c: 1633: } break;
 13628  002F1E  D020               	goto	l14101
 13629  002F20                     l14091:
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;lorawan.c: 1636: {
 13633                           ;lorawan.c: 1637: done = 1;
 13634  002F20  0E01               	movlw	1
 13635  002F22  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13639  002F24  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13640  002F26  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13641  002F28  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13642  002F2A  0E00               	movlw	0
 13643  002F2C  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13644  002F2E  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13645  002F30  D7AA               	goto	l14077
 13646  002F32                     l14099:
 13647                           
 13648                           ; BSR set to: 2
 13649  002F32  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13650  002F36  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13651  002F3A  0100               	movlb	0	; () banked
 13652  002F3C  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13653  002F3E  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13654  002F40  50DF               	movf	indf2,w,c
 13655                           
 13656                           ; Switch size 1, requested type "speed"
 13657                           ; Number of cases is 7, Range of values is 2 to 8
 13658                           ; switch strategies available:
 13659                           ; Name         Instructions Cycles
 13660                           ; simple_byte           22    12 (average)
 13661                           ;	Chosen strategy is simple_byte
 13662  002F42  0A02               	xorlw	2	; case 2
 13663  002F44  E096               	bz	l14075
 13664  002F46  0A01               	xorlw	1	; case 3
 13665  002F48  E0A9               	bz	l14079
 13666  002F4A  0A07               	xorlw	7	; case 4
 13667  002F4C  E0B2               	bz	l14081
 13668  002F4E  0A01               	xorlw	1	; case 5
 13669  002F50  E0BB               	bz	l14083
 13670  002F52  0A03               	xorlw	3	; case 6
 13671  002F54  E0C4               	bz	l14085
 13672  002F56  0A01               	xorlw	1	; case 7
 13673  002F58  E0CD               	bz	l14087
 13674  002F5A  0A0F               	xorlw	15	; case 8
 13675  002F5C  E0D6               	bz	l14089
 13676  002F5E  D7E0               	goto	l14091
 13677  002F60                     l14101:
 13678                           
 13679                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13680                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13681  002F60  0102               	movlb	2	; () banked
 13682  002F62  51A7               	movf	(_loRa+167)& (0+255),w,b
 13683  002F64  0D02               	mullw	2
 13684  002F66  0EA8               	movlw	low (_loRa+168)
 13685  002F68  24F3               	addwf	prodl,w,c
 13686  002F6A  6ED9               	movwf	fsr2l,c
 13687  002F6C  0E02               	movlw	high (_loRa+168)
 13688  002F6E  20F4               	addwfc	prodh,w,c
 13689  002F70  6EDA               	movwf	fsr2h,c
 13690  002F72  28DE               	incf	postinc2,w,c
 13691  002F74  E004               	bz	l14107
 13692                           
 13693                           ; BSR set to: 2
 13694  002F76  0E10               	movlw	16
 13695  002F78  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13696  002F7A  D001               	goto	l14107
 13697                           
 13698                           ; BSR set to: 2
 13699                           ;lorawan.c: 1645: {
 13700                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13701  002F7C  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13702  002F7E                     l14107:
 13703  002F7E  0100               	movlb	0	; () banked
 13704  002F80  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13705  002F82  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13706  002F84  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13707  002F86  0E00               	movlw	0
 13708  002F88  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13709  002F8A  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13710  002F8C  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13711  002F8E  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13712  002F90  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13713  002F92  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13714  002F94  E203               	bc	l14111
 13715                           
 13716                           ; BSR set to: 0
 13717  002F96  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13718  002F98  E101 D713          	bz	l14071
 13719  002F9C                     l14111:
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;lorawan.c: 1647: }
 13723                           ;lorawan.c: 1648: }
 13724                           ;lorawan.c: 1649: return ptr;
 13725  002F9C  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13726  002FA0  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13727                           
 13728                           ; BSR set to: 0
 13729  002FA4  0012               	return		;funcret
 13730  002FA6                     __end_of_MacExecuteCommands:
 13731                           	opt stack 0
 13732                           tosu	equ	0xFFF
 13733                           tosh	equ	0xFFE
 13734                           tosl	equ	0xFFD
 13735                           pclath	equ	0xFFA
 13736                           tblptru	equ	0xFF8
 13737                           tblptrh	equ	0xFF7
 13738                           tblptrl	equ	0xFF6
 13739                           tablat	equ	0xFF5
 13740                           prodh	equ	0xFF4
 13741                           prodl	equ	0xFF3
 13742                           intcon	equ	0xFF2
 13743                           intcon2	equ	0xFF1
 13744                           intcon3	equ	0xFF0
 13745                           indf0	equ	0xFEF
 13746                           postinc0	equ	0xFEE
 13747                           fsr0h	equ	0xFEA
 13748                           fsr0l	equ	0xFE9
 13749                           wreg	equ	0xFE8
 13750                           postinc1	equ	0xFE6
 13751                           postdec1	equ	0xFE5
 13752                           plusw1	equ	0xFE3
 13753                           fsr1h	equ	0xFE2
 13754                           fsr1l	equ	0xFE1
 13755                           indf2	equ	0xFDF
 13756                           postinc2	equ	0xFDE
 13757                           postdec2	equ	0xFDD
 13758                           fsr2h	equ	0xFDA
 13759                           fsr2l	equ	0xFD9
 13760                           status	equ	0xFD8
 13761                           
 13762 ;; *************** function _ExecuteRxTimingSetup *****************
 13763 ;; Defined at:
 13764 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13767 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;  delay           1   11[BANK0 ] unsigned char 
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  2    9[BANK0 ] PTR unsigned char 
 13772 ;; Registers used:
 13773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13774 ;; Tracked objects:
 13775 ;;		On entry : F/0
 13776 ;;		On exit  : F/2
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;Total ram usage:        3 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    8
 13786 ;; This function calls:
 13787 ;;		_UpdateReceiveDelays
 13788 ;; This function is called by:
 13789 ;;		_MacExecuteCommands
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text71
 13794  0072F4                     __ptext71:
 13795                           	opt stack 0
 13796  0072F4                     _ExecuteRxTimingSetup:
 13797                           	opt stack 17
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;lorawan.c: 1661: uint8_t delay;
 13801                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;incstack = 0
 13805  0072F4  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13806  0072F8  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13807  0072FC  50DF               	movf	indf2,w,c
 13808  0072FE  0B0F               	andlw	15
 13809  007300  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;lorawan.c: 1664: ptr++;
 13813  007302  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13814  007304  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13818  007306  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13819  007308  EC6A  F035         	call	_UpdateReceiveDelays
 13820                           
 13821                           ; BSR set to: 2
 13822                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13823  00730C  8104               	bsf	(_loRa+4)& (0+255),0,b
 13824                           
 13825                           ; BSR set to: 2
 13826                           ;lorawan.c: 1669: return ptr;
 13827  00730E  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13828  007312  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13829                           
 13830                           ; BSR set to: 2
 13831  007316  0012               	return		;funcret
 13832  007318                     __end_of_ExecuteRxTimingSetup:
 13833                           	opt stack 0
 13834                           tosu	equ	0xFFF
 13835                           tosh	equ	0xFFE
 13836                           tosl	equ	0xFFD
 13837                           pclath	equ	0xFFA
 13838                           tblptru	equ	0xFF8
 13839                           tblptrh	equ	0xFF7
 13840                           tblptrl	equ	0xFF6
 13841                           tablat	equ	0xFF5
 13842                           prodh	equ	0xFF4
 13843                           prodl	equ	0xFF3
 13844                           intcon	equ	0xFF2
 13845                           intcon2	equ	0xFF1
 13846                           intcon3	equ	0xFF0
 13847                           indf0	equ	0xFEF
 13848                           postinc0	equ	0xFEE
 13849                           fsr0h	equ	0xFEA
 13850                           fsr0l	equ	0xFE9
 13851                           wreg	equ	0xFE8
 13852                           postinc1	equ	0xFE6
 13853                           postdec1	equ	0xFE5
 13854                           plusw1	equ	0xFE3
 13855                           fsr1h	equ	0xFE2
 13856                           fsr1l	equ	0xFE1
 13857                           indf2	equ	0xFDF
 13858                           postinc2	equ	0xFDE
 13859                           postdec2	equ	0xFDD
 13860                           fsr2h	equ	0xFDA
 13861                           fsr2l	equ	0xFD9
 13862                           status	equ	0xFD8
 13863                           
 13864 ;; *************** function _UpdateReceiveDelays *****************
 13865 ;; Defined at:
 13866 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13867 ;; Parameters:    Size  Location     Type
 13868 ;;  delay           1    wreg     unsigned char 
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;  delay           1    8[BANK0 ] unsigned char 
 13871 ;; Return value:  Size  Location     Type
 13872 ;;                  1    wreg      void 
 13873 ;; Registers used:
 13874 ;;		wreg, status,2, status,0, prodl, prodh
 13875 ;; Tracked objects:
 13876 ;;		On entry : E/1
 13877 ;;		On exit  : F/2
 13878 ;;		Unchanged: 0/0
 13879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13882 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13883 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13884 ;;Total ram usage:        5 bytes
 13885 ;; Hardware stack levels used:    1
 13886 ;; Hardware stack levels required when called:    7
 13887 ;; This function calls:
 13888 ;;		Nothing
 13889 ;; This function is called by:
 13890 ;;		_LORAWAN_RxDone
 13891 ;;		_ExecuteRxTimingSetup
 13892 ;; This function uses a non-reentrant model
 13893 ;;
 13894                           
 13895                           	psect	text72
 13896  006AD4                     __ptext72:
 13897                           	opt stack 0
 13898  006AD4                     _UpdateReceiveDelays:
 13899                           	opt stack 19
 13900                           
 13901                           ; BSR set to: 2
 13902                           ;incstack = 0
 13903                           ;UpdateReceiveDelays@delay stored from wreg
 13904  006AD4  0100               	movlb	0	; () banked
 13905  006AD6  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13906                           
 13907                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13908  006AD8  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13909  006ADA  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13910  006ADC  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13911  006ADE  0EE8               	movlw	232
 13912  006AE0  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13913  006AE2  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13914  006AE6  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13915  006AEA  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13916  006AEC  50F3               	movf	prodl,w,c
 13917  006AEE  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13918  006AF0  0E03               	movlw	3
 13919  006AF2  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13920  006AF4  50F3               	movf	prodl,w,c
 13921  006AF6  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13922  006AF8  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13923  006AFC  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;lorawan.c: 2029: if (delay == 0)
 13927  006B00  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13928  006B02  E105               	bnz	l13157
 13929                           
 13930                           ; BSR set to: 0
 13931                           ;lorawan.c: 2030: {
 13932                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13933  006B04  0E03               	movlw	3
 13934  006B06  0102               	movlb	2	; () banked
 13935  006B08  6F95               	movwf	(_loRa+149)& (0+255),b
 13936  006B0A  0EE8               	movlw	232
 13937  006B0C  6F94               	movwf	(_loRa+148)& (0+255),b
 13938  006B0E                     l13157:
 13939                           
 13940                           ;lorawan.c: 2032: }
 13941                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13942  006B0E  0EE8               	movlw	232
 13943  006B10  0102               	movlb	2	; () banked
 13944  006B12  2594               	addwf	(_loRa+148)& (0+255),w,b
 13945  006B14  6F96               	movwf	(_loRa+150)& (0+255),b
 13946  006B16  0E03               	movlw	3
 13947  006B18  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13948  006B1A  6F97               	movwf	(_loRa+151)& (0+255),b
 13949                           
 13950                           ; BSR set to: 2
 13951  006B1C  0012               	return		;funcret
 13952  006B1E                     __end_of_UpdateReceiveDelays:
 13953                           	opt stack 0
 13954                           tosu	equ	0xFFF
 13955                           tosh	equ	0xFFE
 13956                           tosl	equ	0xFFD
 13957                           pclath	equ	0xFFA
 13958                           tblptru	equ	0xFF8
 13959                           tblptrh	equ	0xFF7
 13960                           tblptrl	equ	0xFF6
 13961                           tablat	equ	0xFF5
 13962                           prodh	equ	0xFF4
 13963                           prodl	equ	0xFF3
 13964                           intcon	equ	0xFF2
 13965                           intcon2	equ	0xFF1
 13966                           intcon3	equ	0xFF0
 13967                           indf0	equ	0xFEF
 13968                           postinc0	equ	0xFEE
 13969                           fsr0h	equ	0xFEA
 13970                           fsr0l	equ	0xFE9
 13971                           wreg	equ	0xFE8
 13972                           postinc1	equ	0xFE6
 13973                           postdec1	equ	0xFE5
 13974                           plusw1	equ	0xFE3
 13975                           fsr1h	equ	0xFE2
 13976                           fsr1l	equ	0xFE1
 13977                           indf2	equ	0xFDF
 13978                           postinc2	equ	0xFDE
 13979                           postdec2	equ	0xFDD
 13980                           fsr2h	equ	0xFDA
 13981                           fsr2l	equ	0xFD9
 13982                           status	equ	0xFD8
 13983                           
 13984 ;; *************** function _ExecuteRxParamSetupReq *****************
 13985 ;; Defined at:
 13986 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 13989 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13990 ;; Auto vars:     Size  Location     Type
 13991 ;;  frequency       4   18[BANK0 ] unsigned long 
 13992 ;;  dlSettings      1   22[BANK0 ] struct .
 13993 ;; Return value:  Size  Location     Type
 13994 ;;                  2   16[BANK0 ] PTR unsigned char 
 13995 ;; Registers used:
 13996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13997 ;; Tracked objects:
 13998 ;;		On entry : F/0
 13999 ;;		On exit  : F/2
 14000 ;;		Unchanged: 0/0
 14001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14003 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;Total ram usage:        7 bytes
 14007 ;; Hardware stack levels used:    1
 14008 ;; Hardware stack levels required when called:    8
 14009 ;; This function calls:
 14010 ;;		_UpdateReceiveWindow2Parameters
 14011 ;;		_ValidateDataRate
 14012 ;;		_ValidateFrequency
 14013 ;;		_ValidateRxOffset
 14014 ;;		___lmul
 14015 ;; This function is called by:
 14016 ;;		_MacExecuteCommands
 14017 ;; This function uses a non-reentrant model
 14018 ;;
 14019                           
 14020                           	psect	text73
 14021  00428A                     __ptext73:
 14022                           	opt stack 0
 14023  00428A                     _ExecuteRxParamSetupReq:
 14024                           	opt stack 17
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14028                           
 14029                           ; BSR set to: 0
 14030                           
 14031                           ; BSR set to: 2
 14032                           ;incstack = 0
 14033  00428A  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14034  00428E  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14035  004292  50DF               	movf	indf2,w,c
 14036  004294  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14037                           
 14038                           ; BSR set to: 0
 14039  004296  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14040  004298  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14044  00429A  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14045  00429E  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14046  0042A2  0EFF               	movlw	255
 14047  0042A4  14DE               	andwf	postinc2,w,c
 14048  0042A6  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14049  0042A8  0EFF               	movlw	255
 14050  0042AA  14DE               	andwf	postinc2,w,c
 14051  0042AC  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14052  0042AE  0EFF               	movlw	255
 14053  0042B0  14DE               	andwf	postinc2,w,c
 14054  0042B2  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14055  0042B4  0E00               	movlw	0
 14056  0042B6  14DE               	andwf	postinc2,w,c
 14057  0042B8  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14058                           
 14059                           ; BSR set to: 0
 14060                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14061  0042BA  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14062  0042BE  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14063  0042C2  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14064  0042C6  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14065  0042CA  0E64               	movlw	100
 14066  0042CC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14067  0042CE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14068  0042D0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14069  0042D2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14070  0042D4  EC8F  F02E         	call	___lmul	;wreg free
 14071  0042D8  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14072  0042DC  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14073  0042E0  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14074  0042E4  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14078  0042E8  0E03               	movlw	3
 14079  0042EA  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14080  0042EC  0E00               	movlw	0
 14081  0042EE  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14085  0042F0  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14086  0042F4  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14087  0042F8  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14088  0042FC  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14089  004300  ECA7  F033         	call	_ValidateFrequency	;wreg free
 14090  004304  0900               	iorlw	0
 14091  004306  E10A               	bnz	l13591
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;lorawan_eu.c: 754: {
 14095                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14096  004308  0102               	movlb	2	; () banked
 14097  00430A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14098  00430C  0D02               	mullw	2
 14099  00430E  0EA9               	movlw	low (_loRa+169)
 14100  004310  24F3               	addwf	prodl,w,c
 14101  004312  6ED9               	movwf	fsr2l,c
 14102  004314  0E02               	movlw	high (_loRa+169)
 14103  004316  20F4               	addwfc	prodh,w,c
 14104  004318  6EDA               	movwf	fsr2h,c
 14105  00431A  86DF               	bsf	indf2,3,c
 14106  00431C                     l13591:
 14107                           
 14108                           ;lorawan_eu.c: 756: }
 14109                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14110  00431C  0100               	movlb	0	; () banked
 14111  00431E  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14112  004320  0B0F               	andlw	15
 14113  004322  EC4A  F03B         	call	_ValidateDataRate
 14114  004326  0900               	iorlw	0
 14115  004328  E10A               	bnz	l13595
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;lorawan_eu.c: 759: {
 14119                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14120  00432A  0102               	movlb	2	; () banked
 14121  00432C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14122  00432E  0D02               	mullw	2
 14123  004330  0EA9               	movlw	low (_loRa+169)
 14124  004332  24F3               	addwf	prodl,w,c
 14125  004334  6ED9               	movwf	fsr2l,c
 14126  004336  0E02               	movlw	high (_loRa+169)
 14127  004338  20F4               	addwfc	prodh,w,c
 14128  00433A  6EDA               	movwf	fsr2h,c
 14129  00433C  88DF               	bsf	indf2,4,c
 14130  00433E                     l13595:
 14131                           
 14132                           ;lorawan_eu.c: 761: }
 14133                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14134  00433E  0100               	movlb	0	; () banked
 14135  004340  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14136  004342  0B07               	andlw	7
 14137  004344  EC40  F03B         	call	_ValidateRxOffset
 14138  004348  0900               	iorlw	0
 14139  00434A  E10A               	bnz	l1127
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;lorawan_eu.c: 764: {
 14143                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14144  00434C  0102               	movlb	2	; () banked
 14145  00434E  51A7               	movf	(_loRa+167)& (0+255),w,b
 14146  004350  0D02               	mullw	2
 14147  004352  0EA9               	movlw	low (_loRa+169)
 14148  004354  24F3               	addwf	prodl,w,c
 14149  004356  6ED9               	movwf	fsr2l,c
 14150  004358  0E02               	movlw	high (_loRa+169)
 14151  00435A  20F4               	addwfc	prodh,w,c
 14152  00435C  6EDA               	movwf	fsr2h,c
 14153  00435E  8ADF               	bsf	indf2,5,c
 14154  004360                     l1127:
 14155                           
 14156                           ;lorawan_eu.c: 766: }
 14157                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14158  004360  0102               	movlb	2	; () banked
 14159  004362  51A7               	movf	(_loRa+167)& (0+255),w,b
 14160  004364  0D02               	mullw	2
 14161  004366  0EA9               	movlw	low (_loRa+169)
 14162  004368  24F3               	addwf	prodl,w,c
 14163  00436A  6ED9               	movwf	fsr2l,c
 14164  00436C  0E02               	movlw	high (_loRa+169)
 14165  00436E  20F4               	addwfc	prodh,w,c
 14166  004370  6EDA               	movwf	fsr2h,c
 14167  004372  A8DF               	btfss	indf2,4,c
 14168  004374  D029               	goto	l13609
 14169                           
 14170                           ; BSR set to: 2
 14171  004376  51A7               	movf	(_loRa+167)& (0+255),w,b
 14172  004378  0D02               	mullw	2
 14173  00437A  0EA9               	movlw	low (_loRa+169)
 14174  00437C  24F3               	addwf	prodl,w,c
 14175  00437E  6ED9               	movwf	fsr2l,c
 14176  004380  0E02               	movlw	high (_loRa+169)
 14177  004382  20F4               	addwfc	prodh,w,c
 14178  004384  6EDA               	movwf	fsr2h,c
 14179  004386  A6DF               	btfss	indf2,3,c
 14180  004388  D01F               	goto	l13609
 14181                           
 14182                           ; BSR set to: 2
 14183  00438A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14184  00438C  0D02               	mullw	2
 14185  00438E  0EA9               	movlw	low (_loRa+169)
 14186  004390  24F3               	addwf	prodl,w,c
 14187  004392  6ED9               	movwf	fsr2l,c
 14188  004394  0E02               	movlw	high (_loRa+169)
 14189  004396  20F4               	addwfc	prodh,w,c
 14190  004398  6EDA               	movwf	fsr2h,c
 14191  00439A  AADF               	btfss	indf2,5,c
 14192  00439C  D015               	goto	l13609
 14193                           
 14194                           ; BSR set to: 2
 14195                           ;lorawan_eu.c: 769: {
 14196                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14197  00439E  0100               	movlb	0	; () banked
 14198  0043A0  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14199  0043A2  0B07               	andlw	7
 14200  0043A4  0102               	movlb	2	; () banked
 14201  0043A6  6FEF               	movwf	(_loRa+239)& (0+255),b
 14202                           
 14203                           ; BSR set to: 2
 14204                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14205  0043A8  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14206  0043AC  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14207  0043B0  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14208  0043B4  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14209  0043B8  0100               	movlb	0	; () banked
 14210  0043BA  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14211  0043BC  0B0F               	andlw	15
 14212  0043BE  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14213  0043C0  EC2A  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14214                           
 14215                           ; BSR set to: 0
 14216                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14217  0043C4  0102               	movlb	2	; () banked
 14218  0043C6  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14219  0043C8                     l13609:
 14220                           
 14221                           ; BSR set to: 2
 14222                           ;lorawan_eu.c: 773: }
 14223                           ;lorawan_eu.c: 775: return ptr;
 14224  0043C8  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14225  0043CC  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14226                           
 14227                           ; BSR set to: 2
 14228  0043D0  0012               	return		;funcret
 14229  0043D2                     __end_of_ExecuteRxParamSetupReq:
 14230                           	opt stack 0
 14231                           tosu	equ	0xFFF
 14232                           tosh	equ	0xFFE
 14233                           tosl	equ	0xFFD
 14234                           pclath	equ	0xFFA
 14235                           tblptru	equ	0xFF8
 14236                           tblptrh	equ	0xFF7
 14237                           tblptrl	equ	0xFF6
 14238                           tablat	equ	0xFF5
 14239                           prodh	equ	0xFF4
 14240                           prodl	equ	0xFF3
 14241                           intcon	equ	0xFF2
 14242                           intcon2	equ	0xFF1
 14243                           intcon3	equ	0xFF0
 14244                           indf0	equ	0xFEF
 14245                           postinc0	equ	0xFEE
 14246                           fsr0h	equ	0xFEA
 14247                           fsr0l	equ	0xFE9
 14248                           wreg	equ	0xFE8
 14249                           postinc1	equ	0xFE6
 14250                           postdec1	equ	0xFE5
 14251                           plusw1	equ	0xFE3
 14252                           fsr1h	equ	0xFE2
 14253                           fsr1l	equ	0xFE1
 14254                           indf2	equ	0xFDF
 14255                           postinc2	equ	0xFDE
 14256                           postdec2	equ	0xFDD
 14257                           fsr2h	equ	0xFDA
 14258                           fsr2l	equ	0xFD9
 14259                           status	equ	0xFD8
 14260                           
 14261 ;; *************** function _ValidateRxOffset *****************
 14262 ;; Defined at:
 14263 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  rxOffset        1    wreg     unsigned char 
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14268 ;;  result          1    5[BANK0 ] enum E8016
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  1    wreg      enum E8016
 14271 ;; Registers used:
 14272 ;;		wreg, status,2, status,0
 14273 ;; Tracked objects:
 14274 ;;		On entry : F/0
 14275 ;;		On exit  : F/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14281 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14282 ;;Total ram usage:        2 bytes
 14283 ;; Hardware stack levels used:    1
 14284 ;; Hardware stack levels required when called:    7
 14285 ;; This function calls:
 14286 ;;		Nothing
 14287 ;; This function is called by:
 14288 ;;		_ExecuteRxParamSetupReq
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text74
 14293  007680                     __ptext74:
 14294                           	opt stack 0
 14295  007680                     _ValidateRxOffset:
 14296                           	opt stack 17
 14297                           
 14298                           ; BSR set to: 2
 14299                           ;incstack = 0
 14300                           ;ValidateRxOffset@rxOffset stored from wreg
 14301  007680  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14302                           
 14303                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14304  007682  0100               	movlb	0	; () banked
 14305  007684  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14309  007686  0E05               	movlw	5
 14310  007688  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14311  00768A  D002               	goto	l1223
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;lorawan_eu.c: 1081: {
 14315                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14316  00768C  0E03               	movlw	3
 14317  00768E  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14318  007690                     l1223:
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;lorawan_eu.c: 1083: }
 14322                           ;lorawan_eu.c: 1085: return result;
 14323  007690  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14324                           
 14325                           ; BSR set to: 0
 14326  007692  0012               	return		;funcret
 14327  007694                     __end_of_ValidateRxOffset:
 14328                           	opt stack 0
 14329                           tosu	equ	0xFFF
 14330                           tosh	equ	0xFFE
 14331                           tosl	equ	0xFFD
 14332                           pclath	equ	0xFFA
 14333                           tblptru	equ	0xFF8
 14334                           tblptrh	equ	0xFF7
 14335                           tblptrl	equ	0xFF6
 14336                           tablat	equ	0xFF5
 14337                           prodh	equ	0xFF4
 14338                           prodl	equ	0xFF3
 14339                           intcon	equ	0xFF2
 14340                           intcon2	equ	0xFF1
 14341                           intcon3	equ	0xFF0
 14342                           indf0	equ	0xFEF
 14343                           postinc0	equ	0xFEE
 14344                           fsr0h	equ	0xFEA
 14345                           fsr0l	equ	0xFE9
 14346                           wreg	equ	0xFE8
 14347                           postinc1	equ	0xFE6
 14348                           postdec1	equ	0xFE5
 14349                           plusw1	equ	0xFE3
 14350                           fsr1h	equ	0xFE2
 14351                           fsr1l	equ	0xFE1
 14352                           indf2	equ	0xFDF
 14353                           postinc2	equ	0xFDE
 14354                           postdec2	equ	0xFDD
 14355                           fsr2h	equ	0xFDA
 14356                           fsr2l	equ	0xFD9
 14357                           status	equ	0xFD8
 14358                           
 14359 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14360 ;; Defined at:
 14361 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  frequency       4    4[BANK0 ] unsigned long 
 14364 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      void 
 14369 ;; Registers used:
 14370 ;;		None
 14371 ;; Tracked objects:
 14372 ;;		On entry : F/0
 14373 ;;		On exit  : F/0
 14374 ;;		Unchanged: F/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14376 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14379 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14380 ;;Total ram usage:        5 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:    7
 14383 ;; This function calls:
 14384 ;;		Nothing
 14385 ;; This function is called by:
 14386 ;;		_ExecuteRxParamSetupReq
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           	psect	text75
 14391  007654                     __ptext75:
 14392                           	opt stack 0
 14393  007654                     _UpdateReceiveWindow2Parameters:
 14394                           	opt stack 17
 14395                           
 14396                           ; BSR set to: 0
 14397                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;incstack = 0
 14401  007654  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14402                           
 14403                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14404  007658  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14405  00765C  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14406  007660  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14407  007664  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14408                           
 14409                           ; BSR set to: 0
 14410  007668  0012               	return		;funcret
 14411  00766A                     __end_of_UpdateReceiveWindow2Parameters:
 14412                           	opt stack 0
 14413                           tosu	equ	0xFFF
 14414                           tosh	equ	0xFFE
 14415                           tosl	equ	0xFFD
 14416                           pclath	equ	0xFFA
 14417                           tblptru	equ	0xFF8
 14418                           tblptrh	equ	0xFF7
 14419                           tblptrl	equ	0xFF6
 14420                           tablat	equ	0xFF5
 14421                           prodh	equ	0xFF4
 14422                           prodl	equ	0xFF3
 14423                           intcon	equ	0xFF2
 14424                           intcon2	equ	0xFF1
 14425                           intcon3	equ	0xFF0
 14426                           indf0	equ	0xFEF
 14427                           postinc0	equ	0xFEE
 14428                           fsr0h	equ	0xFEA
 14429                           fsr0l	equ	0xFE9
 14430                           wreg	equ	0xFE8
 14431                           postinc1	equ	0xFE6
 14432                           postdec1	equ	0xFE5
 14433                           plusw1	equ	0xFE3
 14434                           fsr1h	equ	0xFE2
 14435                           fsr1l	equ	0xFE1
 14436                           indf2	equ	0xFDF
 14437                           postinc2	equ	0xFDE
 14438                           postdec2	equ	0xFDD
 14439                           fsr2h	equ	0xFDA
 14440                           fsr2l	equ	0xFD9
 14441                           status	equ	0xFD8
 14442                           
 14443 ;; *************** function _ExecuteNewChannel *****************
 14444 ;; Defined at:
 14445 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14448 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;  frequency       4   19[BANK0 ] unsigned long 
 14451 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14452 ;;  drRange         1   18[BANK0 ] struct .
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  2   16[BANK0 ] PTR unsigned char 
 14455 ;; Registers used:
 14456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14457 ;; Tracked objects:
 14458 ;;		On entry : F/0
 14459 ;;		On exit  : F/2
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14465 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;Total ram usage:        8 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    9
 14469 ;; This function calls:
 14470 ;;		_LORAWAN_SetChannelIdStatus
 14471 ;;		_UpdateChannelIdStatus
 14472 ;;		_UpdateDataRange
 14473 ;;		_UpdateDutyCycle
 14474 ;;		_UpdateFrequency
 14475 ;;		_ValidateChannelId
 14476 ;;		_ValidateDataRange
 14477 ;;		_ValidateFrequency
 14478 ;;		___lmul
 14479 ;; This function is called by:
 14480 ;;		_MacExecuteCommands
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           	psect	text76
 14485  00335C                     __ptext76:
 14486                           	opt stack 0
 14487  00335C                     _ExecuteNewChannel:
 14488                           	opt stack 16
 14489                           
 14490                           ; BSR set to: 0
 14491                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14492                           
 14493                           ; BSR set to: 0
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;incstack = 0
 14497  00335C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14498  003360  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14499  003364  50DF               	movf	indf2,w,c
 14500  003366  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14501                           
 14502                           ; BSR set to: 0
 14503  003368  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14504  00336A  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14508  00336C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14509  003370  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14510  003374  0EFF               	movlw	255
 14511  003376  14DE               	andwf	postinc2,w,c
 14512  003378  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14513  00337A  0EFF               	movlw	255
 14514  00337C  14DE               	andwf	postinc2,w,c
 14515  00337E  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14516  003380  0EFF               	movlw	255
 14517  003382  14DE               	andwf	postinc2,w,c
 14518  003384  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14519  003386  0E00               	movlw	0
 14520  003388  14DE               	andwf	postinc2,w,c
 14521  00338A  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14522                           
 14523                           ; BSR set to: 0
 14524                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14525  00338C  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14526  003390  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14527  003394  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14528  003398  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14529  00339C  0E64               	movlw	100
 14530  00339E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14531  0033A0  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14532  0033A2  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14533  0033A4  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14534  0033A6  EC8F  F02E         	call	___lmul	;wreg free
 14535  0033AA  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14536  0033AE  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14537  0033B2  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14538  0033B6  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14542  0033BA  0E03               	movlw	3
 14543  0033BC  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14544  0033BE  0E00               	movlw	0
 14545  0033C0  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14549  0033C2  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14550  0033C6  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14551  0033CA  50DF               	movf	indf2,w,c
 14552  0033CC  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14553                           
 14554                           ; BSR set to: 0
 14555  0033CE  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14556  0033D0  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14560  0033D2  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14561  0033D4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14562  0033D6  EC0E  F03A         	call	_ValidateChannelId
 14563  0033DA  0900               	iorlw	0
 14564  0033DC  E12B               	bnz	l1110
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;lorawan_eu.c: 692: {
 14568                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14569  0033DE  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14570  0033E2  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14571  0033E6  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14572  0033EA  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14573  0033EE  ECA7  F033         	call	_ValidateFrequency	;wreg free
 14574  0033F2  0900               	iorlw	0
 14575  0033F4  E005               	bz	l13547
 14576                           
 14577                           ; BSR set to: 0
 14578  0033F6  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14579  0033F8  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14580  0033FA  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14581  0033FC  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14582  0033FE  E10A               	bnz	l13549
 14583  003400                     l13547:
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;lorawan_eu.c: 694: {
 14587                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14588  003400  0102               	movlb	2	; () banked
 14589  003402  51A7               	movf	(_loRa+167)& (0+255),w,b
 14590  003404  0D02               	mullw	2
 14591  003406  0EA9               	movlw	low (_loRa+169)
 14592  003408  24F3               	addwf	prodl,w,c
 14593  00340A  6ED9               	movwf	fsr2l,c
 14594  00340C  0E02               	movlw	high (_loRa+169)
 14595  00340E  20F4               	addwfc	prodh,w,c
 14596  003410  6EDA               	movwf	fsr2h,c
 14597  003412  8EDF               	bsf	indf2,7,c
 14598  003414                     l13549:
 14599                           
 14600                           ;lorawan_eu.c: 696: }
 14601                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14602  003414  0100               	movlb	0	; () banked
 14603  003416  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14604  003418  ECC4  F037         	call	_ValidateDataRange
 14605  00341C  0900               	iorlw	0
 14606  00341E  E10A               	bnz	l1110
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;lorawan_eu.c: 699: {
 14610                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14611  003420  0102               	movlb	2	; () banked
 14612  003422  51A7               	movf	(_loRa+167)& (0+255),w,b
 14613  003424  0D02               	mullw	2
 14614  003426  0EA9               	movlw	low (_loRa+169)
 14615  003428  24F3               	addwf	prodl,w,c
 14616  00342A  6ED9               	movwf	fsr2l,c
 14617  00342C  0E02               	movlw	high (_loRa+169)
 14618  00342E  20F4               	addwfc	prodh,w,c
 14619  003430  6EDA               	movwf	fsr2h,c
 14620  003432  8CDF               	bsf	indf2,6,c
 14621  003434                     l1110:
 14622                           
 14623                           ;lorawan_eu.c: 701: }
 14624                           ;lorawan_eu.c: 702: }
 14625                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14626  003434  0102               	movlb	2	; () banked
 14627  003436  51A7               	movf	(_loRa+167)& (0+255),w,b
 14628  003438  0D02               	mullw	2
 14629  00343A  0EA9               	movlw	low (_loRa+169)
 14630  00343C  24F3               	addwf	prodl,w,c
 14631  00343E  6ED9               	movwf	fsr2l,c
 14632  003440  0E02               	movlw	high (_loRa+169)
 14633  003442  20F4               	addwfc	prodh,w,c
 14634  003444  6EDA               	movwf	fsr2h,c
 14635  003446  AEDF               	btfss	indf2,7,c
 14636  003448  D065               	goto	l13571
 14637                           
 14638                           ; BSR set to: 2
 14639  00344A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14640  00344C  0D02               	mullw	2
 14641  00344E  0EA9               	movlw	low (_loRa+169)
 14642  003450  24F3               	addwf	prodl,w,c
 14643  003452  6ED9               	movwf	fsr2l,c
 14644  003454  0E02               	movlw	high (_loRa+169)
 14645  003456  20F4               	addwfc	prodh,w,c
 14646  003458  6EDA               	movwf	fsr2h,c
 14647  00345A  ACDF               	btfss	indf2,6,c
 14648  00345C  D05B               	goto	l13571
 14649                           
 14650                           ; BSR set to: 2
 14651                           ;lorawan_eu.c: 705: {
 14652                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14653  00345E  0E10               	movlw	16
 14654  003460  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14655  003462  D029               	goto	l13563
 14656                           
 14657                           ; BSR set to: 2
 14658                           ;lorawan_eu.c: 707: {
 14659                           ;lorawan_eu.c: 708: if (frequency != 0)
 14660  003464  0100               	movlb	0	; () banked
 14661  003466  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14662  003468  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14663  00346A  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14664  00346C  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14665  00346E  E01E               	bz	l13561
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;lorawan_eu.c: 709: {
 14669                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14670  003470  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14671  003474  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14672  003478  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14673  00347C  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14674  003480  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14675  003482  EC39  F037         	call	_UpdateFrequency
 14676                           
 14677                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14678  003486  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14679  00348A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14680  00348C  ECB3  F024         	call	_UpdateDataRange
 14681                           
 14682                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14683  003490  0E01               	movlw	1
 14684  003492  0100               	movlb	0	; () banked
 14685  003494  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14686  003496  0E2E               	movlw	46
 14687  003498  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14688  00349A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14689  00349C  ECF8  F037         	call	_UpdateDutyCycle
 14690                           
 14691                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14692  0034A0  0E01               	movlw	1
 14693  0034A2  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14694  0034A4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14695  0034A6  ECAF  F023         	call	_UpdateChannelIdStatus
 14696                           
 14697                           ;lorawan_eu.c: 714: }
 14698  0034AA  D032               	goto	l13569
 14699  0034AC                     l13561:
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;lorawan_eu.c: 715: else
 14703                           ;lorawan_eu.c: 716: {
 14704                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14705  0034AC  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14706  0034AE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14707  0034B0  EC56  F037         	call	_LORAWAN_SetChannelIdStatus
 14708  0034B4  D02D               	goto	l13569
 14709  0034B6                     l13563:
 14710                           
 14711                           ; BSR set to: 2
 14712                           ;lorawan_eu.c: 720: else
 14713                           ;lorawan_eu.c: 721: {
 14714                           ;lorawan_eu.c: 722: if (frequency != 0)
 14715  0034B6  0100               	movlb	0	; () banked
 14716  0034B8  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14717  0034BA  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14718  0034BC  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14719  0034BE  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14720  0034C0  E022               	bz	l13567
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;lorawan_eu.c: 723: {
 14724                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14725  0034C2  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14726  0034C6  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14727  0034CA  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14728  0034CE  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14729  0034D2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14730  0034D4  0F10               	addlw	16
 14731  0034D6  EC39  F037         	call	_UpdateFrequency
 14732                           
 14733                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14734  0034DA  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14735  0034DE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14736  0034E0  0F10               	addlw	16
 14737  0034E2  ECB3  F024         	call	_UpdateDataRange
 14738                           
 14739                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14740  0034E6  0E01               	movlw	1
 14741  0034E8  0100               	movlb	0	; () banked
 14742  0034EA  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14743  0034EC  0E2E               	movlw	46
 14744  0034EE  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14745  0034F0  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14746  0034F2  0F10               	addlw	16
 14747  0034F4  ECF8  F037         	call	_UpdateDutyCycle
 14748                           
 14749                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14750  0034F8  0E01               	movlw	1
 14751  0034FA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14752  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14753  0034FE  0F10               	addlw	16
 14754  003500  ECAF  F023         	call	_UpdateChannelIdStatus
 14755                           
 14756                           ;lorawan_eu.c: 728: }
 14757  003504  D005               	goto	l13569
 14758  003506                     l13567:
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;lorawan_eu.c: 729: else
 14762                           ;lorawan_eu.c: 730: {
 14763                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14764  003506  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14765  003508  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14766  00350A  0F10               	addlw	16
 14767  00350C  EC56  F037         	call	_LORAWAN_SetChannelIdStatus
 14768  003510                     l13569:
 14769                           
 14770                           ;lorawan_eu.c: 732: }
 14771                           ;lorawan_eu.c: 733: }
 14772                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14773  003510  0102               	movlb	2	; () banked
 14774  003512  8703               	bsf	(_loRa+3)& (0+255),3,b
 14775  003514                     l13571:
 14776                           
 14777                           ; BSR set to: 2
 14778                           ;lorawan_eu.c: 736: }
 14779                           ;lorawan_eu.c: 737: return ptr;
 14780  003514  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14781  003518  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14782                           
 14783                           ; BSR set to: 2
 14784  00351C  0012               	return		;funcret
 14785  00351E                     __end_of_ExecuteNewChannel:
 14786                           	opt stack 0
 14787                           tosu	equ	0xFFF
 14788                           tosh	equ	0xFFE
 14789                           tosl	equ	0xFFD
 14790                           pclath	equ	0xFFA
 14791                           tblptru	equ	0xFF8
 14792                           tblptrh	equ	0xFF7
 14793                           tblptrl	equ	0xFF6
 14794                           tablat	equ	0xFF5
 14795                           prodh	equ	0xFF4
 14796                           prodl	equ	0xFF3
 14797                           intcon	equ	0xFF2
 14798                           intcon2	equ	0xFF1
 14799                           intcon3	equ	0xFF0
 14800                           indf0	equ	0xFEF
 14801                           postinc0	equ	0xFEE
 14802                           fsr0h	equ	0xFEA
 14803                           fsr0l	equ	0xFE9
 14804                           wreg	equ	0xFE8
 14805                           postinc1	equ	0xFE6
 14806                           postdec1	equ	0xFE5
 14807                           plusw1	equ	0xFE3
 14808                           fsr1h	equ	0xFE2
 14809                           fsr1l	equ	0xFE1
 14810                           indf2	equ	0xFDF
 14811                           postinc2	equ	0xFDE
 14812                           postdec2	equ	0xFDD
 14813                           fsr2h	equ	0xFDA
 14814                           fsr2l	equ	0xFD9
 14815                           status	equ	0xFD8
 14816                           
 14817 ;; *************** function _ValidateFrequency *****************
 14818 ;; Defined at:
 14819 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14820 ;; Parameters:    Size  Location     Type
 14821 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14822 ;; Auto vars:     Size  Location     Type
 14823 ;;  result          1    8[BANK0 ] enum E8016
 14824 ;; Return value:  Size  Location     Type
 14825 ;;                  1    wreg      enum E8016
 14826 ;; Registers used:
 14827 ;;		wreg, status,2, status,0
 14828 ;; Tracked objects:
 14829 ;;		On entry : F/0
 14830 ;;		On exit  : F/0
 14831 ;;		Unchanged: 0/0
 14832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14833 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14836 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14837 ;;Total ram usage:        5 bytes
 14838 ;; Hardware stack levels used:    1
 14839 ;; Hardware stack levels required when called:    7
 14840 ;; This function calls:
 14841 ;;		Nothing
 14842 ;; This function is called by:
 14843 ;;		_ExecuteNewChannel
 14844 ;;		_ExecuteRxParamSetupReq
 14845 ;;		_UpdateCfList
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849                           	psect	text77
 14850  00674E                     __ptext77:
 14851                           	opt stack 0
 14852  00674E                     _ValidateFrequency:
 14853                           	opt stack 18
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14857                           
 14858                           ; BSR set to: 2
 14859                           ;incstack = 0
 14860  00674E  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14861                           
 14862                           ; BSR set to: 0
 14863                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14864  006750  0102               	movlb	2	; () banked
 14865  006752  51A4               	movf	(_loRa+164)& (0+255),w,b
 14866  006754  E116               	bnz	l12817
 14867                           
 14868                           ; BSR set to: 2
 14869                           ;lorawan_eu.c: 1093: {
 14870                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14871  006756  0E81               	movlw	129
 14872  006758  0100               	movlb	0	; () banked
 14873  00675A  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14874  00675C  0E25               	movlw	37
 14875  00675E  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14876  006760  0EDB               	movlw	219
 14877  006762  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14878  006764  0E33               	movlw	51
 14879  006766  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14880  006768  E209               	bc	l12815
 14881                           
 14882                           ; BSR set to: 0
 14883  00676A  0EC0               	movlw	192
 14884  00676C  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14885  00676E  0E55               	movlw	85
 14886  006770  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14887  006772  0E70               	movlw	112
 14888  006774  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14889  006776  0E33               	movlw	51
 14890  006778  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14891  00677A  E215               	bc	l1231
 14892  00677C                     l12815:
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;lorawan_eu.c: 1095: {
 14896                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14897  00677C  0E03               	movlw	3
 14898  00677E  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14899  006780  D012               	goto	l1231
 14900  006782                     l12817:
 14901                           
 14902                           ; BSR set to: 2
 14903                           ;lorawan_eu.c: 1099: else
 14904                           ;lorawan_eu.c: 1100: {
 14905                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14906  006782  0E71               	movlw	113
 14907  006784  0100               	movlb	0	; () banked
 14908  006786  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14909  006788  0E5E               	movlw	94
 14910  00678A  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14911  00678C  0EEA               	movlw	234
 14912  00678E  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14913  006790  0E19               	movlw	25
 14914  006792  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14915  006794  E2F3               	bc	l12815
 14916                           
 14917                           ; BSR set to: 0
 14918  006796  0E90               	movlw	144
 14919  006798  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14920  00679A  0ED1               	movlw	209
 14921  00679C  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14922  00679E  0ECF               	movlw	207
 14923  0067A0  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14924  0067A2  0E19               	movlw	25
 14925  0067A4  D7E9               	goto	L7
 14926  0067A6                     l1231:
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;lorawan_eu.c: 1104: }
 14930                           ;lorawan_eu.c: 1105: }
 14931                           ;lorawan_eu.c: 1107: return result;
 14932  0067A6  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14933                           
 14934                           ; BSR set to: 0
 14935  0067A8  0012               	return		;funcret
 14936  0067AA                     __end_of_ValidateFrequency:
 14937                           	opt stack 0
 14938                           tosu	equ	0xFFF
 14939                           tosh	equ	0xFFE
 14940                           tosl	equ	0xFFD
 14941                           pclath	equ	0xFFA
 14942                           tblptru	equ	0xFF8
 14943                           tblptrh	equ	0xFF7
 14944                           tblptrl	equ	0xFF6
 14945                           tablat	equ	0xFF5
 14946                           prodh	equ	0xFF4
 14947                           prodl	equ	0xFF3
 14948                           intcon	equ	0xFF2
 14949                           intcon2	equ	0xFF1
 14950                           intcon3	equ	0xFF0
 14951                           indf0	equ	0xFEF
 14952                           postinc0	equ	0xFEE
 14953                           fsr0h	equ	0xFEA
 14954                           fsr0l	equ	0xFE9
 14955                           wreg	equ	0xFE8
 14956                           postinc1	equ	0xFE6
 14957                           postdec1	equ	0xFE5
 14958                           plusw1	equ	0xFE3
 14959                           fsr1h	equ	0xFE2
 14960                           fsr1l	equ	0xFE1
 14961                           indf2	equ	0xFDF
 14962                           postinc2	equ	0xFDE
 14963                           postdec2	equ	0xFDD
 14964                           fsr2h	equ	0xFDA
 14965                           fsr2l	equ	0xFD9
 14966                           status	equ	0xFD8
 14967                           
 14968 ;; *************** function _ValidateDataRange *****************
 14969 ;; Defined at:
 14970 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;  dataRangeNew    1    wreg     unsigned char 
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 14975 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 14976 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 14977 ;;  result          1    6[BANK0 ] enum E8016
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  1    wreg      enum E8016
 14980 ;; Registers used:
 14981 ;;		wreg, status,2, status,0, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : F/0
 14984 ;;		On exit  : F/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14988 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14990 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14991 ;;Total ram usage:        4 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:    8
 14994 ;; This function calls:
 14995 ;;		_ValidateDataRate
 14996 ;; This function is called by:
 14997 ;;		_ExecuteNewChannel
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text78
 15002  006F88                     __ptext78:
 15003                           	opt stack 0
 15004  006F88                     _ValidateDataRange:
 15005                           	opt stack 16
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;incstack = 0
 15009                           ;ValidateDataRange@dataRangeNew stored from wreg
 15010  006F88  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15011                           
 15012                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15013  006F8A  0100               	movlb	0	; () banked
 15014  006F8C  6B66               	clrf	ValidateDataRange@result& (0+255),b
 15015                           
 15016                           ; BSR set to: 0
 15017                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15018                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15019  006F8E  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15020  006F90  0B0F               	andlw	15
 15021  006F92  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15022                           
 15023                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15024  006F94  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15025  006F96  0B0F               	andlw	15
 15026  006F98  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15030  006F9A  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15031  006F9C  EC4A  F03B         	call	_ValidateDataRate
 15032  006FA0  0900               	iorlw	0
 15033  006FA2  E108               	bnz	l12837
 15034                           
 15035                           ; BSR set to: 0
 15036  006FA4  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15037  006FA6  EC4A  F03B         	call	_ValidateDataRate
 15038  006FAA  0900               	iorlw	0
 15039  006FAC  E103               	bnz	l12837
 15040                           
 15041                           ; BSR set to: 0
 15042  006FAE  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15043  006FB0  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15044  006FB2  E202               	bc	l1238
 15045  006FB4                     l12837:
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;lorawan_eu.c: 1119: {
 15049                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15050  006FB4  0E03               	movlw	3
 15051  006FB6  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15052  006FB8                     l1238:
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;lorawan_eu.c: 1121: }
 15056                           ;lorawan_eu.c: 1122: return result;
 15057  006FB8  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15058                           
 15059                           ; BSR set to: 0
 15060  006FBA  0012               	return		;funcret
 15061  006FBC                     __end_of_ValidateDataRange:
 15062                           	opt stack 0
 15063                           tosu	equ	0xFFF
 15064                           tosh	equ	0xFFE
 15065                           tosl	equ	0xFFD
 15066                           pclath	equ	0xFFA
 15067                           tblptru	equ	0xFF8
 15068                           tblptrh	equ	0xFF7
 15069                           tblptrl	equ	0xFF6
 15070                           tablat	equ	0xFF5
 15071                           prodh	equ	0xFF4
 15072                           prodl	equ	0xFF3
 15073                           intcon	equ	0xFF2
 15074                           intcon2	equ	0xFF1
 15075                           intcon3	equ	0xFF0
 15076                           indf0	equ	0xFEF
 15077                           postinc0	equ	0xFEE
 15078                           fsr0h	equ	0xFEA
 15079                           fsr0l	equ	0xFE9
 15080                           wreg	equ	0xFE8
 15081                           postinc1	equ	0xFE6
 15082                           postdec1	equ	0xFE5
 15083                           plusw1	equ	0xFE3
 15084                           fsr1h	equ	0xFE2
 15085                           fsr1l	equ	0xFE1
 15086                           indf2	equ	0xFDF
 15087                           postinc2	equ	0xFDE
 15088                           postdec2	equ	0xFDD
 15089                           fsr2h	equ	0xFDA
 15090                           fsr2l	equ	0xFD9
 15091                           status	equ	0xFD8
 15092                           
 15093 ;; *************** function _UpdateFrequency *****************
 15094 ;; Defined at:
 15095 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  channelId       1    wreg     unsigned char 
 15098 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;  channelId       1    8[BANK0 ] unsigned char 
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  1    wreg      void 
 15103 ;; Registers used:
 15104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15105 ;; Tracked objects:
 15106 ;;		On entry : F/0
 15107 ;;		On exit  : F/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15113 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15114 ;;Total ram usage:        5 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:    7
 15117 ;; This function calls:
 15118 ;;		Nothing
 15119 ;; This function is called by:
 15120 ;;		_ExecuteNewChannel
 15121 ;; This function uses a non-reentrant model
 15122 ;;
 15123                           
 15124                           	psect	text79
 15125  006E72                     __ptext79:
 15126                           	opt stack 0
 15127  006E72                     _UpdateFrequency:
 15128                           	opt stack 17
 15129                           
 15130                           ; BSR set to: 0
 15131                           ;incstack = 0
 15132                           ;UpdateFrequency@channelId stored from wreg
 15133  006E72  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15134                           
 15135                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15136  006E74  0100               	movlb	0	; () banked
 15137  006E76  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15138  006E78  0D0E               	mullw	14
 15139  006E7A  0E00               	movlw	low _Channels
 15140  006E7C  24F3               	addwf	prodl,w,c
 15141  006E7E  6ED9               	movwf	fsr2l,c
 15142  006E80  0E04               	movlw	high _Channels
 15143  006E82  20F4               	addwfc	prodh,w,c
 15144  006E84  6EDA               	movwf	fsr2h,c
 15145  006E86  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15146  006E8A  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15147  006E8E  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15148  006E92  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15149                           
 15150                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15151  006E96  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15152  006E98  0D0E               	mullw	14
 15153  006E9A  0E0D               	movlw	low (_Channels+13)
 15154  006E9C  24F3               	addwf	prodl,w,c
 15155  006E9E  6ED9               	movwf	fsr2l,c
 15156  006EA0  0E04               	movlw	high (_Channels+13)
 15157  006EA2  20F4               	addwfc	prodh,w,c
 15158  006EA4  6EDA               	movwf	fsr2h,c
 15159  006EA6  0E00               	movlw	0
 15160  006EA8  80DB               	bsf	plusw2,0,c
 15161                           
 15162                           ; BSR set to: 0
 15163  006EAA  0C00               	retlw	0	;funcret
 15164  006EAC                     __end_of_UpdateFrequency:
 15165                           	opt stack 0
 15166                           tosu	equ	0xFFF
 15167                           tosh	equ	0xFFE
 15168                           tosl	equ	0xFFD
 15169                           pclath	equ	0xFFA
 15170                           tblptru	equ	0xFF8
 15171                           tblptrh	equ	0xFF7
 15172                           tblptrl	equ	0xFF6
 15173                           tablat	equ	0xFF5
 15174                           prodh	equ	0xFF4
 15175                           prodl	equ	0xFF3
 15176                           intcon	equ	0xFF2
 15177                           intcon2	equ	0xFF1
 15178                           intcon3	equ	0xFF0
 15179                           indf0	equ	0xFEF
 15180                           postinc0	equ	0xFEE
 15181                           fsr0h	equ	0xFEA
 15182                           fsr0l	equ	0xFE9
 15183                           wreg	equ	0xFE8
 15184                           postinc1	equ	0xFE6
 15185                           postdec1	equ	0xFE5
 15186                           plusw1	equ	0xFE3
 15187                           fsr1h	equ	0xFE2
 15188                           fsr1l	equ	0xFE1
 15189                           indf2	equ	0xFDF
 15190                           postinc2	equ	0xFDE
 15191                           postdec2	equ	0xFDD
 15192                           plusw2	equ	0xFDB
 15193                           fsr2h	equ	0xFDA
 15194                           fsr2l	equ	0xFD9
 15195                           status	equ	0xFD8
 15196                           
 15197 ;; *************** function _UpdateDutyCycle *****************
 15198 ;; Defined at:
 15199 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;  channelId       1    wreg     unsigned char 
 15202 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;  channelId       1    6[BANK0 ] unsigned char 
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1    wreg      void 
 15207 ;; Registers used:
 15208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15209 ;; Tracked objects:
 15210 ;;		On entry : F/0
 15211 ;;		On exit  : F/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15217 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15218 ;;Total ram usage:        3 bytes
 15219 ;; Hardware stack levels used:    1
 15220 ;; Hardware stack levels required when called:    7
 15221 ;; This function calls:
 15222 ;;		Nothing
 15223 ;; This function is called by:
 15224 ;;		_ExecuteNewChannel
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text80
 15229  006FF0                     __ptext80:
 15230                           	opt stack 0
 15231  006FF0                     _UpdateDutyCycle:
 15232                           	opt stack 17
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;incstack = 0
 15236                           ;UpdateDutyCycle@channelId stored from wreg
 15237  006FF0  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15238                           
 15239                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15240  006FF2  0100               	movlb	0	; () banked
 15241  006FF4  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15242  006FF6  0D0E               	mullw	14
 15243  006FF8  0E06               	movlw	low (_Channels+6)
 15244  006FFA  24F3               	addwf	prodl,w,c
 15245  006FFC  6ED9               	movwf	fsr2l,c
 15246  006FFE  0E04               	movlw	high (_Channels+6)
 15247  007000  20F4               	addwfc	prodh,w,c
 15248  007002  6EDA               	movwf	fsr2h,c
 15249  007004  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15250  007008  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15251                           
 15252                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15253  00700C  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15254  00700E  0D0E               	mullw	14
 15255  007010  0E0D               	movlw	low (_Channels+13)
 15256  007012  24F3               	addwf	prodl,w,c
 15257  007014  6ED9               	movwf	fsr2l,c
 15258  007016  0E04               	movlw	high (_Channels+13)
 15259  007018  20F4               	addwfc	prodh,w,c
 15260  00701A  6EDA               	movwf	fsr2h,c
 15261  00701C  0E00               	movlw	0
 15262  00701E  84DB               	bsf	plusw2,2,c
 15263                           
 15264                           ; BSR set to: 0
 15265  007020  0C00               	retlw	0	;funcret
 15266  007022                     __end_of_UpdateDutyCycle:
 15267                           	opt stack 0
 15268                           tosu	equ	0xFFF
 15269                           tosh	equ	0xFFE
 15270                           tosl	equ	0xFFD
 15271                           pclath	equ	0xFFA
 15272                           tblptru	equ	0xFF8
 15273                           tblptrh	equ	0xFF7
 15274                           tblptrl	equ	0xFF6
 15275                           tablat	equ	0xFF5
 15276                           prodh	equ	0xFF4
 15277                           prodl	equ	0xFF3
 15278                           intcon	equ	0xFF2
 15279                           intcon2	equ	0xFF1
 15280                           intcon3	equ	0xFF0
 15281                           indf0	equ	0xFEF
 15282                           postinc0	equ	0xFEE
 15283                           fsr0h	equ	0xFEA
 15284                           fsr0l	equ	0xFE9
 15285                           wreg	equ	0xFE8
 15286                           postinc1	equ	0xFE6
 15287                           postdec1	equ	0xFE5
 15288                           plusw1	equ	0xFE3
 15289                           fsr1h	equ	0xFE2
 15290                           fsr1l	equ	0xFE1
 15291                           indf2	equ	0xFDF
 15292                           postinc2	equ	0xFDE
 15293                           postdec2	equ	0xFDD
 15294                           plusw2	equ	0xFDB
 15295                           fsr2h	equ	0xFDA
 15296                           fsr2l	equ	0xFD9
 15297                           status	equ	0xFD8
 15298                           
 15299 ;; *************** function _UpdateDataRange *****************
 15300 ;; Defined at:
 15301 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  channelId       1    wreg     unsigned char 
 15304 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15305 ;; Auto vars:     Size  Location     Type
 15306 ;;  channelId       1    6[BANK0 ] unsigned char 
 15307 ;;  i               1    7[BANK0 ] unsigned char 
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15312 ;; Tracked objects:
 15313 ;;		On entry : F/0
 15314 ;;		On exit  : F/2
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15317 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15321 ;;Total ram usage:        4 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    7
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_ExecuteNewChannel
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text81
 15332  004966                     __ptext81:
 15333                           	opt stack 0
 15334  004966                     _UpdateDataRange:
 15335                           	opt stack 17
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;incstack = 0
 15339                           ;UpdateDataRange@channelId stored from wreg
 15340  004966  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15341                           
 15342                           ;lorawan_eu.c: 1011: uint8_t i;
 15343                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15344  004968  0E07               	movlw	7
 15345  00496A  0102               	movlb	2	; () banked
 15346  00496C  6FEB               	movwf	(_loRa+235)& (0+255),b
 15347                           
 15348                           ; BSR set to: 2
 15349                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15350  00496E  6BEC               	clrf	(_loRa+236)& (0+255),b
 15351                           
 15352                           ; BSR set to: 2
 15353                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15354  004970  0100               	movlb	0	; () banked
 15355  004972  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15356  004974  0D0E               	mullw	14
 15357  004976  0E05               	movlw	low (_Channels+5)
 15358  004978  24F3               	addwf	prodl,w,c
 15359  00497A  6ED9               	movwf	fsr2l,c
 15360  00497C  0E04               	movlw	high (_Channels+5)
 15361  00497E  20F4               	addwfc	prodh,w,c
 15362  004980  6EDA               	movwf	fsr2h,c
 15363  004982  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15364                           
 15365                           ; BSR set to: 0
 15366                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15367  004986  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15368  004988  0D0E               	mullw	14
 15369  00498A  0E0D               	movlw	low (_Channels+13)
 15370  00498C  24F3               	addwf	prodl,w,c
 15371  00498E  6ED9               	movwf	fsr2l,c
 15372  004990  0E04               	movlw	high (_Channels+13)
 15373  004992  20F4               	addwfc	prodh,w,c
 15374  004994  6EDA               	movwf	fsr2h,c
 15375  004996  0E00               	movlw	0
 15376  004998  82DB               	bsf	plusw2,1,c
 15377                           
 15378                           ; BSR set to: 0
 15379                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15380  00499A  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15381  00499C  D04E               	goto	l12863
 15382  00499E                     l12851:
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;lorawan_eu.c: 1020: {
 15386                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15387  00499E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15388  0049A0  0D0E               	mullw	14
 15389  0049A2  0E05               	movlw	low (_Channels+5)
 15390  0049A4  24F3               	addwf	prodl,w,c
 15391  0049A6  6ED9               	movwf	fsr2l,c
 15392  0049A8  0E04               	movlw	high (_Channels+5)
 15393  0049AA  20F4               	addwfc	prodh,w,c
 15394  0049AC  6EDA               	movwf	fsr2h,c
 15395  0049AE  50DF               	movf	223,w,c
 15396  0049B0  0B0F               	andlw	15
 15397  0049B2  0100               	movlb	0	; () banked
 15398  0049B4  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15399  0049B6  0102               	movlb	2	; () banked
 15400  0049B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 15401  0049BA  0100               	movlb	0	; () banked
 15402  0049BC  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15403  0049BE  E216               	bc	l1204
 15404                           
 15405                           ; BSR set to: 0
 15406  0049C0  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15407  0049C2  0D0E               	mullw	14
 15408  0049C4  0E04               	movlw	low (_Channels+4)
 15409  0049C6  24F3               	addwf	prodl,w,c
 15410  0049C8  6ED9               	movwf	fsr2l,c
 15411  0049CA  0E04               	movlw	high (_Channels+4)
 15412  0049CC  20F4               	addwfc	prodh,w,c
 15413  0049CE  6EDA               	movwf	fsr2h,c
 15414  0049D0  04DE               	decf	postinc2,w,c
 15415  0049D2  E10C               	bnz	l1204
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;lorawan_eu.c: 1022: {
 15419                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15420  0049D4  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15421  0049D6  0D0E               	mullw	14
 15422  0049D8  0E05               	movlw	low (_Channels+5)
 15423  0049DA  24F3               	addwf	prodl,w,c
 15424  0049DC  6ED9               	movwf	fsr2l,c
 15425  0049DE  0E04               	movlw	high (_Channels+5)
 15426  0049E0  20F4               	addwfc	prodh,w,c
 15427  0049E2  6EDA               	movwf	fsr2h,c
 15428  0049E4  50DF               	movf	223,w,c
 15429  0049E6  0B0F               	andlw	15
 15430  0049E8  0102               	movlb	2	; () banked
 15431  0049EA  6FEB               	movwf	(_loRa+235)& (0+255),b
 15432  0049EC                     l1204:
 15433                           
 15434                           ;lorawan_eu.c: 1024: }
 15435                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15436  0049EC  0100               	movlb	0	; () banked
 15437  0049EE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15438  0049F0  0D0E               	mullw	14
 15439  0049F2  0E05               	movlw	low (_Channels+5)
 15440  0049F4  24F3               	addwf	prodl,w,c
 15441  0049F6  6ED9               	movwf	fsr2l,c
 15442  0049F8  0E04               	movlw	high (_Channels+5)
 15443  0049FA  20F4               	addwfc	prodh,w,c
 15444  0049FC  6EDA               	movwf	fsr2h,c
 15445  0049FE  38DF               	swapf	223,w,c
 15446  004A00  0B0F               	andlw	15
 15447  004A02  0102               	movlb	2	; () banked
 15448  004A04  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15449  004A06  D017               	goto	l12861
 15450                           
 15451                           ; BSR set to: 2
 15452  004A08  0100               	movlb	0	; () banked
 15453  004A0A  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15454  004A0C  0D0E               	mullw	14
 15455  004A0E  0E04               	movlw	low (_Channels+4)
 15456  004A10  24F3               	addwf	prodl,w,c
 15457  004A12  6ED9               	movwf	fsr2l,c
 15458  004A14  0E04               	movlw	high (_Channels+4)
 15459  004A16  20F4               	addwfc	prodh,w,c
 15460  004A18  6EDA               	movwf	fsr2h,c
 15461  004A1A  04DE               	decf	postinc2,w,c
 15462  004A1C  E10C               	bnz	l12861
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;lorawan_eu.c: 1026: {
 15466                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15467  004A1E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15468  004A20  0D0E               	mullw	14
 15469  004A22  0E05               	movlw	low (_Channels+5)
 15470  004A24  24F3               	addwf	prodl,w,c
 15471  004A26  6ED9               	movwf	fsr2l,c
 15472  004A28  0E04               	movlw	high (_Channels+5)
 15473  004A2A  20F4               	addwfc	prodh,w,c
 15474  004A2C  6EDA               	movwf	fsr2h,c
 15475  004A2E  38DF               	swapf	223,w,c
 15476  004A30  0B0F               	andlw	15
 15477  004A32  0102               	movlb	2	; () banked
 15478  004A34  6FEC               	movwf	(_loRa+236)& (0+255),b
 15479  004A36                     l12861:
 15480  004A36  0100               	movlb	0	; () banked
 15481  004A38  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15482  004A3A                     l12863:
 15483                           
 15484                           ; BSR set to: 0
 15485  004A3A  0102               	movlb	2	; () banked
 15486  004A3C  51ED               	movf	(_loRa+237)& (0+255),w,b
 15487  004A3E  0100               	movlb	0	; () banked
 15488  004A40  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15489  004A42  E3AD               	bnc	l12851
 15490                           
 15491                           ; BSR set to: 0
 15492                           ;lorawan_eu.c: 1028: }
 15493                           ;lorawan_eu.c: 1029: }
 15494                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15495  004A44  0102               	movlb	2	; () banked
 15496  004A46  51DF               	movf	(_loRa+223)& (0+255),w,b
 15497  004A48  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15498  004A4A  E202               	bc	l12869
 15499                           
 15500                           ; BSR set to: 2
 15501                           ;lorawan_eu.c: 1032: {
 15502                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15503  004A4C  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15504  004A50                     l12869:
 15505                           
 15506                           ; BSR set to: 2
 15507                           ;lorawan_eu.c: 1034: }
 15508                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15509  004A50  51EB               	movf	(_loRa+235)& (0+255),w,b
 15510  004A52  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15511  004A54  A0D8               	btfss	status,0,c
 15512                           
 15513                           ; BSR set to: 2
 15514                           ;lorawan_eu.c: 1037: {
 15515                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15516  004A56  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15517                           
 15518                           ; BSR set to: 2
 15519  004A5A  0012               	return		;funcret
 15520  004A5C                     __end_of_UpdateDataRange:
 15521                           	opt stack 0
 15522                           tosu	equ	0xFFF
 15523                           tosh	equ	0xFFE
 15524                           tosl	equ	0xFFD
 15525                           pclath	equ	0xFFA
 15526                           tblptru	equ	0xFF8
 15527                           tblptrh	equ	0xFF7
 15528                           tblptrl	equ	0xFF6
 15529                           tablat	equ	0xFF5
 15530                           prodh	equ	0xFF4
 15531                           prodl	equ	0xFF3
 15532                           intcon	equ	0xFF2
 15533                           intcon2	equ	0xFF1
 15534                           intcon3	equ	0xFF0
 15535                           indf0	equ	0xFEF
 15536                           postinc0	equ	0xFEE
 15537                           fsr0h	equ	0xFEA
 15538                           fsr0l	equ	0xFE9
 15539                           wreg	equ	0xFE8
 15540                           postinc1	equ	0xFE6
 15541                           postdec1	equ	0xFE5
 15542                           plusw1	equ	0xFE3
 15543                           fsr1h	equ	0xFE2
 15544                           fsr1l	equ	0xFE1
 15545                           indf2	equ	0xFDF
 15546                           postinc2	equ	0xFDE
 15547                           postdec2	equ	0xFDD
 15548                           plusw2	equ	0xFDB
 15549                           fsr2h	equ	0xFDA
 15550                           fsr2l	equ	0xFD9
 15551                           status	equ	0xFD8
 15552                           
 15553 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15554 ;; Defined at:
 15555 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15556 ;; Parameters:    Size  Location     Type
 15557 ;;  channelId       1    wreg     unsigned char 
 15558 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;  channelId       1   10[BANK0 ] unsigned char 
 15561 ;;  result          1    0        enum E8016
 15562 ;; Return value:  Size  Location     Type
 15563 ;;                  1    wreg      enum E8016
 15564 ;; Registers used:
 15565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15566 ;; Tracked objects:
 15567 ;;		On entry : F/0
 15568 ;;		On exit  : D/0
 15569 ;;		Unchanged: 0/0
 15570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15571 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15574 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15575 ;;Total ram usage:        3 bytes
 15576 ;; Hardware stack levels used:    1
 15577 ;; Hardware stack levels required when called:    8
 15578 ;; This function calls:
 15579 ;;		_UpdateChannelIdStatus
 15580 ;;		_ValidateChannelId
 15581 ;; This function is called by:
 15582 ;;		_ExecuteNewChannel
 15583 ;;		_UpdateCfList
 15584 ;; This function uses a non-reentrant model
 15585 ;;
 15586                           
 15587                           	psect	text82
 15588  006EAC                     __ptext82:
 15589                           	opt stack 0
 15590  006EAC                     _LORAWAN_SetChannelIdStatus:
 15591                           	opt stack 17
 15592                           
 15593                           ; BSR set to: 2
 15594                           ;incstack = 0
 15595                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15596  006EAC  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15597                           
 15598                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15599  006EAE  0E01               	movlw	1
 15600  006EB0  0100               	movlb	0	; () banked
 15601  006EB2  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15602  006EB4  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15603  006EB6  EC0E  F03A         	call	_ValidateChannelId
 15604  006EBA  0900               	iorlw	0
 15605  006EBC  E001               	bz	l12879
 15606                           
 15607                           ; BSR set to: 0
 15608                           ;lorawan_eu.c: 290: }
 15609  006EBE  0012               	return	
 15610  006EC0                     l12879:
 15611                           
 15612                           ; BSR set to: 0
 15613                           ;lorawan_eu.c: 292: else
 15614                           ;lorawan_eu.c: 293: {
 15615                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15616  006EC0  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15617  006EC2  0D0E               	mullw	14
 15618  006EC4  0E0D               	movlw	low (_Channels+13)
 15619  006EC6  24F3               	addwf	prodl,w,c
 15620  006EC8  6ED9               	movwf	fsr2l,c
 15621  006ECA  0E04               	movlw	high (_Channels+13)
 15622  006ECC  20F4               	addwfc	prodh,w,c
 15623  006ECE  6EDA               	movwf	fsr2h,c
 15624  006ED0  50DF               	movf	indf2,w,c
 15625  006ED2  0B07               	andlw	7
 15626  006ED4  0A07               	xorlw	7
 15627  006ED6  A4D8               	btfss	status,2,c
 15628  006ED8  0012               	return	
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;lorawan_eu.c: 295: {
 15632                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15633  006EDA  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15634  006EDE  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15635  006EE0  EFAF  F023         	goto	_UpdateChannelIdStatus
 15636  006EE4                     __end_of_LORAWAN_SetChannelIdStatus:
 15637                           	opt stack 0
 15638                           tosu	equ	0xFFF
 15639                           tosh	equ	0xFFE
 15640                           tosl	equ	0xFFD
 15641                           pclath	equ	0xFFA
 15642                           tblptru	equ	0xFF8
 15643                           tblptrh	equ	0xFF7
 15644                           tblptrl	equ	0xFF6
 15645                           tablat	equ	0xFF5
 15646                           prodh	equ	0xFF4
 15647                           prodl	equ	0xFF3
 15648                           intcon	equ	0xFF2
 15649                           intcon2	equ	0xFF1
 15650                           intcon3	equ	0xFF0
 15651                           indf0	equ	0xFEF
 15652                           postinc0	equ	0xFEE
 15653                           fsr0h	equ	0xFEA
 15654                           fsr0l	equ	0xFE9
 15655                           wreg	equ	0xFE8
 15656                           postinc1	equ	0xFE6
 15657                           postdec1	equ	0xFE5
 15658                           plusw1	equ	0xFE3
 15659                           fsr1h	equ	0xFE2
 15660                           fsr1l	equ	0xFE1
 15661                           indf2	equ	0xFDF
 15662                           postinc2	equ	0xFDE
 15663                           postdec2	equ	0xFDD
 15664                           plusw2	equ	0xFDB
 15665                           fsr2h	equ	0xFDA
 15666                           fsr2l	equ	0xFD9
 15667                           status	equ	0xFD8
 15668                           
 15669 ;; *************** function _ValidateChannelId *****************
 15670 ;; Defined at:
 15671 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;  channelId       1    wreg     unsigned char 
 15674 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;  channelId       1    6[BANK0 ] unsigned char 
 15677 ;;  result          1    5[BANK0 ] enum E8016
 15678 ;; Return value:  Size  Location     Type
 15679 ;;                  1    wreg      enum E8016
 15680 ;; Registers used:
 15681 ;;		wreg, status,2, status,0
 15682 ;; Tracked objects:
 15683 ;;		On entry : F/0
 15684 ;;		On exit  : F/0
 15685 ;;		Unchanged: 0/0
 15686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15687 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15690 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15691 ;;Total ram usage:        3 bytes
 15692 ;; Hardware stack levels used:    1
 15693 ;; Hardware stack levels required when called:    7
 15694 ;; This function calls:
 15695 ;;		Nothing
 15696 ;; This function is called by:
 15697 ;;		_LORAWAN_SetChannelIdStatus
 15698 ;;		_ExecuteNewChannel
 15699 ;; This function uses a non-reentrant model
 15700 ;;
 15701                           
 15702                           	psect	text83
 15703  00741C                     __ptext83:
 15704                           	opt stack 0
 15705  00741C                     _ValidateChannelId:
 15706                           	opt stack 17
 15707                           
 15708                           ;incstack = 0
 15709                           ;ValidateChannelId@channelId stored from wreg
 15710  00741C  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15711                           
 15712                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15713  00741E  0100               	movlb	0	; () banked
 15714  007420  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15715                           
 15716                           ; BSR set to: 0
 15717                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15718  007422  0E10               	movlw	16
 15719  007424  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15720  007426  D005               	goto	l12617
 15721                           
 15722                           ; BSR set to: 0
 15723  007428  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15724  00742A  E105               	bnz	l1244
 15725                           
 15726                           ; BSR set to: 0
 15727  00742C  0E03               	movlw	3
 15728  00742E  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15729  007430  D002               	goto	l1244
 15730  007432                     l12617:
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;lorawan_eu.c: 1130: {
 15734                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15735  007432  0E03               	movlw	3
 15736  007434  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15737  007436                     l1244:
 15738                           
 15739                           ; BSR set to: 0
 15740                           ;lorawan_eu.c: 1132: }
 15741                           ;lorawan_eu.c: 1134: return result;
 15742  007436  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15743                           
 15744                           ; BSR set to: 0
 15745  007438  0012               	return		;funcret
 15746  00743A                     __end_of_ValidateChannelId:
 15747                           	opt stack 0
 15748                           tosu	equ	0xFFF
 15749                           tosh	equ	0xFFE
 15750                           tosl	equ	0xFFD
 15751                           pclath	equ	0xFFA
 15752                           tblptru	equ	0xFF8
 15753                           tblptrh	equ	0xFF7
 15754                           tblptrl	equ	0xFF6
 15755                           tablat	equ	0xFF5
 15756                           prodh	equ	0xFF4
 15757                           prodl	equ	0xFF3
 15758                           intcon	equ	0xFF2
 15759                           intcon2	equ	0xFF1
 15760                           intcon3	equ	0xFF0
 15761                           indf0	equ	0xFEF
 15762                           postinc0	equ	0xFEE
 15763                           fsr0h	equ	0xFEA
 15764                           fsr0l	equ	0xFE9
 15765                           wreg	equ	0xFE8
 15766                           postinc1	equ	0xFE6
 15767                           postdec1	equ	0xFE5
 15768                           plusw1	equ	0xFE3
 15769                           fsr1h	equ	0xFE2
 15770                           fsr1l	equ	0xFE1
 15771                           indf2	equ	0xFDF
 15772                           postinc2	equ	0xFDE
 15773                           postdec2	equ	0xFDD
 15774                           plusw2	equ	0xFDB
 15775                           fsr2h	equ	0xFDA
 15776                           fsr2l	equ	0xFD9
 15777                           status	equ	0xFD8
 15778                           
 15779 ;; *************** function _ExecuteLinkCheck *****************
 15780 ;; Defined at:
 15781 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15782 ;; Parameters:    Size  Location     Type
 15783 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15784 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15785 ;; Auto vars:     Size  Location     Type
 15786 ;;		None
 15787 ;; Return value:  Size  Location     Type
 15788 ;;                  2    4[BANK0 ] PTR unsigned char 
 15789 ;; Registers used:
 15790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15791 ;; Tracked objects:
 15792 ;;		On entry : F/0
 15793 ;;		On exit  : F/0
 15794 ;;		Unchanged: 0/0
 15795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;Total ram usage:        2 bytes
 15801 ;; Hardware stack levels used:    1
 15802 ;; Hardware stack levels required when called:    7
 15803 ;; This function calls:
 15804 ;;		Nothing
 15805 ;; This function is called by:
 15806 ;;		_MacExecuteCommands
 15807 ;; This function uses a non-reentrant model
 15808 ;;
 15809                           
 15810                           	psect	text84
 15811  007022                     __ptext84:
 15812                           	opt stack 0
 15813  007022                     _ExecuteLinkCheck:
 15814                           	opt stack 18
 15815                           
 15816                           ; BSR set to: 0
 15817                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;incstack = 0
 15821  007022  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15822  007026  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15823  00702A  50DF               	movf	indf2,w,c
 15824  00702C  0102               	movlb	2	; () banked
 15825  00702E  6FDD               	movwf	(_loRa+221)& (0+255),b
 15826                           
 15827                           ; BSR set to: 2
 15828  007030  0100               	movlb	0	; () banked
 15829  007032  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15830  007034  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15834  007036  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15835  00703A  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15836  00703E  50DF               	movf	indf2,w,c
 15837  007040  0102               	movlb	2	; () banked
 15838  007042  6FDE               	movwf	(_loRa+222)& (0+255),b
 15839  007044  0100               	movlb	0	; () banked
 15840  007046  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15841  007048  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;lorawan.c: 1656: return ptr;
 15845  00704A  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15846  00704E  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15847                           
 15848                           ; BSR set to: 0
 15849  007052  0012               	return		;funcret
 15850  007054                     __end_of_ExecuteLinkCheck:
 15851                           	opt stack 0
 15852                           tosu	equ	0xFFF
 15853                           tosh	equ	0xFFE
 15854                           tosl	equ	0xFFD
 15855                           pclath	equ	0xFFA
 15856                           tblptru	equ	0xFF8
 15857                           tblptrh	equ	0xFF7
 15858                           tblptrl	equ	0xFF6
 15859                           tablat	equ	0xFF5
 15860                           prodh	equ	0xFF4
 15861                           prodl	equ	0xFF3
 15862                           intcon	equ	0xFF2
 15863                           intcon2	equ	0xFF1
 15864                           intcon3	equ	0xFF0
 15865                           indf0	equ	0xFEF
 15866                           postinc0	equ	0xFEE
 15867                           fsr0h	equ	0xFEA
 15868                           fsr0l	equ	0xFE9
 15869                           wreg	equ	0xFE8
 15870                           postinc1	equ	0xFE6
 15871                           postdec1	equ	0xFE5
 15872                           plusw1	equ	0xFE3
 15873                           fsr1h	equ	0xFE2
 15874                           fsr1l	equ	0xFE1
 15875                           indf2	equ	0xFDF
 15876                           postinc2	equ	0xFDE
 15877                           postdec2	equ	0xFDD
 15878                           plusw2	equ	0xFDB
 15879                           fsr2h	equ	0xFDA
 15880                           fsr2l	equ	0xFD9
 15881                           status	equ	0xFD8
 15882                           
 15883 ;; *************** function _ExecuteLinkAdr *****************
 15884 ;; Defined at:
 15885 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15888 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15891 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15892 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15893 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15894 ;;  txPower         1   22[BANK0 ] unsigned char 
 15895 ;; Return value:  Size  Location     Type
 15896 ;;                  2   17[BANK0 ] PTR unsigned char 
 15897 ;; Registers used:
 15898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15899 ;; Tracked objects:
 15900 ;;		On entry : F/0
 15901 ;;		On exit  : F/2
 15902 ;;		Unchanged: 0/0
 15903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;Total ram usage:        9 bytes
 15909 ;; Hardware stack levels used:    1
 15910 ;; Hardware stack levels required when called:   10
 15911 ;; This function calls:
 15912 ;;		_EnableChannels
 15913 ;;		_UpdateCurrentDataRate
 15914 ;;		_UpdateTxPower
 15915 ;;		_ValidateChannelMask
 15916 ;;		_ValidateChannelMaskCntl
 15917 ;;		_ValidateDataRate
 15918 ;;		_ValidateTxPower
 15919 ;; This function is called by:
 15920 ;;		_MacExecuteCommands
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           
 15924                           	psect	text85
 15925  00351E                     __ptext85:
 15926                           	opt stack 0
 15927  00351E                     _ExecuteLinkAdr:
 15928                           	opt stack 15
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15932                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15933                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15934                           
 15935                           ; BSR set to: 0
 15936                           ;incstack = 0
 15937  00351E  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15938  003522  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15939  003526  50DF               	movf	indf2,w,c
 15940  003528  0B0F               	andlw	15
 15941  00352A  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15942                           
 15943                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15944  00352C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15945  003530  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15946  003534  50DF               	movf	indf2,w,c
 15947  003536  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15948  003538  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15949  00353A  0B0F               	andlw	15
 15950  00353C  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;lorawan_eu.c: 620: ptr++;
 15954  00353E  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15955  003540  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15956                           
 15957                           ; BSR set to: 0
 15958                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15959  003542  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15960  003546  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15961  00354A  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15962  00354E  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15963                           
 15964                           ; BSR set to: 0
 15965                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 15966  003552  0E02               	movlw	2
 15967  003554  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 15968  003556  0E00               	movlw	0
 15969  003558  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15970                           
 15971                           ; BSR set to: 0
 15972                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 15973                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 15974  00355A  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 15975  00355E  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 15976                           
 15977                           ; BSR set to: 0
 15978  003562  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15979  003564  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 15983  003566  0102               	movlb	2	; () banked
 15984  003568  AD02               	btfss	(_loRa+2)& (0+255),6,b
 15985  00356A  D092               	goto	l13515
 15986                           
 15987                           ; BSR set to: 2
 15988                           ;lorawan_eu.c: 627: {
 15989                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 15990  00356C  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 15991  003570  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 15992  003574  0100               	movlb	0	; () banked
 15993  003576  38DF               	swapf	223,w,c
 15994  003578  0B07               	andlw	7
 15995  00357A  EC1E  F03B         	call	_ValidateChannelMaskCntl
 15996  00357E  0900               	iorlw	0
 15997  003580  E112               	bnz	l13483
 15998                           
 15999                           ; BSR set to: 0
 16000  003582  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 16001  003586  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 16002  00358A  EC72  F037         	call	_ValidateChannelMask	;wreg free
 16003  00358E  0900               	iorlw	0
 16004  003590  E10A               	bnz	l13483
 16005                           
 16006                           ; BSR set to: 0
 16007                           ;lorawan_eu.c: 629: {
 16008                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16009  003592  0102               	movlb	2	; () banked
 16010  003594  51A7               	movf	(_loRa+167)& (0+255),w,b
 16011  003596  0D02               	mullw	2
 16012  003598  0EA9               	movlw	low (_loRa+169)
 16013  00359A  24F3               	addwf	prodl,w,c
 16014  00359C  6ED9               	movwf	fsr2l,c
 16015  00359E  0E02               	movlw	high (_loRa+169)
 16016  0035A0  20F4               	addwfc	prodh,w,c
 16017  0035A2  6EDA               	movwf	fsr2h,c
 16018  0035A4  80DF               	bsf	indf2,0,c
 16019  0035A6                     l13483:
 16020                           
 16021                           ;lorawan_eu.c: 631: }
 16022                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16023  0035A6  0100               	movlb	0	; () banked
 16024  0035A8  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16025  0035AA  EC4A  F03B         	call	_ValidateDataRate
 16026  0035AE  0900               	iorlw	0
 16027  0035B0  E112               	bnz	l13491
 16028                           
 16029                           ; BSR set to: 0
 16030  0035B2  0102               	movlb	2	; () banked
 16031  0035B4  51EB               	movf	(_loRa+235)& (0+255),w,b
 16032  0035B6  0100               	movlb	0	; () banked
 16033  0035B8  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16034  0035BA  E30D               	bnc	l13491
 16035                           
 16036                           ; BSR set to: 0
 16037  0035BC  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16038  0035BE  0102               	movlb	2	; () banked
 16039  0035C0  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16040  0035C2  E309               	bnc	l13491
 16041                           
 16042                           ; BSR set to: 2
 16043                           ;lorawan_eu.c: 634: {
 16044                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16045  0035C4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16046  0035C6  0D02               	mullw	2
 16047  0035C8  0EA9               	movlw	low (_loRa+169)
 16048  0035CA  24F3               	addwf	prodl,w,c
 16049  0035CC  6ED9               	movwf	fsr2l,c
 16050  0035CE  0E02               	movlw	high (_loRa+169)
 16051  0035D0  20F4               	addwfc	prodh,w,c
 16052  0035D2  6EDA               	movwf	fsr2h,c
 16053  0035D4  82DF               	bsf	indf2,1,c
 16054  0035D6                     l13491:
 16055                           
 16056                           ;lorawan_eu.c: 636: }
 16057                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16058  0035D6  0100               	movlb	0	; () banked
 16059  0035D8  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16060  0035DA  EC9D  F039         	call	_ValidateTxPower
 16061  0035DE  0900               	iorlw	0
 16062  0035E0  E10A               	bnz	l1099
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;lorawan_eu.c: 639: {
 16066                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16067  0035E2  0102               	movlb	2	; () banked
 16068  0035E4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16069  0035E6  0D02               	mullw	2
 16070  0035E8  0EA9               	movlw	low (_loRa+169)
 16071  0035EA  24F3               	addwf	prodl,w,c
 16072  0035EC  6ED9               	movwf	fsr2l,c
 16073  0035EE  0E02               	movlw	high (_loRa+169)
 16074  0035F0  20F4               	addwfc	prodh,w,c
 16075  0035F2  6EDA               	movwf	fsr2h,c
 16076  0035F4  84DF               	bsf	indf2,2,c
 16077  0035F6                     l1099:
 16078                           
 16079                           ;lorawan_eu.c: 641: }
 16080                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16081  0035F6  0102               	movlb	2	; () banked
 16082  0035F8  51A7               	movf	(_loRa+167)& (0+255),w,b
 16083  0035FA  0D02               	mullw	2
 16084  0035FC  0EA9               	movlw	low (_loRa+169)
 16085  0035FE  24F3               	addwf	prodl,w,c
 16086  003600  6ED9               	movwf	fsr2l,c
 16087  003602  0E02               	movlw	high (_loRa+169)
 16088  003604  20F4               	addwfc	prodh,w,c
 16089  003606  6EDA               	movwf	fsr2h,c
 16090  003608  A4DF               	btfss	indf2,2,c
 16091  00360A  D05D               	goto	l13517
 16092                           
 16093                           ; BSR set to: 2
 16094  00360C  51A7               	movf	(_loRa+167)& (0+255),w,b
 16095  00360E  0D02               	mullw	2
 16096  003610  0EA9               	movlw	low (_loRa+169)
 16097  003612  24F3               	addwf	prodl,w,c
 16098  003614  6ED9               	movwf	fsr2l,c
 16099  003616  0E02               	movlw	high (_loRa+169)
 16100  003618  20F4               	addwfc	prodh,w,c
 16101  00361A  6EDA               	movwf	fsr2h,c
 16102  00361C  A2DF               	btfss	indf2,1,c
 16103  00361E  D053               	goto	l13517
 16104                           
 16105                           ; BSR set to: 2
 16106  003620  51A7               	movf	(_loRa+167)& (0+255),w,b
 16107  003622  0D02               	mullw	2
 16108  003624  0EA9               	movlw	low (_loRa+169)
 16109  003626  24F3               	addwf	prodl,w,c
 16110  003628  6ED9               	movwf	fsr2l,c
 16111  00362A  0E02               	movlw	high (_loRa+169)
 16112  00362C  20F4               	addwfc	prodh,w,c
 16113  00362E  6EDA               	movwf	fsr2h,c
 16114  003630  A0DF               	btfss	indf2,0,c
 16115  003632  D049               	goto	l13517
 16116                           
 16117                           ; BSR set to: 2
 16118                           ;lorawan_eu.c: 644: {
 16119                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16120  003634  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16121  003638  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16122  00363C  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16123  003640  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16124  003644  0100               	movlb	0	; () banked
 16125  003646  38DF               	swapf	223,w,c
 16126  003648  0B07               	andlw	7
 16127  00364A  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16128  00364C  EC35  F03B         	call	_EnableChannels	;wreg free
 16129                           
 16130                           ; BSR set to: 0
 16131                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16132  003650  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16133  003652  EC1B  F03C         	call	_UpdateTxPower
 16134                           
 16135                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16136  003656  0102               	movlb	2	; () banked
 16137  003658  8903               	bsf	(_loRa+3)& (0+255),4,b
 16138                           
 16139                           ; BSR set to: 2
 16140                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16141  00365A  0100               	movlb	0	; () banked
 16142  00365C  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16143  00365E  EC1F  F03C         	call	_UpdateCurrentDataRate
 16144                           
 16145                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16146  003662  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16147  003666  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16148  00366A  0100               	movlb	0	; () banked
 16149  00366C  50DF               	movf	223,w,c
 16150  00366E  0B0F               	andlw	15
 16151  003670  E103               	bnz	l13511
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;lorawan_eu.c: 652: {
 16155                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16156  003672  0102               	movlb	2	; () banked
 16157  003674  6BD6               	clrf	(_loRa+214)& (0+255),b
 16158                           
 16159                           ;lorawan_eu.c: 654: }
 16160  003676  D00A               	goto	l13513
 16161  003678                     l13511:
 16162                           
 16163                           ; BSR set to: 0
 16164                           ;lorawan_eu.c: 655: else
 16165                           ;lorawan_eu.c: 656: {
 16166                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16167  003678  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16168  00367C  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16169  003680  50DF               	movf	223,w,c
 16170  003682  0B0F               	andlw	15
 16171  003684  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16172  003686  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16173  003688  0102               	movlb	2	; () banked
 16174  00368A  6FD6               	movwf	(_loRa+214)& (0+255),b
 16175  00368C                     l13513:
 16176                           
 16177                           ; BSR set to: 2
 16178                           ;lorawan_eu.c: 658: }
 16179                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16180  00368C  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16181  00368E  D01B               	goto	l13517
 16182  003690                     l13515:
 16183                           
 16184                           ; BSR set to: 2
 16185                           ;lorawan_eu.c: 662: else
 16186                           ;lorawan_eu.c: 663: {
 16187                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16188  003690  51A7               	movf	(_loRa+167)& (0+255),w,b
 16189  003692  0D02               	mullw	2
 16190  003694  0EA9               	movlw	low (_loRa+169)
 16191  003696  24F3               	addwf	prodl,w,c
 16192  003698  6ED9               	movwf	fsr2l,c
 16193  00369A  0E02               	movlw	high (_loRa+169)
 16194  00369C  20F4               	addwfc	prodh,w,c
 16195  00369E  6EDA               	movwf	fsr2h,c
 16196  0036A0  90DF               	bcf	indf2,0,c
 16197                           
 16198                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16199  0036A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16200  0036A4  0D02               	mullw	2
 16201  0036A6  0EA9               	movlw	low (_loRa+169)
 16202  0036A8  24F3               	addwf	prodl,w,c
 16203  0036AA  6ED9               	movwf	fsr2l,c
 16204  0036AC  0E02               	movlw	high (_loRa+169)
 16205  0036AE  20F4               	addwfc	prodh,w,c
 16206  0036B0  6EDA               	movwf	fsr2h,c
 16207  0036B2  92DF               	bcf	indf2,1,c
 16208                           
 16209                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16210  0036B4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16211  0036B6  0D02               	mullw	2
 16212  0036B8  0EA9               	movlw	low (_loRa+169)
 16213  0036BA  24F3               	addwf	prodl,w,c
 16214  0036BC  6ED9               	movwf	fsr2l,c
 16215  0036BE  0E02               	movlw	high (_loRa+169)
 16216  0036C0  20F4               	addwfc	prodh,w,c
 16217  0036C2  6EDA               	movwf	fsr2h,c
 16218  0036C4  94DF               	bcf	indf2,2,c
 16219  0036C6                     l13517:
 16220                           
 16221                           ; BSR set to: 2
 16222                           ;lorawan_eu.c: 667: }
 16223                           ;lorawan_eu.c: 669: return ptr;
 16224  0036C6  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16225  0036CA  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16226                           
 16227                           ; BSR set to: 2
 16228  0036CE  0012               	return		;funcret
 16229  0036D0                     __end_of_ExecuteLinkAdr:
 16230                           	opt stack 0
 16231                           tosu	equ	0xFFF
 16232                           tosh	equ	0xFFE
 16233                           tosl	equ	0xFFD
 16234                           pclath	equ	0xFFA
 16235                           tblptru	equ	0xFF8
 16236                           tblptrh	equ	0xFF7
 16237                           tblptrl	equ	0xFF6
 16238                           tablat	equ	0xFF5
 16239                           prodh	equ	0xFF4
 16240                           prodl	equ	0xFF3
 16241                           intcon	equ	0xFF2
 16242                           intcon2	equ	0xFF1
 16243                           intcon3	equ	0xFF0
 16244                           indf0	equ	0xFEF
 16245                           postinc0	equ	0xFEE
 16246                           fsr0h	equ	0xFEA
 16247                           fsr0l	equ	0xFE9
 16248                           wreg	equ	0xFE8
 16249                           postinc1	equ	0xFE6
 16250                           postdec1	equ	0xFE5
 16251                           plusw1	equ	0xFE3
 16252                           fsr1h	equ	0xFE2
 16253                           fsr1l	equ	0xFE1
 16254                           indf2	equ	0xFDF
 16255                           postinc2	equ	0xFDE
 16256                           postdec2	equ	0xFDD
 16257                           plusw2	equ	0xFDB
 16258                           fsr2h	equ	0xFDA
 16259                           fsr2l	equ	0xFD9
 16260                           status	equ	0xFD8
 16261                           
 16262 ;; *************** function _ValidateTxPower *****************
 16263 ;; Defined at:
 16264 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;  txPowerNew      1    wreg     unsigned char 
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16269 ;;  result          1    4[BANK0 ] enum E8016
 16270 ;; Return value:  Size  Location     Type
 16271 ;;                  1    wreg      enum E8016
 16272 ;; Registers used:
 16273 ;;		wreg, status,2, status,0
 16274 ;; Tracked objects:
 16275 ;;		On entry : F/0
 16276 ;;		On exit  : F/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16283 ;;Total ram usage:        2 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; Hardware stack levels required when called:    7
 16286 ;; This function calls:
 16287 ;;		Nothing
 16288 ;; This function is called by:
 16289 ;;		_ExecuteLinkAdr
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           	psect	text86
 16294  00733A                     __ptext86:
 16295                           	opt stack 0
 16296  00733A                     _ValidateTxPower:
 16297                           	opt stack 17
 16298                           
 16299                           ; BSR set to: 2
 16300                           ;incstack = 0
 16301                           ;ValidateTxPower@txPowerNew stored from wreg
 16302  00733A  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16303                           
 16304                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16305  00733C  0100               	movlb	0	; () banked
 16306  00733E  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16310  007340  0102               	movlb	2	; () banked
 16311  007342  51A4               	movf	(_loRa+164)& (0+255),w,b
 16312  007344  E103               	bnz	l12905
 16313                           
 16314                           ; BSR set to: 2
 16315  007346  0100               	movlb	0	; () banked
 16316  007348  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16317  00734A  E004               	bz	l12907
 16318  00734C                     l12905:
 16319  00734C  0E05               	movlw	5
 16320  00734E  0100               	movlb	0	; () banked
 16321  007350  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16322  007352  D002               	goto	l1083
 16323  007354                     l12907:
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;lorawan_eu.c: 587: {
 16327                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16328  007354  0E03               	movlw	3
 16329  007356  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16330  007358                     l1083:
 16331                           
 16332                           ; BSR set to: 0
 16333                           ;lorawan_eu.c: 589: }
 16334                           ;lorawan_eu.c: 591: return result;
 16335  007358  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16336                           
 16337                           ; BSR set to: 0
 16338  00735A  0012               	return		;funcret
 16339  00735C                     __end_of_ValidateTxPower:
 16340                           	opt stack 0
 16341                           tosu	equ	0xFFF
 16342                           tosh	equ	0xFFE
 16343                           tosl	equ	0xFFD
 16344                           pclath	equ	0xFFA
 16345                           tblptru	equ	0xFF8
 16346                           tblptrh	equ	0xFF7
 16347                           tblptrl	equ	0xFF6
 16348                           tablat	equ	0xFF5
 16349                           prodh	equ	0xFF4
 16350                           prodl	equ	0xFF3
 16351                           intcon	equ	0xFF2
 16352                           intcon2	equ	0xFF1
 16353                           intcon3	equ	0xFF0
 16354                           indf0	equ	0xFEF
 16355                           postinc0	equ	0xFEE
 16356                           fsr0h	equ	0xFEA
 16357                           fsr0l	equ	0xFE9
 16358                           wreg	equ	0xFE8
 16359                           postinc1	equ	0xFE6
 16360                           postdec1	equ	0xFE5
 16361                           plusw1	equ	0xFE3
 16362                           fsr1h	equ	0xFE2
 16363                           fsr1l	equ	0xFE1
 16364                           indf2	equ	0xFDF
 16365                           postinc2	equ	0xFDE
 16366                           postdec2	equ	0xFDD
 16367                           plusw2	equ	0xFDB
 16368                           fsr2h	equ	0xFDA
 16369                           fsr2l	equ	0xFD9
 16370                           status	equ	0xFD8
 16371                           
 16372 ;; *************** function _ValidateDataRate *****************
 16373 ;; Defined at:
 16374 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;  dataRate        1    wreg     unsigned char 
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;  dataRate        1    4[BANK0 ] unsigned char 
 16379 ;;  result          1    5[BANK0 ] enum E8016
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      enum E8016
 16382 ;; Registers used:
 16383 ;;		wreg, status,2, status,0
 16384 ;; Tracked objects:
 16385 ;;		On entry : F/0
 16386 ;;		On exit  : F/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16393 ;;Total ram usage:        2 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    7
 16396 ;; This function calls:
 16397 ;;		Nothing
 16398 ;; This function is called by:
 16399 ;;		_ExecuteLinkAdr
 16400 ;;		_ExecuteRxParamSetupReq
 16401 ;;		_ValidateDataRange
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405                           	psect	text87
 16406  007694                     __ptext87:
 16407                           	opt stack 0
 16408  007694                     _ValidateDataRate:
 16409                           	opt stack 17
 16410                           
 16411                           ; BSR set to: 0
 16412                           ;incstack = 0
 16413                           ;ValidateDataRate@dataRate stored from wreg
 16414  007694  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 16415                           
 16416                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 16417  007696  0100               	movlb	0	; () banked
 16418  007698  6B65               	clrf	ValidateDataRate@result& (0+255),b
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 16422  00769A  0E07               	movlw	7
 16423  00769C  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 16424  00769E  D002               	goto	l1079
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;lorawan_eu.c: 575: {
 16428                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 16429  0076A0  0E03               	movlw	3
 16430  0076A2  6F65               	movwf	ValidateDataRate@result& (0+255),b
 16431  0076A4                     l1079:
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;lorawan_eu.c: 577: }
 16435                           ;lorawan_eu.c: 579: return result;
 16436  0076A4  5165               	movf	ValidateDataRate@result& (0+255),w,b
 16437                           
 16438                           ; BSR set to: 0
 16439  0076A6  0012               	return		;funcret
 16440  0076A8                     __end_of_ValidateDataRate:
 16441                           	opt stack 0
 16442                           tosu	equ	0xFFF
 16443                           tosh	equ	0xFFE
 16444                           tosl	equ	0xFFD
 16445                           pclath	equ	0xFFA
 16446                           tblptru	equ	0xFF8
 16447                           tblptrh	equ	0xFF7
 16448                           tblptrl	equ	0xFF6
 16449                           tablat	equ	0xFF5
 16450                           prodh	equ	0xFF4
 16451                           prodl	equ	0xFF3
 16452                           intcon	equ	0xFF2
 16453                           intcon2	equ	0xFF1
 16454                           intcon3	equ	0xFF0
 16455                           indf0	equ	0xFEF
 16456                           postinc0	equ	0xFEE
 16457                           fsr0h	equ	0xFEA
 16458                           fsr0l	equ	0xFE9
 16459                           wreg	equ	0xFE8
 16460                           postinc1	equ	0xFE6
 16461                           postdec1	equ	0xFE5
 16462                           plusw1	equ	0xFE3
 16463                           fsr1h	equ	0xFE2
 16464                           fsr1l	equ	0xFE1
 16465                           indf2	equ	0xFDF
 16466                           postinc2	equ	0xFDE
 16467                           postdec2	equ	0xFDD
 16468                           plusw2	equ	0xFDB
 16469                           fsr2h	equ	0xFDA
 16470                           fsr2l	equ	0xFD9
 16471                           status	equ	0xFD8
 16472                           
 16473 ;; *************** function _ValidateChannelMaskCntl *****************
 16474 ;; Defined at:
 16475 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;  channelMaskC    1    wreg     unsigned char 
 16478 ;; Auto vars:     Size  Location     Type
 16479 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16480 ;;  result          1    4[BANK0 ] enum E8016
 16481 ;; Return value:  Size  Location     Type
 16482 ;;                  1    wreg      enum E8016
 16483 ;; Registers used:
 16484 ;;		wreg, status,2, status,0
 16485 ;; Tracked objects:
 16486 ;;		On entry : F/0
 16487 ;;		On exit  : F/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;Total ram usage:        2 bytes
 16495 ;; Hardware stack levels used:    1
 16496 ;; Hardware stack levels required when called:    7
 16497 ;; This function calls:
 16498 ;;		Nothing
 16499 ;; This function is called by:
 16500 ;;		_ExecuteLinkAdr
 16501 ;; This function uses a non-reentrant model
 16502 ;;
 16503                           
 16504                           	psect	text88
 16505  00763C                     __ptext88:
 16506                           	opt stack 0
 16507  00763C                     _ValidateChannelMaskCntl:
 16508                           	opt stack 17
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;incstack = 0
 16512                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16513  00763C  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16514                           
 16515                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16516  00763E  0100               	movlb	0	; () banked
 16517  007640  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16521  007642  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16522  007644  E005               	bz	l1250
 16523                           
 16524                           ; BSR set to: 0
 16525  007646  0E06               	movlw	6
 16526  007648  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16527  00764A  E002               	bz	l1250
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;lorawan_eu.c: 1142: {
 16531                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16532  00764C  0E03               	movlw	3
 16533  00764E  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16534  007650                     l1250:
 16535                           
 16536                           ; BSR set to: 0
 16537                           ;lorawan_eu.c: 1144: }
 16538                           ;lorawan_eu.c: 1146: return result;
 16539  007650  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16540                           
 16541                           ; BSR set to: 0
 16542  007652  0012               	return		;funcret
 16543  007654                     __end_of_ValidateChannelMaskCntl:
 16544                           	opt stack 0
 16545                           tosu	equ	0xFFF
 16546                           tosh	equ	0xFFE
 16547                           tosl	equ	0xFFD
 16548                           pclath	equ	0xFFA
 16549                           tblptru	equ	0xFF8
 16550                           tblptrh	equ	0xFF7
 16551                           tblptrl	equ	0xFF6
 16552                           tablat	equ	0xFF5
 16553                           prodh	equ	0xFF4
 16554                           prodl	equ	0xFF3
 16555                           intcon	equ	0xFF2
 16556                           intcon2	equ	0xFF1
 16557                           intcon3	equ	0xFF0
 16558                           indf0	equ	0xFEF
 16559                           postinc0	equ	0xFEE
 16560                           fsr0h	equ	0xFEA
 16561                           fsr0l	equ	0xFE9
 16562                           wreg	equ	0xFE8
 16563                           postinc1	equ	0xFE6
 16564                           postdec1	equ	0xFE5
 16565                           plusw1	equ	0xFE3
 16566                           fsr1h	equ	0xFE2
 16567                           fsr1l	equ	0xFE1
 16568                           indf2	equ	0xFDF
 16569                           postinc2	equ	0xFDE
 16570                           postdec2	equ	0xFDD
 16571                           plusw2	equ	0xFDB
 16572                           fsr2h	equ	0xFDA
 16573                           fsr2l	equ	0xFD9
 16574                           status	equ	0xFD8
 16575                           
 16576 ;; *************** function _ValidateChannelMask *****************
 16577 ;; Defined at:
 16578 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16579 ;; Parameters:    Size  Location     Type
 16580 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16581 ;; Auto vars:     Size  Location     Type
 16582 ;;  i               1    6[BANK0 ] unsigned char 
 16583 ;; Return value:  Size  Location     Type
 16584 ;;                  1    wreg      enum E8016
 16585 ;; Registers used:
 16586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16587 ;; Tracked objects:
 16588 ;;		On entry : F/0
 16589 ;;		On exit  : F/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16595 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16596 ;;Total ram usage:        3 bytes
 16597 ;; Hardware stack levels used:    1
 16598 ;; Hardware stack levels required when called:    7
 16599 ;; This function calls:
 16600 ;;		Nothing
 16601 ;; This function is called by:
 16602 ;;		_ExecuteLinkAdr
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606                           	psect	text89
 16607  006EE4                     __ptext89:
 16608                           	opt stack 0
 16609  006EE4                     _ValidateChannelMask:
 16610                           	opt stack 17
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16614                           
 16615                           ; BSR set to: 0
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;incstack = 0
 16619  006EE4  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16620  006EE6  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16621  006EE8  B4D8               	btfsc	status,2,c
 16622  006EEA  0C03               	retlw	3
 16623                           
 16624                           ; BSR set to: 0
 16625                           ;lorawan_eu.c: 1171: {
 16626                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16627  006EEC  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16628  006EEE                     l1264:
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;lorawan_eu.c: 1173: {
 16632                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16633  006EEE  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16634  006EF0  D00D               	goto	l12939
 16635                           
 16636                           ; BSR set to: 0
 16637  006EF2  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16638  006EF4  0D0E               	mullw	14
 16639  006EF6  0E0D               	movlw	low (_Channels+13)
 16640  006EF8  24F3               	addwf	prodl,w,c
 16641  006EFA  6ED9               	movwf	fsr2l,c
 16642  006EFC  0E04               	movlw	high (_Channels+13)
 16643  006EFE  20F4               	addwfc	prodh,w,c
 16644  006F00  6EDA               	movwf	fsr2h,c
 16645  006F02  50DF               	movf	indf2,w,c
 16646  006F04  0B07               	andlw	7
 16647  006F06  0A07               	xorlw	7
 16648  006F08  E001               	bz	l12939
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;lorawan_eu.c: 1175: {
 16652                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16653  006F0A  0C03               	retlw	3
 16654  006F0C                     l12939:
 16655                           
 16656                           ; BSR set to: 0
 16657                           ;lorawan_eu.c: 1178: else
 16658                           ;lorawan_eu.c: 1179: {
 16659                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16660  006F0C  90D8               	bcf	status,0,c
 16661  006F0E  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16662  006F10  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16663                           
 16664                           ; BSR set to: 0
 16665  006F12  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16666                           
 16667                           ; BSR set to: 0
 16668  006F14  0E0F               	movlw	15
 16669  006F16  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16670  006F18  D7EA               	goto	l1264
 16671  006F1A  0C00               	retlw	0
 16672  006F1C                     __end_of_ValidateChannelMask:
 16673                           	opt stack 0
 16674                           tosu	equ	0xFFF
 16675                           tosh	equ	0xFFE
 16676                           tosl	equ	0xFFD
 16677                           pclath	equ	0xFFA
 16678                           tblptru	equ	0xFF8
 16679                           tblptrh	equ	0xFF7
 16680                           tblptrl	equ	0xFF6
 16681                           tablat	equ	0xFF5
 16682                           prodh	equ	0xFF4
 16683                           prodl	equ	0xFF3
 16684                           intcon	equ	0xFF2
 16685                           intcon2	equ	0xFF1
 16686                           intcon3	equ	0xFF0
 16687                           indf0	equ	0xFEF
 16688                           postinc0	equ	0xFEE
 16689                           fsr0h	equ	0xFEA
 16690                           fsr0l	equ	0xFE9
 16691                           wreg	equ	0xFE8
 16692                           postinc1	equ	0xFE6
 16693                           postdec1	equ	0xFE5
 16694                           plusw1	equ	0xFE3
 16695                           fsr1h	equ	0xFE2
 16696                           fsr1l	equ	0xFE1
 16697                           indf2	equ	0xFDF
 16698                           postinc2	equ	0xFDE
 16699                           postdec2	equ	0xFDD
 16700                           plusw2	equ	0xFDB
 16701                           fsr2h	equ	0xFDA
 16702                           fsr2l	equ	0xFD9
 16703                           status	equ	0xFD8
 16704                           
 16705 ;; *************** function _UpdateTxPower *****************
 16706 ;; Defined at:
 16707 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;  txPowerNew      1    wreg     unsigned char 
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16712 ;; Return value:  Size  Location     Type
 16713 ;;                  1    wreg      void 
 16714 ;; Registers used:
 16715 ;;		wreg
 16716 ;; Tracked objects:
 16717 ;;		On entry : F/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16725 ;;Total ram usage:        1 bytes
 16726 ;; Hardware stack levels used:    1
 16727 ;; Hardware stack levels required when called:    7
 16728 ;; This function calls:
 16729 ;;		Nothing
 16730 ;; This function is called by:
 16731 ;;		_ExecuteLinkAdr
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735                           	psect	text90
 16736  007836                     __ptext90:
 16737                           	opt stack 0
 16738  007836                     _UpdateTxPower:
 16739                           	opt stack 17
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;incstack = 0
 16743                           ;UpdateTxPower@txPowerNew stored from wreg
 16744  007836  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16745                           
 16746                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16747  007838  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16748  00783C  0012               	return		;funcret
 16749  00783E                     __end_of_UpdateTxPower:
 16750                           	opt stack 0
 16751                           tosu	equ	0xFFF
 16752                           tosh	equ	0xFFE
 16753                           tosl	equ	0xFFD
 16754                           pclath	equ	0xFFA
 16755                           tblptru	equ	0xFF8
 16756                           tblptrh	equ	0xFF7
 16757                           tblptrl	equ	0xFF6
 16758                           tablat	equ	0xFF5
 16759                           prodh	equ	0xFF4
 16760                           prodl	equ	0xFF3
 16761                           intcon	equ	0xFF2
 16762                           intcon2	equ	0xFF1
 16763                           intcon3	equ	0xFF0
 16764                           indf0	equ	0xFEF
 16765                           postinc0	equ	0xFEE
 16766                           fsr0h	equ	0xFEA
 16767                           fsr0l	equ	0xFE9
 16768                           wreg	equ	0xFE8
 16769                           postinc1	equ	0xFE6
 16770                           postdec1	equ	0xFE5
 16771                           plusw1	equ	0xFE3
 16772                           fsr1h	equ	0xFE2
 16773                           fsr1l	equ	0xFE1
 16774                           indf2	equ	0xFDF
 16775                           postinc2	equ	0xFDE
 16776                           postdec2	equ	0xFDD
 16777                           plusw2	equ	0xFDB
 16778                           fsr2h	equ	0xFDA
 16779                           fsr2l	equ	0xFD9
 16780                           status	equ	0xFD8
 16781                           
 16782 ;; *************** function _UpdateCurrentDataRate *****************
 16783 ;; Defined at:
 16784 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;  valueNew        1    wreg     unsigned char 
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;  valueNew        1    4[BANK0 ] unsigned char 
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  1    wreg      void 
 16791 ;; Registers used:
 16792 ;;		wreg
 16793 ;; Tracked objects:
 16794 ;;		On entry : F/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16801 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16802 ;;Total ram usage:        1 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:    7
 16805 ;; This function calls:
 16806 ;;		Nothing
 16807 ;; This function is called by:
 16808 ;;		_ExecuteLinkAdr
 16809 ;; This function uses a non-reentrant model
 16810 ;;
 16811                           
 16812                           	psect	text91
 16813  00783E                     __ptext91:
 16814                           	opt stack 0
 16815  00783E                     _UpdateCurrentDataRate:
 16816                           	opt stack 17
 16817                           
 16818                           ;incstack = 0
 16819                           ;UpdateCurrentDataRate@valueNew stored from wreg
 16820  00783E  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 16821                           
 16822                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 16823  007840  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 16824  007844  0012               	return		;funcret
 16825  007846                     __end_of_UpdateCurrentDataRate:
 16826                           	opt stack 0
 16827                           tosu	equ	0xFFF
 16828                           tosh	equ	0xFFE
 16829                           tosl	equ	0xFFD
 16830                           pclath	equ	0xFFA
 16831                           tblptru	equ	0xFF8
 16832                           tblptrh	equ	0xFF7
 16833                           tblptrl	equ	0xFF6
 16834                           tablat	equ	0xFF5
 16835                           prodh	equ	0xFF4
 16836                           prodl	equ	0xFF3
 16837                           intcon	equ	0xFF2
 16838                           intcon2	equ	0xFF1
 16839                           intcon3	equ	0xFF0
 16840                           indf0	equ	0xFEF
 16841                           postinc0	equ	0xFEE
 16842                           fsr0h	equ	0xFEA
 16843                           fsr0l	equ	0xFE9
 16844                           wreg	equ	0xFE8
 16845                           postinc1	equ	0xFE6
 16846                           postdec1	equ	0xFE5
 16847                           plusw1	equ	0xFE3
 16848                           fsr1h	equ	0xFE2
 16849                           fsr1l	equ	0xFE1
 16850                           indf2	equ	0xFDF
 16851                           postinc2	equ	0xFDE
 16852                           postdec2	equ	0xFDD
 16853                           plusw2	equ	0xFDB
 16854                           fsr2h	equ	0xFDA
 16855                           fsr2l	equ	0xFD9
 16856                           status	equ	0xFD8
 16857                           
 16858 ;; *************** function _EnableChannels *****************
 16859 ;; Defined at:
 16860 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16863 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;		None
 16866 ;; Return value:  Size  Location     Type
 16867 ;;                  1    wreg      void 
 16868 ;; Registers used:
 16869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16870 ;; Tracked objects:
 16871 ;;		On entry : F/0
 16872 ;;		On exit  : F/0
 16873 ;;		Unchanged: 0/0
 16874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16875 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16878 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;Total ram usage:        3 bytes
 16880 ;; Hardware stack levels used:    1
 16881 ;; Hardware stack levels required when called:    9
 16882 ;; This function calls:
 16883 ;;		_EnableChannels1
 16884 ;; This function is called by:
 16885 ;;		_ExecuteLinkAdr
 16886 ;; This function uses a non-reentrant model
 16887 ;;
 16888                           
 16889                           	psect	text92
 16890  00766A                     __ptext92:
 16891                           	opt stack 0
 16892  00766A                     _EnableChannels:
 16893                           	opt stack 15
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16897                           
 16898                           ;incstack = 0
 16899  00766A  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16900  00766E  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16901  007672  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16902  007676  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16903  007678  0E10               	movlw	16
 16904  00767A  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16905  00767C  EFD5  F033         	goto	_EnableChannels1	;wreg free
 16906  007680                     __end_of_EnableChannels:
 16907                           	opt stack 0
 16908                           tosu	equ	0xFFF
 16909                           tosh	equ	0xFFE
 16910                           tosl	equ	0xFFD
 16911                           pclath	equ	0xFFA
 16912                           tblptru	equ	0xFF8
 16913                           tblptrh	equ	0xFF7
 16914                           tblptrl	equ	0xFF6
 16915                           tablat	equ	0xFF5
 16916                           prodh	equ	0xFF4
 16917                           prodl	equ	0xFF3
 16918                           intcon	equ	0xFF2
 16919                           intcon2	equ	0xFF1
 16920                           intcon3	equ	0xFF0
 16921                           indf0	equ	0xFEF
 16922                           postinc0	equ	0xFEE
 16923                           fsr0h	equ	0xFEA
 16924                           fsr0l	equ	0xFE9
 16925                           wreg	equ	0xFE8
 16926                           postinc1	equ	0xFE6
 16927                           postdec1	equ	0xFE5
 16928                           plusw1	equ	0xFE3
 16929                           fsr1h	equ	0xFE2
 16930                           fsr1l	equ	0xFE1
 16931                           indf2	equ	0xFDF
 16932                           postinc2	equ	0xFDE
 16933                           postdec2	equ	0xFDD
 16934                           plusw2	equ	0xFDB
 16935                           fsr2h	equ	0xFDA
 16936                           fsr2l	equ	0xFD9
 16937                           status	equ	0xFD8
 16938                           
 16939 ;; *************** function _EnableChannels1 *****************
 16940 ;; Defined at:
 16941 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16944 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16945 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16946 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;  i               1   13[BANK0 ] unsigned char 
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16953 ;; Tracked objects:
 16954 ;;		On entry : F/0
 16955 ;;		On exit  : F/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16958 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16961 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16962 ;;Total ram usage:        6 bytes
 16963 ;; Hardware stack levels used:    1
 16964 ;; Hardware stack levels required when called:    8
 16965 ;; This function calls:
 16966 ;;		_UpdateChannelIdStatus
 16967 ;; This function is called by:
 16968 ;;		_EnableChannels
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           	psect	text93
 16973  0067AA                     __ptext93:
 16974                           	opt stack 0
 16975  0067AA                     _EnableChannels1:
 16976                           	opt stack 15
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;lorawan_eu.c: 1195: uint8_t i;
 16980                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;incstack = 0
 16984  0067AA  0E06               	movlw	6
 16985  0067AC  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16986  0067AE  E10E               	bnz	l12649
 16987                           
 16988                           ; BSR set to: 0
 16989                           ;lorawan_eu.c: 1198: {
 16990                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16991  0067B0  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16992  0067B4  D007               	goto	l12647
 16993  0067B6                     l12643:
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;lorawan_eu.c: 1200: {
 16997                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 16998  0067B6  0E01               	movlw	1
 16999  0067B8  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17000  0067BA  516D               	movf	EnableChannels1@i& (0+255),w,b
 17001  0067BC  ECAF  F023         	call	_UpdateChannelIdStatus
 17002                           
 17003                           ; BSR set to: 2
 17004  0067C0  0100               	movlb	0	; () banked
 17005  0067C2  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 17006  0067C4                     l12647:
 17007                           
 17008                           ; BSR set to: 0
 17009  0067C4  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17010  0067C6  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17011  0067C8  E3F6               	bnc	l12643
 17012  0067CA  0012               	return	
 17013  0067CC                     l12649:
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 17017  0067CC  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17018  0067CE  A4D8               	btfss	status,2,c
 17019  0067D0  0012               	return	
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;lorawan_eu.c: 1205: {
 17023                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17024  0067D2  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17025  0067D6  D011               	goto	l12661
 17026  0067D8                     l1279:
 17027                           
 17028                           ; BSR set to: 0
 17029                           ;lorawan_eu.c: 1207: {
 17030                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 17031  0067D8  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 17032  0067DA  D006               	goto	l12655
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;lorawan_eu.c: 1209: {
 17036                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 17037  0067DC  0E01               	movlw	1
 17038  0067DE  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17039  0067E0  516D               	movf	EnableChannels1@i& (0+255),w,b
 17040  0067E2  ECAF  F023         	call	_UpdateChannelIdStatus
 17041                           
 17042                           ;lorawan_eu.c: 1211: }
 17043  0067E6  D004               	goto	l12657
 17044  0067E8                     l12655:
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;lorawan_eu.c: 1212: else
 17048                           ;lorawan_eu.c: 1213: {
 17049                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 17050  0067E8  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 17051  0067EA  516D               	movf	EnableChannels1@i& (0+255),w,b
 17052  0067EC  ECAF  F023         	call	_UpdateChannelIdStatus
 17053  0067F0                     l12657:
 17054                           
 17055                           ; BSR set to: 2
 17056                           ;lorawan_eu.c: 1215: }
 17057                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 17058  0067F0  0100               	movlb	0	; () banked
 17059  0067F2  90D8               	bcf	status,0,c
 17060  0067F4  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 17061  0067F6  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 17062                           
 17063                           ; BSR set to: 0
 17064  0067F8  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 17065  0067FA                     l12661:
 17066                           
 17067                           ; BSR set to: 0
 17068  0067FA  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17069  0067FC  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17070  0067FE  E3EC               	bnc	l1279
 17071                           
 17072                           ; BSR set to: 0
 17073  006800  0012               	return		;funcret
 17074  006802                     __end_of_EnableChannels1:
 17075                           	opt stack 0
 17076                           tosu	equ	0xFFF
 17077                           tosh	equ	0xFFE
 17078                           tosl	equ	0xFFD
 17079                           pclath	equ	0xFFA
 17080                           tblptru	equ	0xFF8
 17081                           tblptrh	equ	0xFF7
 17082                           tblptrl	equ	0xFF6
 17083                           tablat	equ	0xFF5
 17084                           prodh	equ	0xFF4
 17085                           prodl	equ	0xFF3
 17086                           intcon	equ	0xFF2
 17087                           intcon2	equ	0xFF1
 17088                           intcon3	equ	0xFF0
 17089                           indf0	equ	0xFEF
 17090                           postinc0	equ	0xFEE
 17091                           fsr0h	equ	0xFEA
 17092                           fsr0l	equ	0xFE9
 17093                           wreg	equ	0xFE8
 17094                           postinc1	equ	0xFE6
 17095                           postdec1	equ	0xFE5
 17096                           plusw1	equ	0xFE3
 17097                           fsr1h	equ	0xFE2
 17098                           fsr1l	equ	0xFE1
 17099                           indf2	equ	0xFDF
 17100                           postinc2	equ	0xFDE
 17101                           postdec2	equ	0xFDD
 17102                           plusw2	equ	0xFDB
 17103                           fsr2h	equ	0xFDA
 17104                           fsr2l	equ	0xFD9
 17105                           status	equ	0xFD8
 17106                           
 17107 ;; *************** function _UpdateChannelIdStatus *****************
 17108 ;; Defined at:
 17109 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  channelId       1    wreg     unsigned char 
 17112 ;;  statusNew       1    4[BANK0 ] unsigned char 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  channelId       1    6[BANK0 ] unsigned char 
 17115 ;;  i               1    7[BANK0 ] unsigned char 
 17116 ;; Return value:  Size  Location     Type
 17117 ;;                  1    wreg      void 
 17118 ;; Registers used:
 17119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17120 ;; Tracked objects:
 17121 ;;		On entry : F/0
 17122 ;;		On exit  : F/2
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17125 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17128 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17129 ;;Total ram usage:        4 bytes
 17130 ;; Hardware stack levels used:    1
 17131 ;; Hardware stack levels required when called:    7
 17132 ;; This function calls:
 17133 ;;		Nothing
 17134 ;; This function is called by:
 17135 ;;		_LORAWAN_SetChannelIdStatus
 17136 ;;		_ExecuteNewChannel
 17137 ;;		_EnableChannels1
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           	psect	text94
 17142  00475E                     __ptext94:
 17143                           	opt stack 0
 17144  00475E                     _UpdateChannelIdStatus:
 17145                           	opt stack 17
 17146                           
 17147                           ; BSR set to: 0
 17148                           ;incstack = 0
 17149                           ;UpdateChannelIdStatus@channelId stored from wreg
 17150  00475E  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 17151                           
 17152                           ;lorawan_eu.c: 1044: uint8_t i;
 17153                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17154  004760  0100               	movlb	0	; () banked
 17155  004762  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17156  004764  0D0E               	mullw	14
 17157  004766  0E04               	movlw	low (_Channels+4)
 17158  004768  24F3               	addwf	prodl,w,c
 17159  00476A  6ED9               	movwf	fsr2l,c
 17160  00476C  0E04               	movlw	high (_Channels+4)
 17161  00476E  20F4               	addwfc	prodh,w,c
 17162  004770  6EDA               	movwf	fsr2h,c
 17163  004772  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17164                           
 17165                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17166  004776  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17167  004778  0D0E               	mullw	14
 17168  00477A  0E04               	movlw	low (_Channels+4)
 17169  00477C  24F3               	addwf	prodl,w,c
 17170  00477E  6ED9               	movwf	fsr2l,c
 17171  004780  0E04               	movlw	high (_Channels+4)
 17172  004782  20F4               	addwfc	prodh,w,c
 17173  004784  6EDA               	movwf	fsr2h,c
 17174  004786  50DF               	movf	indf2,w,c
 17175  004788  E10C               	bnz	l12359
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;lorawan_eu.c: 1048: {
 17179                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17180  00478A  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17181  00478C  0D0E               	mullw	14
 17182  00478E  0E08               	movlw	low (_Channels+8)
 17183  004790  24F3               	addwf	prodl,w,c
 17184  004792  6ED9               	movwf	fsr2l,c
 17185  004794  0E04               	movlw	high (_Channels+8)
 17186  004796  20F4               	addwfc	prodh,w,c
 17187  004798  6EDA               	movwf	fsr2h,c
 17188  00479A  6ADE               	clrf	postinc2,c
 17189  00479C  6ADE               	clrf	postinc2,c
 17190  00479E  6ADE               	clrf	postinc2,c
 17191  0047A0  6ADD               	clrf	postdec2,c
 17192  0047A2                     l12359:
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;lorawan_eu.c: 1051: }
 17196                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17197  0047A2  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17198  0047A4  D04E               	goto	l12373
 17199  0047A6                     l12361:
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;lorawan_eu.c: 1054: {
 17203                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17204  0047A6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17205  0047A8  0D0E               	mullw	14
 17206  0047AA  0E05               	movlw	low (_Channels+5)
 17207  0047AC  24F3               	addwf	prodl,w,c
 17208  0047AE  6ED9               	movwf	fsr2l,c
 17209  0047B0  0E04               	movlw	high (_Channels+5)
 17210  0047B2  20F4               	addwfc	prodh,w,c
 17211  0047B4  6EDA               	movwf	fsr2h,c
 17212  0047B6  50DF               	movf	223,w,c
 17213  0047B8  0B0F               	andlw	15
 17214  0047BA  0100               	movlb	0	; () banked
 17215  0047BC  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17216  0047BE  0102               	movlb	2	; () banked
 17217  0047C0  51EB               	movf	(_loRa+235)& (0+255),w,b
 17218  0047C2  0100               	movlb	0	; () banked
 17219  0047C4  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17220  0047C6  E216               	bc	l1215
 17221                           
 17222                           ; BSR set to: 0
 17223  0047C8  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17224  0047CA  0D0E               	mullw	14
 17225  0047CC  0E04               	movlw	low (_Channels+4)
 17226  0047CE  24F3               	addwf	prodl,w,c
 17227  0047D0  6ED9               	movwf	fsr2l,c
 17228  0047D2  0E04               	movlw	high (_Channels+4)
 17229  0047D4  20F4               	addwfc	prodh,w,c
 17230  0047D6  6EDA               	movwf	fsr2h,c
 17231  0047D8  04DE               	decf	postinc2,w,c
 17232  0047DA  E10C               	bnz	l1215
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;lorawan_eu.c: 1056: {
 17236                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17237  0047DC  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17238  0047DE  0D0E               	mullw	14
 17239  0047E0  0E05               	movlw	low (_Channels+5)
 17240  0047E2  24F3               	addwf	prodl,w,c
 17241  0047E4  6ED9               	movwf	fsr2l,c
 17242  0047E6  0E04               	movlw	high (_Channels+5)
 17243  0047E8  20F4               	addwfc	prodh,w,c
 17244  0047EA  6EDA               	movwf	fsr2h,c
 17245  0047EC  50DF               	movf	223,w,c
 17246  0047EE  0B0F               	andlw	15
 17247  0047F0  0102               	movlb	2	; () banked
 17248  0047F2  6FEB               	movwf	(_loRa+235)& (0+255),b
 17249  0047F4                     l1215:
 17250                           
 17251                           ;lorawan_eu.c: 1058: }
 17252                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17253  0047F4  0100               	movlb	0	; () banked
 17254  0047F6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17255  0047F8  0D0E               	mullw	14
 17256  0047FA  0E05               	movlw	low (_Channels+5)
 17257  0047FC  24F3               	addwf	prodl,w,c
 17258  0047FE  6ED9               	movwf	fsr2l,c
 17259  004800  0E04               	movlw	high (_Channels+5)
 17260  004802  20F4               	addwfc	prodh,w,c
 17261  004804  6EDA               	movwf	fsr2h,c
 17262  004806  38DF               	swapf	223,w,c
 17263  004808  0B0F               	andlw	15
 17264  00480A  0102               	movlb	2	; () banked
 17265  00480C  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17266  00480E  D017               	goto	l12371
 17267                           
 17268                           ; BSR set to: 2
 17269  004810  0100               	movlb	0	; () banked
 17270  004812  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17271  004814  0D0E               	mullw	14
 17272  004816  0E04               	movlw	low (_Channels+4)
 17273  004818  24F3               	addwf	prodl,w,c
 17274  00481A  6ED9               	movwf	fsr2l,c
 17275  00481C  0E04               	movlw	high (_Channels+4)
 17276  00481E  20F4               	addwfc	prodh,w,c
 17277  004820  6EDA               	movwf	fsr2h,c
 17278  004822  04DE               	decf	postinc2,w,c
 17279  004824  E10C               	bnz	l12371
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;lorawan_eu.c: 1060: {
 17283                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17284  004826  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17285  004828  0D0E               	mullw	14
 17286  00482A  0E05               	movlw	low (_Channels+5)
 17287  00482C  24F3               	addwf	prodl,w,c
 17288  00482E  6ED9               	movwf	fsr2l,c
 17289  004830  0E04               	movlw	high (_Channels+5)
 17290  004832  20F4               	addwfc	prodh,w,c
 17291  004834  6EDA               	movwf	fsr2h,c
 17292  004836  38DF               	swapf	223,w,c
 17293  004838  0B0F               	andlw	15
 17294  00483A  0102               	movlb	2	; () banked
 17295  00483C  6FEC               	movwf	(_loRa+236)& (0+255),b
 17296  00483E                     l12371:
 17297  00483E  0100               	movlb	0	; () banked
 17298  004840  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17299  004842                     l12373:
 17300                           
 17301                           ; BSR set to: 0
 17302  004842  0102               	movlb	2	; () banked
 17303  004844  51ED               	movf	(_loRa+237)& (0+255),w,b
 17304  004846  0100               	movlb	0	; () banked
 17305  004848  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17306  00484A  E3AD               	bnc	l12361
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;lorawan_eu.c: 1062: }
 17310                           ;lorawan_eu.c: 1063: }
 17311                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17312  00484C  0102               	movlb	2	; () banked
 17313  00484E  51DF               	movf	(_loRa+223)& (0+255),w,b
 17314  004850  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17315  004852  E202               	bc	l12379
 17316                           
 17317                           ; BSR set to: 2
 17318                           ;lorawan_eu.c: 1066: {
 17319                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17320  004854  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17321  004858                     l12379:
 17322                           
 17323                           ; BSR set to: 2
 17324                           ;lorawan_eu.c: 1068: }
 17325                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17326  004858  51EB               	movf	(_loRa+235)& (0+255),w,b
 17327  00485A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17328  00485C  A0D8               	btfss	status,0,c
 17329                           
 17330                           ; BSR set to: 2
 17331                           ;lorawan_eu.c: 1071: {
 17332                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17333  00485E  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17334                           
 17335                           ; BSR set to: 2
 17336  004862  0012               	return		;funcret
 17337  004864                     __end_of_UpdateChannelIdStatus:
 17338                           	opt stack 0
 17339                           tosu	equ	0xFFF
 17340                           tosh	equ	0xFFE
 17341                           tosl	equ	0xFFD
 17342                           pclath	equ	0xFFA
 17343                           tblptru	equ	0xFF8
 17344                           tblptrh	equ	0xFF7
 17345                           tblptrl	equ	0xFF6
 17346                           tablat	equ	0xFF5
 17347                           prodh	equ	0xFF4
 17348                           prodl	equ	0xFF3
 17349                           intcon	equ	0xFF2
 17350                           intcon2	equ	0xFF1
 17351                           intcon3	equ	0xFF0
 17352                           indf0	equ	0xFEF
 17353                           postinc0	equ	0xFEE
 17354                           fsr0h	equ	0xFEA
 17355                           fsr0l	equ	0xFE9
 17356                           wreg	equ	0xFE8
 17357                           postinc1	equ	0xFE6
 17358                           postdec1	equ	0xFE5
 17359                           plusw1	equ	0xFE3
 17360                           fsr1h	equ	0xFE2
 17361                           fsr1l	equ	0xFE1
 17362                           indf2	equ	0xFDF
 17363                           postinc2	equ	0xFDE
 17364                           postdec2	equ	0xFDD
 17365                           plusw2	equ	0xFDB
 17366                           fsr2h	equ	0xFDA
 17367                           fsr2l	equ	0xFD9
 17368                           status	equ	0xFD8
 17369                           
 17370 ;; *************** function _ExecuteDutyCycle *****************
 17371 ;; Defined at:
 17372 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17373 ;; Parameters:    Size  Location     Type
 17374 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17375 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17376 ;; Auto vars:     Size  Location     Type
 17377 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17378 ;; Return value:  Size  Location     Type
 17379 ;;                  2    4[BANK0 ] PTR unsigned char 
 17380 ;; Registers used:
 17381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17382 ;; Tracked objects:
 17383 ;;		On entry : F/0
 17384 ;;		On exit  : D/0
 17385 ;;		Unchanged: 0/0
 17386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17389 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17391 ;;Total ram usage:        6 bytes
 17392 ;; Hardware stack levels used:    1
 17393 ;; Hardware stack levels required when called:    7
 17394 ;; This function calls:
 17395 ;;		Nothing
 17396 ;; This function is called by:
 17397 ;;		_MacExecuteCommands
 17398 ;; This function uses a non-reentrant model
 17399 ;;
 17400                           
 17401                           	psect	text95
 17402  006950                     __ptext95:
 17403                           	opt stack 0
 17404  006950                     _ExecuteDutyCycle:
 17405                           	opt stack 18
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17409                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17410                           
 17411                           ; BSR set to: 2
 17412                           ;incstack = 0
 17413  006950  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17414  006954  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17415  006958  50DF               	movf	indf2,w,c
 17416  00695A  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17417                           
 17418                           ; BSR set to: 0
 17419  00695C  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17420  00695E  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17421                           
 17422                           ; BSR set to: 0
 17423                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17424  006960  0E0F               	movlw	15
 17425  006962  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17426  006964  D012               	goto	l1091
 17427                           
 17428                           ; BSR set to: 0
 17429                           ;lorawan_eu.c: 600: {
 17430                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17431  006966  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17432  00696A  0E01               	movlw	1
 17433  00696C  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17434  00696E  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17435  006970  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17436  006972  D003               	goto	u14764
 17437  006974                     u14765:
 17438  006974  90D8               	bcf	status,0,c
 17439  006976  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17440  006978  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17441  00697A                     u14764:
 17442  00697A  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17443  00697C  D7FB               	goto	u14765
 17444  00697E  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17445  006982  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17446                           
 17447                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17448  006986  0102               	movlb	2	; () banked
 17449  006988  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17450  00698A                     l1091:
 17451                           
 17452                           ;lorawan_eu.c: 603: }
 17453                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17454  00698A  0100               	movlb	0	; () banked
 17455  00698C  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17456  00698E  E102               	bnz	l13459
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;lorawan_eu.c: 606: {
 17460                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17461  006990  0102               	movlb	2	; () banked
 17462  006992  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17463  006994                     l13459:
 17464                           
 17465                           ;lorawan_eu.c: 608: }
 17466                           ;lorawan_eu.c: 610: return ptr;
 17467  006994  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17468  006998  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17469  00699C  0012               	return		;funcret
 17470  00699E                     __end_of_ExecuteDutyCycle:
 17471                           	opt stack 0
 17472                           tosu	equ	0xFFF
 17473                           tosh	equ	0xFFE
 17474                           tosl	equ	0xFFD
 17475                           pclath	equ	0xFFA
 17476                           tblptru	equ	0xFF8
 17477                           tblptrh	equ	0xFF7
 17478                           tblptrl	equ	0xFF6
 17479                           tablat	equ	0xFF5
 17480                           prodh	equ	0xFF4
 17481                           prodl	equ	0xFF3
 17482                           intcon	equ	0xFF2
 17483                           intcon2	equ	0xFF1
 17484                           intcon3	equ	0xFF0
 17485                           indf0	equ	0xFEF
 17486                           postinc0	equ	0xFEE
 17487                           fsr0h	equ	0xFEA
 17488                           fsr0l	equ	0xFE9
 17489                           wreg	equ	0xFE8
 17490                           postinc1	equ	0xFE6
 17491                           postdec1	equ	0xFE5
 17492                           plusw1	equ	0xFE3
 17493                           fsr1h	equ	0xFE2
 17494                           fsr1l	equ	0xFE1
 17495                           indf2	equ	0xFDF
 17496                           postinc2	equ	0xFDE
 17497                           postdec2	equ	0xFDD
 17498                           plusw2	equ	0xFDB
 17499                           fsr2h	equ	0xFDA
 17500                           fsr2l	equ	0xFD9
 17501                           status	equ	0xFD8
 17502                           
 17503 ;; *************** function _ExecuteDevStatus *****************
 17504 ;; Defined at:
 17505 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17506 ;; Parameters:    Size  Location     Type
 17507 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17508 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;		None
 17511 ;; Return value:  Size  Location     Type
 17512 ;;                  2    4[BANK0 ] PTR unsigned char 
 17513 ;; Registers used:
 17514 ;;		wreg, status,2, status,0
 17515 ;; Tracked objects:
 17516 ;;		On entry : F/0
 17517 ;;		On exit  : F/0
 17518 ;;		Unchanged: F/0
 17519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17520 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17523 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17524 ;;Total ram usage:        2 bytes
 17525 ;; Hardware stack levels used:    1
 17526 ;; Hardware stack levels required when called:    7
 17527 ;; This function calls:
 17528 ;;		Nothing
 17529 ;; This function is called by:
 17530 ;;		_MacExecuteCommands
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534                           	psect	text96
 17535  0077E0                     __ptext96:
 17536                           	opt stack 0
 17537  0077E0                     _ExecuteDevStatus:
 17538                           	opt stack 18
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;lorawan_eu.c: 674: return ptr;
 17542                           
 17543                           ;incstack = 0
 17544  0077E0  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17545  0077E4  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17546                           
 17547                           ; BSR set to: 0
 17548  0077E8  0012               	return		;funcret
 17549  0077EA                     __end_of_ExecuteDevStatus:
 17550                           	opt stack 0
 17551                           tosu	equ	0xFFF
 17552                           tosh	equ	0xFFE
 17553                           tosl	equ	0xFFD
 17554                           pclath	equ	0xFFA
 17555                           tblptru	equ	0xFF8
 17556                           tblptrh	equ	0xFF7
 17557                           tblptrl	equ	0xFF6
 17558                           tablat	equ	0xFF5
 17559                           prodh	equ	0xFF4
 17560                           prodl	equ	0xFF3
 17561                           intcon	equ	0xFF2
 17562                           intcon2	equ	0xFF1
 17563                           intcon3	equ	0xFF0
 17564                           indf0	equ	0xFEF
 17565                           postinc0	equ	0xFEE
 17566                           fsr0h	equ	0xFEA
 17567                           fsr0l	equ	0xFE9
 17568                           wreg	equ	0xFE8
 17569                           postinc1	equ	0xFE6
 17570                           postdec1	equ	0xFE5
 17571                           plusw1	equ	0xFE3
 17572                           fsr1h	equ	0xFE2
 17573                           fsr1l	equ	0xFE1
 17574                           indf2	equ	0xFDF
 17575                           postinc2	equ	0xFDE
 17576                           postdec2	equ	0xFDD
 17577                           plusw2	equ	0xFDB
 17578                           fsr2h	equ	0xFDA
 17579                           fsr2l	equ	0xFD9
 17580                           status	equ	0xFD8
 17581                           
 17582 ;; *************** function _LORAWAN_Send *****************
 17583 ;; Defined at:
 17584 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;  confirmed       1    wreg     enum E7984
 17587 ;;  port            1  118[BANK0 ] unsigned char 
 17588 ;;  buffer          2  119[BANK0 ] PTR void 
 17589 ;;		 -> payload(4), NULL(0), 
 17590 ;;  bufferLength    1  121[BANK0 ] unsigned char 
 17591 ;; Auto vars:     Size  Location     Type
 17592 ;;  confirmed       1  124[BANK0 ] enum E7984
 17593 ;;  result          1  123[BANK0 ] enum E7957
 17594 ;; Return value:  Size  Location     Type
 17595 ;;                  1    wreg      enum E7957
 17596 ;; Registers used:
 17597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17598 ;; Tracked objects:
 17599 ;;		On entry : F/0
 17600 ;;		On exit  : D/0
 17601 ;;		Unchanged: 0/0
 17602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17606 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17607 ;;Total ram usage:        7 bytes
 17608 ;; Hardware stack levels used:    1
 17609 ;; Hardware stack levels required when called:   13
 17610 ;; This function calls:
 17611 ;;		_AssemblePacket
 17612 ;;		_LORAWAN_GetMaxPayloadSize
 17613 ;;		_RADIO_ReceiveStop
 17614 ;;		_RADIO_Transmit
 17615 ;;		_SelectChannelForTransmission
 17616 ;; This function is called by:
 17617 ;;		_AutomaticReplyCallback
 17618 ;;		_LORAWAN_RxDone
 17619 ;;		_readAndSend
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           	psect	text97
 17624  0053FC                     __ptext97:
 17625                           	opt stack 0
 17626  0053FC                     _LORAWAN_Send:
 17627                           	opt stack 16
 17628                           
 17629                           ; BSR set to: 0
 17630                           ;incstack = 0
 17631                           ;LORAWAN_Send@confirmed stored from wreg
 17632  0053FC  6FDC               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17633                           
 17634                           ;lorawan.c: 187: LorawanError_t result;
 17635                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17636  0053FE  0102               	movlb	2	; () banked
 17637  005400  A103               	btfss	(_loRa+3)& (0+255),0,b
 17638                           
 17639                           ; BSR set to: 2
 17640                           ;lorawan.c: 192: }
 17641                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17642  005402  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17643  005404  0012               	return	
 17644                           
 17645                           ; BSR set to: 2
 17646                           ;lorawan.c: 197: }
 17647                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17648  005406  A902               	btfss	(_loRa+2)& (0+255),4,b
 17649  005408  0012               	return	
 17650                           
 17651                           ; BSR set to: 2
 17652                           ;lorawan.c: 202: }
 17653                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17654  00540A  0100               	movlb	0	; () banked
 17655  00540C  51D6               	movf	LORAWAN_Send@port& (0+255),w,b
 17656  00540E  E103               	bnz	l13903
 17657                           
 17658                           ; BSR set to: 0
 17659  005410  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17660  005412  E001               	bz	l13903
 17661  005414  0012               	return	
 17662  005416                     l13903:
 17663                           
 17664                           ; BSR set to: 0
 17665                           ;lorawan.c: 207: }
 17666                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17667  005416  EC44  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17668  00541A  6FDA               	movwf	??_LORAWAN_Send& (0+255),b
 17669  00541C  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17670  00541E  5DDA               	subwf	??_LORAWAN_Send& (0+255),w,b
 17671  005420  E201               	bc	l13907
 17672  005422  0012               	return	
 17673  005424                     l13907:
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;lorawan.c: 213: }
 17677                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17678  005424  0102               	movlb	2	; () banked
 17679  005426  2906               	incf	(_loRa+6)& (0+255),w,b
 17680  005428  E108               	bnz	l13911
 17681  00542A  2907               	incf	(_loRa+7)& (0+255),w,b
 17682  00542C  E106               	bnz	l13911
 17683  00542E  2908               	incf	(_loRa+8)& (0+255),w,b
 17684  005430  E104               	bnz	l13911
 17685  005432  2909               	incf	(_loRa+9)& (0+255),w,b
 17686  005434  E102               	bnz	l13911
 17687                           
 17688                           ; BSR set to: 2
 17689                           ;lorawan.c: 216: {
 17690                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17691  005436  8304               	bsf	(_loRa+4)& (0+255),1,b
 17692                           
 17693                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17694                           ;	Return value of _LORAWAN_Send is never used
 17695  005438  0012               	return	
 17696  00543A                     l13911:
 17697                           
 17698                           ; BSR set to: 2
 17699                           ;lorawan.c: 220: }
 17700                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17701  00543A  5102               	movf	(_loRa+2)& (0+255),w,b
 17702  00543C  0B0F               	andlw	15
 17703  00543E  E003               	bz	l13917
 17704                           
 17705                           ; BSR set to: 2
 17706  005440  5112               	movf	(_loRa+18)& (0+255),w,b
 17707  005442  E101               	bnz	l13917
 17708  005444  0012               	return	
 17709  005446                     l13917:
 17710                           
 17711                           ; BSR set to: 2
 17712                           ;lorawan.c: 225: }
 17713                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17714  005446  0E01               	movlw	1
 17715  005448  EC19  F033         	call	_SelectChannelForTransmission
 17716  00544C  6FDB               	movwf	LORAWAN_Send@result& (0+255),b
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;lorawan.c: 228: if (result != OK)
 17720  00544E  51DB               	movf	LORAWAN_Send@result& (0+255),w,b
 17721  005450  E001               	bz	l13925
 17722  005452  0012               	return	
 17723  005454                     l13925:
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;lorawan.c: 232: else
 17727                           ;lorawan.c: 233: {
 17728                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17729  005454  0E02               	movlw	2
 17730  005456  0102               	movlb	2	; () banked
 17731  005458  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17732  00545A  E102               	bnz	l13929
 17733                           
 17734                           ; BSR set to: 2
 17735                           ;lorawan.c: 235: {
 17736                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17737  00545C  EC1D  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17738  005460                     l13929:
 17739                           
 17740                           ;lorawan.c: 237: }
 17741                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17742  005460  C0D6  F0CA         	movff	LORAWAN_Send@port,AssemblePacket@port
 17743  005464  C0D7  F0CB         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17744  005468  C0D8  F0CC         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17745  00546C  C0D9  F0CD         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17746  005470  0100               	movlb	0	; () banked
 17747  005472  6BCE               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17748  005474  51DC               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17749  005476  EC07  F00F         	call	_AssemblePacket
 17750                           
 17751                           ; BSR set to: 2
 17752                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17753  00547A  0EF0               	movlw	low (_macBuffer+16)
 17754  00547C  0100               	movlb	0	; () banked
 17755  00547E  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 17756  005480  0E04               	movlw	high (_macBuffer+16)
 17757  005482  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17758  005484  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17759  005488  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 17760  00548C  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 17761  00548E  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17762  005490  A4D8               	btfss	status,2,c
 17763  005492  0012               	return	
 17764                           
 17765                           ; BSR set to: 0
 17766                           ;lorawan.c: 242: {
 17767                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17768  005494  0102               	movlb	2	; () banked
 17769  005496  2B06               	incf	(_loRa+6)& (0+255),f,b
 17770  005498  0E00               	movlw	0
 17771  00549A  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17772  00549C  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17773  00549E  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17774                           
 17775                           ;lorawan.c: 245: if (CNF == confirmed)
 17776  0054A0  0100               	movlb	0	; () banked
 17777  0054A2  05DC               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17778  0054A4  E102               	bnz	l1746
 17779                           
 17780                           ; BSR set to: 0
 17781                           ;lorawan.c: 246: {
 17782                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17783  0054A6  0102               	movlb	2	; () banked
 17784  0054A8  8100               	bsf	_loRa& (0+255),0,b
 17785  0054AA                     l1746:
 17786                           
 17787                           ;lorawan.c: 248: }
 17788                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17789  0054AA  0102               	movlb	2	; () banked
 17790  0054AC  8B00               	bsf	_loRa& (0+255),5,b
 17791                           
 17792                           ; BSR set to: 2
 17793                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17794  0054AE  5102               	movf	(_loRa+2)& (0+255),w,b
 17795  0054B0  0BF0               	andlw	-16
 17796  0054B2  0901               	iorlw	1
 17797  0054B4  6F02               	movwf	(_loRa+2)& (0+255),b
 17798                           
 17799                           ;lorawan.c: 251: }
 17800  0054B6  0012               	return		;funcret
 17801  0054B8                     __end_of_LORAWAN_Send:
 17802                           	opt stack 0
 17803                           tosu	equ	0xFFF
 17804                           tosh	equ	0xFFE
 17805                           tosl	equ	0xFFD
 17806                           pclath	equ	0xFFA
 17807                           tblptru	equ	0xFF8
 17808                           tblptrh	equ	0xFF7
 17809                           tblptrl	equ	0xFF6
 17810                           tablat	equ	0xFF5
 17811                           prodh	equ	0xFF4
 17812                           prodl	equ	0xFF3
 17813                           intcon	equ	0xFF2
 17814                           intcon2	equ	0xFF1
 17815                           intcon3	equ	0xFF0
 17816                           indf0	equ	0xFEF
 17817                           postinc0	equ	0xFEE
 17818                           fsr0h	equ	0xFEA
 17819                           fsr0l	equ	0xFE9
 17820                           wreg	equ	0xFE8
 17821                           postinc1	equ	0xFE6
 17822                           postdec1	equ	0xFE5
 17823                           plusw1	equ	0xFE3
 17824                           fsr1h	equ	0xFE2
 17825                           fsr1l	equ	0xFE1
 17826                           indf2	equ	0xFDF
 17827                           postinc2	equ	0xFDE
 17828                           postdec2	equ	0xFDD
 17829                           plusw2	equ	0xFDB
 17830                           fsr2h	equ	0xFDA
 17831                           fsr2l	equ	0xFD9
 17832                           status	equ	0xFD8
 17833                           
 17834 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17835 ;; Defined at:
 17836 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17837 ;; Parameters:    Size  Location     Type
 17838 ;;		None
 17839 ;; Auto vars:     Size  Location     Type
 17840 ;;  result          1   14[BANK0 ] unsigned char 
 17841 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  1    wreg      unsigned char 
 17844 ;; Registers used:
 17845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17846 ;; Tracked objects:
 17847 ;;		On entry : D/2
 17848 ;;		On exit  : F/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17855 ;;Total ram usage:        3 bytes
 17856 ;; Hardware stack levels used:    1
 17857 ;; Hardware stack levels required when called:    8
 17858 ;; This function calls:
 17859 ;;		_CountfOptsLength
 17860 ;; This function is called by:
 17861 ;;		_LORAWAN_Send
 17862 ;;		_AckRetransmissionCallback
 17863 ;; This function uses a non-reentrant model
 17864 ;;
 17865                           
 17866                           	psect	text98
 17867  006A88                     __ptext98:
 17868                           	opt stack 0
 17869  006A88                     _LORAWAN_GetMaxPayloadSize:
 17870                           	opt stack 20
 17871                           
 17872                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17873                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17874                           
 17875                           ;incstack = 0
 17876  006A88  EC5C  F02A         	call	_CountfOptsLength	;wreg free
 17877  006A8C  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17881  006A8E  0102               	movlb	2	; () banked
 17882  006A90  51A7               	movf	(_loRa+167)& (0+255),w,b
 17883  006A92  E10D               	bnz	l13621
 17884                           
 17885                           ; BSR set to: 2
 17886                           ;lorawan.c: 1564: {
 17887                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17888  006A94  0E6D               	movlw	low _maxPayloadSize
 17889  006A96  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17890  006A98  6EF6               	movwf	tblptrl,c
 17891  006A9A  6AF7               	clrf	tblptrh,c
 17892  006A9C  0EFF               	movlw	high _maxPayloadSize
 17893  006A9E  22F7               	addwfc	tblptrh,f,c
 17894  006AA0                     	if	1	;There are 3 active tblptr bytes
 17895  006AA0  6AF8               	clrf	tblptru,c
 17896  006AA2  0E00               	movlw	low (__mediumconst shr (0+16))
 17897  006AA4  22F8               	addwfc	tblptru,f,c
 17898  006AA6                     	endif
 17899  006AA6  0008               	tblrd		*
 17900  006AA8  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17901                           
 17902                           ;lorawan.c: 1566: }
 17903  006AAC  D010               	goto	l13623
 17904  006AAE                     l13621:
 17905                           
 17906                           ; BSR set to: 2
 17907                           ;lorawan.c: 1567: else
 17908                           ;lorawan.c: 1568: {
 17909                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17910  006AAE  0E6D               	movlw	low _maxPayloadSize
 17911  006AB0  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17912  006AB2  6EF6               	movwf	tblptrl,c
 17913  006AB4  6AF7               	clrf	tblptrh,c
 17914  006AB6  0EFF               	movlw	high _maxPayloadSize
 17915  006AB8  22F7               	addwfc	tblptrh,f,c
 17916  006ABA                     	if	1	;There are 3 active tblptr bytes
 17917  006ABA  6AF8               	clrf	tblptru,c
 17918  006ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 17919  006ABE  22F8               	addwfc	tblptru,f,c
 17920  006AC0                     	endif
 17921  006AC0  0008               	tblrd		*
 17922  006AC2  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17923  006AC6  0100               	movlb	0	; () banked
 17924  006AC8  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17925  006ACA  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17926  006ACC  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17927  006ACE                     l13623:
 17928                           
 17929                           ;lorawan.c: 1570: }
 17930                           ;lorawan.c: 1572: return result;
 17931  006ACE  0100               	movlb	0	; () banked
 17932  006AD0  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17933                           
 17934                           ; BSR set to: 0
 17935  006AD2  0012               	return		;funcret
 17936  006AD4                     __end_of_LORAWAN_GetMaxPayloadSize:
 17937                           	opt stack 0
 17938                           tosu	equ	0xFFF
 17939                           tosh	equ	0xFFE
 17940                           tosl	equ	0xFFD
 17941                           pclath	equ	0xFFA
 17942                           tblptru	equ	0xFF8
 17943                           tblptrh	equ	0xFF7
 17944                           tblptrl	equ	0xFF6
 17945                           tablat	equ	0xFF5
 17946                           prodh	equ	0xFF4
 17947                           prodl	equ	0xFF3
 17948                           intcon	equ	0xFF2
 17949                           intcon2	equ	0xFF1
 17950                           intcon3	equ	0xFF0
 17951                           indf0	equ	0xFEF
 17952                           postinc0	equ	0xFEE
 17953                           fsr0h	equ	0xFEA
 17954                           fsr0l	equ	0xFE9
 17955                           wreg	equ	0xFE8
 17956                           postinc1	equ	0xFE6
 17957                           postdec1	equ	0xFE5
 17958                           plusw1	equ	0xFE3
 17959                           fsr1h	equ	0xFE2
 17960                           fsr1l	equ	0xFE1
 17961                           indf2	equ	0xFDF
 17962                           postinc2	equ	0xFDE
 17963                           postdec2	equ	0xFDD
 17964                           plusw2	equ	0xFDB
 17965                           fsr2h	equ	0xFDA
 17966                           fsr2l	equ	0xFD9
 17967                           status	equ	0xFD8
 17968                           
 17969 ;; *************** function _AssemblePacket *****************
 17970 ;; Defined at:
 17971 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  confirmed       1    wreg     unsigned char 
 17974 ;;  port            1  106[BANK0 ] unsigned char 
 17975 ;;  buffer          2  107[BANK0 ] PTR unsigned char 
 17976 ;;		 -> payload(4), NULL(0), 
 17977 ;;  bufferLength    2  109[BANK0 ] unsigned int 
 17978 ;; Auto vars:     Size  Location     Type
 17979 ;;  confirmed       1  113[BANK0 ] unsigned char 
 17980 ;;  bufferIndex     1  117[BANK0 ] unsigned char 
 17981 ;;  macCmdIdx       1  116[BANK0 ] unsigned char 
 17982 ;;  fCtrl           1  115[BANK0 ] struct .
 17983 ;;  mhdr            1  114[BANK0 ] struct .
 17984 ;; Return value:  Size  Location     Type
 17985 ;;                  1    wreg      void 
 17986 ;; Registers used:
 17987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17988 ;; Tracked objects:
 17989 ;;		On entry : F/0
 17990 ;;		On exit  : F/2
 17991 ;;		Unchanged: 0/0
 17992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17993 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17994 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17996 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17997 ;;Total ram usage:       12 bytes
 17998 ;; Hardware stack levels used:    1
 17999 ;; Hardware stack levels required when called:   12
 18000 ;; This function calls:
 18001 ;;		_AESCmac
 18002 ;;		_AssembleEncryptionBlock
 18003 ;;		_CountfOptsLength
 18004 ;;		_EncryptFRMPayload
 18005 ;;		_FindSmallestDataRate
 18006 ;;		_IncludeMacCommandsResponse
 18007 ;;		_memcpy
 18008 ;;		_memset
 18009 ;; This function is called by:
 18010 ;;		_LORAWAN_Send
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           
 18014                           	psect	text99
 18015  001E0E                     __ptext99:
 18016                           	opt stack 0
 18017  001E0E                     _AssemblePacket:
 18018                           	opt stack 16
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;incstack = 0
 18022                           ;AssemblePacket@confirmed stored from wreg
 18023  001E0E  6FD1               	movwf	AssemblePacket@confirmed& (0+255),b
 18024                           
 18025                           ;lorawan.c: 1674: Mhdr_t mhdr;
 18026                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18027  001E10  0E10               	movlw	16
 18028  001E12  0100               	movlb	0	; () banked
 18029  001E14  6FD5               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18030                           
 18031                           ; BSR set to: 0
 18032                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 18033                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18034  001E16  6BD4               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18038  001E18  0ED2               	movlw	low AssemblePacket@mhdr
 18039  001E1A  6F64               	movwf	memset@p1& (0+255),b
 18040  001E1C  6B65               	clrf	(memset@p1+1)& (0+255),b
 18041  001E1E  6B67               	clrf	(memset@c+1)& (0+255),b
 18042  001E20  6B66               	clrf	memset@c& (0+255),b
 18043  001E22  6B69               	clrf	(memset@n+1)& (0+255),b
 18044  001E24  0E01               	movlw	1
 18045  001E26  6F68               	movwf	memset@n& (0+255),b
 18046  001E28  ECDE  F038         	call	_memset	;wreg free
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18050  001E2C  0EE0               	movlw	low _macBuffer
 18051  001E2E  6F64               	movwf	memset@p1& (0+255),b
 18052  001E30  0E04               	movlw	high _macBuffer
 18053  001E32  6F65               	movwf	(memset@p1+1)& (0+255),b
 18054  001E34  6B67               	clrf	(memset@c+1)& (0+255),b
 18055  001E36  6B66               	clrf	memset@c& (0+255),b
 18056  001E38  0E01               	movlw	1
 18057  001E3A  6F69               	movwf	(memset@n+1)& (0+255),b
 18058  001E3C  0E0F               	movlw	15
 18059  001E3E  6F68               	movwf	memset@n& (0+255),b
 18060  001E40  ECDE  F038         	call	_memset	;wreg free
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18064  001E44  0EB4               	movlw	low _aesBuffer
 18065  001E46  6F64               	movwf	memset@p1& (0+255),b
 18066  001E48  0E01               	movlw	high _aesBuffer
 18067  001E4A  6F65               	movwf	(memset@p1+1)& (0+255),b
 18068  001E4C  6B67               	clrf	(memset@c+1)& (0+255),b
 18069  001E4E  6B66               	clrf	memset@c& (0+255),b
 18070  001E50  6B69               	clrf	(memset@n+1)& (0+255),b
 18071  001E52  0E10               	movlw	16
 18072  001E54  6F68               	movwf	memset@n& (0+255),b
 18073  001E56  ECDE  F038         	call	_memset	;wreg free
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;lorawan.c: 1683: if (confirmed == 1)
 18077  001E5A  05D1               	decf	AssemblePacket@confirmed& (0+255),w,b
 18078  001E5C  E107               	bnz	l13643
 18079                           
 18080                           ; BSR set to: 0
 18081                           ;lorawan.c: 1684: {
 18082                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18083  001E5E  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 18084  001E60  0B1F               	andlw	-225
 18085  001E62  0980               	iorlw	128
 18086  001E64  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18090  001E66  0102               	movlb	2	; () banked
 18091  001E68  8100               	bsf	_loRa& (0+255),0,b
 18092                           
 18093                           ;lorawan.c: 1687: }
 18094  001E6A  D004               	goto	l2231
 18095  001E6C                     l13643:
 18096                           
 18097                           ; BSR set to: 0
 18098                           ;lorawan.c: 1688: else
 18099                           ;lorawan.c: 1689: {
 18100                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 18101  001E6C  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 18102  001E6E  0B1F               	andlw	-225
 18103  001E70  0940               	iorlw	64
 18104  001E72  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 18105  001E74                     l2231:
 18106                           
 18107                           ;lorawan.c: 1691: }
 18108                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 18109  001E74  0EFC               	movlw	-4
 18110  001E76  0100               	movlb	0	; () banked
 18111  001E78  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18112                           
 18113                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18114  001E7A  0EE3               	movlw	-29
 18115  001E7C  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18119  001E7E  0EE0               	movlw	low _macBuffer
 18120  001E80  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18121  001E82  6ED9               	movwf	fsr2l,c
 18122  001E84  6ADA               	clrf	fsr2h,c
 18123  001E86  0E04               	movlw	high _macBuffer
 18124  001E88  22DA               	addwfc	fsr2h,f,c
 18125  001E8A  C0D2  FFDF         	movff	AssemblePacket@mhdr,indf2
 18126                           
 18127                           ; BSR set to: 0
 18128  001E8E  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18129                           
 18130                           ; BSR set to: 0
 18131                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18132  001E90  0EE0               	movlw	low _macBuffer
 18133  001E92  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18134  001E94  6F64               	movwf	memcpy@d1& (0+255),b
 18135  001E96  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18136  001E98  0E04               	movlw	high _macBuffer
 18137  001E9A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18138  001E9C  0E1E               	movlw	low (_loRa+30)
 18139  001E9E  6F66               	movwf	memcpy@s1& (0+255),b
 18140  001EA0  0E02               	movlw	high (_loRa+30)
 18141  001EA2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18142  001EA4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18143  001EA6  0E04               	movlw	4
 18144  001EA8  6F68               	movwf	memcpy@n& (0+255),b
 18145  001EAA  EC01  F034         	call	_memcpy	;wreg free
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18149  001EAE  0E04               	movlw	4
 18150  001EB0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;lorawan.c: 1699: fCtrl.value = 0;
 18154  001EB2  6BD3               	clrf	AssemblePacket@fCtrl& (0+255),b
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18158  001EB4  0102               	movlb	2	; () banked
 18159  001EB6  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18160  001EB8  D030               	goto	l2232
 18161                           
 18162                           ; BSR set to: 2
 18163                           ;lorawan.c: 1702: {
 18164                           ;lorawan.c: 1703: fCtrl.adr = 1;
 18165  001EBA  0100               	movlb	0	; () banked
 18166  001EBC  8FD3               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18170  001EBE  0102               	movlb	2	; () banked
 18171  001EC0  51DF               	movf	(_loRa+223)& (0+255),w,b
 18172  001EC2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 18173  001EC4  E229               	bc	l2233
 18174                           
 18175                           ; BSR set to: 2
 18176                           ;lorawan.c: 1705: {
 18177                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18178  001EC6  0100               	movlb	0	; () banked
 18179  001EC8  8DD3               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18180                           
 18181                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18182  001ECA  0102               	movlb	2	; () banked
 18183  001ECC  8900               	bsf	_loRa& (0+255),4,b
 18184                           
 18185                           ; BSR set to: 2
 18186                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18187  001ECE  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18188  001ED0  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18189                           
 18190                           ; BSR set to: 2
 18191                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18192  001ED2  51A2               	movf	(_loRa+162)& (0+255),w,b
 18193  001ED4  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18194  001ED6  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18195  001ED8  E102               	bnz	l13669
 18196                           
 18197                           ; BSR set to: 2
 18198                           ;lorawan.c: 1711: {
 18199                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18200  001EDA  6BEE               	clrf	(_loRa+238)& (0+255),b
 18201  001EDC  D01A               	goto	L9
 18202  001EDE                     l13669:
 18203                           
 18204                           ; BSR set to: 2
 18205                           ;lorawan.c: 1716: else
 18206                           ;lorawan.c: 1717: {
 18207                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18208  001EDE  51A2               	movf	(_loRa+162)& (0+255),w,b
 18209  001EE0  0100               	movlb	0	; () banked
 18210  001EE2  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18211  001EE4  6BD0               	clrf	(??_AssemblePacket+1)& (0+255),b
 18212  001EE6  0102               	movlb	2	; () banked
 18213  001EE8  51D0               	movf	(_loRa+208)& (0+255),w,b
 18214  001EEA  0100               	movlb	0	; () banked
 18215  001EEC  5DCF               	subwf	??_AssemblePacket& (0+255),w,b
 18216  001EEE  0102               	movlb	2	; () banked
 18217  001EF0  51D1               	movf	(_loRa+209)& (0+255),w,b
 18218  001EF2  0100               	movlb	0	; () banked
 18219  001EF4  59D0               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18220  001EF6  E20E               	bc	l2236
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;lorawan.c: 1719: {
 18224                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18225  001EF8  0102               	movlb	2	; () banked
 18226  001EFA  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18227                           
 18228                           ; BSR set to: 2
 18229                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18230  001EFC  51EE               	movf	(_loRa+238)& (0+255),w,b
 18231  001EFE  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18232  001F00  E20C               	bc	l2232
 18233                           
 18234                           ; BSR set to: 2
 18235                           ;lorawan.c: 1725: {
 18236                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18237  001F02  6BEE               	clrf	(_loRa+238)& (0+255),b
 18238                           
 18239                           ; BSR set to: 2
 18240                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18241  001F04  EC7B  F02C         	call	_FindSmallestDataRate	;wreg free
 18242  001F08  0900               	iorlw	0
 18243  001F0A  E107               	bnz	l2232
 18244                           
 18245                           ; BSR set to: 0
 18246                           ;lorawan.c: 1729: {
 18247                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18248  001F0C  0102               	movlb	2	; () banked
 18249  001F0E  6BD0               	clrf	(_loRa+208)& (0+255),b
 18250  001F10  6BD1               	clrf	(_loRa+209)& (0+255),b
 18251  001F12                     L9:
 18252                           
 18253                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18254  001F12  0100               	movlb	0	; () banked
 18255  001F14                     l2236:
 18256                           
 18257                           ; BSR set to: 0
 18258                           ;lorawan.c: 1737: else
 18259                           ;lorawan.c: 1738: {
 18260                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18261  001F14  9DD3               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18262                           
 18263                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18264  001F16  0102               	movlb	2	; () banked
 18265  001F18                     l2233:
 18266                           
 18267                           ; BSR set to: 2
 18268                           ;lorawan.c: 1744: else
 18269                           ;lorawan.c: 1745: {
 18270                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18271  001F18  9900               	bcf	_loRa& (0+255),4,b
 18272  001F1A                     l2232:
 18273                           
 18274                           ;lorawan.c: 1747: }
 18275                           ;lorawan.c: 1748: }
 18276                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18277  001F1A  0102               	movlb	2	; () banked
 18278  001F1C  A300               	btfss	_loRa& (0+255),1,b
 18279  001F1E  D004               	goto	l2241
 18280                           
 18281                           ; BSR set to: 2
 18282                           ;lorawan.c: 1751: {
 18283                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18284  001F20  0100               	movlb	0	; () banked
 18285  001F22  8BD3               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18286                           
 18287                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18288  001F24  0102               	movlb	2	; () banked
 18289  001F26  9300               	bcf	_loRa& (0+255),1,b
 18290  001F28                     l2241:
 18291                           
 18292                           ; BSR set to: 2
 18293                           ;lorawan.c: 1754: }
 18294                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18295  001F28  0100               	movlb	0	; () banked
 18296  001F2A  99D3               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18297                           
 18298                           ; BSR set to: 0
 18299                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18300  001F2C  0102               	movlb	2	; () banked
 18301  001F2E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18302  001F30  E004               	bz	l13687
 18303                           
 18304                           ; BSR set to: 2
 18305  001F32  0100               	movlb	0	; () banked
 18306  001F34  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18307  001F36  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18308  001F38  E104               	bnz	l13689
 18309  001F3A                     l13687:
 18310                           
 18311                           ;lorawan.c: 1759: {
 18312                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18313  001F3A  0EF0               	movlw	-16
 18314  001F3C  0100               	movlb	0	; () banked
 18315  001F3E  17D3               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18316                           
 18317                           ;lorawan.c: 1761: }
 18318  001F40  D007               	goto	l13691
 18319  001F42                     l13689:
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;lorawan.c: 1763: else
 18323                           ;lorawan.c: 1764: {
 18324                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18325  001F42  EC5C  F02A         	call	_CountfOptsLength	;wreg free
 18326  001F46  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18327  001F48  19D3               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18328  001F4A  0BF0               	andlw	-16
 18329  001F4C  19CF               	xorwf	??_AssemblePacket& (0+255),w,b
 18330  001F4E  6FD3               	movwf	AssemblePacket@fCtrl& (0+255),b
 18331  001F50                     l13691:
 18332                           
 18333                           ; BSR set to: 0
 18334                           ;lorawan.c: 1766: }
 18335                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18336  001F50  0EE0               	movlw	low _macBuffer
 18337  001F52  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18338  001F54  6ED9               	movwf	fsr2l,c
 18339  001F56  6ADA               	clrf	fsr2h,c
 18340  001F58  0E04               	movlw	high _macBuffer
 18341  001F5A  22DA               	addwfc	fsr2h,f,c
 18342  001F5C  C0D3  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18343                           
 18344                           ; BSR set to: 0
 18345  001F60  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18349  001F62  0EE0               	movlw	low _macBuffer
 18350  001F64  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18351  001F66  6F64               	movwf	memcpy@d1& (0+255),b
 18352  001F68  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18353  001F6A  0E04               	movlw	high _macBuffer
 18354  001F6C  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18355  001F6E  0E06               	movlw	low (_loRa+6)
 18356  001F70  6F66               	movwf	memcpy@s1& (0+255),b
 18357  001F72  0E02               	movlw	high (_loRa+6)
 18358  001F74  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18359  001F76  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18360  001F78  0E02               	movlw	2
 18361  001F7A  6F68               	movwf	memcpy@n& (0+255),b
 18362  001F7C  EC01  F034         	call	_memcpy	;wreg free
 18363                           
 18364                           ; BSR set to: 0
 18365                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18366  001F80  0E02               	movlw	2
 18367  001F82  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18371  001F84  0102               	movlb	2	; () banked
 18372  001F86  51A7               	movf	(_loRa+167)& (0+255),w,b
 18373  001F88  E00E               	bz	l13705
 18374                           
 18375                           ; BSR set to: 2
 18376  001F8A  0100               	movlb	0	; () banked
 18377  001F8C  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18378  001F8E  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18379  001F90  E00A               	bz	l13705
 18380                           
 18381                           ; BSR set to: 0
 18382                           ;lorawan.c: 1774: {
 18383                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18384  001F92  0EE0               	movlw	low _macBuffer
 18385  001F94  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18386  001F96  0E04               	movlw	high _macBuffer
 18387  001F98  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18388  001F9A  0ED5               	movlw	low AssemblePacket@bufferIndex
 18389  001F9C  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18390  001F9E  0E01               	movlw	1
 18391  001FA0  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18392  001FA2  EC8B  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18393  001FA6                     l13705:
 18394                           
 18395                           ;lorawan.c: 1776: }
 18396                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18397  001FA6  0EE0               	movlw	low _macBuffer
 18398  001FA8  0100               	movlb	0	; () banked
 18399  001FAA  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18400  001FAC  6ED9               	movwf	fsr2l,c
 18401  001FAE  6ADA               	clrf	fsr2h,c
 18402  001FB0  0E04               	movlw	high _macBuffer
 18403  001FB2  22DA               	addwfc	fsr2h,f,c
 18404  001FB4  C0CA  FFDF         	movff	AssemblePacket@port,indf2
 18405                           
 18406                           ; BSR set to: 0
 18407  001FB8  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;lorawan.c: 1780: if (bufferLength != 0)
 18411  001FBA  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18412  001FBC  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18413  001FBE  E02E               	bz	l13717
 18414                           
 18415                           ; BSR set to: 0
 18416                           ;lorawan.c: 1781: {
 18417                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18418  001FC0  0EE0               	movlw	low _macBuffer
 18419  001FC2  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18420  001FC4  6F64               	movwf	memcpy@d1& (0+255),b
 18421  001FC6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18422  001FC8  0E04               	movlw	high _macBuffer
 18423  001FCA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18424  001FCC  C0CB  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18425  001FD0  C0CC  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18426  001FD4  C0CD  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18427  001FD8  C0CE  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18428  001FDC  EC01  F034         	call	_memcpy	;wreg free
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18432  001FE0  C0CB  F094         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18433  001FE4  C0CC  F095         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18434  001FE8  C0CD  F096         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18435  001FEC  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18436  001FEE  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18437  001FF2  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18438  001FF6  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18439  001FFA  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18440  001FFE  0E32               	movlw	low (_loRa+50)
 18441  002000  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18442  002002  0E02               	movlw	high (_loRa+50)
 18443  002004  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18444  002006  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18445  00200A  0EE0               	movlw	low _macBuffer
 18446  00200C  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18447  00200E  0E04               	movlw	high _macBuffer
 18448  002010  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18449  002012  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18450  002014  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 18451                           
 18452                           ; BSR set to: 0
 18453                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18454  002018  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18455  00201A  D02A               	goto	L8
 18456  00201C                     l13717:
 18457                           
 18458                           ; BSR set to: 0
 18459                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18460  00201C  0102               	movlb	2	; () banked
 18461  00201E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18462  002020  E028               	bz	l13723
 18463                           
 18464                           ; BSR set to: 2
 18465                           ;lorawan.c: 1787: {
 18466                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18467  002022  0EEF               	movlw	low _radioBuffer
 18468  002024  0100               	movlb	0	; () banked
 18469  002026  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18470  002028  0E05               	movlw	high _radioBuffer
 18471  00202A  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18472  00202C  0ED4               	movlw	low AssemblePacket@macCmdIdx
 18473  00202E  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18474  002030  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18475  002032  EC8B  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18476                           
 18477                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18478  002036  0EEF               	movlw	low _radioBuffer
 18479  002038  6F94               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18480  00203A  0E05               	movlw	high _radioBuffer
 18481  00203C  6F95               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18482  00203E  C0D4  F096         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18483  002042  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18484  002044  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18485  002048  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18486  00204C  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18487  002050  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18488  002054  0E22               	movlw	low (_loRa+34)
 18489  002056  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18490  002058  0E02               	movlw	high (_loRa+34)
 18491  00205A  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18492  00205C  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18493  002060  0EE0               	movlw	low _macBuffer
 18494  002062  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18495  002064  0E04               	movlw	high _macBuffer
 18496  002066  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18497  002068  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18498  00206A  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 18499                           
 18500                           ; BSR set to: 0
 18501                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18502  00206E  51D4               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18503  002070                     L8:
 18504  002070  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18505  002072                     l13723:
 18506                           
 18507                           ;lorawan.c: 1793: }
 18508                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18509  002072  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18510  002076  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18511  00207A  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18512  00207E  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18513  002082  0100               	movlb	0	; () banked
 18514  002084  51D5               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18515  002086  0FF0               	addlw	240
 18516  002088  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18517  00208A  0E49               	movlw	73
 18518  00208C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18519  00208E  0E00               	movlw	0
 18520  002090  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18521  002092  EC22  F02C         	call	_AssembleEncryptionBlock
 18522                           
 18523                           ; BSR set to: 0
 18524                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18525  002096  0EE0               	movlw	low _macBuffer
 18526  002098  6F64               	movwf	memcpy@d1& (0+255),b
 18527  00209A  0E04               	movlw	high _macBuffer
 18528  00209C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18529  00209E  0EB4               	movlw	low _aesBuffer
 18530  0020A0  6F66               	movwf	memcpy@s1& (0+255),b
 18531  0020A2  0E01               	movlw	high _aesBuffer
 18532  0020A4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18533  0020A6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18534  0020A8  0E10               	movlw	16
 18535  0020AA  6F68               	movwf	memcpy@n& (0+255),b
 18536  0020AC  EC01  F034         	call	_memcpy	;wreg free
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18540  0020B0  0E22               	movlw	low (_loRa+34)
 18541  0020B2  6FBC               	movwf	AESCmac@key& (0+255),b
 18542  0020B4  0E02               	movlw	high (_loRa+34)
 18543  0020B6  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 18544  0020B8  0EB4               	movlw	low _aesBuffer
 18545  0020BA  6FBE               	movwf	AESCmac@output& (0+255),b
 18546  0020BC  0E01               	movlw	high _aesBuffer
 18547  0020BE  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 18548  0020C0  0EE0               	movlw	low _macBuffer
 18549  0020C2  6FC0               	movwf	AESCmac@input& (0+255),b
 18550  0020C4  0E04               	movlw	high _macBuffer
 18551  0020C6  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 18552  0020C8  C0D5  F0C2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18553  0020CC  ECFD  F00B         	call	_AESCmac	;wreg free
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18557  0020D0  0EE0               	movlw	low _macBuffer
 18558  0020D2  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18559  0020D4  6F64               	movwf	memcpy@d1& (0+255),b
 18560  0020D6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18561  0020D8  0E04               	movlw	high _macBuffer
 18562  0020DA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18563  0020DC  0EB4               	movlw	low _aesBuffer
 18564  0020DE  6F66               	movwf	memcpy@s1& (0+255),b
 18565  0020E0  0E01               	movlw	high _aesBuffer
 18566  0020E2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18567  0020E4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18568  0020E6  0E04               	movlw	4
 18569  0020E8  6F68               	movwf	memcpy@n& (0+255),b
 18570  0020EA  EC01  F034         	call	_memcpy	;wreg free
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18574  0020EE  0E04               	movlw	4
 18575  0020F0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18576                           
 18577                           ; BSR set to: 0
 18578                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18579  0020F2  0EF0               	movlw	240
 18580  0020F4  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18581  0020F6  0102               	movlb	2	; () banked
 18582  0020F8  6FD4               	movwf	(_loRa+212)& (0+255),b
 18583  0020FA  6BD5               	clrf	(_loRa+213)& (0+255),b
 18584  0020FC  0EFF               	movlw	255
 18585  0020FE  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18586                           
 18587                           ; BSR set to: 2
 18588  002100  0CFF               	retlw	255	;funcret
 18589  002102                     __end_of_AssemblePacket:
 18590                           	opt stack 0
 18591                           tosu	equ	0xFFF
 18592                           tosh	equ	0xFFE
 18593                           tosl	equ	0xFFD
 18594                           pclath	equ	0xFFA
 18595                           tblptru	equ	0xFF8
 18596                           tblptrh	equ	0xFF7
 18597                           tblptrl	equ	0xFF6
 18598                           tablat	equ	0xFF5
 18599                           prodh	equ	0xFF4
 18600                           prodl	equ	0xFF3
 18601                           intcon	equ	0xFF2
 18602                           intcon2	equ	0xFF1
 18603                           intcon3	equ	0xFF0
 18604                           indf0	equ	0xFEF
 18605                           postinc0	equ	0xFEE
 18606                           fsr0h	equ	0xFEA
 18607                           fsr0l	equ	0xFE9
 18608                           wreg	equ	0xFE8
 18609                           postinc1	equ	0xFE6
 18610                           postdec1	equ	0xFE5
 18611                           plusw1	equ	0xFE3
 18612                           fsr1h	equ	0xFE2
 18613                           fsr1l	equ	0xFE1
 18614                           indf2	equ	0xFDF
 18615                           postinc2	equ	0xFDE
 18616                           postdec2	equ	0xFDD
 18617                           plusw2	equ	0xFDB
 18618                           fsr2h	equ	0xFDA
 18619                           fsr2l	equ	0xFD9
 18620                           status	equ	0xFD8
 18621                           
 18622 ;; *************** function _IncludeMacCommandsResponse *****************
 18623 ;; Defined at:
 18624 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18625 ;; Parameters:    Size  Location     Type
 18626 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18627 ;;		 -> macBuffer(271), radioBuffer(271), 
 18628 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18629 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18630 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18631 ;; Auto vars:     Size  Location     Type
 18632 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18633 ;;  i               1   14[BANK0 ] unsigned char 
 18634 ;; Return value:  Size  Location     Type
 18635 ;;                  1    wreg      void 
 18636 ;; Registers used:
 18637 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18638 ;; Tracked objects:
 18639 ;;		On entry : F/0
 18640 ;;		On exit  : F/0
 18641 ;;		Unchanged: 0/0
 18642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18645 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18646 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18647 ;;Total ram usage:       12 bytes
 18648 ;; Hardware stack levels used:    1
 18649 ;; Hardware stack levels required when called:    8
 18650 ;; This function calls:
 18651 ;;		_RADIO_GetPacketSnr
 18652 ;; This function is called by:
 18653 ;;		_AssemblePacket
 18654 ;; This function uses a non-reentrant model
 18655 ;;
 18656                           
 18657                           	psect	text100
 18658  001B16                     __ptext100:
 18659                           	opt stack 0
 18660  001B16                     _IncludeMacCommandsResponse:
 18661                           	opt stack 19
 18662                           
 18663                           ; BSR set to: 0
 18664                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18665                           
 18666                           ; BSR set to: 0
 18667                           
 18668                           ; BSR set to: 2
 18669                           ;incstack = 0
 18670  001B16  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18671  001B18  6ED9               	movwf	fsr2l,c
 18672  001B1A  6ADA               	clrf	fsr2h,c
 18673  001B1C  50DF               	movf	indf2,w,c
 18674  001B1E  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18678  001B20  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18679  001B22  D169               	goto	l13317
 18680  001B24                     l13221:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;lorawan.c: 1851: {
 18684                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18685  001B24  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18686  001B26  E101 D14B          	bz	l13313
 18687                           
 18688                           ; BSR set to: 0
 18689  001B2A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18690  001B2C  0D02               	mullw	2
 18691  001B2E  0EA8               	movlw	low (_loRa+168)
 18692  001B30  24F3               	addwf	prodl,w,c
 18693  001B32  6ED9               	movwf	fsr2l,c
 18694  001B34  0E02               	movlw	high (_loRa+168)
 18695  001B36  20F4               	addwfc	prodh,w,c
 18696  001B38  6EDA               	movwf	fsr2h,c
 18697  001B3A  28DE               	incf	postinc2,w,c
 18698  001B3C  E101 D140          	bz	l13313
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;lorawan.c: 1853: {
 18702                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18703  001B40  0EFE               	movlw	254
 18704  001B42  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18705  001B44  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18706  001B46  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18707  001B48  0D02               	mullw	2
 18708  001B4A  0EA8               	movlw	low (_loRa+168)
 18709  001B4C  24F3               	addwf	prodl,w,c
 18710  001B4E  6ED9               	movwf	fsr2l,c
 18711  001B50  0E02               	movlw	high (_loRa+168)
 18712  001B52  20F4               	addwfc	prodh,w,c
 18713  001B54  6EDA               	movwf	fsr2h,c
 18714  001B56  50DF               	movf	indf2,w,c
 18715  001B58  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18716  001B5A  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18717  001B5C  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18718  001B5E  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18719  001B60  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18720  001B62  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18721  001B64  0E94               	movlw	low _macEndDevCmdReplyLen
 18722  001B66  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18723  001B68  6EF6               	movwf	tblptrl,c
 18724  001B6A  0EFF               	movlw	high _macEndDevCmdReplyLen
 18725  001B6C  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18726  001B6E  6EF7               	movwf	tblptrh,c
 18727  001B70                     	if	1	;There are 3 active tblptr bytes
 18728  001B70  6AF8               	clrf	tblptru,c
 18729  001B72  0E00               	movlw	low (__mediumconst shr (0+16))
 18730  001B74  22F8               	addwfc	tblptru,f,c
 18731  001B76                     	endif
 18732  001B76  0008               	tblrd		*
 18733  001B78  50F5               	movf	tablat,w,c
 18734  001B7A  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18735  001B7E  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18736  001B80  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18737  001B82  0E00               	movlw	0
 18738  001B84  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18739  001B86  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18740  001B88  6ED9               	movwf	fsr2l,c
 18741  001B8A  6ADA               	clrf	fsr2h,c
 18742  001B8C  50DF               	movf	indf2,w,c
 18743  001B8E  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18744  001B90  0E00               	movlw	0
 18745  001B92  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18746  001B94  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18747  001B96  D114               	goto	l13313
 18748  001B98  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18749  001B9A  E105               	bnz	u14480
 18750  001B9C  0E10               	movlw	16
 18751  001B9E  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18752  001BA0  E301 D12F          	bc	l13319
 18753  001BA4  D10D               	goto	l13313
 18754  001BA6                     u14480:
 18755  001BA6  D12D               	goto	l13319
 18756  001BA8                     l13229:
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;lorawan.c: 1862: {
 18760                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18761  001BA8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18762  001BAA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18763  001BAC  6ED9               	movwf	fsr2l,c
 18764  001BAE  0E00               	movlw	0
 18765  001BB0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18766  001BB2  6EDA               	movwf	fsr2h,c
 18767  001BB4  0E03               	movlw	3
 18768  001BB6  6EDF               	movwf	indf2,c
 18769                           
 18770                           ; BSR set to: 0
 18771  001BB8  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18772                           
 18773                           ; BSR set to: 0
 18774                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18775  001BBA  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18776  001BBC  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18777  001BBE  6ED9               	movwf	fsr2l,c
 18778  001BC0  0E00               	movlw	0
 18779  001BC2  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18780  001BC4  6EDA               	movwf	fsr2h,c
 18781  001BC6  6ADF               	clrf	indf2,c
 18782                           
 18783                           ; BSR set to: 0
 18784                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18785  001BC8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18786  001BCA  0D02               	mullw	2
 18787  001BCC  0EA9               	movlw	low (_loRa+169)
 18788  001BCE  24F3               	addwf	prodl,w,c
 18789  001BD0  6ED9               	movwf	fsr2l,c
 18790  001BD2  0E02               	movlw	high (_loRa+169)
 18791  001BD4  20F4               	addwfc	prodh,w,c
 18792  001BD6  6EDA               	movwf	fsr2h,c
 18793  001BD8  A0DF               	btfss	indf2,0,c
 18794  001BDA  D009               	goto	l13239
 18795                           
 18796                           ; BSR set to: 2
 18797                           ;lorawan.c: 1866: {
 18798                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18799  001BDC  0100               	movlb	0	; () banked
 18800  001BDE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18801  001BE0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18802  001BE2  6ED9               	movwf	fsr2l,c
 18803  001BE4  0E00               	movlw	0
 18804  001BE6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18805  001BE8  6EDA               	movwf	fsr2h,c
 18806  001BEA  0E00               	movlw	0
 18807  001BEC  80DB               	bsf	plusw2,0,c
 18808  001BEE                     l13239:
 18809                           
 18810                           ;lorawan.c: 1868: }
 18811                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18812  001BEE  0100               	movlb	0	; () banked
 18813  001BF0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18814  001BF2  0D02               	mullw	2
 18815  001BF4  0EA9               	movlw	low (_loRa+169)
 18816  001BF6  24F3               	addwf	prodl,w,c
 18817  001BF8  6ED9               	movwf	fsr2l,c
 18818  001BFA  0E02               	movlw	high (_loRa+169)
 18819  001BFC  20F4               	addwfc	prodh,w,c
 18820  001BFE  6EDA               	movwf	fsr2h,c
 18821  001C00  A2DF               	btfss	indf2,1,c
 18822  001C02  D008               	goto	l13243
 18823                           
 18824                           ; BSR set to: 2
 18825                           ;lorawan.c: 1871: {
 18826                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18827  001C04  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18828  001C06  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18829  001C08  6ED9               	movwf	fsr2l,c
 18830  001C0A  0E00               	movlw	0
 18831  001C0C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18832  001C0E  6EDA               	movwf	fsr2h,c
 18833  001C10  0E00               	movlw	0
 18834  001C12  82DB               	bsf	plusw2,1,c
 18835  001C14                     l13243:
 18836                           
 18837                           ;lorawan.c: 1873: }
 18838                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18839  001C14  0100               	movlb	0	; () banked
 18840  001C16  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18841  001C18  0D02               	mullw	2
 18842  001C1A  0EA9               	movlw	low (_loRa+169)
 18843  001C1C  24F3               	addwf	prodl,w,c
 18844  001C1E  6ED9               	movwf	fsr2l,c
 18845  001C20  0E02               	movlw	high (_loRa+169)
 18846  001C22  20F4               	addwfc	prodh,w,c
 18847  001C24  6EDA               	movwf	fsr2h,c
 18848  001C26  A4DF               	btfss	indf2,2,c
 18849  001C28  D009               	goto	l13247
 18850  001C2A                     l13245:
 18851                           
 18852                           ; BSR set to: 2
 18853                           ;lorawan.c: 1876: {
 18854                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18855  001C2A  0100               	movlb	0	; () banked
 18856  001C2C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18857  001C2E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18858  001C30  6ED9               	movwf	fsr2l,c
 18859  001C32  0E00               	movlw	0
 18860  001C34  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18861  001C36  6EDA               	movwf	fsr2h,c
 18862  001C38  0E00               	movlw	0
 18863  001C3A  84DB               	bsf	plusw2,2,c
 18864  001C3C                     l13247:
 18865                           
 18866                           ;lorawan.c: 1878: }
 18867                           ;lorawan.c: 1879: bufferIndex ++;
 18868  001C3C  0100               	movlb	0	; () banked
 18869  001C3E  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18870                           
 18871                           ;lorawan.c: 1880: }
 18872                           ;lorawan.c: 1881: break;
 18873  001C40  D0D9               	goto	l13315
 18874  001C42                     l13249:
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;lorawan.c: 1884: {
 18878                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18879  001C42  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18880  001C44  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18881  001C46  6ED9               	movwf	fsr2l,c
 18882  001C48  0E00               	movlw	0
 18883  001C4A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18884  001C4C  6EDA               	movwf	fsr2h,c
 18885  001C4E  0E05               	movlw	5
 18886  001C50  6EDF               	movwf	indf2,c
 18887                           
 18888                           ; BSR set to: 0
 18889  001C52  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18890                           
 18891                           ; BSR set to: 0
 18892                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18893  001C54  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18894  001C56  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18895  001C58  6ED9               	movwf	fsr2l,c
 18896  001C5A  0E00               	movlw	0
 18897  001C5C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18898  001C5E  6EDA               	movwf	fsr2h,c
 18899  001C60  6ADF               	clrf	indf2,c
 18900                           
 18901                           ; BSR set to: 0
 18902                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18903  001C62  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18904  001C64  0D02               	mullw	2
 18905  001C66  0EA9               	movlw	low (_loRa+169)
 18906  001C68  24F3               	addwf	prodl,w,c
 18907  001C6A  6ED9               	movwf	fsr2l,c
 18908  001C6C  0E02               	movlw	high (_loRa+169)
 18909  001C6E  20F4               	addwfc	prodh,w,c
 18910  001C70  6EDA               	movwf	fsr2h,c
 18911  001C72  A6DF               	btfss	indf2,3,c
 18912  001C74  D009               	goto	l13259
 18913                           
 18914                           ; BSR set to: 2
 18915                           ;lorawan.c: 1888: {
 18916                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18917  001C76  0100               	movlb	0	; () banked
 18918  001C78  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18919  001C7A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18920  001C7C  6ED9               	movwf	fsr2l,c
 18921  001C7E  0E00               	movlw	0
 18922  001C80  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18923  001C82  6EDA               	movwf	fsr2h,c
 18924  001C84  0E00               	movlw	0
 18925  001C86  80DB               	bsf	plusw2,0,c
 18926  001C88                     l13259:
 18927                           
 18928                           ;lorawan.c: 1890: }
 18929                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18930  001C88  0100               	movlb	0	; () banked
 18931  001C8A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18932  001C8C  0D02               	mullw	2
 18933  001C8E  0EA9               	movlw	low (_loRa+169)
 18934  001C90  24F3               	addwf	prodl,w,c
 18935  001C92  6ED9               	movwf	fsr2l,c
 18936  001C94  0E02               	movlw	high (_loRa+169)
 18937  001C96  20F4               	addwfc	prodh,w,c
 18938  001C98  6EDA               	movwf	fsr2h,c
 18939  001C9A  A8DF               	btfss	indf2,4,c
 18940  001C9C  D008               	goto	l13263
 18941                           
 18942                           ; BSR set to: 2
 18943                           ;lorawan.c: 1893: {
 18944                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18945  001C9E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18946  001CA0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18947  001CA2  6ED9               	movwf	fsr2l,c
 18948  001CA4  0E00               	movlw	0
 18949  001CA6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18950  001CA8  6EDA               	movwf	fsr2h,c
 18951  001CAA  0E00               	movlw	0
 18952  001CAC  82DB               	bsf	plusw2,1,c
 18953  001CAE                     l13263:
 18954                           
 18955                           ;lorawan.c: 1895: }
 18956                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18957  001CAE  0100               	movlb	0	; () banked
 18958  001CB0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18959  001CB2  0D02               	mullw	2
 18960  001CB4  0EA9               	movlw	low (_loRa+169)
 18961  001CB6  24F3               	addwf	prodl,w,c
 18962  001CB8  6ED9               	movwf	fsr2l,c
 18963  001CBA  0E02               	movlw	high (_loRa+169)
 18964  001CBC  20F4               	addwfc	prodh,w,c
 18965  001CBE  6EDA               	movwf	fsr2h,c
 18966  001CC0  AADF               	btfss	indf2,5,c
 18967  001CC2  D7BC               	goto	l13247
 18968  001CC4  D7B2               	goto	l13245
 18969  001CC6                     l13269:
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;lorawan.c: 1907: {
 18973                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 18974  001CC6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18975  001CC8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18976  001CCA  6ED9               	movwf	fsr2l,c
 18977  001CCC  0E00               	movlw	0
 18978  001CCE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18979  001CD0  6EDA               	movwf	fsr2h,c
 18980  001CD2  0E06               	movlw	6
 18981  001CD4  6EDF               	movwf	indf2,c
 18982                           
 18983                           ; BSR set to: 0
 18984  001CD6  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18985                           
 18986                           ; BSR set to: 0
 18987                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 18988  001CD8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18989  001CDA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18990  001CDC  6ED9               	movwf	fsr2l,c
 18991  001CDE  0E00               	movlw	0
 18992  001CE0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18993  001CE2  6EDA               	movwf	fsr2h,c
 18994  001CE4  C2E0  FFDF         	movff	_loRa+224,indf2
 18995  001CE8  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 18999  001CEA  EC3A  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19000  001CEE  0A80               	xorlw	128
 19001  001CF0  0FA0               	addlw	160
 19002  001CF2  E305               	bnc	l13279
 19003                           
 19004                           ; BSR set to: 1
 19005  001CF4  EC3A  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19006  001CF8  0A80               	xorlw	128
 19007  001CFA  0F60               	addlw	-160
 19008  001CFC  E309               	bnc	l13283
 19009  001CFE                     l13279:
 19010                           
 19011                           ; BSR set to: 1
 19012                           ;lorawan.c: 1911: {
 19013                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 19014  001CFE  0100               	movlb	0	; () banked
 19015  001D00  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19016  001D02  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19017  001D04  6ED9               	movwf	fsr2l,c
 19018  001D06  0E00               	movlw	0
 19019  001D08  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19020  001D0A  6EDA               	movwf	fsr2h,c
 19021  001D0C  0E20               	movlw	32
 19022  001D0E  D00A               	goto	L10
 19023  001D10                     l13283:
 19024                           
 19025                           ; BSR set to: 1
 19026                           ;lorawan.c: 1914: else
 19027                           ;lorawan.c: 1915: {
 19028                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 19029  001D10  0100               	movlb	0	; () banked
 19030  001D12  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19031  001D14  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19032  001D16  6ED9               	movwf	fsr2l,c
 19033  001D18  0E00               	movlw	0
 19034  001D1A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19035  001D1C  6EDA               	movwf	fsr2h,c
 19036  001D1E  EC3A  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19037  001D22  0B3F               	andlw	63
 19038  001D24                     L10:
 19039  001D24  6EDF               	movwf	indf2,c
 19040  001D26  D78A               	goto	l13247
 19041  001D28                     l13287:
 19042                           
 19043                           ; BSR set to: 0
 19044                           ;lorawan.c: 1922: {
 19045                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 19046  001D28  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19047  001D2A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19048  001D2C  6ED9               	movwf	fsr2l,c
 19049  001D2E  0E00               	movlw	0
 19050  001D30  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19051  001D32  6EDA               	movwf	fsr2h,c
 19052  001D34  0E07               	movlw	7
 19053  001D36  6EDF               	movwf	indf2,c
 19054                           
 19055                           ; BSR set to: 0
 19056  001D38  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 19060  001D3A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19061  001D3C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19062  001D3E  6ED9               	movwf	fsr2l,c
 19063  001D40  0E00               	movlw	0
 19064  001D42  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19065  001D44  6EDA               	movwf	fsr2h,c
 19066  001D46  6ADF               	clrf	indf2,c
 19067                           
 19068                           ; BSR set to: 0
 19069                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 19070  001D48  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19071  001D4A  0D02               	mullw	2
 19072  001D4C  0EA9               	movlw	low (_loRa+169)
 19073  001D4E  24F3               	addwf	prodl,w,c
 19074  001D50  6ED9               	movwf	fsr2l,c
 19075  001D52  0E02               	movlw	high (_loRa+169)
 19076  001D54  20F4               	addwfc	prodh,w,c
 19077  001D56  6EDA               	movwf	fsr2h,c
 19078  001D58  AEDF               	btfss	indf2,7,c
 19079  001D5A  D009               	goto	l13297
 19080                           
 19081                           ; BSR set to: 2
 19082                           ;lorawan.c: 1926: {
 19083                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 19084  001D5C  0100               	movlb	0	; () banked
 19085  001D5E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19086  001D60  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19087  001D62  6ED9               	movwf	fsr2l,c
 19088  001D64  0E00               	movlw	0
 19089  001D66  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19090  001D68  6EDA               	movwf	fsr2h,c
 19091  001D6A  0E00               	movlw	0
 19092  001D6C  80DB               	bsf	plusw2,0,c
 19093  001D6E                     l13297:
 19094                           
 19095                           ;lorawan.c: 1928: }
 19096                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19097  001D6E  0100               	movlb	0	; () banked
 19098  001D70  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19099  001D72  0D02               	mullw	2
 19100  001D74  0EA9               	movlw	low (_loRa+169)
 19101  001D76  24F3               	addwf	prodl,w,c
 19102  001D78  6ED9               	movwf	fsr2l,c
 19103  001D7A  0E02               	movlw	high (_loRa+169)
 19104  001D7C  20F4               	addwfc	prodh,w,c
 19105  001D7E  6EDA               	movwf	fsr2h,c
 19106  001D80  ACDF               	btfss	indf2,6,c
 19107  001D82  D75C               	goto	l13247
 19108                           
 19109                           ; BSR set to: 2
 19110                           ;lorawan.c: 1931: {
 19111                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 19112  001D84  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19113  001D86  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19114  001D88  6ED9               	movwf	fsr2l,c
 19115  001D8A  0E00               	movlw	0
 19116  001D8C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19117  001D8E  6EDA               	movwf	fsr2h,c
 19118  001D90  0E00               	movlw	0
 19119  001D92  82DB               	bsf	plusw2,1,c
 19120  001D94  D753               	goto	l13247
 19121  001D96                     l2283:
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;lorawan.c: 1939: {
 19125                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 19126  001D96  0102               	movlb	2	; () banked
 19127  001D98  69DD               	setf	(_loRa+221)& (0+255),b
 19128                           
 19129                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 19130  001D9A  6BDE               	clrf	(_loRa+222)& (0+255),b
 19131  001D9C                     l13303:
 19132                           
 19133                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 19134  001D9C  0100               	movlb	0	; () banked
 19135  001D9E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19136  001DA0  0D02               	mullw	2
 19137  001DA2  0EA8               	movlw	low (_loRa+168)
 19138  001DA4  24F3               	addwf	prodl,w,c
 19139  001DA6  6ED9               	movwf	fsr2l,c
 19140  001DA8  0E02               	movlw	high (_loRa+168)
 19141  001DAA  20F4               	addwfc	prodh,w,c
 19142  001DAC  6EDA               	movwf	fsr2h,c
 19143  001DAE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19144  001DB0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19145  001DB2  6EE9               	movwf	fsr0l,c
 19146  001DB4  0E00               	movlw	0
 19147  001DB6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19148  001DB8  6EEA               	movwf	fsr0h,c
 19149  001DBA  CFDF FFEF          	movff	indf2,indf0
 19150  001DBE  D73E               	goto	l13247
 19151  001DC0                     l13313:
 19152                           
 19153                           ; BSR set to: 0
 19154  001DC0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19155  001DC2  0D02               	mullw	2
 19156  001DC4  0EA8               	movlw	low (_loRa+168)
 19157  001DC6  24F3               	addwf	prodl,w,c
 19158  001DC8  6ED9               	movwf	fsr2l,c
 19159  001DCA  0E02               	movlw	high (_loRa+168)
 19160  001DCC  20F4               	addwfc	prodh,w,c
 19161  001DCE  6EDA               	movwf	fsr2h,c
 19162  001DD0  50DF               	movf	indf2,w,c
 19163                           
 19164                           ; Switch size 1, requested type "speed"
 19165                           ; Number of cases is 7, Range of values is 2 to 8
 19166                           ; switch strategies available:
 19167                           ; Name         Instructions Cycles
 19168                           ; simple_byte           22    12 (average)
 19169                           ;	Chosen strategy is simple_byte
 19170  001DD2  0A02               	xorlw	2	; case 2
 19171  001DD4  E0E0               	bz	l2283
 19172  001DD6  0A01               	xorlw	1	; case 3
 19173  001DD8  E101 D6E6          	bz	l13229
 19174  001DDC  0A07               	xorlw	7	; case 4
 19175  001DDE  E0DE               	bz	l13303
 19176  001DE0  0A01               	xorlw	1	; case 5
 19177  001DE2  E101 D72E          	bz	l13249
 19178  001DE6  0A03               	xorlw	3	; case 6
 19179  001DE8  E101 D76D          	bz	l13269
 19180  001DEC  0A01               	xorlw	1	; case 7
 19181  001DEE  E09C               	bz	l13287
 19182  001DF0  0A0F               	xorlw	15	; case 8
 19183  001DF2  E0D4               	bz	l13303
 19184  001DF4                     l13315:
 19185                           
 19186                           ; BSR set to: 0
 19187  001DF4  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19188  001DF6                     l13317:
 19189                           
 19190                           ; BSR set to: 0
 19191  001DF6  0102               	movlb	2	; () banked
 19192  001DF8  51A7               	movf	(_loRa+167)& (0+255),w,b
 19193  001DFA  0100               	movlb	0	; () banked
 19194  001DFC  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19195  001DFE  E201 D691          	bnc	l13221
 19196  001E02                     l13319:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;lorawan.c: 1957: }
 19200                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19201  001E02  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19202  001E04  6ED9               	movwf	fsr2l,c
 19203  001E06  6ADA               	clrf	fsr2h,c
 19204  001E08  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19205                           
 19206                           ; BSR set to: 0
 19207  001E0C  0012               	return		;funcret
 19208  001E0E                     __end_of_IncludeMacCommandsResponse:
 19209                           	opt stack 0
 19210                           tosu	equ	0xFFF
 19211                           tosh	equ	0xFFE
 19212                           tosl	equ	0xFFD
 19213                           pclath	equ	0xFFA
 19214                           tblptru	equ	0xFF8
 19215                           tblptrh	equ	0xFF7
 19216                           tblptrl	equ	0xFF6
 19217                           tablat	equ	0xFF5
 19218                           prodh	equ	0xFF4
 19219                           prodl	equ	0xFF3
 19220                           intcon	equ	0xFF2
 19221                           intcon2	equ	0xFF1
 19222                           intcon3	equ	0xFF0
 19223                           indf0	equ	0xFEF
 19224                           postinc0	equ	0xFEE
 19225                           fsr0h	equ	0xFEA
 19226                           fsr0l	equ	0xFE9
 19227                           wreg	equ	0xFE8
 19228                           postinc1	equ	0xFE6
 19229                           postdec1	equ	0xFE5
 19230                           plusw1	equ	0xFE3
 19231                           fsr1h	equ	0xFE2
 19232                           fsr1l	equ	0xFE1
 19233                           indf2	equ	0xFDF
 19234                           postinc2	equ	0xFDE
 19235                           postdec2	equ	0xFDD
 19236                           plusw2	equ	0xFDB
 19237                           fsr2h	equ	0xFDA
 19238                           fsr2l	equ	0xFD9
 19239                           status	equ	0xFD8
 19240                           
 19241 ;; *************** function _RADIO_GetPacketSnr *****************
 19242 ;; Defined at:
 19243 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19244 ;; Parameters:    Size  Location     Type
 19245 ;;		None
 19246 ;; Auto vars:     Size  Location     Type
 19247 ;;		None
 19248 ;; Return value:  Size  Location     Type
 19249 ;;                  1    wreg      char 
 19250 ;; Registers used:
 19251 ;;		wreg, status,2
 19252 ;; Tracked objects:
 19253 ;;		On entry : E/0
 19254 ;;		On exit  : F/1
 19255 ;;		Unchanged: 0/0
 19256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19261 ;;Total ram usage:        0 bytes
 19262 ;; Hardware stack levels used:    1
 19263 ;; Hardware stack levels required when called:    7
 19264 ;; This function calls:
 19265 ;;		Nothing
 19266 ;; This function is called by:
 19267 ;;		_IncludeMacCommandsResponse
 19268 ;; This function uses a non-reentrant model
 19269 ;;
 19270                           
 19271                           	psect	text101
 19272  007874                     __ptext101:
 19273                           	opt stack 0
 19274  007874                     _RADIO_GetPacketSnr:
 19275                           	opt stack 19
 19276                           
 19277                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;incstack = 0
 19281  007874  0101               	movlb	1	; () banked
 19282  007876  51B0               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19283                           
 19284                           ; BSR set to: 1
 19285  007878  0012               	return		;funcret
 19286  00787A                     __end_of_RADIO_GetPacketSnr:
 19287                           	opt stack 0
 19288                           tosu	equ	0xFFF
 19289                           tosh	equ	0xFFE
 19290                           tosl	equ	0xFFD
 19291                           pclath	equ	0xFFA
 19292                           tblptru	equ	0xFF8
 19293                           tblptrh	equ	0xFF7
 19294                           tblptrl	equ	0xFF6
 19295                           tablat	equ	0xFF5
 19296                           prodh	equ	0xFF4
 19297                           prodl	equ	0xFF3
 19298                           intcon	equ	0xFF2
 19299                           intcon2	equ	0xFF1
 19300                           intcon3	equ	0xFF0
 19301                           indf0	equ	0xFEF
 19302                           postinc0	equ	0xFEE
 19303                           fsr0h	equ	0xFEA
 19304                           fsr0l	equ	0xFE9
 19305                           wreg	equ	0xFE8
 19306                           postinc1	equ	0xFE6
 19307                           postdec1	equ	0xFE5
 19308                           plusw1	equ	0xFE3
 19309                           fsr1h	equ	0xFE2
 19310                           fsr1l	equ	0xFE1
 19311                           indf2	equ	0xFDF
 19312                           postinc2	equ	0xFDE
 19313                           postdec2	equ	0xFDD
 19314                           plusw2	equ	0xFDB
 19315                           fsr2h	equ	0xFDA
 19316                           fsr2l	equ	0xFD9
 19317                           status	equ	0xFD8
 19318                           
 19319 ;; *************** function _FindSmallestDataRate *****************
 19320 ;; Defined at:
 19321 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19322 ;; Parameters:    Size  Location     Type
 19323 ;;		None
 19324 ;; Auto vars:     Size  Location     Type
 19325 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19326 ;;  i               1    6[BANK0 ] unsigned char 
 19327 ;;  found           1    5[BANK0 ] unsigned char 
 19328 ;; Return value:  Size  Location     Type
 19329 ;;                  1    wreg      unsigned char 
 19330 ;; Registers used:
 19331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19332 ;; Tracked objects:
 19333 ;;		On entry : F/2
 19334 ;;		On exit  : F/0
 19335 ;;		Unchanged: 0/0
 19336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19338 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19340 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19341 ;;Total ram usage:        4 bytes
 19342 ;; Hardware stack levels used:    1
 19343 ;; Hardware stack levels required when called:    7
 19344 ;; This function calls:
 19345 ;;		Nothing
 19346 ;; This function is called by:
 19347 ;;		_AckRetransmissionCallback
 19348 ;;		_AssemblePacket
 19349 ;; This function uses a non-reentrant model
 19350 ;;
 19351                           
 19352                           	psect	text102
 19353  0058F6                     __ptext102:
 19354                           	opt stack 0
 19355  0058F6                     _FindSmallestDataRate:
 19356                           	opt stack 20
 19357                           
 19358                           ; BSR set to: 2
 19359                           ;lorawan.c: 1966: bool found = 0;
 19360                           
 19361                           ; BSR set to: 1
 19362                           ;incstack = 0
 19363  0058F6  0100               	movlb	0	; () banked
 19364  0058F8  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19368  0058FA  0102               	movlb	2	; () banked
 19369  0058FC  51DF               	movf	(_loRa+223)& (0+255),w,b
 19370  0058FE  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19371  005900  E24A               	bc	l13147
 19372                           
 19373                           ; BSR set to: 2
 19374                           ;lorawan.c: 1969: {
 19375                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19376  005902  05DF               	decf	(_loRa+223)& (0+255),w,b
 19377  005904  0100               	movlb	0	; () banked
 19378  005906  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19379                           
 19380                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19381  005908  D03A               	goto	l13139
 19382  00590A                     l2292:
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;lorawan.c: 1973: {
 19386                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19387  00590A  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19388  00590C  D02B               	goto	l13131
 19389  00590E                     l13121:
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;lorawan.c: 1975: {
 19393                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19394  00590E  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19395  005910  0D0E               	mullw	14
 19396  005912  0E05               	movlw	low (_Channels+5)
 19397  005914  24F3               	addwf	prodl,w,c
 19398  005916  6ED9               	movwf	fsr2l,c
 19399  005918  0E04               	movlw	high (_Channels+5)
 19400  00591A  20F4               	addwfc	prodh,w,c
 19401  00591C  6EDA               	movwf	fsr2h,c
 19402  00591E  50DF               	movf	223,w,c
 19403  005920  0B0F               	andlw	15
 19404  005922  0100               	movlb	0	; () banked
 19405  005924  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19406  005926  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19407  005928  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19408  00592A  E31B               	bnc	l13129
 19409                           
 19410                           ; BSR set to: 0
 19411  00592C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19412  00592E  0D0E               	mullw	14
 19413  005930  0E05               	movlw	low (_Channels+5)
 19414  005932  24F3               	addwf	prodl,w,c
 19415  005934  6ED9               	movwf	fsr2l,c
 19416  005936  0E04               	movlw	high (_Channels+5)
 19417  005938  20F4               	addwfc	prodh,w,c
 19418  00593A  6EDA               	movwf	fsr2h,c
 19419  00593C  38DF               	swapf	223,w,c
 19420  00593E  0B0F               	andlw	15
 19421  005940  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19422  005942  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19423  005944  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19424  005946  E30D               	bnc	l13129
 19425                           
 19426                           ; BSR set to: 0
 19427  005948  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19428  00594A  0D0E               	mullw	14
 19429  00594C  0E04               	movlw	low (_Channels+4)
 19430  00594E  24F3               	addwf	prodl,w,c
 19431  005950  6ED9               	movwf	fsr2l,c
 19432  005952  0E04               	movlw	high (_Channels+4)
 19433  005954  20F4               	addwfc	prodh,w,c
 19434  005956  6EDA               	movwf	fsr2h,c
 19435  005958  04DE               	decf	postinc2,w,c
 19436  00595A  E103               	bnz	l13129
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;lorawan.c: 1977: {
 19440                           ;lorawan.c: 1978: found = 1;
 19441  00595C  0E01               	movlw	1
 19442  00595E  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19443                           
 19444                           ;lorawan.c: 1979: break;
 19445  005960  D006               	goto	l13133
 19446  005962                     l13129:
 19447                           
 19448                           ; BSR set to: 0
 19449  005962  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19450  005964                     l13131:
 19451                           
 19452                           ; BSR set to: 0
 19453  005964  0102               	movlb	2	; () banked
 19454  005966  51ED               	movf	(_loRa+237)& (0+255),w,b
 19455  005968  0100               	movlb	0	; () banked
 19456  00596A  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19457  00596C  E3D0               	bnc	l13121
 19458  00596E                     l13133:
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;lorawan.c: 1980: }
 19462                           ;lorawan.c: 1981: }
 19463                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19464  00596E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19465  005970  E106               	bnz	l13139
 19466                           
 19467                           ; BSR set to: 0
 19468  005972  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19469  005974  0102               	movlb	2	; () banked
 19470  005976  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19471  005978  E202               	bc	l13139
 19472                           
 19473                           ; BSR set to: 2
 19474                           ;lorawan.c: 1983: {
 19475                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19476  00597A  0100               	movlb	0	; () banked
 19477  00597C  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19478  00597E                     l13139:
 19479  00597E  0100               	movlb	0	; () banked
 19480  005980  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19481  005982  E105               	bnz	l13143
 19482                           
 19483                           ; BSR set to: 0
 19484  005984  0102               	movlb	2	; () banked
 19485  005986  51EB               	movf	(_loRa+235)& (0+255),w,b
 19486  005988  0100               	movlb	0	; () banked
 19487  00598A  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19488  00598C  E2BE               	bc	l2292
 19489  00598E                     l13143:
 19490                           
 19491                           ; BSR set to: 0
 19492                           ;lorawan.c: 1985: }
 19493                           ;lorawan.c: 1986: }
 19494                           ;lorawan.c: 1988: if (found == 1)
 19495  00598E  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19496  005990  E102               	bnz	l13147
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;lorawan.c: 1989: {
 19500                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19501  005992  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19502  005996                     l13147:
 19503                           
 19504                           ;lorawan.c: 1991: }
 19505                           ;lorawan.c: 1992: }
 19506                           ;lorawan.c: 1994: return found;
 19507  005996  0100               	movlb	0	; () banked
 19508  005998  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19509                           
 19510                           ; BSR set to: 0
 19511  00599A  0012               	return		;funcret
 19512  00599C                     __end_of_FindSmallestDataRate:
 19513                           	opt stack 0
 19514                           tosu	equ	0xFFF
 19515                           tosh	equ	0xFFE
 19516                           tosl	equ	0xFFD
 19517                           pclath	equ	0xFFA
 19518                           tblptru	equ	0xFF8
 19519                           tblptrh	equ	0xFF7
 19520                           tblptrl	equ	0xFF6
 19521                           tablat	equ	0xFF5
 19522                           prodh	equ	0xFF4
 19523                           prodl	equ	0xFF3
 19524                           intcon	equ	0xFF2
 19525                           intcon2	equ	0xFF1
 19526                           intcon3	equ	0xFF0
 19527                           indf0	equ	0xFEF
 19528                           postinc0	equ	0xFEE
 19529                           fsr0h	equ	0xFEA
 19530                           fsr0l	equ	0xFE9
 19531                           wreg	equ	0xFE8
 19532                           postinc1	equ	0xFE6
 19533                           postdec1	equ	0xFE5
 19534                           plusw1	equ	0xFE3
 19535                           fsr1h	equ	0xFE2
 19536                           fsr1l	equ	0xFE1
 19537                           indf2	equ	0xFDF
 19538                           postinc2	equ	0xFDE
 19539                           postdec2	equ	0xFDD
 19540                           plusw2	equ	0xFDB
 19541                           fsr2h	equ	0xFDA
 19542                           fsr2l	equ	0xFD9
 19543                           status	equ	0xFD8
 19544                           
 19545 ;; *************** function _EncryptFRMPayload *****************
 19546 ;; Defined at:
 19547 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19548 ;; Parameters:    Size  Location     Type
 19549 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 19550 ;;		 -> payload(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19551 ;;  bufferLength    1   54[BANK0 ] unsigned char 
 19552 ;;  dir             1   55[BANK0 ] unsigned char 
 19553 ;;  frameCounter    4   56[BANK0 ] unsigned long 
 19554 ;;  key             2   60[BANK0 ] PTR unsigned char 
 19555 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19556 ;;  macBufferInd    1   62[BANK0 ] unsigned char 
 19557 ;;  bufferToBeEn    2   63[BANK0 ] PTR unsigned char 
 19558 ;;		 -> macBuffer(271), radioBuffer(271), 
 19559 ;;  multicastSta    1   65[BANK0 ] unsigned char 
 19560 ;; Auto vars:     Size  Location     Type
 19561 ;;  j               1   73[BANK0 ] unsigned char 
 19562 ;;  i               1   72[BANK0 ] unsigned char 
 19563 ;;  k               1   71[BANK0 ] unsigned char 
 19564 ;; Return value:  Size  Location     Type
 19565 ;;                  1    wreg      void 
 19566 ;; Registers used:
 19567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19568 ;; Tracked objects:
 19569 ;;		On entry : F/0
 19570 ;;		On exit  : F/0
 19571 ;;		Unchanged: 0/0
 19572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19573 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19574 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19575 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19576 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19577 ;;Total ram usage:       22 bytes
 19578 ;; Hardware stack levels used:    1
 19579 ;; Hardware stack levels required when called:   10
 19580 ;; This function calls:
 19581 ;;		_AESEncodeLoRa
 19582 ;;		_AssembleEncryptionBlock
 19583 ;; This function is called by:
 19584 ;;		_LORAWAN_RxDone
 19585 ;;		_AssemblePacket
 19586 ;; This function uses a non-reentrant model
 19587 ;;
 19588                           
 19589                           	psect	text103
 19590  004136                     __ptext103:
 19591                           	opt stack 0
 19592  004136                     _EncryptFRMPayload:
 19593                           	opt stack 17
 19594                           
 19595                           ; BSR set to: 0
 19596                           
 19597                           ; BSR set to: 0
 19598                           ;incstack = 0
 19599  004136  6BA8               	clrf	EncryptFRMPayload@i& (0+255),b
 19600  004138  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;lorawan.c: 2209: k = bufferLength / 16;
 19604  00413A  3996               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19605  00413C  0B0F               	andlw	15
 19606  00413E  6FA7               	movwf	EncryptFRMPayload@k& (0+255),b
 19607                           
 19608                           ; BSR set to: 0
 19609                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19610  004140  0E01               	movlw	1
 19611  004142  6FA8               	movwf	EncryptFRMPayload@i& (0+255),b
 19612  004144  D051               	goto	l13183
 19613  004146                     l13165:
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;lorawan.c: 2211: {
 19617                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19618  004146  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19619  00414A  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19620  00414E  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19621  004152  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19622  004156  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19623  00415A  0E01               	movlw	1
 19624  00415C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19625  00415E  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19626  004162  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19627  004164  EC22  F02C         	call	_AssembleEncryptionBlock
 19628                           
 19629                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19630  004168  0EB4               	movlw	low _aesBuffer
 19631  00416A  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19632  00416C  0E01               	movlw	high _aesBuffer
 19633  00416E  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19634  004170  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19635  004174  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19636  004178  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19640  00417C  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19641  00417E                     l13173:
 19642                           
 19643                           ; BSR set to: 0
 19644                           ;lorawan.c: 2216: {
 19645                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19646  00417E  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19647  004180  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19648  004182  6ED9               	movwf	fsr2l,c
 19649  004184  0E00               	movlw	0
 19650  004186  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19651  004188  6EDA               	movwf	fsr2h,c
 19652  00418A  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19653  00418C  6FA2               	movwf	??_EncryptFRMPayload& (0+255),b
 19654  00418E  6BA3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19655  004190  3BA2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19656  004192  3BA3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19657  004194  0EF0               	movlw	240
 19658  004196  17A3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19659  004198  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19660  00419A  0B0F               	andlw	15
 19661  00419C  13A3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19662  00419E  0EF0               	movlw	240
 19663  0041A0  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19664  0041A2  C094  F0A4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19665  0041A6  C095  F0A5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19666  0041AA  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19667  0041AC  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19668  0041AE  51A3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19669  0041B0  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19670  0041B2  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19671  0041B4  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19672  0041B6  0E00               	movlw	0
 19673  0041B8  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19674  0041BA  0EF0               	movlw	240
 19675  0041BC  25A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19676  0041BE  6EE9               	movwf	fsr0l,c
 19677  0041C0  0EFF               	movlw	255
 19678  0041C2  21A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19679  0041C4  6EEA               	movwf	fsr0h,c
 19680  0041C6  50EF               	movf	indf0,w,c
 19681  0041C8  6FA6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19682  0041CA  0EB4               	movlw	low _aesBuffer
 19683  0041CC  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19684  0041CE  6EE9               	movwf	fsr0l,c
 19685  0041D0  6AEA               	clrf	fsr0h,c
 19686  0041D2  0E01               	movlw	high _aesBuffer
 19687  0041D4  22EA               	addwfc	fsr0h,f,c
 19688  0041D6  50EF               	movf	indf0,w,c
 19689  0041D8  19A6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19690  0041DA  6EDF               	movwf	indf2,c
 19691                           
 19692                           ; BSR set to: 0
 19693  0041DC  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19694                           
 19695                           ; BSR set to: 0
 19696  0041DE  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19697                           
 19698                           ; BSR set to: 0
 19699  0041E0  0E0F               	movlw	15
 19700  0041E2  65A9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19701  0041E4  D7CC               	goto	l13173
 19702                           
 19703                           ; BSR set to: 0
 19704  0041E6  2BA8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19705  0041E8                     l13183:
 19706                           
 19707                           ; BSR set to: 0
 19708  0041E8  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19709  0041EA  5DA7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19710  0041EC  E2AC               	bc	l13165
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;lorawan.c: 2218: }
 19714                           ;lorawan.c: 2219: }
 19715                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19716  0041EE  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19717  0041F2  0E0F               	movlw	15
 19718  0041F4  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19719  0041F6  B4D8               	btfsc	status,2,c
 19720  0041F8  0C0F               	retlw	15
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;lorawan.c: 2222: {
 19724                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19725  0041FA  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19726  0041FE  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19727  004202  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19728  004206  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19729  00420A  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19730  00420E  0E01               	movlw	1
 19731  004210  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19732  004212  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19733  004216  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19734  004218  EC22  F02C         	call	_AssembleEncryptionBlock
 19735                           
 19736                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19737  00421C  0EB4               	movlw	low _aesBuffer
 19738  00421E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19739  004220  0E01               	movlw	high _aesBuffer
 19740  004222  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19741  004224  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19742  004228  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19743  00422C  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19747  004230  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19748  004232  D023               	goto	l13197
 19749  004234                     l13191:
 19750                           
 19751                           ; BSR set to: 0
 19752                           ;lorawan.c: 2227: {
 19753                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19754  004234  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19755  004236  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19756  004238  6ED9               	movwf	fsr2l,c
 19757  00423A  0E00               	movlw	0
 19758  00423C  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19759  00423E  6EDA               	movwf	fsr2h,c
 19760  004240  51A7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19761  004242  0D10               	mullw	16
 19762  004244  C094  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19763  004248  C095  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19764  00424C  50F3               	movf	prodl,w,c
 19765  00424E  27A2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19766  004250  50F4               	movf	prodh,w,c
 19767  004252  23A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19768  004254  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19769  004256  25A2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19770  004258  6EE9               	movwf	fsr0l,c
 19771  00425A  0E00               	movlw	0
 19772  00425C  21A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19773  00425E  6EEA               	movwf	fsr0h,c
 19774  004260  50EF               	movf	indf0,w,c
 19775  004262  6FA4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19776  004264  0EB4               	movlw	low _aesBuffer
 19777  004266  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19778  004268  6EE9               	movwf	fsr0l,c
 19779  00426A  6AEA               	clrf	fsr0h,c
 19780  00426C  0E01               	movlw	high _aesBuffer
 19781  00426E  22EA               	addwfc	fsr0h,f,c
 19782  004270  50EF               	movf	indf0,w,c
 19783  004272  19A4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19784  004274  6EDF               	movwf	indf2,c
 19785                           
 19786                           ; BSR set to: 0
 19787  004276  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19788                           
 19789                           ; BSR set to: 0
 19790  004278  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19791  00427A                     l13197:
 19792                           
 19793                           ; BSR set to: 0
 19794  00427A  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19795  00427E  0E0F               	movlw	15
 19796  004280  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19797  004282  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19798  004284  5DA9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19799  004286  E3D6               	bnc	l13191
 19800                           
 19801                           ; BSR set to: 0
 19802  004288  0012               	return		;funcret
 19803  00428A                     __end_of_EncryptFRMPayload:
 19804                           	opt stack 0
 19805                           tosu	equ	0xFFF
 19806                           tosh	equ	0xFFE
 19807                           tosl	equ	0xFFD
 19808                           pclath	equ	0xFFA
 19809                           tblptru	equ	0xFF8
 19810                           tblptrh	equ	0xFF7
 19811                           tblptrl	equ	0xFF6
 19812                           tablat	equ	0xFF5
 19813                           prodh	equ	0xFF4
 19814                           prodl	equ	0xFF3
 19815                           intcon	equ	0xFF2
 19816                           intcon2	equ	0xFF1
 19817                           intcon3	equ	0xFF0
 19818                           indf0	equ	0xFEF
 19819                           postinc0	equ	0xFEE
 19820                           fsr0h	equ	0xFEA
 19821                           fsr0l	equ	0xFE9
 19822                           wreg	equ	0xFE8
 19823                           postinc1	equ	0xFE6
 19824                           postdec1	equ	0xFE5
 19825                           plusw1	equ	0xFE3
 19826                           fsr1h	equ	0xFE2
 19827                           fsr1l	equ	0xFE1
 19828                           indf2	equ	0xFDF
 19829                           postinc2	equ	0xFDE
 19830                           postdec2	equ	0xFDD
 19831                           plusw2	equ	0xFDB
 19832                           fsr2h	equ	0xFDA
 19833                           fsr2l	equ	0xFD9
 19834                           status	equ	0xFD8
 19835                           
 19836 ;; *************** function _AssembleEncryptionBlock *****************
 19837 ;; Defined at:
 19838 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;  dir             1    wreg     unsigned char 
 19841 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19842 ;;  blockId         1   18[BANK0 ] unsigned char 
 19843 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19844 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19845 ;; Auto vars:     Size  Location     Type
 19846 ;;  dir             1   21[BANK0 ] unsigned char 
 19847 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19848 ;; Return value:  Size  Location     Type
 19849 ;;                  1    wreg      void 
 19850 ;; Registers used:
 19851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19852 ;; Tracked objects:
 19853 ;;		On entry : F/0
 19854 ;;		On exit  : F/0
 19855 ;;		Unchanged: 0/0
 19856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19857 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19860 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19861 ;;Total ram usage:        9 bytes
 19862 ;; Hardware stack levels used:    1
 19863 ;; Hardware stack levels required when called:    8
 19864 ;; This function calls:
 19865 ;;		_memcpy
 19866 ;;		_memset
 19867 ;; This function is called by:
 19868 ;;		_LORAWAN_RxDone
 19869 ;;		_AssemblePacket
 19870 ;;		_EncryptFRMPayload
 19871 ;; This function uses a non-reentrant model
 19872 ;;
 19873                           
 19874                           	psect	text104
 19875  005844                     __ptext104:
 19876                           	opt stack 0
 19877  005844                     _AssembleEncryptionBlock:
 19878                           	opt stack 18
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;incstack = 0
 19882                           ;AssembleEncryptionBlock@dir stored from wreg
 19883  005844  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19884                           
 19885                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19886  005846  0100               	movlb	0	; () banked
 19887  005848  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19888                           
 19889                           ; BSR set to: 0
 19890                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19891  00584A  0EB4               	movlw	low _aesBuffer
 19892  00584C  6F64               	movwf	memset@p1& (0+255),b
 19893  00584E  0E01               	movlw	high _aesBuffer
 19894  005850  6F65               	movwf	(memset@p1+1)& (0+255),b
 19895  005852  6B67               	clrf	(memset@c+1)& (0+255),b
 19896  005854  6B66               	clrf	memset@c& (0+255),b
 19897  005856  6B69               	clrf	(memset@n+1)& (0+255),b
 19898  005858  0E10               	movlw	16
 19899  00585A  6F68               	movwf	memset@n& (0+255),b
 19900  00585C  ECDE  F038         	call	_memset	;wreg free
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19904  005860  C073  F1B4         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19908  005864  0E05               	movlw	5
 19909  005866  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19910                           
 19911                           ; BSR set to: 0
 19912                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19913  005868  0EB4               	movlw	low _aesBuffer
 19914  00586A  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19915  00586C  6ED9               	movwf	fsr2l,c
 19916  00586E  6ADA               	clrf	fsr2h,c
 19917  005870  0E01               	movlw	high _aesBuffer
 19918  005872  22DA               	addwfc	fsr2h,f,c
 19919  005874  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19920                           
 19921                           ; BSR set to: 0
 19922  005878  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19923                           
 19924                           ; BSR set to: 0
 19925                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19926  00587A  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19927  00587C  E112               	bnz	l12725
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;lorawan.c: 2169: {
 19931                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19932  00587E  0EB4               	movlw	low _aesBuffer
 19933  005880  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19934  005882  6F64               	movwf	memcpy@d1& (0+255),b
 19935  005884  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19936  005886  0E01               	movlw	high _aesBuffer
 19937  005888  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19938  00588A  0E1E               	movlw	low (_loRa+30)
 19939  00588C  6F66               	movwf	memcpy@s1& (0+255),b
 19940  00588E  0E02               	movlw	high (_loRa+30)
 19941  005890  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19942  005892  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19943  005894  0E04               	movlw	4
 19944  005896  6F68               	movwf	memcpy@n& (0+255),b
 19945  005898  EC01  F034         	call	_memcpy	;wreg free
 19946  00589C                     l12723:
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19950  00589C  0E04               	movlw	4
 19951  00589E  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19952                           
 19953                           ;lorawan.c: 2172: }
 19954  0058A0  D010               	goto	l12729
 19955  0058A2                     l12725:
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;lorawan.c: 2173: else
 19959                           ;lorawan.c: 2174: {
 19960                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19961  0058A2  0EB4               	movlw	low _aesBuffer
 19962  0058A4  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19963  0058A6  6F64               	movwf	memcpy@d1& (0+255),b
 19964  0058A8  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19965  0058AA  0E01               	movlw	high _aesBuffer
 19966  0058AC  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19967  0058AE  0E62               	movlw	low (_loRa+98)
 19968  0058B0  6F66               	movwf	memcpy@s1& (0+255),b
 19969  0058B2  0E02               	movlw	high (_loRa+98)
 19970  0058B4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19971  0058B6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19972  0058B8  0E04               	movlw	4
 19973  0058BA  6F68               	movwf	memcpy@n& (0+255),b
 19974  0058BC  EC01  F034         	call	_memcpy	;wreg free
 19975  0058C0  D7ED               	goto	l12723
 19976  0058C2                     l12729:
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;lorawan.c: 2177: }
 19980                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 19981  0058C2  0EB4               	movlw	low _aesBuffer
 19982  0058C4  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19983  0058C6  6F64               	movwf	memcpy@d1& (0+255),b
 19984  0058C8  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19985  0058CA  0E01               	movlw	high _aesBuffer
 19986  0058CC  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19987  0058CE  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 19988  0058D0  6F66               	movwf	memcpy@s1& (0+255),b
 19989  0058D2  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 19990  0058D4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19991  0058D6  0E04               	movlw	4
 19992  0058D8  6F68               	movwf	memcpy@n& (0+255),b
 19993  0058DA  EC01  F034         	call	_memcpy	;wreg free
 19994                           
 19995                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 19996  0058DE  0E04               	movlw	4
 19997  0058E0  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;lorawan.c: 2182: bufferIndex ++;
 20001  0058E2  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20002                           
 20003                           ; BSR set to: 0
 20004                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 20005  0058E4  0EB4               	movlw	low _aesBuffer
 20006  0058E6  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20007  0058E8  6ED9               	movwf	fsr2l,c
 20008  0058EA  6ADA               	clrf	fsr2h,c
 20009  0058EC  0E01               	movlw	high _aesBuffer
 20010  0058EE  22DA               	addwfc	fsr2h,f,c
 20011  0058F0  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 20012                           
 20013                           ; BSR set to: 0
 20014  0058F4  0012               	return		;funcret
 20015  0058F6                     __end_of_AssembleEncryptionBlock:
 20016                           	opt stack 0
 20017                           tosu	equ	0xFFF
 20018                           tosh	equ	0xFFE
 20019                           tosl	equ	0xFFD
 20020                           pclath	equ	0xFFA
 20021                           tblptru	equ	0xFF8
 20022                           tblptrh	equ	0xFF7
 20023                           tblptrl	equ	0xFF6
 20024                           tablat	equ	0xFF5
 20025                           prodh	equ	0xFF4
 20026                           prodl	equ	0xFF3
 20027                           intcon	equ	0xFF2
 20028                           intcon2	equ	0xFF1
 20029                           intcon3	equ	0xFF0
 20030                           indf0	equ	0xFEF
 20031                           postinc0	equ	0xFEE
 20032                           fsr0h	equ	0xFEA
 20033                           fsr0l	equ	0xFE9
 20034                           wreg	equ	0xFE8
 20035                           postinc1	equ	0xFE6
 20036                           postdec1	equ	0xFE5
 20037                           plusw1	equ	0xFE3
 20038                           fsr1h	equ	0xFE2
 20039                           fsr1l	equ	0xFE1
 20040                           indf2	equ	0xFDF
 20041                           postinc2	equ	0xFDE
 20042                           postdec2	equ	0xFDD
 20043                           plusw2	equ	0xFDB
 20044                           fsr2h	equ	0xFDA
 20045                           fsr2l	equ	0xFD9
 20046                           status	equ	0xFD8
 20047                           
 20048 ;; *************** function _CountfOptsLength *****************
 20049 ;; Defined at:
 20050 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20051 ;; Parameters:    Size  Location     Type
 20052 ;;		None
 20053 ;; Auto vars:     Size  Location     Type
 20054 ;;  i               1   11[BANK0 ] unsigned char 
 20055 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 20056 ;; Return value:  Size  Location     Type
 20057 ;;                  1    wreg      unsigned char 
 20058 ;; Registers used:
 20059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20060 ;; Tracked objects:
 20061 ;;		On entry : D/2
 20062 ;;		On exit  : F/0
 20063 ;;		Unchanged: 0/0
 20064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20067 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20069 ;;Total ram usage:        8 bytes
 20070 ;; Hardware stack levels used:    1
 20071 ;; Hardware stack levels required when called:    7
 20072 ;; This function calls:
 20073 ;;		Nothing
 20074 ;; This function is called by:
 20075 ;;		_LORAWAN_GetMaxPayloadSize
 20076 ;;		_AssemblePacket
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           	psect	text105
 20081  0054B8                     __ptext105:
 20082                           	opt stack 0
 20083  0054B8                     _CountfOptsLength:
 20084                           	opt stack 20
 20085                           
 20086                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 20087                           
 20088                           ; BSR set to: 0
 20089                           ;incstack = 0
 20090  0054B8  0100               	movlb	0	; () banked
 20091  0054BA  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 20092                           
 20093                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 20094  0054BC  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 20095  0054BE  D053               	goto	l13209
 20096  0054C0                     l13201:
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;lorawan.c: 2139: {
 20100                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 20101  0054C0  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20102  0054C2  0D02               	mullw	2
 20103  0054C4  0EA8               	movlw	low (_loRa+168)
 20104  0054C6  24F3               	addwf	prodl,w,c
 20105  0054C8  6ED9               	movwf	fsr2l,c
 20106  0054CA  0E02               	movlw	high (_loRa+168)
 20107  0054CC  20F4               	addwfc	prodh,w,c
 20108  0054CE  6EDA               	movwf	fsr2h,c
 20109  0054D0  28DE               	incf	postinc2,w,c
 20110  0054D2  E048               	bz	l13207
 20111                           
 20112                           ; BSR set to: 0
 20113                           ;lorawan.c: 2141: {
 20114                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 20115  0054D4  0EFE               	movlw	254
 20116  0054D6  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20117  0054D8  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20118  0054DA  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20119  0054DC  0D02               	mullw	2
 20120  0054DE  0EA8               	movlw	low (_loRa+168)
 20121  0054E0  24F3               	addwf	prodl,w,c
 20122  0054E2  6ED9               	movwf	fsr2l,c
 20123  0054E4  0E02               	movlw	high (_loRa+168)
 20124  0054E6  20F4               	addwfc	prodh,w,c
 20125  0054E8  6EDA               	movwf	fsr2h,c
 20126  0054EA  50DF               	movf	indf2,w,c
 20127  0054EC  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20128  0054EE  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20129  0054F0  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20130  0054F2  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20131  0054F4  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20132  0054F6  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20133  0054F8  0E94               	movlw	low _macEndDevCmdReplyLen
 20134  0054FA  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20135  0054FC  6EF6               	movwf	tblptrl,c
 20136  0054FE  0EFF               	movlw	high _macEndDevCmdReplyLen
 20137  005500  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20138  005502  6EF7               	movwf	tblptrh,c
 20139  005504                     	if	1	;There are 3 active tblptr bytes
 20140  005504  6AF8               	clrf	tblptru,c
 20141  005506  0E00               	movlw	low (__mediumconst shr (0+16))
 20142  005508  22F8               	addwfc	tblptru,f,c
 20143  00550A                     	endif
 20144  00550A  0008               	tblrd		*
 20145  00550C  50F5               	movf	tablat,w,c
 20146  00550E  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 20147  005512  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 20148  005514  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 20149  005516  0E00               	movlw	0
 20150  005518  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 20151  00551A  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 20152  00551C  D005               	goto	l13205
 20153  00551E  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 20154  005520  E127               	bnz	l13211
 20155  005522  0E10               	movlw	16
 20156  005524  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 20157  005526  E224               	bc	l13211
 20158  005528                     l13205:
 20159                           
 20160                           ; BSR set to: 0
 20161                           ;lorawan.c: 2143: {
 20162                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 20163  005528  0EFE               	movlw	254
 20164  00552A  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20165  00552C  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20166  00552E  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20167  005530  0D02               	mullw	2
 20168  005532  0EA8               	movlw	low (_loRa+168)
 20169  005534  24F3               	addwf	prodl,w,c
 20170  005536  6ED9               	movwf	fsr2l,c
 20171  005538  0E02               	movlw	high (_loRa+168)
 20172  00553A  20F4               	addwfc	prodh,w,c
 20173  00553C  6EDA               	movwf	fsr2h,c
 20174  00553E  50DF               	movf	indf2,w,c
 20175  005540  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20176  005542  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20177  005544  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20178  005546  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20179  005548  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20180  00554A  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20181  00554C  0E94               	movlw	low _macEndDevCmdReplyLen
 20182  00554E  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20183  005550  6EF6               	movwf	tblptrl,c
 20184  005552  0EFF               	movlw	high _macEndDevCmdReplyLen
 20185  005554  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20186  005556  6EF7               	movwf	tblptrh,c
 20187  005558                     	if	1	;There are 3 active tblptr bytes
 20188  005558  6AF8               	clrf	tblptru,c
 20189  00555A  0E00               	movlw	low (__mediumconst shr (0+16))
 20190  00555C  22F8               	addwfc	tblptru,f,c
 20191  00555E                     	endif
 20192  00555E  0008               	tblrd		*
 20193  005560  50F5               	movf	tablat,w,c
 20194  005562  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20195  005564                     l13207:
 20196                           
 20197                           ; BSR set to: 0
 20198  005564  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20199  005566                     l13209:
 20200                           
 20201                           ; BSR set to: 0
 20202  005566  0102               	movlb	2	; () banked
 20203  005568  51A7               	movf	(_loRa+167)& (0+255),w,b
 20204  00556A  0100               	movlb	0	; () banked
 20205  00556C  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20206  00556E  E3A8               	bnc	l13201
 20207  005570                     l13211:
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;lorawan.c: 2149: }
 20211                           ;lorawan.c: 2150: }
 20212                           ;lorawan.c: 2151: }
 20213                           ;lorawan.c: 2153: return macCommandLength;
 20214  005570  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20215                           
 20216                           ; BSR set to: 0
 20217  005572  0012               	return		;funcret
 20218  005574                     __end_of_CountfOptsLength:
 20219                           	opt stack 0
 20220                           tosu	equ	0xFFF
 20221                           tosh	equ	0xFFE
 20222                           tosl	equ	0xFFD
 20223                           pclath	equ	0xFFA
 20224                           tblptru	equ	0xFF8
 20225                           tblptrh	equ	0xFF7
 20226                           tblptrl	equ	0xFF6
 20227                           tablat	equ	0xFF5
 20228                           prodh	equ	0xFF4
 20229                           prodl	equ	0xFF3
 20230                           intcon	equ	0xFF2
 20231                           intcon2	equ	0xFF1
 20232                           intcon3	equ	0xFF0
 20233                           indf0	equ	0xFEF
 20234                           postinc0	equ	0xFEE
 20235                           fsr0h	equ	0xFEA
 20236                           fsr0l	equ	0xFE9
 20237                           wreg	equ	0xFE8
 20238                           postinc1	equ	0xFE6
 20239                           postdec1	equ	0xFE5
 20240                           plusw1	equ	0xFE3
 20241                           fsr1h	equ	0xFE2
 20242                           fsr1l	equ	0xFE1
 20243                           indf2	equ	0xFDF
 20244                           postinc2	equ	0xFDE
 20245                           postdec2	equ	0xFDD
 20246                           plusw2	equ	0xFDB
 20247                           fsr2h	equ	0xFDA
 20248                           fsr2l	equ	0xFD9
 20249                           status	equ	0xFD8
 20250                           
 20251 ;; *************** function _ExtractMic *****************
 20252 ;; Defined at:
 20253 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20254 ;; Parameters:    Size  Location     Type
 20255 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20256 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20257 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20258 ;; Auto vars:     Size  Location     Type
 20259 ;;  mic             4   20[BANK0 ] unsigned long 
 20260 ;; Return value:  Size  Location     Type
 20261 ;;                  4   14[BANK0 ] unsigned long 
 20262 ;; Registers used:
 20263 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20264 ;; Tracked objects:
 20265 ;;		On entry : F/0
 20266 ;;		On exit  : F/0
 20267 ;;		Unchanged: 0/0
 20268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20272 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20273 ;;Total ram usage:       10 bytes
 20274 ;; Hardware stack levels used:    1
 20275 ;; Hardware stack levels required when called:    8
 20276 ;; This function calls:
 20277 ;;		_memcpy
 20278 ;; This function is called by:
 20279 ;;		_LORAWAN_RxDone
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text106
 20284  006C82                     __ptext106:
 20285                           	opt stack 0
 20286  006C82                     _ExtractMic:
 20287                           	opt stack 18
 20288                           
 20289                           ; BSR set to: 0
 20290                           ;lorawan.c: 2189: uint32_t mic = 0;
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;incstack = 0
 20294  006C82  6B74               	clrf	ExtractMic@mic& (0+255),b
 20295  006C84  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20296  006C86  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20297  006C88  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20301  006C8A  0E74               	movlw	low ExtractMic@mic
 20302  006C8C  6F64               	movwf	memcpy@d1& (0+255),b
 20303  006C8E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20304  006C90  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20305  006C92  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20306  006C94  6F72               	movwf	??_ExtractMic& (0+255),b
 20307  006C96  0E00               	movlw	0
 20308  006C98  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20309  006C9A  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20310  006C9C  0EFC               	movlw	252
 20311  006C9E  2572               	addwf	??_ExtractMic& (0+255),w,b
 20312  006CA0  6F66               	movwf	memcpy@s1& (0+255),b
 20313  006CA2  0EFF               	movlw	255
 20314  006CA4  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20315  006CA6  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20316  006CA8  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20317  006CAA  0E04               	movlw	4
 20318  006CAC  6F68               	movwf	memcpy@n& (0+255),b
 20319  006CAE  EC01  F034         	call	_memcpy	;wreg free
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;lorawan.c: 2191: return mic;
 20323  006CB2  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20324  006CB6  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20325  006CBA  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20326  006CBE  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20327                           
 20328                           ; BSR set to: 0
 20329  006CC2  0012               	return		;funcret
 20330  006CC4                     __end_of_ExtractMic:
 20331                           	opt stack 0
 20332                           tosu	equ	0xFFF
 20333                           tosh	equ	0xFFE
 20334                           tosl	equ	0xFFD
 20335                           pclath	equ	0xFFA
 20336                           tblptru	equ	0xFF8
 20337                           tblptrh	equ	0xFF7
 20338                           tblptrl	equ	0xFF6
 20339                           tablat	equ	0xFF5
 20340                           prodh	equ	0xFF4
 20341                           prodl	equ	0xFF3
 20342                           intcon	equ	0xFF2
 20343                           intcon2	equ	0xFF1
 20344                           intcon3	equ	0xFF0
 20345                           indf0	equ	0xFEF
 20346                           postinc0	equ	0xFEE
 20347                           fsr0h	equ	0xFEA
 20348                           fsr0l	equ	0xFE9
 20349                           wreg	equ	0xFE8
 20350                           postinc1	equ	0xFE6
 20351                           postdec1	equ	0xFE5
 20352                           plusw1	equ	0xFE3
 20353                           fsr1h	equ	0xFE2
 20354                           fsr1l	equ	0xFE1
 20355                           indf2	equ	0xFDF
 20356                           postinc2	equ	0xFDE
 20357                           postdec2	equ	0xFDD
 20358                           plusw2	equ	0xFDB
 20359                           fsr2h	equ	0xFDA
 20360                           fsr2l	equ	0xFD9
 20361                           status	equ	0xFD8
 20362                           
 20363 ;; *************** function _ComputeSessionKeys *****************
 20364 ;; Defined at:
 20365 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20366 ;; Parameters:    Size  Location     Type
 20367 ;;  joinAcceptBu    2   52[BANK0 ] PTR struct .
 20368 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20369 ;; Auto vars:     Size  Location     Type
 20370 ;;		None
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  1    wreg      void 
 20373 ;; Registers used:
 20374 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20375 ;; Tracked objects:
 20376 ;;		On entry : D/0
 20377 ;;		On exit  : F/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20383 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20384 ;;Total ram usage:        2 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; Hardware stack levels required when called:   10
 20387 ;; This function calls:
 20388 ;;		_AESEncodeLoRa
 20389 ;;		_PrepareSessionKeys
 20390 ;; This function is called by:
 20391 ;;		_LORAWAN_RxDone
 20392 ;; This function uses a non-reentrant model
 20393 ;;
 20394                           
 20395                           	psect	text107
 20396  005E26                     __ptext107:
 20397                           	opt stack 0
 20398  005E26                     _ComputeSessionKeys:
 20399                           	opt stack 16
 20400                           
 20401                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;incstack = 0
 20405  005E26  0E32               	movlw	low (_loRa+50)
 20406  005E28  0100               	movlb	0	; () banked
 20407  005E2A  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20408  005E2C  0E02               	movlw	high (_loRa+50)
 20409  005E2E  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20410  005E30  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20411  005E32  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20412  005E34  0E00               	movlw	0
 20413  005E36  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20414  005E38  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20415  005E3A  0E04               	movlw	4
 20416  005E3C  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20417  005E3E  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20418  005E40  0E00               	movlw	0
 20419  005E42  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20420  005E44  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20421  005E46  EC91  F02F         	call	_PrepareSessionKeys	;wreg free
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20425  005E4A  0E02               	movlw	2
 20426  005E4C  0102               	movlb	2	; () banked
 20427  005E4E  6F32               	movwf	(_loRa+50)& (0+255),b
 20428                           
 20429                           ; BSR set to: 2
 20430                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20431  005E50  0E32               	movlw	low (_loRa+50)
 20432  005E52  0100               	movlb	0	; () banked
 20433  005E54  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20434  005E56  0E02               	movlw	high (_loRa+50)
 20435  005E58  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20436  005E5A  0E42               	movlw	low (_loRa+66)
 20437  005E5C  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20438  005E5E  0E02               	movlw	high (_loRa+66)
 20439  005E60  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20440  005E62  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 20441                           
 20442                           ; BSR set to: 0
 20443                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20444  005E66  0E22               	movlw	low (_loRa+34)
 20445  005E68  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20446  005E6A  0E02               	movlw	high (_loRa+34)
 20447  005E6C  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20448  005E6E  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20449  005E70  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20450  005E72  0E00               	movlw	0
 20451  005E74  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20452  005E76  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20453  005E78  0E04               	movlw	4
 20454  005E7A  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20455  005E7C  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20456  005E7E  0E00               	movlw	0
 20457  005E80  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20458  005E82  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20459  005E84  EC91  F02F         	call	_PrepareSessionKeys	;wreg free
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20463  005E88  0E01               	movlw	1
 20464  005E8A  0102               	movlb	2	; () banked
 20465  005E8C  6F22               	movwf	(_loRa+34)& (0+255),b
 20466                           
 20467                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20468  005E8E  0E22               	movlw	low (_loRa+34)
 20469  005E90  0100               	movlb	0	; () banked
 20470  005E92  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20471  005E94  0E02               	movlw	high (_loRa+34)
 20472  005E96  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20473  005E98  0E42               	movlw	low (_loRa+66)
 20474  005E9A  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20475  005E9C  0E02               	movlw	high (_loRa+66)
 20476  005E9E  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20477  005EA0  EF1B  F039         	goto	_AESEncodeLoRa	;wreg free
 20478  005EA4                     __end_of_ComputeSessionKeys:
 20479                           	opt stack 0
 20480                           tosu	equ	0xFFF
 20481                           tosh	equ	0xFFE
 20482                           tosl	equ	0xFFD
 20483                           pclath	equ	0xFFA
 20484                           tblptru	equ	0xFF8
 20485                           tblptrh	equ	0xFF7
 20486                           tblptrl	equ	0xFF6
 20487                           tablat	equ	0xFF5
 20488                           prodh	equ	0xFF4
 20489                           prodl	equ	0xFF3
 20490                           intcon	equ	0xFF2
 20491                           intcon2	equ	0xFF1
 20492                           intcon3	equ	0xFF0
 20493                           indf0	equ	0xFEF
 20494                           postinc0	equ	0xFEE
 20495                           fsr0h	equ	0xFEA
 20496                           fsr0l	equ	0xFE9
 20497                           wreg	equ	0xFE8
 20498                           postinc1	equ	0xFE6
 20499                           postdec1	equ	0xFE5
 20500                           plusw1	equ	0xFE3
 20501                           fsr1h	equ	0xFE2
 20502                           fsr1l	equ	0xFE1
 20503                           indf2	equ	0xFDF
 20504                           postinc2	equ	0xFDE
 20505                           postdec2	equ	0xFDD
 20506                           plusw2	equ	0xFDB
 20507                           fsr2h	equ	0xFDA
 20508                           fsr2l	equ	0xFD9
 20509                           status	equ	0xFD8
 20510                           
 20511 ;; *************** function _PrepareSessionKeys *****************
 20512 ;; Defined at:
 20513 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20514 ;; Parameters:    Size  Location     Type
 20515 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20516 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20517 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20518 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20519 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20520 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20521 ;; Auto vars:     Size  Location     Type
 20522 ;;  index           1   20[BANK0 ] unsigned char 
 20523 ;; Return value:  Size  Location     Type
 20524 ;;                  1    wreg      void 
 20525 ;; Registers used:
 20526 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20527 ;; Tracked objects:
 20528 ;;		On entry : F/0
 20529 ;;		On exit  : F/0
 20530 ;;		Unchanged: 0/0
 20531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20532 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20535 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20536 ;;Total ram usage:        7 bytes
 20537 ;; Hardware stack levels used:    1
 20538 ;; Hardware stack levels required when called:    8
 20539 ;; This function calls:
 20540 ;;		_memcpy
 20541 ;;		_memset
 20542 ;; This function is called by:
 20543 ;;		_ComputeSessionKeys
 20544 ;; This function uses a non-reentrant model
 20545 ;;
 20546                           
 20547                           	psect	text108
 20548  005F22                     __ptext108:
 20549                           	opt stack 0
 20550  005F22                     _PrepareSessionKeys:
 20551                           	opt stack 17
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;lorawan.c: 2047: uint8_t index = 0;
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;incstack = 0
 20558  005F22  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20559                           
 20560                           ; BSR set to: 0
 20561                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20562  005F24  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20563  005F28  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20564  005F2C  6B67               	clrf	(memset@c+1)& (0+255),b
 20565  005F2E  6B66               	clrf	memset@c& (0+255),b
 20566  005F30  6B69               	clrf	(memset@n+1)& (0+255),b
 20567  005F32  0E10               	movlw	16
 20568  005F34  6F68               	movwf	memset@n& (0+255),b
 20569  005F36  ECDE  F038         	call	_memset	;wreg free
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;lorawan.c: 2050: index ++;
 20573  005F3A  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20577  005F3C  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20578  005F3E  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20579  005F40  6F64               	movwf	memcpy@d1& (0+255),b
 20580  005F42  0E00               	movlw	0
 20581  005F44  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20582  005F46  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20583  005F48  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20584  005F4C  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20585  005F50  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20586  005F52  0E03               	movlw	3
 20587  005F54  6F68               	movwf	memcpy@n& (0+255),b
 20588  005F56  EC01  F034         	call	_memcpy	;wreg free
 20589                           
 20590                           ; BSR set to: 0
 20591                           ;lorawan.c: 2053: index = index + 3;
 20592  005F5A  0E03               	movlw	3
 20593  005F5C  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20594                           
 20595                           ; BSR set to: 0
 20596                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20597  005F5E  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20598  005F60  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20599  005F62  6F64               	movwf	memcpy@d1& (0+255),b
 20600  005F64  0E00               	movlw	0
 20601  005F66  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20602  005F68  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20603  005F6A  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20604  005F6E  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20605  005F72  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20606  005F74  0E03               	movlw	3
 20607  005F76  6F68               	movwf	memcpy@n& (0+255),b
 20608  005F78  EC01  F034         	call	_memcpy	;wreg free
 20609                           
 20610                           ; BSR set to: 0
 20611                           ;lorawan.c: 2056: index = index + 3;
 20612  005F7C  0E03               	movlw	3
 20613  005F7E  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20614                           
 20615                           ; BSR set to: 0
 20616                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20617  005F80  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20618  005F82  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20619  005F84  6F64               	movwf	memcpy@d1& (0+255),b
 20620  005F86  0E00               	movlw	0
 20621  005F88  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20622  005F8A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20623  005F8C  0ED2               	movlw	low (_loRa+210)
 20624  005F8E  6F66               	movwf	memcpy@s1& (0+255),b
 20625  005F90  0E02               	movlw	high (_loRa+210)
 20626  005F92  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20627  005F94  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20628  005F96  0E02               	movlw	2
 20629  005F98  6F68               	movwf	memcpy@n& (0+255),b
 20630  005F9A  EF01  F034         	goto	_memcpy	;wreg free
 20631  005F9E                     __end_of_PrepareSessionKeys:
 20632                           	opt stack 0
 20633                           tosu	equ	0xFFF
 20634                           tosh	equ	0xFFE
 20635                           tosl	equ	0xFFD
 20636                           pclath	equ	0xFFA
 20637                           tblptru	equ	0xFF8
 20638                           tblptrh	equ	0xFF7
 20639                           tblptrl	equ	0xFF6
 20640                           tablat	equ	0xFF5
 20641                           prodh	equ	0xFF4
 20642                           prodl	equ	0xFF3
 20643                           intcon	equ	0xFF2
 20644                           intcon2	equ	0xFF1
 20645                           intcon3	equ	0xFF0
 20646                           indf0	equ	0xFEF
 20647                           postinc0	equ	0xFEE
 20648                           fsr0h	equ	0xFEA
 20649                           fsr0l	equ	0xFE9
 20650                           wreg	equ	0xFE8
 20651                           postinc1	equ	0xFE6
 20652                           postdec1	equ	0xFE5
 20653                           plusw1	equ	0xFE3
 20654                           fsr1h	equ	0xFE2
 20655                           fsr1l	equ	0xFE1
 20656                           indf2	equ	0xFDF
 20657                           postinc2	equ	0xFDE
 20658                           postdec2	equ	0xFDD
 20659                           plusw2	equ	0xFDB
 20660                           fsr2h	equ	0xFDA
 20661                           fsr2l	equ	0xFD9
 20662                           status	equ	0xFD8
 20663                           
 20664 ;; *************** function _CheckMcastFlags *****************
 20665 ;; Defined at:
 20666 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20667 ;; Parameters:    Size  Location     Type
 20668 ;;  hdr             2    4[BANK0 ] PTR struct .
 20669 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;		None
 20672 ;; Return value:  Size  Location     Type
 20673 ;;                  1    wreg      unsigned char 
 20674 ;; Registers used:
 20675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20676 ;; Tracked objects:
 20677 ;;		On entry : F/2
 20678 ;;		On exit  : D/0
 20679 ;;		Unchanged: 0/0
 20680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20685 ;;Total ram usage:        2 bytes
 20686 ;; Hardware stack levels used:    1
 20687 ;; Hardware stack levels required when called:    7
 20688 ;; This function calls:
 20689 ;;		Nothing
 20690 ;; This function is called by:
 20691 ;;		_LORAWAN_RxDone
 20692 ;; This function uses a non-reentrant model
 20693 ;;
 20694                           
 20695                           	psect	text109
 20696  006090                     __ptext109:
 20697                           	opt stack 0
 20698  006090                     _CheckMcastFlags:
 20699                           	opt stack 19
 20700                           
 20701                           ; BSR set to: 2
 20702                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20703                           
 20704                           ; BSR set to: 0
 20705                           ;incstack = 0
 20706  006090  0100               	movlb	0	; () banked
 20707  006092  EE20 F005          	lfsr	2,5
 20708  006096  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20709  006098  26D9               	addwf	fsr2l,f,c
 20710  00609A  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20711  00609C  22DA               	addwfc	fsr2h,f,c
 20712  00609E  BADF               	btfsc	indf2,5,c
 20713  0060A0  0C00               	retlw	0
 20714                           
 20715                           ; BSR set to: 0
 20716  0060A2  EE20 F005          	lfsr	2,5
 20717  0060A6  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20718  0060A8  26D9               	addwf	fsr2l,f,c
 20719  0060AA  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20720  0060AC  22DA               	addwfc	fsr2h,f,c
 20721  0060AE  BCDF               	btfsc	indf2,6,c
 20722  0060B0  0C00               	retlw	0
 20723                           
 20724                           ; BSR set to: 0
 20725  0060B2  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20726  0060B6  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20727  0060BA  38DF               	swapf	223,w,c
 20728  0060BC  32E8               	rrcf	wreg,f,c
 20729  0060BE  0B07               	andlw	7
 20730  0060C0  0A03               	xorlw	3
 20731  0060C2  E001               	bz	l14007
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;lorawan.c: 2110: {
 20735                           ;lorawan.c: 2111: return 0;
 20736  0060C4  0C00               	retlw	0
 20737  0060C6                     l14007:
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;lorawan.c: 2112: }
 20741                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20742  0060C6  EE20 F005          	lfsr	2,5
 20743  0060CA  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20744  0060CC  26D9               	addwf	fsr2l,f,c
 20745  0060CE  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20746  0060D0  22DA               	addwfc	fsr2h,f,c
 20747  0060D2  50DF               	movf	223,w,c
 20748  0060D4  0B0F               	andlw	15
 20749  0060D6  E001               	bz	l14015
 20750  0060D8  0C00               	retlw	0
 20751  0060DA                     l14015:
 20752                           
 20753                           ; BSR set to: 0
 20754                           ;lorawan.c: 2118: else
 20755                           ;lorawan.c: 2119: {
 20756                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20757  0060DA  EE20 F008          	lfsr	2,8
 20758  0060DE  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20759  0060E0  26D9               	addwf	fsr2l,f,c
 20760  0060E2  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20761  0060E4  22DA               	addwfc	fsr2h,f,c
 20762  0060E6  50DF               	movf	indf2,w,c
 20763  0060E8  E101               	bnz	l14021
 20764  0060EA  0C00               	retlw	0
 20765  0060EC                     l14021:
 20766                           
 20767                           ; BSR set to: 0
 20768                           ;lorawan.c: 2123: }
 20769                           ;lorawan.c: 2124: }
 20770                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20771  0060EC  EE20 F005          	lfsr	2,5
 20772  0060F0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20773  0060F2  26D9               	addwf	fsr2l,f,c
 20774  0060F4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20775  0060F6  22DA               	addwfc	fsr2h,f,c
 20776  0060F8  A8DF               	btfss	indf2,4,c
 20777  0060FA  0C01               	retlw	1
 20778                           
 20779                           ; BSR set to: 0
 20780                           ;lorawan.c: 2127: {
 20781                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20782  0060FC  0102               	movlb	2	; () banked
 20783  0060FE  8700               	bsf	_loRa& (0+255),3,b
 20784                           
 20785                           ;lorawan.c: 2129: }
 20786                           ;lorawan.c: 2131: return 1;
 20787  006100  0C01               	retlw	1	;funcret
 20788  006102                     __end_of_CheckMcastFlags:
 20789                           	opt stack 0
 20790                           tosu	equ	0xFFF
 20791                           tosh	equ	0xFFE
 20792                           tosl	equ	0xFFD
 20793                           pclath	equ	0xFFA
 20794                           tblptru	equ	0xFF8
 20795                           tblptrh	equ	0xFF7
 20796                           tblptrl	equ	0xFF6
 20797                           tablat	equ	0xFF5
 20798                           prodh	equ	0xFF4
 20799                           prodl	equ	0xFF3
 20800                           intcon	equ	0xFF2
 20801                           intcon2	equ	0xFF1
 20802                           intcon3	equ	0xFF0
 20803                           indf0	equ	0xFEF
 20804                           postinc0	equ	0xFEE
 20805                           fsr0h	equ	0xFEA
 20806                           fsr0l	equ	0xFE9
 20807                           wreg	equ	0xFE8
 20808                           postinc1	equ	0xFE6
 20809                           postdec1	equ	0xFE5
 20810                           plusw1	equ	0xFE3
 20811                           fsr1h	equ	0xFE2
 20812                           fsr1l	equ	0xFE1
 20813                           indf2	equ	0xFDF
 20814                           postinc2	equ	0xFDE
 20815                           postdec2	equ	0xFDD
 20816                           plusw2	equ	0xFDB
 20817                           fsr2h	equ	0xFDA
 20818                           fsr2l	equ	0xFD9
 20819                           status	equ	0xFD8
 20820                           
 20821 ;; *************** function _CheckFlags *****************
 20822 ;; Defined at:
 20823 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;  hdr             2    4[BANK0 ] PTR struct .
 20826 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20827 ;; Auto vars:     Size  Location     Type
 20828 ;;		None
 20829 ;; Return value:  Size  Location     Type
 20830 ;;                  1    wreg      void 
 20831 ;; Registers used:
 20832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20833 ;; Tracked objects:
 20834 ;;		On entry : F/2
 20835 ;;		On exit  : D/0
 20836 ;;		Unchanged: 0/0
 20837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20842 ;;Total ram usage:        2 bytes
 20843 ;; Hardware stack levels used:    1
 20844 ;; Hardware stack levels required when called:    7
 20845 ;; This function calls:
 20846 ;;		Nothing
 20847 ;; This function is called by:
 20848 ;;		_LORAWAN_RxDone
 20849 ;; This function uses a non-reentrant model
 20850 ;;
 20851                           
 20852                           	psect	text110
 20853  006692                     __ptext110:
 20854                           	opt stack 0
 20855  006692                     _CheckFlags:
 20856                           	opt stack 19
 20857                           
 20858                           ; BSR set to: 2
 20859                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20860                           
 20861                           ;incstack = 0
 20862  006692  0100               	movlb	0	; () banked
 20863  006694  EE20 F005          	lfsr	2,5
 20864  006698  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20865  00669A  26D9               	addwf	fsr2l,f,c
 20866  00669C  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20867  00669E  22DA               	addwfc	fsr2h,f,c
 20868  0066A0  AEDF               	btfss	indf2,7,c
 20869  0066A2  D002               	goto	l14055
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;lorawan.c: 2077: {
 20873                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20874  0066A4  0102               	movlb	2	; () banked
 20875  0066A6  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20876  0066A8                     l14055:
 20877                           
 20878                           ;lorawan.c: 2079: }
 20879                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20880  0066A8  0100               	movlb	0	; () banked
 20881  0066AA  EE20 F005          	lfsr	2,5
 20882  0066AE  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20883  0066B0  26D9               	addwf	fsr2l,f,c
 20884  0066B2  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20885  0066B4  22DA               	addwfc	fsr2h,f,c
 20886  0066B6  A8DF               	btfss	indf2,4,c
 20887  0066B8  D002               	goto	l14059
 20888                           
 20889                           ; BSR set to: 0
 20890                           ;lorawan.c: 2082: {
 20891                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20892  0066BA  0102               	movlb	2	; () banked
 20893  0066BC  8700               	bsf	_loRa& (0+255),3,b
 20894  0066BE                     l14059:
 20895                           
 20896                           ;lorawan.c: 2084: }
 20897                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20898  0066BE  0100               	movlb	0	; () banked
 20899  0066C0  EE20 F005          	lfsr	2,5
 20900  0066C4  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20901  0066C6  26D9               	addwf	fsr2l,f,c
 20902  0066C8  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20903  0066CA  22DA               	addwfc	fsr2h,f,c
 20904  0066CC  ACDF               	btfss	indf2,6,c
 20905  0066CE  D002               	goto	l14063
 20906                           
 20907                           ; BSR set to: 0
 20908                           ;lorawan.c: 2087: {
 20909                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20910  0066D0  0102               	movlb	2	; () banked
 20911  0066D2  8900               	bsf	_loRa& (0+255),4,b
 20912  0066D4                     l14063:
 20913                           
 20914                           ;lorawan.c: 2089: }
 20915                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20916  0066D4  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20917  0066D8  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20918  0066DC  0100               	movlb	0	; () banked
 20919  0066DE  38DF               	swapf	223,w,c
 20920  0066E0  32E8               	rrcf	wreg,f,c
 20921  0066E2  0B07               	andlw	7
 20922  0066E4  0A05               	xorlw	5
 20923  0066E6  A4D8               	btfss	status,2,c
 20924  0066E8  0012               	return	
 20925                           
 20926                           ; BSR set to: 0
 20927                           ;lorawan.c: 2092: {
 20928                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20929  0066EA  0102               	movlb	2	; () banked
 20930  0066EC  8300               	bsf	_loRa& (0+255),1,b
 20931  0066EE  0012               	return		;funcret
 20932  0066F0                     __end_of_CheckFlags:
 20933                           	opt stack 0
 20934                           tosu	equ	0xFFF
 20935                           tosh	equ	0xFFE
 20936                           tosl	equ	0xFFD
 20937                           pclath	equ	0xFFA
 20938                           tblptru	equ	0xFF8
 20939                           tblptrh	equ	0xFF7
 20940                           tblptrl	equ	0xFF6
 20941                           tablat	equ	0xFF5
 20942                           prodh	equ	0xFF4
 20943                           prodl	equ	0xFF3
 20944                           intcon	equ	0xFF2
 20945                           intcon2	equ	0xFF1
 20946                           intcon3	equ	0xFF0
 20947                           indf0	equ	0xFEF
 20948                           postinc0	equ	0xFEE
 20949                           fsr0h	equ	0xFEA
 20950                           fsr0l	equ	0xFE9
 20951                           wreg	equ	0xFE8
 20952                           postinc1	equ	0xFE6
 20953                           postdec1	equ	0xFE5
 20954                           plusw1	equ	0xFE3
 20955                           fsr1h	equ	0xFE2
 20956                           fsr1l	equ	0xFE1
 20957                           indf2	equ	0xFDF
 20958                           postinc2	equ	0xFDE
 20959                           postdec2	equ	0xFDD
 20960                           plusw2	equ	0xFDB
 20961                           fsr2h	equ	0xFDA
 20962                           fsr2l	equ	0xFD9
 20963                           status	equ	0xFD8
 20964                           
 20965 ;; *************** function _RADIO_FSKPacketSent *****************
 20966 ;; Defined at:
 20967 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;		None
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 20972 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 20973 ;; Return value:  Size  Location     Type
 20974 ;;                  1    wreg      void 
 20975 ;; Registers used:
 20976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20977 ;; Tracked objects:
 20978 ;;		On entry : F/0
 20979 ;;		On exit  : C/0
 20980 ;;		Unchanged: 0/0
 20981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20983 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20985 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20986 ;;Total ram usage:       13 bytes
 20987 ;; Hardware stack levels used:    1
 20988 ;; Hardware stack levels required when called:   15
 20989 ;; This function calls:
 20990 ;;		_LORAWAN_TxDone
 20991 ;;		_RADIO_RegisterRead
 20992 ;;		_RADIO_WriteMode
 20993 ;;		_SwTimerReadValue
 20994 ;;		_SwTimerStop
 20995 ;; This function is called by:
 20996 ;;		_RADIO_DIO0
 20997 ;; This function uses a non-reentrant model
 20998 ;;
 20999                           
 21000                           	psect	text111
 21001  003A02                     __ptext111:
 21002                           	opt stack 0
 21003  003A02                     _RADIO_FSKPacketSent:
 21004                           	opt stack 13
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 21008                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 21009                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 21010                           
 21011                           ;incstack = 0
 21012  003A02  0E3F               	movlw	63
 21013  003A04  EC55  F039         	call	_RADIO_RegisterRead
 21014  003A08  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 21018  003A0A  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 21019  003A0C  0012               	return	
 21020                           
 21021                           ; BSR set to: 0
 21022                           ;radio_driver_SX1276.c: 1100: {
 21023                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 21024  003A0E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 21025  003A12  0E00               	movlw	0
 21026  003A14  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 21027  003A16  EC5F  F028         	call	_RADIO_WriteMode
 21028                           
 21029                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 21030  003A1A  0101               	movlb	1	; () banked
 21031  003A1C  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 21032                           
 21033                           ; BSR set to: 1
 21034                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 21035  003A1E  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 21036  003A20  EC59  F03A         	call	_SwTimerStop
 21037                           
 21038                           ; BSR set to: 0
 21039                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 21040  003A24  0101               	movlb	1	; () banked
 21041  003A26  B9A1               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 21042  003A28  0012               	return	
 21043                           
 21044                           ; BSR set to: 1
 21045                           ;radio_driver_SX1276.c: 1107: {
 21046                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 21047  003A2A  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21048  003A2C  EC83  F036         	call	_SwTimerReadValue
 21049  003A30  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 21050  003A32  E107               	bnz	u17240
 21051  003A34  0E1F               	movlw	31
 21052  003A36  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 21053  003A38  0EAC               	movlw	172
 21054  003A3A  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 21055  003A3C  0EDF               	movlw	223
 21056  003A3E  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 21057  003A40  E346               	bnc	l14881
 21058  003A42                     u17240:
 21059                           
 21060                           ; BSR set to: 0
 21061  003A42  0101               	movlb	1	; () banked
 21062  003A44  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21063  003A46  EC83  F036         	call	_SwTimerReadValue
 21064  003A4A  0E0D               	movlw	13
 21065  003A4C  D005               	goto	u17250
 21066  003A4E                     u17255:
 21067  003A4E  90D8               	bcf	status,0,c
 21068  003A50  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 21069  003A52  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 21070  003A54  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 21071  003A56  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 21072  003A58                     u17250:
 21073  003A58  2EE8               	decfsz	wreg,f,c
 21074  003A5A  D7F9               	goto	u17255
 21075  003A5C  0E7D               	movlw	125
 21076  003A5E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21077  003A60  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 21078  003A64  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 21079  003A68  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21080  003A6A  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21081  003A6C  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21082  003A6E  50F3               	movf	prodl,w,c
 21083  003A70  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21084  003A72  50F4               	movf	prodh,w,c
 21085  003A74  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21086  003A76  0E00               	movlw	0
 21087  003A78  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21088  003A7A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21089  003A7C  50F3               	movf	prodl,w,c
 21090  003A7E  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21091  003A80  50F4               	movf	prodh,w,c
 21092  003A82  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21093  003A84  0E00               	movlw	0
 21094  003A86  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21095  003A88  0E7D               	movlw	125
 21096  003A8A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21097  003A8C  50F3               	movf	prodl,w,c
 21098  003A8E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21099  003A90  50F4               	movf	prodh,w,c
 21100  003A92  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21101  003A94  0E00               	movlw	0
 21102  003A96  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21103  003A98  50F3               	movf	prodl,w,c
 21104  003A9A  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21105  003A9C  50F4               	movf	prodh,w,c
 21106  003A9E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21107  003AA0  0E00               	movlw	0
 21108  003AA2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21109  003AA4  50F3               	movf	prodl,w,c
 21110  003AA6  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21111  003AA8  50F4               	movf	prodh,w,c
 21112  003AAA  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21113  003AAC  0E7D               	movlw	125
 21114  003AAE  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21115  003AB0  50F3               	movf	prodl,w,c
 21116  003AB2  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21117  003AB4  0E00               	movlw	0
 21118  003AB6  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21119  003AB8  50F3               	movf	prodl,w,c
 21120  003ABA  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21121  003ABC  0E00               	movlw	0
 21122  003ABE  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21123  003AC0  50F3               	movf	prodl,w,c
 21124  003AC2  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21125  003AC4  0E00               	movlw	0
 21126  003AC6  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21127  003AC8  50F3               	movf	prodl,w,c
 21128  003ACA  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21129  003ACC  D045               	goto	L11
 21130  003ACE                     l14881:
 21131                           
 21132                           ; BSR set to: 0
 21133  003ACE  0101               	movlb	1	; () banked
 21134  003AD0  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21135  003AD2  EC83  F036         	call	_SwTimerReadValue
 21136  003AD6  0E7D               	movlw	125
 21137  003AD8  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21138  003ADA  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 21139  003ADE  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 21140  003AE2  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21141  003AE4  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21142  003AE6  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21143  003AE8  50F3               	movf	prodl,w,c
 21144  003AEA  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21145  003AEC  50F4               	movf	prodh,w,c
 21146  003AEE  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21147  003AF0  0E00               	movlw	0
 21148  003AF2  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21149  003AF4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21150  003AF6  50F3               	movf	prodl,w,c
 21151  003AF8  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21152  003AFA  50F4               	movf	prodh,w,c
 21153  003AFC  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21154  003AFE  0E00               	movlw	0
 21155  003B00  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21156  003B02  0E7D               	movlw	125
 21157  003B04  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21158  003B06  50F3               	movf	prodl,w,c
 21159  003B08  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21160  003B0A  50F4               	movf	prodh,w,c
 21161  003B0C  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21162  003B0E  0E00               	movlw	0
 21163  003B10  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21164  003B12  50F3               	movf	prodl,w,c
 21165  003B14  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21166  003B16  50F4               	movf	prodh,w,c
 21167  003B18  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21168  003B1A  0E00               	movlw	0
 21169  003B1C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21170  003B1E  50F3               	movf	prodl,w,c
 21171  003B20  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21172  003B22  50F4               	movf	prodh,w,c
 21173  003B24  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21174  003B26  0E7D               	movlw	125
 21175  003B28  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21176  003B2A  50F3               	movf	prodl,w,c
 21177  003B2C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21178  003B2E  0E00               	movlw	0
 21179  003B30  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21180  003B32  50F3               	movf	prodl,w,c
 21181  003B34  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21182  003B36  0E00               	movlw	0
 21183  003B38  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21184  003B3A  50F3               	movf	prodl,w,c
 21185  003B3C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21186  003B3E  0E00               	movlw	0
 21187  003B40  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21188  003B42  50F3               	movf	prodl,w,c
 21189  003B44  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21190  003B46  0E0D               	movlw	13
 21191  003B48  D005               	goto	u17260
 21192  003B4A                     u17265:
 21193  003B4A  90D8               	bcf	status,0,c
 21194  003B4C  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21195  003B4E  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21196  003B50  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21197  003B52  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21198  003B54                     u17260:
 21199  003B54  2EE8               	decfsz	wreg,f,c
 21200  003B56  D7F9               	goto	u17265
 21201  003B58                     L11:
 21202  003B58  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1215
 21203  003B5C  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1215+1
 21204  003B60  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1215+2
 21205  003B64  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1215+3
 21206                           
 21207                           ; BSR set to: 0
 21208  003B68  51DA               	movf	_RADIO_FSKPacketSent$1215& (0+255),w,b
 21209  003B6A  0820               	sublw	32
 21210  003B6C  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21211  003B6E  0E4E               	movlw	78
 21212  003B70  55DB               	subfwb	(_RADIO_FSKPacketSent$1215+1)& (0+255),w,b
 21213  003B72  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21214  003B74  0E00               	movlw	0
 21215  003B76  55DC               	subfwb	(_RADIO_FSKPacketSent$1215+2)& (0+255),w,b
 21216  003B78  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21217  003B7A  0E00               	movlw	0
 21218  003B7C  55DD               	subfwb	(_RADIO_FSKPacketSent$1215+3)& (0+255),w,b
 21219  003B7E  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21220                           
 21221                           ; BSR set to: 0
 21222                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21223  003B80  0101               	movlb	1	; () banked
 21224  003B82  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21225  003B84  EC59  F03A         	call	_SwTimerStop
 21226                           
 21227                           ; BSR set to: 0
 21228                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21229  003B88  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21230  003B8C  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21231  003B90  EF7D  F005         	goto	_LORAWAN_TxDone	;wreg free
 21232  003B94                     __end_of_RADIO_FSKPacketSent:
 21233                           	opt stack 0
 21234                           tosu	equ	0xFFF
 21235                           tosh	equ	0xFFE
 21236                           tosl	equ	0xFFD
 21237                           pclath	equ	0xFFA
 21238                           tblptru	equ	0xFF8
 21239                           tblptrh	equ	0xFF7
 21240                           tblptrl	equ	0xFF6
 21241                           tablat	equ	0xFF5
 21242                           prodh	equ	0xFF4
 21243                           prodl	equ	0xFF3
 21244                           intcon	equ	0xFF2
 21245                           intcon2	equ	0xFF1
 21246                           intcon3	equ	0xFF0
 21247                           indf0	equ	0xFEF
 21248                           postinc0	equ	0xFEE
 21249                           fsr0h	equ	0xFEA
 21250                           fsr0l	equ	0xFE9
 21251                           wreg	equ	0xFE8
 21252                           postinc1	equ	0xFE6
 21253                           postdec1	equ	0xFE5
 21254                           plusw1	equ	0xFE3
 21255                           fsr1h	equ	0xFE2
 21256                           fsr1l	equ	0xFE1
 21257                           indf2	equ	0xFDF
 21258                           postinc2	equ	0xFDE
 21259                           postdec2	equ	0xFDD
 21260                           plusw2	equ	0xFDB
 21261                           fsr2h	equ	0xFDA
 21262                           fsr2l	equ	0xFD9
 21263                           status	equ	0xFD8
 21264                           
 21265 ;; *************** function _LORAWAN_TxDone *****************
 21266 ;; Defined at:
 21267 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21268 ;; Parameters:    Size  Location     Type
 21269 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 21270 ;; Auto vars:     Size  Location     Type
 21271 ;;  minim           4  109[BANK0 ] unsigned long 
 21272 ;;  ticks           4  105[BANK0 ] unsigned long 
 21273 ;;  delta           4  101[BANK0 ] unsigned long 
 21274 ;;  i               1  113[BANK0 ] unsigned char 
 21275 ;;  found           1  100[BANK0 ] unsigned char 
 21276 ;; Return value:  Size  Location     Type
 21277 ;;                  1    wreg      void 
 21278 ;; Registers used:
 21279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21280 ;; Tracked objects:
 21281 ;;		On entry : E/1
 21282 ;;		On exit  : D/0
 21283 ;;		Unchanged: 0/0
 21284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21286 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21287 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21288 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21289 ;;Total ram usage:       50 bytes
 21290 ;; Hardware stack levels used:    1
 21291 ;; Hardware stack levels required when called:   14
 21292 ;; This function calls:
 21293 ;;		_LORAWAN_EnterContinuousReceive
 21294 ;;		_RADIO_GetStatus
 21295 ;;		_RxDataDone
 21296 ;;		_SwTimerIsRunning
 21297 ;;		_SwTimerReadValue
 21298 ;;		_SwTimerSetTimeout
 21299 ;;		_SwTimerStart
 21300 ;;		_SwTimerStop
 21301 ;;		___lldiv
 21302 ;; This function is called by:
 21303 ;;		_RADIO_TxDone
 21304 ;;		_RADIO_FSKPacketSent
 21305 ;;		_RADIO_WatchdogTimeout
 21306 ;; This function uses a non-reentrant model
 21307 ;;
 21308                           
 21309                           	psect	text112
 21310  000AFA                     __ptext112:
 21311                           	opt stack 0
 21312  000AFA                     _LORAWAN_TxDone:
 21313                           	opt stack 13
 21314                           
 21315                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21316                           
 21317                           ;incstack = 0
 21318  000AFA  0102               	movlb	2	; () banked
 21319  000AFC  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21320  000AFE  EF9B  F009         	goto	l14689
 21321                           
 21322                           ; BSR set to: 2
 21323                           ;lorawan_eu.c: 368: {
 21324                           ;lorawan_eu.c: 369: bool found = 0;
 21325  000B02  0100               	movlb	0	; () banked
 21326  000B04  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 21327                           
 21328                           ;lorawan_eu.c: 370: uint8_t i;
 21329                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21330  000B06  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21331  000B08  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21332  000B0A  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21333  000B0C  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21334  000B0E  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 21335  000B10  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21336  000B12  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21337  000B14  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21338                           
 21339                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21340  000B16  0102               	movlb	2	; () banked
 21341  000B18  6BF1               	clrf	(_loRa+241)& (0+255),b
 21342                           
 21343                           ; BSR set to: 2
 21344                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21345  000B1A  5102               	movf	(_loRa+2)& (0+255),w,b
 21346  000B1C  0BF0               	andlw	-16
 21347  000B1E  0902               	iorlw	2
 21348  000B20  6F02               	movwf	(_loRa+2)& (0+255),b
 21349                           
 21350                           ; BSR set to: 2
 21351                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21352  000B22  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 21353                           
 21354                           ; BSR set to: 2
 21355                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21356  000B26  A500               	btfss	_loRa& (0+255),2,b
 21357  000B28  D110               	goto	l14619
 21358                           
 21359                           ; BSR set to: 2
 21360                           ;lorawan_eu.c: 382: {
 21361                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21362  000B2A  0E7D               	movlw	low _rxWindowOffset
 21363  000B2C  2517               	addwf	(_loRa+23)& (0+255),w,b
 21364  000B2E  6EF6               	movwf	tblptrl,c
 21365  000B30  6AF7               	clrf	tblptrh,c
 21366  000B32  0EFF               	movlw	high _rxWindowOffset
 21367  000B34  22F7               	addwfc	tblptrh,f,c
 21368  000B36                     	if	1	;There are 3 active tblptr bytes
 21369  000B36  6AF8               	clrf	tblptru,c
 21370  000B38  0E00               	movlw	low (__mediumconst shr (0+16))
 21371  000B3A  22F8               	addwfc	tblptru,f,c
 21372  000B3C                     	endif
 21373  000B3C  0008               	tblrd		*
 21374  000B3E  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21375  000B42  5198               	movf	(_loRa+152)& (0+255),w,b
 21376  000B44  0100               	movlb	0	; () banked
 21377  000B46  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21378  000B48  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21379  000B4A  0E00               	movlw	0
 21380  000B4C  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21381  000B4E  0EFF               	movlw	255
 21382  000B50  0102               	movlb	2	; () banked
 21383  000B52  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21384  000B54  0100               	movlb	0	; () banked
 21385  000B56  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21386  000B58  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21387  000B5A  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21388  000B5C  0E0C               	movlw	12
 21389  000B5E                     u16815:
 21390  000B5E  90D8               	bcf	status,0,c
 21391  000B60  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21392  000B62  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21393  000B64  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21394  000B66  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21395  000B68  2EE8               	decfsz	wreg,f,c
 21396  000B6A  D7F9               	goto	u16815
 21397  000B6C  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21398  000B70  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21399  000B74  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21400  000B78  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21401  000B7C  0E7D               	movlw	125
 21402  000B7E  6F68               	movwf	___lldiv@divisor& (0+255),b
 21403  000B80  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21404  000B82  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21405  000B84  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21406  000B86  EC0D  F030         	call	___lldiv	;wreg free
 21407  000B8A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21408  000B8E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21409  000B92  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21410  000B96  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21411  000B9A  0102               	movlb	2	; () banked
 21412  000B9C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21413  000B9E  EC62  F036         	call	_SwTimerSetTimeout
 21414                           
 21415                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21416  000BA2  0E7D               	movlw	low _rxWindowOffset
 21417  000BA4  0102               	movlb	2	; () banked
 21418  000BA6  251C               	addwf	(_loRa+28)& (0+255),w,b
 21419  000BA8  6EF6               	movwf	tblptrl,c
 21420  000BAA  6AF7               	clrf	tblptrh,c
 21421  000BAC  0EFF               	movlw	high _rxWindowOffset
 21422  000BAE  22F7               	addwfc	tblptrh,f,c
 21423  000BB0                     	if	1	;There are 3 active tblptr bytes
 21424  000BB0  6AF8               	clrf	tblptru,c
 21425  000BB2  0E00               	movlw	low (__mediumconst shr (0+16))
 21426  000BB4  22F8               	addwfc	tblptru,f,c
 21427  000BB6                     	endif
 21428  000BB6  0008               	tblrd		*
 21429  000BB8  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21430  000BBC  519A               	movf	(_loRa+154)& (0+255),w,b
 21431  000BBE  0100               	movlb	0	; () banked
 21432  000BC0  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21433  000BC2  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21434  000BC4  0E00               	movlw	0
 21435  000BC6  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21436  000BC8  0EFF               	movlw	255
 21437  000BCA  0102               	movlb	2	; () banked
 21438  000BCC  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21439  000BCE  0100               	movlb	0	; () banked
 21440  000BD0  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21441  000BD2  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21442  000BD4  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21443  000BD6  0E0C               	movlw	12
 21444  000BD8                     u16825:
 21445  000BD8  90D8               	bcf	status,0,c
 21446  000BDA  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21447  000BDC  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21448  000BDE  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21449  000BE0  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21450  000BE2  2EE8               	decfsz	wreg,f,c
 21451  000BE4  D7F9               	goto	u16825
 21452  000BE6  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21453  000BEA  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21454  000BEE  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21455  000BF2  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21456  000BF6  0E7D               	movlw	125
 21457  000BF8  6F68               	movwf	___lldiv@divisor& (0+255),b
 21458  000BFA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21459  000BFC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21460  000BFE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21461  000C00  EC0D  F030         	call	___lldiv	;wreg free
 21462  000C04  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21463  000C08  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21464  000C0C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21465  000C10  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21466  000C14  0102               	movlb	2	; () banked
 21467  000C16  51E3               	movf	(_loRa+227)& (0+255),w,b
 21468  000C18  EC62  F036         	call	_SwTimerSetTimeout
 21469                           
 21470                           ; BSR set to: 0
 21471                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21472  000C1C  0102               	movlb	2	; () banked
 21473  000C1E  51E2               	movf	(_loRa+226)& (0+255),w,b
 21474  000C20  EC4B  F02E         	call	_SwTimerStart
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21478  000C24  0102               	movlb	2	; () banked
 21479  000C26  51E3               	movf	(_loRa+227)& (0+255),w,b
 21480  000C28  EC4B  F02E         	call	_SwTimerStart
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21484  000C2C  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21485  000C30  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21486  000C34  0102               	movlb	2	; () banked
 21487  000C36  51DB               	movf	(_loRa+219)& (0+255),w,b
 21488  000C38  0100               	movlb	0	; () banked
 21489  000C3A  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21490  000C3C  0102               	movlb	2	; () banked
 21491  000C3E  51DC               	movf	(_loRa+220)& (0+255),w,b
 21492  000C40  0100               	movlb	0	; () banked
 21493  000C42  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21494  000C44  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21495  000C46  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21496  000C48  0ED6               	movlw	214
 21497  000C4A  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21498  000C4C  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 21499  000C50  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 21500  000C54  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21501  000C56  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21502  000C58  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21503  000C5A  50F3               	movf	prodl,w,c
 21504  000C5C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21505  000C5E  50F4               	movf	prodh,w,c
 21506  000C60  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21507  000C62  0E00               	movlw	0
 21508  000C64  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21509  000C66  0E0B               	movlw	11
 21510  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21511  000C6A  50F3               	movf	prodl,w,c
 21512  000C6C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21513  000C6E  50F4               	movf	prodh,w,c
 21514  000C70  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21515  000C72  0E00               	movlw	0
 21516  000C74  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21517  000C76  0ED6               	movlw	214
 21518  000C78  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21519  000C7A  50F3               	movf	prodl,w,c
 21520  000C7C  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21521  000C7E  50F4               	movf	prodh,w,c
 21522  000C80  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21523  000C82  0E0B               	movlw	11
 21524  000C84  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21525  000C86  50F3               	movf	prodl,w,c
 21526  000C88  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21527  000C8A  50F4               	movf	prodh,w,c
 21528  000C8C  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21529  000C8E  0E00               	movlw	0
 21530  000C90  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21531  000C92  50F3               	movf	prodl,w,c
 21532  000C94  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21533  000C96  50F4               	movf	prodh,w,c
 21534  000C98  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21535  000C9A  0ED6               	movlw	214
 21536  000C9C  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21537  000C9E  50F3               	movf	prodl,w,c
 21538  000CA0  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21539  000CA2  0E0B               	movlw	11
 21540  000CA4  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21541  000CA6  50F3               	movf	prodl,w,c
 21542  000CA8  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21543  000CAA  0E00               	movlw	0
 21544  000CAC  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21545  000CAE  50F3               	movf	prodl,w,c
 21546  000CB0  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21547  000CB2  0E00               	movlw	0
 21548  000CB4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21549  000CB6  50F3               	movf	prodl,w,c
 21550  000CB8  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21551  000CBA  0EFF               	movlw	255
 21552  000CBC  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21553  000CBE  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21554  000CC0  0EFF               	movlw	255
 21555  000CC2  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21556  000CC4  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21557  000CC6  0EFF               	movlw	255
 21558  000CC8  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21559  000CCA  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21560  000CCC  0EFF               	movlw	255
 21561  000CCE  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21562  000CD0  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21563  000CD2  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21564  000CD4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21565  000CD6  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21566  000CDA  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21567  000CDE  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21568  000CE0  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21569  000CE2  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21570  000CE4  50F3               	movf	prodl,w,c
 21571  000CE6  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21572  000CE8  50F4               	movf	prodh,w,c
 21573  000CEA  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21574  000CEC  0E00               	movlw	0
 21575  000CEE  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21576  000CF0  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21577  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21578  000CF4  50F3               	movf	prodl,w,c
 21579  000CF6  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21580  000CF8  50F4               	movf	prodh,w,c
 21581  000CFA  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21582  000CFC  0E00               	movlw	0
 21583  000CFE  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21584  000D00  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21585  000D02  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21586  000D04  50F3               	movf	prodl,w,c
 21587  000D06  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21588  000D08  50F4               	movf	prodh,w,c
 21589  000D0A  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21590  000D0C  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21591  000D0E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21592  000D10  50F3               	movf	prodl,w,c
 21593  000D12  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21594  000D14  50F4               	movf	prodh,w,c
 21595  000D16  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21596  000D18  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21597  000D1A  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21598  000D1C  50F3               	movf	prodl,w,c
 21599  000D1E  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21600  000D20  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21601  000D22  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21602  000D24  50F3               	movf	prodl,w,c
 21603  000D26  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21604  000D28  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21605  000D2A  0D0E               	mullw	14
 21606  000D2C  0E08               	movlw	low (_Channels+8)
 21607  000D2E  24F3               	addwf	prodl,w,c
 21608  000D30  6ED9               	movwf	fsr2l,c
 21609  000D32  0E04               	movlw	high (_Channels+8)
 21610  000D34  20F4               	addwfc	prodh,w,c
 21611  000D36  6EDA               	movwf	fsr2h,c
 21612  000D38  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21613  000D3C  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21614  000D40  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21615  000D44  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21616                           
 21617                           ;lorawan_eu.c: 389: }
 21618  000D48  D11D               	goto	l14629
 21619  000D4A                     l14619:
 21620                           
 21621                           ; BSR set to: 2
 21622                           ;lorawan_eu.c: 390: else
 21623                           ;lorawan_eu.c: 391: {
 21624                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21625  000D4A  0E7D               	movlw	low _rxWindowOffset
 21626  000D4C  2517               	addwf	(_loRa+23)& (0+255),w,b
 21627  000D4E  6EF6               	movwf	tblptrl,c
 21628  000D50  6AF7               	clrf	tblptrh,c
 21629  000D52  0EFF               	movlw	high _rxWindowOffset
 21630  000D54  22F7               	addwfc	tblptrh,f,c
 21631  000D56                     	if	1	;There are 3 active tblptr bytes
 21632  000D56  6AF8               	clrf	tblptru,c
 21633  000D58  0E00               	movlw	low (__mediumconst shr (0+16))
 21634  000D5A  22F8               	addwfc	tblptru,f,c
 21635  000D5C                     	endif
 21636  000D5C  0008               	tblrd		*
 21637  000D5E  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21638  000D62  5194               	movf	(_loRa+148)& (0+255),w,b
 21639  000D64  0100               	movlb	0	; () banked
 21640  000D66  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21641  000D68  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21642  000D6A  0E00               	movlw	0
 21643  000D6C  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21644  000D6E  0EFF               	movlw	255
 21645  000D70  0102               	movlb	2	; () banked
 21646  000D72  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21647  000D74  0100               	movlb	0	; () banked
 21648  000D76  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21649  000D78  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21650  000D7A  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21651  000D7C  0E0C               	movlw	12
 21652  000D7E                     u16835:
 21653  000D7E  90D8               	bcf	status,0,c
 21654  000D80  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21655  000D82  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21656  000D84  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21657  000D86  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21658  000D88  2EE8               	decfsz	wreg,f,c
 21659  000D8A  D7F9               	goto	u16835
 21660  000D8C  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21661  000D90  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21662  000D94  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21663  000D98  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21664  000D9C  0E7D               	movlw	125
 21665  000D9E  6F68               	movwf	___lldiv@divisor& (0+255),b
 21666  000DA0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21667  000DA2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21668  000DA4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21669  000DA6  EC0D  F030         	call	___lldiv	;wreg free
 21670  000DAA  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21671  000DAE  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21672  000DB2  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21673  000DB6  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21674  000DBA  0102               	movlb	2	; () banked
 21675  000DBC  51E4               	movf	(_loRa+228)& (0+255),w,b
 21676  000DBE  EC62  F036         	call	_SwTimerSetTimeout
 21677                           
 21678                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21679  000DC2  0E7D               	movlw	low _rxWindowOffset
 21680  000DC4  0102               	movlb	2	; () banked
 21681  000DC6  251C               	addwf	(_loRa+28)& (0+255),w,b
 21682  000DC8  6EF6               	movwf	tblptrl,c
 21683  000DCA  6AF7               	clrf	tblptrh,c
 21684  000DCC  0EFF               	movlw	high _rxWindowOffset
 21685  000DCE  22F7               	addwfc	tblptrh,f,c
 21686  000DD0                     	if	1	;There are 3 active tblptr bytes
 21687  000DD0  6AF8               	clrf	tblptru,c
 21688  000DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 21689  000DD4  22F8               	addwfc	tblptru,f,c
 21690  000DD6                     	endif
 21691  000DD6  0008               	tblrd		*
 21692  000DD8  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21693  000DDC  5196               	movf	(_loRa+150)& (0+255),w,b
 21694  000DDE  0100               	movlb	0	; () banked
 21695  000DE0  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21696  000DE2  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21697  000DE4  0E00               	movlw	0
 21698  000DE6  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21699  000DE8  0EFF               	movlw	255
 21700  000DEA  0102               	movlb	2	; () banked
 21701  000DEC  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21702  000DEE  0100               	movlb	0	; () banked
 21703  000DF0  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21704  000DF2  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21705  000DF4  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21706  000DF6  0E0C               	movlw	12
 21707  000DF8                     u16845:
 21708  000DF8  90D8               	bcf	status,0,c
 21709  000DFA  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21710  000DFC  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21711  000DFE  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21712  000E00  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21713  000E02  2EE8               	decfsz	wreg,f,c
 21714  000E04  D7F9               	goto	u16845
 21715  000E06  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21716  000E0A  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21717  000E0E  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21718  000E12  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21719  000E16  0E7D               	movlw	125
 21720  000E18  6F68               	movwf	___lldiv@divisor& (0+255),b
 21721  000E1A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21722  000E1C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21723  000E1E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21724  000E20  EC0D  F030         	call	___lldiv	;wreg free
 21725  000E24  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21726  000E28  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21727  000E2C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21728  000E30  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21729  000E34  0102               	movlb	2	; () banked
 21730  000E36  51E5               	movf	(_loRa+229)& (0+255),w,b
 21731  000E38  EC62  F036         	call	_SwTimerSetTimeout
 21732                           
 21733                           ; BSR set to: 0
 21734                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21735  000E3C  0102               	movlb	2	; () banked
 21736  000E3E  51E4               	movf	(_loRa+228)& (0+255),w,b
 21737  000E40  EC4B  F02E         	call	_SwTimerStart
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21741  000E44  0102               	movlb	2	; () banked
 21742  000E46  5112               	movf	(_loRa+18)& (0+255),w,b
 21743  000E48  E103               	bnz	l14627
 21744                           
 21745                           ; BSR set to: 2
 21746                           ;lorawan_eu.c: 396: {
 21747                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21748  000E4A  51E5               	movf	(_loRa+229)& (0+255),w,b
 21749  000E4C  EC4B  F02E         	call	_SwTimerStart
 21750  000E50                     l14627:
 21751                           
 21752                           ;lorawan_eu.c: 398: }
 21753                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21754  000E50  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21755  000E54  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21756  000E58  EE22  F0DB         	lfsr	2,_loRa+219
 21757  000E5C  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21758  000E60  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 21759  000E64  0100               	movlb	0	; () banked
 21760  000E66  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21761  000E68  0D0E               	mullw	14
 21762  000E6A  0E06               	movlw	low (_Channels+6)
 21763  000E6C  24F3               	addwf	prodl,w,c
 21764  000E6E  6ED9               	movwf	fsr2l,c
 21765  000E70  0E04               	movlw	high (_Channels+6)
 21766  000E72  20F4               	addwfc	prodh,w,c
 21767  000E74  6EDA               	movwf	fsr2h,c
 21768  000E76  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 21769  000E7A  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 21770  000E7E  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21771  000E80  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21772  000E82  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21773  000E84  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21774  000E86  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21775  000E88  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21776  000E8A  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21777  000E8C  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21778  000E8E  0E00               	movlw	0
 21779  000E90  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21780  000E92  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21781  000E94  0E00               	movlw	0
 21782  000E96  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21783  000E98  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21784  000E9A  0E00               	movlw	0
 21785  000E9C  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21786  000E9E  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21787  000EA0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21788  000EA2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21789  000EA4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21790  000EA8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21791  000EAC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21792  000EAE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21793  000EB0  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21794  000EB2  50F3               	movf	prodl,w,c
 21795  000EB4  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21796  000EB6  50F4               	movf	prodh,w,c
 21797  000EB8  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21798  000EBA  0E00               	movlw	0
 21799  000EBC  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21800  000EBE  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21801  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21802  000EC2  50F3               	movf	prodl,w,c
 21803  000EC4  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21804  000EC6  50F4               	movf	prodh,w,c
 21805  000EC8  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21806  000ECA  0E00               	movlw	0
 21807  000ECC  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21808  000ECE  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21809  000ED0  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21810  000ED2  50F3               	movf	prodl,w,c
 21811  000ED4  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21812  000ED6  50F4               	movf	prodh,w,c
 21813  000ED8  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21814  000EDA  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21815  000EDC  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21816  000EDE  50F3               	movf	prodl,w,c
 21817  000EE0  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21818  000EE2  50F4               	movf	prodh,w,c
 21819  000EE4  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21820  000EE6  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21821  000EE8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21822  000EEA  50F3               	movf	prodl,w,c
 21823  000EEC  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21824  000EEE  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21825  000EF0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21826  000EF2  50F3               	movf	prodl,w,c
 21827  000EF4  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21828  000EF6  0EFF               	movlw	255
 21829  000EF8  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21830  000EFA  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21831  000EFC  0EFF               	movlw	255
 21832  000EFE  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21833  000F00  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21834  000F02  0EFF               	movlw	255
 21835  000F04  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21836  000F06  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21837  000F08  0EFF               	movlw	255
 21838  000F0A  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21839  000F0C  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21840  000F0E  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21841  000F10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21842  000F12  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 21843  000F16  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 21844  000F1A  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21845  000F1C  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21846  000F1E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21847  000F20  50F3               	movf	prodl,w,c
 21848  000F22  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21849  000F24  50F4               	movf	prodh,w,c
 21850  000F26  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21851  000F28  0E00               	movlw	0
 21852  000F2A  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21853  000F2C  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21854  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21855  000F30  50F3               	movf	prodl,w,c
 21856  000F32  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21857  000F34  50F4               	movf	prodh,w,c
 21858  000F36  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21859  000F38  0E00               	movlw	0
 21860  000F3A  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21861  000F3C  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21862  000F3E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21863  000F40  50F3               	movf	prodl,w,c
 21864  000F42  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21865  000F44  50F4               	movf	prodh,w,c
 21866  000F46  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21867  000F48  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21868  000F4A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21869  000F4C  50F3               	movf	prodl,w,c
 21870  000F4E  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21871  000F50  50F4               	movf	prodh,w,c
 21872  000F52  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21873  000F54  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21874  000F56  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21875  000F58  50F3               	movf	prodl,w,c
 21876  000F5A  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21877  000F5C  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21878  000F5E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21879  000F60  50F3               	movf	prodl,w,c
 21880  000F62  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21881  000F64  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21882  000F66  0D0E               	mullw	14
 21883  000F68  0E08               	movlw	low (_Channels+8)
 21884  000F6A  24F3               	addwf	prodl,w,c
 21885  000F6C  6ED9               	movwf	fsr2l,c
 21886  000F6E  0E04               	movlw	high (_Channels+8)
 21887  000F70  20F4               	addwfc	prodh,w,c
 21888  000F72  6EDA               	movwf	fsr2h,c
 21889  000F74  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21890  000F78  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21891  000F7C  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21892  000F80  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21893  000F84                     l14629:
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;lorawan_eu.c: 401: }
 21897                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21898  000F84  0102               	movlb	2	; () banked
 21899  000F86  51E9               	movf	(_loRa+233)& (0+255),w,b
 21900  000F88  ECEF  F039         	call	_SwTimerIsRunning
 21901  000F8C  0900               	iorlw	0
 21902  000F8E  E101 D0C8          	bz	l14641
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;lorawan_eu.c: 404: {
 21906                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21907  000F92  0102               	movlb	2	; () banked
 21908  000F94  51E9               	movf	(_loRa+233)& (0+255),w,b
 21909  000F96  EC59  F03A         	call	_SwTimerStop
 21910                           
 21911                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21912  000F9A  0102               	movlb	2	; () banked
 21913  000F9C  51E9               	movf	(_loRa+233)& (0+255),w,b
 21914  000F9E  EC83  F036         	call	_SwTimerReadValue
 21915  000FA2  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21916  000FA6  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21917  000FAA  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21918  000FAE  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21919                           
 21920                           ; BSR set to: 0
 21921                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21922  000FB2  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21923  000FB4  E107               	bnz	u16870
 21924  000FB6  0E1F               	movlw	31
 21925  000FB8  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21926  000FBA  0EAC               	movlw	172
 21927  000FBC  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21928  000FBE  0EDF               	movlw	223
 21929  000FC0  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21930  000FC2  E34A               	bnc	l14637
 21931  000FC4                     u16870:
 21932                           
 21933                           ; BSR set to: 0
 21934  000FC4  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21935  000FC8  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21936  000FCC  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21937  000FD0  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21938  000FD4  0E0D               	movlw	13
 21939  000FD6  D005               	goto	u16880
 21940  000FD8                     u16885:
 21941  000FD8  90D8               	bcf	status,0,c
 21942  000FDA  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21943  000FDC  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21944  000FDE  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21945  000FE0  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21946  000FE2                     u16880:
 21947  000FE2  2EE8               	decfsz	wreg,f,c
 21948  000FE4  D7F9               	goto	u16885
 21949  000FE6  0E7D               	movlw	125
 21950  000FE8  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21951  000FEA  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21952  000FEE  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21953  000FF2  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21954  000FF4  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21955  000FF6  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21956  000FF8  50F3               	movf	prodl,w,c
 21957  000FFA  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21958  000FFC  50F4               	movf	prodh,w,c
 21959  000FFE  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21960  001000  0E00               	movlw	0
 21961  001002  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21962  001004  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21963  001006  50F3               	movf	prodl,w,c
 21964  001008  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21965  00100A  50F4               	movf	prodh,w,c
 21966  00100C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21967  00100E  0E00               	movlw	0
 21968  001010  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21969  001012  0E7D               	movlw	125
 21970  001014  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21971  001016  50F3               	movf	prodl,w,c
 21972  001018  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21973  00101A  50F4               	movf	prodh,w,c
 21974  00101C  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21975  00101E  0E00               	movlw	0
 21976  001020  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21977  001022  50F3               	movf	prodl,w,c
 21978  001024  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21979  001026  50F4               	movf	prodh,w,c
 21980  001028  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21981  00102A  0E00               	movlw	0
 21982  00102C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21983  00102E  50F3               	movf	prodl,w,c
 21984  001030  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21985  001032  50F4               	movf	prodh,w,c
 21986  001034  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21987  001036  0E7D               	movlw	125
 21988  001038  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21989  00103A  50F3               	movf	prodl,w,c
 21990  00103C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21991  00103E  0E00               	movlw	0
 21992  001040  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21993  001042  50F3               	movf	prodl,w,c
 21994  001044  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21995  001046  0E00               	movlw	0
 21996  001048  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21997  00104A  50F3               	movf	prodl,w,c
 21998  00104C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21999  00104E  0E00               	movlw	0
 22000  001050  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22001  001052  50F3               	movf	prodl,w,c
 22002  001054  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22003  001056  D049               	goto	L12
 22004  001058                     l14637:
 22005                           
 22006                           ; BSR set to: 0
 22007  001058  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22008  00105C  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22009  001060  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22010  001064  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22011  001068  0E7D               	movlw	125
 22012  00106A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22013  00106C  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 22014  001070  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 22015  001074  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 22016  001076  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 22017  001078  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22018  00107A  50F3               	movf	prodl,w,c
 22019  00107C  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22020  00107E  50F4               	movf	prodh,w,c
 22021  001080  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22022  001082  0E00               	movlw	0
 22023  001084  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22024  001086  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22025  001088  50F3               	movf	prodl,w,c
 22026  00108A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22027  00108C  50F4               	movf	prodh,w,c
 22028  00108E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22029  001090  0E00               	movlw	0
 22030  001092  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22031  001094  0E7D               	movlw	125
 22032  001096  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22033  001098  50F3               	movf	prodl,w,c
 22034  00109A  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22035  00109C  50F4               	movf	prodh,w,c
 22036  00109E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22037  0010A0  0E00               	movlw	0
 22038  0010A2  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22039  0010A4  50F3               	movf	prodl,w,c
 22040  0010A6  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22041  0010A8  50F4               	movf	prodh,w,c
 22042  0010AA  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22043  0010AC  0E00               	movlw	0
 22044  0010AE  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22045  0010B0  50F3               	movf	prodl,w,c
 22046  0010B2  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22047  0010B4  50F4               	movf	prodh,w,c
 22048  0010B6  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22049  0010B8  0E7D               	movlw	125
 22050  0010BA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22051  0010BC  50F3               	movf	prodl,w,c
 22052  0010BE  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22053  0010C0  0E00               	movlw	0
 22054  0010C2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22055  0010C4  50F3               	movf	prodl,w,c
 22056  0010C6  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22057  0010C8  0E00               	movlw	0
 22058  0010CA  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22059  0010CC  50F3               	movf	prodl,w,c
 22060  0010CE  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22061  0010D0  0E00               	movlw	0
 22062  0010D2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22063  0010D4  50F3               	movf	prodl,w,c
 22064  0010D6  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22065  0010D8  0E0D               	movlw	13
 22066  0010DA  D005               	goto	u16890
 22067  0010DC                     u16895:
 22068  0010DC  90D8               	bcf	status,0,c
 22069  0010DE  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22070  0010E0  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22071  0010E2  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22072  0010E4  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22073  0010E6                     u16890:
 22074  0010E6  2EE8               	decfsz	wreg,f,c
 22075  0010E8  D7F9               	goto	u16895
 22076  0010EA                     L12:
 22077  0010EA  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2092
 22078  0010EE  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2092+1
 22079  0010F2  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2092+2
 22080  0010F6  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2092+3
 22081                           
 22082                           ; BSR set to: 0
 22083  0010FA  51BC               	movf	_LORAWAN_TxDone$2092& (0+255),w,b
 22084  0010FC  0102               	movlb	2	; () banked
 22085  0010FE  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 22086  001100  0100               	movlb	0	; () banked
 22087  001102  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22088  001104  51BD               	movf	(_LORAWAN_TxDone$2092+1)& (0+255),w,b
 22089  001106  0102               	movlb	2	; () banked
 22090  001108  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 22091  00110A  0100               	movlb	0	; () banked
 22092  00110C  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22093  00110E  51BE               	movf	(_LORAWAN_TxDone$2092+2)& (0+255),w,b
 22094  001110  0102               	movlb	2	; () banked
 22095  001112  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 22096  001114  0100               	movlb	0	; () banked
 22097  001116  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22098  001118  51BF               	movf	(_LORAWAN_TxDone$2092+3)& (0+255),w,b
 22099  00111A  0102               	movlb	2	; () banked
 22100  00111C  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 22101  00111E  0100               	movlb	0	; () banked
 22102  001120  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22103  001122                     l14641:
 22104                           
 22105                           ; BSR set to: 0
 22106                           ;lorawan_eu.c: 409: }
 22107                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 22108  001122  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 22109  001124                     l14647:
 22110                           
 22111                           ; BSR set to: 0
 22112                           ;lorawan_eu.c: 412: {
 22113                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 22114  001124  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22115  001126  0D0E               	mullw	14
 22116  001128  0E04               	movlw	low (_Channels+4)
 22117  00112A  24F3               	addwf	prodl,w,c
 22118  00112C  6ED9               	movwf	fsr2l,c
 22119  00112E  0E04               	movlw	high (_Channels+4)
 22120  001130  20F4               	addwfc	prodh,w,c
 22121  001132  6EDA               	movwf	fsr2h,c
 22122  001134  04DE               	decf	postinc2,w,c
 22123  001136  E001 D08E          	bnz	l14665
 22124                           
 22125                           ; BSR set to: 0
 22126  00113A  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22127  00113C  0D0E               	mullw	14
 22128  00113E  0E08               	movlw	low (_Channels+8)
 22129  001140  24F3               	addwf	prodl,w,c
 22130  001142  6ED9               	movwf	fsr2l,c
 22131  001144  0E04               	movlw	high (_Channels+8)
 22132  001146  20F4               	addwfc	prodh,w,c
 22133  001148  6EDA               	movwf	fsr2h,c
 22134  00114A  50DE               	movf	postinc2,w,c
 22135  00114C  10DE               	iorwf	postinc2,w,c
 22136  00114E  10DE               	iorwf	postinc2,w,c
 22137  001150  10DE               	iorwf	postinc2,w,c
 22138  001152  E101 D080          	bz	l14665
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;lorawan_eu.c: 414: {
 22142                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 22143  001156  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22144  001158  0102               	movlb	2	; () banked
 22145  00115A  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 22146  00115C  E04B               	bz	l1031
 22147                           
 22148                           ; BSR set to: 2
 22149                           ;lorawan_eu.c: 416: {
 22150                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 22151  00115E  0100               	movlb	0	; () banked
 22152  001160  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22153  001162  0D0E               	mullw	14
 22154  001164  0E08               	movlw	low (_Channels+8)
 22155  001166  24F3               	addwf	prodl,w,c
 22156  001168  6ED9               	movwf	fsr2l,c
 22157  00116A  0E04               	movlw	high (_Channels+8)
 22158  00116C  20F4               	addwfc	prodh,w,c
 22159  00116E  6EDA               	movwf	fsr2h,c
 22160  001170  50DE               	movf	postinc2,w,c
 22161  001172  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22162  001174  50DE               	movf	postinc2,w,c
 22163  001176  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22164  001178  50DE               	movf	postinc2,w,c
 22165  00117A  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22166  00117C  50DE               	movf	postinc2,w,c
 22167  00117E  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22168  001180  E22D               	bc	l14657
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;lorawan_eu.c: 418: {
 22172                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 22173  001182  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22174  001184  0D0E               	mullw	14
 22175  001186  0E08               	movlw	low (_Channels+8)
 22176  001188  24F3               	addwf	prodl,w,c
 22177  00118A  6ED9               	movwf	fsr2l,c
 22178  00118C  0E04               	movlw	high (_Channels+8)
 22179  00118E  20F4               	addwfc	prodh,w,c
 22180  001190  6EDA               	movwf	fsr2h,c
 22181  001192  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 22182  001196  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 22183  00119A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 22184  00119E  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 22185  0011A2  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22186  0011A4  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22187  0011A6  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22188  0011A8  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22189  0011AA  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22190  0011AC  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22191  0011AE  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22192  0011B0  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22193  0011B2  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22194  0011B4  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22195  0011B6  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22196  0011B8  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22197  0011BA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22198  0011BC  0D0E               	mullw	14
 22199  0011BE  0E08               	movlw	low (_Channels+8)
 22200  0011C0  24F3               	addwf	prodl,w,c
 22201  0011C2  6ED9               	movwf	fsr2l,c
 22202  0011C4  0E04               	movlw	high (_Channels+8)
 22203  0011C6  20F4               	addwfc	prodh,w,c
 22204  0011C8  6EDA               	movwf	fsr2h,c
 22205  0011CA  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22206  0011CE  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22207  0011D2  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22208  0011D6  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22209                           
 22210                           ;lorawan_eu.c: 420: }
 22211  0011DA  D00C               	goto	l1031
 22212  0011DC                     l14657:
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;lorawan_eu.c: 421: else
 22216                           ;lorawan_eu.c: 422: {
 22217                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22218  0011DC  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22219  0011DE  0D0E               	mullw	14
 22220  0011E0  0E08               	movlw	low (_Channels+8)
 22221  0011E2  24F3               	addwf	prodl,w,c
 22222  0011E4  6ED9               	movwf	fsr2l,c
 22223  0011E6  0E04               	movlw	high (_Channels+8)
 22224  0011E8  20F4               	addwfc	prodh,w,c
 22225  0011EA  6EDA               	movwf	fsr2h,c
 22226  0011EC  6ADE               	clrf	postinc2,c
 22227  0011EE  6ADE               	clrf	postinc2,c
 22228  0011F0  6ADE               	clrf	postinc2,c
 22229  0011F2  6ADD               	clrf	postdec2,c
 22230  0011F4                     l1031:
 22231                           
 22232                           ;lorawan_eu.c: 424: }
 22233                           ;lorawan_eu.c: 425: }
 22234                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22235  0011F4  0100               	movlb	0	; () banked
 22236  0011F6  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22237  0011F8  0D0E               	mullw	14
 22238  0011FA  0E08               	movlw	low (_Channels+8)
 22239  0011FC  24F3               	addwf	prodl,w,c
 22240  0011FE  6ED9               	movwf	fsr2l,c
 22241  001200  0E04               	movlw	high (_Channels+8)
 22242  001202  20F4               	addwfc	prodh,w,c
 22243  001204  6EDA               	movwf	fsr2h,c
 22244  001206  50DE               	movf	postinc2,w,c
 22245  001208  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22246  00120A  50DE               	movf	postinc2,w,c
 22247  00120C  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22248  00120E  50DE               	movf	postinc2,w,c
 22249  001210  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22250  001212  50DE               	movf	postinc2,w,c
 22251  001214  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22252  001216  E31F               	bnc	l14665
 22253                           
 22254                           ; BSR set to: 0
 22255  001218  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22256  00121A  0D0E               	mullw	14
 22257  00121C  0E08               	movlw	low (_Channels+8)
 22258  00121E  24F3               	addwf	prodl,w,c
 22259  001220  6ED9               	movwf	fsr2l,c
 22260  001222  0E04               	movlw	high (_Channels+8)
 22261  001224  20F4               	addwfc	prodh,w,c
 22262  001226  6EDA               	movwf	fsr2h,c
 22263  001228  50DE               	movf	postinc2,w,c
 22264  00122A  10DE               	iorwf	postinc2,w,c
 22265  00122C  10DE               	iorwf	postinc2,w,c
 22266  00122E  10DE               	iorwf	postinc2,w,c
 22267  001230  E012               	bz	l14665
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;lorawan_eu.c: 427: {
 22271                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22272  001232  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22273  001234  0D0E               	mullw	14
 22274  001236  0E08               	movlw	low (_Channels+8)
 22275  001238  24F3               	addwf	prodl,w,c
 22276  00123A  6ED9               	movwf	fsr2l,c
 22277  00123C  0E04               	movlw	high (_Channels+8)
 22278  00123E  20F4               	addwfc	prodh,w,c
 22279  001240  6EDA               	movwf	fsr2h,c
 22280  001242  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 22281  001246  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 22282  00124A  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 22283  00124E  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;lorawan_eu.c: 429: found = 1;
 22287  001252  0E01               	movlw	1
 22288  001254  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 22289  001256                     l14665:
 22290                           
 22291                           ; BSR set to: 0
 22292  001256  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22293                           
 22294                           ; BSR set to: 0
 22295  001258  0E0F               	movlw	15
 22296  00125A  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22297  00125C  D763               	goto	l14647
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;lorawan_eu.c: 430: }
 22301                           ;lorawan_eu.c: 431: }
 22302                           ;lorawan_eu.c: 432: }
 22303                           ;lorawan_eu.c: 433: if (found == 1)
 22304  00125E  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22305  001260  E15F               	bnz	l14683
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;lorawan_eu.c: 434: {
 22309                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22310  001262  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22311  001266  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22312  00126A  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22313  00126E  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22314                           
 22315                           ; BSR set to: 0
 22316                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22317  001272  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22318  001274  E106               	bnz	u16980
 22319  001276  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22320  001278  0EFF               	movlw	255
 22321  00127A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22322  00127C  0E0F               	movlw	15
 22323  00127E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22324  001280  E318               	bnc	l14677
 22325  001282                     u16980:
 22326                           
 22327                           ; BSR set to: 0
 22328  001282  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22329  001286  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22330  00128A  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22331  00128E  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22332  001292  0E7D               	movlw	125
 22333  001294  6F68               	movwf	___lldiv@divisor& (0+255),b
 22334  001296  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22335  001298  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22336  00129A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22337  00129C  EC0D  F030         	call	___lldiv	;wreg free
 22338  0012A0  0E0C               	movlw	12
 22339  0012A2                     u16995:
 22340  0012A2  90D8               	bcf	status,0,c
 22341  0012A4  3764               	rlcf	?___lldiv& (0+255),f,b
 22342  0012A6  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22343  0012A8  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22344  0012AA  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22345  0012AC  2EE8               	decfsz	wreg,f,c
 22346  0012AE  D7F9               	goto	u16995
 22347  0012B0  D01F               	goto	L13
 22348  0012B2                     l14677:
 22349                           
 22350                           ; BSR set to: 0
 22351  0012B2  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22352  0012B6  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22353  0012BA  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22354  0012BE  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22355  0012C2  0E0C               	movlw	12
 22356  0012C4                     u17005:
 22357  0012C4  90D8               	bcf	status,0,c
 22358  0012C6  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22359  0012C8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22360  0012CA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22361  0012CC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22362  0012CE  2EE8               	decfsz	wreg,f,c
 22363  0012D0  D7F9               	goto	u17005
 22364  0012D2  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22365  0012D6  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22366  0012DA  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22367  0012DE  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22368  0012E2  0E7D               	movlw	125
 22369  0012E4  6F68               	movwf	___lldiv@divisor& (0+255),b
 22370  0012E6  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22371  0012E8  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22372  0012EA  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22373  0012EC  EC0D  F030         	call	___lldiv	;wreg free
 22374  0012F0                     L13:
 22375  0012F0  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2093
 22376  0012F4  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2093+1
 22377  0012F8  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2093+2
 22378  0012FC  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2093+3
 22379                           
 22380                           ; BSR set to: 0
 22381  001300  C0C0  F071         	movff	_LORAWAN_TxDone$2093,SwTimerSetTimeout@timeout
 22382  001304  C0C1  F072         	movff	_LORAWAN_TxDone$2093+1,SwTimerSetTimeout@timeout+1
 22383  001308  C0C2  F073         	movff	_LORAWAN_TxDone$2093+2,SwTimerSetTimeout@timeout+2
 22384  00130C  C0C3  F074         	movff	_LORAWAN_TxDone$2093+3,SwTimerSetTimeout@timeout+3
 22385  001310  0102               	movlb	2	; () banked
 22386  001312  51E9               	movf	(_loRa+233)& (0+255),w,b
 22387  001314  EC62  F036         	call	_SwTimerSetTimeout
 22388                           
 22389                           ; BSR set to: 0
 22390                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22391  001318  0102               	movlb	2	; () banked
 22392  00131A  51E9               	movf	(_loRa+233)& (0+255),w,b
 22393  00131C  EC4B  F02E         	call	_SwTimerStart
 22394  001320                     l14683:
 22395                           
 22396                           ; BSR set to: 0
 22397                           ;lorawan_eu.c: 438: }
 22398                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22399  001320  0E02               	movlw	2
 22400  001322  0102               	movlb	2	; () banked
 22401  001324  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22402  001326  A4D8               	btfss	status,2,c
 22403  001328  0012               	return	
 22404                           
 22405                           ; BSR set to: 2
 22406                           ;lorawan_eu.c: 440: {
 22407                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22408  00132A  5102               	movf	(_loRa+2)& (0+255),w,b
 22409  00132C  0BF0               	andlw	-16
 22410  00132E  0908               	iorlw	8
 22411  001330  6F02               	movwf	(_loRa+2)& (0+255),b
 22412                           
 22413                           ; BSR set to: 2
 22414                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22415  001332  EF86  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22416  001336                     l14689:
 22417                           
 22418                           ; BSR set to: 2
 22419                           ;lorawan_eu.c: 445: else
 22420                           ;lorawan_eu.c: 446: {
 22421                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22422  001336  EC3D  F03C         	call	_RADIO_GetStatus	;wreg free
 22423  00133A  0100               	movlb	0	; () banked
 22424  00133C  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 22425  00133E  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22426  001340  D00E               	goto	l14693
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;lorawan_eu.c: 448: {
 22430                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22431  001342  6B64               	clrf	RxDataDone@pData& (0+255),b
 22432  001344  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22433  001346  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22434  001348  0E02               	movlw	2
 22435  00134A  6F67               	movwf	RxDataDone@status& (0+255),b
 22436  00134C  0005               	push	
 22437  00134E  6EFA               	movwf	pclath,c
 22438  001350  51E8               	movf	_rxPayload& (0+255),w,b
 22439  001352  6EFD               	movwf	tosl,c
 22440  001354  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22441  001356  6EFE               	movwf	tosh,c
 22442  001358  6AFF               	clrf	tosu,c
 22443  00135A  50FA               	movf	pclath,w,c
 22444  00135C  0012               	return		;indir
 22445  00135E                     l14693:
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;lorawan_eu.c: 452: else
 22449                           ;lorawan_eu.c: 453: {
 22450                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22451  00135E  51E8               	movf	_rxPayload& (0+255),w,b
 22452  001360  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22453  001362  B4D8               	btfsc	status,2,c
 22454  001364  0012               	return	
 22455                           
 22456                           ; BSR set to: 0
 22457                           ;lorawan_eu.c: 456: {
 22458                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22459  001366  6B64               	clrf	RxDataDone@pData& (0+255),b
 22460  001368  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22461  00136A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22462  00136C  0E03               	movlw	3
 22463  00136E  6F67               	movwf	RxDataDone@status& (0+255),b
 22464  001370  0005               	push	
 22465  001372  6EFA               	movwf	pclath,c
 22466  001374  51E8               	movf	_rxPayload& (0+255),w,b
 22467  001376  6EFD               	movwf	tosl,c
 22468  001378  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22469  00137A  6EFE               	movwf	tosh,c
 22470  00137C  6AFF               	clrf	tosu,c
 22471  00137E  50FA               	movf	pclath,w,c
 22472  001380  0012               	return		;indir
 22473  001382                     __end_of_LORAWAN_TxDone:
 22474                           	opt stack 0
 22475                           tosu	equ	0xFFF
 22476                           tosh	equ	0xFFE
 22477                           tosl	equ	0xFFD
 22478                           pclath	equ	0xFFA
 22479                           tblptru	equ	0xFF8
 22480                           tblptrh	equ	0xFF7
 22481                           tblptrl	equ	0xFF6
 22482                           tablat	equ	0xFF5
 22483                           prodh	equ	0xFF4
 22484                           prodl	equ	0xFF3
 22485                           intcon	equ	0xFF2
 22486                           intcon2	equ	0xFF1
 22487                           intcon3	equ	0xFF0
 22488                           indf0	equ	0xFEF
 22489                           postinc0	equ	0xFEE
 22490                           fsr0h	equ	0xFEA
 22491                           fsr0l	equ	0xFE9
 22492                           wreg	equ	0xFE8
 22493                           postinc1	equ	0xFE6
 22494                           postdec1	equ	0xFE5
 22495                           plusw1	equ	0xFE3
 22496                           fsr1h	equ	0xFE2
 22497                           fsr1l	equ	0xFE1
 22498                           indf2	equ	0xFDF
 22499                           postinc2	equ	0xFDE
 22500                           postdec2	equ	0xFDD
 22501                           plusw2	equ	0xFDB
 22502                           fsr2h	equ	0xFDA
 22503                           fsr2l	equ	0xFD9
 22504                           status	equ	0xFD8
 22505                           
 22506 ;; *************** function _SwTimerReadValue *****************
 22507 ;; Defined at:
 22508 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22509 ;; Parameters:    Size  Location     Type
 22510 ;;  timerId         1    wreg     unsigned char 
 22511 ;; Auto vars:     Size  Location     Type
 22512 ;;  timerId         1   53[BANK0 ] unsigned char 
 22513 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 22514 ;; Return value:  Size  Location     Type
 22515 ;;                  4   45[BANK0 ] unsigned long 
 22516 ;; Registers used:
 22517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22518 ;; Tracked objects:
 22519 ;;		On entry : C/1
 22520 ;;		On exit  : F/0
 22521 ;;		Unchanged: 0/0
 22522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22524 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22526 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22527 ;;Total ram usage:        9 bytes
 22528 ;; Hardware stack levels used:    1
 22529 ;; Hardware stack levels required when called:   10
 22530 ;; This function calls:
 22531 ;;		_SwTimersInterrupt
 22532 ;; This function is called by:
 22533 ;;		_RADIO_TxDone
 22534 ;;		_RADIO_FSKPacketSent
 22535 ;;		_LORAWAN_TxDone
 22536 ;; This function uses a non-reentrant model
 22537 ;;
 22538                           
 22539                           	psect	text113
 22540  006D06                     __ptext113:
 22541                           	opt stack 0
 22542  006D06                     _SwTimerReadValue:
 22543                           	opt stack 16
 22544                           
 22545                           ;incstack = 0
 22546                           ;SwTimerReadValue@timerId stored from wreg
 22547  006D06  0100               	movlb	0	; () banked
 22548  006D08  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 22549                           
 22550                           ;sw_timer.c: 195: uint32_t ticksCount;
 22551                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22552  006D0A  9EF2               	bcf	intcon,7,c	;volatile
 22553                           
 22554                           ;sw_timer.c: 200: SwTimersInterrupt();
 22555  006D0C  ECA7  F025         	call	_SwTimersInterrupt	;wreg free
 22556                           
 22557                           ; BSR set to: 0
 22558                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22559  006D10  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22560  006D12  0D08               	mullw	8
 22561  006D14  0E00               	movlw	low _swTimers
 22562  006D16  24F3               	addwf	prodl,w,c
 22563  006D18  6ED9               	movwf	fsr2l,c
 22564  006D1A  0E03               	movlw	high _swTimers
 22565  006D1C  20F4               	addwfc	prodh,w,c
 22566  006D1E  6EDA               	movwf	fsr2h,c
 22567  006D20  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 22568  006D24  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22569  006D28  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22570  006D2C  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22571                           
 22572                           ; BSR set to: 0
 22573                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22574  006D30  8EF2               	bsf	intcon,7,c	;volatile
 22575                           
 22576                           ; BSR set to: 0
 22577                           ;sw_timer.c: 204: return ticksCount;
 22578  006D32  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22579  006D36  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22580  006D3A  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22581  006D3E  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22582                           
 22583                           ; BSR set to: 0
 22584  006D42  0012               	return		;funcret
 22585  006D44                     __end_of_SwTimerReadValue:
 22586                           	opt stack 0
 22587                           tosu	equ	0xFFF
 22588                           tosh	equ	0xFFE
 22589                           tosl	equ	0xFFD
 22590                           pclath	equ	0xFFA
 22591                           tblptru	equ	0xFF8
 22592                           tblptrh	equ	0xFF7
 22593                           tblptrl	equ	0xFF6
 22594                           tablat	equ	0xFF5
 22595                           prodh	equ	0xFF4
 22596                           prodl	equ	0xFF3
 22597                           intcon	equ	0xFF2
 22598                           intcon2	equ	0xFF1
 22599                           intcon3	equ	0xFF0
 22600                           indf0	equ	0xFEF
 22601                           postinc0	equ	0xFEE
 22602                           fsr0h	equ	0xFEA
 22603                           fsr0l	equ	0xFE9
 22604                           wreg	equ	0xFE8
 22605                           postinc1	equ	0xFE6
 22606                           postdec1	equ	0xFE5
 22607                           plusw1	equ	0xFE3
 22608                           fsr1h	equ	0xFE2
 22609                           fsr1l	equ	0xFE1
 22610                           indf2	equ	0xFDF
 22611                           postinc2	equ	0xFDE
 22612                           postdec2	equ	0xFDD
 22613                           plusw2	equ	0xFDB
 22614                           fsr2h	equ	0xFDA
 22615                           fsr2l	equ	0xFD9
 22616                           status	equ	0xFD8
 22617                           
 22618 ;; *************** function _SwTimerIsRunning *****************
 22619 ;; Defined at:
 22620 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22621 ;; Parameters:    Size  Location     Type
 22622 ;;  timerId         1    wreg     unsigned char 
 22623 ;; Auto vars:     Size  Location     Type
 22624 ;;  timerId         1    4[BANK0 ] unsigned char 
 22625 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22626 ;; Return value:  Size  Location     Type
 22627 ;;                  1    wreg      unsigned char 
 22628 ;; Registers used:
 22629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22630 ;; Tracked objects:
 22631 ;;		On entry : F/2
 22632 ;;		On exit  : F/0
 22633 ;;		Unchanged: 0/0
 22634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22636 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22638 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22639 ;;Total ram usage:        2 bytes
 22640 ;; Hardware stack levels used:    1
 22641 ;; Hardware stack levels required when called:    7
 22642 ;; This function calls:
 22643 ;;		Nothing
 22644 ;; This function is called by:
 22645 ;;		_LORAWAN_TxDone
 22646 ;; This function uses a non-reentrant model
 22647 ;;
 22648                           
 22649                           	psect	text114
 22650  0073DE                     __ptext114:
 22651                           	opt stack 0
 22652  0073DE                     _SwTimerIsRunning:
 22653                           	opt stack 19
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;incstack = 0
 22657                           ;SwTimerIsRunning@timerId stored from wreg
 22658  0073DE  0100               	movlb	0	; () banked
 22659  0073E0  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22660                           
 22661                           ;sw_timer.c: 209: uint8_t isRunning;
 22662                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22663  0073E2  9EF2               	bcf	intcon,7,c	;volatile
 22664                           
 22665                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22666  0073E4  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22667  0073E6  0D08               	mullw	8
 22668  0073E8  0E04               	movlw	low (_swTimers+4)
 22669  0073EA  24F3               	addwf	prodl,w,c
 22670  0073EC  6ED9               	movwf	fsr2l,c
 22671  0073EE  0E03               	movlw	high (_swTimers+4)
 22672  0073F0  20F4               	addwfc	prodh,w,c
 22673  0073F2  6EDA               	movwf	fsr2h,c
 22674  0073F4  50DF               	movf	indf2,w,c
 22675  0073F6  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22676                           
 22677                           ; BSR set to: 0
 22678                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22679  0073F8  8EF2               	bsf	intcon,7,c	;volatile
 22680                           
 22681                           ; BSR set to: 0
 22682                           ;sw_timer.c: 215: return isRunning;
 22683  0073FA  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22684                           
 22685                           ; BSR set to: 0
 22686  0073FC  0012               	return		;funcret
 22687  0073FE                     __end_of_SwTimerIsRunning:
 22688                           	opt stack 0
 22689                           tosu	equ	0xFFF
 22690                           tosh	equ	0xFFE
 22691                           tosl	equ	0xFFD
 22692                           pclath	equ	0xFFA
 22693                           tblptru	equ	0xFF8
 22694                           tblptrh	equ	0xFF7
 22695                           tblptrl	equ	0xFF6
 22696                           tablat	equ	0xFF5
 22697                           prodh	equ	0xFF4
 22698                           prodl	equ	0xFF3
 22699                           intcon	equ	0xFF2
 22700                           intcon2	equ	0xFF1
 22701                           intcon3	equ	0xFF0
 22702                           indf0	equ	0xFEF
 22703                           postinc0	equ	0xFEE
 22704                           fsr0h	equ	0xFEA
 22705                           fsr0l	equ	0xFE9
 22706                           wreg	equ	0xFE8
 22707                           postinc1	equ	0xFE6
 22708                           postdec1	equ	0xFE5
 22709                           plusw1	equ	0xFE3
 22710                           fsr1h	equ	0xFE2
 22711                           fsr1l	equ	0xFE1
 22712                           indf2	equ	0xFDF
 22713                           postinc2	equ	0xFDE
 22714                           postdec2	equ	0xFDD
 22715                           plusw2	equ	0xFDB
 22716                           fsr2h	equ	0xFDA
 22717                           fsr2l	equ	0xFD9
 22718                           status	equ	0xFD8
 22719                           
 22720 ;; *************** function _RADIO_GetStatus *****************
 22721 ;; Defined at:
 22722 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22723 ;; Parameters:    Size  Location     Type
 22724 ;;		None
 22725 ;; Auto vars:     Size  Location     Type
 22726 ;;		None
 22727 ;; Return value:  Size  Location     Type
 22728 ;;                  1    wreg      unsigned char 
 22729 ;; Registers used:
 22730 ;;		wreg, status,2
 22731 ;; Tracked objects:
 22732 ;;		On entry : D/2
 22733 ;;		On exit  : F/1
 22734 ;;		Unchanged: 0/0
 22735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22740 ;;Total ram usage:        0 bytes
 22741 ;; Hardware stack levels used:    1
 22742 ;; Hardware stack levels required when called:    7
 22743 ;; This function calls:
 22744 ;;		Nothing
 22745 ;; This function is called by:
 22746 ;;		_LORAWAN_TxDone
 22747 ;;		_LORAWAN_ReceiveWindow2Callback
 22748 ;;		_LORAWAN_RxDone
 22749 ;; This function uses a non-reentrant model
 22750 ;;
 22751                           
 22752                           	psect	text115
 22753  00787A                     __ptext115:
 22754                           	opt stack 0
 22755  00787A                     _RADIO_GetStatus:
 22756                           	opt stack 19
 22757                           
 22758                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22759                           
 22760                           ; BSR set to: 0
 22761                           ;incstack = 0
 22762  00787A  0101               	movlb	1	; () banked
 22763  00787C  51A1               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22764                           
 22765                           ; BSR set to: 1
 22766  00787E  0012               	return		;funcret
 22767  007880                     __end_of_RADIO_GetStatus:
 22768                           	opt stack 0
 22769                           tosu	equ	0xFFF
 22770                           tosh	equ	0xFFE
 22771                           tosl	equ	0xFFD
 22772                           pclath	equ	0xFFA
 22773                           tblptru	equ	0xFF8
 22774                           tblptrh	equ	0xFF7
 22775                           tblptrl	equ	0xFF6
 22776                           tablat	equ	0xFF5
 22777                           prodh	equ	0xFF4
 22778                           prodl	equ	0xFF3
 22779                           intcon	equ	0xFF2
 22780                           intcon2	equ	0xFF1
 22781                           intcon3	equ	0xFF0
 22782                           indf0	equ	0xFEF
 22783                           postinc0	equ	0xFEE
 22784                           fsr0h	equ	0xFEA
 22785                           fsr0l	equ	0xFE9
 22786                           wreg	equ	0xFE8
 22787                           postinc1	equ	0xFE6
 22788                           postdec1	equ	0xFE5
 22789                           plusw1	equ	0xFE3
 22790                           fsr1h	equ	0xFE2
 22791                           fsr1l	equ	0xFE1
 22792                           indf2	equ	0xFDF
 22793                           postinc2	equ	0xFDE
 22794                           postdec2	equ	0xFDD
 22795                           plusw2	equ	0xFDB
 22796                           fsr2h	equ	0xFDA
 22797                           fsr2l	equ	0xFD9
 22798                           status	equ	0xFD8
 22799                           
 22800 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22801 ;; Defined at:
 22802 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22803 ;; Parameters:    Size  Location     Type
 22804 ;;		None
 22805 ;; Auto vars:     Size  Location     Type
 22806 ;;		None
 22807 ;; Return value:  Size  Location     Type
 22808 ;;                  1    wreg      void 
 22809 ;; Registers used:
 22810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22811 ;; Tracked objects:
 22812 ;;		On entry : F/2
 22813 ;;		On exit  : F/0
 22814 ;;		Unchanged: 0/0
 22815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22820 ;;Total ram usage:        0 bytes
 22821 ;; Hardware stack levels used:    1
 22822 ;; Hardware stack levels required when called:   13
 22823 ;; This function calls:
 22824 ;;		_ConfigureRadioRx
 22825 ;;		_RADIO_ReceiveStart
 22826 ;;		_RADIO_ReceiveStop
 22827 ;;		_RADIO_ReleaseData
 22828 ;;		_ResetParametersForConfirmedTransmission
 22829 ;;		_ResetParametersForUnconfirmedTransmission
 22830 ;;		_RxDataDone
 22831 ;; This function is called by:
 22832 ;;		_LORAWAN_TxDone
 22833 ;;		_LORAWAN_ReceiveWindow2Callback
 22834 ;;		_LORAWAN_RxDone
 22835 ;;		_SetReceptionNotOkState
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839                           	psect	text116
 22840  00650C                     __ptext116:
 22841                           	opt stack 0
 22842  00650C                     _LORAWAN_EnterContinuousReceive:
 22843                           	opt stack 13
 22844                           
 22845                           ; BSR set to: 2
 22846                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22847                           
 22848                           ; BSR set to: 1
 22849                           ;incstack = 0
 22850  00650C  EC1D  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22851                           
 22852                           ; BSR set to: 1
 22853                           ;lorawan.c: 918: RADIO_ReleaseData();
 22854  006510  EC40  F03C         	call	_RADIO_ReleaseData	;wreg free
 22855                           
 22856                           ; BSR set to: 1
 22857                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22858  006514  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22859  006518  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22860  00651C  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22861  006520  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22862  006524  0102               	movlb	2	; () banked
 22863  006526  511C               	movf	(_loRa+28)& (0+255),w,b
 22864  006528  EC42  F039         	call	_ConfigureRadioRx
 22865                           
 22866                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22867  00652C  0100               	movlb	0	; () banked
 22868  00652E  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22869  006530  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22870  006532  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
 22871  006536  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22872  006538  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22873  00653A  B4D8               	btfsc	status,2,c
 22874  00653C  0012               	return	
 22875                           
 22876                           ; BSR set to: 0
 22877                           ;lorawan.c: 923: {
 22878                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22879  00653E  EC89  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22880                           
 22881                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22882  006542  EC82  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22883                           
 22884                           ; BSR set to: 2
 22885                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22886  006546  0EF0               	movlw	-16
 22887  006548  1702               	andwf	(_loRa+2)& (0+255),f,b
 22888                           
 22889                           ; BSR set to: 2
 22890                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22891  00654A  0100               	movlb	0	; () banked
 22892  00654C  51E8               	movf	_rxPayload& (0+255),w,b
 22893  00654E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22894  006550  B4D8               	btfsc	status,2,c
 22895  006552  0012               	return	
 22896                           
 22897                           ; BSR set to: 0
 22898                           ;lorawan.c: 928: {
 22899                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22900  006554  6B64               	clrf	RxDataDone@pData& (0+255),b
 22901  006556  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22902  006558  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22903  00655A  6B67               	clrf	RxDataDone@status& (0+255),b
 22904  00655C  0005               	push	
 22905  00655E  6AFA               	clrf	pclath,c
 22906  006560  51E8               	movf	_rxPayload& (0+255),w,b
 22907  006562  6EFD               	movwf	tosl,c
 22908  006564  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22909  006566  6EFE               	movwf	tosh,c
 22910  006568  6AFF               	clrf	tosu,c
 22911  00656A  50FA               	movf	pclath,w,c
 22912  00656C  0012               	return		;indir
 22913  00656E                     __end_of_LORAWAN_EnterContinuousReceive:
 22914                           	opt stack 0
 22915                           tosu	equ	0xFFF
 22916                           tosh	equ	0xFFE
 22917                           tosl	equ	0xFFD
 22918                           pclath	equ	0xFFA
 22919                           tblptru	equ	0xFF8
 22920                           tblptrh	equ	0xFF7
 22921                           tblptrl	equ	0xFF6
 22922                           tablat	equ	0xFF5
 22923                           prodh	equ	0xFF4
 22924                           prodl	equ	0xFF3
 22925                           intcon	equ	0xFF2
 22926                           intcon2	equ	0xFF1
 22927                           intcon3	equ	0xFF0
 22928                           indf0	equ	0xFEF
 22929                           postinc0	equ	0xFEE
 22930                           fsr0h	equ	0xFEA
 22931                           fsr0l	equ	0xFE9
 22932                           wreg	equ	0xFE8
 22933                           postinc1	equ	0xFE6
 22934                           postdec1	equ	0xFE5
 22935                           plusw1	equ	0xFE3
 22936                           fsr1h	equ	0xFE2
 22937                           fsr1l	equ	0xFE1
 22938                           indf2	equ	0xFDF
 22939                           postinc2	equ	0xFDE
 22940                           postdec2	equ	0xFDD
 22941                           plusw2	equ	0xFDB
 22942                           fsr2h	equ	0xFDA
 22943                           fsr2l	equ	0xFD9
 22944                           status	equ	0xFD8
 22945                           
 22946 ;; *************** function _RxDataDone *****************
 22947 ;; Defined at:
 22948 ;;		line 96 in file "main.c"
 22949 ;; Parameters:    Size  Location     Type
 22950 ;;  pData           2    4[BANK0 ] PTR unsigned char 
 22951 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22952 ;;  dataLength      1    6[BANK0 ] unsigned char 
 22953 ;;  status          1    7[BANK0 ] enum E8000
 22954 ;; Auto vars:     Size  Location     Type
 22955 ;;		None
 22956 ;; Return value:  Size  Location     Type
 22957 ;;                  1    wreg      void 
 22958 ;; Registers used:
 22959 ;;		None
 22960 ;; Tracked objects:
 22961 ;;		On entry : F/0
 22962 ;;		On exit  : F/0
 22963 ;;		Unchanged: F/0
 22964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22968 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22969 ;;Total ram usage:        4 bytes
 22970 ;; Hardware stack levels used:    1
 22971 ;; Hardware stack levels required when called:    7
 22972 ;; This function calls:
 22973 ;;		Nothing
 22974 ;; This function is called by:
 22975 ;;		_main
 22976 ;;		_LORAWAN_EnterContinuousReceive
 22977 ;;		_LORAWAN_ReceiveWindow2Callback
 22978 ;;		_SetReceptionNotOkState
 22979 ;;		_LORAWAN_RxDone
 22980 ;;		_LORAWAN_RxTimeout
 22981 ;;		_LORAWAN_TxDone
 22982 ;;		_AckRetransmissionCallback
 22983 ;;		_UnconfirmedTransmissionCallback
 22984 ;; This function uses a non-reentrant model
 22985 ;;
 22986                           
 22987                           	psect	text117
 22988  0078D4                     __ptext117:
 22989                           	opt stack 0
 22990  0078D4                     _RxDataDone:
 22991                           	opt stack 20
 22992                           
 22993                           ; BSR set to: 0
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;incstack = 0
 22997  0078D4  0012               	return		;funcret
 22998  0078D6                     __end_of_RxDataDone:
 22999                           	opt stack 0
 23000                           tosu	equ	0xFFF
 23001                           tosh	equ	0xFFE
 23002                           tosl	equ	0xFFD
 23003                           pclath	equ	0xFFA
 23004                           tblptru	equ	0xFF8
 23005                           tblptrh	equ	0xFF7
 23006                           tblptrl	equ	0xFF6
 23007                           tablat	equ	0xFF5
 23008                           prodh	equ	0xFF4
 23009                           prodl	equ	0xFF3
 23010                           intcon	equ	0xFF2
 23011                           intcon2	equ	0xFF1
 23012                           intcon3	equ	0xFF0
 23013                           indf0	equ	0xFEF
 23014                           postinc0	equ	0xFEE
 23015                           fsr0h	equ	0xFEA
 23016                           fsr0l	equ	0xFE9
 23017                           wreg	equ	0xFE8
 23018                           postinc1	equ	0xFE6
 23019                           postdec1	equ	0xFE5
 23020                           plusw1	equ	0xFE3
 23021                           fsr1h	equ	0xFE2
 23022                           fsr1l	equ	0xFE1
 23023                           indf2	equ	0xFDF
 23024                           postinc2	equ	0xFDE
 23025                           postdec2	equ	0xFDD
 23026                           plusw2	equ	0xFDB
 23027                           fsr2h	equ	0xFDA
 23028                           fsr2l	equ	0xFD9
 23029                           status	equ	0xFD8
 23030                           
 23031 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23032 ;; Defined at:
 23033 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23034 ;; Parameters:    Size  Location     Type
 23035 ;;		None
 23036 ;; Auto vars:     Size  Location     Type
 23037 ;;		None
 23038 ;; Return value:  Size  Location     Type
 23039 ;;                  1    wreg      void 
 23040 ;; Registers used:
 23041 ;;		wreg, status,2
 23042 ;; Tracked objects:
 23043 ;;		On entry : D/0
 23044 ;;		On exit  : F/2
 23045 ;;		Unchanged: 0/0
 23046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23051 ;;Total ram usage:        0 bytes
 23052 ;; Hardware stack levels used:    1
 23053 ;; Hardware stack levels required when called:    7
 23054 ;; This function calls:
 23055 ;;		Nothing
 23056 ;; This function is called by:
 23057 ;;		_LORAWAN_RxTimeout
 23058 ;;		_LORAWAN_ReceiveWindow2Callback
 23059 ;;		_LORAWAN_EnterContinuousReceive
 23060 ;;		_UnconfirmedTransmissionCallback
 23061 ;; This function uses a non-reentrant model
 23062 ;;
 23063                           
 23064                           	psect	text118
 23065  007704                     __ptext118:
 23066                           	opt stack 0
 23067  007704                     _ResetParametersForUnconfirmedTransmission:
 23068                           	opt stack 20
 23069                           
 23070                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;incstack = 0
 23074  007704  0EF0               	movlw	-16
 23075  007706  0102               	movlb	2	; () banked
 23076  007708  1702               	andwf	(_loRa+2)& (0+255),f,b
 23077                           
 23078                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23079  00770A  0E01               	movlw	1
 23080  00770C  6FD8               	movwf	(_loRa+216)& (0+255),b
 23081                           
 23082                           ; BSR set to: 2
 23083                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23084  00770E  6BA7               	clrf	(_loRa+167)& (0+255),b
 23085                           
 23086                           ; BSR set to: 2
 23087  007710  0012               	return		;funcret
 23088  007712                     __end_of_ResetParametersForUnconfirmedTransmission:
 23089                           	opt stack 0
 23090                           tosu	equ	0xFFF
 23091                           tosh	equ	0xFFE
 23092                           tosl	equ	0xFFD
 23093                           pclath	equ	0xFFA
 23094                           tblptru	equ	0xFF8
 23095                           tblptrh	equ	0xFF7
 23096                           tblptrl	equ	0xFF6
 23097                           tablat	equ	0xFF5
 23098                           prodh	equ	0xFF4
 23099                           prodl	equ	0xFF3
 23100                           intcon	equ	0xFF2
 23101                           intcon2	equ	0xFF1
 23102                           intcon3	equ	0xFF0
 23103                           indf0	equ	0xFEF
 23104                           postinc0	equ	0xFEE
 23105                           fsr0h	equ	0xFEA
 23106                           fsr0l	equ	0xFE9
 23107                           wreg	equ	0xFE8
 23108                           postinc1	equ	0xFE6
 23109                           postdec1	equ	0xFE5
 23110                           plusw1	equ	0xFE3
 23111                           fsr1h	equ	0xFE2
 23112                           fsr1l	equ	0xFE1
 23113                           indf2	equ	0xFDF
 23114                           postinc2	equ	0xFDE
 23115                           postdec2	equ	0xFDD
 23116                           plusw2	equ	0xFDB
 23117                           fsr2h	equ	0xFDA
 23118                           fsr2l	equ	0xFD9
 23119                           status	equ	0xFD8
 23120                           
 23121 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23122 ;; Defined at:
 23123 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23124 ;; Parameters:    Size  Location     Type
 23125 ;;		None
 23126 ;; Auto vars:     Size  Location     Type
 23127 ;;		None
 23128 ;; Return value:  Size  Location     Type
 23129 ;;                  1    wreg      void 
 23130 ;; Registers used:
 23131 ;;		wreg, status,2
 23132 ;; Tracked objects:
 23133 ;;		On entry : D/2
 23134 ;;		On exit  : F/2
 23135 ;;		Unchanged: 0/0
 23136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23141 ;;Total ram usage:        0 bytes
 23142 ;; Hardware stack levels used:    1
 23143 ;; Hardware stack levels required when called:    7
 23144 ;; This function calls:
 23145 ;;		Nothing
 23146 ;; This function is called by:
 23147 ;;		_LORAWAN_RxTimeout
 23148 ;;		_LORAWAN_ReceiveWindow2Callback
 23149 ;;		_LORAWAN_EnterContinuousReceive
 23150 ;;		_AckRetransmissionCallback
 23151 ;; This function uses a non-reentrant model
 23152 ;;
 23153                           
 23154                           	psect	text119
 23155  007712                     __ptext119:
 23156                           	opt stack 0
 23157  007712                     _ResetParametersForConfirmedTransmission:
 23158                           	opt stack 18
 23159                           
 23160                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23161                           
 23162                           ; BSR set to: 2
 23163                           ;incstack = 0
 23164  007712  0EF0               	movlw	-16
 23165  007714  0102               	movlb	2	; () banked
 23166  007716  1702               	andwf	(_loRa+2)& (0+255),f,b
 23167                           
 23168                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23169  007718  0E01               	movlw	1
 23170  00771A  6FD9               	movwf	(_loRa+217)& (0+255),b
 23171                           
 23172                           ; BSR set to: 2
 23173                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23174  00771C  9100               	bcf	_loRa& (0+255),0,b
 23175                           
 23176                           ; BSR set to: 2
 23177  00771E  0C01               	retlw	1	;funcret
 23178  007720                     __end_of_ResetParametersForConfirmedTransmission:
 23179                           	opt stack 0
 23180                           tosu	equ	0xFFF
 23181                           tosh	equ	0xFFE
 23182                           tosl	equ	0xFFD
 23183                           pclath	equ	0xFFA
 23184                           tblptru	equ	0xFF8
 23185                           tblptrh	equ	0xFF7
 23186                           tblptrl	equ	0xFF6
 23187                           tablat	equ	0xFF5
 23188                           prodh	equ	0xFF4
 23189                           prodl	equ	0xFF3
 23190                           intcon	equ	0xFF2
 23191                           intcon2	equ	0xFF1
 23192                           intcon3	equ	0xFF0
 23193                           indf0	equ	0xFEF
 23194                           postinc0	equ	0xFEE
 23195                           fsr0h	equ	0xFEA
 23196                           fsr0l	equ	0xFE9
 23197                           wreg	equ	0xFE8
 23198                           postinc1	equ	0xFE6
 23199                           postdec1	equ	0xFE5
 23200                           plusw1	equ	0xFE3
 23201                           fsr1h	equ	0xFE2
 23202                           fsr1l	equ	0xFE1
 23203                           indf2	equ	0xFDF
 23204                           postinc2	equ	0xFDE
 23205                           postdec2	equ	0xFDD
 23206                           plusw2	equ	0xFDB
 23207                           fsr2h	equ	0xFDA
 23208                           fsr2l	equ	0xFD9
 23209                           status	equ	0xFD8
 23210                           
 23211 ;; *************** function _RADIO_ReleaseData *****************
 23212 ;; Defined at:
 23213 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;		None
 23216 ;; Auto vars:     Size  Location     Type
 23217 ;;		None
 23218 ;; Return value:  Size  Location     Type
 23219 ;;                  1    wreg      void 
 23220 ;; Registers used:
 23221 ;;		status,2, status,0
 23222 ;; Tracked objects:
 23223 ;;		On entry : C/2
 23224 ;;		On exit  : F/1
 23225 ;;		Unchanged: 0/0
 23226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23231 ;;Total ram usage:        0 bytes
 23232 ;; Hardware stack levels used:    1
 23233 ;; Hardware stack levels required when called:    7
 23234 ;; This function calls:
 23235 ;;		Nothing
 23236 ;; This function is called by:
 23237 ;;		_LORAWAN_ReceiveWindow1Callback
 23238 ;;		_LORAWAN_ReceiveWindow2Callback
 23239 ;;		_LORAWAN_EnterContinuousReceive
 23240 ;;		_LORAWAN_RxDone
 23241 ;; This function uses a non-reentrant model
 23242 ;;
 23243                           
 23244                           	psect	text120
 23245  007880                     __ptext120:
 23246                           	opt stack 0
 23247  007880                     _RADIO_ReleaseData:
 23248                           	opt stack 18
 23249                           
 23250                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23251                           
 23252                           ; BSR set to: 2
 23253                           ;incstack = 0
 23254  007880  0101               	movlb	1	; () banked
 23255  007882  95A1               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23256                           
 23257                           ; BSR set to: 1
 23258  007884  0012               	return		;funcret
 23259  007886                     __end_of_RADIO_ReleaseData:
 23260                           	opt stack 0
 23261                           tosu	equ	0xFFF
 23262                           tosh	equ	0xFFE
 23263                           tosl	equ	0xFFD
 23264                           pclath	equ	0xFFA
 23265                           tblptru	equ	0xFF8
 23266                           tblptrh	equ	0xFF7
 23267                           tblptrl	equ	0xFF6
 23268                           tablat	equ	0xFF5
 23269                           prodh	equ	0xFF4
 23270                           prodl	equ	0xFF3
 23271                           intcon	equ	0xFF2
 23272                           intcon2	equ	0xFF1
 23273                           intcon3	equ	0xFF0
 23274                           indf0	equ	0xFEF
 23275                           postinc0	equ	0xFEE
 23276                           fsr0h	equ	0xFEA
 23277                           fsr0l	equ	0xFE9
 23278                           wreg	equ	0xFE8
 23279                           postinc1	equ	0xFE6
 23280                           postdec1	equ	0xFE5
 23281                           plusw1	equ	0xFE3
 23282                           fsr1h	equ	0xFE2
 23283                           fsr1l	equ	0xFE1
 23284                           indf2	equ	0xFDF
 23285                           postinc2	equ	0xFDE
 23286                           postdec2	equ	0xFDD
 23287                           plusw2	equ	0xFDB
 23288                           fsr2h	equ	0xFDA
 23289                           fsr2l	equ	0xFD9
 23290                           status	equ	0xFD8
 23291                           
 23292 ;; *************** function _RADIO_ReceiveStop *****************
 23293 ;; Defined at:
 23294 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;		None
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;		None
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1    wreg      void 
 23301 ;; Registers used:
 23302 ;;		wreg, status,2, status,0, cstack
 23303 ;; Tracked objects:
 23304 ;;		On entry : F/2
 23305 ;;		On exit  : F/1
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23312 ;;Total ram usage:        0 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:   11
 23315 ;; This function calls:
 23316 ;;		_RADIO_WriteMode
 23317 ;; This function is called by:
 23318 ;;		_LORAWAN_Send
 23319 ;;		_LORAWAN_ReceiveWindow1Callback
 23320 ;;		_LORAWAN_ReceiveWindow2Callback
 23321 ;;		_LORAWAN_EnterContinuousReceive
 23322 ;; This function uses a non-reentrant model
 23323 ;;
 23324                           
 23325                           	psect	text121
 23326  00743A                     __ptext121:
 23327                           	opt stack 0
 23328  00743A                     _RADIO_ReceiveStop:
 23329                           	opt stack 17
 23330                           
 23331                           ; BSR set to: 2
 23332                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23333                           
 23334                           ; BSR set to: 1
 23335                           ;incstack = 0
 23336  00743A  0E02               	movlw	2
 23337  00743C  0101               	movlb	1	; () banked
 23338  00743E  19A1               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23339  007440  A4D8               	btfss	status,2,c
 23340  007442  0012               	return	
 23341                           
 23342                           ; BSR set to: 1
 23343                           ;radio_driver_SX1276.c: 954: {
 23344                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23345  007444  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23346  007448  0E00               	movlw	0
 23347  00744A  0100               	movlb	0	; () banked
 23348  00744C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23349  00744E  EC5F  F028         	call	_RADIO_WriteMode
 23350                           
 23351                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23352  007452  0101               	movlb	1	; () banked
 23353  007454  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23354                           
 23355                           ; BSR set to: 1
 23356  007456  0012               	return		;funcret
 23357  007458                     __end_of_RADIO_ReceiveStop:
 23358                           	opt stack 0
 23359                           tosu	equ	0xFFF
 23360                           tosh	equ	0xFFE
 23361                           tosl	equ	0xFFD
 23362                           pclath	equ	0xFFA
 23363                           tblptru	equ	0xFF8
 23364                           tblptrh	equ	0xFF7
 23365                           tblptrl	equ	0xFF6
 23366                           tablat	equ	0xFF5
 23367                           prodh	equ	0xFF4
 23368                           prodl	equ	0xFF3
 23369                           intcon	equ	0xFF2
 23370                           intcon2	equ	0xFF1
 23371                           intcon3	equ	0xFF0
 23372                           indf0	equ	0xFEF
 23373                           postinc0	equ	0xFEE
 23374                           fsr0h	equ	0xFEA
 23375                           fsr0l	equ	0xFE9
 23376                           wreg	equ	0xFE8
 23377                           postinc1	equ	0xFE6
 23378                           postdec1	equ	0xFE5
 23379                           plusw1	equ	0xFE3
 23380                           fsr1h	equ	0xFE2
 23381                           fsr1l	equ	0xFE1
 23382                           indf2	equ	0xFDF
 23383                           postinc2	equ	0xFDE
 23384                           postdec2	equ	0xFDD
 23385                           plusw2	equ	0xFDB
 23386                           fsr2h	equ	0xFDA
 23387                           fsr2l	equ	0xFD9
 23388                           status	equ	0xFD8
 23389                           
 23390 ;; *************** function _RADIO_ReceiveStart *****************
 23391 ;; Defined at:
 23392 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23393 ;; Parameters:    Size  Location     Type
 23394 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 23395 ;; Auto vars:     Size  Location     Type
 23396 ;;		None
 23397 ;; Return value:  Size  Location     Type
 23398 ;;                  2   54[BANK0 ] enum E7805
 23399 ;; Registers used:
 23400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23401 ;; Tracked objects:
 23402 ;;		On entry : F/0
 23403 ;;		On exit  : F/0
 23404 ;;		Unchanged: 0/0
 23405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23408 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23409 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23410 ;;Total ram usage:       10 bytes
 23411 ;; Hardware stack levels used:    1
 23412 ;; Hardware stack levels required when called:   12
 23413 ;; This function calls:
 23414 ;;		_RADIO_RegisterWrite
 23415 ;;		_RADIO_WriteConfiguration
 23416 ;;		_RADIO_WriteMode
 23417 ;;		_SwTimerSetTimeout
 23418 ;;		_SwTimerStart
 23419 ;;		___lldiv
 23420 ;; This function is called by:
 23421 ;;		_LORAWAN_ReceiveWindow1Callback
 23422 ;;		_LORAWAN_ReceiveWindow2Callback
 23423 ;;		_LORAWAN_EnterContinuousReceive
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text122
 23428  002BB6                     __ptext122:
 23429                           	opt stack 0
 23430  002BB6                     _RADIO_ReceiveStart:
 23431                           	opt stack 13
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23435                           
 23436                           ; BSR set to: 1
 23437                           ;incstack = 0
 23438  002BB6  0101               	movlb	1	; () banked
 23439  002BB8  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23440  002BBA  D006               	goto	l12747
 23441                           
 23442                           ; BSR set to: 1
 23443                           ;radio_driver_SX1276.c: 878: {
 23444                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23445  002BBC  0E80               	movlw	128
 23446  002BBE  0100               	movlb	0	; () banked
 23447  002BC0  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23448  002BC2  0E03               	movlw	3
 23449  002BC4  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23450  002BC6  0C03               	retlw	3
 23451  002BC8                     l12747:
 23452                           
 23453                           ; BSR set to: 1
 23454                           ;radio_driver_SX1276.c: 880: }
 23455                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23456  002BC8  C1A1  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23457  002BCC  0E03               	movlw	3
 23458  002BCE  0100               	movlb	0	; () banked
 23459  002BD0  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23460  002BD2  E005               	bz	l12753
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;radio_driver_SX1276.c: 883: {
 23464                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23465  002BD4  0E80               	movlw	128
 23466  002BD6  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23467  002BD8  0E04               	movlw	4
 23468  002BDA  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23469  002BDC  0C04               	retlw	4
 23470  002BDE                     l12753:
 23471                           
 23472                           ; BSR set to: 0
 23473                           ;radio_driver_SX1276.c: 885: }
 23474                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23475  002BDE  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23476  002BE0  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23477  002BE2  E107               	bnz	l12757
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;radio_driver_SX1276.c: 888: {
 23481                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23482  002BE4  0E00               	movlw	0
 23483  002BE6  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23484  002BE8  0E04               	movlw	4
 23485  002BEA  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23486  002BEC  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23487                           
 23488                           ;radio_driver_SX1276.c: 890: }
 23489  002BF0  D006               	goto	l12759
 23490  002BF2                     l12757:
 23491                           
 23492                           ; BSR set to: 0
 23493                           ;radio_driver_SX1276.c: 891: else
 23494                           ;radio_driver_SX1276.c: 892: {
 23495                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23496  002BF2  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23497  002BF6  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23498  002BFA  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23499  002BFE                     l12759:
 23500                           
 23501                           ;radio_driver_SX1276.c: 894: }
 23502                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23503  002BFE  0101               	movlb	1	; () banked
 23504  002C00  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23505  002C02  E111               	bnz	l12763
 23506                           
 23507                           ; BSR set to: 1
 23508                           ;radio_driver_SX1276.c: 897: {
 23509                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23510  002C04  0E01               	movlw	1
 23511  002C06  0100               	movlb	0	; () banked
 23512  002C08  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23513  002C0A  0E22               	movlw	34
 23514  002C0C  EC2C  F03A         	call	_RADIO_RegisterWrite
 23515                           
 23516                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23517  002C10  0100               	movlb	0	; () banked
 23518  002C12  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23519  002C14  0E40               	movlw	64
 23520  002C16  EC2C  F03A         	call	_RADIO_RegisterWrite
 23521                           
 23522                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23523  002C1A  0100               	movlb	0	; () banked
 23524  002C1C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23525  002C1E  0E41               	movlw	65
 23526  002C20  EC2C  F03A         	call	_RADIO_RegisterWrite
 23527                           
 23528                           ;radio_driver_SX1276.c: 908: }
 23529  002C24  D014               	goto	l12765
 23530  002C26                     l12763:
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;radio_driver_SX1276.c: 909: else
 23534                           ;radio_driver_SX1276.c: 910: {
 23535                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23536  002C26  C1B2  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23537  002C2A  0E12               	movlw	18
 23538  002C2C  EC2C  F03A         	call	_RADIO_RegisterWrite
 23539                           
 23540                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23541  002C30  C1B3  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23542  002C34  0E13               	movlw	19
 23543  002C36  EC2C  F03A         	call	_RADIO_RegisterWrite
 23544                           
 23545                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23546  002C3A  0100               	movlb	0	; () banked
 23547  002C3C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23548  002C3E  0E40               	movlw	64
 23549  002C40  EC2C  F03A         	call	_RADIO_RegisterWrite
 23550                           
 23551                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23552  002C44  0100               	movlb	0	; () banked
 23553  002C46  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23554  002C48  0E41               	movlw	65
 23555  002C4A  EC2C  F03A         	call	_RADIO_RegisterWrite
 23556  002C4E                     l12765:
 23557                           
 23558                           ;radio_driver_SX1276.c: 917: }
 23559                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23560  002C4E  0101               	movlb	1	; () banked
 23561  002C50  83A1               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23562                           
 23563                           ; BSR set to: 1
 23564                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23565  002C52  0EE7               	movlw	231
 23566  002C54  17A1               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23567                           
 23568                           ; BSR set to: 1
 23569                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23570  002C56  0100               	movlb	0	; () banked
 23571  002C58  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23572  002C5A  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23573  002C5C  E108               	bnz	l12773
 23574                           
 23575                           ; BSR set to: 0
 23576                           ;radio_driver_SX1276.c: 925: {
 23577                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23578  002C5E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23579  002C62  0E00               	movlw	0
 23580  002C64  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23581  002C66  0E05               	movlw	5
 23582  002C68  EC5F  F028         	call	_RADIO_WriteMode
 23583                           
 23584                           ;radio_driver_SX1276.c: 927: }
 23585  002C6C  D041               	goto	l12783
 23586  002C6E                     l12773:
 23587                           
 23588                           ; BSR set to: 0
 23589                           ;radio_driver_SX1276.c: 928: else
 23590                           ;radio_driver_SX1276.c: 929: {
 23591                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23592  002C6E  0101               	movlb	1	; () banked
 23593  002C70  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23594  002C72  E109               	bnz	l12777
 23595                           
 23596                           ; BSR set to: 1
 23597                           ;radio_driver_SX1276.c: 931: {
 23598                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23599  002C74  0E01               	movlw	1
 23600  002C76  0100               	movlb	0	; () banked
 23601  002C78  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23602  002C7A  0E00               	movlw	0
 23603  002C7C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23604  002C7E  0E06               	movlw	6
 23605  002C80  EC5F  F028         	call	_RADIO_WriteMode
 23606                           
 23607                           ;radio_driver_SX1276.c: 933: }
 23608  002C84  D035               	goto	l12783
 23609  002C86                     l12777:
 23610                           
 23611                           ; BSR set to: 1
 23612                           ;radio_driver_SX1276.c: 934: else
 23613                           ;radio_driver_SX1276.c: 935: {
 23614                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23615  002C86  0E00               	movlw	0
 23616  002C88  0100               	movlb	0	; () banked
 23617  002C8A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23618  002C8C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23619  002C8E  0E05               	movlw	5
 23620  002C90  EC5F  F028         	call	_RADIO_WriteMode
 23621                           
 23622                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23623  002C94  0100               	movlb	0	; () banked
 23624  002C96  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23625  002C98  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23626  002C9A  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23627  002C9C  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23628  002C9E  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23629  002CA0  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23630  002CA2  0E0C               	movlw	12
 23631  002CA4                     u13715:
 23632  002CA4  90D8               	bcf	status,0,c
 23633  002CA6  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23634  002CA8  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23635  002CAA  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23636  002CAC  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23637  002CAE  2EE8               	decfsz	wreg,f,c
 23638  002CB0  D7F9               	goto	u13715
 23639  002CB2  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23640  002CB6  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23641  002CBA  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23642  002CBE  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23643  002CC2  0E7D               	movlw	125
 23644  002CC4  6F68               	movwf	___lldiv@divisor& (0+255),b
 23645  002CC6  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23646  002CC8  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23647  002CCA  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23648  002CCC  EC0D  F030         	call	___lldiv	;wreg free
 23649  002CD0  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23650  002CD4  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23651  002CD8  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23652  002CDC  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23653  002CE0  0101               	movlb	1	; () banked
 23654  002CE2  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23655  002CE4  EC62  F036         	call	_SwTimerSetTimeout
 23656                           
 23657                           ; BSR set to: 0
 23658                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23659  002CE8  0101               	movlb	1	; () banked
 23660  002CEA  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23661  002CEC  EC4B  F02E         	call	_SwTimerStart
 23662  002CF0                     l12783:
 23663                           
 23664                           ;radio_driver_SX1276.c: 939: }
 23665                           ;radio_driver_SX1276.c: 940: }
 23666                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23667  002CF0  0101               	movlb	1	; () banked
 23668  002CF2  51A8               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23669  002CF4  11A9               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23670  002CF6  11AA               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23671  002CF8  11AB               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23672  002CFA  E059               	bz	l12795
 23673                           
 23674                           ; BSR set to: 1
 23675                           ;radio_driver_SX1276.c: 943: {
 23676                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23677  002CFC  51AB               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23678  002CFE  E106               	bnz	u13730
 23679  002D00  29A8               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23680  002D02  0EFF               	movlw	255
 23681  002D04  59A9               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23682  002D06  0E0F               	movlw	15
 23683  002D08  59AA               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23684  002D0A  E319               	bnc	l12789
 23685  002D0C                     u13730:
 23686                           
 23687                           ; BSR set to: 1
 23688  002D0C  C1A8  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23689  002D10  C1A9  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23690  002D14  C1AA  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23691  002D18  C1AB  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23692  002D1C  0E7D               	movlw	125
 23693  002D1E  0100               	movlb	0	; () banked
 23694  002D20  6F68               	movwf	___lldiv@divisor& (0+255),b
 23695  002D22  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23696  002D24  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23697  002D26  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23698  002D28  EC0D  F030         	call	___lldiv	;wreg free
 23699  002D2C  0E0C               	movlw	12
 23700  002D2E                     u13745:
 23701  002D2E  90D8               	bcf	status,0,c
 23702  002D30  3764               	rlcf	?___lldiv& (0+255),f,b
 23703  002D32  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23704  002D34  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23705  002D36  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23706  002D38  2EE8               	decfsz	wreg,f,c
 23707  002D3A  D7F9               	goto	u13745
 23708  002D3C  D020               	goto	L14
 23709  002D3E                     l12789:
 23710                           
 23711                           ; BSR set to: 1
 23712  002D3E  C1A8  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23713  002D42  C1A9  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23714  002D46  C1AA  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23715  002D4A  C1AB  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23716  002D4E  0E0C               	movlw	12
 23717  002D50                     u13755:
 23718  002D50  90D8               	bcf	status,0,c
 23719  002D52  0100               	movlb	0	; () banked
 23720  002D54  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23721  002D56  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23722  002D58  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23723  002D5A  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23724  002D5C  2EE8               	decfsz	wreg,f,c
 23725  002D5E  D7F8               	goto	u13755
 23726  002D60  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23727  002D64  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23728  002D68  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23729  002D6C  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23730  002D70  0E7D               	movlw	125
 23731  002D72  6F68               	movwf	___lldiv@divisor& (0+255),b
 23732  002D74  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23733  002D76  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23734  002D78  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23735  002D7A  EC0D  F030         	call	___lldiv	;wreg free
 23736  002D7E                     L14:
 23737  002D7E  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1199
 23738  002D82  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1199+1
 23739  002D86  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1199+2
 23740  002D8A  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1199+3
 23741                           
 23742                           ; BSR set to: 0
 23743  002D8E  C09C  F071         	movff	_RADIO_ReceiveStart$1199,SwTimerSetTimeout@timeout
 23744  002D92  C09D  F072         	movff	_RADIO_ReceiveStart$1199+1,SwTimerSetTimeout@timeout+1
 23745  002D96  C09E  F073         	movff	_RADIO_ReceiveStart$1199+2,SwTimerSetTimeout@timeout+2
 23746  002D9A  C09F  F074         	movff	_RADIO_ReceiveStart$1199+3,SwTimerSetTimeout@timeout+3
 23747  002D9E  0101               	movlb	1	; () banked
 23748  002DA0  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23749  002DA2  EC62  F036         	call	_SwTimerSetTimeout
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23753  002DA6  0101               	movlb	1	; () banked
 23754  002DA8  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23755  002DAA  EC4B  F02E         	call	_SwTimerStart
 23756  002DAE                     l12795:
 23757                           
 23758                           ;radio_driver_SX1276.c: 946: }
 23759                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23760  002DAE  0100               	movlb	0	; () banked
 23761  002DB0  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23762  002DB2  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23763                           
 23764                           ; BSR set to: 0
 23765  002DB4  0012               	return		;funcret
 23766  002DB6                     __end_of_RADIO_ReceiveStart:
 23767                           	opt stack 0
 23768                           tosu	equ	0xFFF
 23769                           tosh	equ	0xFFE
 23770                           tosl	equ	0xFFD
 23771                           pclath	equ	0xFFA
 23772                           tblptru	equ	0xFF8
 23773                           tblptrh	equ	0xFF7
 23774                           tblptrl	equ	0xFF6
 23775                           tablat	equ	0xFF5
 23776                           prodh	equ	0xFF4
 23777                           prodl	equ	0xFF3
 23778                           intcon	equ	0xFF2
 23779                           intcon2	equ	0xFF1
 23780                           intcon3	equ	0xFF0
 23781                           indf0	equ	0xFEF
 23782                           postinc0	equ	0xFEE
 23783                           fsr0h	equ	0xFEA
 23784                           fsr0l	equ	0xFE9
 23785                           wreg	equ	0xFE8
 23786                           postinc1	equ	0xFE6
 23787                           postdec1	equ	0xFE5
 23788                           plusw1	equ	0xFE3
 23789                           fsr1h	equ	0xFE2
 23790                           fsr1l	equ	0xFE1
 23791                           indf2	equ	0xFDF
 23792                           postinc2	equ	0xFDE
 23793                           postdec2	equ	0xFDD
 23794                           plusw2	equ	0xFDB
 23795                           fsr2h	equ	0xFDA
 23796                           fsr2l	equ	0xFD9
 23797                           status	equ	0xFD8
 23798                           
 23799 ;; *************** function _ConfigureRadioRx *****************
 23800 ;; Defined at:
 23801 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23802 ;; Parameters:    Size  Location     Type
 23803 ;;  dataRate        1    wreg     unsigned char 
 23804 ;;  freq            4   22[BANK0 ] unsigned long 
 23805 ;; Auto vars:     Size  Location     Type
 23806 ;;  dataRate        1   26[BANK0 ] unsigned char 
 23807 ;; Return value:  Size  Location     Type
 23808 ;;                  1    wreg      void 
 23809 ;; Registers used:
 23810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23811 ;; Tracked objects:
 23812 ;;		On entry : F/2
 23813 ;;		On exit  : 0/0
 23814 ;;		Unchanged: 0/0
 23815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23820 ;;Total ram usage:        5 bytes
 23821 ;; Hardware stack levels used:    1
 23822 ;; Hardware stack levels required when called:   10
 23823 ;; This function calls:
 23824 ;;		_ConfigureRadio
 23825 ;;		_RADIO_SetCRC
 23826 ;;		_RADIO_SetIQInverted
 23827 ;; This function is called by:
 23828 ;;		_LORAWAN_ReceiveWindow1Callback
 23829 ;;		_LORAWAN_ReceiveWindow2Callback
 23830 ;;		_LORAWAN_EnterContinuousReceive
 23831 ;; This function uses a non-reentrant model
 23832 ;;
 23833                           
 23834                           	psect	text123
 23835  007284                     __ptext123:
 23836                           	opt stack 0
 23837  007284                     _ConfigureRadioRx:
 23838                           	opt stack 15
 23839                           
 23840                           ; BSR set to: 0
 23841                           ;incstack = 0
 23842                           ;ConfigureRadioRx@dataRate stored from wreg
 23843  007284  0100               	movlb	0	; () banked
 23844  007286  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23845                           
 23846                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23847  007288  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23848  00728C  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23849  007290  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23850  007294  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23851  007298  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23852  00729A  ECBE  F02D         	call	_ConfigureRadio
 23853                           
 23854                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23855  00729E  0E00               	movlw	0
 23856  0072A0  ECFA  F03B         	call	_RADIO_SetCRC
 23857                           
 23858                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23859  0072A4  0E01               	movlw	1
 23860  0072A6  EFF5  F03B         	goto	_RADIO_SetIQInverted
 23861  0072AA                     __end_of_ConfigureRadioRx:
 23862                           	opt stack 0
 23863                           tosu	equ	0xFFF
 23864                           tosh	equ	0xFFE
 23865                           tosl	equ	0xFFD
 23866                           pclath	equ	0xFFA
 23867                           tblptru	equ	0xFF8
 23868                           tblptrh	equ	0xFF7
 23869                           tblptrl	equ	0xFF6
 23870                           tablat	equ	0xFF5
 23871                           prodh	equ	0xFF4
 23872                           prodl	equ	0xFF3
 23873                           intcon	equ	0xFF2
 23874                           intcon2	equ	0xFF1
 23875                           intcon3	equ	0xFF0
 23876                           indf0	equ	0xFEF
 23877                           postinc0	equ	0xFEE
 23878                           fsr0h	equ	0xFEA
 23879                           fsr0l	equ	0xFE9
 23880                           wreg	equ	0xFE8
 23881                           postinc1	equ	0xFE6
 23882                           postdec1	equ	0xFE5
 23883                           plusw1	equ	0xFE3
 23884                           fsr1h	equ	0xFE2
 23885                           fsr1l	equ	0xFE1
 23886                           indf2	equ	0xFDF
 23887                           postinc2	equ	0xFDE
 23888                           postdec2	equ	0xFDD
 23889                           plusw2	equ	0xFDB
 23890                           fsr2h	equ	0xFDA
 23891                           fsr2l	equ	0xFD9
 23892                           status	equ	0xFD8
 23893                           
 23894 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23895 ;; Defined at:
 23896 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23897 ;; Parameters:    Size  Location     Type
 23898 ;;		None
 23899 ;; Auto vars:     Size  Location     Type
 23900 ;;  a               1    4[BANK0 ] unsigned char 
 23901 ;; Return value:  Size  Location     Type
 23902 ;;                  1    wreg      unsigned char 
 23903 ;; Registers used:
 23904 ;;		wreg, status,2
 23905 ;; Tracked objects:
 23906 ;;		On entry : F/0
 23907 ;;		On exit  : F/0
 23908 ;;		Unchanged: 0/0
 23909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23914 ;;Total ram usage:        1 bytes
 23915 ;; Hardware stack levels used:    1
 23916 ;; Hardware stack levels required when called:    7
 23917 ;; This function calls:
 23918 ;;		Nothing
 23919 ;; This function is called by:
 23920 ;;		_LORAWAN_Mainloop
 23921 ;; This function uses a non-reentrant model
 23922 ;;
 23923                           
 23924                           	psect	text124
 23925  007720                     __ptext124:
 23926                           	opt stack 0
 23927  007720                     _INTERRUPT_GetDioStatus:
 23928                           	opt stack 22
 23929                           
 23930                           ; BSR set to: 0
 23931                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 23932                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 23933                           
 23934                           ;incstack = 0
 23935  007720  9EF2               	bcf	intcon,7,c	;volatile
 23936                           
 23937                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23938  007722  C0F0  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23939                           
 23940                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23941  007726  6BF0               	clrf	_dioStatus& (0+255),b	;volatile
 23942                           
 23943                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23944  007728  8EF2               	bsf	intcon,7,c	;volatile
 23945                           
 23946                           ; BSR set to: 0
 23947                           ;interrupt_manager_lora_addons.c: 55: return a;
 23948  00772A  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23949                           
 23950                           ; BSR set to: 0
 23951  00772C  0012               	return		;funcret
 23952  00772E                     __end_of_INTERRUPT_GetDioStatus:
 23953                           	opt stack 0
 23954                           tosu	equ	0xFFF
 23955                           tosh	equ	0xFFE
 23956                           tosl	equ	0xFFD
 23957                           pclath	equ	0xFFA
 23958                           tblptru	equ	0xFF8
 23959                           tblptrh	equ	0xFF7
 23960                           tblptrl	equ	0xFF6
 23961                           tablat	equ	0xFF5
 23962                           prodh	equ	0xFF4
 23963                           prodl	equ	0xFF3
 23964                           intcon	equ	0xFF2
 23965                           intcon2	equ	0xFF1
 23966                           intcon3	equ	0xFF0
 23967                           indf0	equ	0xFEF
 23968                           postinc0	equ	0xFEE
 23969                           fsr0h	equ	0xFEA
 23970                           fsr0l	equ	0xFE9
 23971                           wreg	equ	0xFE8
 23972                           postinc1	equ	0xFE6
 23973                           postdec1	equ	0xFE5
 23974                           plusw1	equ	0xFE3
 23975                           fsr1h	equ	0xFE2
 23976                           fsr1l	equ	0xFE1
 23977                           indf2	equ	0xFDF
 23978                           postinc2	equ	0xFDE
 23979                           postdec2	equ	0xFDD
 23980                           plusw2	equ	0xFDB
 23981                           fsr2h	equ	0xFDA
 23982                           fsr2l	equ	0xFD9
 23983                           status	equ	0xFD8
 23984                           
 23985 ;; *************** function _LORAWAN_Join *****************
 23986 ;; Defined at:
 23987 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23988 ;; Parameters:    Size  Location     Type
 23989 ;;  activationTy    1    wreg     enum E7980
 23990 ;; Auto vars:     Size  Location     Type
 23991 ;;  activationTy    1  126[BANK0 ] enum E7980
 23992 ;;  result          1  125[BANK0 ] enum E7957
 23993 ;;  bufferIndex     1  124[BANK0 ] unsigned char 
 23994 ;; Return value:  Size  Location     Type
 23995 ;;                  1    wreg      enum E7957
 23996 ;; Registers used:
 23997 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23998 ;; Tracked objects:
 23999 ;;		On entry : F/2
 24000 ;;		On exit  : D/0
 24001 ;;		Unchanged: 0/0
 24002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24004 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24007 ;;Total ram usage:        3 bytes
 24008 ;; Hardware stack levels used:    1
 24009 ;; Hardware stack levels required when called:   14
 24010 ;; This function calls:
 24011 ;;		_PrepareJoinRequestFrame
 24012 ;;		_RADIO_Transmit
 24013 ;;		_SelectChannelForTransmission
 24014 ;;		_SwTimerSetTimeout
 24015 ;;		_SwTimerStart
 24016 ;;		_UpdateJoinInProgress
 24017 ;; This function is called by:
 24018 ;;		_main
 24019 ;; This function uses a non-reentrant model
 24020 ;;
 24021                           
 24022                           	psect	text125
 24023  005C0A                     __ptext125:
 24024                           	opt stack 0
 24025  005C0A                     _LORAWAN_Join:
 24026                           	opt stack 16
 24027                           
 24028                           ; BSR set to: 0
 24029                           ;incstack = 0
 24030                           ;LORAWAN_Join@activationTypeNew stored from wreg
 24031  005C0A  0100               	movlb	0	; () banked
 24032  005C0C  6FDE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 24033                           
 24034                           ;lorawan.c: 117: uint8_t bufferIndex;
 24035                           ;lorawan.c: 118: LorawanError_t result;
 24036                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 24037  005C0E  0102               	movlb	2	; () banked
 24038  005C10  A103               	btfss	(_loRa+3)& (0+255),0,b
 24039                           
 24040                           ; BSR set to: 2
 24041                           ;lorawan.c: 123: }
 24042                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 24043  005C12  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 24044  005C14  0012               	return	
 24045                           
 24046                           ; BSR set to: 2
 24047                           ;lorawan.c: 128: }
 24048                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 24049  005C16  5102               	movf	(_loRa+2)& (0+255),w,b
 24050  005C18  0B0F               	andlw	15
 24051  005C1A  E001               	bz	l1717
 24052  005C1C  0012               	return	
 24053  005C1E                     l1717:
 24054                           
 24055                           ; BSR set to: 2
 24056                           ;lorawan.c: 133: }
 24057                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 24058  005C1E  C0DE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 24059                           
 24060                           ; BSR set to: 2
 24061                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 24062  005C22  0100               	movlb	0	; () banked
 24063  005C24  51DE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 24064  005C26  E11F               	bnz	l1718
 24065                           
 24066                           ; BSR set to: 0
 24067                           ;lorawan.c: 138: {
 24068                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 24069  005C28  0102               	movlb	2	; () banked
 24070  005C2A  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 24071                           
 24072                           ; BSR set to: 2
 24073  005C2C  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 24074  005C2E  0012               	return	
 24075                           
 24076                           ; BSR set to: 2
 24077  005C30  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 24078  005C32  0012               	return	
 24079                           
 24080                           ; BSR set to: 2
 24081                           ;lorawan.c: 144: else
 24082                           ;lorawan.c: 145: {
 24083                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 24084  005C34  EC19  F023         	call	_PrepareJoinRequestFrame	;wreg free
 24085  005C38  6FDC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 24086                           
 24087                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 24088  005C3A  0E00               	movlw	0
 24089  005C3C  EC19  F033         	call	_SelectChannelForTransmission
 24090  005C40  6FDD               	movwf	LORAWAN_Join@result& (0+255),b
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;lorawan.c: 149: if (result == OK)
 24094  005C42  51DD               	movf	LORAWAN_Join@result& (0+255),w,b
 24095  005C44  A4D8               	btfss	status,2,c
 24096  005C46  0012               	return	
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;lorawan.c: 150: {
 24100                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 24101  005C48  0EE0               	movlw	low _macBuffer
 24102  005C4A  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 24103  005C4C  0E04               	movlw	high _macBuffer
 24104  005C4E  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24105  005C50  C0DC  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 24106  005C54  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 24107  005C58  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 24108  005C5A  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 24109  005C5C  A4D8               	btfss	status,2,c
 24110  005C5E  0012               	return	
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;lorawan.c: 152: {
 24114                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 24115  005C60  0E01               	movlw	1
 24116  005C62  EFC8  F03A         	goto	_UpdateJoinInProgress
 24117  005C66                     l1718:
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;lorawan.c: 167: else
 24121                           ;lorawan.c: 168: {
 24122                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 24123  005C66  0102               	movlb	2	; () banked
 24124  005C68  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 24125                           
 24126                           ; BSR set to: 2
 24127  005C6A  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 24128  005C6C  0012               	return	
 24129                           
 24130                           ; BSR set to: 2
 24131  005C6E  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 24132  005C70  0012               	return	
 24133                           
 24134                           ; BSR set to: 2
 24135                           ;lorawan.c: 174: else
 24136                           ;lorawan.c: 175: {
 24137                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 24138  005C72  0E07               	movlw	7
 24139  005C74  ECC8  F03A         	call	_UpdateJoinInProgress
 24140                           
 24141                           ; BSR set to: 2
 24142                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 24143  005C78  0E8F               	movlw	143
 24144  005C7A  0100               	movlb	0	; () banked
 24145  005C7C  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24146  005C7E  0E02               	movlw	2
 24147  005C80  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24148  005C82  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24149  005C84  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24150  005C86  0102               	movlb	2	; () banked
 24151  005C88  51F3               	movf	(_loRa+243)& (0+255),w,b
 24152  005C8A  EC62  F036         	call	_SwTimerSetTimeout
 24153                           
 24154                           ; BSR set to: 0
 24155                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24156  005C8E  0102               	movlb	2	; () banked
 24157  005C90  51F3               	movf	(_loRa+243)& (0+255),w,b
 24158  005C92  EF4B  F02E         	goto	_SwTimerStart
 24159  005C96                     __end_of_LORAWAN_Join:
 24160                           	opt stack 0
 24161                           tosu	equ	0xFFF
 24162                           tosh	equ	0xFFE
 24163                           tosl	equ	0xFFD
 24164                           pclath	equ	0xFFA
 24165                           tblptru	equ	0xFF8
 24166                           tblptrh	equ	0xFF7
 24167                           tblptrl	equ	0xFF6
 24168                           tablat	equ	0xFF5
 24169                           prodh	equ	0xFF4
 24170                           prodl	equ	0xFF3
 24171                           intcon	equ	0xFF2
 24172                           intcon2	equ	0xFF1
 24173                           intcon3	equ	0xFF0
 24174                           indf0	equ	0xFEF
 24175                           postinc0	equ	0xFEE
 24176                           fsr0h	equ	0xFEA
 24177                           fsr0l	equ	0xFE9
 24178                           wreg	equ	0xFE8
 24179                           postinc1	equ	0xFE6
 24180                           postdec1	equ	0xFE5
 24181                           plusw1	equ	0xFE3
 24182                           fsr1h	equ	0xFE2
 24183                           fsr1l	equ	0xFE1
 24184                           indf2	equ	0xFDF
 24185                           postinc2	equ	0xFDE
 24186                           postdec2	equ	0xFDD
 24187                           plusw2	equ	0xFDB
 24188                           fsr2h	equ	0xFDA
 24189                           fsr2l	equ	0xFD9
 24190                           status	equ	0xFD8
 24191                           
 24192 ;; *************** function _UpdateJoinInProgress *****************
 24193 ;; Defined at:
 24194 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24195 ;; Parameters:    Size  Location     Type
 24196 ;;  state           1    wreg     unsigned char 
 24197 ;; Auto vars:     Size  Location     Type
 24198 ;;  state           1    4[BANK0 ] unsigned char 
 24199 ;; Return value:  Size  Location     Type
 24200 ;;                  1    wreg      void 
 24201 ;; Registers used:
 24202 ;;		wreg, status,2, status,0
 24203 ;; Tracked objects:
 24204 ;;		On entry : D/0
 24205 ;;		On exit  : F/2
 24206 ;;		Unchanged: 0/0
 24207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24211 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24212 ;;Total ram usage:        1 bytes
 24213 ;; Hardware stack levels used:    1
 24214 ;; Hardware stack levels required when called:    7
 24215 ;; This function calls:
 24216 ;;		Nothing
 24217 ;; This function is called by:
 24218 ;;		_LORAWAN_Join
 24219 ;; This function uses a non-reentrant model
 24220 ;;
 24221                           
 24222                           	psect	text126
 24223  007590                     __ptext126:
 24224                           	opt stack 0
 24225  007590                     _UpdateJoinInProgress:
 24226                           	opt stack 22
 24227                           
 24228                           ;incstack = 0
 24229                           ;UpdateJoinInProgress@state stored from wreg
 24230  007590  0100               	movlb	0	; () banked
 24231  007592  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24232                           
 24233                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24234  007594  0102               	movlb	2	; () banked
 24235  007596  9902               	bcf	(_loRa+2)& (0+255),4,b
 24236                           
 24237                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24238  007598  8500               	bsf	_loRa& (0+255),2,b
 24239                           
 24240                           ; BSR set to: 2
 24241                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24242  00759A  5102               	movf	(_loRa+2)& (0+255),w,b
 24243  00759C  0100               	movlb	0	; () banked
 24244  00759E  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24245  0075A0  0BF0               	andlw	-16
 24246  0075A2  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24247  0075A4  0102               	movlb	2	; () banked
 24248  0075A6  6F02               	movwf	(_loRa+2)& (0+255),b
 24249                           
 24250                           ; BSR set to: 2
 24251  0075A8  0012               	return		;funcret
 24252  0075AA                     __end_of_UpdateJoinInProgress:
 24253                           	opt stack 0
 24254                           tosu	equ	0xFFF
 24255                           tosh	equ	0xFFE
 24256                           tosl	equ	0xFFD
 24257                           pclath	equ	0xFFA
 24258                           tblptru	equ	0xFF8
 24259                           tblptrh	equ	0xFF7
 24260                           tblptrl	equ	0xFF6
 24261                           tablat	equ	0xFF5
 24262                           prodh	equ	0xFF4
 24263                           prodl	equ	0xFF3
 24264                           intcon	equ	0xFF2
 24265                           intcon2	equ	0xFF1
 24266                           intcon3	equ	0xFF0
 24267                           indf0	equ	0xFEF
 24268                           postinc0	equ	0xFEE
 24269                           fsr0h	equ	0xFEA
 24270                           fsr0l	equ	0xFE9
 24271                           wreg	equ	0xFE8
 24272                           postinc1	equ	0xFE6
 24273                           postdec1	equ	0xFE5
 24274                           plusw1	equ	0xFE3
 24275                           fsr1h	equ	0xFE2
 24276                           fsr1l	equ	0xFE1
 24277                           indf2	equ	0xFDF
 24278                           postinc2	equ	0xFDE
 24279                           postdec2	equ	0xFDD
 24280                           plusw2	equ	0xFDB
 24281                           fsr2h	equ	0xFDA
 24282                           fsr2l	equ	0xFD9
 24283                           status	equ	0xFD8
 24284                           
 24285 ;; *************** function _SelectChannelForTransmission *****************
 24286 ;; Defined at:
 24287 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24288 ;; Parameters:    Size  Location     Type
 24289 ;;  transmission    1    wreg     unsigned char 
 24290 ;; Auto vars:     Size  Location     Type
 24291 ;;  transmission    1   37[BANK0 ] unsigned char 
 24292 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24293 ;;  result          1   38[BANK0 ] enum E8016
 24294 ;; Return value:  Size  Location     Type
 24295 ;;                  1    wreg      enum E8016
 24296 ;; Registers used:
 24297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24298 ;; Tracked objects:
 24299 ;;		On entry : 0/0
 24300 ;;		On exit  : F/0
 24301 ;;		Unchanged: 0/0
 24302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24304 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24306 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24307 ;;Total ram usage:        3 bytes
 24308 ;; Hardware stack levels used:    1
 24309 ;; Hardware stack levels required when called:   11
 24310 ;; This function calls:
 24311 ;;		_ConfigureRadioTx
 24312 ;;		_SearchAvailableChannel
 24313 ;; This function is called by:
 24314 ;;		_LORAWAN_RxTimeout
 24315 ;;		_LORAWAN_Join
 24316 ;;		_LORAWAN_Send
 24317 ;;		_AckRetransmissionCallback
 24318 ;;		_UnconfirmedTransmissionCallback
 24319 ;; This function uses a non-reentrant model
 24320 ;;
 24321                           
 24322                           	psect	text127
 24323  006632                     __ptext127:
 24324                           	opt stack 0
 24325  006632                     _SelectChannelForTransmission:
 24326                           	opt stack 17
 24327                           
 24328                           ; BSR set to: 2
 24329                           ;incstack = 0
 24330                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24331  006632  0100               	movlb	0	; () banked
 24332  006634  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24333                           
 24334                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24335                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24336  006636  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24337  00663A  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24338  00663C  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24339  00663E  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24340  006640  0E10               	movlw	16
 24341  006642  EC81  F027         	call	_SearchAvailableChannel
 24342  006646  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;lorawan_eu.c: 926: if (result == OK)
 24346  006648  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24347  00664A  E120               	bnz	l13443
 24348                           
 24349                           ; BSR set to: 0
 24350                           ;lorawan_eu.c: 927: {
 24351                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24352  00664C  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24353                           
 24354                           ; BSR set to: 0
 24355                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24356  006650  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24357  006652  0D0E               	mullw	14
 24358  006654  0E00               	movlw	low _Channels
 24359  006656  24F3               	addwf	prodl,w,c
 24360  006658  6ED9               	movwf	fsr2l,c
 24361  00665A  0E04               	movlw	high _Channels
 24362  00665C  20F4               	addwfc	prodh,w,c
 24363  00665E  6EDA               	movwf	fsr2h,c
 24364  006660  CFDE F213          	movff	postinc2,_loRa+19
 24365  006664  CFDE F214          	movff	postinc2,_loRa+20
 24366  006668  CFDE F215          	movff	postinc2,_loRa+21
 24367  00666C  CFDE F216          	movff	postinc2,_loRa+22
 24368                           
 24369                           ; BSR set to: 0
 24370                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24371  006670  C2DF  F217         	movff	_loRa+223,_loRa+23
 24372                           
 24373                           ; BSR set to: 0
 24374                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24375  006674  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24376  006678  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24377  00667C  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24378  006680  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24379  006684  0102               	movlb	2	; () banked
 24380  006686  5117               	movf	(_loRa+23)& (0+255),w,b
 24381  006688  ECFC  F035         	call	_ConfigureRadioTx
 24382  00668C                     l13443:
 24383                           
 24384                           ;lorawan_eu.c: 933: }
 24385                           ;lorawan_eu.c: 934: return result;
 24386  00668C  0100               	movlb	0	; () banked
 24387  00668E  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24388                           
 24389                           ; BSR set to: 0
 24390  006690  0012               	return		;funcret
 24391  006692                     __end_of_SelectChannelForTransmission:
 24392                           	opt stack 0
 24393                           tosu	equ	0xFFF
 24394                           tosh	equ	0xFFE
 24395                           tosl	equ	0xFFD
 24396                           pclath	equ	0xFFA
 24397                           tblptru	equ	0xFF8
 24398                           tblptrh	equ	0xFF7
 24399                           tblptrl	equ	0xFF6
 24400                           tablat	equ	0xFF5
 24401                           prodh	equ	0xFF4
 24402                           prodl	equ	0xFF3
 24403                           intcon	equ	0xFF2
 24404                           intcon2	equ	0xFF1
 24405                           intcon3	equ	0xFF0
 24406                           indf0	equ	0xFEF
 24407                           postinc0	equ	0xFEE
 24408                           fsr0h	equ	0xFEA
 24409                           fsr0l	equ	0xFE9
 24410                           wreg	equ	0xFE8
 24411                           postinc1	equ	0xFE6
 24412                           postdec1	equ	0xFE5
 24413                           plusw1	equ	0xFE3
 24414                           fsr1h	equ	0xFE2
 24415                           fsr1l	equ	0xFE1
 24416                           indf2	equ	0xFDF
 24417                           postinc2	equ	0xFDE
 24418                           postdec2	equ	0xFDD
 24419                           plusw2	equ	0xFDB
 24420                           fsr2h	equ	0xFDA
 24421                           fsr2l	equ	0xFD9
 24422                           status	equ	0xFD8
 24423                           
 24424 ;; *************** function _SearchAvailableChannel *****************
 24425 ;; Defined at:
 24426 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24427 ;; Parameters:    Size  Location     Type
 24428 ;;  maxChannels     1    wreg     unsigned char 
 24429 ;;  transmission    1   25[BANK0 ] unsigned char 
 24430 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24431 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24432 ;; Auto vars:     Size  Location     Type
 24433 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24434 ;;  i               1   36[BANK0 ] unsigned char 
 24435 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24436 ;;  result          1   33[BANK0 ] enum E8016
 24437 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24438 ;; Return value:  Size  Location     Type
 24439 ;;                  1    wreg      enum E8016
 24440 ;; Registers used:
 24441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24442 ;; Tracked objects:
 24443 ;;		On entry : D/2
 24444 ;;		On exit  : F/0
 24445 ;;		Unchanged: 0/0
 24446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24448 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24449 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24450 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24451 ;;Total ram usage:       12 bytes
 24452 ;; Hardware stack levels used:    1
 24453 ;; Hardware stack levels required when called:   10
 24454 ;; This function calls:
 24455 ;;		_Random
 24456 ;; This function is called by:
 24457 ;;		_SelectChannelForTransmission
 24458 ;;		_LORAWAN_RxDone
 24459 ;; This function uses a non-reentrant model
 24460 ;;
 24461                           
 24462                           	psect	text128
 24463  004F02                     __ptext128:
 24464                           	opt stack 0
 24465  004F02                     _SearchAvailableChannel:
 24466                           	opt stack 17
 24467                           
 24468                           ; BSR set to: 0
 24469                           ;incstack = 0
 24470                           ;SearchAvailableChannel@maxChannels stored from wreg
 24471  004F02  0100               	movlb	0	; () banked
 24472  004F04  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24473                           
 24474                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24475                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24476  004F06  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24480  004F08  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24481  004F0C  6B78               	clrf	(Random@max+1)& (0+255),b
 24482  004F0E  ECAE  F039         	call	_Random	;wreg free
 24483  004F12  2977               	incf	?_Random& (0+255),w,b
 24484  004F14  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24485                           
 24486                           ; BSR set to: 0
 24487                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24488  004F16  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24489                           
 24490                           ;lorawan_eu.c: 786: while (randomNumber)
 24491  004F1A  D054               	goto	l12997
 24492  004F1C                     l1133:
 24493                           
 24494                           ; BSR set to: 0
 24495                           ;lorawan_eu.c: 787: {
 24496                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24497  004F1C  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24498  004F1E  D047               	goto	l12989
 24499  004F20                     l12973:
 24500                           
 24501                           ; BSR set to: 0
 24502                           ;lorawan_eu.c: 789: {
 24503                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24504  004F20  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24505  004F22  0D0E               	mullw	14
 24506  004F24  0E04               	movlw	low (_Channels+4)
 24507  004F26  24F3               	addwf	prodl,w,c
 24508  004F28  6ED9               	movwf	fsr2l,c
 24509  004F2A  0E04               	movlw	high (_Channels+4)
 24510  004F2C  20F4               	addwfc	prodh,w,c
 24511  004F2E  6EDA               	movwf	fsr2h,c
 24512  004F30  04DE               	decf	postinc2,w,c
 24513  004F32  E13B               	bnz	l1136
 24514                           
 24515                           ; BSR set to: 0
 24516  004F34  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24517  004F36  0D0E               	mullw	14
 24518  004F38  0E08               	movlw	low (_Channels+8)
 24519  004F3A  24F3               	addwf	prodl,w,c
 24520  004F3C  6ED9               	movwf	fsr2l,c
 24521  004F3E  0E04               	movlw	high (_Channels+8)
 24522  004F40  20F4               	addwfc	prodh,w,c
 24523  004F42  6EDA               	movwf	fsr2h,c
 24524  004F44  50DE               	movf	postinc2,w,c
 24525  004F46  10DE               	iorwf	postinc2,w,c
 24526  004F48  10DE               	iorwf	postinc2,w,c
 24527  004F4A  10DE               	iorwf	postinc2,w,c
 24528  004F4C  E12E               	bnz	l1136
 24529                           
 24530                           ; BSR set to: 0
 24531  004F4E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24532  004F50  0D0E               	mullw	14
 24533  004F52  0E05               	movlw	low (_Channels+5)
 24534  004F54  24F3               	addwf	prodl,w,c
 24535  004F56  6ED9               	movwf	fsr2l,c
 24536  004F58  0E04               	movlw	high (_Channels+5)
 24537  004F5A  20F4               	addwfc	prodh,w,c
 24538  004F5C  6EDA               	movwf	fsr2h,c
 24539  004F5E  50DF               	movf	223,w,c
 24540  004F60  0B0F               	andlw	15
 24541  004F62  0100               	movlb	0	; () banked
 24542  004F64  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24543  004F66  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24544  004F68  0102               	movlb	2	; () banked
 24545  004F6A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24546  004F6C  E31E               	bnc	l1136
 24547                           
 24548                           ; BSR set to: 2
 24549  004F6E  0100               	movlb	0	; () banked
 24550  004F70  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24551  004F72  0D0E               	mullw	14
 24552  004F74  0E05               	movlw	low (_Channels+5)
 24553  004F76  24F3               	addwf	prodl,w,c
 24554  004F78  6ED9               	movwf	fsr2l,c
 24555  004F7A  0E04               	movlw	high (_Channels+5)
 24556  004F7C  20F4               	addwfc	prodh,w,c
 24557  004F7E  6EDA               	movwf	fsr2h,c
 24558  004F80  38DF               	swapf	223,w,c
 24559  004F82  0B0F               	andlw	15
 24560  004F84  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24561  004F86  0102               	movlb	2	; () banked
 24562  004F88  51DF               	movf	(_loRa+223)& (0+255),w,b
 24563  004F8A  0100               	movlb	0	; () banked
 24564  004F8C  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24565  004F8E  E30D               	bnc	l1136
 24566                           
 24567                           ; BSR set to: 0
 24568                           ;lorawan_eu.c: 791: {
 24569                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24570  004F90  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24571  004F92  E10A               	bnz	l12985
 24572                           
 24573                           ; BSR set to: 0
 24574                           ;lorawan_eu.c: 793: {
 24575                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24576  004F94  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24577  004F96  0D0E               	mullw	14
 24578  004F98  0E0C               	movlw	low (_Channels+12)
 24579  004F9A  24F3               	addwf	prodl,w,c
 24580  004F9C  6ED9               	movwf	fsr2l,c
 24581  004F9E  0E04               	movlw	high (_Channels+12)
 24582  004FA0  20F4               	addwfc	prodh,w,c
 24583  004FA2  6EDA               	movwf	fsr2h,c
 24584  004FA4  04DE               	decf	postinc2,w,c
 24585  004FA6  E101               	bnz	l1136
 24586  004FA8                     l12985:
 24587                           
 24588                           ; BSR set to: 0
 24589                           ;lorawan_eu.c: 795: {
 24590                           ;lorawan_eu.c: 796: randomNumber --;
 24591  004FA8  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24592  004FAA                     l1136:
 24593  004FAA  0100               	movlb	0	; () banked
 24594  004FAC  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24595  004FAE                     l12989:
 24596                           
 24597                           ; BSR set to: 0
 24598  004FAE  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24599  004FB0  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24600  004FB2  E202               	bc	l12993
 24601                           
 24602                           ; BSR set to: 0
 24603  004FB4  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24604  004FB6  E1B4               	bnz	l12973
 24605  004FB8                     l12993:
 24606                           
 24607                           ; BSR set to: 0
 24608                           ;lorawan_eu.c: 802: }
 24609                           ;lorawan_eu.c: 803: }
 24610                           ;lorawan_eu.c: 804: }
 24611                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24612  004FB8  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24613  004FBA  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24614  004FBC  E103               	bnz	l12997
 24615                           
 24616                           ; BSR set to: 0
 24617                           ;lorawan_eu.c: 807: {
 24618                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24619  004FBE  0E09               	movlw	9
 24620  004FC0  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24621                           
 24622                           ;lorawan_eu.c: 809: break;
 24623  004FC2  D002               	goto	l12999
 24624  004FC4                     l12997:
 24625                           
 24626                           ; BSR set to: 0
 24627  004FC4  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24628  004FC6  E1AA               	bnz	l1133
 24629  004FC8                     l12999:
 24630                           
 24631                           ; BSR set to: 0
 24632                           ;lorawan_eu.c: 810: }
 24633                           ;lorawan_eu.c: 811: }
 24634                           ;lorawan_eu.c: 813: if ( i != 0)
 24635  004FC8  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24636  004FCA  E007               	bz	l13003
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;lorawan_eu.c: 814: {
 24640                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24641  004FCC  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24642  004FCE  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24643  004FD2  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24644  004FD6  6EDF               	movwf	indf2,c
 24645                           
 24646                           ;lorawan_eu.c: 816: }
 24647  004FD8  D002               	goto	l1146
 24648  004FDA                     l13003:
 24649                           
 24650                           ; BSR set to: 0
 24651                           ;lorawan_eu.c: 817: else
 24652                           ;lorawan_eu.c: 818: {
 24653                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24654  004FDA  0E09               	movlw	9
 24655  004FDC  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24656  004FDE                     l1146:
 24657                           
 24658                           ; BSR set to: 0
 24659                           ;lorawan_eu.c: 820: }
 24660                           ;lorawan_eu.c: 821: return result;
 24661  004FDE  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24662                           
 24663                           ; BSR set to: 0
 24664  004FE0  0012               	return		;funcret
 24665  004FE2                     __end_of_SearchAvailableChannel:
 24666                           	opt stack 0
 24667                           tosu	equ	0xFFF
 24668                           tosh	equ	0xFFE
 24669                           tosl	equ	0xFFD
 24670                           pclath	equ	0xFFA
 24671                           tblptru	equ	0xFF8
 24672                           tblptrh	equ	0xFF7
 24673                           tblptrl	equ	0xFF6
 24674                           tablat	equ	0xFF5
 24675                           prodh	equ	0xFF4
 24676                           prodl	equ	0xFF3
 24677                           intcon	equ	0xFF2
 24678                           intcon2	equ	0xFF1
 24679                           intcon3	equ	0xFF0
 24680                           indf0	equ	0xFEF
 24681                           postinc0	equ	0xFEE
 24682                           fsr0h	equ	0xFEA
 24683                           fsr0l	equ	0xFE9
 24684                           wreg	equ	0xFE8
 24685                           postinc1	equ	0xFE6
 24686                           postdec1	equ	0xFE5
 24687                           plusw1	equ	0xFE3
 24688                           fsr1h	equ	0xFE2
 24689                           fsr1l	equ	0xFE1
 24690                           indf2	equ	0xFDF
 24691                           postinc2	equ	0xFDE
 24692                           postdec2	equ	0xFDD
 24693                           plusw2	equ	0xFDB
 24694                           fsr2h	equ	0xFDA
 24695                           fsr2l	equ	0xFD9
 24696                           status	equ	0xFD8
 24697                           
 24698 ;; *************** function _ConfigureRadioTx *****************
 24699 ;; Defined at:
 24700 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24701 ;; Parameters:    Size  Location     Type
 24702 ;;  dataRate        1    wreg     unsigned char 
 24703 ;;  freq            4   22[BANK0 ] unsigned long 
 24704 ;; Auto vars:     Size  Location     Type
 24705 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24706 ;;  txPower         1   27[BANK0 ] char 
 24707 ;; Return value:  Size  Location     Type
 24708 ;;                  1    wreg      void 
 24709 ;; Registers used:
 24710 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24711 ;; Tracked objects:
 24712 ;;		On entry : F/2
 24713 ;;		On exit  : 0/0
 24714 ;;		Unchanged: 0/0
 24715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24717 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24719 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24720 ;;Total ram usage:        6 bytes
 24721 ;; Hardware stack levels used:    1
 24722 ;; Hardware stack levels required when called:   10
 24723 ;; This function calls:
 24724 ;;		_ConfigureRadio
 24725 ;;		_RADIO_SetCRC
 24726 ;;		_RADIO_SetIQInverted
 24727 ;;		_RADIO_SetOutputPower
 24728 ;; This function is called by:
 24729 ;;		_SelectChannelForTransmission
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733                           	psect	text129
 24734  006BF8                     __ptext129:
 24735                           	opt stack 0
 24736  006BF8                     _ConfigureRadioTx:
 24737                           	opt stack 17
 24738                           
 24739                           ; BSR set to: 0
 24740                           ;incstack = 0
 24741                           ;ConfigureRadioTx@dataRate stored from wreg
 24742  006BF8  0100               	movlb	0	; () banked
 24743  006BFA  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24744                           
 24745                           ;lorawan_eu.c: 1257: int8_t txPower;
 24746                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24747  006BFC  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24748  006C00  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24749  006C04  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24750  006C08  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24751  006C0C  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24752  006C0E  ECBE  F02D         	call	_ConfigureRadio
 24753                           
 24754                           ;lorawan_eu.c: 1262: {
 24755                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24756  006C12  0EA2               	movlw	low _txPower868
 24757  006C14  0102               	movlb	2	; () banked
 24758  006C16  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24759  006C18  6EF6               	movwf	tblptrl,c
 24760  006C1A  6AF7               	clrf	tblptrh,c
 24761  006C1C  0EFF               	movlw	high _txPower868
 24762  006C1E  22F7               	addwfc	tblptrh,f,c
 24763  006C20                     	if	1	;There are 3 active tblptr bytes
 24764  006C20  6AF8               	clrf	tblptru,c
 24765  006C22  0E00               	movlw	low (__mediumconst shr (0+16))
 24766  006C24  22F8               	addwfc	tblptru,f,c
 24767  006C26                     	endif
 24768  006C26  0008               	tblrd		*
 24769  006C28  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24770                           
 24771                           ; BSR set to: 2
 24772                           ;lorawan_eu.c: 1268: }
 24773                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24774                           
 24775                           ;lorawan_eu.c: 1264: }
 24776  006C2C  0100               	movlb	0	; () banked
 24777  006C2E  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24778  006C30  EC23  F03C         	call	_RADIO_SetOutputPower
 24779                           
 24780                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24781  006C34  0E01               	movlw	1
 24782  006C36  ECFA  F03B         	call	_RADIO_SetCRC
 24783                           
 24784                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24785  006C3A  0E00               	movlw	0
 24786  006C3C  EFF5  F03B         	goto	_RADIO_SetIQInverted
 24787  006C40                     __end_of_ConfigureRadioTx:
 24788                           	opt stack 0
 24789                           tosu	equ	0xFFF
 24790                           tosh	equ	0xFFE
 24791                           tosl	equ	0xFFD
 24792                           pclath	equ	0xFFA
 24793                           tblptru	equ	0xFF8
 24794                           tblptrh	equ	0xFF7
 24795                           tblptrl	equ	0xFF6
 24796                           tablat	equ	0xFF5
 24797                           prodh	equ	0xFF4
 24798                           prodl	equ	0xFF3
 24799                           intcon	equ	0xFF2
 24800                           intcon2	equ	0xFF1
 24801                           intcon3	equ	0xFF0
 24802                           indf0	equ	0xFEF
 24803                           postinc0	equ	0xFEE
 24804                           fsr0h	equ	0xFEA
 24805                           fsr0l	equ	0xFE9
 24806                           wreg	equ	0xFE8
 24807                           postinc1	equ	0xFE6
 24808                           postdec1	equ	0xFE5
 24809                           plusw1	equ	0xFE3
 24810                           fsr1h	equ	0xFE2
 24811                           fsr1l	equ	0xFE1
 24812                           indf2	equ	0xFDF
 24813                           postinc2	equ	0xFDE
 24814                           postdec2	equ	0xFDD
 24815                           plusw2	equ	0xFDB
 24816                           fsr2h	equ	0xFDA
 24817                           fsr2l	equ	0xFD9
 24818                           status	equ	0xFD8
 24819                           
 24820 ;; *************** function _RADIO_SetOutputPower *****************
 24821 ;; Defined at:
 24822 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24823 ;; Parameters:    Size  Location     Type
 24824 ;;  power           1    wreg     char 
 24825 ;; Auto vars:     Size  Location     Type
 24826 ;;  power           1    4[BANK0 ] char 
 24827 ;; Return value:  Size  Location     Type
 24828 ;;                  1    wreg      void 
 24829 ;; Registers used:
 24830 ;;		wreg
 24831 ;; Tracked objects:
 24832 ;;		On entry : F/0
 24833 ;;		On exit  : 0/0
 24834 ;;		Unchanged: 0/0
 24835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24839 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24840 ;;Total ram usage:        1 bytes
 24841 ;; Hardware stack levels used:    1
 24842 ;; Hardware stack levels required when called:    7
 24843 ;; This function calls:
 24844 ;;		Nothing
 24845 ;; This function is called by:
 24846 ;;		_ConfigureRadioTx
 24847 ;; This function uses a non-reentrant model
 24848 ;;
 24849                           
 24850                           	psect	text130
 24851  007846                     __ptext130:
 24852                           	opt stack 0
 24853  007846                     _RADIO_SetOutputPower:
 24854                           	opt stack 19
 24855                           
 24856                           ;incstack = 0
 24857                           ;RADIO_SetOutputPower@power stored from wreg
 24858  007846  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 24859                           
 24860                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 24861  007848  C064  F199         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 24862  00784C  0012               	return		;funcret
 24863  00784E                     __end_of_RADIO_SetOutputPower:
 24864                           	opt stack 0
 24865                           tosu	equ	0xFFF
 24866                           tosh	equ	0xFFE
 24867                           tosl	equ	0xFFD
 24868                           pclath	equ	0xFFA
 24869                           tblptru	equ	0xFF8
 24870                           tblptrh	equ	0xFF7
 24871                           tblptrl	equ	0xFF6
 24872                           tablat	equ	0xFF5
 24873                           prodh	equ	0xFF4
 24874                           prodl	equ	0xFF3
 24875                           intcon	equ	0xFF2
 24876                           intcon2	equ	0xFF1
 24877                           intcon3	equ	0xFF0
 24878                           indf0	equ	0xFEF
 24879                           postinc0	equ	0xFEE
 24880                           fsr0h	equ	0xFEA
 24881                           fsr0l	equ	0xFE9
 24882                           wreg	equ	0xFE8
 24883                           postinc1	equ	0xFE6
 24884                           postdec1	equ	0xFE5
 24885                           plusw1	equ	0xFE3
 24886                           fsr1h	equ	0xFE2
 24887                           fsr1l	equ	0xFE1
 24888                           indf2	equ	0xFDF
 24889                           postinc2	equ	0xFDE
 24890                           postdec2	equ	0xFDD
 24891                           plusw2	equ	0xFDB
 24892                           fsr2h	equ	0xFDA
 24893                           fsr2l	equ	0xFD9
 24894                           status	equ	0xFD8
 24895                           
 24896 ;; *************** function _RADIO_SetIQInverted *****************
 24897 ;; Defined at:
 24898 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24899 ;; Parameters:    Size  Location     Type
 24900 ;;  iqInverted      1    wreg     unsigned char 
 24901 ;; Auto vars:     Size  Location     Type
 24902 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 24903 ;; Return value:  Size  Location     Type
 24904 ;;                  1    wreg      void 
 24905 ;; Registers used:
 24906 ;;		wreg
 24907 ;; Tracked objects:
 24908 ;;		On entry : 0/0
 24909 ;;		On exit  : 0/0
 24910 ;;		Unchanged: 0/0
 24911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24916 ;;Total ram usage:        1 bytes
 24917 ;; Hardware stack levels used:    1
 24918 ;; Hardware stack levels required when called:    7
 24919 ;; This function calls:
 24920 ;;		Nothing
 24921 ;; This function is called by:
 24922 ;;		_ConfigureRadioTx
 24923 ;;		_ConfigureRadioRx
 24924 ;; This function uses a non-reentrant model
 24925 ;;
 24926                           
 24927                           	psect	text131
 24928  0077EA                     __ptext131:
 24929                           	opt stack 0
 24930  0077EA                     _RADIO_SetIQInverted:
 24931                           	opt stack 19
 24932                           
 24933                           ;incstack = 0
 24934                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 24935  0077EA  0100               	movlb	0	; () banked
 24936  0077EC  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 24937                           
 24938                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 24939  0077EE  C064  F19E         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 24940  0077F2  0012               	return		;funcret
 24941  0077F4                     __end_of_RADIO_SetIQInverted:
 24942                           	opt stack 0
 24943                           tosu	equ	0xFFF
 24944                           tosh	equ	0xFFE
 24945                           tosl	equ	0xFFD
 24946                           pclath	equ	0xFFA
 24947                           tblptru	equ	0xFF8
 24948                           tblptrh	equ	0xFF7
 24949                           tblptrl	equ	0xFF6
 24950                           tablat	equ	0xFF5
 24951                           prodh	equ	0xFF4
 24952                           prodl	equ	0xFF3
 24953                           intcon	equ	0xFF2
 24954                           intcon2	equ	0xFF1
 24955                           intcon3	equ	0xFF0
 24956                           indf0	equ	0xFEF
 24957                           postinc0	equ	0xFEE
 24958                           fsr0h	equ	0xFEA
 24959                           fsr0l	equ	0xFE9
 24960                           wreg	equ	0xFE8
 24961                           postinc1	equ	0xFE6
 24962                           postdec1	equ	0xFE5
 24963                           plusw1	equ	0xFE3
 24964                           fsr1h	equ	0xFE2
 24965                           fsr1l	equ	0xFE1
 24966                           indf2	equ	0xFDF
 24967                           postinc2	equ	0xFDE
 24968                           postdec2	equ	0xFDD
 24969                           plusw2	equ	0xFDB
 24970                           fsr2h	equ	0xFDA
 24971                           fsr2l	equ	0xFD9
 24972                           status	equ	0xFD8
 24973                           
 24974 ;; *************** function _RADIO_SetCRC *****************
 24975 ;; Defined at:
 24976 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24977 ;; Parameters:    Size  Location     Type
 24978 ;;  crc             1    wreg     unsigned char 
 24979 ;; Auto vars:     Size  Location     Type
 24980 ;;  crc             1    4[BANK0 ] unsigned char 
 24981 ;; Return value:  Size  Location     Type
 24982 ;;                  1    wreg      void 
 24983 ;; Registers used:
 24984 ;;		wreg
 24985 ;; Tracked objects:
 24986 ;;		On entry : 0/0
 24987 ;;		On exit  : 0/0
 24988 ;;		Unchanged: 0/0
 24989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24993 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24994 ;;Total ram usage:        1 bytes
 24995 ;; Hardware stack levels used:    1
 24996 ;; Hardware stack levels required when called:    7
 24997 ;; This function calls:
 24998 ;;		Nothing
 24999 ;; This function is called by:
 25000 ;;		_ConfigureRadioTx
 25001 ;;		_ConfigureRadioRx
 25002 ;; This function uses a non-reentrant model
 25003 ;;
 25004                           
 25005                           	psect	text132
 25006  0077F4                     __ptext132:
 25007                           	opt stack 0
 25008  0077F4                     _RADIO_SetCRC:
 25009                           	opt stack 19
 25010                           
 25011                           ;incstack = 0
 25012                           ;RADIO_SetCRC@crc stored from wreg
 25013  0077F4  0100               	movlb	0	; () banked
 25014  0077F6  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 25015                           
 25016                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 25017  0077F8  C064  F19A         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25018  0077FC  0012               	return		;funcret
 25019  0077FE                     __end_of_RADIO_SetCRC:
 25020                           	opt stack 0
 25021                           tosu	equ	0xFFF
 25022                           tosh	equ	0xFFE
 25023                           tosl	equ	0xFFD
 25024                           pclath	equ	0xFFA
 25025                           tblptru	equ	0xFF8
 25026                           tblptrh	equ	0xFF7
 25027                           tblptrl	equ	0xFF6
 25028                           tablat	equ	0xFF5
 25029                           prodh	equ	0xFF4
 25030                           prodl	equ	0xFF3
 25031                           intcon	equ	0xFF2
 25032                           intcon2	equ	0xFF1
 25033                           intcon3	equ	0xFF0
 25034                           indf0	equ	0xFEF
 25035                           postinc0	equ	0xFEE
 25036                           fsr0h	equ	0xFEA
 25037                           fsr0l	equ	0xFE9
 25038                           wreg	equ	0xFE8
 25039                           postinc1	equ	0xFE6
 25040                           postdec1	equ	0xFE5
 25041                           plusw1	equ	0xFE3
 25042                           fsr1h	equ	0xFE2
 25043                           fsr1l	equ	0xFE1
 25044                           indf2	equ	0xFDF
 25045                           postinc2	equ	0xFDE
 25046                           postdec2	equ	0xFDD
 25047                           plusw2	equ	0xFDB
 25048                           fsr2h	equ	0xFDA
 25049                           fsr2l	equ	0xFD9
 25050                           status	equ	0xFD8
 25051                           
 25052 ;; *************** function _ConfigureRadio *****************
 25053 ;; Defined at:
 25054 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25055 ;; Parameters:    Size  Location     Type
 25056 ;;  dataRate        1    wreg     unsigned char 
 25057 ;;  freq            4   17[BANK0 ] unsigned long 
 25058 ;; Auto vars:     Size  Location     Type
 25059 ;;  dataRate        1   21[BANK0 ] unsigned char 
 25060 ;; Return value:  Size  Location     Type
 25061 ;;                  1    wreg      void 
 25062 ;; Registers used:
 25063 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25064 ;; Tracked objects:
 25065 ;;		On entry : F/0
 25066 ;;		On exit  : 0/0
 25067 ;;		Unchanged: 0/0
 25068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25069 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25072 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25073 ;;Total ram usage:        5 bytes
 25074 ;; Hardware stack levels used:    1
 25075 ;; Hardware stack levels required when called:    9
 25076 ;; This function calls:
 25077 ;;		_RADIO_SetBandwidth
 25078 ;;		_RADIO_SetChannelFrequency
 25079 ;;		_RADIO_SetFSKSyncWord
 25080 ;;		_RADIO_SetFrequencyHopPeriod
 25081 ;;		_RADIO_SetLoRaSyncWord
 25082 ;;		_RADIO_SetModulation
 25083 ;;		_RADIO_SetSpreadingFactor
 25084 ;; This function is called by:
 25085 ;;		_ConfigureRadioTx
 25086 ;;		_ConfigureRadioRx
 25087 ;; This function uses a non-reentrant model
 25088 ;;
 25089                           
 25090                           	psect	text133
 25091  005B7C                     __ptext133:
 25092                           	opt stack 0
 25093  005B7C                     _ConfigureRadio:
 25094                           	opt stack 17
 25095                           
 25096                           ;incstack = 0
 25097                           ;ConfigureRadio@dataRate stored from wreg
 25098  005B7C  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 25099                           
 25100                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 25101  005B7E  0E75               	movlw	low _modulation
 25102  005B80  0100               	movlb	0	; () banked
 25103  005B82  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25104  005B84  6EF6               	movwf	tblptrl,c
 25105  005B86  6AF7               	clrf	tblptrh,c
 25106  005B88  0EFF               	movlw	high _modulation
 25107  005B8A  22F7               	addwfc	tblptrh,f,c
 25108  005B8C                     	if	1	;There are 3 active tblptr bytes
 25109  005B8C  6AF8               	clrf	tblptru,c
 25110  005B8E  0E00               	movlw	low (__mediumconst shr (0+16))
 25111  005B90  22F8               	addwfc	tblptru,f,c
 25112  005B92                     	endif
 25113  005B92  0008               	tblrd		*
 25114  005B94  50F5               	movf	tablat,w,c
 25115  005B96  EC2B  F03C         	call	_RADIO_SetModulation
 25116                           
 25117                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 25118  005B9A  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 25119  005B9E  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 25120  005BA2  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 25121  005BA6  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 25122  005BAA  ECD2  F02E         	call	_RADIO_SetChannelFrequency	;wreg free
 25123                           
 25124                           ; BSR set to: 0
 25125                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 25126  005BAE  0E00               	movlw	0
 25127  005BB0  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 25128  005BB2  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 25129  005BB4  ECFF  F03B         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 25130                           
 25131                           ; BSR set to: 0
 25132                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 25133  005BB8  0E07               	movlw	7
 25134  005BBA  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 25135  005BBC  D01F               	goto	l12637
 25136                           
 25137                           ; BSR set to: 0
 25138                           ;lorawan_eu.c: 870: {
 25139                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 25140  005BBE  0E9B               	movlw	low _spreadingFactor
 25141  005BC0  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25142  005BC2  6EF6               	movwf	tblptrl,c
 25143  005BC4  6AF7               	clrf	tblptrh,c
 25144  005BC6  0EFF               	movlw	high _spreadingFactor
 25145  005BC8  22F7               	addwfc	tblptrh,f,c
 25146  005BCA                     	if	1	;There are 3 active tblptr bytes
 25147  005BCA  6AF8               	clrf	tblptru,c
 25148  005BCC  0E00               	movlw	low (__mediumconst shr (0+16))
 25149  005BCE  22F8               	addwfc	tblptru,f,c
 25150  005BD0                     	endif
 25151  005BD0  0008               	tblrd		*
 25152  005BD2  50F5               	movf	tablat,w,c
 25153  005BD4  EC27  F03C         	call	_RADIO_SetSpreadingFactor
 25154                           
 25155                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 25156  005BD8  0E8D               	movlw	low _bandwidth
 25157  005BDA  0100               	movlb	0	; () banked
 25158  005BDC  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25159  005BDE  6EF6               	movwf	tblptrl,c
 25160  005BE0  6AF7               	clrf	tblptrh,c
 25161  005BE2  0EFF               	movlw	high _bandwidth
 25162  005BE4  22F7               	addwfc	tblptrh,f,c
 25163  005BE6                     	if	1	;There are 3 active tblptr bytes
 25164  005BE6  6AF8               	clrf	tblptru,c
 25165  005BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 25166  005BEA  22F8               	addwfc	tblptru,f,c
 25167  005BEC                     	endif
 25168  005BEC  0008               	tblrd		*
 25169  005BEE  50F5               	movf	tablat,w,c
 25170  005BF0  EC2F  F03C         	call	_RADIO_SetBandwidth
 25171                           
 25172                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25173  005BF4  0102               	movlb	2	; () banked
 25174  005BF6  51F4               	movf	(_loRa+244)& (0+255),w,b
 25175  005BF8  EF04  F03C         	goto	_RADIO_SetLoRaSyncWord
 25176  005BFC                     l12637:
 25177                           
 25178                           ; BSR set to: 0
 25179                           ;lorawan_eu.c: 876: else
 25180                           ;lorawan_eu.c: 877: {
 25181                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25182  005BFC  0EFC               	movlw	low _FskSyncWordBuff
 25183  005BFE  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25184  005C00  0EFF               	movlw	high _FskSyncWordBuff
 25185  005C02  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25186  005C04  0E03               	movlw	3
 25187  005C06  EF89  F038         	goto	_RADIO_SetFSKSyncWord
 25188  005C0A                     __end_of_ConfigureRadio:
 25189                           	opt stack 0
 25190                           tosu	equ	0xFFF
 25191                           tosh	equ	0xFFE
 25192                           tosl	equ	0xFFD
 25193                           pclath	equ	0xFFA
 25194                           tblptru	equ	0xFF8
 25195                           tblptrh	equ	0xFF7
 25196                           tblptrl	equ	0xFF6
 25197                           tablat	equ	0xFF5
 25198                           prodh	equ	0xFF4
 25199                           prodl	equ	0xFF3
 25200                           intcon	equ	0xFF2
 25201                           intcon2	equ	0xFF1
 25202                           intcon3	equ	0xFF0
 25203                           indf0	equ	0xFEF
 25204                           postinc0	equ	0xFEE
 25205                           fsr0h	equ	0xFEA
 25206                           fsr0l	equ	0xFE9
 25207                           wreg	equ	0xFE8
 25208                           postinc1	equ	0xFE6
 25209                           postdec1	equ	0xFE5
 25210                           plusw1	equ	0xFE3
 25211                           fsr1h	equ	0xFE2
 25212                           fsr1l	equ	0xFE1
 25213                           indf2	equ	0xFDF
 25214                           postinc2	equ	0xFDE
 25215                           postdec2	equ	0xFDD
 25216                           plusw2	equ	0xFDB
 25217                           fsr2h	equ	0xFDA
 25218                           fsr2l	equ	0xFD9
 25219                           status	equ	0xFD8
 25220                           
 25221 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25222 ;; Defined at:
 25223 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25224 ;; Parameters:    Size  Location     Type
 25225 ;;  spreadingFac    1    wreg     enum E7761
 25226 ;; Auto vars:     Size  Location     Type
 25227 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 25228 ;; Return value:  Size  Location     Type
 25229 ;;                  1    wreg      void 
 25230 ;; Registers used:
 25231 ;;		wreg
 25232 ;; Tracked objects:
 25233 ;;		On entry : F/0
 25234 ;;		On exit  : 0/0
 25235 ;;		Unchanged: 0/0
 25236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25240 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25241 ;;Total ram usage:        1 bytes
 25242 ;; Hardware stack levels used:    1
 25243 ;; Hardware stack levels required when called:    7
 25244 ;; This function calls:
 25245 ;;		Nothing
 25246 ;; This function is called by:
 25247 ;;		_ConfigureRadio
 25248 ;; This function uses a non-reentrant model
 25249 ;;
 25250                           
 25251                           	psect	text134
 25252  00784E                     __ptext134:
 25253                           	opt stack 0
 25254  00784E                     _RADIO_SetSpreadingFactor:
 25255                           	opt stack 18
 25256                           
 25257                           ;incstack = 0
 25258                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25259  00784E  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25260                           
 25261                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25262  007850  C064  F197         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25263  007854  0012               	return		;funcret
 25264  007856                     __end_of_RADIO_SetSpreadingFactor:
 25265                           	opt stack 0
 25266                           tosu	equ	0xFFF
 25267                           tosh	equ	0xFFE
 25268                           tosl	equ	0xFFD
 25269                           pclath	equ	0xFFA
 25270                           tblptru	equ	0xFF8
 25271                           tblptrh	equ	0xFF7
 25272                           tblptrl	equ	0xFF6
 25273                           tablat	equ	0xFF5
 25274                           prodh	equ	0xFF4
 25275                           prodl	equ	0xFF3
 25276                           intcon	equ	0xFF2
 25277                           intcon2	equ	0xFF1
 25278                           intcon3	equ	0xFF0
 25279                           indf0	equ	0xFEF
 25280                           postinc0	equ	0xFEE
 25281                           fsr0h	equ	0xFEA
 25282                           fsr0l	equ	0xFE9
 25283                           wreg	equ	0xFE8
 25284                           postinc1	equ	0xFE6
 25285                           postdec1	equ	0xFE5
 25286                           plusw1	equ	0xFE3
 25287                           fsr1h	equ	0xFE2
 25288                           fsr1l	equ	0xFE1
 25289                           indf2	equ	0xFDF
 25290                           postinc2	equ	0xFDE
 25291                           postdec2	equ	0xFDD
 25292                           plusw2	equ	0xFDB
 25293                           fsr2h	equ	0xFDA
 25294                           fsr2l	equ	0xFD9
 25295                           status	equ	0xFD8
 25296                           
 25297 ;; *************** function _RADIO_SetModulation *****************
 25298 ;; Defined at:
 25299 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25300 ;; Parameters:    Size  Location     Type
 25301 ;;  modulation      1    wreg     enum E7751
 25302 ;; Auto vars:     Size  Location     Type
 25303 ;;  modulation      1    4[BANK0 ] enum E7751
 25304 ;; Return value:  Size  Location     Type
 25305 ;;                  1    wreg      void 
 25306 ;; Registers used:
 25307 ;;		wreg
 25308 ;; Tracked objects:
 25309 ;;		On entry : F/0
 25310 ;;		On exit  : 0/0
 25311 ;;		Unchanged: 0/0
 25312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25316 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25317 ;;Total ram usage:        1 bytes
 25318 ;; Hardware stack levels used:    1
 25319 ;; Hardware stack levels required when called:    7
 25320 ;; This function calls:
 25321 ;;		Nothing
 25322 ;; This function is called by:
 25323 ;;		_ConfigureRadio
 25324 ;; This function uses a non-reentrant model
 25325 ;;
 25326                           
 25327                           	psect	text135
 25328  007856                     __ptext135:
 25329                           	opt stack 0
 25330  007856                     _RADIO_SetModulation:
 25331                           	opt stack 18
 25332                           
 25333                           ;incstack = 0
 25334                           ;RADIO_SetModulation@modulation stored from wreg
 25335  007856  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25336                           
 25337                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25338  007858  C064  F196         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25339  00785C  0012               	return		;funcret
 25340  00785E                     __end_of_RADIO_SetModulation:
 25341                           	opt stack 0
 25342                           tosu	equ	0xFFF
 25343                           tosh	equ	0xFFE
 25344                           tosl	equ	0xFFD
 25345                           pclath	equ	0xFFA
 25346                           tblptru	equ	0xFF8
 25347                           tblptrh	equ	0xFF7
 25348                           tblptrl	equ	0xFF6
 25349                           tablat	equ	0xFF5
 25350                           prodh	equ	0xFF4
 25351                           prodl	equ	0xFF3
 25352                           intcon	equ	0xFF2
 25353                           intcon2	equ	0xFF1
 25354                           intcon3	equ	0xFF0
 25355                           indf0	equ	0xFEF
 25356                           postinc0	equ	0xFEE
 25357                           fsr0h	equ	0xFEA
 25358                           fsr0l	equ	0xFE9
 25359                           wreg	equ	0xFE8
 25360                           postinc1	equ	0xFE6
 25361                           postdec1	equ	0xFE5
 25362                           plusw1	equ	0xFE3
 25363                           fsr1h	equ	0xFE2
 25364                           fsr1l	equ	0xFE1
 25365                           indf2	equ	0xFDF
 25366                           postinc2	equ	0xFDE
 25367                           postdec2	equ	0xFDD
 25368                           plusw2	equ	0xFDB
 25369                           fsr2h	equ	0xFDA
 25370                           fsr2l	equ	0xFD9
 25371                           status	equ	0xFD8
 25372                           
 25373 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25374 ;; Defined at:
 25375 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25376 ;; Parameters:    Size  Location     Type
 25377 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25378 ;; Auto vars:     Size  Location     Type
 25379 ;;		None
 25380 ;; Return value:  Size  Location     Type
 25381 ;;                  1    wreg      void 
 25382 ;; Registers used:
 25383 ;;		None
 25384 ;; Tracked objects:
 25385 ;;		On entry : F/0
 25386 ;;		On exit  : F/0
 25387 ;;		Unchanged: F/0
 25388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25393 ;;Total ram usage:        2 bytes
 25394 ;; Hardware stack levels used:    1
 25395 ;; Hardware stack levels required when called:    7
 25396 ;; This function calls:
 25397 ;;		Nothing
 25398 ;; This function is called by:
 25399 ;;		_ConfigureRadio
 25400 ;; This function uses a non-reentrant model
 25401 ;;
 25402                           
 25403                           	psect	text136
 25404  0077FE                     __ptext136:
 25405                           	opt stack 0
 25406  0077FE                     _RADIO_SetFrequencyHopPeriod:
 25407                           	opt stack 18
 25408                           
 25409                           ; BSR set to: 0
 25410                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25411                           
 25412                           ;incstack = 0
 25413  0077FE  C064  F19C         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25414  007802  C065  F19D         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25415                           
 25416                           ; BSR set to: 0
 25417  007806  0012               	return		;funcret
 25418  007808                     __end_of_RADIO_SetFrequencyHopPeriod:
 25419                           	opt stack 0
 25420                           tosu	equ	0xFFF
 25421                           tosh	equ	0xFFE
 25422                           tosl	equ	0xFFD
 25423                           pclath	equ	0xFFA
 25424                           tblptru	equ	0xFF8
 25425                           tblptrh	equ	0xFF7
 25426                           tblptrl	equ	0xFF6
 25427                           tablat	equ	0xFF5
 25428                           prodh	equ	0xFF4
 25429                           prodl	equ	0xFF3
 25430                           intcon	equ	0xFF2
 25431                           intcon2	equ	0xFF1
 25432                           intcon3	equ	0xFF0
 25433                           indf0	equ	0xFEF
 25434                           postinc0	equ	0xFEE
 25435                           fsr0h	equ	0xFEA
 25436                           fsr0l	equ	0xFE9
 25437                           wreg	equ	0xFE8
 25438                           postinc1	equ	0xFE6
 25439                           postdec1	equ	0xFE5
 25440                           plusw1	equ	0xFE3
 25441                           fsr1h	equ	0xFE2
 25442                           fsr1l	equ	0xFE1
 25443                           indf2	equ	0xFDF
 25444                           postinc2	equ	0xFDE
 25445                           postdec2	equ	0xFDD
 25446                           plusw2	equ	0xFDB
 25447                           fsr2h	equ	0xFDA
 25448                           fsr2l	equ	0xFD9
 25449                           status	equ	0xFD8
 25450                           
 25451 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25452 ;; Defined at:
 25453 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25454 ;; Parameters:    Size  Location     Type
 25455 ;;  syncWordLen     1    wreg     unsigned char 
 25456 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25457 ;;		 -> FskSyncWordBuff(3), 
 25458 ;; Auto vars:     Size  Location     Type
 25459 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25460 ;; Return value:  Size  Location     Type
 25461 ;;                  1    wreg      void 
 25462 ;; Registers used:
 25463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25464 ;; Tracked objects:
 25465 ;;		On entry : F/0
 25466 ;;		On exit  : F/0
 25467 ;;		Unchanged: 0/0
 25468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25472 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25473 ;;Total ram usage:        3 bytes
 25474 ;; Hardware stack levels used:    1
 25475 ;; Hardware stack levels required when called:    8
 25476 ;; This function calls:
 25477 ;;		_memcpy
 25478 ;; This function is called by:
 25479 ;;		_ConfigureRadio
 25480 ;; This function uses a non-reentrant model
 25481 ;;
 25482                           
 25483                           	psect	text137
 25484  007112                     __ptext137:
 25485                           	opt stack 0
 25486  007112                     _RADIO_SetFSKSyncWord:
 25487                           	opt stack 17
 25488                           
 25489                           ; BSR set to: 0
 25490                           ;incstack = 0
 25491                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25492  007112  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25493                           
 25494                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25495  007114  0E08               	movlw	8
 25496  007116  0100               	movlb	0	; () banked
 25497  007118  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25498  00711A  D001               	goto	l12343
 25499                           
 25500                           ; BSR set to: 0
 25501                           ;radio_driver_SX1276.c: 1627: {
 25502                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25503  00711C  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25504  00711E                     l12343:
 25505                           
 25506                           ; BSR set to: 0
 25507                           ;radio_driver_SX1276.c: 1629: }
 25508                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25509  00711E  0E8D               	movlw	low (_RadioConfiguration+15)
 25510  007120  6F64               	movwf	memcpy@d1& (0+255),b
 25511  007122  0E01               	movlw	high (_RadioConfiguration+15)
 25512  007124  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25513  007126  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25514  00712A  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25515  00712E  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25516  007132  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25517  007134  EC01  F034         	call	_memcpy	;wreg free
 25518                           
 25519                           ; BSR set to: 0
 25520                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25521  007138  C070  F195         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25522                           
 25523                           ; BSR set to: 0
 25524  00713C  0012               	return		;funcret
 25525  00713E                     __end_of_RADIO_SetFSKSyncWord:
 25526                           	opt stack 0
 25527                           tosu	equ	0xFFF
 25528                           tosh	equ	0xFFE
 25529                           tosl	equ	0xFFD
 25530                           pclath	equ	0xFFA
 25531                           tblptru	equ	0xFF8
 25532                           tblptrh	equ	0xFF7
 25533                           tblptrl	equ	0xFF6
 25534                           tablat	equ	0xFF5
 25535                           prodh	equ	0xFF4
 25536                           prodl	equ	0xFF3
 25537                           intcon	equ	0xFF2
 25538                           intcon2	equ	0xFF1
 25539                           intcon3	equ	0xFF0
 25540                           indf0	equ	0xFEF
 25541                           postinc0	equ	0xFEE
 25542                           fsr0h	equ	0xFEA
 25543                           fsr0l	equ	0xFE9
 25544                           wreg	equ	0xFE8
 25545                           postinc1	equ	0xFE6
 25546                           postdec1	equ	0xFE5
 25547                           plusw1	equ	0xFE3
 25548                           fsr1h	equ	0xFE2
 25549                           fsr1l	equ	0xFE1
 25550                           indf2	equ	0xFDF
 25551                           postinc2	equ	0xFDE
 25552                           postdec2	equ	0xFDD
 25553                           plusw2	equ	0xFDB
 25554                           fsr2h	equ	0xFDA
 25555                           fsr2l	equ	0xFD9
 25556                           status	equ	0xFD8
 25557                           
 25558 ;; *************** function _RADIO_SetChannelFrequency *****************
 25559 ;; Defined at:
 25560 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25561 ;; Parameters:    Size  Location     Type
 25562 ;;  frequency       4    4[BANK0 ] unsigned long 
 25563 ;; Auto vars:     Size  Location     Type
 25564 ;;		None
 25565 ;; Return value:  Size  Location     Type
 25566 ;;                  2    4[BANK0 ] enum E7805
 25567 ;; Registers used:
 25568 ;;		wreg, status,2, status,0
 25569 ;; Tracked objects:
 25570 ;;		On entry : 0/0
 25571 ;;		On exit  : F/0
 25572 ;;		Unchanged: 0/0
 25573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25578 ;;Total ram usage:        4 bytes
 25579 ;; Hardware stack levels used:    1
 25580 ;; Hardware stack levels required when called:    7
 25581 ;; This function calls:
 25582 ;;		Nothing
 25583 ;; This function is called by:
 25584 ;;		_ConfigureRadio
 25585 ;; This function uses a non-reentrant model
 25586 ;;
 25587                           
 25588                           	psect	text138
 25589  005DA4                     __ptext138:
 25590                           	opt stack 0
 25591  005DA4                     _RADIO_SetChannelFrequency:
 25592                           	opt stack 18
 25593                           
 25594                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25595                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25596                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25597                           
 25598                           ; BSR set to: 0
 25599                           ;incstack = 0
 25600  005DA4  0E40               	movlw	64
 25601  005DA6  0100               	movlb	0	; () banked
 25602  005DA8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25603  005DAA  0E74               	movlw	116
 25604  005DAC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25605  005DAE  0E2A               	movlw	42
 25606  005DB0  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25607  005DB2  0E08               	movlw	8
 25608  005DB4  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25609  005DB6  E309               	bnc	l12323
 25610                           
 25611                           ; BSR set to: 0
 25612  005DB8  0EC1               	movlw	193
 25613  005DBA  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25614  005DBC  0E49               	movlw	73
 25615  005DBE  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25616  005DC0  0E6E               	movlw	110
 25617  005DC2  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25618  005DC4  0E0A               	movlw	10
 25619  005DC6  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25620  005DC8  E325               	bnc	l690
 25621  005DCA                     l12323:
 25622                           
 25623                           ; BSR set to: 0
 25624  005DCA  0E80               	movlw	128
 25625  005DCC  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25626  005DCE  0E1A               	movlw	26
 25627  005DD0  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25628  005DD2  0E70               	movlw	112
 25629  005DD4  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25630  005DD6  0E18               	movlw	24
 25631  005DD8  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25632  005DDA  E309               	bnc	l12327
 25633                           
 25634                           ; BSR set to: 0
 25635  005DDC  0E41               	movlw	65
 25636  005DDE  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25637  005DE0  0EDD               	movlw	221
 25638  005DE2  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25639  005DE4  0E4A               	movlw	74
 25640  005DE6  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25641  005DE8  0E1F               	movlw	31
 25642  005DEA  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25643  005DEC  E313               	bnc	l690
 25644  005DEE                     l12327:
 25645                           
 25646                           ; BSR set to: 0
 25647  005DEE  0E80               	movlw	128
 25648  005DF0  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25649  005DF2  0E13               	movlw	19
 25650  005DF4  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25651  005DF6  0E61               	movlw	97
 25652  005DF8  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25653  005DFA  0E33               	movlw	51
 25654  005DFC  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25655  005DFE  A0D8               	btfss	status,0,c
 25656  005E00  0012               	return	
 25657                           
 25658                           ; BSR set to: 0
 25659  005E02  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25660  005E04  0EF7               	movlw	247
 25661  005E06  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25662  005E08  0ECB               	movlw	203
 25663  005E0A  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25664  005E0C  0E3C               	movlw	60
 25665  005E0E  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25666  005E10  B0D8               	btfsc	status,0,c
 25667  005E12  0012               	return	
 25668  005E14                     l690:
 25669                           
 25670                           ; BSR set to: 0
 25671                           ;radio_driver_SX1276.c: 1449: {
 25672                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25673  005E14  C064  F17E         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25674  005E18  C065  F17F         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25675  005E1C  C066  F180         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25676  005E20  C067  F181         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25677                           
 25678                           ; BSR set to: 0
 25679                           
 25680                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25681                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25682  005E24  0012               	return		;funcret
 25683  005E26                     __end_of_RADIO_SetChannelFrequency:
 25684                           	opt stack 0
 25685                           tosu	equ	0xFFF
 25686                           tosh	equ	0xFFE
 25687                           tosl	equ	0xFFD
 25688                           pclath	equ	0xFFA
 25689                           tblptru	equ	0xFF8
 25690                           tblptrh	equ	0xFF7
 25691                           tblptrl	equ	0xFF6
 25692                           tablat	equ	0xFF5
 25693                           prodh	equ	0xFF4
 25694                           prodl	equ	0xFF3
 25695                           intcon	equ	0xFF2
 25696                           intcon2	equ	0xFF1
 25697                           intcon3	equ	0xFF0
 25698                           indf0	equ	0xFEF
 25699                           postinc0	equ	0xFEE
 25700                           fsr0h	equ	0xFEA
 25701                           fsr0l	equ	0xFE9
 25702                           wreg	equ	0xFE8
 25703                           postinc1	equ	0xFE6
 25704                           postdec1	equ	0xFE5
 25705                           plusw1	equ	0xFE3
 25706                           fsr1h	equ	0xFE2
 25707                           fsr1l	equ	0xFE1
 25708                           indf2	equ	0xFDF
 25709                           postinc2	equ	0xFDE
 25710                           postdec2	equ	0xFDD
 25711                           plusw2	equ	0xFDB
 25712                           fsr2h	equ	0xFDA
 25713                           fsr2l	equ	0xFD9
 25714                           status	equ	0xFD8
 25715                           
 25716 ;; *************** function _RADIO_SetBandwidth *****************
 25717 ;; Defined at:
 25718 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25719 ;; Parameters:    Size  Location     Type
 25720 ;;  bandwidth       1    wreg     enum E7769
 25721 ;; Auto vars:     Size  Location     Type
 25722 ;;  bandwidth       1    4[BANK0 ] enum E7769
 25723 ;; Return value:  Size  Location     Type
 25724 ;;                  1    wreg      void 
 25725 ;; Registers used:
 25726 ;;		wreg
 25727 ;; Tracked objects:
 25728 ;;		On entry : F/0
 25729 ;;		On exit  : 0/0
 25730 ;;		Unchanged: 0/0
 25731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25736 ;;Total ram usage:        1 bytes
 25737 ;; Hardware stack levels used:    1
 25738 ;; Hardware stack levels required when called:    7
 25739 ;; This function calls:
 25740 ;;		Nothing
 25741 ;; This function is called by:
 25742 ;;		_ConfigureRadio
 25743 ;; This function uses a non-reentrant model
 25744 ;;
 25745                           
 25746                           	psect	text139
 25747  00785E                     __ptext139:
 25748                           	opt stack 0
 25749  00785E                     _RADIO_SetBandwidth:
 25750                           	opt stack 18
 25751                           
 25752                           ; BSR set to: 0
 25753                           ;incstack = 0
 25754                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25755  00785E  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25756                           
 25757                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25758  007860  C064  F198         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25759  007864  0012               	return		;funcret
 25760  007866                     __end_of_RADIO_SetBandwidth:
 25761                           	opt stack 0
 25762                           tosu	equ	0xFFF
 25763                           tosh	equ	0xFFE
 25764                           tosl	equ	0xFFD
 25765                           pclath	equ	0xFFA
 25766                           tblptru	equ	0xFF8
 25767                           tblptrh	equ	0xFF7
 25768                           tblptrl	equ	0xFF6
 25769                           tablat	equ	0xFF5
 25770                           prodh	equ	0xFF4
 25771                           prodl	equ	0xFF3
 25772                           intcon	equ	0xFF2
 25773                           intcon2	equ	0xFF1
 25774                           intcon3	equ	0xFF0
 25775                           indf0	equ	0xFEF
 25776                           postinc0	equ	0xFEE
 25777                           fsr0h	equ	0xFEA
 25778                           fsr0l	equ	0xFE9
 25779                           wreg	equ	0xFE8
 25780                           postinc1	equ	0xFE6
 25781                           postdec1	equ	0xFE5
 25782                           plusw1	equ	0xFE3
 25783                           fsr1h	equ	0xFE2
 25784                           fsr1l	equ	0xFE1
 25785                           indf2	equ	0xFDF
 25786                           postinc2	equ	0xFDE
 25787                           postdec2	equ	0xFDD
 25788                           plusw2	equ	0xFDB
 25789                           fsr2h	equ	0xFDA
 25790                           fsr2l	equ	0xFD9
 25791                           status	equ	0xFD8
 25792                           
 25793 ;; *************** function _RADIO_Transmit *****************
 25794 ;; Defined at:
 25795 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25796 ;; Parameters:    Size  Location     Type
 25797 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 25798 ;;		 -> macBuffer(271), 
 25799 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 25800 ;; Auto vars:     Size  Location     Type
 25801 ;;  i               1   70[BANK0 ] unsigned char 
 25802 ;;  regValue        1   69[BANK0 ] unsigned char 
 25803 ;; Return value:  Size  Location     Type
 25804 ;;                  2   54[BANK0 ] enum E7805
 25805 ;; Registers used:
 25806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25807 ;; Tracked objects:
 25808 ;;		On entry : F/0
 25809 ;;		On exit  : F/0
 25810 ;;		Unchanged: 0/0
 25811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25812 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25813 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25815 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25816 ;;Total ram usage:       17 bytes
 25817 ;; Hardware stack levels used:    1
 25818 ;; Hardware stack levels required when called:   12
 25819 ;; This function calls:
 25820 ;;		_HALSPICSAssert
 25821 ;;		_HALSPICSDeassert
 25822 ;;		_HALSPISend
 25823 ;;		_RADIO_RegisterRead
 25824 ;;		_RADIO_RegisterWrite
 25825 ;;		_RADIO_WriteConfiguration
 25826 ;;		_RADIO_WriteMode
 25827 ;;		_SwTimerSetTimeout
 25828 ;;		_SwTimerStart
 25829 ;;		_SwTimerStop
 25830 ;;		___lldiv
 25831 ;; This function is called by:
 25832 ;;		_LORAWAN_RxTimeout
 25833 ;;		_LORAWAN_Join
 25834 ;;		_LORAWAN_Send
 25835 ;;		_AckRetransmissionCallback
 25836 ;;		_UnconfirmedTransmissionCallback
 25837 ;; This function uses a non-reentrant model
 25838 ;;
 25839                           
 25840                           	psect	text140
 25841  002FA6                     __ptext140:
 25842                           	opt stack 0
 25843  002FA6                     _RADIO_Transmit:
 25844                           	opt stack 16
 25845                           
 25846                           ; BSR set to: 0
 25847                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 25848                           ;radio_driver_SX1276.c: 789: uint8_t i;
 25849                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25850                           
 25851                           ;incstack = 0
 25852  002FA6  0101               	movlb	1	; () banked
 25853  002FA8  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25854  002FAA  D006               	goto	l13327
 25855                           
 25856                           ; BSR set to: 1
 25857                           ;radio_driver_SX1276.c: 792: {
 25858                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 25859  002FAC  0E80               	movlw	128
 25860  002FAE  0100               	movlb	0	; () banked
 25861  002FB0  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25862  002FB2  0E03               	movlw	3
 25863  002FB4  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25864  002FB6  0C03               	retlw	3
 25865  002FB8                     l13327:
 25866                           
 25867                           ; BSR set to: 1
 25868                           ;radio_driver_SX1276.c: 794: }
 25869                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25870  002FB8  C1A1  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 25871  002FBC  0E03               	movlw	3
 25872  002FBE  0100               	movlb	0	; () banked
 25873  002FC0  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 25874  002FC2  E005               	bz	l13333
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;radio_driver_SX1276.c: 797: {
 25878                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 25879  002FC4  0E80               	movlw	128
 25880  002FC6  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25881  002FC8  0E04               	movlw	4
 25882  002FCA  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25883  002FCC  0C04               	retlw	4
 25884  002FCE                     l13333:
 25885                           
 25886                           ; BSR set to: 0
 25887                           ;radio_driver_SX1276.c: 799: }
 25888                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 25889  002FCE  0101               	movlb	1	; () banked
 25890  002FD0  5196               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25891  002FD2  E109               	bnz	l13341
 25892                           
 25893                           ; BSR set to: 1
 25894  002FD4  0E40               	movlw	64
 25895  002FD6  0100               	movlb	0	; () banked
 25896  002FD8  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 25897  002FDA  D005               	goto	l13341
 25898                           
 25899                           ; BSR set to: 0
 25900                           ;radio_driver_SX1276.c: 802: {
 25901                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 25902  002FDC  0E80               	movlw	128
 25903  002FDE  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25904  002FE0  0E02               	movlw	2
 25905  002FE2  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25906  002FE4  0C02               	retlw	2
 25907  002FE6                     l13341:
 25908                           
 25909                           ;radio_driver_SX1276.c: 804: }
 25910                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25911  002FE6  0101               	movlb	1	; () banked
 25912  002FE8  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25913  002FEA  EC59  F03A         	call	_SwTimerStop
 25914                           
 25915                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 25916  002FEE  0E00               	movlw	0
 25917  002FF0  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25918  002FF2  0E04               	movlw	4
 25919  002FF4  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25920  002FF6  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 25921                           
 25922                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 25923  002FFA  0101               	movlb	1	; () banked
 25924  002FFC  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25925  002FFE  E123               	bnz	l13359
 25926                           
 25927                           ; BSR set to: 1
 25928                           ;radio_driver_SX1276.c: 813: {
 25929                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 25930  003000  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25931  003004  0E22               	movlw	34
 25932  003006  EC2C  F03A         	call	_RADIO_RegisterWrite
 25933                           
 25934                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 25935  00300A  0E0A               	movlw	10
 25936  00300C  EC55  F039         	call	_RADIO_RegisterRead
 25937  003010  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 25938                           
 25939                           ; BSR set to: 0
 25940                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 25941  003012  0EF0               	movlw	240
 25942  003014  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 25943                           
 25944                           ; BSR set to: 0
 25945                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 25946  003016  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 25947                           
 25948                           ; BSR set to: 0
 25949                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 25950  003018  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 25951  00301C  0E0A               	movlw	10
 25952  00301E  EC2C  F03A         	call	_RADIO_RegisterWrite
 25953                           
 25954                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 25955  003022  0E40               	movlw	64
 25956  003024  0100               	movlb	0	; () banked
 25957  003026  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25958  003028  EC2C  F03A         	call	_RADIO_RegisterWrite
 25959                           
 25960                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 25961  00302C  0100               	movlb	0	; () banked
 25962  00302E  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25963  003030  0E41               	movlw	65
 25964  003032  EC2C  F03A         	call	_RADIO_RegisterWrite
 25965                           
 25966                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 25967  003036  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25968  00303A  0E01               	movlw	1
 25969  00303C  0100               	movlb	0	; () banked
 25970  00303E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25971  003040  EC5F  F028         	call	_RADIO_WriteMode
 25972                           
 25973                           ;radio_driver_SX1276.c: 828: }
 25974  003044  D00A               	goto	l13361
 25975  003046                     l13359:
 25976                           
 25977                           ; BSR set to: 1
 25978                           ;radio_driver_SX1276.c: 829: else
 25979                           ;radio_driver_SX1276.c: 830: {
 25980                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 25981  003046  0100               	movlb	0	; () banked
 25982  003048  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25983  00304A  0E40               	movlw	64
 25984  00304C  EC2C  F03A         	call	_RADIO_RegisterWrite
 25985                           
 25986                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 25987  003050  0100               	movlb	0	; () banked
 25988  003052  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25989  003054  0E41               	movlw	65
 25990  003056  EC2C  F03A         	call	_RADIO_RegisterWrite
 25991  00305A                     l13361:
 25992                           
 25993                           ;radio_driver_SX1276.c: 834: }
 25994                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 25995  00305A  0101               	movlb	1	; () banked
 25996  00305C  5196               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25997  00305E  E105               	bnz	l13365
 25998                           
 25999                           ; BSR set to: 1
 26000                           ;radio_driver_SX1276.c: 837: {
 26001                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 26002  003060  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26003  003064  0E00               	movlw	0
 26004  003066  EC2C  F03A         	call	_RADIO_RegisterWrite
 26005  00306A                     l13365:
 26006                           
 26007                           ;radio_driver_SX1276.c: 840: }
 26008                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 26009  00306A  EC61  F03C         	call	_HALSPICSAssert	;wreg free
 26010                           
 26011                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 26012  00306E  0E80               	movlw	128
 26013  003070  EC09  F03C         	call	_HALSPISend
 26014                           
 26015                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 26016  003074  0100               	movlb	0	; () banked
 26017  003076  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 26018  003078  D00B               	goto	l13375
 26019  00307A                     l13371:
 26020                           
 26021                           ; BSR set to: 0
 26022                           ;radio_driver_SX1276.c: 846: {
 26023                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 26024  00307A  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 26025  00307C  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 26026  00307E  6ED9               	movwf	fsr2l,c
 26027  003080  0E00               	movlw	0
 26028  003082  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 26029  003084  6EDA               	movwf	fsr2h,c
 26030  003086  50DF               	movf	indf2,w,c
 26031  003088  EC09  F03C         	call	_HALSPISend
 26032  00308C  0100               	movlb	0	; () banked
 26033  00308E  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 26034  003090                     l13375:
 26035                           
 26036                           ; BSR set to: 0
 26037  003090  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 26038  003092  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 26039  003094  E3F2               	bnc	l13371
 26040                           
 26041                           ; BSR set to: 0
 26042                           ;radio_driver_SX1276.c: 848: }
 26043                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 26044  003096  EC5F  F03C         	call	_HALSPICSDeassert	;wreg free
 26045                           
 26046                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 26047  00309A  0101               	movlb	1	; () banked
 26048  00309C  81A1               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 26049                           
 26050                           ; BSR set to: 1
 26051                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 26052  00309E  0EE7               	movlw	231
 26053  0030A0  17A1               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 26054                           
 26055                           ; BSR set to: 1
 26056                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 26057  0030A2  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26058  0030A6  0E00               	movlw	0
 26059  0030A8  0100               	movlb	0	; () banked
 26060  0030AA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26061  0030AC  0E03               	movlw	3
 26062  0030AE  EC5F  F028         	call	_RADIO_WriteMode
 26063                           
 26064                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 26065  0030B2  0100               	movlb	0	; () banked
 26066  0030B4  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 26067  0030B6  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26068  0030B8  0E0A               	movlw	10
 26069  0030BA  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26070  0030BC  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26071  0030BE  0101               	movlb	1	; () banked
 26072  0030C0  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26073  0030C2  EC62  F036         	call	_SwTimerSetTimeout
 26074                           
 26075                           ; BSR set to: 0
 26076                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 26077  0030C6  0101               	movlb	1	; () banked
 26078  0030C8  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26079  0030CA  EC4B  F02E         	call	_SwTimerStart
 26080                           
 26081                           ; BSR set to: 0
 26082                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26083  0030CE  0101               	movlb	1	; () banked
 26084  0030D0  51A8               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26085  0030D2  11A9               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26086  0030D4  11AA               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26087  0030D6  11AB               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26088  0030D8  E059               	bz	l13405
 26089                           
 26090                           ; BSR set to: 1
 26091                           ;radio_driver_SX1276.c: 866: {
 26092                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26093  0030DA  51AB               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26094  0030DC  E106               	bnz	u14680
 26095  0030DE  29A8               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26096  0030E0  0EFF               	movlw	255
 26097  0030E2  59A9               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26098  0030E4  0E0F               	movlw	15
 26099  0030E6  59AA               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26100  0030E8  E319               	bnc	l13399
 26101  0030EA                     u14680:
 26102                           
 26103                           ; BSR set to: 1
 26104  0030EA  C1A8  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 26105  0030EE  C1A9  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26106  0030F2  C1AA  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26107  0030F6  C1AB  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26108  0030FA  0E7D               	movlw	125
 26109  0030FC  0100               	movlb	0	; () banked
 26110  0030FE  6F68               	movwf	___lldiv@divisor& (0+255),b
 26111  003100  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26112  003102  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26113  003104  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26114  003106  EC0D  F030         	call	___lldiv	;wreg free
 26115  00310A  0E0C               	movlw	12
 26116  00310C                     u14695:
 26117  00310C  90D8               	bcf	status,0,c
 26118  00310E  3764               	rlcf	?___lldiv& (0+255),f,b
 26119  003110  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 26120  003112  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 26121  003114  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 26122  003116  2EE8               	decfsz	wreg,f,c
 26123  003118  D7F9               	goto	u14695
 26124  00311A  D020               	goto	L15
 26125  00311C                     l13399:
 26126                           
 26127                           ; BSR set to: 1
 26128  00311C  C1A8  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26129  003120  C1A9  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26130  003124  C1AA  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26131  003128  C1AB  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26132  00312C  0E0C               	movlw	12
 26133  00312E                     u14705:
 26134  00312E  90D8               	bcf	status,0,c
 26135  003130  0100               	movlb	0	; () banked
 26136  003132  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26137  003134  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26138  003136  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26139  003138  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26140  00313A  2EE8               	decfsz	wreg,f,c
 26141  00313C  D7F8               	goto	u14705
 26142  00313E  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 26143  003142  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26144  003146  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26145  00314A  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26146  00314E  0E7D               	movlw	125
 26147  003150  6F68               	movwf	___lldiv@divisor& (0+255),b
 26148  003152  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26149  003154  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26150  003156  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26151  003158  EC0D  F030         	call	___lldiv	;wreg free
 26152  00315C                     L15:
 26153  00315C  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1196
 26154  003160  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1196+1
 26155  003164  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1196+2
 26156  003168  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1196+3
 26157                           
 26158                           ; BSR set to: 0
 26159  00316C  C0A1  F071         	movff	_RADIO_Transmit$1196,SwTimerSetTimeout@timeout
 26160  003170  C0A2  F072         	movff	_RADIO_Transmit$1196+1,SwTimerSetTimeout@timeout+1
 26161  003174  C0A3  F073         	movff	_RADIO_Transmit$1196+2,SwTimerSetTimeout@timeout+2
 26162  003178  C0A4  F074         	movff	_RADIO_Transmit$1196+3,SwTimerSetTimeout@timeout+3
 26163  00317C  0101               	movlb	1	; () banked
 26164  00317E  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26165  003180  EC62  F036         	call	_SwTimerSetTimeout
 26166                           
 26167                           ; BSR set to: 0
 26168                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26169  003184  0101               	movlb	1	; () banked
 26170  003186  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26171  003188  EC4B  F02E         	call	_SwTimerStart
 26172  00318C                     l13405:
 26173                           
 26174                           ;radio_driver_SX1276.c: 869: }
 26175                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 26176  00318C  0100               	movlb	0	; () banked
 26177  00318E  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 26178  003190  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 26179                           
 26180                           ; BSR set to: 0
 26181  003192  0012               	return		;funcret
 26182  003194                     __end_of_RADIO_Transmit:
 26183                           	opt stack 0
 26184                           tosu	equ	0xFFF
 26185                           tosh	equ	0xFFE
 26186                           tosl	equ	0xFFD
 26187                           pclath	equ	0xFFA
 26188                           tblptru	equ	0xFF8
 26189                           tblptrh	equ	0xFF7
 26190                           tblptrl	equ	0xFF6
 26191                           tablat	equ	0xFF5
 26192                           prodh	equ	0xFF4
 26193                           prodl	equ	0xFF3
 26194                           intcon	equ	0xFF2
 26195                           intcon2	equ	0xFF1
 26196                           intcon3	equ	0xFF0
 26197                           indf0	equ	0xFEF
 26198                           postinc0	equ	0xFEE
 26199                           fsr0h	equ	0xFEA
 26200                           fsr0l	equ	0xFE9
 26201                           wreg	equ	0xFE8
 26202                           postinc1	equ	0xFE6
 26203                           postdec1	equ	0xFE5
 26204                           plusw1	equ	0xFE3
 26205                           fsr1h	equ	0xFE2
 26206                           fsr1l	equ	0xFE1
 26207                           indf2	equ	0xFDF
 26208                           postinc2	equ	0xFDE
 26209                           postdec2	equ	0xFDD
 26210                           plusw2	equ	0xFDB
 26211                           fsr2h	equ	0xFDA
 26212                           fsr2l	equ	0xFD9
 26213                           status	equ	0xFD8
 26214                           
 26215 ;; *************** function _RADIO_WriteConfiguration *****************
 26216 ;; Defined at:
 26217 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26218 ;; Parameters:    Size  Location     Type
 26219 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26220 ;; Auto vars:     Size  Location     Type
 26221 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26222 ;;  regValue        1   38[BANK0 ] unsigned char 
 26223 ;;  i               1   33[BANK0 ] unsigned char 
 26224 ;; Return value:  Size  Location     Type
 26225 ;;                  1    wreg      void 
 26226 ;; Registers used:
 26227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26228 ;; Tracked objects:
 26229 ;;		On entry : F/0
 26230 ;;		On exit  : 0/0
 26231 ;;		Unchanged: 0/0
 26232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26234 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26236 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26237 ;;Total ram usage:       10 bytes
 26238 ;; Hardware stack levels used:    1
 26239 ;; Hardware stack levels required when called:   11
 26240 ;; This function calls:
 26241 ;;		_RADIO_RegisterRead
 26242 ;;		_RADIO_RegisterWrite
 26243 ;;		_RADIO_WriteFSKBitRate
 26244 ;;		_RADIO_WriteFSKFrequencyDeviation
 26245 ;;		_RADIO_WriteFrequency
 26246 ;;		_RADIO_WriteMode
 26247 ;;		_RADIO_WritePower
 26248 ;;		___lmul
 26249 ;; This function is called by:
 26250 ;;		_RADIO_Transmit
 26251 ;;		_RADIO_ReceiveStart
 26252 ;; This function uses a non-reentrant model
 26253 ;;
 26254                           
 26255                           	psect	text141
 26256  001382                     __ptext141:
 26257                           	opt stack 0
 26258  001382                     _RADIO_WriteConfiguration:
 26259                           	opt stack 16
 26260                           
 26261                           ; BSR set to: 0
 26262                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26263                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26264                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26265                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26266                           
 26267                           ; BSR set to: 0
 26268                           ;incstack = 0
 26269  001382  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26270  001386  0E00               	movlw	0
 26271  001388  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26272  00138A  EC5F  F028         	call	_RADIO_WriteMode
 26273                           
 26274                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26275  00138E  C17E  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26276  001392  C17F  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26277  001396  C180  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26278  00139A  C181  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26279  00139E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
 26280                           
 26281                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26282  0013A2  0101               	movlb	1	; () banked
 26283  0013A4  5199               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26284  0013A6  EC33  F029         	call	_RADIO_WritePower
 26285                           
 26286                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26287  0013AA  0101               	movlb	1	; () banked
 26288  0013AC  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26289  0013AE  E001 D1B6          	bnz	l12563
 26290                           
 26291                           ; BSR set to: 1
 26292                           ;radio_driver_SX1276.c: 545: {
 26293                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26294  0013B2  C18C  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26295  0013B6  0E39               	movlw	57
 26296  0013B8  EC2C  F03A         	call	_RADIO_RegisterWrite
 26297                           
 26298                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26299                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26300                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26301                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26302  0013BC  C1A0  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26303  0013C0  0E01               	movlw	1
 26304  0013C2  0100               	movlb	0	; () banked
 26305  0013C4  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26306  0013C6  0101               	movlb	1	; () banked
 26307  0013C8  90D8               	bcf	status,0,c
 26308  0013CA  359F               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26309  0013CC  0100               	movlb	0	; () banked
 26310  0013CE  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26311  0013D0  0101               	movlb	1	; () banked
 26312  0013D2  3998               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26313  0013D4  0BF0               	andlw	240
 26314  0013D6  0100               	movlb	0	; () banked
 26315  0013D8  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26316  0013DA  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26317  0013DC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26318  0013DE  0E1D               	movlw	29
 26319  0013E0  EC2C  F03A         	call	_RADIO_RegisterWrite
 26320                           
 26321                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26322                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26323                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26324                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26325  0013E4  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26326  0013E8  0E03               	movlw	3
 26327  0013EA  0100               	movlb	0	; () banked
 26328  0013EC  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26329  0013EE  C19A  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26330  0013F2  0E01               	movlw	1
 26331  0013F4  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26332  0013F6  90D8               	bcf	status,0,c
 26333  0013F8  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26334  0013FA  90D8               	bcf	status,0,c
 26335  0013FC  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26336  0013FE  0101               	movlb	1	; () banked
 26337  001400  3997               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26338  001402  0BF0               	andlw	240
 26339  001404  0100               	movlb	0	; () banked
 26340  001406  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26341  001408  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26342  00140A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26343  00140C  0E1E               	movlw	30
 26344  00140E  EC2C  F03A         	call	_RADIO_RegisterWrite
 26345                           
 26346                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26347  001412  0101               	movlb	1	; () banked
 26348  001414  519C               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26349  001416  119D               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26350  001418  E060               	bz	l447
 26351                           
 26352                           ; BSR set to: 1
 26353                           ;radio_driver_SX1276.c: 561: {
 26354                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26355  00141A  C19C  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26356  00141E  C19D  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26357  001422  0100               	movlb	0	; () banked
 26358  001424  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26359  001426  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26360                           
 26361                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26362  001428  D042               	goto	l12455
 26363  00142A                     l12447:
 26364                           
 26365                           ; BSR set to: 1
 26366                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26367  00142A  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26368  00142E  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26369  001432  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26370  001436  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26371  00143A  0E7D               	movlw	125
 26372  00143C  0100               	movlb	0	; () banked
 26373  00143E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26374  001440  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26375  001442  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26376  001444  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26377  001446  EC8F  F02E         	call	___lmul	;wreg free
 26378  00144A  D022               	goto	L17
 26379  00144C                     l12449:
 26380                           
 26381                           ; BSR set to: 1
 26382                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26383  00144C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26384  001450  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26385  001454  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26386  001458  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26387  00145C  0EFA               	movlw	250
 26388  00145E  0100               	movlb	0	; () banked
 26389  001460  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26390  001462  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26391  001464  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26392  001466  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26393  001468  EC8F  F02E         	call	___lmul	;wreg free
 26394  00146C  D011               	goto	L17
 26395  00146E                     l12451:
 26396                           
 26397                           ; BSR set to: 1
 26398                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26399  00146E  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26400  001472  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26401  001476  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26402  00147A  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26403  00147E  0EF4               	movlw	244
 26404  001480  0100               	movlb	0	; () banked
 26405  001482  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26406  001484  0E01               	movlw	1
 26407  001486  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26408  001488  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26409  00148A  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26410  00148C  EC8F  F02E         	call	___lmul	;wreg free
 26411  001490                     L17:
 26412  001490  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26413  001494  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26414  001498  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26415  00149C  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26416                           
 26417                           ;radio_driver_SX1276.c: 574: break;
 26418  0014A0  D00F               	goto	l12457
 26419  0014A2                     l453:
 26420                           
 26421                           ; BSR set to: 1
 26422                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26423  0014A2  0100               	movlb	0	; () banked
 26424  0014A4  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26425  0014A6  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26426  0014A8  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26427  0014AA  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26428                           
 26429                           ;radio_driver_SX1276.c: 578: break;
 26430  0014AC  D009               	goto	l12457
 26431  0014AE                     l12455:
 26432                           
 26433                           ; BSR set to: 0
 26434  0014AE  0101               	movlb	1	; () banked
 26435  0014B0  5198               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26436                           
 26437                           ; Switch size 1, requested type "speed"
 26438                           ; Number of cases is 3, Range of values is 7 to 9
 26439                           ; switch strategies available:
 26440                           ; Name         Instructions Cycles
 26441                           ; simple_byte           10     6 (average)
 26442                           ;	Chosen strategy is simple_byte
 26443  0014B2  0A07               	xorlw	7	; case 7
 26444  0014B4  E0BA               	bz	l12447
 26445  0014B6  0A0F               	xorlw	15	; case 8
 26446  0014B8  E0C9               	bz	l12449
 26447  0014BA  0A01               	xorlw	1	; case 9
 26448  0014BC  E0D8               	bz	l12451
 26449  0014BE  D7F1               	goto	l453
 26450  0014C0                     l12457:
 26451                           
 26452                           ; BSR set to: 0
 26453                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26454  0014C0  0101               	movlb	1	; () banked
 26455  0014C2  2997               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26456  0014C4  0100               	movlb	0	; () banked
 26457  0014C6  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26458  0014C8  D005               	goto	u13260
 26459  0014CA                     u13265:
 26460  0014CA  90D8               	bcf	status,0,c
 26461  0014CC  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26462  0014CE  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26463  0014D0  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26464  0014D2  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26465  0014D4                     u13260:
 26466  0014D4  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26467  0014D6  D7F9               	goto	u13265
 26468                           
 26469                           ;radio_driver_SX1276.c: 582: }
 26470  0014D8  D005               	goto	l12459
 26471  0014DA                     l447:
 26472                           
 26473                           ; BSR set to: 1
 26474                           ;radio_driver_SX1276.c: 583: else
 26475                           ;radio_driver_SX1276.c: 584: {
 26476                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26477  0014DA  0100               	movlb	0	; () banked
 26478  0014DC  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26479  0014DE  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26480  0014E0  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26481  0014E2  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26482  0014E4                     l12459:
 26483                           
 26484                           ;radio_driver_SX1276.c: 586: }
 26485                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26486  0014E4  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26487  0014E8  0E24               	movlw	36
 26488  0014EA  EC2C  F03A         	call	_RADIO_RegisterWrite
 26489                           
 26490                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26491  0014EE  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26492  0014F2  0E1F               	movlw	31
 26493  0014F4  EC2C  F03A         	call	_RADIO_RegisterWrite
 26494                           
 26495                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26496  0014F8  0E26               	movlw	38
 26497  0014FA  EC55  F039         	call	_RADIO_RegisterRead
 26498  0014FE  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26499                           
 26500                           ; BSR set to: 0
 26501                           ;radio_driver_SX1276.c: 596: if (
 26502                           ;radio_driver_SX1276.c: 597: (
 26503                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26504                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26505                           ;radio_driver_SX1276.c: 600: ) ||
 26506                           ;radio_driver_SX1276.c: 601: (
 26507                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26508                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26509                           ;radio_driver_SX1276.c: 604: )
 26510                           ;radio_driver_SX1276.c: 605: )
 26511  001500  0E0C               	movlw	12
 26512  001502  0101               	movlb	1	; () banked
 26513  001504  1997               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26514  001506  E106               	bnz	l12467
 26515                           
 26516                           ; BSR set to: 1
 26517  001508  0E07               	movlw	7
 26518  00150A  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26519  00150C  E009               	bz	l12471
 26520                           
 26521                           ; BSR set to: 1
 26522  00150E  0E08               	movlw	8
 26523  001510  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26524  001512  E006               	bz	l12471
 26525  001514                     l12467:
 26526                           
 26527                           ; BSR set to: 1
 26528  001514  0E0B               	movlw	11
 26529  001516  1997               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26530  001518  E106               	bnz	l12473
 26531                           
 26532                           ; BSR set to: 1
 26533  00151A  0E07               	movlw	7
 26534  00151C  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26535  00151E  E103               	bnz	l12473
 26536  001520                     l12471:
 26537                           
 26538                           ; BSR set to: 1
 26539                           ;radio_driver_SX1276.c: 606: {
 26540                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26541  001520  0100               	movlb	0	; () banked
 26542  001522  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26543                           
 26544                           ;radio_driver_SX1276.c: 608: }
 26545  001524  D002               	goto	l460
 26546  001526                     l12473:
 26547                           
 26548                           ; BSR set to: 1
 26549                           ;radio_driver_SX1276.c: 609: else
 26550                           ;radio_driver_SX1276.c: 610: {
 26551                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26552  001526  0100               	movlb	0	; () banked
 26553  001528  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26554  00152A                     l460:
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;radio_driver_SX1276.c: 612: }
 26558                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26559  00152A  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26560                           
 26561                           ; BSR set to: 0
 26562                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26563  00152C  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26564  001530  0E26               	movlw	38
 26565  001532  EC2C  F03A         	call	_RADIO_RegisterWrite
 26566                           
 26567                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26568  001536  0E31               	movlw	49
 26569  001538  EC55  F039         	call	_RADIO_RegisterRead
 26570  00153C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26571                           
 26572                           ; BSR set to: 0
 26573                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26574  00153E  0EF8               	movlw	248
 26575  001540  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26576                           
 26577                           ; BSR set to: 0
 26578                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26579  001542  0E03               	movlw	3
 26580  001544  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26581                           
 26582                           ; BSR set to: 0
 26583                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26584  001546  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26585  00154A  0E31               	movlw	49
 26586  00154C  EC2C  F03A         	call	_RADIO_RegisterWrite
 26587                           
 26588                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26589  001550  0E0A               	movlw	10
 26590  001552  0100               	movlb	0	; () banked
 26591  001554  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26592  001556  0E37               	movlw	55
 26593  001558  EC2C  F03A         	call	_RADIO_RegisterWrite
 26594                           
 26595                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26596  00155C  0E12               	movlw	18
 26597  00155E  0101               	movlb	1	; () banked
 26598  001560  19AF               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26599  001562  E129               	bnz	l12511
 26600                           
 26601                           ; BSR set to: 1
 26602                           ;radio_driver_SX1276.c: 626: {
 26603                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26604                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26605  001564  0E07               	movlw	7
 26606  001566  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26607  001568  E003               	bz	l12493
 26608                           
 26609                           ; BSR set to: 1
 26610  00156A  0E08               	movlw	8
 26611  00156C  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26612  00156E  E115               	bnz	l12503
 26613  001570                     l12493:
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;radio_driver_SX1276.c: 631: {
 26617                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26618  001570  0E31               	movlw	49
 26619  001572  EC55  F039         	call	_RADIO_RegisterRead
 26620  001576  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26621                           
 26622                           ; BSR set to: 0
 26623                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26624  001578  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26625                           
 26626                           ; BSR set to: 0
 26627                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26628  00157A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26629  00157E  0E31               	movlw	49
 26630  001580  EC2C  F03A         	call	_RADIO_RegisterWrite
 26631                           
 26632                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26633  001584  0E40               	movlw	64
 26634  001586  0100               	movlb	0	; () banked
 26635  001588  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26636  00158A  0E2F               	movlw	47
 26637  00158C  EC2C  F03A         	call	_RADIO_RegisterWrite
 26638                           
 26639                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26640  001590  0100               	movlb	0	; () banked
 26641  001592  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26642  001594  0E30               	movlw	48
 26643  001596  EC2C  F03A         	call	_RADIO_RegisterWrite
 26644  00159A                     l12503:
 26645                           
 26646                           ;radio_driver_SX1276.c: 637: }
 26647                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26648  00159A  0E09               	movlw	9
 26649  00159C  0101               	movlb	1	; () banked
 26650  00159E  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26651  0015A0  E10A               	bnz	l12511
 26652                           
 26653                           ; BSR set to: 1
 26654                           ;radio_driver_SX1276.c: 640: {
 26655                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26656  0015A2  0E31               	movlw	49
 26657  0015A4  EC55  F039         	call	_RADIO_RegisterRead
 26658  0015A8  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26659                           
 26660                           ; BSR set to: 0
 26661                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26662  0015AA  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26663                           
 26664                           ; BSR set to: 0
 26665                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26666  0015AC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26667  0015B0  0E31               	movlw	49
 26668  0015B2  EC2C  F03A         	call	_RADIO_RegisterWrite
 26669  0015B6                     l12511:
 26670                           
 26671                           ;radio_driver_SX1276.c: 644: }
 26672                           ;radio_driver_SX1276.c: 645: }
 26673                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26674  0015B6  0E33               	movlw	51
 26675  0015B8  EC55  F039         	call	_RADIO_RegisterRead
 26676  0015BC  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26677                           
 26678                           ; BSR set to: 0
 26679                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26680  0015BE  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26681                           
 26682                           ; BSR set to: 0
 26683                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26684  0015C0  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26685                           
 26686                           ; BSR set to: 0
 26687                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26688  0015C2  C19E  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26689  0015C6  0E01               	movlw	1
 26690  0015C8  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26691  0015CA  0E06               	movlw	6
 26692  0015CC  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26693  0015CE                     u13365:
 26694  0015CE  90D8               	bcf	status,0,c
 26695  0015D0  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26696  0015D2  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26697  0015D4  D7FC               	goto	u13365
 26698  0015D6  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26699  0015D8  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26700                           
 26701                           ; BSR set to: 0
 26702                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26703  0015DA  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26704  0015DE  0E33               	movlw	51
 26705  0015E0  EC2C  F03A         	call	_RADIO_RegisterWrite
 26706                           
 26707                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26708  0015E4  C19E  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26709  0015E8  0E01               	movlw	1
 26710  0015EA  0100               	movlb	0	; () banked
 26711  0015EC  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26712  0015EE  90D8               	bcf	status,0,c
 26713  0015F0  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26714  0015F2  90D8               	bcf	status,0,c
 26715  0015F4  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26716  0015F6  0AFF               	xorlw	255
 26717  0015F8  0B1D               	andlw	29
 26718  0015FA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26719                           
 26720                           ; BSR set to: 0
 26721                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26722  0015FC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26723  001600  0E3B               	movlw	59
 26724  001602  EC2C  F03A         	call	_RADIO_RegisterWrite
 26725                           
 26726                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26727  001606  0101               	movlb	1	; () banked
 26728  001608  518B               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26729  00160A  0100               	movlb	0	; () banked
 26730  00160C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26731  00160E  0E20               	movlw	32
 26732  001610  EC2C  F03A         	call	_RADIO_RegisterWrite
 26733                           
 26734                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26735  001614  C18A  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26736  001618  0E21               	movlw	33
 26737  00161A  EC2C  F03A         	call	_RADIO_RegisterWrite
 26738                           
 26739                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26740  00161E  0100               	movlb	0	; () banked
 26741  001620  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26742  001622  0E0D               	movlw	13
 26743  001624  EC2C  F03A         	call	_RADIO_RegisterWrite
 26744                           
 26745                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26746  001628  0100               	movlb	0	; () banked
 26747  00162A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26748  00162C  0E0E               	movlw	14
 26749  00162E  EC2C  F03A         	call	_RADIO_RegisterWrite
 26750                           
 26751                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26752  001632  0100               	movlb	0	; () banked
 26753  001634  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26754  001636  0E0F               	movlw	15
 26755  001638  EC2C  F03A         	call	_RADIO_RegisterWrite
 26756                           
 26757                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26758  00163C  0E12               	movlw	18
 26759  00163E  0101               	movlb	1	; () banked
 26760  001640  19AF               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26761  001642  E168               	bnz	l466
 26762                           
 26763                           ; BSR set to: 1
 26764                           ;radio_driver_SX1276.c: 665: {
 26765                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26766                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26767                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26768                           ;radio_driver_SX1276.c: 669: )
 26769  001644  0E09               	movlw	9
 26770  001646  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26771  001648  E11E               	bnz	l12545
 26772                           
 26773                           ; BSR set to: 1
 26774  00164A  0E80               	movlw	128
 26775  00164C  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26776  00164E  0E13               	movlw	19
 26777  001650  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26778  001652  0E61               	movlw	97
 26779  001654  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26780  001656  0E33               	movlw	51
 26781  001658  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26782  00165A  E315               	bnc	l12545
 26783                           
 26784                           ; BSR set to: 1
 26785  00165C  057E               	decf	_RadioConfiguration& (0+255),w,b
 26786  00165E  0EF7               	movlw	247
 26787  001660  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26788  001662  0ECB               	movlw	203
 26789  001664  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26790  001666  0E3C               	movlw	60
 26791  001668  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26792  00166A  E20D               	bc	l12545
 26793                           
 26794                           ; BSR set to: 1
 26795                           ;radio_driver_SX1276.c: 670: {
 26796                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26797  00166C  0E02               	movlw	2
 26798  00166E  0100               	movlb	0	; () banked
 26799  001670  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26800  001672  0E36               	movlw	54
 26801  001674  EC2C  F03A         	call	_RADIO_RegisterWrite
 26802                           
 26803                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26804  001678  0E64               	movlw	100
 26805  00167A  0100               	movlb	0	; () banked
 26806  00167C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26807  00167E  0E3A               	movlw	58
 26808  001680  EC2C  F03A         	call	_RADIO_RegisterWrite
 26809                           
 26810                           ;radio_driver_SX1276.c: 673: }
 26811  001684  D028               	goto	l12555
 26812  001686                     l12545:
 26813                           
 26814                           ; BSR set to: 1
 26815                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26816                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 26817                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 26818                           ;radio_driver_SX1276.c: 677: )
 26819  001686  0E09               	movlw	9
 26820  001688  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26821  00168A  E11F               	bnz	l12553
 26822                           
 26823                           ; BSR set to: 1
 26824  00168C  0E80               	movlw	128
 26825  00168E  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26826  001690  0E1A               	movlw	26
 26827  001692  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26828  001694  0E70               	movlw	112
 26829  001696  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26830  001698  0E18               	movlw	24
 26831  00169A  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26832  00169C  E316               	bnc	l12553
 26833                           
 26834                           ; BSR set to: 1
 26835  00169E  0E41               	movlw	65
 26836  0016A0  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26837  0016A2  0EDD               	movlw	221
 26838  0016A4  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26839  0016A6  0E4A               	movlw	74
 26840  0016A8  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26841  0016AA  0E1F               	movlw	31
 26842  0016AC  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26843  0016AE  E20D               	bc	l12553
 26844                           
 26845                           ; BSR set to: 1
 26846                           ;radio_driver_SX1276.c: 678: {
 26847                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 26848  0016B0  0E02               	movlw	2
 26849  0016B2  0100               	movlb	0	; () banked
 26850  0016B4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26851  0016B6  0E36               	movlw	54
 26852  0016B8  EC2C  F03A         	call	_RADIO_RegisterWrite
 26853                           
 26854                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 26855  0016BC  0E7F               	movlw	127
 26856  0016BE  0100               	movlb	0	; () banked
 26857  0016C0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26858  0016C2  0E3A               	movlw	58
 26859  0016C4  EC2C  F03A         	call	_RADIO_RegisterWrite
 26860                           
 26861                           ;radio_driver_SX1276.c: 681: }
 26862  0016C8  D006               	goto	l12555
 26863  0016CA                     l12553:
 26864                           
 26865                           ; BSR set to: 1
 26866                           ;radio_driver_SX1276.c: 682: else
 26867                           ;radio_driver_SX1276.c: 683: {
 26868                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 26869  0016CA  0E03               	movlw	3
 26870  0016CC  0100               	movlb	0	; () banked
 26871  0016CE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26872  0016D0  0E36               	movlw	54
 26873  0016D2  EC2C  F03A         	call	_RADIO_RegisterWrite
 26874  0016D6                     l12555:
 26875                           
 26876                           ;radio_driver_SX1276.c: 685: }
 26877                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 26878  0016D6  0E09               	movlw	9
 26879  0016D8  0101               	movlb	1	; () banked
 26880  0016DA  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26881  0016DC  E10F               	bnz	l12561
 26882                           
 26883                           ; BSR set to: 1
 26884  0016DE  059E               	decf	(_RadioConfiguration+32)& (0+255),w,b
 26885  0016E0  E10D               	bnz	l12561
 26886                           
 26887                           ; BSR set to: 1
 26888                           ;radio_driver_SX1276.c: 689: {
 26889                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 26890  0016E2  0E65               	movlw	101
 26891  0016E4  0100               	movlb	0	; () banked
 26892  0016E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26893  0016E8  0E3A               	movlw	58
 26894  0016EA  EC2C  F03A         	call	_RADIO_RegisterWrite
 26895                           
 26896                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 26897  0016EE  0E19               	movlw	25
 26898  0016F0  0100               	movlb	0	; () banked
 26899  0016F2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26900  0016F4  0E3B               	movlw	59
 26901  0016F6  EC2C  F03A         	call	_RADIO_RegisterWrite
 26902                           
 26903                           ;radio_driver_SX1276.c: 692: }
 26904  0016FA  D00C               	goto	l466
 26905  0016FC                     l12561:
 26906                           
 26907                           ; BSR set to: 1
 26908                           ;radio_driver_SX1276.c: 693: else
 26909                           ;radio_driver_SX1276.c: 694: {
 26910                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 26911  0016FC  0E65               	movlw	101
 26912  0016FE  0100               	movlb	0	; () banked
 26913  001700  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26914  001702  0E3A               	movlw	58
 26915  001704  EC2C  F03A         	call	_RADIO_RegisterWrite
 26916                           
 26917                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 26918  001708  0E1D               	movlw	29
 26919  00170A  0100               	movlb	0	; () banked
 26920  00170C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26921  00170E  0E3B               	movlw	59
 26922  001710  EC2C  F03A         	call	_RADIO_RegisterWrite
 26923  001714                     l466:
 26924                           
 26925                           ;radio_driver_SX1276.c: 697: }
 26926                           ;radio_driver_SX1276.c: 698: }
 26927                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 26928  001714  0100               	movlb	0	; () banked
 26929  001716  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 26930  001718  0E12               	movlw	18
 26931  00171A  EF2C  F03A         	goto	_RADIO_RegisterWrite
 26932  00171E                     l12563:
 26933                           
 26934                           ; BSR set to: 1
 26935                           ;radio_driver_SX1276.c: 703: else
 26936                           ;radio_driver_SX1276.c: 704: {
 26937                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 26938  00171E  C182  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 26939  001722  C183  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 26940  001726  C184  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 26941  00172A  C185  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 26942  00172E  EC54  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 26943                           
 26944                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 26945  001732  C186  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 26946  001736  C187  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 26947  00173A  C188  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 26948  00173E  C189  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 26949  001742  ECB7  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 26950                           
 26951                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 26952  001746  0101               	movlb	1	; () banked
 26953  001748  518B               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26954  00174A  0100               	movlb	0	; () banked
 26955  00174C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26956  00174E  0E25               	movlw	37
 26957  001750  EC2C  F03A         	call	_RADIO_RegisterWrite
 26958                           
 26959                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26960  001754  C18A  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26961  001758  0E26               	movlw	38
 26962  00175A  EC2C  F03A         	call	_RADIO_RegisterWrite
 26963                           
 26964                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 26965  00175E  0E0A               	movlw	10
 26966  001760  EC55  F039         	call	_RADIO_RegisterRead
 26967  001764  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26968                           
 26969                           ; BSR set to: 0
 26970                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 26971  001766  0E9F               	movlw	159
 26972  001768  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26973                           
 26974                           ; BSR set to: 0
 26975                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 26976  00176A  0101               	movlb	1	; () banked
 26977  00176C  39B1               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 26978  00176E  46E8               	rlncf	wreg,f,c
 26979  001770  0BE0               	andlw	224
 26980  001772  0100               	movlb	0	; () banked
 26981  001774  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26982                           
 26983                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 26984  001776  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26985  00177A  0E0A               	movlw	10
 26986  00177C  EC2C  F03A         	call	_RADIO_RegisterWrite
 26987                           
 26988                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 26989  001780  0EC8               	movlw	200
 26990  001782  0100               	movlb	0	; () banked
 26991  001784  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26992                           
 26993                           ; BSR set to: 0
 26994                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 26995  001786  0101               	movlb	1	; () banked
 26996  001788  519A               	movf	(_RadioConfiguration+28)& (0+255),w,b
 26997  00178A  E002               	bz	l12575
 26998                           
 26999                           ; BSR set to: 1
 27000                           ;radio_driver_SX1276.c: 722: {
 27001                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 27002  00178C  0100               	movlb	0	; () banked
 27003  00178E  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 27004  001790                     l12575:
 27005                           
 27006                           ;radio_driver_SX1276.c: 724: }
 27007                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 27008  001790  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27009  001794  0E30               	movlw	48
 27010  001796  EC2C  F03A         	call	_RADIO_RegisterWrite
 27011                           
 27012                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 27013  00179A  0100               	movlb	0	; () banked
 27014  00179C  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 27015  00179E  D00E               	goto	l12583
 27016  0017A0                     l12579:
 27017                           
 27018                           ; BSR set to: 0
 27019                           ;radio_driver_SX1276.c: 729: {
 27020                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27021  0017A0  0E8D               	movlw	low (_RadioConfiguration+15)
 27022  0017A2  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27023  0017A4  6ED9               	movwf	fsr2l,c
 27024  0017A6  6ADA               	clrf	fsr2h,c
 27025  0017A8  0E01               	movlw	high (_RadioConfiguration+15)
 27026  0017AA  22DA               	addwfc	fsr2h,f,c
 27027  0017AC  50DF               	movf	indf2,w,c
 27028  0017AE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27029  0017B0  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27030  0017B2  0F28               	addlw	40
 27031  0017B4  EC2C  F03A         	call	_RADIO_RegisterWrite
 27032  0017B8  0100               	movlb	0	; () banked
 27033  0017BA  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27034  0017BC                     l12583:
 27035                           
 27036                           ; BSR set to: 0
 27037  0017BC  0101               	movlb	1	; () banked
 27038  0017BE  5195               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27039  0017C0  0100               	movlb	0	; () banked
 27040  0017C2  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27041  0017C4  E3ED               	bnc	l12579
 27042                           
 27043                           ; BSR set to: 0
 27044                           ;radio_driver_SX1276.c: 733: }
 27045                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 27046  0017C6  0101               	movlb	1	; () banked
 27047  0017C8  5195               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27048  0017CA  E008               	bz	l12589
 27049                           
 27050                           ; BSR set to: 1
 27051                           ;radio_driver_SX1276.c: 737: {
 27052                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27053  0017CC  0595               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27054  0017CE  0910               	iorlw	16
 27055  0017D0  0100               	movlb	0	; () banked
 27056  0017D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27057  0017D4  0E27               	movlw	39
 27058  0017D6  EC2C  F03A         	call	_RADIO_RegisterWrite
 27059                           
 27060                           ;radio_driver_SX1276.c: 739: }
 27061  0017DA  D005               	goto	l479
 27062  0017DC                     l12589:
 27063                           
 27064                           ; BSR set to: 1
 27065                           ;radio_driver_SX1276.c: 740: else
 27066                           ;radio_driver_SX1276.c: 741: {
 27067                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 27068  0017DC  0100               	movlb	0	; () banked
 27069  0017DE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27070  0017E0  0E27               	movlw	39
 27071  0017E2  EC2C  F03A         	call	_RADIO_RegisterWrite
 27072  0017E6                     l479:
 27073                           
 27074                           ;radio_driver_SX1276.c: 743: }
 27075                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 27076  0017E6  0100               	movlb	0	; () banked
 27077  0017E8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27078  0017EA  0E3E               	movlw	62
 27079  0017EC  EC2C  F03A         	call	_RADIO_RegisterWrite
 27080                           
 27081                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 27082  0017F0  0100               	movlb	0	; () banked
 27083  0017F2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27084  0017F4  0E3F               	movlw	63
 27085  0017F6  EF2C  F03A         	goto	_RADIO_RegisterWrite
 27086  0017FA                     __end_of_RADIO_WriteConfiguration:
 27087                           	opt stack 0
 27088                           tosu	equ	0xFFF
 27089                           tosh	equ	0xFFE
 27090                           tosl	equ	0xFFD
 27091                           pclath	equ	0xFFA
 27092                           tblptru	equ	0xFF8
 27093                           tblptrh	equ	0xFF7
 27094                           tblptrl	equ	0xFF6
 27095                           tablat	equ	0xFF5
 27096                           prodh	equ	0xFF4
 27097                           prodl	equ	0xFF3
 27098                           intcon	equ	0xFF2
 27099                           intcon2	equ	0xFF1
 27100                           intcon3	equ	0xFF0
 27101                           indf0	equ	0xFEF
 27102                           postinc0	equ	0xFEE
 27103                           fsr0h	equ	0xFEA
 27104                           fsr0l	equ	0xFE9
 27105                           wreg	equ	0xFE8
 27106                           postinc1	equ	0xFE6
 27107                           postdec1	equ	0xFE5
 27108                           plusw1	equ	0xFE3
 27109                           fsr1h	equ	0xFE2
 27110                           fsr1l	equ	0xFE1
 27111                           indf2	equ	0xFDF
 27112                           postinc2	equ	0xFDE
 27113                           postdec2	equ	0xFDD
 27114                           plusw2	equ	0xFDB
 27115                           fsr2h	equ	0xFDA
 27116                           fsr2l	equ	0xFD9
 27117                           status	equ	0xFD8
 27118                           
 27119 ;; *************** function _RADIO_WritePower *****************
 27120 ;; Defined at:
 27121 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27122 ;; Parameters:    Size  Location     Type
 27123 ;;  power           1    wreg     char 
 27124 ;; Auto vars:     Size  Location     Type
 27125 ;;  power           1   10[BANK0 ] char 
 27126 ;;  paDac           1    9[BANK0 ] unsigned char 
 27127 ;;  ocp             1    8[BANK0 ] unsigned char 
 27128 ;; Return value:  Size  Location     Type
 27129 ;;                  1    wreg      void 
 27130 ;; Registers used:
 27131 ;;		wreg, status,2, status,0, cstack
 27132 ;; Tracked objects:
 27133 ;;		On entry : F/1
 27134 ;;		On exit  : 0/0
 27135 ;;		Unchanged: 0/0
 27136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27138 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27140 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27141 ;;Total ram usage:        3 bytes
 27142 ;; Hardware stack levels used:    1
 27143 ;; Hardware stack levels required when called:   10
 27144 ;; This function calls:
 27145 ;;		_RADIO_RegisterRead
 27146 ;;		_RADIO_RegisterWrite
 27147 ;; This function is called by:
 27148 ;;		_RADIO_WriteConfiguration
 27149 ;; This function uses a non-reentrant model
 27150 ;;
 27151                           
 27152                           	psect	text142
 27153  005266                     __ptext142:
 27154                           	opt stack 0
 27155  005266                     _RADIO_WritePower:
 27156                           	opt stack 16
 27157                           
 27158                           ;incstack = 0
 27159                           ;RADIO_WritePower@power stored from wreg
 27160  005266  0100               	movlb	0	; () banked
 27161  005268  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27162                           
 27163                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27164                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27165                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27166  00526A  0101               	movlb	1	; () banked
 27167  00526C  519B               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27168  00526E  E127               	bnz	l12277
 27169                           
 27170                           ; BSR set to: 1
 27171                           ;radio_driver_SX1276.c: 348: {
 27172                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27173  005270  0100               	movlb	0	; () banked
 27174  005272  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27175  005274  0A80               	xorlw	128
 27176  005276  0F83               	addlw	131
 27177  005278  E202               	bc	l12257
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;radio_driver_SX1276.c: 351: {
 27181                           ;radio_driver_SX1276.c: 352: power = -3;
 27182  00527A  0EFD               	movlw	253
 27183  00527C  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27184  00527E                     l12257:
 27185                           
 27186                           ; BSR set to: 0
 27187                           ;radio_driver_SX1276.c: 353: }
 27188                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27189  00527E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27190  005280  0A80               	xorlw	128
 27191  005282  0F70               	addlw	-144
 27192  005284  E302               	bnc	l12261
 27193                           
 27194                           ; BSR set to: 0
 27195                           ;radio_driver_SX1276.c: 355: {
 27196                           ;radio_driver_SX1276.c: 356: power = 15;
 27197  005286  0E0F               	movlw	15
 27198  005288  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27199  00528A                     l12261:
 27200                           
 27201                           ; BSR set to: 0
 27202                           ;radio_driver_SX1276.c: 357: }
 27203                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27204  00528A  0E4D               	movlw	77
 27205  00528C  EC55  F039         	call	_RADIO_RegisterRead
 27206  005290  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27207                           
 27208                           ; BSR set to: 0
 27209                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27210  005292  0EF8               	movlw	248
 27211  005294  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27215  005296  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27216                           
 27217                           ; BSR set to: 0
 27218                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27219  005298  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27220  00529C  0E4D               	movlw	77
 27221  00529E  EC2C  F03A         	call	_RADIO_RegisterWrite
 27222                           
 27223                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27224  0052A2  0100               	movlb	0	; () banked
 27225  0052A4  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27226  0052A6  D005               	goto	l12275
 27227                           
 27228                           ; BSR set to: 0
 27229                           ;radio_driver_SX1276.c: 365: {
 27230                           ;radio_driver_SX1276.c: 369: power += 3;
 27231  0052A8  0E03               	movlw	3
 27232  0052AA  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27233                           
 27234                           ; BSR set to: 0
 27235                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27236  0052AC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27237  0052AE  0920               	iorlw	32
 27238  0052B0  D002               	goto	L19
 27239  0052B2                     l12275:
 27240                           
 27241                           ; BSR set to: 0
 27242                           ;radio_driver_SX1276.c: 372: else
 27243                           ;radio_driver_SX1276.c: 373: {
 27244                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27245  0052B2  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27246  0052B4  0970               	iorlw	112
 27247  0052B6                     L19:
 27248  0052B6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27249  0052B8  0E09               	movlw	9
 27250  0052BA  EF2C  F03A         	goto	_RADIO_RegisterWrite
 27251  0052BE                     l12277:
 27252                           
 27253                           ; BSR set to: 1
 27254                           ;radio_driver_SX1276.c: 380: else
 27255                           ;radio_driver_SX1276.c: 381: {
 27256                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27257  0052BE  0100               	movlb	0	; () banked
 27258  0052C0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27259  0052C2  0A80               	xorlw	128
 27260  0052C4  0F7E               	addlw	-130
 27261  0052C6  E202               	bc	l12281
 27262                           
 27263                           ; BSR set to: 0
 27264                           ;radio_driver_SX1276.c: 386: {
 27265                           ;radio_driver_SX1276.c: 387: power = 2;
 27266  0052C8  0E02               	movlw	2
 27267  0052CA  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27268  0052CC                     l12281:
 27269                           
 27270                           ; BSR set to: 0
 27271                           ;radio_driver_SX1276.c: 388: }
 27272                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27273  0052CC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27274  0052CE  0A80               	xorlw	128
 27275  0052D0  0F6C               	addlw	-148
 27276  0052D2  E302               	bnc	l12285
 27277                           
 27278                           ; BSR set to: 0
 27279                           ;radio_driver_SX1276.c: 392: {
 27280                           ;radio_driver_SX1276.c: 393: power = 20;
 27281  0052D4  0E14               	movlw	20
 27282  0052D6  D005               	goto	L18
 27283  0052D8                     l12285:
 27284                           
 27285                           ; BSR set to: 0
 27286                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27287  0052D8  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27288  0052DA  0A80               	xorlw	128
 27289  0052DC  0F6E               	addlw	-146
 27290  0052DE  E302               	bnc	l12289
 27291                           
 27292                           ; BSR set to: 0
 27293                           ;radio_driver_SX1276.c: 396: {
 27294                           ;radio_driver_SX1276.c: 397: power = 17;
 27295  0052E0  0E11               	movlw	17
 27296  0052E2                     L18:
 27297  0052E2  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27298  0052E4                     l12289:
 27299                           
 27300                           ; BSR set to: 0
 27301                           ;radio_driver_SX1276.c: 398: }
 27302                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27303  0052E4  0E0B               	movlw	11
 27304  0052E6  EC55  F039         	call	_RADIO_RegisterRead
 27305  0052EA  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27306                           
 27307                           ; BSR set to: 0
 27308                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27309  0052EC  0E4D               	movlw	77
 27310  0052EE  EC55  F039         	call	_RADIO_RegisterRead
 27311  0052F2  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27312                           
 27313                           ; BSR set to: 0
 27314                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27315  0052F4  0EF8               	movlw	248
 27316  0052F6  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27317                           
 27318                           ; BSR set to: 0
 27319                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27320  0052F8  0E14               	movlw	20
 27321  0052FA  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27322  0052FC  E106               	bnz	l12303
 27323                           
 27324                           ; BSR set to: 0
 27325                           ;radio_driver_SX1276.c: 404: {
 27326                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27327  0052FE  0E07               	movlw	7
 27328  005300  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27329                           
 27330                           ; BSR set to: 0
 27331                           ;radio_driver_SX1276.c: 406: power = 15;
 27332  005302  0E0F               	movlw	15
 27333  005304  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27334                           
 27335                           ; BSR set to: 0
 27336                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27337  005306  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27338                           
 27339                           ;radio_driver_SX1276.c: 408: }
 27340  005308  D004               	goto	l12309
 27341  00530A                     l12303:
 27342                           
 27343                           ; BSR set to: 0
 27344                           ;radio_driver_SX1276.c: 409: else
 27345                           ;radio_driver_SX1276.c: 410: {
 27346                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27347  00530A  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27348                           
 27349                           ; BSR set to: 0
 27350                           ;radio_driver_SX1276.c: 412: power -= 2;
 27351  00530C  0EFE               	movlw	254
 27352  00530E  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27353                           
 27354                           ; BSR set to: 0
 27355                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27356  005310  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27357  005312                     l12309:
 27358                           
 27359                           ; BSR set to: 0
 27360                           ;radio_driver_SX1276.c: 414: }
 27361                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27362  005312  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27363  005316  0E4D               	movlw	77
 27364  005318  EC2C  F03A         	call	_RADIO_RegisterWrite
 27365                           
 27366                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27367  00531C  0100               	movlb	0	; () banked
 27368  00531E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27369  005320  0980               	iorlw	128
 27370  005322  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27371  005324  0E09               	movlw	9
 27372  005326  EC2C  F03A         	call	_RADIO_RegisterWrite
 27373                           
 27374                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27375  00532A  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27376  00532E  0E0B               	movlw	11
 27377  005330  EF2C  F03A         	goto	_RADIO_RegisterWrite
 27378  005334                     __end_of_RADIO_WritePower:
 27379                           	opt stack 0
 27380                           tosu	equ	0xFFF
 27381                           tosh	equ	0xFFE
 27382                           tosl	equ	0xFFD
 27383                           pclath	equ	0xFFA
 27384                           tblptru	equ	0xFF8
 27385                           tblptrh	equ	0xFF7
 27386                           tblptrl	equ	0xFF6
 27387                           tablat	equ	0xFF5
 27388                           prodh	equ	0xFF4
 27389                           prodl	equ	0xFF3
 27390                           intcon	equ	0xFF2
 27391                           intcon2	equ	0xFF1
 27392                           intcon3	equ	0xFF0
 27393                           indf0	equ	0xFEF
 27394                           postinc0	equ	0xFEE
 27395                           fsr0h	equ	0xFEA
 27396                           fsr0l	equ	0xFE9
 27397                           wreg	equ	0xFE8
 27398                           postinc1	equ	0xFE6
 27399                           postdec1	equ	0xFE5
 27400                           plusw1	equ	0xFE3
 27401                           fsr1h	equ	0xFE2
 27402                           fsr1l	equ	0xFE1
 27403                           indf2	equ	0xFDF
 27404                           postinc2	equ	0xFDE
 27405                           postdec2	equ	0xFDD
 27406                           plusw2	equ	0xFDB
 27407                           fsr2h	equ	0xFDA
 27408                           fsr2l	equ	0xFD9
 27409                           status	equ	0xFD8
 27410                           
 27411 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27412 ;; Defined at:
 27413 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27414 ;; Parameters:    Size  Location     Type
 27415 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27416 ;; Auto vars:     Size  Location     Type
 27417 ;;  num             4   21[BANK0 ] unsigned long 
 27418 ;; Return value:  Size  Location     Type
 27419 ;;                  1    wreg      void 
 27420 ;; Registers used:
 27421 ;;		wreg, status,2, status,0, cstack
 27422 ;; Tracked objects:
 27423 ;;		On entry : F/1
 27424 ;;		On exit  : 0/0
 27425 ;;		Unchanged: 0/0
 27426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27428 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27430 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27431 ;;Total ram usage:        8 bytes
 27432 ;; Hardware stack levels used:    1
 27433 ;; Hardware stack levels required when called:   10
 27434 ;; This function calls:
 27435 ;;		_RADIO_RegisterWrite
 27436 ;;		___lldiv
 27437 ;; This function is called by:
 27438 ;;		_RADIO_WriteConfiguration
 27439 ;; This function uses a non-reentrant model
 27440 ;;
 27441                           
 27442                           	psect	text143
 27443  0064A8                     __ptext143:
 27444                           	opt stack 0
 27445  0064A8                     _RADIO_WriteFSKFrequencyDeviation:
 27446                           	opt stack 16
 27447                           
 27448                           ; BSR set to: 1
 27449                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27450                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27451                           
 27452                           ;incstack = 0
 27453  0064A8  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27454  0064AC  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27455  0064B0  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27456  0064B4  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27457                           
 27458                           ; BSR set to: 1
 27459                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27460  0064B8  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27461  0064BC  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27462  0064C0  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27463  0064C4  0100               	movlb	0	; () banked
 27464  0064C6  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27465                           
 27466                           ; BSR set to: 0
 27467                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27468  0064C8  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27469  0064CC  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27470  0064D0  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27471  0064D4  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27472  0064D8  0E09               	movlw	9
 27473  0064DA  6F68               	movwf	___lldiv@divisor& (0+255),b
 27474  0064DC  0E3D               	movlw	61
 27475  0064DE  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27476  0064E0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27477  0064E2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27478  0064E4  EC0D  F030         	call	___lldiv	;wreg free
 27479  0064E8  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27480  0064EC  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27481  0064F0  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27482  0064F4  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27483                           
 27484                           ; BSR set to: 0
 27485                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27486  0064F8  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27487  0064FC  0E04               	movlw	4
 27488  0064FE  EC2C  F03A         	call	_RADIO_RegisterWrite
 27489                           
 27490                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27491  006502  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27492  006506  0E05               	movlw	5
 27493  006508  EF2C  F03A         	goto	_RADIO_RegisterWrite
 27494  00650C                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27495                           	opt stack 0
 27496                           tosu	equ	0xFFF
 27497                           tosh	equ	0xFFE
 27498                           tosl	equ	0xFFD
 27499                           pclath	equ	0xFFA
 27500                           tblptru	equ	0xFF8
 27501                           tblptrh	equ	0xFF7
 27502                           tblptrl	equ	0xFF6
 27503                           tablat	equ	0xFF5
 27504                           prodh	equ	0xFF4
 27505                           prodl	equ	0xFF3
 27506                           intcon	equ	0xFF2
 27507                           intcon2	equ	0xFF1
 27508                           intcon3	equ	0xFF0
 27509                           indf0	equ	0xFEF
 27510                           postinc0	equ	0xFEE
 27511                           fsr0h	equ	0xFEA
 27512                           fsr0l	equ	0xFE9
 27513                           wreg	equ	0xFE8
 27514                           postinc1	equ	0xFE6
 27515                           postdec1	equ	0xFE5
 27516                           plusw1	equ	0xFE3
 27517                           fsr1h	equ	0xFE2
 27518                           fsr1l	equ	0xFE1
 27519                           indf2	equ	0xFDF
 27520                           postinc2	equ	0xFDE
 27521                           postdec2	equ	0xFDD
 27522                           plusw2	equ	0xFDB
 27523                           fsr2h	equ	0xFDA
 27524                           fsr2l	equ	0xFD9
 27525                           status	equ	0xFD8
 27526                           
 27527 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27528 ;; Defined at:
 27529 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27530 ;; Parameters:    Size  Location     Type
 27531 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27532 ;; Auto vars:     Size  Location     Type
 27533 ;;  num             4   21[BANK0 ] unsigned long 
 27534 ;; Return value:  Size  Location     Type
 27535 ;;                  1    wreg      void 
 27536 ;; Registers used:
 27537 ;;		wreg, status,2, status,0, cstack
 27538 ;; Tracked objects:
 27539 ;;		On entry : 0/1
 27540 ;;		On exit  : 0/0
 27541 ;;		Unchanged: 0/0
 27542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27543 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27544 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27546 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27547 ;;Total ram usage:        8 bytes
 27548 ;; Hardware stack levels used:    1
 27549 ;; Hardware stack levels required when called:   10
 27550 ;; This function calls:
 27551 ;;		_RADIO_RegisterWrite
 27552 ;;		___lldiv
 27553 ;; This function is called by:
 27554 ;;		_RADIO_WriteConfiguration
 27555 ;; This function uses a non-reentrant model
 27556 ;;
 27557                           
 27558                           	psect	text144
 27559  00656E                     __ptext144:
 27560                           	opt stack 0
 27561  00656E                     _RADIO_WriteFSKBitRate:
 27562                           	opt stack 16
 27563                           
 27564                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27565                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27566                           
 27567                           ;incstack = 0
 27568  00656E  0100               	movlb	0	; () banked
 27569  006570  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27570  006572  0E48               	movlw	72
 27571  006574  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27572  006576  0EE8               	movlw	232
 27573  006578  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27574  00657A  0E01               	movlw	1
 27575  00657C  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27576                           
 27577                           ; BSR set to: 0
 27578                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27579  00657E  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27580  006582  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27581  006586  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27582  00658A  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27583  00658E  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27584  006592  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27585  006596  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27586  00659A  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27587  00659E  EC0D  F030         	call	___lldiv	;wreg free
 27588  0065A2  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27589  0065A6  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27590  0065AA  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27591  0065AE  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27592                           
 27593                           ; BSR set to: 0
 27594                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27595  0065B2  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27596  0065B6  0E02               	movlw	2
 27597  0065B8  EC2C  F03A         	call	_RADIO_RegisterWrite
 27598                           
 27599                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27600  0065BC  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27601  0065C0  0E03               	movlw	3
 27602  0065C2  EC2C  F03A         	call	_RADIO_RegisterWrite
 27603                           
 27604                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27605  0065C6  0100               	movlb	0	; () banked
 27606  0065C8  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27607  0065CA  0E5D               	movlw	93
 27608  0065CC  EF2C  F03A         	goto	_RADIO_RegisterWrite
 27609  0065D0                     __end_of_RADIO_WriteFSKBitRate:
 27610                           	opt stack 0
 27611                           tosu	equ	0xFFF
 27612                           tosh	equ	0xFFE
 27613                           tosl	equ	0xFFD
 27614                           pclath	equ	0xFFA
 27615                           tblptru	equ	0xFF8
 27616                           tblptrh	equ	0xFF7
 27617                           tblptrl	equ	0xFF6
 27618                           tablat	equ	0xFF5
 27619                           prodh	equ	0xFF4
 27620                           prodl	equ	0xFF3
 27621                           intcon	equ	0xFF2
 27622                           intcon2	equ	0xFF1
 27623                           intcon3	equ	0xFF0
 27624                           indf0	equ	0xFEF
 27625                           postinc0	equ	0xFEE
 27626                           fsr0h	equ	0xFEA
 27627                           fsr0l	equ	0xFE9
 27628                           wreg	equ	0xFE8
 27629                           postinc1	equ	0xFE6
 27630                           postdec1	equ	0xFE5
 27631                           plusw1	equ	0xFE3
 27632                           fsr1h	equ	0xFE2
 27633                           fsr1l	equ	0xFE1
 27634                           indf2	equ	0xFDF
 27635                           postinc2	equ	0xFDE
 27636                           postdec2	equ	0xFDD
 27637                           plusw2	equ	0xFDB
 27638                           fsr2h	equ	0xFDA
 27639                           fsr2l	equ	0xFD9
 27640                           status	equ	0xFD8
 27641                           
 27642 ;; *************** function _PrepareJoinRequestFrame *****************
 27643 ;; Defined at:
 27644 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27645 ;; Parameters:    Size  Location     Type
 27646 ;;		None
 27647 ;; Auto vars:     Size  Location     Type
 27648 ;;  mic             4  117[BANK0 ] unsigned long 
 27649 ;;  iCtr            1  123[BANK0 ] unsigned char 
 27650 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27651 ;;  mhdr            1  121[BANK0 ] struct .
 27652 ;; Return value:  Size  Location     Type
 27653 ;;                  1    wreg      unsigned char 
 27654 ;; Registers used:
 27655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27656 ;; Tracked objects:
 27657 ;;		On entry : F/2
 27658 ;;		On exit  : F/0
 27659 ;;		Unchanged: 0/0
 27660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27662 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27664 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27665 ;;Total ram usage:        9 bytes
 27666 ;; Hardware stack levels used:    1
 27667 ;; Hardware stack levels required when called:   13
 27668 ;; This function calls:
 27669 ;;		_ComputeMic
 27670 ;;		_Random
 27671 ;;		_memcpy
 27672 ;;		_memset
 27673 ;; This function is called by:
 27674 ;;		_LORAWAN_Join
 27675 ;; This function uses a non-reentrant model
 27676 ;;
 27677                           
 27678                           	psect	text145
 27679  004632                     __ptext145:
 27680                           	opt stack 0
 27681  004632                     _PrepareJoinRequestFrame:
 27682                           	opt stack 16
 27683                           
 27684                           ; BSR set to: 2
 27685                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27686                           
 27687                           ;incstack = 0
 27688  004632  0100               	movlb	0	; () banked
 27689  004634  6BDA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27690                           
 27691                           ; BSR set to: 0
 27692                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27693                           ;lorawan.c: 1810: uint32_t mic;
 27694                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27695  004636  0EE0               	movlw	low _macBuffer
 27696  004638  6F64               	movwf	memset@p1& (0+255),b
 27697  00463A  0E04               	movlw	high _macBuffer
 27698  00463C  6F65               	movwf	(memset@p1+1)& (0+255),b
 27699  00463E  6B67               	clrf	(memset@c+1)& (0+255),b
 27700  004640  6B66               	clrf	memset@c& (0+255),b
 27701  004642  0E01               	movlw	1
 27702  004644  6F69               	movwf	(memset@n+1)& (0+255),b
 27703  004646  0E0F               	movlw	15
 27704  004648  6F68               	movwf	memset@n& (0+255),b
 27705  00464A  ECDE  F038         	call	_memset	;wreg free
 27706                           
 27707                           ; BSR set to: 0
 27708                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27709  00464E  0E1F               	movlw	-225
 27710  004650  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27711                           
 27712                           ; BSR set to: 0
 27713                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27714  004652  0EFC               	movlw	-4
 27715  004654  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27716                           
 27717                           ; BSR set to: 0
 27718                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27719  004656  0EE3               	movlw	-29
 27720  004658  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27721                           
 27722                           ; BSR set to: 0
 27723                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27724  00465A  EE24  F0E0         	lfsr	2,_macBuffer
 27725  00465E  C0D9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27726                           
 27727                           ; BSR set to: 0
 27728  004662  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27729                           
 27730                           ; BSR set to: 0
 27731                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27732  004664  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27733  004666                     l15435:
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;lorawan.c: 1821: {
 27737                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27738  004666  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27739  004668  0859               	sublw	low (_loRa+89)
 27740  00466A  6ED9               	movwf	fsr2l,c
 27741  00466C  0E00               	movlw	0
 27742  00466E  A0D8               	btfss	status,0,c
 27743  004670  2AE8               	incf	wreg,f,c
 27744  004672  0802               	sublw	high (_loRa+89)
 27745  004674  6EDA               	movwf	fsr2h,c
 27746  004676  0EE0               	movlw	low _macBuffer
 27747  004678  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27748  00467A  0E04               	movlw	high _macBuffer
 27749  00467C  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27750  00467E  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27751  004680  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27752  004682  0E00               	movlw	0
 27753  004684  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27754  004686  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27755  004688  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27756  00468A  6EE9               	movwf	fsr0l,c
 27757  00468C  0E00               	movlw	0
 27758  00468E  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27759  004690  6EEA               	movwf	fsr0h,c
 27760  004692  CFDF FFEF          	movff	indf2,indf0
 27761                           
 27762                           ; BSR set to: 0
 27763  004696  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27764                           
 27765                           ; BSR set to: 0
 27766  004698  0E07               	movlw	7
 27767  00469A  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27768  00469C  D7E4               	goto	l15435
 27769                           
 27770                           ; BSR set to: 0
 27771                           ;lorawan.c: 1823: }
 27772                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27773  00469E  0E08               	movlw	8
 27774  0046A0  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27775                           
 27776                           ; BSR set to: 0
 27777                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27778  0046A2  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27779  0046A4                     l15447:
 27780                           
 27781                           ; BSR set to: 0
 27782                           ;lorawan.c: 1828: {
 27783                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27784  0046A4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27785  0046A6  0861               	sublw	low (_loRa+97)
 27786  0046A8  6ED9               	movwf	fsr2l,c
 27787  0046AA  0E00               	movlw	0
 27788  0046AC  A0D8               	btfss	status,0,c
 27789  0046AE  2AE8               	incf	wreg,f,c
 27790  0046B0  0802               	sublw	high (_loRa+97)
 27791  0046B2  6EDA               	movwf	fsr2h,c
 27792  0046B4  0EE0               	movlw	low _macBuffer
 27793  0046B6  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27794  0046B8  0E04               	movlw	high _macBuffer
 27795  0046BA  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27796  0046BC  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27797  0046BE  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27798  0046C0  0E00               	movlw	0
 27799  0046C2  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27800  0046C4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27801  0046C6  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27802  0046C8  6EE9               	movwf	fsr0l,c
 27803  0046CA  0E00               	movlw	0
 27804  0046CC  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27805  0046CE  6EEA               	movwf	fsr0h,c
 27806  0046D0  CFDF FFEF          	movff	indf2,indf0
 27807                           
 27808                           ; BSR set to: 0
 27809  0046D4  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27810                           
 27811                           ; BSR set to: 0
 27812  0046D6  0E07               	movlw	7
 27813  0046D8  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27814  0046DA  D7E4               	goto	l15447
 27815                           
 27816                           ; BSR set to: 0
 27817                           ;lorawan.c: 1830: }
 27818                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27819  0046DC  0E08               	movlw	8
 27820  0046DE  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27824  0046E0  6978               	setf	(Random@max+1)& (0+255),b
 27825  0046E2  6977               	setf	Random@max& (0+255),b
 27826  0046E4  ECAE  F039         	call	_Random	;wreg free
 27827  0046E8  C077  F2D2         	movff	?_Random,_loRa+210
 27828  0046EC  C078  F2D3         	movff	?_Random+1,_loRa+211
 27829                           
 27830                           ; BSR set to: 0
 27831                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27832  0046F0  0EE0               	movlw	low _macBuffer
 27833  0046F2  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27834  0046F4  6F64               	movwf	memcpy@d1& (0+255),b
 27835  0046F6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27836  0046F8  0E04               	movlw	high _macBuffer
 27837  0046FA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27838  0046FC  0ED2               	movlw	low (_loRa+210)
 27839  0046FE  6F66               	movwf	memcpy@s1& (0+255),b
 27840  004700  0E02               	movlw	high (_loRa+210)
 27841  004702  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 27842  004704  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27843  004706  0E02               	movlw	2
 27844  004708  6F68               	movwf	memcpy@n& (0+255),b
 27845  00470A  EC01  F034         	call	_memcpy	;wreg free
 27846                           
 27847                           ; BSR set to: 0
 27848                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 27849  00470E  0E02               	movlw	2
 27850  004710  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27851                           
 27852                           ; BSR set to: 0
 27853                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 27854  004712  0E42               	movlw	low (_loRa+66)
 27855  004714  6FCA               	movwf	ComputeMic@key& (0+255),b
 27856  004716  0E02               	movlw	high (_loRa+66)
 27857  004718  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 27858  00471A  0EE0               	movlw	low _macBuffer
 27859  00471C  6FCC               	movwf	ComputeMic@buffer& (0+255),b
 27860  00471E  0E04               	movlw	high _macBuffer
 27861  004720  6FCD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 27862  004722  C0DA  F0CE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 27863  004726  EC56  F034         	call	_ComputeMic	;wreg free
 27864  00472A  C0CA  F0D5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 27865  00472E  C0CB  F0D6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 27866  004732  C0CC  F0D7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 27867  004736  C0CD  F0D8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 27868                           
 27869                           ; BSR set to: 0
 27870                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 27871  00473A  0EE0               	movlw	low _macBuffer
 27872  00473C  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27873  00473E  6F64               	movwf	memcpy@d1& (0+255),b
 27874  004740  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27875  004742  0E04               	movlw	high _macBuffer
 27876  004744  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27877  004746  0ED5               	movlw	low PrepareJoinRequestFrame@mic
 27878  004748  6F66               	movwf	memcpy@s1& (0+255),b
 27879  00474A  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 27880  00474C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27881  00474E  0E04               	movlw	4
 27882  004750  6F68               	movwf	memcpy@n& (0+255),b
 27883  004752  EC01  F034         	call	_memcpy	;wreg free
 27884                           
 27885                           ; BSR set to: 0
 27886                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 27887  004756  0E04               	movlw	4
 27888  004758  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;lorawan.c: 1842: return bufferIndex;
 27892  00475A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27893                           
 27894                           ; BSR set to: 0
 27895  00475C  0012               	return		;funcret
 27896  00475E                     __end_of_PrepareJoinRequestFrame:
 27897                           	opt stack 0
 27898                           tosu	equ	0xFFF
 27899                           tosh	equ	0xFFE
 27900                           tosl	equ	0xFFD
 27901                           pclath	equ	0xFFA
 27902                           tblptru	equ	0xFF8
 27903                           tblptrh	equ	0xFF7
 27904                           tblptrl	equ	0xFF6
 27905                           tablat	equ	0xFF5
 27906                           prodh	equ	0xFF4
 27907                           prodl	equ	0xFF3
 27908                           intcon	equ	0xFF2
 27909                           intcon2	equ	0xFF1
 27910                           intcon3	equ	0xFF0
 27911                           indf0	equ	0xFEF
 27912                           postinc0	equ	0xFEE
 27913                           fsr0h	equ	0xFEA
 27914                           fsr0l	equ	0xFE9
 27915                           wreg	equ	0xFE8
 27916                           postinc1	equ	0xFE6
 27917                           postdec1	equ	0xFE5
 27918                           plusw1	equ	0xFE3
 27919                           fsr1h	equ	0xFE2
 27920                           fsr1l	equ	0xFE1
 27921                           indf2	equ	0xFDF
 27922                           postinc2	equ	0xFDE
 27923                           postdec2	equ	0xFDD
 27924                           plusw2	equ	0xFDB
 27925                           fsr2h	equ	0xFDA
 27926                           fsr2l	equ	0xFD9
 27927                           status	equ	0xFD8
 27928                           
 27929 ;; *************** function _Random *****************
 27930 ;; Defined at:
 27931 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27932 ;; Parameters:    Size  Location     Type
 27933 ;;  max             2   23[BANK0 ] unsigned int 
 27934 ;; Auto vars:     Size  Location     Type
 27935 ;;		None
 27936 ;; Return value:  Size  Location     Type
 27937 ;;                  2   23[BANK0 ] unsigned int 
 27938 ;; Registers used:
 27939 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27940 ;; Tracked objects:
 27941 ;;		On entry : F/0
 27942 ;;		On exit  : F/0
 27943 ;;		Unchanged: 0/0
 27944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27949 ;;Total ram usage:        2 bytes
 27950 ;; Hardware stack levels used:    1
 27951 ;; Hardware stack levels required when called:    9
 27952 ;; This function calls:
 27953 ;;		___lwmod
 27954 ;;		_rand
 27955 ;; This function is called by:
 27956 ;;		_SearchAvailableChannel
 27957 ;;		_PrepareJoinRequestFrame
 27958 ;; This function uses a non-reentrant model
 27959 ;;
 27960                           
 27961                           	psect	text146
 27962  00735C                     __ptext146:
 27963                           	opt stack 0
 27964  00735C                     _Random:
 27965                           	opt stack 17
 27966                           
 27967                           ; BSR set to: 0
 27968                           ;lorawan.c: 1118: return (rand () % max);
 27969                           
 27970                           ; BSR set to: 0
 27971                           ;incstack = 0
 27972  00735C  ECCF  F034         	call	_rand	;wreg free
 27973  007360  C070  F072         	movff	?_rand,___lwmod@dividend
 27974  007364  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 27975  007368  C077  F074         	movff	Random@max,___lwmod@divisor
 27976  00736C  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 27977  007370  ECA2  F036         	call	___lwmod	;wreg free
 27978  007374  C072  F077         	movff	?___lwmod,?_Random
 27979  007378  C073  F078         	movff	?___lwmod+1,?_Random+1
 27980                           
 27981                           ; BSR set to: 0
 27982  00737C  0012               	return		;funcret
 27983  00737E                     __end_of_Random:
 27984                           	opt stack 0
 27985                           tosu	equ	0xFFF
 27986                           tosh	equ	0xFFE
 27987                           tosl	equ	0xFFD
 27988                           pclath	equ	0xFFA
 27989                           tblptru	equ	0xFF8
 27990                           tblptrh	equ	0xFF7
 27991                           tblptrl	equ	0xFF6
 27992                           tablat	equ	0xFF5
 27993                           prodh	equ	0xFF4
 27994                           prodl	equ	0xFF3
 27995                           intcon	equ	0xFF2
 27996                           intcon2	equ	0xFF1
 27997                           intcon3	equ	0xFF0
 27998                           indf0	equ	0xFEF
 27999                           postinc0	equ	0xFEE
 28000                           fsr0h	equ	0xFEA
 28001                           fsr0l	equ	0xFE9
 28002                           wreg	equ	0xFE8
 28003                           postinc1	equ	0xFE6
 28004                           postdec1	equ	0xFE5
 28005                           plusw1	equ	0xFE3
 28006                           fsr1h	equ	0xFE2
 28007                           fsr1l	equ	0xFE1
 28008                           indf2	equ	0xFDF
 28009                           postinc2	equ	0xFDE
 28010                           postdec2	equ	0xFDD
 28011                           plusw2	equ	0xFDB
 28012                           fsr2h	equ	0xFDA
 28013                           fsr2l	equ	0xFD9
 28014                           status	equ	0xFD8
 28015                           
 28016 ;; *************** function _rand *****************
 28017 ;; Defined at:
 28018 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 28019 ;; Parameters:    Size  Location     Type
 28020 ;;		None
 28021 ;; Auto vars:     Size  Location     Type
 28022 ;;		None
 28023 ;; Return value:  Size  Location     Type
 28024 ;;                  2   16[BANK0 ] int 
 28025 ;; Registers used:
 28026 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28027 ;; Tracked objects:
 28028 ;;		On entry : F/0
 28029 ;;		On exit  : F/0
 28030 ;;		Unchanged: 0/0
 28031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28036 ;;Total ram usage:        2 bytes
 28037 ;; Hardware stack levels used:    1
 28038 ;; Hardware stack levels required when called:    8
 28039 ;; This function calls:
 28040 ;;		___lmul
 28041 ;; This function is called by:
 28042 ;;		_Random
 28043 ;; This function uses a non-reentrant model
 28044 ;;
 28045                           
 28046                           	psect	text147
 28047  00699E                     __ptext147:
 28048                           	opt stack 0
 28049  00699E                     _rand:
 28050                           	opt stack 17
 28051                           
 28052                           ; BSR set to: 0
 28053                           
 28054                           ; BSR set to: 0
 28055                           ;incstack = 0
 28056  00699E  C052  F064         	movff	_randx,___lmul@multiplier
 28057  0069A2  C053  F065         	movff	_randx+1,___lmul@multiplier+1
 28058  0069A6  C054  F066         	movff	_randx+2,___lmul@multiplier+2
 28059  0069AA  C055  F067         	movff	_randx+3,___lmul@multiplier+3
 28060  0069AE  0E6D               	movlw	109
 28061  0069B0  6F68               	movwf	___lmul@multiplicand& (0+255),b
 28062  0069B2  0E4E               	movlw	78
 28063  0069B4  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28064  0069B6  0EC6               	movlw	198
 28065  0069B8  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28066  0069BA  0E41               	movlw	65
 28067  0069BC  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28068  0069BE  EC8F  F02E         	call	___lmul	;wreg free
 28069  0069C2  C064  F052         	movff	?___lmul,_randx
 28070  0069C6  C065  F053         	movff	?___lmul+1,_randx+1
 28071  0069CA  C066  F054         	movff	?___lmul+2,_randx+2
 28072  0069CE  C067  F055         	movff	?___lmul+3,_randx+3
 28073                           
 28074                           ; BSR set to: 0
 28075  0069D2  0E39               	movlw	57
 28076  0069D4  2652               	addwf	_randx,f,c
 28077  0069D6  0E30               	movlw	48
 28078  0069D8  2253               	addwfc	_randx+1,f,c
 28079  0069DA  0E00               	movlw	0
 28080  0069DC  2254               	addwfc	_randx+2,f,c
 28081  0069DE  2255               	addwfc	_randx+3,f,c
 28082                           
 28083                           ; BSR set to: 0
 28084  0069E0  5054               	movf	_randx+2,w,c
 28085  0069E2  6F70               	movwf	?_rand& (0+255),b
 28086  0069E4  0E7F               	movlw	127
 28087  0069E6  1455               	andwf	_randx+3,w,c
 28088  0069E8  6F71               	movwf	(?_rand+1)& (0+255),b
 28089                           
 28090                           ; BSR set to: 0
 28091  0069EA  0012               	return		;funcret
 28092  0069EC                     __end_of_rand:
 28093                           	opt stack 0
 28094                           tosu	equ	0xFFF
 28095                           tosh	equ	0xFFE
 28096                           tosl	equ	0xFFD
 28097                           pclath	equ	0xFFA
 28098                           tblptru	equ	0xFF8
 28099                           tblptrh	equ	0xFF7
 28100                           tblptrl	equ	0xFF6
 28101                           tablat	equ	0xFF5
 28102                           prodh	equ	0xFF4
 28103                           prodl	equ	0xFF3
 28104                           intcon	equ	0xFF2
 28105                           intcon2	equ	0xFF1
 28106                           intcon3	equ	0xFF0
 28107                           indf0	equ	0xFEF
 28108                           postinc0	equ	0xFEE
 28109                           fsr0h	equ	0xFEA
 28110                           fsr0l	equ	0xFE9
 28111                           wreg	equ	0xFE8
 28112                           postinc1	equ	0xFE6
 28113                           postdec1	equ	0xFE5
 28114                           plusw1	equ	0xFE3
 28115                           fsr1h	equ	0xFE2
 28116                           fsr1l	equ	0xFE1
 28117                           indf2	equ	0xFDF
 28118                           postinc2	equ	0xFDE
 28119                           postdec2	equ	0xFDD
 28120                           plusw2	equ	0xFDB
 28121                           fsr2h	equ	0xFDA
 28122                           fsr2l	equ	0xFD9
 28123                           status	equ	0xFD8
 28124                           
 28125 ;; *************** function ___lmul *****************
 28126 ;; Defined at:
 28127 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 28128 ;; Parameters:    Size  Location     Type
 28129 ;;  multiplier      4    4[BANK0 ] unsigned long 
 28130 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 28131 ;; Auto vars:     Size  Location     Type
 28132 ;;  product         4   12[BANK0 ] unsigned long 
 28133 ;; Return value:  Size  Location     Type
 28134 ;;                  4    4[BANK0 ] unsigned long 
 28135 ;; Registers used:
 28136 ;;		wreg, status,2, status,0, prodl, prodh
 28137 ;; Tracked objects:
 28138 ;;		On entry : F/0
 28139 ;;		On exit  : F/0
 28140 ;;		Unchanged: 0/0
 28141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28142 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28143 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28145 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28146 ;;Total ram usage:       12 bytes
 28147 ;; Hardware stack levels used:    1
 28148 ;; Hardware stack levels required when called:    7
 28149 ;; This function calls:
 28150 ;;		Nothing
 28151 ;; This function is called by:
 28152 ;;		_RADIO_WriteConfiguration
 28153 ;;		_ExecuteNewChannel
 28154 ;;		_ExecuteRxParamSetupReq
 28155 ;;		_UpdateCfList
 28156 ;;		_rand
 28157 ;; This function uses a non-reentrant model
 28158 ;;
 28159                           
 28160                           	psect	text148
 28161  005D1E                     __ptext148:
 28162                           	opt stack 0
 28163  005D1E                     ___lmul:
 28164                           	opt stack 17
 28165                           
 28166                           ; BSR set to: 0
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;incstack = 0
 28170  005D1E  5164               	movf	___lmul@multiplier& (0+255),w,b
 28171  005D20  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28172  005D22  CFF3 F06C          	movff	prodl,___lmul@product
 28173  005D26  CFF4 F06D          	movff	prodh,___lmul@product+1
 28174  005D2A  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 28175  005D2C  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 28176  005D2E  5164               	movf	___lmul@multiplier& (0+255),w,b
 28177  005D30  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28178  005D32  50F3               	movf	prodl,w,c
 28179  005D34  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28180  005D36  50F4               	movf	prodh,w,c
 28181  005D38  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28182  005D3A  0E00               	movlw	0
 28183  005D3C  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28184  005D3E  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28185  005D40  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28186  005D42  50F3               	movf	prodl,w,c
 28187  005D44  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28188  005D46  50F4               	movf	prodh,w,c
 28189  005D48  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28190  005D4A  0E00               	movlw	0
 28191  005D4C  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28192  005D4E  5164               	movf	___lmul@multiplier& (0+255),w,b
 28193  005D50  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28194  005D52  50F3               	movf	prodl,w,c
 28195  005D54  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28196  005D56  50F4               	movf	prodh,w,c
 28197  005D58  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28198  005D5A  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28199  005D5C  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28200  005D5E  50F3               	movf	prodl,w,c
 28201  005D60  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28202  005D62  50F4               	movf	prodh,w,c
 28203  005D64  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28204  005D66  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28205  005D68  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28206  005D6A  50F3               	movf	prodl,w,c
 28207  005D6C  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28208  005D6E  50F4               	movf	prodh,w,c
 28209  005D70  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28210  005D72  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28211  005D74  0364               	mulwf	___lmul@multiplier& (0+255),b
 28212  005D76  50F3               	movf	prodl,w,c
 28213  005D78  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28214  005D7A  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28215  005D7C  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28216  005D7E  50F3               	movf	prodl,w,c
 28217  005D80  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28218  005D82  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28219  005D84  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28220  005D86  50F3               	movf	prodl,w,c
 28221  005D88  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28222  005D8A  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28223  005D8C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28224  005D8E  50F3               	movf	prodl,w,c
 28225  005D90  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28226                           
 28227                           ; BSR set to: 0
 28228  005D92  C06C  F064         	movff	___lmul@product,?___lmul
 28229  005D96  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28230  005D9A  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28231  005D9E  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28232                           
 28233                           ; BSR set to: 0
 28234  005DA2  0012               	return		;funcret
 28235  005DA4                     __end_of___lmul:
 28236                           	opt stack 0
 28237                           tosu	equ	0xFFF
 28238                           tosh	equ	0xFFE
 28239                           tosl	equ	0xFFD
 28240                           pclath	equ	0xFFA
 28241                           tblptru	equ	0xFF8
 28242                           tblptrh	equ	0xFF7
 28243                           tblptrl	equ	0xFF6
 28244                           tablat	equ	0xFF5
 28245                           prodh	equ	0xFF4
 28246                           prodl	equ	0xFF3
 28247                           intcon	equ	0xFF2
 28248                           intcon2	equ	0xFF1
 28249                           intcon3	equ	0xFF0
 28250                           indf0	equ	0xFEF
 28251                           postinc0	equ	0xFEE
 28252                           fsr0h	equ	0xFEA
 28253                           fsr0l	equ	0xFE9
 28254                           wreg	equ	0xFE8
 28255                           postinc1	equ	0xFE6
 28256                           postdec1	equ	0xFE5
 28257                           plusw1	equ	0xFE3
 28258                           fsr1h	equ	0xFE2
 28259                           fsr1l	equ	0xFE1
 28260                           indf2	equ	0xFDF
 28261                           postinc2	equ	0xFDE
 28262                           postdec2	equ	0xFDD
 28263                           plusw2	equ	0xFDB
 28264                           fsr2h	equ	0xFDA
 28265                           fsr2l	equ	0xFD9
 28266                           status	equ	0xFD8
 28267                           
 28268 ;; *************** function ___lwmod *****************
 28269 ;; Defined at:
 28270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28271 ;; Parameters:    Size  Location     Type
 28272 ;;  dividend        2   18[BANK0 ] unsigned int 
 28273 ;;  divisor         2   20[BANK0 ] unsigned int 
 28274 ;; Auto vars:     Size  Location     Type
 28275 ;;  counter         1   22[BANK0 ] unsigned char 
 28276 ;; Return value:  Size  Location     Type
 28277 ;;                  2   18[BANK0 ] unsigned int 
 28278 ;; Registers used:
 28279 ;;		wreg, status,2, status,0
 28280 ;; Tracked objects:
 28281 ;;		On entry : F/0
 28282 ;;		On exit  : F/0
 28283 ;;		Unchanged: 0/0
 28284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28288 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28289 ;;Total ram usage:        5 bytes
 28290 ;; Hardware stack levels used:    1
 28291 ;; Hardware stack levels required when called:    7
 28292 ;; This function calls:
 28293 ;;		Nothing
 28294 ;; This function is called by:
 28295 ;;		_Random
 28296 ;; This function uses a non-reentrant model
 28297 ;;
 28298                           
 28299                           	psect	text149
 28300  006D44                     __ptext149:
 28301                           	opt stack 0
 28302  006D44                     ___lwmod:
 28303                           	opt stack 18
 28304                           
 28305                           ; BSR set to: 0
 28306                           
 28307                           ; BSR set to: 0
 28308                           ;incstack = 0
 28309  006D44  5174               	movf	___lwmod@divisor& (0+255),w,b
 28310  006D46  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28311  006D48  E017               	bz	l3164
 28312                           
 28313                           ; BSR set to: 0
 28314  006D4A  0E01               	movlw	1
 28315  006D4C  6F76               	movwf	___lwmod@counter& (0+255),b
 28316  006D4E  D004               	goto	l12407
 28317  006D50                     l12405:
 28318                           
 28319                           ; BSR set to: 0
 28320  006D50  90D8               	bcf	status,0,c
 28321  006D52  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28322  006D54  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28323  006D56  2B76               	incf	___lwmod@counter& (0+255),f,b
 28324  006D58                     l12407:
 28325                           
 28326                           ; BSR set to: 0
 28327  006D58  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28328  006D5A  D7FA               	goto	l12405
 28329  006D5C                     l12409:
 28330                           
 28331                           ; BSR set to: 0
 28332  006D5C  5174               	movf	___lwmod@divisor& (0+255),w,b
 28333  006D5E  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28334  006D60  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28335  006D62  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28336  006D64  E304               	bnc	l12413
 28337                           
 28338                           ; BSR set to: 0
 28339  006D66  5174               	movf	___lwmod@divisor& (0+255),w,b
 28340  006D68  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28341  006D6A  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28342  006D6C  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28343  006D6E                     l12413:
 28344                           
 28345                           ; BSR set to: 0
 28346  006D6E  90D8               	bcf	status,0,c
 28347  006D70  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28348  006D72  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28349                           
 28350                           ; BSR set to: 0
 28351  006D74  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28352  006D76  D7F2               	goto	l12409
 28353  006D78                     l3164:
 28354                           
 28355                           ; BSR set to: 0
 28356  006D78  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28357  006D7C  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28358                           
 28359                           ; BSR set to: 0
 28360  006D80  0012               	return		;funcret
 28361  006D82                     __end_of___lwmod:
 28362                           	opt stack 0
 28363                           tosu	equ	0xFFF
 28364                           tosh	equ	0xFFE
 28365                           tosl	equ	0xFFD
 28366                           pclath	equ	0xFFA
 28367                           tblptru	equ	0xFF8
 28368                           tblptrh	equ	0xFF7
 28369                           tblptrl	equ	0xFF6
 28370                           tablat	equ	0xFF5
 28371                           prodh	equ	0xFF4
 28372                           prodl	equ	0xFF3
 28373                           intcon	equ	0xFF2
 28374                           intcon2	equ	0xFF1
 28375                           intcon3	equ	0xFF0
 28376                           indf0	equ	0xFEF
 28377                           postinc0	equ	0xFEE
 28378                           fsr0h	equ	0xFEA
 28379                           fsr0l	equ	0xFE9
 28380                           wreg	equ	0xFE8
 28381                           postinc1	equ	0xFE6
 28382                           postdec1	equ	0xFE5
 28383                           plusw1	equ	0xFE3
 28384                           fsr1h	equ	0xFE2
 28385                           fsr1l	equ	0xFE1
 28386                           indf2	equ	0xFDF
 28387                           postinc2	equ	0xFDE
 28388                           postdec2	equ	0xFDD
 28389                           plusw2	equ	0xFDB
 28390                           fsr2h	equ	0xFDA
 28391                           fsr2l	equ	0xFD9
 28392                           status	equ	0xFD8
 28393                           
 28394 ;; *************** function _ComputeMic *****************
 28395 ;; Defined at:
 28396 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28397 ;; Parameters:    Size  Location     Type
 28398 ;;  key             2  106[BANK0 ] PTR unsigned char 
 28399 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28400 ;;  buffer          2  108[BANK0 ] PTR unsigned char 
 28401 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28402 ;;  bufferLength    1  110[BANK0 ] unsigned char 
 28403 ;; Auto vars:     Size  Location     Type
 28404 ;;  mic             4  111[BANK0 ] unsigned long 
 28405 ;; Return value:  Size  Location     Type
 28406 ;;                  4  106[BANK0 ] unsigned long 
 28407 ;; Registers used:
 28408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28409 ;; Tracked objects:
 28410 ;;		On entry : F/0
 28411 ;;		On exit  : F/0
 28412 ;;		Unchanged: 0/0
 28413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28414 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28415 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28417 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28418 ;;Total ram usage:        9 bytes
 28419 ;; Hardware stack levels used:    1
 28420 ;; Hardware stack levels required when called:   12
 28421 ;; This function calls:
 28422 ;;		_AESCmac
 28423 ;;		_memcpy
 28424 ;; This function is called by:
 28425 ;;		_LORAWAN_RxDone
 28426 ;;		_PrepareJoinRequestFrame
 28427 ;; This function uses a non-reentrant model
 28428 ;;
 28429                           
 28430                           	psect	text150
 28431  0068AC                     __ptext150:
 28432                           	opt stack 0
 28433  0068AC                     _ComputeMic:
 28434                           	opt stack 14
 28435                           
 28436                           ; BSR set to: 0
 28437                           ;lorawan.c: 2196: uint32_t mic = 0;
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;incstack = 0
 28441  0068AC  6BCF               	clrf	ComputeMic@mic& (0+255),b
 28442  0068AE  6BD0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28443  0068B0  6BD1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28444  0068B2  6BD2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28445                           
 28446                           ; BSR set to: 0
 28447                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28448  0068B4  C0CA  F0BC         	movff	ComputeMic@key,AESCmac@key
 28449  0068B8  C0CB  F0BD         	movff	ComputeMic@key+1,AESCmac@key+1
 28450  0068BC  0EB4               	movlw	low _aesBuffer
 28451  0068BE  6FBE               	movwf	AESCmac@output& (0+255),b
 28452  0068C0  0E01               	movlw	high _aesBuffer
 28453  0068C2  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 28454  0068C4  C0CC  F0C0         	movff	ComputeMic@buffer,AESCmac@input
 28455  0068C8  C0CD  F0C1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28456  0068CC  C0CE  F0C2         	movff	ComputeMic@bufferLength,AESCmac@size
 28457  0068D0  ECFD  F00B         	call	_AESCmac	;wreg free
 28458                           
 28459                           ; BSR set to: 0
 28460                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28461  0068D4  0ECF               	movlw	low ComputeMic@mic
 28462  0068D6  6F64               	movwf	memcpy@d1& (0+255),b
 28463  0068D8  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28464  0068DA  0EB4               	movlw	low _aesBuffer
 28465  0068DC  6F66               	movwf	memcpy@s1& (0+255),b
 28466  0068DE  0E01               	movlw	high _aesBuffer
 28467  0068E0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28468  0068E2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28469  0068E4  0E04               	movlw	4
 28470  0068E6  6F68               	movwf	memcpy@n& (0+255),b
 28471  0068E8  EC01  F034         	call	_memcpy	;wreg free
 28472                           
 28473                           ; BSR set to: 0
 28474                           ;lorawan.c: 2202: return mic;
 28475  0068EC  C0CF  F0CA         	movff	ComputeMic@mic,?_ComputeMic
 28476  0068F0  C0D0  F0CB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28477  0068F4  C0D1  F0CC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28478  0068F8  C0D2  F0CD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28479                           
 28480                           ; BSR set to: 0
 28481  0068FC  0012               	return		;funcret
 28482  0068FE                     __end_of_ComputeMic:
 28483                           	opt stack 0
 28484                           tosu	equ	0xFFF
 28485                           tosh	equ	0xFFE
 28486                           tosl	equ	0xFFD
 28487                           pclath	equ	0xFFA
 28488                           tblptru	equ	0xFF8
 28489                           tblptrh	equ	0xFF7
 28490                           tblptrl	equ	0xFF6
 28491                           tablat	equ	0xFF5
 28492                           prodh	equ	0xFF4
 28493                           prodl	equ	0xFF3
 28494                           intcon	equ	0xFF2
 28495                           intcon2	equ	0xFF1
 28496                           intcon3	equ	0xFF0
 28497                           indf0	equ	0xFEF
 28498                           postinc0	equ	0xFEE
 28499                           fsr0h	equ	0xFEA
 28500                           fsr0l	equ	0xFE9
 28501                           wreg	equ	0xFE8
 28502                           postinc1	equ	0xFE6
 28503                           postdec1	equ	0xFE5
 28504                           plusw1	equ	0xFE3
 28505                           fsr1h	equ	0xFE2
 28506                           fsr1l	equ	0xFE1
 28507                           indf2	equ	0xFDF
 28508                           postinc2	equ	0xFDE
 28509                           postdec2	equ	0xFDD
 28510                           plusw2	equ	0xFDB
 28511                           fsr2h	equ	0xFDA
 28512                           fsr2l	equ	0xFD9
 28513                           status	equ	0xFD8
 28514                           
 28515 ;; *************** function _AESCmac *****************
 28516 ;; Defined at:
 28517 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28518 ;; Parameters:    Size  Location     Type
 28519 ;;  key             2   92[BANK0 ] PTR unsigned char 
 28520 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28521 ;;  output          2   94[BANK0 ] PTR unsigned char 
 28522 ;;		 -> aesBuffer(16), 
 28523 ;;  input           2   96[BANK0 ] PTR unsigned char 
 28524 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28525 ;;  size            1   98[BANK0 ] unsigned char 
 28526 ;; Auto vars:     Size  Location     Type
 28527 ;;  x              16   80[BANK1 ] unsigned char [16]
 28528 ;;  y              16   64[BANK1 ] unsigned char [16]
 28529 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28530 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28531 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28532 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28533 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28534 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28535 ;;  i               1  101[BANK1 ] unsigned char 
 28536 ;;  j               1  100[BANK1 ] unsigned char 
 28537 ;;  n               1   99[BANK1 ] unsigned char 
 28538 ;;  flag            1   98[BANK1 ] unsigned char 
 28539 ;; Return value:  Size  Location     Type
 28540 ;;                  1    wreg      void 
 28541 ;; Registers used:
 28542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28543 ;; Tracked objects:
 28544 ;;		On entry : F/0
 28545 ;;		On exit  : F/0
 28546 ;;		Unchanged: 0/0
 28547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28548 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28549 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28550 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28551 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28552 ;;Total ram usage:      116 bytes
 28553 ;; Hardware stack levels used:    1
 28554 ;; Hardware stack levels required when called:   11
 28555 ;; This function calls:
 28556 ;;		_AESEncodeLoRa
 28557 ;;		_GenerateSubkey
 28558 ;;		_memcpy
 28559 ;;		_memset
 28560 ;; This function is called by:
 28561 ;;		_LORAWAN_RxDone
 28562 ;;		_AssemblePacket
 28563 ;;		_ComputeMic
 28564 ;; This function uses a non-reentrant model
 28565 ;;
 28566                           
 28567                           	psect	text151
 28568  0017FA                     __ptext151:
 28569                           	opt stack 0
 28570  0017FA                     _AESCmac:
 28571                           	opt stack 16
 28572                           
 28573                           ; BSR set to: 0
 28574                           
 28575                           ; BSR set to: 0
 28576                           ;incstack = 0
 28577  0017FA  0101               	movlb	1	; () banked
 28578  0017FC  6B65               	clrf	AESCmac@i& (0+255),b
 28579  0017FE  6B64               	clrf	AESCmac@j& (0+255),b
 28580                           
 28581                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28582  001800  6B62               	clrf	AESCmac@flag& (0+255),b
 28583                           
 28584                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28585                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28586                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28587  001802  6B60               	clrf	AESCmac@ptr& (0+255),b
 28588  001804  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28589                           
 28590                           ; BSR set to: 1
 28591                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28592  001806  C0BC  F094         	movff	AESCmac@key,GenerateSubkey@key
 28593  00180A  C0BD  F095         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28594  00180E  0E10               	movlw	low AESCmac@k1
 28595  001810  0100               	movlb	0	; () banked
 28596  001812  6F96               	movwf	GenerateSubkey@k1& (0+255),b
 28597  001814  0E01               	movlw	high AESCmac@k1
 28598  001816  6F97               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28599  001818  0E00               	movlw	low AESCmac@k2
 28600  00181A  6F98               	movwf	GenerateSubkey@k2& (0+255),b
 28601  00181C  0E01               	movlw	high AESCmac@k2
 28602  00181E  6F99               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28603  001820  EC32  F024         	call	_GenerateSubkey	;wreg free
 28604                           
 28605                           ; BSR set to: 0
 28606                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28607  001824  51C2               	movf	AESCmac@size& (0+255),w,b
 28608  001826  6FC3               	movwf	??_AESCmac& (0+255),b
 28609  001828  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28610  00182A  0E0F               	movlw	15
 28611  00182C  27C3               	addwf	??_AESCmac& (0+255),f,b
 28612  00182E  0E00               	movlw	0
 28613  001830  23C4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28614  001832  0E04               	movlw	4
 28615  001834  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28616  001836                     u14155:
 28617  001836  35C4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28618  001838  33C4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28619  00183A  33C3               	rrcf	??_AESCmac& (0+255),f,b
 28620  00183C  2FC5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28621  00183E  D7FB               	goto	u14155
 28622  001840  51C3               	movf	??_AESCmac& (0+255),w,b
 28623  001842  0101               	movlb	1	; () banked
 28624  001844  6F63               	movwf	AESCmac@n& (0+255),b
 28625                           
 28626                           ; BSR set to: 1
 28627                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28628  001846  5163               	movf	AESCmac@n& (0+255),w,b
 28629  001848  E104               	bnz	l13033
 28630                           
 28631                           ; BSR set to: 1
 28632                           ;lorawan_aes_cmac.c: 53: {
 28633                           ;lorawan_aes_cmac.c: 54: n = 1;
 28634  00184A  0E01               	movlw	1
 28635  00184C  6F63               	movwf	AESCmac@n& (0+255),b
 28636                           
 28637                           ; BSR set to: 1
 28638                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28639  00184E  6B62               	clrf	AESCmac@flag& (0+255),b
 28640                           
 28641                           ;lorawan_aes_cmac.c: 56: }
 28642  001850  D00A               	goto	l1454
 28643  001852                     l13033:
 28644                           
 28645                           ; BSR set to: 1
 28646                           ;lorawan_aes_cmac.c: 57: else
 28647                           ;lorawan_aes_cmac.c: 58: {
 28648                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28649  001852  C0C2  F0C3         	movff	AESCmac@size,??_AESCmac
 28650  001856  0E0F               	movlw	15
 28651  001858  0100               	movlb	0	; () banked
 28652  00185A  17C3               	andwf	??_AESCmac& (0+255),f,b
 28653  00185C  0E01               	movlw	1
 28654  00185E  A4D8               	btfss	status,2,c
 28655  001860  0E00               	movlw	0
 28656  001862  0101               	movlb	1	; () banked
 28657  001864  6F62               	movwf	AESCmac@flag& (0+255),b
 28658  001866                     l1454:
 28659                           
 28660                           ; BSR set to: 1
 28661                           ;lorawan_aes_cmac.c: 60: }
 28662                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28663  001866  0562               	decf	AESCmac@flag& (0+255),w,b
 28664  001868  E141               	bnz	l13047
 28665                           
 28666                           ; BSR set to: 1
 28667                           ;lorawan_aes_cmac.c: 63: {
 28668                           ;lorawan_aes_cmac.c: 64: j = 0;
 28669  00186A  6B64               	clrf	AESCmac@j& (0+255),b
 28670                           
 28671                           ; BSR set to: 1
 28672                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28673  00186C  5163               	movf	AESCmac@n& (0+255),w,b
 28674  00186E  0D10               	mullw	16
 28675  001870  50F3               	movf	prodl,w,c
 28676  001872  0FF0               	addlw	240
 28677  001874  6F65               	movwf	AESCmac@i& (0+255),b
 28678  001876  D01E               	goto	l13045
 28679  001878                     l13039:
 28680                           
 28681                           ; BSR set to: 0
 28682                           ;lorawan_aes_cmac.c: 66: {
 28683                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28684  001878  0E20               	movlw	low AESCmac@mLast
 28685  00187A  0101               	movlb	1	; () banked
 28686  00187C  2564               	addwf	AESCmac@j& (0+255),w,b
 28687  00187E  6ED9               	movwf	fsr2l,c
 28688  001880  6ADA               	clrf	fsr2h,c
 28689  001882  0E01               	movlw	high AESCmac@mLast
 28690  001884  22DA               	addwfc	fsr2h,f,c
 28691  001886  0E10               	movlw	low AESCmac@k1
 28692  001888  2564               	addwf	AESCmac@j& (0+255),w,b
 28693  00188A  6EE9               	movwf	fsr0l,c
 28694  00188C  6AEA               	clrf	fsr0h,c
 28695  00188E  0E01               	movlw	high AESCmac@k1
 28696  001890  22EA               	addwfc	fsr0h,f,c
 28697  001892  50EF               	movf	indf0,w,c
 28698  001894  0100               	movlb	0	; () banked
 28699  001896  6FC3               	movwf	??_AESCmac& (0+255),b
 28700  001898  0101               	movlb	1	; () banked
 28701  00189A  5165               	movf	AESCmac@i& (0+255),w,b
 28702  00189C  0100               	movlb	0	; () banked
 28703  00189E  25C0               	addwf	AESCmac@input& (0+255),w,b
 28704  0018A0  6EE9               	movwf	fsr0l,c
 28705  0018A2  0E00               	movlw	0
 28706  0018A4  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28707  0018A6  6EEA               	movwf	fsr0h,c
 28708  0018A8  50EF               	movf	indf0,w,c
 28709  0018AA  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28710  0018AC  6EDF               	movwf	indf2,c
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;lorawan_aes_cmac.c: 68: j++;
 28714  0018AE  0101               	movlb	1	; () banked
 28715  0018B0  2B64               	incf	AESCmac@j& (0+255),f,b
 28716                           
 28717                           ; BSR set to: 1
 28718  0018B2  2B65               	incf	AESCmac@i& (0+255),f,b
 28719  0018B4                     l13045:
 28720                           
 28721                           ; BSR set to: 1
 28722  0018B4  5163               	movf	AESCmac@n& (0+255),w,b
 28723  0018B6  0100               	movlb	0	; () banked
 28724  0018B8  6FC3               	movwf	??_AESCmac& (0+255),b
 28725  0018BA  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28726  0018BC  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28727  0018BE  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28728  0018C0  0EF0               	movlw	240
 28729  0018C2  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28730  0018C4  51C3               	movf	??_AESCmac& (0+255),w,b
 28731  0018C6  0B0F               	andlw	15
 28732  0018C8  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28733  0018CA  0EF0               	movlw	240
 28734  0018CC  17C3               	andwf	??_AESCmac& (0+255),f,b
 28735  0018CE  0101               	movlb	1	; () banked
 28736  0018D0  5165               	movf	AESCmac@i& (0+255),w,b
 28737  0018D2  0100               	movlb	0	; () banked
 28738  0018D4  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28739  0018D6  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 28740  0018D8  51C3               	movf	??_AESCmac& (0+255),w,b
 28741  0018DA  5DC5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28742  0018DC  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 28743  0018DE  0A80               	xorlw	128
 28744  0018E0  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28745  0018E2  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28746  0018E4  0A80               	xorlw	128
 28747  0018E6  59C7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28748  0018E8  E263               	bc	l13077
 28749  0018EA  D7C6               	goto	l13039
 28750  0018EC                     l13047:
 28751                           
 28752                           ; BSR set to: 1
 28753                           ;lorawan_aes_cmac.c: 71: else
 28754                           ;lorawan_aes_cmac.c: 72: {
 28755                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28756  0018EC  0100               	movlb	0	; () banked
 28757  0018EE  51C2               	movf	AESCmac@size& (0+255),w,b
 28758  0018F0  25C0               	addwf	AESCmac@input& (0+255),w,b
 28759  0018F2  6FC3               	movwf	??_AESCmac& (0+255),b
 28760  0018F4  0E00               	movlw	0
 28761  0018F6  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28762  0018F8  6FC4               	movwf	(??_AESCmac+1)& (0+255),b
 28763  0018FA  51C2               	movf	AESCmac@size& (0+255),w,b
 28764  0018FC  0B0F               	andlw	15
 28765  0018FE  5DC3               	subwf	??_AESCmac& (0+255),w,b
 28766  001900  0101               	movlb	1	; () banked
 28767  001902  6F60               	movwf	AESCmac@ptr& (0+255),b
 28768  001904  0100               	movlb	0	; () banked
 28769  001906  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28770  001908  A0D8               	btfss	status,0,c
 28771  00190A  05C4               	decf	(??_AESCmac+1)& (0+255),w,b
 28772  00190C  0101               	movlb	1	; () banked
 28773  00190E  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28774                           
 28775                           ; BSR set to: 1
 28776                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28777  001910  6B65               	clrf	AESCmac@i& (0+255),b
 28778  001912                     l13053:
 28779                           
 28780                           ; BSR set to: 1
 28781                           ;lorawan_aes_cmac.c: 76: {
 28782                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28783  001912  0100               	movlb	0	; () banked
 28784  001914  51C2               	movf	AESCmac@size& (0+255),w,b
 28785  001916  0B0F               	andlw	15
 28786  001918  0101               	movlb	1	; () banked
 28787  00191A  6165               	cpfslt	AESCmac@i& (0+255),b
 28788  00191C  D00F               	goto	l13057
 28789                           
 28790                           ; BSR set to: 1
 28791                           ;lorawan_aes_cmac.c: 78: {
 28792                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28793  00191E  5165               	movf	AESCmac@i& (0+255),w,b
 28794  001920  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28795  001922  6ED9               	movwf	fsr2l,c
 28796  001924  0E00               	movlw	0
 28797  001926  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28798  001928  6EDA               	movwf	fsr2h,c
 28799  00192A  0E30               	movlw	low AESCmac@padded
 28800  00192C  2565               	addwf	AESCmac@i& (0+255),w,b
 28801  00192E  6EE9               	movwf	fsr0l,c
 28802  001930  6AEA               	clrf	fsr0h,c
 28803  001932  0E01               	movlw	high AESCmac@padded
 28804  001934  22EA               	addwfc	fsr0h,f,c
 28805  001936  CFDF FFEF          	movff	indf2,indf0
 28806                           
 28807                           ;lorawan_aes_cmac.c: 80: }
 28808  00193A  D016               	goto	l13063
 28809  00193C                     l13057:
 28810                           
 28811                           ; BSR set to: 1
 28812                           ;lorawan_aes_cmac.c: 81: else
 28813                           ;lorawan_aes_cmac.c: 82: {
 28814                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28815  00193C  0100               	movlb	0	; () banked
 28816  00193E  51C2               	movf	AESCmac@size& (0+255),w,b
 28817  001940  0B0F               	andlw	15
 28818  001942  0101               	movlb	1	; () banked
 28819  001944  1965               	xorwf	AESCmac@i& (0+255),w,b
 28820  001946  E109               	bnz	l13061
 28821                           
 28822                           ; BSR set to: 1
 28823                           ;lorawan_aes_cmac.c: 84: {
 28824                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28825  001948  0E30               	movlw	low AESCmac@padded
 28826  00194A  2565               	addwf	AESCmac@i& (0+255),w,b
 28827  00194C  6ED9               	movwf	fsr2l,c
 28828  00194E  6ADA               	clrf	fsr2h,c
 28829  001950  0E01               	movlw	high AESCmac@padded
 28830  001952  22DA               	addwfc	fsr2h,f,c
 28831  001954  0E80               	movlw	128
 28832  001956  6EDF               	movwf	indf2,c
 28833                           
 28834                           ;lorawan_aes_cmac.c: 86: }
 28835  001958  D007               	goto	l13063
 28836  00195A                     l13061:
 28837                           
 28838                           ; BSR set to: 1
 28839                           ;lorawan_aes_cmac.c: 87: else
 28840                           ;lorawan_aes_cmac.c: 88: {
 28841                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 28842  00195A  0E30               	movlw	low AESCmac@padded
 28843  00195C  2565               	addwf	AESCmac@i& (0+255),w,b
 28844  00195E  6ED9               	movwf	fsr2l,c
 28845  001960  6ADA               	clrf	fsr2h,c
 28846  001962  0E01               	movlw	high AESCmac@padded
 28847  001964  22DA               	addwfc	fsr2h,f,c
 28848  001966  6ADF               	clrf	indf2,c
 28849  001968                     l13063:
 28850                           
 28851                           ; BSR set to: 1
 28852  001968  2B65               	incf	AESCmac@i& (0+255),f,b
 28853                           
 28854                           ; BSR set to: 1
 28855  00196A  0E0F               	movlw	15
 28856  00196C  6565               	cpfsgt	AESCmac@i& (0+255),b
 28857  00196E  D7D1               	goto	l13053
 28858                           
 28859                           ; BSR set to: 1
 28860                           ;lorawan_aes_cmac.c: 90: }
 28861                           ;lorawan_aes_cmac.c: 91: }
 28862                           ;lorawan_aes_cmac.c: 92: }
 28863                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 28864  001970  6B65               	clrf	AESCmac@i& (0+255),b
 28865  001972                     l13071:
 28866                           
 28867                           ; BSR set to: 1
 28868                           ;lorawan_aes_cmac.c: 96: {
 28869                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 28870  001972  0E20               	movlw	low AESCmac@mLast
 28871  001974  2565               	addwf	AESCmac@i& (0+255),w,b
 28872  001976  6ED9               	movwf	fsr2l,c
 28873  001978  6ADA               	clrf	fsr2h,c
 28874  00197A  0E01               	movlw	high AESCmac@mLast
 28875  00197C  22DA               	addwfc	fsr2h,f,c
 28876  00197E  0E00               	movlw	low AESCmac@k2
 28877  001980  2565               	addwf	AESCmac@i& (0+255),w,b
 28878  001982  6EE9               	movwf	fsr0l,c
 28879  001984  6AEA               	clrf	fsr0h,c
 28880  001986  0E01               	movlw	high AESCmac@k2
 28881  001988  22EA               	addwfc	fsr0h,f,c
 28882  00198A  50EF               	movf	indf0,w,c
 28883  00198C  0100               	movlb	0	; () banked
 28884  00198E  6FC3               	movwf	??_AESCmac& (0+255),b
 28885  001990  0E30               	movlw	low AESCmac@padded
 28886  001992  0101               	movlb	1	; () banked
 28887  001994  2565               	addwf	AESCmac@i& (0+255),w,b
 28888  001996  6EE9               	movwf	fsr0l,c
 28889  001998  6AEA               	clrf	fsr0h,c
 28890  00199A  0E01               	movlw	high AESCmac@padded
 28891  00199C  22EA               	addwfc	fsr0h,f,c
 28892  00199E  50EF               	movf	indf0,w,c
 28893  0019A0  0100               	movlb	0	; () banked
 28894  0019A2  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28895  0019A4  6EDF               	movwf	indf2,c
 28896                           
 28897                           ; BSR set to: 0
 28898  0019A6  0101               	movlb	1	; () banked
 28899  0019A8  2B65               	incf	AESCmac@i& (0+255),f,b
 28900                           
 28901                           ; BSR set to: 1
 28902  0019AA  0E0F               	movlw	15
 28903  0019AC  6565               	cpfsgt	AESCmac@i& (0+255),b
 28904  0019AE  D7E1               	goto	l13071
 28905  0019B0                     l13077:
 28906                           
 28907                           ;lorawan_aes_cmac.c: 98: }
 28908                           ;lorawan_aes_cmac.c: 99: }
 28909                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 28910  0019B0  0E50               	movlw	low AESCmac@x
 28911  0019B2  0100               	movlb	0	; () banked
 28912  0019B4  6F64               	movwf	memset@p1& (0+255),b
 28913  0019B6  0E01               	movlw	high AESCmac@x
 28914  0019B8  6F65               	movwf	(memset@p1+1)& (0+255),b
 28915  0019BA  6B67               	clrf	(memset@c+1)& (0+255),b
 28916  0019BC  6B66               	clrf	memset@c& (0+255),b
 28917  0019BE  6B69               	clrf	(memset@n+1)& (0+255),b
 28918  0019C0  0E10               	movlw	16
 28919  0019C2  6F68               	movwf	memset@n& (0+255),b
 28920  0019C4  ECDE  F038         	call	_memset	;wreg free
 28921                           
 28922                           ; BSR set to: 0
 28923                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 28924  0019C8  0101               	movlb	1	; () banked
 28925  0019CA  6B65               	clrf	AESCmac@i& (0+255),b
 28926  0019CC  D051               	goto	l13095
 28927  0019CE                     l1469:
 28928                           
 28929                           ; BSR set to: 0
 28930                           ;lorawan_aes_cmac.c: 104: {
 28931                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 28932  0019CE  0101               	movlb	1	; () banked
 28933  0019D0  6B64               	clrf	AESCmac@j& (0+255),b
 28934  0019D2                     l13085:
 28935                           
 28936                           ; BSR set to: 1
 28937                           ;lorawan_aes_cmac.c: 106: {
 28938                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 28939  0019D2  0E40               	movlw	low AESCmac@y
 28940  0019D4  2564               	addwf	AESCmac@j& (0+255),w,b
 28941  0019D6  6ED9               	movwf	fsr2l,c
 28942  0019D8  6ADA               	clrf	fsr2h,c
 28943  0019DA  0E01               	movlw	high AESCmac@y
 28944  0019DC  22DA               	addwfc	fsr2h,f,c
 28945  0019DE  5165               	movf	AESCmac@i& (0+255),w,b
 28946  0019E0  0100               	movlb	0	; () banked
 28947  0019E2  6FC3               	movwf	??_AESCmac& (0+255),b
 28948  0019E4  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28949  0019E6  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28950  0019E8  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28951  0019EA  0EF0               	movlw	240
 28952  0019EC  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28953  0019EE  51C3               	movf	??_AESCmac& (0+255),w,b
 28954  0019F0  0B0F               	andlw	15
 28955  0019F2  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28956  0019F4  0EF0               	movlw	240
 28957  0019F6  17C3               	andwf	??_AESCmac& (0+255),f,b
 28958  0019F8  C0C0  F0C5         	movff	AESCmac@input,??_AESCmac+2
 28959  0019FC  C0C1  F0C6         	movff	AESCmac@input+1,??_AESCmac+3
 28960  001A00  51C3               	movf	??_AESCmac& (0+255),w,b
 28961  001A02  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 28962  001A04  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28963  001A06  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 28964  001A08  0101               	movlb	1	; () banked
 28965  001A0A  5164               	movf	AESCmac@j& (0+255),w,b
 28966  001A0C  0100               	movlb	0	; () banked
 28967  001A0E  25C5               	addwf	(??_AESCmac+2)& (0+255),w,b
 28968  001A10  6EE9               	movwf	fsr0l,c
 28969  001A12  0E00               	movlw	0
 28970  001A14  21C6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 28971  001A16  6EEA               	movwf	fsr0h,c
 28972  001A18  50EF               	movf	indf0,w,c
 28973  001A1A  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28974  001A1C  0E50               	movlw	low AESCmac@x
 28975  001A1E  0101               	movlb	1	; () banked
 28976  001A20  2564               	addwf	AESCmac@j& (0+255),w,b
 28977  001A22  6EE9               	movwf	fsr0l,c
 28978  001A24  6AEA               	clrf	fsr0h,c
 28979  001A26  0E01               	movlw	high AESCmac@x
 28980  001A28  22EA               	addwfc	fsr0h,f,c
 28981  001A2A  50EF               	movf	indf0,w,c
 28982  001A2C  0100               	movlb	0	; () banked
 28983  001A2E  19C7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 28984  001A30  6EDF               	movwf	indf2,c
 28985                           
 28986                           ; BSR set to: 0
 28987  001A32  0101               	movlb	1	; () banked
 28988  001A34  2B64               	incf	AESCmac@j& (0+255),f,b
 28989                           
 28990                           ; BSR set to: 1
 28991  001A36  0E0F               	movlw	15
 28992  001A38  6564               	cpfsgt	AESCmac@j& (0+255),b
 28993  001A3A  D7CB               	goto	l13085
 28994                           
 28995                           ; BSR set to: 1
 28996                           ;lorawan_aes_cmac.c: 108: }
 28997                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 28998  001A3C  0E50               	movlw	low AESCmac@x
 28999  001A3E  0100               	movlb	0	; () banked
 29000  001A40  6F64               	movwf	memcpy@d1& (0+255),b
 29001  001A42  0E01               	movlw	high AESCmac@x
 29002  001A44  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29003  001A46  0E40               	movlw	low AESCmac@y
 29004  001A48  6F66               	movwf	memcpy@s1& (0+255),b
 29005  001A4A  0E01               	movlw	high AESCmac@y
 29006  001A4C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29007  001A4E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29008  001A50  0E10               	movlw	16
 29009  001A52  6F68               	movwf	memcpy@n& (0+255),b
 29010  001A54  EC01  F034         	call	_memcpy	;wreg free
 29011                           
 29012                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29013  001A58  0E50               	movlw	low AESCmac@x
 29014  001A5A  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29015  001A5C  0E01               	movlw	high AESCmac@x
 29016  001A5E  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29017  001A60  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29018  001A64  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29019  001A68  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 29020                           
 29021                           ; BSR set to: 0
 29022  001A6C  0101               	movlb	1	; () banked
 29023  001A6E  2B65               	incf	AESCmac@i& (0+255),f,b
 29024  001A70                     l13095:
 29025                           
 29026                           ; BSR set to: 1
 29027  001A70  0100               	movlb	0	; () banked
 29028  001A72  69C3               	setf	??_AESCmac& (0+255),b
 29029  001A74  69C4               	setf	(??_AESCmac+1)& (0+255),b
 29030  001A76  0101               	movlb	1	; () banked
 29031  001A78  5163               	movf	AESCmac@n& (0+255),w,b
 29032  001A7A  0100               	movlb	0	; () banked
 29033  001A7C  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 29034  001A7E  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 29035  001A80  51C3               	movf	??_AESCmac& (0+255),w,b
 29036  001A82  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29037  001A84  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29038  001A86  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29039  001A88  0101               	movlb	1	; () banked
 29040  001A8A  5165               	movf	AESCmac@i& (0+255),w,b
 29041  001A8C  0100               	movlb	0	; () banked
 29042  001A8E  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29043  001A90  6BC8               	clrf	(??_AESCmac+5)& (0+255),b
 29044  001A92  51C5               	movf	(??_AESCmac+2)& (0+255),w,b
 29045  001A94  5DC7               	subwf	(??_AESCmac+4)& (0+255),w,b
 29046  001A96  51C8               	movf	(??_AESCmac+5)& (0+255),w,b
 29047  001A98  0A80               	xorlw	128
 29048  001A9A  6FC9               	movwf	(??_AESCmac+6)& (0+255),b
 29049  001A9C  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 29050  001A9E  0A80               	xorlw	128
 29051  001AA0  59C9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29052  001AA2  E395               	bnc	l1469
 29053                           
 29054                           ; BSR set to: 0
 29055                           ;lorawan_aes_cmac.c: 111: }
 29056                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29057  001AA4  0101               	movlb	1	; () banked
 29058  001AA6  6B65               	clrf	AESCmac@i& (0+255),b
 29059  001AA8                     l13101:
 29060                           
 29061                           ; BSR set to: 1
 29062                           ;lorawan_aes_cmac.c: 114: {
 29063                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29064  001AA8  0E40               	movlw	low AESCmac@y
 29065  001AAA  2565               	addwf	AESCmac@i& (0+255),w,b
 29066  001AAC  6ED9               	movwf	fsr2l,c
 29067  001AAE  6ADA               	clrf	fsr2h,c
 29068  001AB0  0E01               	movlw	high AESCmac@y
 29069  001AB2  22DA               	addwfc	fsr2h,f,c
 29070  001AB4  0E20               	movlw	low AESCmac@mLast
 29071  001AB6  2565               	addwf	AESCmac@i& (0+255),w,b
 29072  001AB8  6EE9               	movwf	fsr0l,c
 29073  001ABA  6AEA               	clrf	fsr0h,c
 29074  001ABC  0E01               	movlw	high AESCmac@mLast
 29075  001ABE  22EA               	addwfc	fsr0h,f,c
 29076  001AC0  50EF               	movf	indf0,w,c
 29077  001AC2  0100               	movlb	0	; () banked
 29078  001AC4  6FC3               	movwf	??_AESCmac& (0+255),b
 29079  001AC6  0E50               	movlw	low AESCmac@x
 29080  001AC8  0101               	movlb	1	; () banked
 29081  001ACA  2565               	addwf	AESCmac@i& (0+255),w,b
 29082  001ACC  6EE9               	movwf	fsr0l,c
 29083  001ACE  6AEA               	clrf	fsr0h,c
 29084  001AD0  0E01               	movlw	high AESCmac@x
 29085  001AD2  22EA               	addwfc	fsr0h,f,c
 29086  001AD4  50EF               	movf	indf0,w,c
 29087  001AD6  0100               	movlb	0	; () banked
 29088  001AD8  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29089  001ADA  6EDF               	movwf	indf2,c
 29090                           
 29091                           ; BSR set to: 0
 29092  001ADC  0101               	movlb	1	; () banked
 29093  001ADE  2B65               	incf	AESCmac@i& (0+255),f,b
 29094                           
 29095                           ; BSR set to: 1
 29096  001AE0  0E0F               	movlw	15
 29097  001AE2  6565               	cpfsgt	AESCmac@i& (0+255),b
 29098  001AE4  D7E1               	goto	l13101
 29099                           
 29100                           ; BSR set to: 1
 29101                           ;lorawan_aes_cmac.c: 116: }
 29102                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29103  001AE6  0E40               	movlw	low AESCmac@y
 29104  001AE8  0100               	movlb	0	; () banked
 29105  001AEA  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29106  001AEC  0E01               	movlw	high AESCmac@y
 29107  001AEE  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29108  001AF0  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29109  001AF4  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29110  001AF8  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 29111                           
 29112                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29113  001AFC  C0BE  F064         	movff	AESCmac@output,memcpy@d1
 29114  001B00  C0BF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 29115  001B04  0E40               	movlw	low AESCmac@y
 29116  001B06  6F66               	movwf	memcpy@s1& (0+255),b
 29117  001B08  0E01               	movlw	high AESCmac@y
 29118  001B0A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29119  001B0C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29120  001B0E  0E10               	movlw	16
 29121  001B10  6F68               	movwf	memcpy@n& (0+255),b
 29122  001B12  EF01  F034         	goto	_memcpy	;wreg free
 29123  001B16                     __end_of_AESCmac:
 29124                           	opt stack 0
 29125                           tosu	equ	0xFFF
 29126                           tosh	equ	0xFFE
 29127                           tosl	equ	0xFFD
 29128                           pclath	equ	0xFFA
 29129                           tblptru	equ	0xFF8
 29130                           tblptrh	equ	0xFF7
 29131                           tblptrl	equ	0xFF6
 29132                           tablat	equ	0xFF5
 29133                           prodh	equ	0xFF4
 29134                           prodl	equ	0xFF3
 29135                           intcon	equ	0xFF2
 29136                           intcon2	equ	0xFF1
 29137                           intcon3	equ	0xFF0
 29138                           indf0	equ	0xFEF
 29139                           postinc0	equ	0xFEE
 29140                           fsr0h	equ	0xFEA
 29141                           fsr0l	equ	0xFE9
 29142                           wreg	equ	0xFE8
 29143                           postinc1	equ	0xFE6
 29144                           postdec1	equ	0xFE5
 29145                           plusw1	equ	0xFE3
 29146                           fsr1h	equ	0xFE2
 29147                           fsr1l	equ	0xFE1
 29148                           indf2	equ	0xFDF
 29149                           postinc2	equ	0xFDE
 29150                           postdec2	equ	0xFDD
 29151                           plusw2	equ	0xFDB
 29152                           fsr2h	equ	0xFDA
 29153                           fsr2l	equ	0xFD9
 29154                           status	equ	0xFD8
 29155                           
 29156 ;; *************** function _GenerateSubkey *****************
 29157 ;; Defined at:
 29158 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29159 ;; Parameters:    Size  Location     Type
 29160 ;;  key             2   52[BANK0 ] PTR unsigned char 
 29161 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29162 ;;  k1              2   54[BANK0 ] PTR unsigned char 
 29163 ;;		 -> AESCmac@k1(16), 
 29164 ;;  k2              2   56[BANK0 ] PTR unsigned char 
 29165 ;;		 -> AESCmac@k2(16), 
 29166 ;; Auto vars:     Size  Location     Type
 29167 ;;  l              16   75[BANK0 ] unsigned char [16]
 29168 ;;  const_Rb       16   59[BANK0 ] unsigned char [16]
 29169 ;;  i               1   91[BANK0 ] unsigned char 
 29170 ;; Return value:  Size  Location     Type
 29171 ;;                  1    wreg      void 
 29172 ;; Registers used:
 29173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29174 ;; Tracked objects:
 29175 ;;		On entry : F/0
 29176 ;;		On exit  : F/0
 29177 ;;		Unchanged: 0/0
 29178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29179 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29180 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29182 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29183 ;;Total ram usage:       40 bytes
 29184 ;; Hardware stack levels used:    1
 29185 ;; Hardware stack levels required when called:   10
 29186 ;; This function calls:
 29187 ;;		_AESEncodeLoRa
 29188 ;;		_FillSubKey
 29189 ;;		_memset
 29190 ;; This function is called by:
 29191 ;;		_AESCmac
 29192 ;; This function uses a non-reentrant model
 29193 ;;
 29194                           
 29195                           	psect	text152
 29196  004864                     __ptext152:
 29197                           	opt stack 0
 29198  004864                     _GenerateSubkey:
 29199                           	opt stack 16
 29200                           
 29201                           ; BSR set to: 0
 29202                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29203                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29204                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29205                           
 29206                           ; BSR set to: 0
 29207                           
 29208                           ; BSR set to: 0
 29209                           ;incstack = 0
 29210  004864  EE21  F0C8         	lfsr	2,GenerateSubkey@F7870
 29211  004868  EE00  F09B         	lfsr	0,GenerateSubkey@const_Rb
 29212  00486C  0E0F               	movlw	15
 29213  00486E                     u13591:
 29214  00486E  CFDB FFEB          	movff	plusw2,plusw0
 29215  004872  06E8               	decf	wreg,f,c
 29216  004874  E2FC               	bc	u13591
 29217                           
 29218                           ; BSR set to: 0
 29219                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29220  004876  0EAB               	movlw	low GenerateSubkey@l
 29221  004878  6F64               	movwf	memset@p1& (0+255),b
 29222  00487A  6B65               	clrf	(memset@p1+1)& (0+255),b
 29223  00487C  6B67               	clrf	(memset@c+1)& (0+255),b
 29224  00487E  6B66               	clrf	memset@c& (0+255),b
 29225  004880  6B69               	clrf	(memset@n+1)& (0+255),b
 29226  004882  0E10               	movlw	16
 29227  004884  6F68               	movwf	memset@n& (0+255),b
 29228  004886  ECDE  F038         	call	_memset	;wreg free
 29229                           
 29230                           ; BSR set to: 0
 29231                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29232  00488A  0EAB               	movlw	low GenerateSubkey@l
 29233  00488C  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29234  00488E  6B81               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29235  004890  C094  F082         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29236  004894  C095  F083         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29237  004898  EC1B  F039         	call	_AESEncodeLoRa	;wreg free
 29238                           
 29239                           ; BSR set to: 0
 29240                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29241  00489C  BFAB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29242  00489E  D00C               	goto	l12675
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;lorawan_aes_cmac.c: 138: {
 29246                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29247  0048A0  0EAB               	movlw	low GenerateSubkey@l
 29248  0048A2  6F64               	movwf	FillSubKey@source& (0+255),b
 29249  0048A4  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29250  0048A6  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29251  0048AA  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29252  0048AE  0E10               	movlw	16
 29253  0048B0  6F68               	movwf	FillSubKey@size& (0+255),b
 29254  0048B2  EC8F  F035         	call	_FillSubKey	;wreg free
 29255                           
 29256                           ;lorawan_aes_cmac.c: 140: }
 29257  0048B6  D01E               	goto	l12689
 29258  0048B8                     l12675:
 29259                           
 29260                           ; BSR set to: 0
 29261                           ;lorawan_aes_cmac.c: 141: else
 29262                           ;lorawan_aes_cmac.c: 142: {
 29263                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29264  0048B8  0EAB               	movlw	low GenerateSubkey@l
 29265  0048BA  6F64               	movwf	FillSubKey@source& (0+255),b
 29266  0048BC  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29267  0048BE  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29268  0048C2  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29269  0048C6  0E10               	movlw	16
 29270  0048C8  6F68               	movwf	FillSubKey@size& (0+255),b
 29271  0048CA  EC8F  F035         	call	_FillSubKey	;wreg free
 29272                           
 29273                           ; BSR set to: 0
 29274                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29275  0048CE  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29276  0048D0                     l12683:
 29277                           
 29278                           ; BSR set to: 0
 29279                           ;lorawan_aes_cmac.c: 146: {
 29280                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29281  0048D0  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29282  0048D2  0F9B               	addlw	low GenerateSubkey@const_Rb
 29283  0048D4  6ED9               	movwf	fsr2l,c
 29284  0048D6  6ADA               	clrf	fsr2h,c
 29285  0048D8  50DF               	movf	indf2,w,c
 29286  0048DA  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29287  0048DC  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29288  0048DE  2596               	addwf	GenerateSubkey@k1& (0+255),w,b
 29289  0048E0  6ED9               	movwf	fsr2l,c
 29290  0048E2  0E00               	movlw	0
 29291  0048E4  2197               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29292  0048E6  6EDA               	movwf	fsr2h,c
 29293  0048E8  519A               	movf	??_GenerateSubkey& (0+255),w,b
 29294  0048EA  1ADF               	xorwf	indf2,f,c
 29295                           
 29296                           ; BSR set to: 0
 29297  0048EC  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29298                           
 29299                           ; BSR set to: 0
 29300  0048EE  0E0F               	movlw	15
 29301  0048F0  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29302  0048F2  D7EE               	goto	l12683
 29303  0048F4                     l12689:
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;lorawan_aes_cmac.c: 148: }
 29307                           ;lorawan_aes_cmac.c: 149: }
 29308                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29309  0048F4  C096  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29310  0048F8  C097  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29311  0048FC  BEDF               	btfsc	indf2,7,c
 29312  0048FE  D00C               	goto	l12693
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;lorawan_aes_cmac.c: 153: {
 29316                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29317  004900  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29318  004904  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29319  004908  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29320  00490C  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29321  004910  0E10               	movlw	16
 29322  004912  6F68               	movwf	FillSubKey@size& (0+255),b
 29323  004914  EF8F  F035         	goto	_FillSubKey	;wreg free
 29324  004918                     l12693:
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;lorawan_aes_cmac.c: 156: else
 29328                           ;lorawan_aes_cmac.c: 157: {
 29329                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29330  004918  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29331  00491C  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29332  004920  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29333  004924  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29334  004928  0E10               	movlw	16
 29335  00492A  6F68               	movwf	FillSubKey@size& (0+255),b
 29336  00492C  EC8F  F035         	call	_FillSubKey	;wreg free
 29337                           
 29338                           ; BSR set to: 0
 29339                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29340  004930  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29341  004932                     l12701:
 29342                           
 29343                           ; BSR set to: 0
 29344                           ;lorawan_aes_cmac.c: 161: {
 29345                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29346  004932  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29347  004934  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29348  004936  6ED9               	movwf	fsr2l,c
 29349  004938  0E00               	movlw	0
 29350  00493A  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29351  00493C  6EDA               	movwf	fsr2h,c
 29352  00493E  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29353  004940  0F9B               	addlw	low GenerateSubkey@const_Rb
 29354  004942  6EE9               	movwf	fsr0l,c
 29355  004944  6AEA               	clrf	fsr0h,c
 29356  004946  50EF               	movf	indf0,w,c
 29357  004948  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29358  00494A  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29359  00494C  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29360  00494E  6EE9               	movwf	fsr0l,c
 29361  004950  0E00               	movlw	0
 29362  004952  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29363  004954  6EEA               	movwf	fsr0h,c
 29364  004956  50EF               	movf	indf0,w,c
 29365  004958  199A               	xorwf	??_GenerateSubkey& (0+255),w,b
 29366  00495A  6EDF               	movwf	indf2,c
 29367                           
 29368                           ; BSR set to: 0
 29369  00495C  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29370                           
 29371                           ; BSR set to: 0
 29372  00495E  0E0F               	movlw	15
 29373  004960  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29374  004962  D7E7               	goto	l12701
 29375  004964  0C0F               	retlw	15
 29376  004966                     __end_of_GenerateSubkey:
 29377                           	opt stack 0
 29378                           tosu	equ	0xFFF
 29379                           tosh	equ	0xFFE
 29380                           tosl	equ	0xFFD
 29381                           pclath	equ	0xFFA
 29382                           tblptru	equ	0xFF8
 29383                           tblptrh	equ	0xFF7
 29384                           tblptrl	equ	0xFF6
 29385                           tablat	equ	0xFF5
 29386                           prodh	equ	0xFF4
 29387                           prodl	equ	0xFF3
 29388                           intcon	equ	0xFF2
 29389                           intcon2	equ	0xFF1
 29390                           intcon3	equ	0xFF0
 29391                           indf0	equ	0xFEF
 29392                           postinc0	equ	0xFEE
 29393                           plusw0	equ	0xFEB
 29394                           fsr0h	equ	0xFEA
 29395                           fsr0l	equ	0xFE9
 29396                           wreg	equ	0xFE8
 29397                           postinc1	equ	0xFE6
 29398                           postdec1	equ	0xFE5
 29399                           plusw1	equ	0xFE3
 29400                           fsr1h	equ	0xFE2
 29401                           fsr1l	equ	0xFE1
 29402                           indf2	equ	0xFDF
 29403                           postinc2	equ	0xFDE
 29404                           postdec2	equ	0xFDD
 29405                           plusw2	equ	0xFDB
 29406                           fsr2h	equ	0xFDA
 29407                           fsr2l	equ	0xFD9
 29408                           status	equ	0xFD8
 29409                           
 29410 ;; *************** function _FillSubKey *****************
 29411 ;; Defined at:
 29412 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29413 ;; Parameters:    Size  Location     Type
 29414 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29415 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29416 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29417 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29418 ;;  size            1    8[BANK0 ] unsigned char 
 29419 ;; Auto vars:     Size  Location     Type
 29420 ;;  i               1   11[BANK0 ] unsigned char 
 29421 ;;  carry           1   10[BANK0 ] unsigned char 
 29422 ;; Return value:  Size  Location     Type
 29423 ;;                  1    wreg      void 
 29424 ;; Registers used:
 29425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29426 ;; Tracked objects:
 29427 ;;		On entry : F/0
 29428 ;;		On exit  : F/0
 29429 ;;		Unchanged: 0/0
 29430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29431 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29433 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29434 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29435 ;;Total ram usage:        8 bytes
 29436 ;; Hardware stack levels used:    1
 29437 ;; Hardware stack levels required when called:    7
 29438 ;; This function calls:
 29439 ;;		Nothing
 29440 ;; This function is called by:
 29441 ;;		_GenerateSubkey
 29442 ;; This function uses a non-reentrant model
 29443 ;;
 29444                           
 29445                           	psect	text153
 29446  006B1E                     __ptext153:
 29447                           	opt stack 0
 29448  006B1E                     _FillSubKey:
 29449                           	opt stack 18
 29450                           
 29451                           ; BSR set to: 0
 29452                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29453                           
 29454                           ; BSR set to: 0
 29455                           ;incstack = 0
 29456  006B1E  6B6B               	clrf	FillSubKey@i& (0+255),b
 29457                           
 29458                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29459  006B20  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29460                           
 29461                           ;lorawan_aes_cmac.c: 172: i=size;
 29462  006B22  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29463                           
 29464                           ;lorawan_aes_cmac.c: 174: while(i--)
 29465  006B26  D01C               	goto	l12391
 29466  006B28                     l12387:
 29467                           
 29468                           ; BSR set to: 0
 29469                           ;lorawan_aes_cmac.c: 175: {
 29470                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29471  006B28  516B               	movf	FillSubKey@i& (0+255),w,b
 29472  006B2A  2566               	addwf	FillSubKey@key& (0+255),w,b
 29473  006B2C  6ED9               	movwf	fsr2l,c
 29474  006B2E  0E00               	movlw	0
 29475  006B30  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29476  006B32  6EDA               	movwf	fsr2h,c
 29477  006B34  516B               	movf	FillSubKey@i& (0+255),w,b
 29478  006B36  2564               	addwf	FillSubKey@source& (0+255),w,b
 29479  006B38  6EE9               	movwf	fsr0l,c
 29480  006B3A  0E00               	movlw	0
 29481  006B3C  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29482  006B3E  6EEA               	movwf	fsr0h,c
 29483  006B40  50EF               	movf	indf0,w,c
 29484  006B42  6F69               	movwf	??_FillSubKey& (0+255),b
 29485  006B44  90D8               	bcf	status,0,c
 29486  006B46  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29487  006B48  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29488  006B4A  6EDF               	movwf	indf2,c
 29489                           
 29490                           ; BSR set to: 0
 29491                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29492  006B4C  516B               	movf	FillSubKey@i& (0+255),w,b
 29493  006B4E  2564               	addwf	FillSubKey@source& (0+255),w,b
 29494  006B50  6ED9               	movwf	fsr2l,c
 29495  006B52  0E00               	movlw	0
 29496  006B54  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29497  006B56  6EDA               	movwf	fsr2h,c
 29498  006B58  0E01               	movlw	1
 29499  006B5A  AEDF               	btfss	indf2,7,c
 29500  006B5C  0E00               	movlw	0
 29501  006B5E  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29502  006B60                     l12391:
 29503                           
 29504                           ; BSR set to: 0
 29505  006B60  076B               	decf	FillSubKey@i& (0+255),f,b
 29506  006B62  296B               	incf	FillSubKey@i& (0+255),w,b
 29507  006B64  E1E1               	bnz	l12387
 29508                           
 29509                           ; BSR set to: 0
 29510  006B66  0012               	return		;funcret
 29511  006B68                     __end_of_FillSubKey:
 29512                           	opt stack 0
 29513                           tosu	equ	0xFFF
 29514                           tosh	equ	0xFFE
 29515                           tosl	equ	0xFFD
 29516                           pclath	equ	0xFFA
 29517                           tblptru	equ	0xFF8
 29518                           tblptrh	equ	0xFF7
 29519                           tblptrl	equ	0xFF6
 29520                           tablat	equ	0xFF5
 29521                           prodh	equ	0xFF4
 29522                           prodl	equ	0xFF3
 29523                           intcon	equ	0xFF2
 29524                           intcon2	equ	0xFF1
 29525                           intcon3	equ	0xFF0
 29526                           indf0	equ	0xFEF
 29527                           postinc0	equ	0xFEE
 29528                           plusw0	equ	0xFEB
 29529                           fsr0h	equ	0xFEA
 29530                           fsr0l	equ	0xFE9
 29531                           wreg	equ	0xFE8
 29532                           postinc1	equ	0xFE6
 29533                           postdec1	equ	0xFE5
 29534                           plusw1	equ	0xFE3
 29535                           fsr1h	equ	0xFE2
 29536                           fsr1l	equ	0xFE1
 29537                           indf2	equ	0xFDF
 29538                           postinc2	equ	0xFDE
 29539                           postdec2	equ	0xFDD
 29540                           plusw2	equ	0xFDB
 29541                           fsr2h	equ	0xFDA
 29542                           fsr2l	equ	0xFD9
 29543                           status	equ	0xFD8
 29544                           
 29545 ;; *************** function _AESEncodeLoRa *****************
 29546 ;; Defined at:
 29547 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29548 ;; Parameters:    Size  Location     Type
 29549 ;;  block           2   32[BANK0 ] PTR unsigned char 
 29550 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29551 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29552 ;;  key             2   34[BANK0 ] PTR unsigned char 
 29553 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29554 ;; Auto vars:     Size  Location     Type
 29555 ;;  useKey         16   36[BANK0 ] unsigned char [16]
 29556 ;; Return value:  Size  Location     Type
 29557 ;;                  1    wreg      void 
 29558 ;; Registers used:
 29559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29560 ;; Tracked objects:
 29561 ;;		On entry : F/0
 29562 ;;		On exit  : F/0
 29563 ;;		Unchanged: 0/0
 29564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29566 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29568 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29569 ;;Total ram usage:       20 bytes
 29570 ;; Hardware stack levels used:    1
 29571 ;; Hardware stack levels required when called:    9
 29572 ;; This function calls:
 29573 ;;		_AESEncode
 29574 ;;		_memcpy
 29575 ;; This function is called by:
 29576 ;;		_AESCmac
 29577 ;;		_GenerateSubkey
 29578 ;;		_LORAWAN_RxDone
 29579 ;;		_ComputeSessionKeys
 29580 ;;		_EncryptFRMPayload
 29581 ;; This function uses a non-reentrant model
 29582 ;;
 29583                           
 29584                           	psect	text154
 29585  007236                     __ptext154:
 29586                           	opt stack 0
 29587  007236                     _AESEncodeLoRa:
 29588                           	opt stack 17
 29589                           
 29590                           ; BSR set to: 0
 29591                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29592                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29593                           
 29594                           ; BSR set to: 0
 29595                           ;incstack = 0
 29596  007236  0E84               	movlw	low AESEncodeLoRa@useKey
 29597  007238  6F64               	movwf	memcpy@d1& (0+255),b
 29598  00723A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29599  00723C  C082  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29600  007240  C083  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29601  007244  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29602  007246  0E10               	movlw	16
 29603  007248  6F68               	movwf	memcpy@n& (0+255),b
 29604  00724A  EC01  F034         	call	_memcpy	;wreg free
 29605                           
 29606                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29607  00724E  C080  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29608  007252  C081  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29609  007256  0E84               	movlw	low AESEncodeLoRa@useKey
 29610  007258  6F6C               	movwf	AESEncode@key& (0+255),b
 29611  00725A  EFF5  F011         	goto	_AESEncode	;wreg free
 29612  00725E                     __end_of_AESEncodeLoRa:
 29613                           	opt stack 0
 29614                           tosu	equ	0xFFF
 29615                           tosh	equ	0xFFE
 29616                           tosl	equ	0xFFD
 29617                           pclath	equ	0xFFA
 29618                           tblptru	equ	0xFF8
 29619                           tblptrh	equ	0xFF7
 29620                           tblptrl	equ	0xFF6
 29621                           tablat	equ	0xFF5
 29622                           prodh	equ	0xFF4
 29623                           prodl	equ	0xFF3
 29624                           intcon	equ	0xFF2
 29625                           intcon2	equ	0xFF1
 29626                           intcon3	equ	0xFF0
 29627                           indf0	equ	0xFEF
 29628                           postinc0	equ	0xFEE
 29629                           plusw0	equ	0xFEB
 29630                           fsr0h	equ	0xFEA
 29631                           fsr0l	equ	0xFE9
 29632                           wreg	equ	0xFE8
 29633                           postinc1	equ	0xFE6
 29634                           postdec1	equ	0xFE5
 29635                           plusw1	equ	0xFE3
 29636                           fsr1h	equ	0xFE2
 29637                           fsr1l	equ	0xFE1
 29638                           indf2	equ	0xFDF
 29639                           postinc2	equ	0xFDE
 29640                           postdec2	equ	0xFDD
 29641                           plusw2	equ	0xFDB
 29642                           fsr2h	equ	0xFDA
 29643                           fsr2l	equ	0xFD9
 29644                           status	equ	0xFD8
 29645                           
 29646 ;; *************** function _AESEncode *****************
 29647 ;; Defined at:
 29648 ;;		line 217 in file "mcc_generated_files/LoRaWAN/AES.c"
 29649 ;; Parameters:    Size  Location     Type
 29650 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29651 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29652 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29653 ;;  key             1   12[BANK0 ] PTR unsigned char 
 29654 ;;		 -> AESEncodeLoRa@useKey(16), 
 29655 ;; Auto vars:     Size  Location     Type
 29656 ;;  aux3            1   30[BANK0 ] unsigned char 
 29657 ;;  aux1            1   29[BANK0 ] unsigned char 
 29658 ;;  aux2            1   28[BANK0 ] unsigned char 
 29659 ;;  aux             1   27[BANK0 ] unsigned char 
 29660 ;;  i               1   31[BANK0 ] unsigned char 
 29661 ;;  temp            1    0        unsigned char 
 29662 ;; Return value:  Size  Location     Type
 29663 ;;                  1    wreg      void 
 29664 ;; Registers used:
 29665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29666 ;; Tracked objects:
 29667 ;;		On entry : F/0
 29668 ;;		On exit  : F/0
 29669 ;;		Unchanged: 0/0
 29670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29671 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29672 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29673 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29674 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29675 ;;Total ram usage:       22 bytes
 29676 ;; Hardware stack levels used:    1
 29677 ;; Hardware stack levels required when called:    8
 29678 ;; This function calls:
 29679 ;;		_EncKeySchedule
 29680 ;;		_EncodeShiftRow
 29681 ;; This function is called by:
 29682 ;;		_AESEncodeLoRa
 29683 ;; This function uses a non-reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text155
 29687  0023EA                     __ptext155:
 29688                           	opt stack 0
 29689  0023EA                     _AESEncode:
 29690                           	opt stack 17
 29691                           
 29692                           ; BSR set to: 0
 29693                           ;AES.c: 219: unsigned char i;
 29694                           ;AES.c: 220: unsigned char temp;
 29695                           ;AES.c: 223: _roundCounter = 10;
 29696                           
 29697                           ; BSR set to: 0
 29698                           ;incstack = 0
 29699  0023EA  0E0A               	movlw	10
 29700  0023EC  6E44               	movwf	__roundCounter,c
 29701                           
 29702                           ;AES.c: 225: _rcon = 0x01;
 29703  0023EE  0E01               	movlw	1
 29704  0023F0  6FEE               	movwf	__rcon& (0+255),b
 29705                           
 29706                           ; BSR set to: 0
 29707                           ;AES.c: 228: for(i=0;i<16;i++)
 29708  0023F2  6B7F               	clrf	AESEncode@i& (0+255),b
 29709  0023F4                     l12005:
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;AES.c: 229: {
 29713                           ;AES.c: 230: block[i] ^= key[i];
 29714  0023F4  516C               	movf	AESEncode@key& (0+255),w,b
 29715  0023F6  257F               	addwf	AESEncode@i& (0+255),w,b
 29716  0023F8  6ED9               	movwf	fsr2l,c
 29717  0023FA  6ADA               	clrf	fsr2h,c
 29718  0023FC  50DF               	movf	indf2,w,c
 29719  0023FE  6F6D               	movwf	??_AESEncode& (0+255),b
 29720  002400  517F               	movf	AESEncode@i& (0+255),w,b
 29721  002402  256A               	addwf	AESEncode@block& (0+255),w,b
 29722  002404  6ED9               	movwf	fsr2l,c
 29723  002406  0E00               	movlw	0
 29724  002408  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29725  00240A  6EDA               	movwf	fsr2h,c
 29726  00240C  516D               	movf	??_AESEncode& (0+255),w,b
 29727  00240E  1ADF               	xorwf	indf2,f,c
 29728                           
 29729                           ; BSR set to: 0
 29730  002410  2B7F               	incf	AESEncode@i& (0+255),f,b
 29731                           
 29732                           ; BSR set to: 0
 29733  002412  0E0F               	movlw	15
 29734  002414  657F               	cpfsgt	AESEncode@i& (0+255),b
 29735  002416  D7EE               	goto	l12005
 29736  002418                     l2522:
 29737                           
 29738                           ; BSR set to: 0
 29739                           ;AES.c: 234: {
 29740                           ;AES.c: 237: for(i=0;i<16;i++)
 29741  002418  6B7F               	clrf	AESEncode@i& (0+255),b
 29742  00241A                     l12015:
 29743                           
 29744                           ; BSR set to: 0
 29745                           ;AES.c: 238: {
 29746                           ;AES.c: 239: block[i]=STable[block[i]];
 29747  00241A  517F               	movf	AESEncode@i& (0+255),w,b
 29748  00241C  256A               	addwf	AESEncode@block& (0+255),w,b
 29749  00241E  6ED9               	movwf	fsr2l,c
 29750  002420  0E00               	movlw	0
 29751  002422  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29752  002424  6EDA               	movwf	fsr2h,c
 29753  002426  50DF               	movf	indf2,w,c
 29754  002428  6F6D               	movwf	??_AESEncode& (0+255),b
 29755  00242A  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29756  00242C  0E6D               	movlw	low _STable
 29757  00242E  256D               	addwf	??_AESEncode& (0+255),w,b
 29758  002430  6EF6               	movwf	tblptrl,c
 29759  002432  0EFE               	movlw	high _STable
 29760  002434  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29761  002436  6EF7               	movwf	tblptrh,c
 29762  002438                     	if	1	;There are 3 active tblptr bytes
 29763  002438  6AF8               	clrf	tblptru,c
 29764  00243A  0E00               	movlw	low (__mediumconst shr (0+16))
 29765  00243C  22F8               	addwfc	tblptru,f,c
 29766  00243E                     	endif
 29767  00243E  517F               	movf	AESEncode@i& (0+255),w,b
 29768  002440  256A               	addwf	AESEncode@block& (0+255),w,b
 29769  002442  6ED9               	movwf	fsr2l,c
 29770  002444  0E00               	movlw	0
 29771  002446  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29772  002448  6EDA               	movwf	fsr2h,c
 29773  00244A  0008               	tblrd		*
 29774  00244C  CFF5 FFDF          	movff	tablat,indf2
 29775                           
 29776                           ; BSR set to: 0
 29777  002450  2B7F               	incf	AESEncode@i& (0+255),f,b
 29778                           
 29779                           ; BSR set to: 0
 29780  002452  0E0F               	movlw	15
 29781  002454  657F               	cpfsgt	AESEncode@i& (0+255),b
 29782  002456  D7E1               	goto	l12015
 29783                           
 29784                           ; BSR set to: 0
 29785                           ;AES.c: 240: }
 29786                           ;AES.c: 243: EncodeShiftRow(block);
 29787  002458  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29788  00245C  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29789  002460  EC8F  F01E         	call	_EncodeShiftRow	;wreg free
 29790                           
 29791                           ; BSR set to: 0
 29792                           ;AES.c: 246: if(_roundCounter != 1)
 29793  002464  0444               	decf	__roundCounter,w,c
 29794  002466  E101 D111          	bz	l12063
 29795                           
 29796                           ; BSR set to: 0
 29797                           ;AES.c: 247: {
 29798                           ;AES.c: 248: unsigned char aux,aux1,aux2,aux3;
 29799                           ;AES.c: 250: for(i=0;i<16;i+=4)
 29800  00246A  6B7F               	clrf	AESEncode@i& (0+255),b
 29801  00246C                     l12031:
 29802                           
 29803                           ; BSR set to: 0
 29804                           ;AES.c: 251: {
 29805                           ;AES.c: 252: aux1= block[i+0] ^ block[i+1];
 29806  00246C  517F               	movf	AESEncode@i& (0+255),w,b
 29807  00246E  256A               	addwf	AESEncode@block& (0+255),w,b
 29808  002470  6F6D               	movwf	??_AESEncode& (0+255),b
 29809  002472  0E00               	movlw	0
 29810  002474  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29811  002476  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29812  002478  296D               	incf	??_AESEncode& (0+255),w,b
 29813  00247A  6ED9               	movwf	fsr2l,c
 29814  00247C  0E00               	movlw	0
 29815  00247E  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29816  002480  6EDA               	movwf	fsr2h,c
 29817  002482  50DF               	movf	indf2,w,c
 29818  002484  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29819  002486  517F               	movf	AESEncode@i& (0+255),w,b
 29820  002488  256A               	addwf	AESEncode@block& (0+255),w,b
 29821  00248A  6ED9               	movwf	fsr2l,c
 29822  00248C  0E00               	movlw	0
 29823  00248E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29824  002490  6EDA               	movwf	fsr2h,c
 29825  002492  50DF               	movf	indf2,w,c
 29826  002494  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29827  002496  6F7D               	movwf	AESEncode@aux1& (0+255),b
 29828                           
 29829                           ;AES.c: 253: aux3= block[i+2]^block[i+3];
 29830  002498  517F               	movf	AESEncode@i& (0+255),w,b
 29831  00249A  256A               	addwf	AESEncode@block& (0+255),w,b
 29832  00249C  6F6D               	movwf	??_AESEncode& (0+255),b
 29833  00249E  0E00               	movlw	0
 29834  0024A0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29835  0024A2  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29836  0024A4  0E03               	movlw	3
 29837  0024A6  256D               	addwf	??_AESEncode& (0+255),w,b
 29838  0024A8  6ED9               	movwf	fsr2l,c
 29839  0024AA  0E00               	movlw	0
 29840  0024AC  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29841  0024AE  6EDA               	movwf	fsr2h,c
 29842  0024B0  50DF               	movf	indf2,w,c
 29843  0024B2  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29844  0024B4  517F               	movf	AESEncode@i& (0+255),w,b
 29845  0024B6  256A               	addwf	AESEncode@block& (0+255),w,b
 29846  0024B8  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29847  0024BA  0E00               	movlw	0
 29848  0024BC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29849  0024BE  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29850  0024C0  0E02               	movlw	2
 29851  0024C2  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29852  0024C4  6ED9               	movwf	fsr2l,c
 29853  0024C6  0E00               	movlw	0
 29854  0024C8  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29855  0024CA  6EDA               	movwf	fsr2h,c
 29856  0024CC  50DF               	movf	indf2,w,c
 29857  0024CE  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29858  0024D0  6F7E               	movwf	AESEncode@aux3& (0+255),b
 29859                           
 29860                           ; BSR set to: 0
 29861                           ;AES.c: 254: aux = aux1 ^ aux3;
 29862  0024D2  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 29863  0024D4  6F7B               	movwf	AESEncode@aux& (0+255),b
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;AES.c: 255: aux2= block[i+2]^block[i+1];
 29867  0024D6  517F               	movf	AESEncode@i& (0+255),w,b
 29868  0024D8  256A               	addwf	AESEncode@block& (0+255),w,b
 29869  0024DA  6F6D               	movwf	??_AESEncode& (0+255),b
 29870  0024DC  0E00               	movlw	0
 29871  0024DE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29872  0024E0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29873  0024E2  296D               	incf	??_AESEncode& (0+255),w,b
 29874  0024E4  6ED9               	movwf	fsr2l,c
 29875  0024E6  0E00               	movlw	0
 29876  0024E8  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29877  0024EA  6EDA               	movwf	fsr2h,c
 29878  0024EC  50DF               	movf	indf2,w,c
 29879  0024EE  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29880  0024F0  517F               	movf	AESEncode@i& (0+255),w,b
 29881  0024F2  256A               	addwf	AESEncode@block& (0+255),w,b
 29882  0024F4  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29883  0024F6  0E00               	movlw	0
 29884  0024F8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29885  0024FA  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29886  0024FC  0E02               	movlw	2
 29887  0024FE  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29888  002500  6ED9               	movwf	fsr2l,c
 29889  002502  0E00               	movlw	0
 29890  002504  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29891  002506  6EDA               	movwf	fsr2h,c
 29892  002508  50DF               	movf	indf2,w,c
 29893  00250A  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29894  00250C  6F7C               	movwf	AESEncode@aux2& (0+255),b
 29895                           
 29896                           ;AES.c: 257: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 29897  00250E  0E7F               	movlw	127
 29898  002510  657D               	cpfsgt	AESEncode@aux1& (0+255),b
 29899  002512  D00C               	goto	l12039
 29900                           
 29901                           ; BSR set to: 0
 29902  002514  0E1B               	movlw	27
 29903  002516  C07D  F06D         	movff	AESEncode@aux1,??_AESEncode
 29904  00251A  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29905  00251C  90D8               	bcf	status,0,c
 29906  00251E  376D               	rlcf	??_AESEncode& (0+255),f,b
 29907  002520  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29908  002522  196D               	xorwf	??_AESEncode& (0+255),w,b
 29909  002524  6F75               	movwf	_AESEncode$4143& (0+255),b
 29910  002526  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29911  002528  6F76               	movwf	(_AESEncode$4143+1)& (0+255),b
 29912  00252A  D005               	goto	l12041
 29913  00252C                     l12039:
 29914                           
 29915                           ; BSR set to: 0
 29916  00252C  90D8               	bcf	status,0,c
 29917  00252E  357D               	rlcf	AESEncode@aux1& (0+255),w,b
 29918  002530  6F75               	movwf	_AESEncode$4143& (0+255),b
 29919  002532  6B76               	clrf	(_AESEncode$4143+1)& (0+255),b
 29920  002534  3776               	rlcf	(_AESEncode$4143+1)& (0+255),f,b
 29921  002536                     l12041:
 29922                           
 29923                           ; BSR set to: 0
 29924  002536  C075  F07D         	movff	_AESEncode$4143,AESEncode@aux1
 29925                           
 29926                           ;AES.c: 258: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 29927  00253A  0E7F               	movlw	127
 29928  00253C  657C               	cpfsgt	AESEncode@aux2& (0+255),b
 29929  00253E  D00C               	goto	l12045
 29930                           
 29931                           ; BSR set to: 0
 29932  002540  0E1B               	movlw	27
 29933  002542  C07C  F06D         	movff	AESEncode@aux2,??_AESEncode
 29934  002546  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29935  002548  90D8               	bcf	status,0,c
 29936  00254A  376D               	rlcf	??_AESEncode& (0+255),f,b
 29937  00254C  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29938  00254E  196D               	xorwf	??_AESEncode& (0+255),w,b
 29939  002550  6F77               	movwf	_AESEncode$4144& (0+255),b
 29940  002552  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29941  002554  6F78               	movwf	(_AESEncode$4144+1)& (0+255),b
 29942  002556  D005               	goto	l12047
 29943  002558                     l12045:
 29944                           
 29945                           ; BSR set to: 0
 29946  002558  90D8               	bcf	status,0,c
 29947  00255A  357C               	rlcf	AESEncode@aux2& (0+255),w,b
 29948  00255C  6F77               	movwf	_AESEncode$4144& (0+255),b
 29949  00255E  6B78               	clrf	(_AESEncode$4144+1)& (0+255),b
 29950  002560  3778               	rlcf	(_AESEncode$4144+1)& (0+255),f,b
 29951  002562                     l12047:
 29952                           
 29953                           ; BSR set to: 0
 29954  002562  C077  F07C         	movff	_AESEncode$4144,AESEncode@aux2
 29955                           
 29956                           ;AES.c: 259: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 29957  002566  0E7F               	movlw	127
 29958  002568  657E               	cpfsgt	AESEncode@aux3& (0+255),b
 29959  00256A  D00C               	goto	l12051
 29960                           
 29961                           ; BSR set to: 0
 29962  00256C  0E1B               	movlw	27
 29963  00256E  C07E  F06D         	movff	AESEncode@aux3,??_AESEncode
 29964  002572  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29965  002574  90D8               	bcf	status,0,c
 29966  002576  376D               	rlcf	??_AESEncode& (0+255),f,b
 29967  002578  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29968  00257A  196D               	xorwf	??_AESEncode& (0+255),w,b
 29969  00257C  6F79               	movwf	_AESEncode$4145& (0+255),b
 29970  00257E  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29971  002580  6F7A               	movwf	(_AESEncode$4145+1)& (0+255),b
 29972  002582  D005               	goto	l12053
 29973  002584                     l12051:
 29974                           
 29975                           ; BSR set to: 0
 29976  002584  90D8               	bcf	status,0,c
 29977  002586  357E               	rlcf	AESEncode@aux3& (0+255),w,b
 29978  002588  6F79               	movwf	_AESEncode$4145& (0+255),b
 29979  00258A  6B7A               	clrf	(_AESEncode$4145+1)& (0+255),b
 29980  00258C  377A               	rlcf	(_AESEncode$4145+1)& (0+255),f,b
 29981  00258E                     l12053:
 29982                           
 29983                           ; BSR set to: 0
 29984  00258E  C079  F07E         	movff	_AESEncode$4145,AESEncode@aux3
 29985                           
 29986                           ; BSR set to: 0
 29987                           ;AES.c: 261: block[i+0]= aux^aux1^block[i+0];
 29988  002592  517F               	movf	AESEncode@i& (0+255),w,b
 29989  002594  256A               	addwf	AESEncode@block& (0+255),w,b
 29990  002596  6ED9               	movwf	fsr2l,c
 29991  002598  0E00               	movlw	0
 29992  00259A  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29993  00259C  6EDA               	movwf	fsr2h,c
 29994  00259E  517F               	movf	AESEncode@i& (0+255),w,b
 29995  0025A0  256A               	addwf	AESEncode@block& (0+255),w,b
 29996  0025A2  6EE9               	movwf	fsr0l,c
 29997  0025A4  0E00               	movlw	0
 29998  0025A6  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29999  0025A8  6EEA               	movwf	fsr0h,c
 30000  0025AA  50EF               	movf	indf0,w,c
 30001  0025AC  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30002  0025AE  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30003  0025B0  6EDF               	movwf	indf2,c
 30004                           
 30005                           ; BSR set to: 0
 30006                           ;AES.c: 262: block[i+1]= aux^aux2^block[i+1];
 30007  0025B2  517F               	movf	AESEncode@i& (0+255),w,b
 30008  0025B4  256A               	addwf	AESEncode@block& (0+255),w,b
 30009  0025B6  6F6D               	movwf	??_AESEncode& (0+255),b
 30010  0025B8  0E00               	movlw	0
 30011  0025BA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30012  0025BC  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30013  0025BE  296D               	incf	??_AESEncode& (0+255),w,b
 30014  0025C0  6ED9               	movwf	fsr2l,c
 30015  0025C2  0E00               	movlw	0
 30016  0025C4  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30017  0025C6  6EDA               	movwf	fsr2h,c
 30018  0025C8  517F               	movf	AESEncode@i& (0+255),w,b
 30019  0025CA  256A               	addwf	AESEncode@block& (0+255),w,b
 30020  0025CC  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30021  0025CE  0E00               	movlw	0
 30022  0025D0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30023  0025D2  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30024  0025D4  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 30025  0025D6  6EE9               	movwf	fsr0l,c
 30026  0025D8  0E00               	movlw	0
 30027  0025DA  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30028  0025DC  6EEA               	movwf	fsr0h,c
 30029  0025DE  50EF               	movf	indf0,w,c
 30030  0025E0  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30031  0025E2  197C               	xorwf	AESEncode@aux2& (0+255),w,b
 30032  0025E4  6EDF               	movwf	indf2,c
 30033                           
 30034                           ; BSR set to: 0
 30035                           ;AES.c: 263: block[i+2]= aux^aux3^block[i+2];
 30036  0025E6  517F               	movf	AESEncode@i& (0+255),w,b
 30037  0025E8  256A               	addwf	AESEncode@block& (0+255),w,b
 30038  0025EA  6F6D               	movwf	??_AESEncode& (0+255),b
 30039  0025EC  0E00               	movlw	0
 30040  0025EE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30041  0025F0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30042  0025F2  0E02               	movlw	2
 30043  0025F4  256D               	addwf	??_AESEncode& (0+255),w,b
 30044  0025F6  6ED9               	movwf	fsr2l,c
 30045  0025F8  0E00               	movlw	0
 30046  0025FA  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30047  0025FC  6EDA               	movwf	fsr2h,c
 30048  0025FE  517F               	movf	AESEncode@i& (0+255),w,b
 30049  002600  256A               	addwf	AESEncode@block& (0+255),w,b
 30050  002602  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30051  002604  0E00               	movlw	0
 30052  002606  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30053  002608  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30054  00260A  0E02               	movlw	2
 30055  00260C  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30056  00260E  6EE9               	movwf	fsr0l,c
 30057  002610  0E00               	movlw	0
 30058  002612  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30059  002614  6EEA               	movwf	fsr0h,c
 30060  002616  50EF               	movf	indf0,w,c
 30061  002618  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30062  00261A  197E               	xorwf	AESEncode@aux3& (0+255),w,b
 30063  00261C  6EDF               	movwf	indf2,c
 30064                           
 30065                           ; BSR set to: 0
 30066                           ;AES.c: 264: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30067  00261E  517F               	movf	AESEncode@i& (0+255),w,b
 30068  002620  256A               	addwf	AESEncode@block& (0+255),w,b
 30069  002622  6F6D               	movwf	??_AESEncode& (0+255),b
 30070  002624  0E00               	movlw	0
 30071  002626  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30072  002628  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30073  00262A  0E03               	movlw	3
 30074  00262C  256D               	addwf	??_AESEncode& (0+255),w,b
 30075  00262E  6ED9               	movwf	fsr2l,c
 30076  002630  0E00               	movlw	0
 30077  002632  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30078  002634  6EDA               	movwf	fsr2h,c
 30079  002636  517F               	movf	AESEncode@i& (0+255),w,b
 30080  002638  256A               	addwf	AESEncode@block& (0+255),w,b
 30081  00263A  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30082  00263C  0E00               	movlw	0
 30083  00263E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30084  002640  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30085  002642  0E02               	movlw	2
 30086  002644  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30087  002646  6EE9               	movwf	fsr0l,c
 30088  002648  0E00               	movlw	0
 30089  00264A  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30090  00264C  6EEA               	movwf	fsr0h,c
 30091  00264E  50EF               	movf	indf0,w,c
 30092  002650  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30093  002652  517F               	movf	AESEncode@i& (0+255),w,b
 30094  002654  256A               	addwf	AESEncode@block& (0+255),w,b
 30095  002656  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 30096  002658  0E00               	movlw	0
 30097  00265A  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30098  00265C  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 30099  00265E  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 30100  002660  6EE9               	movwf	fsr0l,c
 30101  002662  0E00               	movlw	0
 30102  002664  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 30103  002666  6EEA               	movwf	fsr0h,c
 30104  002668  50EF               	movf	indf0,w,c
 30105  00266A  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 30106  00266C  517F               	movf	AESEncode@i& (0+255),w,b
 30107  00266E  256A               	addwf	AESEncode@block& (0+255),w,b
 30108  002670  6EE9               	movwf	fsr0l,c
 30109  002672  0E00               	movlw	0
 30110  002674  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30111  002676  6EEA               	movwf	fsr0h,c
 30112  002678  50EF               	movf	indf0,w,c
 30113  00267A  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30114  00267C  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30115  00267E  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30116  002680  6EDF               	movwf	indf2,c
 30117  002682  0E04               	movlw	4
 30118  002684  277F               	addwf	AESEncode@i& (0+255),f,b
 30119  002686  0E0F               	movlw	15
 30120  002688  657F               	cpfsgt	AESEncode@i& (0+255),b
 30121  00268A  D6F0               	goto	l12031
 30122  00268C                     l12063:
 30123                           
 30124                           ; BSR set to: 0
 30125                           ;AES.c: 265: }
 30126                           ;AES.c: 266: }
 30127                           ;AES.c: 268: EncKeySchedule(key);
 30128  00268C  C06C  F064         	movff	AESEncode@key,EncKeySchedule@key
 30129  002690  ECB1  F014         	call	_EncKeySchedule	;wreg free
 30130                           
 30131                           ; BSR set to: 0
 30132                           ;AES.c: 271: for(i=0;i<16;i++)
 30133  002694  6B7F               	clrf	AESEncode@i& (0+255),b
 30134  002696                     l12071:
 30135                           
 30136                           ; BSR set to: 0
 30137                           ;AES.c: 272: {
 30138                           ;AES.c: 273: block[i] ^= key[i];
 30139  002696  516C               	movf	AESEncode@key& (0+255),w,b
 30140  002698  257F               	addwf	AESEncode@i& (0+255),w,b
 30141  00269A  6ED9               	movwf	fsr2l,c
 30142  00269C  6ADA               	clrf	fsr2h,c
 30143  00269E  50DF               	movf	indf2,w,c
 30144  0026A0  6F6D               	movwf	??_AESEncode& (0+255),b
 30145  0026A2  517F               	movf	AESEncode@i& (0+255),w,b
 30146  0026A4  256A               	addwf	AESEncode@block& (0+255),w,b
 30147  0026A6  6ED9               	movwf	fsr2l,c
 30148  0026A8  0E00               	movlw	0
 30149  0026AA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30150  0026AC  6EDA               	movwf	fsr2h,c
 30151  0026AE  516D               	movf	??_AESEncode& (0+255),w,b
 30152  0026B0  1ADF               	xorwf	indf2,f,c
 30153                           
 30154                           ; BSR set to: 0
 30155  0026B2  2B7F               	incf	AESEncode@i& (0+255),f,b
 30156                           
 30157                           ; BSR set to: 0
 30158  0026B4  0E0F               	movlw	15
 30159  0026B6  657F               	cpfsgt	AESEncode@i& (0+255),b
 30160  0026B8  D7EE               	goto	l12071
 30161                           
 30162                           ; BSR set to: 0
 30163                           ;AES.c: 274: }
 30164                           ;AES.c: 276: _roundCounter--;
 30165  0026BA  0644               	decf	__roundCounter,f,c
 30166                           
 30167                           ; BSR set to: 0
 30168                           ;AES.c: 277: }
 30169                           ;AES.c: 278: while(_roundCounter !=0);
 30170  0026BC  5044               	movf	__roundCounter,w,c
 30171  0026BE  E001 D6AB          	bnz	l2522
 30172                           
 30173                           ; BSR set to: 0
 30174  0026C2  0012               	return		;funcret
 30175  0026C4                     __end_of_AESEncode:
 30176                           	opt stack 0
 30177                           tosu	equ	0xFFF
 30178                           tosh	equ	0xFFE
 30179                           tosl	equ	0xFFD
 30180                           pclath	equ	0xFFA
 30181                           tblptru	equ	0xFF8
 30182                           tblptrh	equ	0xFF7
 30183                           tblptrl	equ	0xFF6
 30184                           tablat	equ	0xFF5
 30185                           prodh	equ	0xFF4
 30186                           prodl	equ	0xFF3
 30187                           intcon	equ	0xFF2
 30188                           intcon2	equ	0xFF1
 30189                           intcon3	equ	0xFF0
 30190                           indf0	equ	0xFEF
 30191                           postinc0	equ	0xFEE
 30192                           plusw0	equ	0xFEB
 30193                           fsr0h	equ	0xFEA
 30194                           fsr0l	equ	0xFE9
 30195                           wreg	equ	0xFE8
 30196                           postinc1	equ	0xFE6
 30197                           postdec1	equ	0xFE5
 30198                           plusw1	equ	0xFE3
 30199                           fsr1h	equ	0xFE2
 30200                           fsr1l	equ	0xFE1
 30201                           indf2	equ	0xFDF
 30202                           postinc2	equ	0xFDE
 30203                           postdec2	equ	0xFDD
 30204                           plusw2	equ	0xFDB
 30205                           fsr2h	equ	0xFDA
 30206                           fsr2l	equ	0xFD9
 30207                           status	equ	0xFD8
 30208                           
 30209 ;; *************** function _EncodeShiftRow *****************
 30210 ;; Defined at:
 30211 ;;		line 354 in file "mcc_generated_files/LoRaWAN/AES.c"
 30212 ;; Parameters:    Size  Location     Type
 30213 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30214 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30215 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30216 ;; Auto vars:     Size  Location     Type
 30217 ;;  temp            1    6[BANK0 ] unsigned char 
 30218 ;; Return value:  Size  Location     Type
 30219 ;;                  1    wreg      void 
 30220 ;; Registers used:
 30221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30222 ;; Tracked objects:
 30223 ;;		On entry : F/0
 30224 ;;		On exit  : F/0
 30225 ;;		Unchanged: 0/0
 30226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30231 ;;Total ram usage:        3 bytes
 30232 ;; Hardware stack levels used:    1
 30233 ;; Hardware stack levels required when called:    7
 30234 ;; This function calls:
 30235 ;;		Nothing
 30236 ;; This function is called by:
 30237 ;;		_AESEncode
 30238 ;; This function uses a non-reentrant model
 30239 ;;
 30240                           
 30241                           	psect	text156
 30242  003D1E                     __ptext156:
 30243                           	opt stack 0
 30244  003D1E                     _EncodeShiftRow:
 30245                           	opt stack 17
 30246                           
 30247                           ; BSR set to: 0
 30248                           ;AES.c: 356: unsigned char temp;
 30249                           ;AES.c: 361: temp=stateTable[1];
 30250                           
 30251                           ; BSR set to: 0
 30252                           ;incstack = 0
 30253  003D1E  EE20 F001          	lfsr	2,1
 30254  003D22  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30255  003D24  26D9               	addwf	fsr2l,f,c
 30256  003D26  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30257  003D28  22DA               	addwfc	fsr2h,f,c
 30258  003D2A  50DF               	movf	indf2,w,c
 30259  003D2C  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30260                           
 30261                           ; BSR set to: 0
 30262                           ;AES.c: 362: stateTable[1]=stateTable[5];
 30263  003D2E  EE20 F005          	lfsr	2,5
 30264  003D32  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30265  003D34  26D9               	addwf	fsr2l,f,c
 30266  003D36  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30267  003D38  22DA               	addwfc	fsr2h,f,c
 30268  003D3A  EE00 F001          	lfsr	0,1
 30269  003D3E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30270  003D40  26E9               	addwf	fsr0l,f,c
 30271  003D42  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30272  003D44  22EA               	addwfc	fsr0h,f,c
 30273  003D46  CFDF FFEF          	movff	indf2,indf0
 30274                           
 30275                           ; BSR set to: 0
 30276                           ;AES.c: 363: stateTable[5]=stateTable[9];
 30277  003D4A  EE20 F009          	lfsr	2,9
 30278  003D4E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30279  003D50  26D9               	addwf	fsr2l,f,c
 30280  003D52  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30281  003D54  22DA               	addwfc	fsr2h,f,c
 30282  003D56  EE00 F005          	lfsr	0,5
 30283  003D5A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30284  003D5C  26E9               	addwf	fsr0l,f,c
 30285  003D5E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30286  003D60  22EA               	addwfc	fsr0h,f,c
 30287  003D62  CFDF FFEF          	movff	indf2,indf0
 30288                           
 30289                           ; BSR set to: 0
 30290                           ;AES.c: 364: stateTable[9]=stateTable[13];
 30291  003D66  EE20 F00D          	lfsr	2,13
 30292  003D6A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30293  003D6C  26D9               	addwf	fsr2l,f,c
 30294  003D6E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30295  003D70  22DA               	addwfc	fsr2h,f,c
 30296  003D72  EE00 F009          	lfsr	0,9
 30297  003D76  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30298  003D78  26E9               	addwf	fsr0l,f,c
 30299  003D7A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30300  003D7C  22EA               	addwfc	fsr0h,f,c
 30301  003D7E  CFDF FFEF          	movff	indf2,indf0
 30302                           
 30303                           ; BSR set to: 0
 30304                           ;AES.c: 365: stateTable[13]=temp;
 30305  003D82  EE20 F00D          	lfsr	2,13
 30306  003D86  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30307  003D88  26D9               	addwf	fsr2l,f,c
 30308  003D8A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30309  003D8C  22DA               	addwfc	fsr2h,f,c
 30310  003D8E  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30311                           
 30312                           ; BSR set to: 0
 30313                           ;AES.c: 368: temp=stateTable[2];
 30314  003D92  EE20 F002          	lfsr	2,2
 30315  003D96  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30316  003D98  26D9               	addwf	fsr2l,f,c
 30317  003D9A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30318  003D9C  22DA               	addwfc	fsr2h,f,c
 30319  003D9E  50DF               	movf	indf2,w,c
 30320  003DA0  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30321                           
 30322                           ; BSR set to: 0
 30323                           ;AES.c: 369: stateTable[2]=stateTable[10];
 30324  003DA2  EE20 F00A          	lfsr	2,10
 30325  003DA6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30326  003DA8  26D9               	addwf	fsr2l,f,c
 30327  003DAA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30328  003DAC  22DA               	addwfc	fsr2h,f,c
 30329  003DAE  EE00 F002          	lfsr	0,2
 30330  003DB2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30331  003DB4  26E9               	addwf	fsr0l,f,c
 30332  003DB6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30333  003DB8  22EA               	addwfc	fsr0h,f,c
 30334  003DBA  CFDF FFEF          	movff	indf2,indf0
 30335                           
 30336                           ;AES.c: 370: stateTable[10]=temp;
 30337  003DBE  EE20 F00A          	lfsr	2,10
 30338  003DC2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30339  003DC4  26D9               	addwf	fsr2l,f,c
 30340  003DC6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30341  003DC8  22DA               	addwfc	fsr2h,f,c
 30342  003DCA  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30343                           
 30344                           ;AES.c: 371: temp=stateTable[14];
 30345  003DCE  EE20 F00E          	lfsr	2,14
 30346  003DD2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30347  003DD4  26D9               	addwf	fsr2l,f,c
 30348  003DD6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30349  003DD8  22DA               	addwfc	fsr2h,f,c
 30350  003DDA  50DF               	movf	indf2,w,c
 30351  003DDC  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30352                           
 30353                           ; BSR set to: 0
 30354                           ;AES.c: 372: stateTable[14]=stateTable[6];
 30355  003DDE  EE20 F006          	lfsr	2,6
 30356  003DE2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30357  003DE4  26D9               	addwf	fsr2l,f,c
 30358  003DE6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30359  003DE8  22DA               	addwfc	fsr2h,f,c
 30360  003DEA  EE00 F00E          	lfsr	0,14
 30361  003DEE  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30362  003DF0  26E9               	addwf	fsr0l,f,c
 30363  003DF2  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30364  003DF4  22EA               	addwfc	fsr0h,f,c
 30365  003DF6  CFDF FFEF          	movff	indf2,indf0
 30366                           
 30367                           ; BSR set to: 0
 30368                           ;AES.c: 373: stateTable[6]=temp;
 30369  003DFA  EE20 F006          	lfsr	2,6
 30370  003DFE  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30371  003E00  26D9               	addwf	fsr2l,f,c
 30372  003E02  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30373  003E04  22DA               	addwfc	fsr2h,f,c
 30374  003E06  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30375                           
 30376                           ; BSR set to: 0
 30377                           ;AES.c: 376: temp=stateTable[3];
 30378  003E0A  EE20 F003          	lfsr	2,3
 30379  003E0E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30380  003E10  26D9               	addwf	fsr2l,f,c
 30381  003E12  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30382  003E14  22DA               	addwfc	fsr2h,f,c
 30383  003E16  50DF               	movf	indf2,w,c
 30384  003E18  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30385                           
 30386                           ; BSR set to: 0
 30387                           ;AES.c: 377: stateTable[3]=stateTable[15];
 30388  003E1A  EE20 F00F          	lfsr	2,15
 30389  003E1E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30390  003E20  26D9               	addwf	fsr2l,f,c
 30391  003E22  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30392  003E24  22DA               	addwfc	fsr2h,f,c
 30393  003E26  EE00 F003          	lfsr	0,3
 30394  003E2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30395  003E2C  26E9               	addwf	fsr0l,f,c
 30396  003E2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30397  003E30  22EA               	addwfc	fsr0h,f,c
 30398  003E32  CFDF FFEF          	movff	indf2,indf0
 30399                           
 30400                           ; BSR set to: 0
 30401                           ;AES.c: 378: stateTable[15]=stateTable[11];
 30402  003E36  EE20 F00B          	lfsr	2,11
 30403  003E3A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30404  003E3C  26D9               	addwf	fsr2l,f,c
 30405  003E3E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30406  003E40  22DA               	addwfc	fsr2h,f,c
 30407  003E42  EE00 F00F          	lfsr	0,15
 30408  003E46  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30409  003E48  26E9               	addwf	fsr0l,f,c
 30410  003E4A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30411  003E4C  22EA               	addwfc	fsr0h,f,c
 30412  003E4E  CFDF FFEF          	movff	indf2,indf0
 30413                           
 30414                           ; BSR set to: 0
 30415                           ;AES.c: 379: stateTable[11]=stateTable[7];
 30416  003E52  EE20 F007          	lfsr	2,7
 30417  003E56  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30418  003E58  26D9               	addwf	fsr2l,f,c
 30419  003E5A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30420  003E5C  22DA               	addwfc	fsr2h,f,c
 30421  003E5E  EE00 F00B          	lfsr	0,11
 30422  003E62  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30423  003E64  26E9               	addwf	fsr0l,f,c
 30424  003E66  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30425  003E68  22EA               	addwfc	fsr0h,f,c
 30426  003E6A  CFDF FFEF          	movff	indf2,indf0
 30427                           
 30428                           ;AES.c: 380: stateTable[7]=temp;
 30429  003E6E  EE20 F007          	lfsr	2,7
 30430  003E72  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30431  003E74  26D9               	addwf	fsr2l,f,c
 30432  003E76  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30433  003E78  22DA               	addwfc	fsr2h,f,c
 30434  003E7A  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30435                           
 30436                           ; BSR set to: 0
 30437  003E7E  0012               	return		;funcret
 30438  003E80                     __end_of_EncodeShiftRow:
 30439                           	opt stack 0
 30440                           tosu	equ	0xFFF
 30441                           tosh	equ	0xFFE
 30442                           tosl	equ	0xFFD
 30443                           pclath	equ	0xFFA
 30444                           tblptru	equ	0xFF8
 30445                           tblptrh	equ	0xFF7
 30446                           tblptrl	equ	0xFF6
 30447                           tablat	equ	0xFF5
 30448                           prodh	equ	0xFF4
 30449                           prodl	equ	0xFF3
 30450                           intcon	equ	0xFF2
 30451                           intcon2	equ	0xFF1
 30452                           intcon3	equ	0xFF0
 30453                           indf0	equ	0xFEF
 30454                           postinc0	equ	0xFEE
 30455                           plusw0	equ	0xFEB
 30456                           fsr0h	equ	0xFEA
 30457                           fsr0l	equ	0xFE9
 30458                           wreg	equ	0xFE8
 30459                           postinc1	equ	0xFE6
 30460                           postdec1	equ	0xFE5
 30461                           plusw1	equ	0xFE3
 30462                           fsr1h	equ	0xFE2
 30463                           fsr1l	equ	0xFE1
 30464                           indf2	equ	0xFDF
 30465                           postinc2	equ	0xFDE
 30466                           postdec2	equ	0xFDD
 30467                           plusw2	equ	0xFDB
 30468                           fsr2h	equ	0xFDA
 30469                           fsr2l	equ	0xFD9
 30470                           status	equ	0xFD8
 30471                           
 30472 ;; *************** function _EncKeySchedule *****************
 30473 ;; Defined at:
 30474 ;;		line 306 in file "mcc_generated_files/LoRaWAN/AES.c"
 30475 ;; Parameters:    Size  Location     Type
 30476 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30477 ;;		 -> AESEncodeLoRa@useKey(16), 
 30478 ;; Auto vars:     Size  Location     Type
 30479 ;;		None
 30480 ;; Return value:  Size  Location     Type
 30481 ;;                  1    wreg      void 
 30482 ;; Registers used:
 30483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30484 ;; Tracked objects:
 30485 ;;		On entry : F/0
 30486 ;;		On exit  : F/0
 30487 ;;		Unchanged: 0/0
 30488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30489 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30491 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30492 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30493 ;;Total ram usage:        6 bytes
 30494 ;; Hardware stack levels used:    1
 30495 ;; Hardware stack levels required when called:    7
 30496 ;; This function calls:
 30497 ;;		Nothing
 30498 ;; This function is called by:
 30499 ;;		_AESEncode
 30500 ;; This function uses a non-reentrant model
 30501 ;;
 30502                           
 30503                           	psect	text157
 30504  002962                     __ptext157:
 30505                           	opt stack 0
 30506  002962                     _EncKeySchedule:
 30507                           	opt stack 17
 30508                           
 30509                           ; BSR set to: 0
 30510                           ;AES.c: 309: key[0]^=STable[key[13]];
 30511                           
 30512                           ; BSR set to: 0
 30513                           ;incstack = 0
 30514  002962  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30515  002964  6ED9               	movwf	fsr2l,c
 30516  002966  6ADA               	clrf	fsr2h,c
 30517  002968  0E0D               	movlw	13
 30518  00296A  26D9               	addwf	fsr2l,f,c
 30519  00296C  50DF               	movf	indf2,w,c
 30520  00296E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30521  002970  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30522  002972  0E6D               	movlw	low _STable
 30523  002974  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30524  002976  6EF6               	movwf	tblptrl,c
 30525  002978  0EFE               	movlw	high _STable
 30526  00297A  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30527  00297C  6EF7               	movwf	tblptrh,c
 30528  00297E                     	if	1	;There are 3 active tblptr bytes
 30529  00297E  6AF8               	clrf	tblptru,c
 30530  002980  0E00               	movlw	low (__mediumconst shr (0+16))
 30531  002982  22F8               	addwfc	tblptru,f,c
 30532  002984                     	endif
 30533  002984  0008               	tblrd		*
 30534  002986  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30535  00298A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30536  00298C  6ED9               	movwf	fsr2l,c
 30537  00298E  6ADA               	clrf	fsr2h,c
 30538  002990  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30539  002992  1ADF               	xorwf	indf2,f,c
 30540                           
 30541                           ;AES.c: 310: key[1]^=STable[key[14]];
 30542  002994  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30543  002996  6ED9               	movwf	fsr2l,c
 30544  002998  6ADA               	clrf	fsr2h,c
 30545  00299A  0E0E               	movlw	14
 30546  00299C  26D9               	addwf	fsr2l,f,c
 30547  00299E  50DF               	movf	indf2,w,c
 30548  0029A0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30549  0029A2  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30550  0029A4  0E6D               	movlw	low _STable
 30551  0029A6  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30552  0029A8  6EF6               	movwf	tblptrl,c
 30553  0029AA  0EFE               	movlw	high _STable
 30554  0029AC  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30555  0029AE  6EF7               	movwf	tblptrh,c
 30556  0029B0                     	if	1	;There are 3 active tblptr bytes
 30557  0029B0  6AF8               	clrf	tblptru,c
 30558  0029B2  0E00               	movlw	low (__mediumconst shr (0+16))
 30559  0029B4  22F8               	addwfc	tblptru,f,c
 30560  0029B6                     	endif
 30561  0029B6  0008               	tblrd		*
 30562  0029B8  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30563  0029BC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30564  0029BE  6ED9               	movwf	fsr2l,c
 30565  0029C0  6ADA               	clrf	fsr2h,c
 30566  0029C2  2AD9               	incf	fsr2l,f,c
 30567  0029C4  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30568  0029C6  1ADF               	xorwf	indf2,f,c
 30569                           
 30570                           ;AES.c: 311: key[2]^=STable[key[15]];
 30571  0029C8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30572  0029CA  6ED9               	movwf	fsr2l,c
 30573  0029CC  6ADA               	clrf	fsr2h,c
 30574  0029CE  0E0F               	movlw	15
 30575  0029D0  26D9               	addwf	fsr2l,f,c
 30576  0029D2  50DF               	movf	indf2,w,c
 30577  0029D4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30578  0029D6  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30579  0029D8  0E6D               	movlw	low _STable
 30580  0029DA  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30581  0029DC  6EF6               	movwf	tblptrl,c
 30582  0029DE  0EFE               	movlw	high _STable
 30583  0029E0  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30584  0029E2  6EF7               	movwf	tblptrh,c
 30585  0029E4                     	if	1	;There are 3 active tblptr bytes
 30586  0029E4  6AF8               	clrf	tblptru,c
 30587  0029E6  0E00               	movlw	low (__mediumconst shr (0+16))
 30588  0029E8  22F8               	addwfc	tblptru,f,c
 30589  0029EA                     	endif
 30590  0029EA  0008               	tblrd		*
 30591  0029EC  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30592  0029F0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30593  0029F2  6ED9               	movwf	fsr2l,c
 30594  0029F4  6ADA               	clrf	fsr2h,c
 30595  0029F6  0E02               	movlw	2
 30596  0029F8  26D9               	addwf	fsr2l,f,c
 30597  0029FA  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30598  0029FC  1ADF               	xorwf	indf2,f,c
 30599                           
 30600                           ;AES.c: 312: key[3]^=STable[key[12]];
 30601  0029FE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30602  002A00  6ED9               	movwf	fsr2l,c
 30603  002A02  6ADA               	clrf	fsr2h,c
 30604  002A04  0E0C               	movlw	12
 30605  002A06  26D9               	addwf	fsr2l,f,c
 30606  002A08  50DF               	movf	indf2,w,c
 30607  002A0A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30608  002A0C  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30609  002A0E  0E6D               	movlw	low _STable
 30610  002A10  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30611  002A12  6EF6               	movwf	tblptrl,c
 30612  002A14  0EFE               	movlw	high _STable
 30613  002A16  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30614  002A18  6EF7               	movwf	tblptrh,c
 30615  002A1A                     	if	1	;There are 3 active tblptr bytes
 30616  002A1A  6AF8               	clrf	tblptru,c
 30617  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 30618  002A1E  22F8               	addwfc	tblptru,f,c
 30619  002A20                     	endif
 30620  002A20  0008               	tblrd		*
 30621  002A22  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30622  002A26  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30623  002A28  6ED9               	movwf	fsr2l,c
 30624  002A2A  6ADA               	clrf	fsr2h,c
 30625  002A2C  0E03               	movlw	3
 30626  002A2E  26D9               	addwf	fsr2l,f,c
 30627  002A30  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30628  002A32  1ADF               	xorwf	indf2,f,c
 30629                           
 30630                           ; BSR set to: 0
 30631                           ;AES.c: 314: key[0]^=_rcon;
 30632  002A34  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30633  002A36  6ED9               	movwf	fsr2l,c
 30634  002A38  6ADA               	clrf	fsr2h,c
 30635  002A3A  51EE               	movf	__rcon& (0+255),w,b
 30636  002A3C  1ADF               	xorwf	indf2,f,c
 30637                           
 30638                           ; BSR set to: 0
 30639                           ;AES.c: 315: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30640  002A3E  0E7F               	movlw	127
 30641  002A40  65EE               	cpfsgt	__rcon& (0+255),b
 30642  002A42  D00C               	goto	l11891
 30643                           
 30644                           ; BSR set to: 0
 30645  002A44  0E1B               	movlw	27
 30646  002A46  C0EE  F065         	movff	__rcon,??_EncKeySchedule
 30647  002A4A  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30648  002A4C  90D8               	bcf	status,0,c
 30649  002A4E  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30650  002A50  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30651  002A52  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30652  002A54  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30653  002A56  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30654  002A58  6F69               	movwf	(_EncKeySchedule$4148+1)& (0+255),b
 30655  002A5A  D005               	goto	l11893
 30656  002A5C                     l11891:
 30657                           
 30658                           ; BSR set to: 0
 30659  002A5C  90D8               	bcf	status,0,c
 30660  002A5E  35EE               	rlcf	__rcon& (0+255),w,b
 30661  002A60  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30662  002A62  6B69               	clrf	(_EncKeySchedule$4148+1)& (0+255),b
 30663  002A64  3769               	rlcf	(_EncKeySchedule$4148+1)& (0+255),f,b
 30664  002A66                     l11893:
 30665                           
 30666                           ; BSR set to: 0
 30667  002A66  C068  F0EE         	movff	_EncKeySchedule$4148,__rcon
 30668                           
 30669                           ; BSR set to: 0
 30670                           ;AES.c: 318: key[4]^=key[0];
 30671  002A6A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30672  002A6C  6ED9               	movwf	fsr2l,c
 30673  002A6E  6ADA               	clrf	fsr2h,c
 30674  002A70  50DF               	movf	indf2,w,c
 30675  002A72  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30676  002A74  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30677  002A76  6ED9               	movwf	fsr2l,c
 30678  002A78  6ADA               	clrf	fsr2h,c
 30679  002A7A  0E04               	movlw	4
 30680  002A7C  26D9               	addwf	fsr2l,f,c
 30681  002A7E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30682  002A80  1ADF               	xorwf	indf2,f,c
 30683                           
 30684                           ; BSR set to: 0
 30685                           ;AES.c: 319: key[5]^=key[1];
 30686  002A82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30687  002A84  6ED9               	movwf	fsr2l,c
 30688  002A86  6ADA               	clrf	fsr2h,c
 30689  002A88  2AD9               	incf	fsr2l,f,c
 30690  002A8A  50DF               	movf	indf2,w,c
 30691  002A8C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30692  002A8E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30693  002A90  6ED9               	movwf	fsr2l,c
 30694  002A92  6ADA               	clrf	fsr2h,c
 30695  002A94  0E05               	movlw	5
 30696  002A96  26D9               	addwf	fsr2l,f,c
 30697  002A98  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30698  002A9A  1ADF               	xorwf	indf2,f,c
 30699                           
 30700                           ; BSR set to: 0
 30701                           ;AES.c: 320: key[6]^=key[2];
 30702  002A9C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30703  002A9E  6ED9               	movwf	fsr2l,c
 30704  002AA0  6ADA               	clrf	fsr2h,c
 30705  002AA2  0E02               	movlw	2
 30706  002AA4  26D9               	addwf	fsr2l,f,c
 30707  002AA6  50DF               	movf	indf2,w,c
 30708  002AA8  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30709  002AAA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30710  002AAC  6ED9               	movwf	fsr2l,c
 30711  002AAE  6ADA               	clrf	fsr2h,c
 30712  002AB0  0E06               	movlw	6
 30713  002AB2  26D9               	addwf	fsr2l,f,c
 30714  002AB4  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30715  002AB6  1ADF               	xorwf	indf2,f,c
 30716                           
 30717                           ; BSR set to: 0
 30718                           ;AES.c: 321: key[7]^=key[3];
 30719  002AB8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30720  002ABA  6ED9               	movwf	fsr2l,c
 30721  002ABC  6ADA               	clrf	fsr2h,c
 30722  002ABE  0E03               	movlw	3
 30723  002AC0  26D9               	addwf	fsr2l,f,c
 30724  002AC2  50DF               	movf	indf2,w,c
 30725  002AC4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30726  002AC6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30727  002AC8  6ED9               	movwf	fsr2l,c
 30728  002ACA  6ADA               	clrf	fsr2h,c
 30729  002ACC  0E07               	movlw	7
 30730  002ACE  26D9               	addwf	fsr2l,f,c
 30731  002AD0  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30732  002AD2  1ADF               	xorwf	indf2,f,c
 30733                           
 30734                           ; BSR set to: 0
 30735                           ;AES.c: 324: key[8]^=key[4];
 30736  002AD4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30737  002AD6  6ED9               	movwf	fsr2l,c
 30738  002AD8  6ADA               	clrf	fsr2h,c
 30739  002ADA  0E04               	movlw	4
 30740  002ADC  26D9               	addwf	fsr2l,f,c
 30741  002ADE  50DF               	movf	indf2,w,c
 30742  002AE0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30743  002AE2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30744  002AE4  6ED9               	movwf	fsr2l,c
 30745  002AE6  6ADA               	clrf	fsr2h,c
 30746  002AE8  0E08               	movlw	8
 30747  002AEA  26D9               	addwf	fsr2l,f,c
 30748  002AEC  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30749  002AEE  1ADF               	xorwf	indf2,f,c
 30750                           
 30751                           ; BSR set to: 0
 30752                           ;AES.c: 325: key[9]^=key[5];
 30753  002AF0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30754  002AF2  6ED9               	movwf	fsr2l,c
 30755  002AF4  6ADA               	clrf	fsr2h,c
 30756  002AF6  0E05               	movlw	5
 30757  002AF8  26D9               	addwf	fsr2l,f,c
 30758  002AFA  50DF               	movf	indf2,w,c
 30759  002AFC  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30760  002AFE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30761  002B00  6ED9               	movwf	fsr2l,c
 30762  002B02  6ADA               	clrf	fsr2h,c
 30763  002B04  0E09               	movlw	9
 30764  002B06  26D9               	addwf	fsr2l,f,c
 30765  002B08  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30766  002B0A  1ADF               	xorwf	indf2,f,c
 30767                           
 30768                           ; BSR set to: 0
 30769                           ;AES.c: 326: key[10]^=key[6];
 30770  002B0C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30771  002B0E  6ED9               	movwf	fsr2l,c
 30772  002B10  6ADA               	clrf	fsr2h,c
 30773  002B12  0E06               	movlw	6
 30774  002B14  26D9               	addwf	fsr2l,f,c
 30775  002B16  50DF               	movf	indf2,w,c
 30776  002B18  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30777  002B1A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30778  002B1C  6ED9               	movwf	fsr2l,c
 30779  002B1E  6ADA               	clrf	fsr2h,c
 30780  002B20  0E0A               	movlw	10
 30781  002B22  26D9               	addwf	fsr2l,f,c
 30782  002B24  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30783  002B26  1ADF               	xorwf	indf2,f,c
 30784                           
 30785                           ; BSR set to: 0
 30786                           ;AES.c: 327: key[11]^=key[7];
 30787  002B28  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30788  002B2A  6ED9               	movwf	fsr2l,c
 30789  002B2C  6ADA               	clrf	fsr2h,c
 30790  002B2E  0E07               	movlw	7
 30791  002B30  26D9               	addwf	fsr2l,f,c
 30792  002B32  50DF               	movf	indf2,w,c
 30793  002B34  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30794  002B36  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30795  002B38  6ED9               	movwf	fsr2l,c
 30796  002B3A  6ADA               	clrf	fsr2h,c
 30797  002B3C  0E0B               	movlw	11
 30798  002B3E  26D9               	addwf	fsr2l,f,c
 30799  002B40  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30800  002B42  1ADF               	xorwf	indf2,f,c
 30801                           
 30802                           ; BSR set to: 0
 30803                           ;AES.c: 330: key[12]^=key[8];
 30804  002B44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30805  002B46  6ED9               	movwf	fsr2l,c
 30806  002B48  6ADA               	clrf	fsr2h,c
 30807  002B4A  0E08               	movlw	8
 30808  002B4C  26D9               	addwf	fsr2l,f,c
 30809  002B4E  50DF               	movf	indf2,w,c
 30810  002B50  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30811  002B52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30812  002B54  6ED9               	movwf	fsr2l,c
 30813  002B56  6ADA               	clrf	fsr2h,c
 30814  002B58  0E0C               	movlw	12
 30815  002B5A  26D9               	addwf	fsr2l,f,c
 30816  002B5C  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30817  002B5E  1ADF               	xorwf	indf2,f,c
 30818                           
 30819                           ; BSR set to: 0
 30820                           ;AES.c: 331: key[13]^=key[9];
 30821  002B60  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30822  002B62  6ED9               	movwf	fsr2l,c
 30823  002B64  6ADA               	clrf	fsr2h,c
 30824  002B66  0E09               	movlw	9
 30825  002B68  26D9               	addwf	fsr2l,f,c
 30826  002B6A  50DF               	movf	indf2,w,c
 30827  002B6C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30828  002B6E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30829  002B70  6ED9               	movwf	fsr2l,c
 30830  002B72  6ADA               	clrf	fsr2h,c
 30831  002B74  0E0D               	movlw	13
 30832  002B76  26D9               	addwf	fsr2l,f,c
 30833  002B78  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30834  002B7A  1ADF               	xorwf	indf2,f,c
 30835                           
 30836                           ; BSR set to: 0
 30837                           ;AES.c: 332: key[14]^=key[10];
 30838  002B7C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30839  002B7E  6ED9               	movwf	fsr2l,c
 30840  002B80  6ADA               	clrf	fsr2h,c
 30841  002B82  0E0A               	movlw	10
 30842  002B84  26D9               	addwf	fsr2l,f,c
 30843  002B86  50DF               	movf	indf2,w,c
 30844  002B88  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30845  002B8A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30846  002B8C  6ED9               	movwf	fsr2l,c
 30847  002B8E  6ADA               	clrf	fsr2h,c
 30848  002B90  0E0E               	movlw	14
 30849  002B92  26D9               	addwf	fsr2l,f,c
 30850  002B94  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30851  002B96  1ADF               	xorwf	indf2,f,c
 30852                           
 30853                           ; BSR set to: 0
 30854                           ;AES.c: 333: key[15]^=key[11];
 30855  002B98  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30856  002B9A  6ED9               	movwf	fsr2l,c
 30857  002B9C  6ADA               	clrf	fsr2h,c
 30858  002B9E  0E0B               	movlw	11
 30859  002BA0  26D9               	addwf	fsr2l,f,c
 30860  002BA2  50DF               	movf	indf2,w,c
 30861  002BA4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30862  002BA6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30863  002BA8  6ED9               	movwf	fsr2l,c
 30864  002BAA  6ADA               	clrf	fsr2h,c
 30865  002BAC  0E0F               	movlw	15
 30866  002BAE  26D9               	addwf	fsr2l,f,c
 30867  002BB0  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30868  002BB2  1ADF               	xorwf	indf2,f,c
 30869                           
 30870                           ; BSR set to: 0
 30871  002BB4  0012               	return		;funcret
 30872  002BB6                     __end_of_EncKeySchedule:
 30873                           	opt stack 0
 30874                           tosu	equ	0xFFF
 30875                           tosh	equ	0xFFE
 30876                           tosl	equ	0xFFD
 30877                           pclath	equ	0xFFA
 30878                           tblptru	equ	0xFF8
 30879                           tblptrh	equ	0xFF7
 30880                           tblptrl	equ	0xFF6
 30881                           tablat	equ	0xFF5
 30882                           prodh	equ	0xFF4
 30883                           prodl	equ	0xFF3
 30884                           intcon	equ	0xFF2
 30885                           intcon2	equ	0xFF1
 30886                           intcon3	equ	0xFF0
 30887                           indf0	equ	0xFEF
 30888                           postinc0	equ	0xFEE
 30889                           plusw0	equ	0xFEB
 30890                           fsr0h	equ	0xFEA
 30891                           fsr0l	equ	0xFE9
 30892                           wreg	equ	0xFE8
 30893                           postinc1	equ	0xFE6
 30894                           postdec1	equ	0xFE5
 30895                           plusw1	equ	0xFE3
 30896                           fsr1h	equ	0xFE2
 30897                           fsr1l	equ	0xFE1
 30898                           indf2	equ	0xFDF
 30899                           postinc2	equ	0xFDE
 30900                           postdec2	equ	0xFDD
 30901                           plusw2	equ	0xFDB
 30902                           fsr2h	equ	0xFDA
 30903                           fsr2l	equ	0xFD9
 30904                           status	equ	0xFD8
 30905                           
 30906 ;; *************** function _LORAWAN_Init *****************
 30907 ;; Defined at:
 30908 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 30909 ;; Parameters:    Size  Location     Type
 30910 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 30911 ;;		 -> RxDataDone(1), 
 30912 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 30913 ;;		 -> RxJoinResponse(1), 
 30914 ;; Auto vars:     Size  Location     Type
 30915 ;;		None
 30916 ;; Return value:  Size  Location     Type
 30917 ;;                  1    wreg      void 
 30918 ;; Registers used:
 30919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30920 ;; Tracked objects:
 30921 ;;		On entry : F/0
 30922 ;;		On exit  : D/0
 30923 ;;		Unchanged: 0/0
 30924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30928 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30929 ;;Total ram usage:        4 bytes
 30930 ;; Hardware stack levels used:    1
 30931 ;; Hardware stack levels required when called:   13
 30932 ;; This function calls:
 30933 ;;		_CreateAllSoftwareTimers
 30934 ;;		_LORAWAN_Reset
 30935 ;;		_RADIO_Init
 30936 ;;		_RADIO_ReadRandom
 30937 ;;		_SetCallbackSoftwareTimers
 30938 ;;		_StopAllSoftwareTimers
 30939 ;;		_srand
 30940 ;; This function is called by:
 30941 ;;		_main
 30942 ;; This function uses a non-reentrant model
 30943 ;;
 30944                           
 30945                           	psect	text158
 30946  0066F0                     __ptext158:
 30947                           	opt stack 0
 30948  0066F0                     _LORAWAN_Init:
 30949                           	opt stack 17
 30950                           
 30951                           ; BSR set to: 0
 30952                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 30953                           
 30954                           ; BSR set to: 0
 30955                           ;incstack = 0
 30956  0066F0  0102               	movlb	2	; () banked
 30957  0066F2  51F0               	movf	(_loRa+240)& (0+255),w,b
 30958  0066F4  E108               	bnz	l15485
 30959                           
 30960                           ; BSR set to: 2
 30961                           ;lorawan_eu.c: 127: {
 30962                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 30963  0066F6  EC7F  F034         	call	_CreateAllSoftwareTimers	;wreg free
 30964                           
 30965                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 30966  0066FA  ECBA  F02A         	call	_SetCallbackSoftwareTimers	;wreg free
 30967                           
 30968                           ; BSR set to: 0
 30969                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 30970  0066FE  0E01               	movlw	1
 30971  006700  0102               	movlb	2	; () banked
 30972  006702  6FF0               	movwf	(_loRa+240)& (0+255),b
 30973                           
 30974                           ;lorawan_eu.c: 131: }
 30975  006704  D002               	goto	l15487
 30976  006706                     l15485:
 30977                           
 30978                           ; BSR set to: 2
 30979                           ;lorawan_eu.c: 132: else
 30980                           ;lorawan_eu.c: 133: {
 30981                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 30982  006706  ECF6  F034         	call	_StopAllSoftwareTimers	;wreg free
 30983  00670A                     l15487:
 30984                           
 30985                           ;lorawan_eu.c: 135: }
 30986                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 30987  00670A  C0A6  F0E8         	movff	LORAWAN_Init@RxPayload,_rxPayload
 30988  00670E  C0A7  F0E9         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 30989                           
 30990                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 30991  006712  C0A8  F0EA         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 30992  006716  C0A9  F0EB         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 30993                           
 30994                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 30995  00671A  0EFF               	movlw	low (_radioBuffer+16)
 30996  00671C  0100               	movlb	0	; () banked
 30997  00671E  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 30998  006720  0E05               	movlw	high (_radioBuffer+16)
 30999  006722  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31000  006724  0EA0               	movlw	160
 31001  006726  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31002  006728  0E27               	movlw	39
 31003  00672A  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31004  00672C  0EBE               	movlw	190
 31005  00672E  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31006  006730  0E33               	movlw	51
 31007  006732  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31008  006734  EC36  F01C         	call	_RADIO_Init	;wreg free
 31009                           
 31010                           ; BSR set to: 1
 31011                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 31012  006738  EC52  F02F         	call	_RADIO_ReadRandom	;wreg free
 31013  00673C  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 31014  006740  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31015  006744  EC97  F03B         	call	_srand	;wreg free
 31016                           
 31017                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 31018  006748  0E00               	movlw	0
 31019  00674A  EF40  F01F         	goto	_LORAWAN_Reset
 31020  00674E                     __end_of_LORAWAN_Init:
 31021                           	opt stack 0
 31022                           tosu	equ	0xFFF
 31023                           tosh	equ	0xFFE
 31024                           tosl	equ	0xFFD
 31025                           pclath	equ	0xFFA
 31026                           tblptru	equ	0xFF8
 31027                           tblptrh	equ	0xFF7
 31028                           tblptrl	equ	0xFF6
 31029                           tablat	equ	0xFF5
 31030                           prodh	equ	0xFF4
 31031                           prodl	equ	0xFF3
 31032                           intcon	equ	0xFF2
 31033                           intcon2	equ	0xFF1
 31034                           intcon3	equ	0xFF0
 31035                           indf0	equ	0xFEF
 31036                           postinc0	equ	0xFEE
 31037                           plusw0	equ	0xFEB
 31038                           fsr0h	equ	0xFEA
 31039                           fsr0l	equ	0xFE9
 31040                           wreg	equ	0xFE8
 31041                           postinc1	equ	0xFE6
 31042                           postdec1	equ	0xFE5
 31043                           plusw1	equ	0xFE3
 31044                           fsr1h	equ	0xFE2
 31045                           fsr1l	equ	0xFE1
 31046                           indf2	equ	0xFDF
 31047                           postinc2	equ	0xFDE
 31048                           postdec2	equ	0xFDD
 31049                           plusw2	equ	0xFDB
 31050                           fsr2h	equ	0xFDA
 31051                           fsr2l	equ	0xFD9
 31052                           status	equ	0xFD8
 31053                           
 31054 ;; *************** function _srand *****************
 31055 ;; Defined at:
 31056 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 31057 ;; Parameters:    Size  Location     Type
 31058 ;;  x               2   21[BANK0 ] unsigned int 
 31059 ;; Auto vars:     Size  Location     Type
 31060 ;;		None
 31061 ;; Return value:  Size  Location     Type
 31062 ;;                  1    wreg      void 
 31063 ;; Registers used:
 31064 ;;		status,2
 31065 ;; Tracked objects:
 31066 ;;		On entry : 0/1
 31067 ;;		On exit  : 0/0
 31068 ;;		Unchanged: 0/0
 31069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31074 ;;Total ram usage:        2 bytes
 31075 ;; Hardware stack levels used:    1
 31076 ;; Hardware stack levels required when called:    7
 31077 ;; This function calls:
 31078 ;;		Nothing
 31079 ;; This function is called by:
 31080 ;;		_LORAWAN_Init
 31081 ;; This function uses a non-reentrant model
 31082 ;;
 31083                           
 31084                           	psect	text159
 31085  00772E                     __ptext159:
 31086                           	opt stack 0
 31087  00772E                     _srand:
 31088                           	opt stack 22
 31089                           
 31090                           ;incstack = 0
 31091  00772E  C075  F052         	movff	srand@x,_randx
 31092  007732  C076  F053         	movff	srand@x+1,_randx+1
 31093  007736  6A54               	clrf	_randx+2,c
 31094  007738  6A55               	clrf	_randx+3,c
 31095  00773A  0012               	return		;funcret
 31096  00773C                     __end_of_srand:
 31097                           	opt stack 0
 31098                           tosu	equ	0xFFF
 31099                           tosh	equ	0xFFE
 31100                           tosl	equ	0xFFD
 31101                           pclath	equ	0xFFA
 31102                           tblptru	equ	0xFF8
 31103                           tblptrh	equ	0xFF7
 31104                           tblptrl	equ	0xFF6
 31105                           tablat	equ	0xFF5
 31106                           prodh	equ	0xFF4
 31107                           prodl	equ	0xFF3
 31108                           intcon	equ	0xFF2
 31109                           intcon2	equ	0xFF1
 31110                           intcon3	equ	0xFF0
 31111                           indf0	equ	0xFEF
 31112                           postinc0	equ	0xFEE
 31113                           plusw0	equ	0xFEB
 31114                           fsr0h	equ	0xFEA
 31115                           fsr0l	equ	0xFE9
 31116                           wreg	equ	0xFE8
 31117                           postinc1	equ	0xFE6
 31118                           postdec1	equ	0xFE5
 31119                           plusw1	equ	0xFE3
 31120                           fsr1h	equ	0xFE2
 31121                           fsr1l	equ	0xFE1
 31122                           indf2	equ	0xFDF
 31123                           postinc2	equ	0xFDE
 31124                           postdec2	equ	0xFDD
 31125                           plusw2	equ	0xFDB
 31126                           fsr2h	equ	0xFDA
 31127                           fsr2l	equ	0xFD9
 31128                           status	equ	0xFD8
 31129                           
 31130 ;; *************** function _SetCallbackSoftwareTimers *****************
 31131 ;; Defined at:
 31132 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31133 ;; Parameters:    Size  Location     Type
 31134 ;;		None
 31135 ;; Auto vars:     Size  Location     Type
 31136 ;;		None
 31137 ;; Return value:  Size  Location     Type
 31138 ;;                  1    wreg      void 
 31139 ;; Registers used:
 31140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31141 ;; Tracked objects:
 31142 ;;		On entry : F/2
 31143 ;;		On exit  : F/0
 31144 ;;		Unchanged: 0/0
 31145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31150 ;;Total ram usage:        0 bytes
 31151 ;; Hardware stack levels used:    1
 31152 ;; Hardware stack levels required when called:    8
 31153 ;; This function calls:
 31154 ;;		_SwTimerSetCallback
 31155 ;; This function is called by:
 31156 ;;		_LORAWAN_Init
 31157 ;; This function uses a non-reentrant model
 31158 ;;
 31159                           
 31160                           	psect	text160
 31161  005574                     __ptext160:
 31162                           	opt stack 0
 31163  005574                     _SetCallbackSoftwareTimers:
 31164                           	opt stack 21
 31165                           
 31166                           ; BSR set to: 2
 31167                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31168                           
 31169                           ;incstack = 0
 31170  005574  0E2A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31171  005576  0100               	movlb	0	; () banked
 31172  005578  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31173  00557A  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31174  00557C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31175  00557E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31176  005580  0102               	movlb	2	; () banked
 31177  005582  51E2               	movf	(_loRa+226)& (0+255),w,b
 31178  005584  EC2A  F038         	call	_SwTimerSetCallback
 31179                           
 31180                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31181  005588  0E34               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31182  00558A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31183  00558C  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31184  00558E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31185  005590  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31186  005592  0102               	movlb	2	; () banked
 31187  005594  51E3               	movf	(_loRa+227)& (0+255),w,b
 31188  005596  EC2A  F038         	call	_SwTimerSetCallback
 31189                           
 31190                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31191  00559A  0EDE               	movlw	low _LORAWAN_LinkCheckCallback
 31192  00559C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31193  00559E  0E3F               	movlw	high _LORAWAN_LinkCheckCallback
 31194  0055A0  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31195  0055A2  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31196  0055A4  0102               	movlb	2	; () banked
 31197  0055A6  51E7               	movf	(_loRa+231)& (0+255),w,b
 31198  0055A8  EC2A  F038         	call	_SwTimerSetCallback
 31199                           
 31200                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31201  0055AC  0E2A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31202  0055AE  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31203  0055B0  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31204  0055B2  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31205  0055B4  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31206  0055B6  0102               	movlb	2	; () banked
 31207  0055B8  51E4               	movf	(_loRa+228)& (0+255),w,b
 31208  0055BA  EC2A  F038         	call	_SwTimerSetCallback
 31209                           
 31210                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31211  0055BE  0E34               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31212  0055C0  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31213  0055C2  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31214  0055C4  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31215  0055C6  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31216  0055C8  0102               	movlb	2	; () banked
 31217  0055CA  51E5               	movf	(_loRa+229)& (0+255),w,b
 31218  0055CC  EC2A  F038         	call	_SwTimerSetCallback
 31219                           
 31220                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31221  0055D0  0E5C               	movlw	low _AckRetransmissionCallback
 31222  0055D2  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31223  0055D4  0E4A               	movlw	high _AckRetransmissionCallback
 31224  0055D6  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31225  0055D8  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31226  0055DA  0102               	movlb	2	; () banked
 31227  0055DC  51E8               	movf	(_loRa+232)& (0+255),w,b
 31228  0055DE  EC2A  F038         	call	_SwTimerSetCallback
 31229                           
 31230                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31231  0055E2  0EFE               	movlw	low _AutomaticReplyCallback
 31232  0055E4  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31233  0055E6  0E73               	movlw	high _AutomaticReplyCallback
 31234  0055E8  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31235  0055EA  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31236  0055EC  0102               	movlb	2	; () banked
 31237  0055EE  51E6               	movf	(_loRa+230)& (0+255),w,b
 31238  0055F0  EC2A  F038         	call	_SwTimerSetCallback
 31239                           
 31240                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31241  0055F4  0EAC               	movlw	low _UnconfirmedTransmissionCallback
 31242  0055F6  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31243  0055F8  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31244  0055FA  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31245  0055FC  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31246  0055FE  0102               	movlb	2	; () banked
 31247  005600  51EA               	movf	(_loRa+234)& (0+255),w,b
 31248  005602  EC2A  F038         	call	_SwTimerSetCallback
 31249                           
 31250                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31251  005606  0E06               	movlw	low _UpdateJoinSuccessState
 31252  005608  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31253  00560A  0E45               	movlw	high _UpdateJoinSuccessState
 31254  00560C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31255  00560E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31256  005610  0102               	movlb	2	; () banked
 31257  005612  51F3               	movf	(_loRa+243)& (0+255),w,b
 31258  005614  EC2A  F038         	call	_SwTimerSetCallback
 31259                           
 31260                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31261  005618  0E02               	movlw	low _DutyCycleCallback
 31262  00561A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31263  00561C  0E21               	movlw	high _DutyCycleCallback
 31264  00561E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31265  005620  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31266  005622  0102               	movlb	2	; () banked
 31267  005624  51E9               	movf	(_loRa+233)& (0+255),w,b
 31268  005626  EF2A  F038         	goto	_SwTimerSetCallback
 31269  00562A                     __end_of_SetCallbackSoftwareTimers:
 31270                           	opt stack 0
 31271                           tosu	equ	0xFFF
 31272                           tosh	equ	0xFFE
 31273                           tosl	equ	0xFFD
 31274                           pclath	equ	0xFFA
 31275                           tblptru	equ	0xFF8
 31276                           tblptrh	equ	0xFF7
 31277                           tblptrl	equ	0xFF6
 31278                           tablat	equ	0xFF5
 31279                           prodh	equ	0xFF4
 31280                           prodl	equ	0xFF3
 31281                           intcon	equ	0xFF2
 31282                           intcon2	equ	0xFF1
 31283                           intcon3	equ	0xFF0
 31284                           indf0	equ	0xFEF
 31285                           postinc0	equ	0xFEE
 31286                           plusw0	equ	0xFEB
 31287                           fsr0h	equ	0xFEA
 31288                           fsr0l	equ	0xFE9
 31289                           wreg	equ	0xFE8
 31290                           postinc1	equ	0xFE6
 31291                           postdec1	equ	0xFE5
 31292                           plusw1	equ	0xFE3
 31293                           fsr1h	equ	0xFE2
 31294                           fsr1l	equ	0xFE1
 31295                           indf2	equ	0xFDF
 31296                           postinc2	equ	0xFDE
 31297                           postdec2	equ	0xFDD
 31298                           plusw2	equ	0xFDB
 31299                           fsr2h	equ	0xFDA
 31300                           fsr2l	equ	0xFD9
 31301                           status	equ	0xFD8
 31302                           
 31303 ;; *************** function _RADIO_ReadRandom *****************
 31304 ;; Defined at:
 31305 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31306 ;; Parameters:    Size  Location     Type
 31307 ;;		None
 31308 ;; Auto vars:     Size  Location     Type
 31309 ;;  retVal          2   18[BANK0 ] unsigned int 
 31310 ;;  i               1   20[BANK0 ] unsigned char 
 31311 ;; Return value:  Size  Location     Type
 31312 ;;                  2   16[BANK0 ] unsigned int 
 31313 ;; Registers used:
 31314 ;;		wreg, status,2, status,0, cstack
 31315 ;; Tracked objects:
 31316 ;;		On entry : F/1
 31317 ;;		On exit  : 0/0
 31318 ;;		Unchanged: 0/0
 31319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31321 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31323 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31324 ;;Total ram usage:        5 bytes
 31325 ;; Hardware stack levels used:    1
 31326 ;; Hardware stack levels required when called:   11
 31327 ;; This function calls:
 31328 ;;		_RADIO_RegisterRead
 31329 ;;		_RADIO_RegisterWrite
 31330 ;;		_RADIO_WriteMode
 31331 ;;		_SystemBlockingWaitMs
 31332 ;; This function is called by:
 31333 ;;		_LORAWAN_Init
 31334 ;; This function uses a non-reentrant model
 31335 ;;
 31336                           
 31337                           	psect	text161
 31338  005EA4                     __ptext161:
 31339                           	opt stack 0
 31340  005EA4                     _RADIO_ReadRandom:
 31341                           	opt stack 18
 31342                           
 31343                           ; BSR set to: 1
 31344                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31345                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31346                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31347                           
 31348                           ; BSR set to: 0
 31349                           ;incstack = 0
 31350  005EA4  0100               	movlb	0	; () banked
 31351  005EA6  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31352  005EA8  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31353                           
 31354                           ; BSR set to: 0
 31355                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31356  005EAA  0E01               	movlw	1
 31357  005EAC  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31358  005EAE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31359  005EB0  0E00               	movlw	0
 31360  005EB2  EC5F  F028         	call	_RADIO_WriteMode
 31361                           
 31362                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31363  005EB6  0100               	movlb	0	; () banked
 31364  005EB8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31365  005EBA  0E11               	movlw	17
 31366  005EBC  EC2C  F03A         	call	_RADIO_RegisterWrite
 31367                           
 31368                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31369  005EC0  0E01               	movlw	1
 31370  005EC2  0100               	movlb	0	; () banked
 31371  005EC4  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31372  005EC6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31373  005EC8  0E05               	movlw	5
 31374  005ECA  EC5F  F028         	call	_RADIO_WriteMode
 31375                           
 31376                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31377  005ECE  0100               	movlb	0	; () banked
 31378  005ED0  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31379  005ED2                     l15283:
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;radio_driver_SX1276.c: 1377: {
 31383                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31384  005ED2  0E01               	movlw	1
 31385  005ED4  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31386  005ED6  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31387  005ED8  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31388  005EDA  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31389  005EDC  ECC9  F038         	call	_SystemBlockingWaitMs	;wreg free
 31390                           
 31391                           ; BSR set to: 0
 31392                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31393  005EE0  90D8               	bcf	status,0,c
 31394  005EE2  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31395  005EE4  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31396                           
 31397                           ; BSR set to: 0
 31398                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31399  005EE6  0E2C               	movlw	44
 31400  005EE8  EC55  F039         	call	_RADIO_RegisterRead
 31401  005EEC  0B01               	andlw	1
 31402  005EEE  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31403  005EF0  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31404                           
 31405                           ; BSR set to: 0
 31406  005EF2  0E0F               	movlw	15
 31407  005EF4  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31408  005EF6  D7ED               	goto	l15283
 31409                           
 31410                           ; BSR set to: 0
 31411                           ;radio_driver_SX1276.c: 1381: }
 31412                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31413  005EF8  0E01               	movlw	1
 31414  005EFA  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31415  005EFC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31416  005EFE  0E00               	movlw	0
 31417  005F00  EC5F  F028         	call	_RADIO_WriteMode
 31418                           
 31419                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31420  005F04  0100               	movlb	0	; () banked
 31421  005F06  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31422  005F08  0E12               	movlw	18
 31423  005F0A  EC2C  F03A         	call	_RADIO_RegisterWrite
 31424                           
 31425                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31426  005F0E  0100               	movlb	0	; () banked
 31427  005F10  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31428  005F12  0E11               	movlw	17
 31429  005F14  EC2C  F03A         	call	_RADIO_RegisterWrite
 31430                           
 31431                           ;radio_driver_SX1276.c: 1389: return retVal;
 31432  005F18  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31433  005F1C  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31434  005F20  0012               	return		;funcret
 31435  005F22                     __end_of_RADIO_ReadRandom:
 31436                           	opt stack 0
 31437                           tosu	equ	0xFFF
 31438                           tosh	equ	0xFFE
 31439                           tosl	equ	0xFFD
 31440                           pclath	equ	0xFFA
 31441                           tblptru	equ	0xFF8
 31442                           tblptrh	equ	0xFF7
 31443                           tblptrl	equ	0xFF6
 31444                           tablat	equ	0xFF5
 31445                           prodh	equ	0xFF4
 31446                           prodl	equ	0xFF3
 31447                           intcon	equ	0xFF2
 31448                           intcon2	equ	0xFF1
 31449                           intcon3	equ	0xFF0
 31450                           indf0	equ	0xFEF
 31451                           postinc0	equ	0xFEE
 31452                           plusw0	equ	0xFEB
 31453                           fsr0h	equ	0xFEA
 31454                           fsr0l	equ	0xFE9
 31455                           wreg	equ	0xFE8
 31456                           postinc1	equ	0xFE6
 31457                           postdec1	equ	0xFE5
 31458                           plusw1	equ	0xFE3
 31459                           fsr1h	equ	0xFE2
 31460                           fsr1l	equ	0xFE1
 31461                           indf2	equ	0xFDF
 31462                           postinc2	equ	0xFDE
 31463                           postdec2	equ	0xFDD
 31464                           plusw2	equ	0xFDB
 31465                           fsr2h	equ	0xFDA
 31466                           fsr2l	equ	0xFD9
 31467                           status	equ	0xFD8
 31468                           
 31469 ;; *************** function _LORAWAN_Reset *****************
 31470 ;; Defined at:
 31471 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31472 ;; Parameters:    Size  Location     Type
 31473 ;;  ismBandNew      1    wreg     enum E8047
 31474 ;; Auto vars:     Size  Location     Type
 31475 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 31476 ;; Return value:  Size  Location     Type
 31477 ;;                  1    wreg      void 
 31478 ;; Registers used:
 31479 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31480 ;; Tracked objects:
 31481 ;;		On entry : 0/1
 31482 ;;		On exit  : D/0
 31483 ;;		Unchanged: 0/0
 31484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31488 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31489 ;;Total ram usage:        1 bytes
 31490 ;; Hardware stack levels used:    1
 31491 ;; Hardware stack levels required when called:   12
 31492 ;; This function calls:
 31493 ;;		_InitDefault433Channels
 31494 ;;		_InitDefault868Channels
 31495 ;;		_LORAWAN_LinkCheckConfigure
 31496 ;;		_RADIO_Init
 31497 ;;		_RADIO_SetLoRaSyncWord
 31498 ;;		_StopAllSoftwareTimers
 31499 ;;		_UpdateMinMaxChDataRate
 31500 ;;		_memset
 31501 ;; This function is called by:
 31502 ;;		_LORAWAN_Init
 31503 ;; This function uses a non-reentrant model
 31504 ;;
 31505                           
 31506                           	psect	text162
 31507  003E80                     __ptext162:
 31508                           	opt stack 0
 31509  003E80                     _LORAWAN_Reset:
 31510                           	opt stack 17
 31511                           
 31512                           ;incstack = 0
 31513                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31514  003E80  0100               	movlb	0	; () banked
 31515  003E82  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31516                           
 31517                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31518  003E84  0102               	movlb	2	; () banked
 31519  003E86  05F0               	decf	(_loRa+240)& (0+255),w,b
 31520  003E88  E102               	bnz	l15303
 31521                           
 31522                           ; BSR set to: 2
 31523                           ;lorawan_eu.c: 151: {
 31524                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31525  003E8A  ECF6  F034         	call	_StopAllSoftwareTimers	;wreg free
 31526  003E8E                     l15303:
 31527                           
 31528                           ;lorawan_eu.c: 153: }
 31529                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31530  003E8E  0E34               	movlw	52
 31531  003E90  0102               	movlb	2	; () banked
 31532  003E92  6FF4               	movwf	(_loRa+244)& (0+255),b
 31533                           
 31534                           ; BSR set to: 2
 31535                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31536  003E94  51F4               	movf	(_loRa+244)& (0+255),w,b
 31537  003E96  EC04  F03C         	call	_RADIO_SetLoRaSyncWord
 31538                           
 31539                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31540  003E9A  0102               	movlb	2	; () banked
 31541  003E9C  6B02               	clrf	(_loRa+2)& (0+255),b
 31542  003E9E  6B03               	clrf	(_loRa+3)& (0+255),b
 31543  003EA0  6B04               	clrf	(_loRa+4)& (0+255),b
 31544  003EA2  6B05               	clrf	(_loRa+5)& (0+255),b
 31545                           
 31546                           ; BSR set to: 2
 31547                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31548  003EA4  69DD               	setf	(_loRa+221)& (0+255),b
 31549                           
 31550                           ; BSR set to: 2
 31551                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31552  003EA6  6BDE               	clrf	(_loRa+222)& (0+255),b
 31553                           
 31554                           ; BSR set to: 2
 31555                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31556  003EA8  6BC8               	clrf	(_loRa+200)& (0+255),b
 31557  003EAA  6BC9               	clrf	(_loRa+201)& (0+255),b
 31558  003EAC  6BCA               	clrf	(_loRa+202)& (0+255),b
 31559  003EAE  6BCB               	clrf	(_loRa+203)& (0+255),b
 31560                           
 31561                           ; BSR set to: 2
 31562                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31563  003EB0  6BD4               	clrf	(_loRa+212)& (0+255),b
 31564  003EB2  6BD5               	clrf	(_loRa+213)& (0+255),b
 31565                           
 31566                           ; BSR set to: 2
 31567                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31568  003EB4  6B0A               	clrf	(_loRa+10)& (0+255),b
 31569  003EB6  6B0B               	clrf	(_loRa+11)& (0+255),b
 31570  003EB8  6B0C               	clrf	(_loRa+12)& (0+255),b
 31571  003EBA  6B0D               	clrf	(_loRa+13)& (0+255),b
 31572                           
 31573                           ; BSR set to: 2
 31574                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31575  003EBC  6B06               	clrf	(_loRa+6)& (0+255),b
 31576  003EBE  6B07               	clrf	(_loRa+7)& (0+255),b
 31577  003EC0  6B08               	clrf	(_loRa+8)& (0+255),b
 31578  003EC2  6B09               	clrf	(_loRa+9)& (0+255),b
 31579                           
 31580                           ; BSR set to: 2
 31581                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31582  003EC4  6BD2               	clrf	(_loRa+210)& (0+255),b
 31583  003EC6  6BD3               	clrf	(_loRa+211)& (0+255),b
 31584                           
 31585                           ; BSR set to: 2
 31586                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31587  003EC8  6BDC               	clrf	(_loRa+220)& (0+255),b
 31588  003ECA  0E01               	movlw	1
 31589  003ECC  6FDB               	movwf	(_loRa+219)& (0+255),b
 31590                           
 31591                           ; BSR set to: 2
 31592                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31593  003ECE  6BD0               	clrf	(_loRa+208)& (0+255),b
 31594  003ED0  6BD1               	clrf	(_loRa+209)& (0+255),b
 31595                           
 31596                           ; BSR set to: 2
 31597                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31598  003ED2  6BEE               	clrf	(_loRa+238)& (0+255),b
 31599                           
 31600                           ; BSR set to: 2
 31601                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31602  003ED4  6BEF               	clrf	(_loRa+239)& (0+255),b
 31603                           
 31604                           ; BSR set to: 2
 31605                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31606  003ED6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31607  003ED8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31608  003EDA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31609  003EDC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31610                           
 31611                           ; BSR set to: 2
 31612                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31613  003EDE  9503               	bcf	(_loRa+3)& (0+255),2,b
 31614                           
 31615                           ; BSR set to: 2
 31616                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31617  003EE0  6B02               	clrf	(_loRa+2)& (0+255),b
 31618  003EE2  6B03               	clrf	(_loRa+3)& (0+255),b
 31619  003EE4  6B04               	clrf	(_loRa+4)& (0+255),b
 31620  003EE6  6B05               	clrf	(_loRa+5)& (0+255),b
 31621                           
 31622                           ; BSR set to: 2
 31623                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31624  003EE8  6B00               	clrf	_loRa& (0+255),b
 31625  003EEA  6B01               	clrf	(_loRa+1)& (0+255),b
 31626                           
 31627                           ; BSR set to: 2
 31628                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31629  003EEC  0E07               	movlw	7
 31630  003EEE  6FD7               	movwf	(_loRa+215)& (0+255),b
 31631                           
 31632                           ; BSR set to: 2
 31633                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31634  003EF0  6BD6               	clrf	(_loRa+214)& (0+255),b
 31635                           
 31636                           ; BSR set to: 2
 31637                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31638  003EF2  0E01               	movlw	1
 31639  003EF4  6FD9               	movwf	(_loRa+217)& (0+255),b
 31640                           
 31641                           ; BSR set to: 2
 31642                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31643  003EF6  6FD8               	movwf	(_loRa+216)& (0+255),b
 31644                           
 31645                           ; BSR set to: 2
 31646                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31647  003EF8  69E0               	setf	(_loRa+224)& (0+255),b
 31648                           
 31649                           ; BSR set to: 2
 31650                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31651  003EFA  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31652                           
 31653                           ; BSR set to: 2
 31654                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31655  003EFE  6B12               	clrf	(_loRa+18)& (0+255),b
 31656                           
 31657                           ; BSR set to: 2
 31658                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31659  003F00  0E10               	movlw	16
 31660  003F02  6FED               	movwf	(_loRa+237)& (0+255),b
 31661                           
 31662                           ; BSR set to: 2
 31663                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31664  003F04  0100               	movlb	0	; () banked
 31665  003F06  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31666  003F08  E11A               	bnz	l15365
 31667                           
 31668                           ; BSR set to: 0
 31669                           ;lorawan_eu.c: 193: {
 31670                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31671  003F0A  0EFF               	movlw	low (_radioBuffer+16)
 31672  003F0C  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31673  003F0E  0E05               	movlw	high (_radioBuffer+16)
 31674  003F10  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31675  003F12  0EA0               	movlw	160
 31676  003F14  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31677  003F16  0E27               	movlw	39
 31678  003F18  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31679  003F1A  0EBE               	movlw	190
 31680  003F1C  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31681  003F1E  0E33               	movlw	51
 31682  003F20  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31683  003F22  EC36  F01C         	call	_RADIO_Init	;wreg free
 31684                           
 31685                           ; BSR set to: 1
 31686                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31687  003F26  ECBC  F031         	call	_InitDefault868Channels	;wreg free
 31688                           
 31689                           ; BSR set to: 0
 31690                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31691  003F2A  0102               	movlb	2	; () banked
 31692  003F2C  6B1C               	clrf	(_loRa+28)& (0+255),b
 31693                           
 31694                           ; BSR set to: 2
 31695                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31696  003F2E  0E08               	movlw	8
 31697  003F30  6F18               	movwf	(_loRa+24)& (0+255),b
 31698  003F32  0EE6               	movlw	230
 31699  003F34  6F19               	movwf	(_loRa+25)& (0+255),b
 31700  003F36  0ED3               	movlw	211
 31701  003F38  6F1A               	movwf	(_loRa+26)& (0+255),b
 31702  003F3A  0E33               	movlw	51
 31703  003F3C  D019               	goto	L20
 31704  003F3E                     l15365:
 31705                           
 31706                           ; BSR set to: 0
 31707                           ;lorawan_eu.c: 201: else
 31708                           ;lorawan_eu.c: 202: {
 31709                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31710  003F3E  0EFF               	movlw	low (_radioBuffer+16)
 31711  003F40  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31712  003F42  0E05               	movlw	high (_radioBuffer+16)
 31713  003F44  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31714  003F46  0E20               	movlw	32
 31715  003F48  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31716  003F4A  0EA2               	movlw	162
 31717  003F4C  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31718  003F4E  0ED3               	movlw	211
 31719  003F50  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31720  003F52  0E19               	movlw	25
 31721  003F54  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31722  003F56  EC36  F01C         	call	_RADIO_Init	;wreg free
 31723                           
 31724                           ; BSR set to: 1
 31725                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31726  003F5A  ECEF  F031         	call	_InitDefault433Channels	;wreg free
 31727                           
 31728                           ; BSR set to: 0
 31729                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31730  003F5E  0102               	movlb	2	; () banked
 31731  003F60  6B1C               	clrf	(_loRa+28)& (0+255),b
 31732                           
 31733                           ; BSR set to: 2
 31734                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31735  003F62  0E28               	movlw	40
 31736  003F64  6F18               	movwf	(_loRa+24)& (0+255),b
 31737  003F66  0E76               	movlw	118
 31738  003F68  6F19               	movwf	(_loRa+25)& (0+255),b
 31739  003F6A  0EE8               	movlw	232
 31740  003F6C  6F1A               	movwf	(_loRa+26)& (0+255),b
 31741  003F6E  0E19               	movlw	25
 31742  003F70                     L20:
 31743  003F70  6F1B               	movwf	(_loRa+27)& (0+255),b
 31744                           
 31745                           ; BSR set to: 2
 31746                           ;lorawan_eu.c: 209: }
 31747                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31748  003F72  0E01               	movlw	1
 31749  003F74  6FE1               	movwf	(_loRa+225)& (0+255),b
 31750                           
 31751                           ; BSR set to: 2
 31752                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31753  003F76  6BDF               	clrf	(_loRa+223)& (0+255),b
 31754                           
 31755                           ; BSR set to: 2
 31756                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31757  003F78  EC6F  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31758                           
 31759                           ; BSR set to: 0
 31760                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31761  003F7C  0102               	movlb	2	; () banked
 31762  003F7E  6BA5               	clrf	(_loRa+165)& (0+255),b
 31763  003F80  6BA6               	clrf	(_loRa+166)& (0+255),b
 31764                           
 31765                           ; BSR set to: 2
 31766                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31767  003F82  0E1D               	movlw	low (_loRa+29)
 31768  003F84  0100               	movlb	0	; () banked
 31769  003F86  6F64               	movwf	memset@p1& (0+255),b
 31770  003F88  0E02               	movlw	high (_loRa+29)
 31771  003F8A  6F65               	movwf	(memset@p1+1)& (0+255),b
 31772  003F8C  6B67               	clrf	(memset@c+1)& (0+255),b
 31773  003F8E  6B66               	clrf	memset@c& (0+255),b
 31774  003F90  6B69               	clrf	(memset@n+1)& (0+255),b
 31775  003F92  0E69               	movlw	105
 31776  003F94  6F68               	movwf	memset@n& (0+255),b
 31777  003F96  ECDE  F038         	call	_memset	;wreg free
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31781  003F9A  0E03               	movlw	3
 31782  003F9C  0102               	movlb	2	; () banked
 31783  003F9E  6F95               	movwf	(_loRa+149)& (0+255),b
 31784  003FA0  0EE8               	movlw	232
 31785  003FA2  6F94               	movwf	(_loRa+148)& (0+255),b
 31786                           
 31787                           ; BSR set to: 2
 31788                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31789  003FA4  0E07               	movlw	7
 31790  003FA6  6F97               	movwf	(_loRa+151)& (0+255),b
 31791  003FA8  0ED0               	movlw	208
 31792  003FAA  6F96               	movwf	(_loRa+150)& (0+255),b
 31793                           
 31794                           ; BSR set to: 2
 31795                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31796  003FAC  0E13               	movlw	19
 31797  003FAE  6F99               	movwf	(_loRa+153)& (0+255),b
 31798  003FB0  0E88               	movlw	136
 31799  003FB2  6F98               	movwf	(_loRa+152)& (0+255),b
 31800                           
 31801                           ; BSR set to: 2
 31802                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31803  003FB4  0E17               	movlw	23
 31804  003FB6  6F9B               	movwf	(_loRa+155)& (0+255),b
 31805  003FB8  0E70               	movlw	112
 31806  003FBA  6F9A               	movwf	(_loRa+154)& (0+255),b
 31807                           
 31808                           ; BSR set to: 2
 31809                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 31810  003FBC  0E07               	movlw	7
 31811  003FBE  6FA1               	movwf	(_loRa+161)& (0+255),b
 31812  003FC0  0ED0               	movlw	208
 31813  003FC2  6FA0               	movwf	(_loRa+160)& (0+255),b
 31814                           
 31815                           ; BSR set to: 2
 31816                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 31817  003FC4  0E20               	movlw	32
 31818  003FC6  6FA3               	movwf	(_loRa+163)& (0+255),b
 31819                           
 31820                           ; BSR set to: 2
 31821                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 31822  003FC8  0E40               	movlw	64
 31823  003FCA  6FA2               	movwf	(_loRa+162)& (0+255),b
 31824                           
 31825                           ; BSR set to: 2
 31826                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 31827  003FCC  6F9D               	movwf	(_loRa+157)& (0+255),b
 31828  003FCE  6B9C               	clrf	(_loRa+156)& (0+255),b
 31829                           
 31830                           ; BSR set to: 2
 31831                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 31832  003FD0  6F9F               	movwf	(_loRa+159)& (0+255),b
 31833  003FD2  6B9E               	clrf	(_loRa+158)& (0+255),b
 31834                           
 31835                           ; BSR set to: 2
 31836                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 31837  003FD4  0100               	movlb	0	; () banked
 31838  003FD6  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 31839  003FD8  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 31840  003FDA  EF68  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 31841  003FDE                     __end_of_LORAWAN_Reset:
 31842                           	opt stack 0
 31843                           tosu	equ	0xFFF
 31844                           tosh	equ	0xFFE
 31845                           tosl	equ	0xFFD
 31846                           pclath	equ	0xFFA
 31847                           tblptru	equ	0xFF8
 31848                           tblptrh	equ	0xFF7
 31849                           tblptrl	equ	0xFF6
 31850                           tablat	equ	0xFF5
 31851                           prodh	equ	0xFF4
 31852                           prodl	equ	0xFF3
 31853                           intcon	equ	0xFF2
 31854                           intcon2	equ	0xFF1
 31855                           intcon3	equ	0xFF0
 31856                           indf0	equ	0xFEF
 31857                           postinc0	equ	0xFEE
 31858                           plusw0	equ	0xFEB
 31859                           fsr0h	equ	0xFEA
 31860                           fsr0l	equ	0xFE9
 31861                           wreg	equ	0xFE8
 31862                           postinc1	equ	0xFE6
 31863                           postdec1	equ	0xFE5
 31864                           plusw1	equ	0xFE3
 31865                           fsr1h	equ	0xFE2
 31866                           fsr1l	equ	0xFE1
 31867                           indf2	equ	0xFDF
 31868                           postinc2	equ	0xFDE
 31869                           postdec2	equ	0xFDD
 31870                           plusw2	equ	0xFDB
 31871                           fsr2h	equ	0xFDA
 31872                           fsr2l	equ	0xFD9
 31873                           status	equ	0xFD8
 31874                           
 31875 ;; *************** function _UpdateMinMaxChDataRate *****************
 31876 ;; Defined at:
 31877 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31878 ;; Parameters:    Size  Location     Type
 31879 ;;		None
 31880 ;; Auto vars:     Size  Location     Type
 31881 ;;  i               1    5[BANK0 ] unsigned char 
 31882 ;; Return value:  Size  Location     Type
 31883 ;;                  1    wreg      void 
 31884 ;; Registers used:
 31885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31886 ;; Tracked objects:
 31887 ;;		On entry : F/2
 31888 ;;		On exit  : F/0
 31889 ;;		Unchanged: 0/0
 31890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31895 ;;Total ram usage:        2 bytes
 31896 ;; Hardware stack levels used:    1
 31897 ;; Hardware stack levels required when called:    7
 31898 ;; This function calls:
 31899 ;;		Nothing
 31900 ;; This function is called by:
 31901 ;;		_LORAWAN_Reset
 31902 ;; This function uses a non-reentrant model
 31903 ;;
 31904                           
 31905                           	psect	text163
 31906  0056DE                     __ptext163:
 31907                           	opt stack 0
 31908  0056DE                     _UpdateMinMaxChDataRate:
 31909                           	opt stack 21
 31910                           
 31911                           ; BSR set to: 2
 31912                           ;lorawan.c: 1065: uint8_t i;
 31913                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 31914                           
 31915                           ;incstack = 0
 31916  0056DE  0E07               	movlw	7
 31917  0056E0  6FEB               	movwf	(_loRa+235)& (0+255),b
 31918                           
 31919                           ; BSR set to: 2
 31920                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 31921  0056E2  6BEC               	clrf	(_loRa+236)& (0+255),b
 31922                           
 31923                           ; BSR set to: 2
 31924                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 31925  0056E4  0100               	movlb	0	; () banked
 31926  0056E6  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 31927  0056E8  D04E               	goto	l10927
 31928  0056EA                     l10915:
 31929                           
 31930                           ; BSR set to: 0
 31931                           ;lorawan.c: 1072: {
 31932                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 31933  0056EA  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31934  0056EC  0D0E               	mullw	14
 31935  0056EE  0E05               	movlw	low (_Channels+5)
 31936  0056F0  24F3               	addwf	prodl,w,c
 31937  0056F2  6ED9               	movwf	fsr2l,c
 31938  0056F4  0E04               	movlw	high (_Channels+5)
 31939  0056F6  20F4               	addwfc	prodh,w,c
 31940  0056F8  6EDA               	movwf	fsr2h,c
 31941  0056FA  50DF               	movf	223,w,c
 31942  0056FC  0B0F               	andlw	15
 31943  0056FE  0100               	movlb	0	; () banked
 31944  005700  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 31945  005702  0102               	movlb	2	; () banked
 31946  005704  51EB               	movf	(_loRa+235)& (0+255),w,b
 31947  005706  0100               	movlb	0	; () banked
 31948  005708  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 31949  00570A  E216               	bc	l2095
 31950                           
 31951                           ; BSR set to: 0
 31952  00570C  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31953  00570E  0D0E               	mullw	14
 31954  005710  0E04               	movlw	low (_Channels+4)
 31955  005712  24F3               	addwf	prodl,w,c
 31956  005714  6ED9               	movwf	fsr2l,c
 31957  005716  0E04               	movlw	high (_Channels+4)
 31958  005718  20F4               	addwfc	prodh,w,c
 31959  00571A  6EDA               	movwf	fsr2h,c
 31960  00571C  04DE               	decf	postinc2,w,c
 31961  00571E  E10C               	bnz	l2095
 31962                           
 31963                           ; BSR set to: 0
 31964                           ;lorawan.c: 1074: {
 31965                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 31966  005720  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31967  005722  0D0E               	mullw	14
 31968  005724  0E05               	movlw	low (_Channels+5)
 31969  005726  24F3               	addwf	prodl,w,c
 31970  005728  6ED9               	movwf	fsr2l,c
 31971  00572A  0E04               	movlw	high (_Channels+5)
 31972  00572C  20F4               	addwfc	prodh,w,c
 31973  00572E  6EDA               	movwf	fsr2h,c
 31974  005730  50DF               	movf	223,w,c
 31975  005732  0B0F               	andlw	15
 31976  005734  0102               	movlb	2	; () banked
 31977  005736  6FEB               	movwf	(_loRa+235)& (0+255),b
 31978  005738                     l2095:
 31979                           
 31980                           ;lorawan.c: 1076: }
 31981                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 31982  005738  0100               	movlb	0	; () banked
 31983  00573A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31984  00573C  0D0E               	mullw	14
 31985  00573E  0E05               	movlw	low (_Channels+5)
 31986  005740  24F3               	addwf	prodl,w,c
 31987  005742  6ED9               	movwf	fsr2l,c
 31988  005744  0E04               	movlw	high (_Channels+5)
 31989  005746  20F4               	addwfc	prodh,w,c
 31990  005748  6EDA               	movwf	fsr2h,c
 31991  00574A  38DF               	swapf	223,w,c
 31992  00574C  0B0F               	andlw	15
 31993  00574E  0102               	movlb	2	; () banked
 31994  005750  61EC               	cpfslt	(_loRa+236)& (0+255),b
 31995  005752  D017               	goto	l10925
 31996                           
 31997                           ; BSR set to: 2
 31998  005754  0100               	movlb	0	; () banked
 31999  005756  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32000  005758  0D0E               	mullw	14
 32001  00575A  0E04               	movlw	low (_Channels+4)
 32002  00575C  24F3               	addwf	prodl,w,c
 32003  00575E  6ED9               	movwf	fsr2l,c
 32004  005760  0E04               	movlw	high (_Channels+4)
 32005  005762  20F4               	addwfc	prodh,w,c
 32006  005764  6EDA               	movwf	fsr2h,c
 32007  005766  04DE               	decf	postinc2,w,c
 32008  005768  E10C               	bnz	l10925
 32009                           
 32010                           ; BSR set to: 0
 32011                           ;lorawan.c: 1078: {
 32012                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32013  00576A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32014  00576C  0D0E               	mullw	14
 32015  00576E  0E05               	movlw	low (_Channels+5)
 32016  005770  24F3               	addwf	prodl,w,c
 32017  005772  6ED9               	movwf	fsr2l,c
 32018  005774  0E04               	movlw	high (_Channels+5)
 32019  005776  20F4               	addwfc	prodh,w,c
 32020  005778  6EDA               	movwf	fsr2h,c
 32021  00577A  38DF               	swapf	223,w,c
 32022  00577C  0B0F               	andlw	15
 32023  00577E  0102               	movlb	2	; () banked
 32024  005780  6FEC               	movwf	(_loRa+236)& (0+255),b
 32025  005782                     l10925:
 32026  005782  0100               	movlb	0	; () banked
 32027  005784  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32028  005786                     l10927:
 32029                           
 32030                           ; BSR set to: 0
 32031  005786  0102               	movlb	2	; () banked
 32032  005788  51ED               	movf	(_loRa+237)& (0+255),w,b
 32033  00578A  0100               	movlb	0	; () banked
 32034  00578C  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32035  00578E  E3AD               	bnc	l10915
 32036                           
 32037                           ; BSR set to: 0
 32038  005790  0012               	return		;funcret
 32039  005792                     __end_of_UpdateMinMaxChDataRate:
 32040                           	opt stack 0
 32041                           tosu	equ	0xFFF
 32042                           tosh	equ	0xFFE
 32043                           tosl	equ	0xFFD
 32044                           pclath	equ	0xFFA
 32045                           tblptru	equ	0xFF8
 32046                           tblptrh	equ	0xFF7
 32047                           tblptrl	equ	0xFF6
 32048                           tablat	equ	0xFF5
 32049                           prodh	equ	0xFF4
 32050                           prodl	equ	0xFF3
 32051                           intcon	equ	0xFF2
 32052                           intcon2	equ	0xFF1
 32053                           intcon3	equ	0xFF0
 32054                           indf0	equ	0xFEF
 32055                           postinc0	equ	0xFEE
 32056                           plusw0	equ	0xFEB
 32057                           fsr0h	equ	0xFEA
 32058                           fsr0l	equ	0xFE9
 32059                           wreg	equ	0xFE8
 32060                           postinc1	equ	0xFE6
 32061                           postdec1	equ	0xFE5
 32062                           plusw1	equ	0xFE3
 32063                           fsr1h	equ	0xFE2
 32064                           fsr1l	equ	0xFE1
 32065                           indf2	equ	0xFDF
 32066                           postinc2	equ	0xFDE
 32067                           postdec2	equ	0xFDD
 32068                           plusw2	equ	0xFDB
 32069                           fsr2h	equ	0xFDA
 32070                           fsr2l	equ	0xFD9
 32071                           status	equ	0xFD8
 32072                           
 32073 ;; *************** function _StopAllSoftwareTimers *****************
 32074 ;; Defined at:
 32075 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32076 ;; Parameters:    Size  Location     Type
 32077 ;;		None
 32078 ;; Auto vars:     Size  Location     Type
 32079 ;;		None
 32080 ;; Return value:  Size  Location     Type
 32081 ;;                  1    wreg      void 
 32082 ;; Registers used:
 32083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32084 ;; Tracked objects:
 32085 ;;		On entry : F/2
 32086 ;;		On exit  : F/0
 32087 ;;		Unchanged: 0/0
 32088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32093 ;;Total ram usage:        0 bytes
 32094 ;; Hardware stack levels used:    1
 32095 ;; Hardware stack levels required when called:    8
 32096 ;; This function calls:
 32097 ;;		_SwTimerStop
 32098 ;; This function is called by:
 32099 ;;		_LORAWAN_Init
 32100 ;;		_LORAWAN_Reset
 32101 ;; This function uses a non-reentrant model
 32102 ;;
 32103                           
 32104                           	psect	text164
 32105  0069EC                     __ptext164:
 32106                           	opt stack 0
 32107  0069EC                     _StopAllSoftwareTimers:
 32108                           	opt stack 21
 32109                           
 32110                           ; BSR set to: 2
 32111                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 32112                           
 32113                           ; BSR set to: 0
 32114                           ;incstack = 0
 32115  0069EC  51E2               	movf	(_loRa+226)& (0+255),w,b
 32116  0069EE  EC59  F03A         	call	_SwTimerStop
 32117                           
 32118                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 32119  0069F2  0102               	movlb	2	; () banked
 32120  0069F4  51E3               	movf	(_loRa+227)& (0+255),w,b
 32121  0069F6  EC59  F03A         	call	_SwTimerStop
 32122                           
 32123                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 32124  0069FA  0102               	movlb	2	; () banked
 32125  0069FC  51E7               	movf	(_loRa+231)& (0+255),w,b
 32126  0069FE  EC59  F03A         	call	_SwTimerStop
 32127                           
 32128                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 32129  006A02  0102               	movlb	2	; () banked
 32130  006A04  51E4               	movf	(_loRa+228)& (0+255),w,b
 32131  006A06  EC59  F03A         	call	_SwTimerStop
 32132                           
 32133                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 32134  006A0A  0102               	movlb	2	; () banked
 32135  006A0C  51E5               	movf	(_loRa+229)& (0+255),w,b
 32136  006A0E  EC59  F03A         	call	_SwTimerStop
 32137                           
 32138                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 32139  006A12  0102               	movlb	2	; () banked
 32140  006A14  51E8               	movf	(_loRa+232)& (0+255),w,b
 32141  006A16  EC59  F03A         	call	_SwTimerStop
 32142                           
 32143                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 32144  006A1A  0102               	movlb	2	; () banked
 32145  006A1C  51E6               	movf	(_loRa+230)& (0+255),w,b
 32146  006A1E  EC59  F03A         	call	_SwTimerStop
 32147                           
 32148                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32149  006A22  0102               	movlb	2	; () banked
 32150  006A24  51EA               	movf	(_loRa+234)& (0+255),w,b
 32151  006A26  EC59  F03A         	call	_SwTimerStop
 32152                           
 32153                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 32154  006A2A  0102               	movlb	2	; () banked
 32155  006A2C  51F3               	movf	(_loRa+243)& (0+255),w,b
 32156  006A2E  EC59  F03A         	call	_SwTimerStop
 32157                           
 32158                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 32159  006A32  0102               	movlb	2	; () banked
 32160  006A34  51E9               	movf	(_loRa+233)& (0+255),w,b
 32161  006A36  EF59  F03A         	goto	_SwTimerStop
 32162  006A3A                     __end_of_StopAllSoftwareTimers:
 32163                           	opt stack 0
 32164                           tosu	equ	0xFFF
 32165                           tosh	equ	0xFFE
 32166                           tosl	equ	0xFFD
 32167                           pclath	equ	0xFFA
 32168                           tblptru	equ	0xFF8
 32169                           tblptrh	equ	0xFF7
 32170                           tblptrl	equ	0xFF6
 32171                           tablat	equ	0xFF5
 32172                           prodh	equ	0xFF4
 32173                           prodl	equ	0xFF3
 32174                           intcon	equ	0xFF2
 32175                           intcon2	equ	0xFF1
 32176                           intcon3	equ	0xFF0
 32177                           indf0	equ	0xFEF
 32178                           postinc0	equ	0xFEE
 32179                           plusw0	equ	0xFEB
 32180                           fsr0h	equ	0xFEA
 32181                           fsr0l	equ	0xFE9
 32182                           wreg	equ	0xFE8
 32183                           postinc1	equ	0xFE6
 32184                           postdec1	equ	0xFE5
 32185                           plusw1	equ	0xFE3
 32186                           fsr1h	equ	0xFE2
 32187                           fsr1l	equ	0xFE1
 32188                           indf2	equ	0xFDF
 32189                           postinc2	equ	0xFDE
 32190                           postdec2	equ	0xFDD
 32191                           plusw2	equ	0xFDB
 32192                           fsr2h	equ	0xFDA
 32193                           fsr2l	equ	0xFD9
 32194                           status	equ	0xFD8
 32195                           
 32196 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32197 ;; Defined at:
 32198 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32199 ;; Parameters:    Size  Location     Type
 32200 ;;  syncWord        1    wreg     unsigned char 
 32201 ;; Auto vars:     Size  Location     Type
 32202 ;;  syncWord        1    4[BANK0 ] unsigned char 
 32203 ;; Return value:  Size  Location     Type
 32204 ;;                  1    wreg      void 
 32205 ;; Registers used:
 32206 ;;		wreg
 32207 ;; Tracked objects:
 32208 ;;		On entry : F/2
 32209 ;;		On exit  : 0/0
 32210 ;;		Unchanged: 0/0
 32211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32216 ;;Total ram usage:        1 bytes
 32217 ;; Hardware stack levels used:    1
 32218 ;; Hardware stack levels required when called:    7
 32219 ;; This function calls:
 32220 ;;		Nothing
 32221 ;; This function is called by:
 32222 ;;		_LORAWAN_Reset
 32223 ;;		_ConfigureRadio
 32224 ;; This function uses a non-reentrant model
 32225 ;;
 32226                           
 32227                           	psect	text165
 32228  007808                     __ptext165:
 32229                           	opt stack 0
 32230  007808                     _RADIO_SetLoRaSyncWord:
 32231                           	opt stack 18
 32232                           
 32233                           ; BSR set to: 0
 32234                           ;incstack = 0
 32235                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32236  007808  0100               	movlb	0	; () banked
 32237  00780A  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32238                           
 32239                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32240  00780C  C064  F18C         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32241  007810  0012               	return		;funcret
 32242  007812                     __end_of_RADIO_SetLoRaSyncWord:
 32243                           	opt stack 0
 32244                           tosu	equ	0xFFF
 32245                           tosh	equ	0xFFE
 32246                           tosl	equ	0xFFD
 32247                           pclath	equ	0xFFA
 32248                           tblptru	equ	0xFF8
 32249                           tblptrh	equ	0xFF7
 32250                           tblptrl	equ	0xFF6
 32251                           tablat	equ	0xFF5
 32252                           prodh	equ	0xFF4
 32253                           prodl	equ	0xFF3
 32254                           intcon	equ	0xFF2
 32255                           intcon2	equ	0xFF1
 32256                           intcon3	equ	0xFF0
 32257                           indf0	equ	0xFEF
 32258                           postinc0	equ	0xFEE
 32259                           plusw0	equ	0xFEB
 32260                           fsr0h	equ	0xFEA
 32261                           fsr0l	equ	0xFE9
 32262                           wreg	equ	0xFE8
 32263                           postinc1	equ	0xFE6
 32264                           postdec1	equ	0xFE5
 32265                           plusw1	equ	0xFE3
 32266                           fsr1h	equ	0xFE2
 32267                           fsr1l	equ	0xFE1
 32268                           indf2	equ	0xFDF
 32269                           postinc2	equ	0xFDE
 32270                           postdec2	equ	0xFDD
 32271                           plusw2	equ	0xFDB
 32272                           fsr2h	equ	0xFDA
 32273                           fsr2l	equ	0xFD9
 32274                           status	equ	0xFD8
 32275                           
 32276 ;; *************** function _RADIO_Init *****************
 32277 ;; Defined at:
 32278 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32279 ;; Parameters:    Size  Location     Type
 32280 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32281 ;;		 -> radioBuffer(271), 
 32282 ;;  frequency       4   31[BANK0 ] unsigned long 
 32283 ;; Auto vars:     Size  Location     Type
 32284 ;;		None
 32285 ;; Return value:  Size  Location     Type
 32286 ;;                  1    wreg      void 
 32287 ;; Registers used:
 32288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32289 ;; Tracked objects:
 32290 ;;		On entry : F/0
 32291 ;;		On exit  : F/1
 32292 ;;		Unchanged: 0/0
 32293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32294 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32296 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32297 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32298 ;;Total ram usage:        7 bytes
 32299 ;; Hardware stack levels used:    1
 32300 ;; Hardware stack levels required when called:   11
 32301 ;; This function calls:
 32302 ;;		_RADIO_RegisterRead
 32303 ;;		_RADIO_RegisterWrite
 32304 ;;		_RADIO_Reset
 32305 ;;		_RADIO_WriteFrequency
 32306 ;;		_RADIO_WriteMode
 32307 ;;		_SwTimerCreate
 32308 ;;		_SwTimerSetCallback
 32309 ;;		_SwTimerStop
 32310 ;; This function is called by:
 32311 ;;		_LORAWAN_Init
 32312 ;;		_LORAWAN_Reset
 32313 ;; This function uses a non-reentrant model
 32314 ;;
 32315                           
 32316                           	psect	text166
 32317  00386C                     __ptext166:
 32318                           	opt stack 0
 32319  00386C                     _RADIO_Init:
 32320                           	opt stack 18
 32321                           
 32322                           ; BSR set to: 0
 32323                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32324                           
 32325                           ;incstack = 0
 32326  00386C  C07F  F17E         	movff	RADIO_Init@frequency,_RadioConfiguration
 32327  003870  C080  F17F         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32328  003874  C081  F180         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32329  003878  C082  F181         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32330                           
 32331                           ; BSR set to: 0
 32332                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32333  00387C  0EA8               	movlw	168
 32334  00387E  0101               	movlb	1	; () banked
 32335  003880  6F82               	movwf	(_RadioConfiguration+4)& (0+255),b
 32336  003882  0E61               	movlw	97
 32337  003884  6F83               	movwf	(_RadioConfiguration+5)& (0+255),b
 32338  003886  6B84               	clrf	(_RadioConfiguration+6)& (0+255),b
 32339  003888  6B85               	clrf	(_RadioConfiguration+7)& (0+255),b
 32340                           
 32341                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32342  00388A  0E50               	movlw	80
 32343  00388C  6F86               	movwf	(_RadioConfiguration+8)& (0+255),b
 32344  00388E  0EC3               	movlw	195
 32345  003890  6F87               	movwf	(_RadioConfiguration+9)& (0+255),b
 32346  003892  6B88               	clrf	(_RadioConfiguration+10)& (0+255),b
 32347  003894  6B89               	clrf	(_RadioConfiguration+11)& (0+255),b
 32348                           
 32349                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32350  003896  0E01               	movlw	1
 32351  003898  6F96               	movwf	(_RadioConfiguration+24)& (0+255),b
 32352                           
 32353                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32354  00389A  0E07               	movlw	7
 32355  00389C  6F98               	movwf	(_RadioConfiguration+26)& (0+255),b
 32356                           
 32357                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32358  00389E  0E01               	movlw	1
 32359  0038A0  6F99               	movwf	(_RadioConfiguration+27)& (0+255),b
 32360                           
 32361                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32362  0038A2  6F9F               	movwf	(_RadioConfiguration+33)& (0+255),b
 32363                           
 32364                           ; BSR set to: 1
 32365                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32366  0038A4  6BA0               	clrf	(_RadioConfiguration+34)& (0+255),b
 32367                           
 32368                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32369  0038A6  6B8B               	clrf	(_RadioConfiguration+13)& (0+255),b
 32370  0038A8  0E08               	movlw	8
 32371  0038AA  6F8A               	movwf	(_RadioConfiguration+12)& (0+255),b
 32372                           
 32373                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32374  0038AC  0E0C               	movlw	12
 32375  0038AE  6F97               	movwf	(_RadioConfiguration+25)& (0+255),b
 32376                           
 32377                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32378  0038B0  0E01               	movlw	1
 32379  0038B2  6F9A               	movwf	(_RadioConfiguration+28)& (0+255),b
 32380                           
 32381                           ; BSR set to: 1
 32382                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32383  0038B4  6B9B               	clrf	(_RadioConfiguration+29)& (0+255),b
 32384                           
 32385                           ; BSR set to: 1
 32386                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32387  0038B6  6B9E               	clrf	(_RadioConfiguration+32)& (0+255),b
 32388                           
 32389                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32390  0038B8  0EC1               	movlw	193
 32391  0038BA  6F8D               	movwf	(_RadioConfiguration+15)& (0+255),b
 32392                           
 32393                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32394  0038BC  0E94               	movlw	148
 32395  0038BE  6F8E               	movwf	(_RadioConfiguration+16)& (0+255),b
 32396                           
 32397                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32398  0038C0  0EC1               	movlw	193
 32399  0038C2  6F8F               	movwf	(_RadioConfiguration+17)& (0+255),b
 32400                           
 32401                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32402  0038C4  0E03               	movlw	3
 32403  0038C6  6F95               	movwf	(_RadioConfiguration+23)& (0+255),b
 32404                           
 32405                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32406  0038C8  0E34               	movlw	52
 32407  0038CA  6F8C               	movwf	(_RadioConfiguration+14)& (0+255),b
 32408                           
 32409                           ; BSR set to: 1
 32410                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32411  0038CC  6BA1               	clrf	(_RadioConfiguration+35)& (0+255),b
 32412                           
 32413                           ; BSR set to: 1
 32414                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32415  0038CE  6BA2               	clrf	(_RadioConfiguration+36)& (0+255),b
 32416                           
 32417                           ; BSR set to: 1
 32418                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32419  0038D0  C07D  F1A3         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32420  0038D4  C07E  F1A4         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32421                           
 32422                           ; BSR set to: 1
 32423                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32424  0038D8  6B9C               	clrf	(_RadioConfiguration+30)& (0+255),b
 32425  0038DA  6B9D               	clrf	(_RadioConfiguration+31)& (0+255),b
 32426                           
 32427                           ; BSR set to: 1
 32428                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32429  0038DC  0E80               	movlw	128
 32430  0038DE  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
 32431                           
 32432                           ; BSR set to: 1
 32433                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32434  0038E0  0E98               	movlw	152
 32435  0038E2  6FA8               	movwf	(_RadioConfiguration+42)& (0+255),b
 32436  0038E4  0E3A               	movlw	58
 32437  0038E6  6FA9               	movwf	(_RadioConfiguration+43)& (0+255),b
 32438  0038E8  6BAA               	clrf	(_RadioConfiguration+44)& (0+255),b
 32439  0038EA  6BAB               	clrf	(_RadioConfiguration+45)& (0+255),b
 32440                           
 32441                           ; BSR set to: 1
 32442                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32443  0038EC  0E02               	movlw	2
 32444  0038EE  6FB1               	movwf	(_RadioConfiguration+51)& (0+255),b
 32445                           
 32446                           ; BSR set to: 1
 32447                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32448  0038F0  0E0B               	movlw	11
 32449  0038F2  6FB2               	movwf	(_RadioConfiguration+52)& (0+255),b
 32450                           
 32451                           ; BSR set to: 1
 32452                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32453  0038F4  0E12               	movlw	18
 32454  0038F6  6FB3               	movwf	(_RadioConfiguration+53)& (0+255),b
 32455                           
 32456                           ; BSR set to: 1
 32457                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32458  0038F8  6BAD               	clrf	(_RadioConfiguration+47)& (0+255),b
 32459  0038FA  6BAE               	clrf	(_RadioConfiguration+48)& (0+255),b
 32460                           
 32461                           ; BSR set to: 1
 32462                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32463  0038FC  51AC               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32464  0038FE  E123               	bnz	l14733
 32465                           
 32466                           ; BSR set to: 1
 32467                           ;radio_driver_SX1276.c: 457: {
 32468                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32469  003900  ECEE  F030         	call	_SwTimerCreate	;wreg free
 32470  003904  0101               	movlb	1	; () banked
 32471  003906  6FA5               	movwf	(_RadioConfiguration+39)& (0+255),b
 32472                           
 32473                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32474  003908  ECEE  F030         	call	_SwTimerCreate	;wreg free
 32475  00390C  0101               	movlb	1	; () banked
 32476  00390E  6FA6               	movwf	(_RadioConfiguration+40)& (0+255),b
 32477                           
 32478                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32479  003910  ECEE  F030         	call	_SwTimerCreate	;wreg free
 32480  003914  0101               	movlb	1	; () banked
 32481  003916  6FA7               	movwf	(_RadioConfiguration+41)& (0+255),b
 32482                           
 32483                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32484  003918  0E52               	movlw	low _RADIO_RxFSKTimeout
 32485  00391A  0100               	movlb	0	; () banked
 32486  00391C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32487  00391E  0E6F               	movlw	high _RADIO_RxFSKTimeout
 32488  003920  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32489  003922  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32490  003924  0101               	movlb	1	; () banked
 32491  003926  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32492  003928  EC2A  F038         	call	_SwTimerSetCallback
 32493                           
 32494                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32495  00392C  0E40               	movlw	low _RADIO_WatchdogTimeout
 32496  00392E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32497  003930  0E6C               	movlw	high _RADIO_WatchdogTimeout
 32498  003932  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32499  003934  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32500  003936  0101               	movlb	1	; () banked
 32501  003938  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32502  00393A  EC2A  F038         	call	_SwTimerSetCallback
 32503                           
 32504                           ; BSR set to: 0
 32505                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32506  00393E  0E01               	movlw	1
 32507  003940  0101               	movlb	1	; () banked
 32508  003942  6FAC               	movwf	(_RadioConfiguration+46)& (0+255),b
 32509                           
 32510                           ;radio_driver_SX1276.c: 466: }
 32511  003944  D00B               	goto	l14735
 32512  003946                     l14733:
 32513                           
 32514                           ; BSR set to: 1
 32515                           ;radio_driver_SX1276.c: 467: else
 32516                           ;radio_driver_SX1276.c: 468: {
 32517                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32518  003946  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32519  003948  EC59  F03A         	call	_SwTimerStop
 32520                           
 32521                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32522  00394C  0101               	movlb	1	; () banked
 32523  00394E  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32524  003950  EC59  F03A         	call	_SwTimerStop
 32525                           
 32526                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32527  003954  0101               	movlb	1	; () banked
 32528  003956  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32529  003958  EC59  F03A         	call	_SwTimerStop
 32530  00395C                     l14735:
 32531                           
 32532                           ;radio_driver_SX1276.c: 472: }
 32533                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32534  00395C  ECDE  F037         	call	_RADIO_Reset	;wreg free
 32535                           
 32536                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32537  003960  0E00               	movlw	0
 32538  003962  0100               	movlb	0	; () banked
 32539  003964  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32540  003966  0E01               	movlw	1
 32541  003968  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32542  00396A  EC5F  F028         	call	_RADIO_WriteMode
 32543                           
 32544                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32545  00396E  C17E  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32546  003972  C17F  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32547  003976  C180  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32548  00397A  C181  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32549  00397E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
 32550                           
 32551                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32552  003982  0E42               	movlw	66
 32553  003984  0100               	movlb	0	; () banked
 32554  003986  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32555  003988  0E3B               	movlw	59
 32556  00398A  EC2C  F03A         	call	_RADIO_RegisterWrite
 32557  00398E                     l14743:
 32558  00398E  0E3B               	movlw	59
 32559  003990  EC55  F039         	call	_RADIO_RegisterRead
 32560  003994  6F83               	movwf	??_RADIO_Init& (0+255),b
 32561  003996  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32562  003998  D7FA               	goto	l14743
 32563                           
 32564                           ; BSR set to: 0
 32565                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32566  00399A  0E23               	movlw	35
 32567  00399C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32568  00399E  0E0C               	movlw	12
 32569  0039A0  EC2C  F03A         	call	_RADIO_RegisterWrite
 32570                           
 32571                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32572  0039A4  0E1E               	movlw	30
 32573  0039A6  0100               	movlb	0	; () banked
 32574  0039A8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32575  0039AA  0E0D               	movlw	13
 32576  0039AC  EC2C  F03A         	call	_RADIO_RegisterWrite
 32577                           
 32578                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32579  0039B0  0EAA               	movlw	170
 32580  0039B2  0100               	movlb	0	; () banked
 32581  0039B4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32582  0039B6  0E1F               	movlw	31
 32583  0039B8  EC2C  F03A         	call	_RADIO_RegisterWrite
 32584                           
 32585                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32586  0039BC  0E8F               	movlw	143
 32587  0039BE  0100               	movlb	0	; () banked
 32588  0039C0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32589  0039C2  0E35               	movlw	53
 32590  0039C4  EC2C  F03A         	call	_RADIO_RegisterWrite
 32591                           
 32592                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32593  0039C8  0100               	movlb	0	; () banked
 32594  0039CA  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32595  0039CC  0E32               	movlw	50
 32596  0039CE  EC2C  F03A         	call	_RADIO_RegisterWrite
 32597                           
 32598                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32599  0039D2  0E40               	movlw	64
 32600  0039D4  0100               	movlb	0	; () banked
 32601  0039D6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32602  0039D8  0E31               	movlw	49
 32603  0039DA  EC2C  F03A         	call	_RADIO_RegisterWrite
 32604                           
 32605                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32606  0039DE  0E01               	movlw	1
 32607  0039E0  0100               	movlb	0	; () banked
 32608  0039E2  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32609  0039E4  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32610  0039E6  0E00               	movlw	0
 32611  0039E8  EC5F  F028         	call	_RADIO_WriteMode
 32612                           
 32613                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32614  0039EC  0100               	movlb	0	; () banked
 32615  0039EE  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32616  0039F0  0E23               	movlw	35
 32617  0039F2  EC2C  F03A         	call	_RADIO_RegisterWrite
 32618                           
 32619                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32620  0039F6  0E42               	movlw	66
 32621  0039F8  EC55  F039         	call	_RADIO_RegisterRead
 32622  0039FC  0101               	movlb	1	; () banked
 32623  0039FE  6FAF               	movwf	(_RadioConfiguration+49)& (0+255),b
 32624                           
 32625                           ; BSR set to: 1
 32626  003A00  0012               	return		;funcret
 32627  003A02                     __end_of_RADIO_Init:
 32628                           	opt stack 0
 32629                           tosu	equ	0xFFF
 32630                           tosh	equ	0xFFE
 32631                           tosl	equ	0xFFD
 32632                           pclath	equ	0xFFA
 32633                           tblptru	equ	0xFF8
 32634                           tblptrh	equ	0xFF7
 32635                           tblptrl	equ	0xFF6
 32636                           tablat	equ	0xFF5
 32637                           prodh	equ	0xFF4
 32638                           prodl	equ	0xFF3
 32639                           intcon	equ	0xFF2
 32640                           intcon2	equ	0xFF1
 32641                           intcon3	equ	0xFF0
 32642                           indf0	equ	0xFEF
 32643                           postinc0	equ	0xFEE
 32644                           plusw0	equ	0xFEB
 32645                           fsr0h	equ	0xFEA
 32646                           fsr0l	equ	0xFE9
 32647                           wreg	equ	0xFE8
 32648                           postinc1	equ	0xFE6
 32649                           postdec1	equ	0xFE5
 32650                           plusw1	equ	0xFE3
 32651                           fsr1h	equ	0xFE2
 32652                           fsr1l	equ	0xFE1
 32653                           indf2	equ	0xFDF
 32654                           postinc2	equ	0xFDE
 32655                           postdec2	equ	0xFDD
 32656                           plusw2	equ	0xFDB
 32657                           fsr2h	equ	0xFDA
 32658                           fsr2l	equ	0xFD9
 32659                           status	equ	0xFD8
 32660                           
 32661 ;; *************** function _SwTimerSetCallback *****************
 32662 ;; Defined at:
 32663 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32664 ;; Parameters:    Size  Location     Type
 32665 ;;  timerId         1    wreg     unsigned char 
 32666 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32667 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32668 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32669 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32670 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32671 ;; Auto vars:     Size  Location     Type
 32672 ;;  timerId         1    7[BANK0 ] unsigned char 
 32673 ;; Return value:  Size  Location     Type
 32674 ;;                  1    wreg      void 
 32675 ;; Registers used:
 32676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32677 ;; Tracked objects:
 32678 ;;		On entry : C/2
 32679 ;;		On exit  : F/0
 32680 ;;		Unchanged: 0/0
 32681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32682 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32685 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32686 ;;Total ram usage:        4 bytes
 32687 ;; Hardware stack levels used:    1
 32688 ;; Hardware stack levels required when called:    7
 32689 ;; This function calls:
 32690 ;;		Nothing
 32691 ;; This function is called by:
 32692 ;;		_RADIO_Init
 32693 ;;		_SetCallbackSoftwareTimers
 32694 ;; This function uses a non-reentrant model
 32695 ;;
 32696                           
 32697                           	psect	text167
 32698  007054                     __ptext167:
 32699                           	opt stack 0
 32700  007054                     _SwTimerSetCallback:
 32701                           	opt stack 21
 32702                           
 32703                           ; BSR set to: 1
 32704                           ;incstack = 0
 32705                           ;SwTimerSetCallback@timerId stored from wreg
 32706  007054  0100               	movlb	0	; () banked
 32707  007056  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32708                           
 32709                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32710  007058  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32711  00705A  0D08               	mullw	8
 32712  00705C  0E06               	movlw	low (_swTimers+6)
 32713  00705E  24F3               	addwf	prodl,w,c
 32714  007060  6ED9               	movwf	fsr2l,c
 32715  007062  0E03               	movlw	high (_swTimers+6)
 32716  007064  20F4               	addwfc	prodh,w,c
 32717  007066  6EDA               	movwf	fsr2h,c
 32718  007068  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32719  00706C  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32720                           
 32721                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32722  007070  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32723  007072  0D08               	mullw	8
 32724  007074  0E05               	movlw	low (_swTimers+5)
 32725  007076  24F3               	addwf	prodl,w,c
 32726  007078  6ED9               	movwf	fsr2l,c
 32727  00707A  0E03               	movlw	high (_swTimers+5)
 32728  00707C  20F4               	addwfc	prodh,w,c
 32729  00707E  6EDA               	movwf	fsr2h,c
 32730  007080  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32731                           
 32732                           ; BSR set to: 0
 32733  007084  0012               	return		;funcret
 32734  007086                     __end_of_SwTimerSetCallback:
 32735                           	opt stack 0
 32736                           tosu	equ	0xFFF
 32737                           tosh	equ	0xFFE
 32738                           tosl	equ	0xFFD
 32739                           pclath	equ	0xFFA
 32740                           tblptru	equ	0xFF8
 32741                           tblptrh	equ	0xFF7
 32742                           tblptrl	equ	0xFF6
 32743                           tablat	equ	0xFF5
 32744                           prodh	equ	0xFF4
 32745                           prodl	equ	0xFF3
 32746                           intcon	equ	0xFF2
 32747                           intcon2	equ	0xFF1
 32748                           intcon3	equ	0xFF0
 32749                           indf0	equ	0xFEF
 32750                           postinc0	equ	0xFEE
 32751                           plusw0	equ	0xFEB
 32752                           fsr0h	equ	0xFEA
 32753                           fsr0l	equ	0xFE9
 32754                           wreg	equ	0xFE8
 32755                           postinc1	equ	0xFE6
 32756                           postdec1	equ	0xFE5
 32757                           plusw1	equ	0xFE3
 32758                           fsr1h	equ	0xFE2
 32759                           fsr1l	equ	0xFE1
 32760                           indf2	equ	0xFDF
 32761                           postinc2	equ	0xFDE
 32762                           postdec2	equ	0xFDD
 32763                           plusw2	equ	0xFDB
 32764                           fsr2h	equ	0xFDA
 32765                           fsr2l	equ	0xFD9
 32766                           status	equ	0xFD8
 32767                           
 32768 ;; *************** function _RADIO_WriteMode *****************
 32769 ;; Defined at:
 32770 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32771 ;; Parameters:    Size  Location     Type
 32772 ;;  newMode         1    wreg     enum E8483
 32773 ;;  newModulatio    1    9[BANK0 ] enum E7751
 32774 ;;  blocking        1   10[BANK0 ] unsigned char 
 32775 ;; Auto vars:     Size  Location     Type
 32776 ;;  newMode         1   14[BANK0 ] enum E8483
 32777 ;;  opMode          1   15[BANK0 ] unsigned char 
 32778 ;;  currentMode     1   13[BANK0 ] enum E8483
 32779 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32780 ;;  currentModul    1   11[BANK0 ] enum E7751
 32781 ;; Return value:  Size  Location     Type
 32782 ;;                  1    wreg      void 
 32783 ;; Registers used:
 32784 ;;		wreg, status,2, status,0, cstack
 32785 ;; Tracked objects:
 32786 ;;		On entry : F/0
 32787 ;;		On exit  : 0/0
 32788 ;;		Unchanged: 0/0
 32789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32791 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32793 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32794 ;;Total ram usage:        7 bytes
 32795 ;; Hardware stack levels used:    1
 32796 ;; Hardware stack levels required when called:   10
 32797 ;; This function calls:
 32798 ;;		_HALDIO5PinValue
 32799 ;;		_RADIO_RegisterRead
 32800 ;;		_RADIO_RegisterWrite
 32801 ;;		_SystemBlockingWaitMs
 32802 ;; This function is called by:
 32803 ;;		_RADIO_Init
 32804 ;;		_RADIO_WriteConfiguration
 32805 ;;		_RADIO_Transmit
 32806 ;;		_RADIO_ReceiveStart
 32807 ;;		_RADIO_ReceiveStop
 32808 ;;		_RADIO_RxDone
 32809 ;;		_RADIO_FSKPayloadReady
 32810 ;;		_RADIO_RxTimeout
 32811 ;;		_RADIO_TxDone
 32812 ;;		_RADIO_FSKPacketSent
 32813 ;;		_RADIO_ReadRandom
 32814 ;;		_RADIO_RxFSKTimeout
 32815 ;;		_RADIO_WatchdogTimeout
 32816 ;; This function uses a non-reentrant model
 32817 ;;
 32818                           
 32819                           	psect	text168
 32820  0050BE                     __ptext168:
 32821                           	opt stack 0
 32822  0050BE                     _RADIO_WriteMode:
 32823                           	opt stack 17
 32824                           
 32825                           ; BSR set to: 0
 32826                           ;incstack = 0
 32827                           ;RADIO_WriteMode@newMode stored from wreg
 32828  0050BE  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 32829                           
 32830                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 32831                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 32832                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 32833                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 32834                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 32835                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 32836  0050C0  0100               	movlb	0	; () banked
 32837  0050C2  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32838  0050C4  E108               	bnz	l12163
 32839                           
 32840                           ; BSR set to: 0
 32841  0050C6  0E06               	movlw	6
 32842  0050C8  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32843  0050CA  B4D8               	btfsc	status,2,c
 32844  0050CC  0012               	return	
 32845                           
 32846                           ; BSR set to: 0
 32847  0050CE  0E07               	movlw	7
 32848  0050D0  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32849  0050D2  E101               	bnz	l12163
 32850  0050D4  0012               	return	
 32851  0050D6                     l12163:
 32852                           
 32853                           ; BSR set to: 0
 32854                           ;radio_driver_SX1276.c: 159: }
 32855                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 32856  0050D6  0E07               	movlw	7
 32857  0050D8  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 32858                           
 32859                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 32860  0050DA  0E01               	movlw	1
 32861  0050DC  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 32862                           
 32863                           ; BSR set to: 0
 32864                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 32865  0050DE  EC55  F039         	call	_RADIO_RegisterRead
 32866  0050E2  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32867                           
 32868                           ; BSR set to: 0
 32869                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 32870  0050E4  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 32871  0050E6  D003               	goto	l382
 32872                           
 32873                           ; BSR set to: 0
 32874                           ;radio_driver_SX1276.c: 168: {
 32875                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 32876  0050E8  0E01               	movlw	1
 32877  0050EA  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 32878                           
 32879                           ;radio_driver_SX1276.c: 170: }
 32880  0050EC  D001               	goto	l12171
 32881  0050EE                     l382:
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;radio_driver_SX1276.c: 171: else
 32885                           ;radio_driver_SX1276.c: 172: {
 32886                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 32887  0050EE  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 32888  0050F0                     l12171:
 32889                           
 32890                           ; BSR set to: 0
 32891                           ;radio_driver_SX1276.c: 174: }
 32892                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 32893  0050F0  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32894  0050F2  0B07               	andlw	7
 32895  0050F4  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 32896                           
 32897                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 32898  0050F6  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 32899  0050F8  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 32900  0050FA  E018               	bz	l12187
 32901                           
 32902                           ; BSR set to: 0
 32903                           ;radio_driver_SX1276.c: 181: {
 32904                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 32905  0050FC  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32906  0050FE  E008               	bz	l12179
 32907                           
 32908                           ; BSR set to: 0
 32909                           ;radio_driver_SX1276.c: 184: {
 32910                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 32911  005100  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32912  005102  0BF8               	andlw	248
 32913  005104  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32914  005106  0E01               	movlw	1
 32915  005108  EC2C  F03A         	call	_RADIO_RegisterWrite
 32916                           
 32917                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 32918  00510C  0100               	movlb	0	; () banked
 32919  00510E  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 32920  005110                     l12179:
 32921                           
 32922                           ; BSR set to: 0
 32923                           ;radio_driver_SX1276.c: 188: }
 32924                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 32925  005110  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32926  005112  E103               	bnz	l12183
 32927                           
 32928                           ; BSR set to: 0
 32929                           ;radio_driver_SX1276.c: 191: {
 32930                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 32931  005114  0E78               	movlw	120
 32932  005116  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 32933                           
 32934                           ;radio_driver_SX1276.c: 194: }
 32935  005118  D004               	goto	l12185
 32936  00511A                     l12183:
 32937                           
 32938                           ; BSR set to: 0
 32939                           ;radio_driver_SX1276.c: 195: else
 32940                           ;radio_driver_SX1276.c: 196: {
 32941                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 32942  00511A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32943  00511C  0B78               	andlw	120
 32944  00511E  0980               	iorlw	128
 32945  005120  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32946  005122                     l12185:
 32947                           
 32948                           ; BSR set to: 0
 32949                           ;radio_driver_SX1276.c: 199: }
 32950                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 32951  005122  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 32952  005126  0E01               	movlw	1
 32953  005128  EC2C  F03A         	call	_RADIO_RegisterWrite
 32954  00512C                     l12187:
 32955                           
 32956                           ;radio_driver_SX1276.c: 201: }
 32957                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 32958  00512C  0100               	movlb	0	; () banked
 32959  00512E  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32960  005130  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32961  005132  B4D8               	btfsc	status,2,c
 32962  005134  0012               	return	
 32963                           
 32964                           ; BSR set to: 0
 32965                           ;radio_driver_SX1276.c: 208: {
 32966                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 32967  005136  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 32968  005138  E012               	bz	l12203
 32969                           
 32970                           ; BSR set to: 0
 32971  00513A  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 32972  00513C  E110               	bnz	l12203
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;radio_driver_SX1276.c: 212: {
 32976                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 32977  00513E  0E41               	movlw	65
 32978  005140  EC55  F039         	call	_RADIO_RegisterRead
 32979  005144  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 32980                           
 32981                           ; BSR set to: 0
 32982                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 32983  005146  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32984  005148  E103               	bnz	l12199
 32985                           
 32986                           ; BSR set to: 0
 32987                           ;radio_driver_SX1276.c: 215: {
 32988                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 32989  00514A  0E30               	movlw	48
 32990  00514C  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 32991                           
 32992                           ;radio_driver_SX1276.c: 218: }
 32993  00514E  D002               	goto	l12201
 32994  005150                     l12199:
 32995                           
 32996                           ; BSR set to: 0
 32997                           ;radio_driver_SX1276.c: 219: else
 32998                           ;radio_driver_SX1276.c: 220: {
 32999                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 33000  005150  0ECF               	movlw	207
 33001  005152  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33002  005154                     l12201:
 33003                           
 33004                           ; BSR set to: 0
 33005                           ;radio_driver_SX1276.c: 223: }
 33006                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33007  005154  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33008  005158  0E41               	movlw	65
 33009  00515A  EC2C  F03A         	call	_RADIO_RegisterWrite
 33010  00515E                     l12203:
 33011                           
 33012                           ;radio_driver_SX1276.c: 225: }
 33013                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33014  00515E  0EF8               	movlw	248
 33015  005160  0100               	movlb	0	; () banked
 33016  005162  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33017                           
 33018                           ; BSR set to: 0
 33019                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33020  005164  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33021  005166  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33025  005168  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33026  00516C  0E01               	movlw	1
 33027  00516E  EC2C  F03A         	call	_RADIO_RegisterWrite
 33028                           
 33029                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33030  005172  0100               	movlb	0	; () banked
 33031  005174  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33032  005176  A4D8               	btfss	status,2,c
 33033  005178  0012               	return	
 33034                           
 33035                           ; BSR set to: 0
 33036                           ;radio_driver_SX1276.c: 234: {
 33037                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33038  00517A  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33039  00517C  E005               	bz	l12215
 33040  00517E                     l12213:
 33041  00517E  EC43  F03C         	call	_HALDIO5PinValue	;wreg free
 33042  005182  0900               	iorlw	0
 33043  005184  E0FC               	bz	l12213
 33044  005186  0012               	return	
 33045  005188                     l12215:
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;radio_driver_SX1276.c: 240: else
 33049                           ;radio_driver_SX1276.c: 241: {
 33050                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33051  005188  0E01               	movlw	1
 33052  00518A  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33053  00518C  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33054  00518E  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33055  005190  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33056  005192  EFC9  F038         	goto	_SystemBlockingWaitMs	;wreg free
 33057  005196                     __end_of_RADIO_WriteMode:
 33058                           	opt stack 0
 33059                           tosu	equ	0xFFF
 33060                           tosh	equ	0xFFE
 33061                           tosl	equ	0xFFD
 33062                           pclath	equ	0xFFA
 33063                           tblptru	equ	0xFF8
 33064                           tblptrh	equ	0xFF7
 33065                           tblptrl	equ	0xFF6
 33066                           tablat	equ	0xFF5
 33067                           prodh	equ	0xFF4
 33068                           prodl	equ	0xFF3
 33069                           intcon	equ	0xFF2
 33070                           intcon2	equ	0xFF1
 33071                           intcon3	equ	0xFF0
 33072                           indf0	equ	0xFEF
 33073                           postinc0	equ	0xFEE
 33074                           plusw0	equ	0xFEB
 33075                           fsr0h	equ	0xFEA
 33076                           fsr0l	equ	0xFE9
 33077                           wreg	equ	0xFE8
 33078                           postinc1	equ	0xFE6
 33079                           postdec1	equ	0xFE5
 33080                           plusw1	equ	0xFE3
 33081                           fsr1h	equ	0xFE2
 33082                           fsr1l	equ	0xFE1
 33083                           indf2	equ	0xFDF
 33084                           postinc2	equ	0xFDE
 33085                           postdec2	equ	0xFDD
 33086                           plusw2	equ	0xFDB
 33087                           fsr2h	equ	0xFDA
 33088                           fsr2l	equ	0xFD9
 33089                           status	equ	0xFD8
 33090                           
 33091 ;; *************** function _RADIO_RegisterRead *****************
 33092 ;; Defined at:
 33093 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33094 ;; Parameters:    Size  Location     Type
 33095 ;;  reg             1    wreg     unsigned char 
 33096 ;; Auto vars:     Size  Location     Type
 33097 ;;  reg             1    6[BANK0 ] unsigned char 
 33098 ;;  readValue       1    7[BANK0 ] unsigned char 
 33099 ;; Return value:  Size  Location     Type
 33100 ;;                  1    wreg      unsigned char 
 33101 ;; Registers used:
 33102 ;;		wreg, status,2, status,0, cstack
 33103 ;; Tracked objects:
 33104 ;;		On entry : 0/0
 33105 ;;		On exit  : F/0
 33106 ;;		Unchanged: 0/0
 33107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33112 ;;Total ram usage:        2 bytes
 33113 ;; Hardware stack levels used:    1
 33114 ;; Hardware stack levels required when called:    9
 33115 ;; This function calls:
 33116 ;;		_HALSPICSAssert
 33117 ;;		_HALSPICSDeassert
 33118 ;;		_HALSPISend
 33119 ;; This function is called by:
 33120 ;;		_RADIO_WriteMode
 33121 ;;		_RADIO_WritePower
 33122 ;;		_RADIO_Init
 33123 ;;		_RADIO_WriteConfiguration
 33124 ;;		_RADIO_Transmit
 33125 ;;		_RADIO_RxDone
 33126 ;;		_RADIO_FSKPayloadReady
 33127 ;;		_RADIO_FSKPacketSent
 33128 ;;		_RADIO_FHSSChangeChannel
 33129 ;;		_RADIO_DIO0
 33130 ;;		_RADIO_DIO1
 33131 ;;		_RADIO_DIO2
 33132 ;;		_RADIO_DIO3
 33133 ;;		_RADIO_DIO4
 33134 ;;		_RADIO_DIO5
 33135 ;;		_RADIO_ReadRandom
 33136 ;;		_RADIO_RxFSKTimeout
 33137 ;; This function uses a non-reentrant model
 33138 ;;
 33139                           
 33140                           	psect	text169
 33141  0072AA                     __ptext169:
 33142                           	opt stack 0
 33143  0072AA                     _RADIO_RegisterRead:
 33144                           	opt stack 17
 33145                           
 33146                           ;incstack = 0
 33147                           ;RADIO_RegisterRead@reg stored from wreg
 33148  0072AA  0100               	movlb	0	; () banked
 33149  0072AC  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33150                           
 33151                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33152                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33153  0072AE  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33154                           
 33155                           ; BSR set to: 0
 33156                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33157  0072B0  EC61  F03C         	call	_HALSPICSAssert	;wreg free
 33158                           
 33159                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33160  0072B4  0100               	movlb	0	; () banked
 33161  0072B6  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33162  0072B8  EC09  F03C         	call	_HALSPISend
 33163                           
 33164                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33165  0072BC  0EFF               	movlw	255
 33166  0072BE  EC09  F03C         	call	_HALSPISend
 33167  0072C2  0100               	movlb	0	; () banked
 33168  0072C4  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33169                           
 33170                           ; BSR set to: 0
 33171                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33172  0072C6  EC5F  F03C         	call	_HALSPICSDeassert	;wreg free
 33173                           
 33174                           ;radio_driver_SX1276.c: 142: return readValue;
 33175  0072CA  0100               	movlb	0	; () banked
 33176  0072CC  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33177                           
 33178                           ; BSR set to: 0
 33179  0072CE  0012               	return		;funcret
 33180  0072D0                     __end_of_RADIO_RegisterRead:
 33181                           	opt stack 0
 33182                           tosu	equ	0xFFF
 33183                           tosh	equ	0xFFE
 33184                           tosl	equ	0xFFD
 33185                           pclath	equ	0xFFA
 33186                           tblptru	equ	0xFF8
 33187                           tblptrh	equ	0xFF7
 33188                           tblptrl	equ	0xFF6
 33189                           tablat	equ	0xFF5
 33190                           prodh	equ	0xFF4
 33191                           prodl	equ	0xFF3
 33192                           intcon	equ	0xFF2
 33193                           intcon2	equ	0xFF1
 33194                           intcon3	equ	0xFF0
 33195                           indf0	equ	0xFEF
 33196                           postinc0	equ	0xFEE
 33197                           plusw0	equ	0xFEB
 33198                           fsr0h	equ	0xFEA
 33199                           fsr0l	equ	0xFE9
 33200                           wreg	equ	0xFE8
 33201                           postinc1	equ	0xFE6
 33202                           postdec1	equ	0xFE5
 33203                           plusw1	equ	0xFE3
 33204                           fsr1h	equ	0xFE2
 33205                           fsr1l	equ	0xFE1
 33206                           indf2	equ	0xFDF
 33207                           postinc2	equ	0xFDE
 33208                           postdec2	equ	0xFDD
 33209                           plusw2	equ	0xFDB
 33210                           fsr2h	equ	0xFDA
 33211                           fsr2l	equ	0xFD9
 33212                           status	equ	0xFD8
 33213                           
 33214 ;; *************** function _HALDIO5PinValue *****************
 33215 ;; Defined at:
 33216 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33217 ;; Parameters:    Size  Location     Type
 33218 ;;		None
 33219 ;; Auto vars:     Size  Location     Type
 33220 ;;		None
 33221 ;; Return value:  Size  Location     Type
 33222 ;;                  1    wreg      unsigned char 
 33223 ;; Registers used:
 33224 ;;		wreg
 33225 ;; Tracked objects:
 33226 ;;		On entry : 0/0
 33227 ;;		On exit  : 0/0
 33228 ;;		Unchanged: 0/0
 33229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33234 ;;Total ram usage:        0 bytes
 33235 ;; Hardware stack levels used:    1
 33236 ;; Hardware stack levels required when called:    7
 33237 ;; This function calls:
 33238 ;;		Nothing
 33239 ;; This function is called by:
 33240 ;;		_RADIO_WriteMode
 33241 ;; This function uses a non-reentrant model
 33242 ;;
 33243                           
 33244                           	psect	text170
 33245  007886                     __ptext170:
 33246                           	opt stack 0
 33247  007886                     _HALDIO5PinValue:
 33248                           	opt stack 19
 33249                           
 33250                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33251                           
 33252                           ; BSR set to: 0
 33253                           ;incstack = 0
 33254  007886  B081               	btfsc	3969,0,c	;volatile
 33255  007888  0C01               	retlw	1
 33256  00788A  0C00               	retlw	0	;funcret
 33257  00788C                     __end_of_HALDIO5PinValue:
 33258                           	opt stack 0
 33259                           tosu	equ	0xFFF
 33260                           tosh	equ	0xFFE
 33261                           tosl	equ	0xFFD
 33262                           pclath	equ	0xFFA
 33263                           tblptru	equ	0xFF8
 33264                           tblptrh	equ	0xFF7
 33265                           tblptrl	equ	0xFF6
 33266                           tablat	equ	0xFF5
 33267                           prodh	equ	0xFF4
 33268                           prodl	equ	0xFF3
 33269                           intcon	equ	0xFF2
 33270                           intcon2	equ	0xFF1
 33271                           intcon3	equ	0xFF0
 33272                           indf0	equ	0xFEF
 33273                           postinc0	equ	0xFEE
 33274                           plusw0	equ	0xFEB
 33275                           fsr0h	equ	0xFEA
 33276                           fsr0l	equ	0xFE9
 33277                           wreg	equ	0xFE8
 33278                           postinc1	equ	0xFE6
 33279                           postdec1	equ	0xFE5
 33280                           plusw1	equ	0xFE3
 33281                           fsr1h	equ	0xFE2
 33282                           fsr1l	equ	0xFE1
 33283                           indf2	equ	0xFDF
 33284                           postinc2	equ	0xFDE
 33285                           postdec2	equ	0xFDD
 33286                           plusw2	equ	0xFDB
 33287                           fsr2h	equ	0xFDA
 33288                           fsr2l	equ	0xFD9
 33289                           status	equ	0xFD8
 33290                           
 33291 ;; *************** function _RADIO_WriteFrequency *****************
 33292 ;; Defined at:
 33293 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33294 ;; Parameters:    Size  Location     Type
 33295 ;;  frequency       4   17[BANK0 ] unsigned long 
 33296 ;; Auto vars:     Size  Location     Type
 33297 ;;  num             4   25[BANK0 ] unsigned long 
 33298 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33299 ;; Return value:  Size  Location     Type
 33300 ;;                  1    wreg      void 
 33301 ;; Registers used:
 33302 ;;		wreg, status,2, status,0, cstack
 33303 ;; Tracked objects:
 33304 ;;		On entry : 0/0
 33305 ;;		On exit  : 0/0
 33306 ;;		Unchanged: 0/0
 33307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33308 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33309 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33311 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33312 ;;Total ram usage:       12 bytes
 33313 ;; Hardware stack levels used:    1
 33314 ;; Hardware stack levels required when called:   10
 33315 ;; This function calls:
 33316 ;;		_RADIO_RegisterWrite
 33317 ;;		___lldiv
 33318 ;;		___llmod
 33319 ;; This function is called by:
 33320 ;;		_RADIO_Init
 33321 ;;		_RADIO_WriteConfiguration
 33322 ;;		_RADIO_FHSSChangeChannel
 33323 ;; This function uses a non-reentrant model
 33324 ;;
 33325                           
 33326                           	psect	text171
 33327  004FE2                     __ptext171:
 33328                           	opt stack 0
 33329  004FE2                     _RADIO_WriteFrequency:
 33330                           	opt stack 16
 33331                           
 33332                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33333                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33334                           
 33335                           ;incstack = 0
 33336  004FE2  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33337  004FE6  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33338  004FEA  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33339  004FEE  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33340  004FF2  0E09               	movlw	9
 33341  004FF4  0100               	movlb	0	; () banked
 33342  004FF6  6F68               	movwf	___lldiv@divisor& (0+255),b
 33343  004FF8  0E3D               	movlw	61
 33344  004FFA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33345  004FFC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33346  004FFE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33347  005000  EC0D  F030         	call	___lldiv	;wreg free
 33348  005004  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33349  005008  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33350  00500C  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33351  005010  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33352                           
 33353                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33354  005014  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33355  005018  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33356  00501C  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33357  005020  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33358  005024  0E09               	movlw	9
 33359  005026  6F68               	movwf	___llmod@divisor& (0+255),b
 33360  005028  0E3D               	movlw	61
 33361  00502A  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33362  00502C  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33363  00502E  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33364  005030  ECE8  F032         	call	___llmod	;wreg free
 33365  005034  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33366  005038  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33367  00503C  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33368  005040  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33372  005044  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33373  005048  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33374  00504C  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33375  005050  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33376                           
 33377                           ; BSR set to: 0
 33378                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33379  005052  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33380  005056  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33381  00505A  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33382  00505E  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33383                           
 33384                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33385  005060  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33386  005064  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33387  005068  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33388  00506C  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33389  005070  0E09               	movlw	9
 33390  005072  6F68               	movwf	___lldiv@divisor& (0+255),b
 33391  005074  0E3D               	movlw	61
 33392  005076  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33393  005078  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33394  00507A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33395  00507C  EC0D  F030         	call	___lldiv	;wreg free
 33396  005080  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33397  005084  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33398  005088  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33399  00508C  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33400                           
 33401                           ; BSR set to: 0
 33402                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33403  005090  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33404  005092  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33405  005094  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33406  005096  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33407  005098  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33408  00509A  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33409  00509C  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33410  00509E  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33411                           
 33412                           ; BSR set to: 0
 33413                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33414  0050A0  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33415  0050A4  0E06               	movlw	6
 33416  0050A6  EC2C  F03A         	call	_RADIO_RegisterWrite
 33417                           
 33418                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33419  0050AA  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33420  0050AE  0E07               	movlw	7
 33421  0050B0  EC2C  F03A         	call	_RADIO_RegisterWrite
 33422                           
 33423                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33424  0050B4  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33425  0050B8  0E08               	movlw	8
 33426  0050BA  EF2C  F03A         	goto	_RADIO_RegisterWrite
 33427  0050BE                     __end_of_RADIO_WriteFrequency:
 33428                           	opt stack 0
 33429                           tosu	equ	0xFFF
 33430                           tosh	equ	0xFFE
 33431                           tosl	equ	0xFFD
 33432                           pclath	equ	0xFFA
 33433                           tblptru	equ	0xFF8
 33434                           tblptrh	equ	0xFF7
 33435                           tblptrl	equ	0xFF6
 33436                           tablat	equ	0xFF5
 33437                           prodh	equ	0xFF4
 33438                           prodl	equ	0xFF3
 33439                           intcon	equ	0xFF2
 33440                           intcon2	equ	0xFF1
 33441                           intcon3	equ	0xFF0
 33442                           indf0	equ	0xFEF
 33443                           postinc0	equ	0xFEE
 33444                           plusw0	equ	0xFEB
 33445                           fsr0h	equ	0xFEA
 33446                           fsr0l	equ	0xFE9
 33447                           wreg	equ	0xFE8
 33448                           postinc1	equ	0xFE6
 33449                           postdec1	equ	0xFE5
 33450                           plusw1	equ	0xFE3
 33451                           fsr1h	equ	0xFE2
 33452                           fsr1l	equ	0xFE1
 33453                           indf2	equ	0xFDF
 33454                           postinc2	equ	0xFDE
 33455                           postdec2	equ	0xFDD
 33456                           plusw2	equ	0xFDB
 33457                           fsr2h	equ	0xFDA
 33458                           fsr2l	equ	0xFD9
 33459                           status	equ	0xFD8
 33460                           
 33461 ;; *************** function ___llmod *****************
 33462 ;; Defined at:
 33463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33464 ;; Parameters:    Size  Location     Type
 33465 ;;  dividend        4    4[BANK0 ] unsigned long 
 33466 ;;  divisor         4    8[BANK0 ] unsigned long 
 33467 ;; Auto vars:     Size  Location     Type
 33468 ;;  counter         1   12[BANK0 ] unsigned char 
 33469 ;; Return value:  Size  Location     Type
 33470 ;;                  4    4[BANK0 ] unsigned long 
 33471 ;; Registers used:
 33472 ;;		wreg, status,2, status,0
 33473 ;; Tracked objects:
 33474 ;;		On entry : F/0
 33475 ;;		On exit  : F/0
 33476 ;;		Unchanged: 0/0
 33477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33478 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33481 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33482 ;;Total ram usage:        9 bytes
 33483 ;; Hardware stack levels used:    1
 33484 ;; Hardware stack levels required when called:    7
 33485 ;; This function calls:
 33486 ;;		Nothing
 33487 ;; This function is called by:
 33488 ;;		_RADIO_WriteFrequency
 33489 ;; This function uses a non-reentrant model
 33490 ;;
 33491                           
 33492                           	psect	text172
 33493  0065D0                     __ptext172:
 33494                           	opt stack 0
 33495  0065D0                     ___llmod:
 33496                           	opt stack 18
 33497                           
 33498                           ; BSR set to: 0
 33499                           
 33500                           ;incstack = 0
 33501  0065D0  5168               	movf	___llmod@divisor& (0+255),w,b
 33502  0065D2  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33503  0065D4  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33504  0065D6  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33505  0065D8  E023               	bz	l3111
 33506                           
 33507                           ; BSR set to: 0
 33508  0065DA  0E01               	movlw	1
 33509  0065DC  6F6C               	movwf	___llmod@counter& (0+255),b
 33510  0065DE  D006               	goto	l12115
 33511  0065E0                     l12113:
 33512                           
 33513                           ; BSR set to: 0
 33514  0065E0  90D8               	bcf	status,0,c
 33515  0065E2  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33516  0065E4  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33517  0065E6  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33518  0065E8  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33519  0065EA  2B6C               	incf	___llmod@counter& (0+255),f,b
 33520  0065EC                     l12115:
 33521                           
 33522                           ; BSR set to: 0
 33523  0065EC  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33524  0065EE  D7F8               	goto	l12113
 33525  0065F0                     l12117:
 33526                           
 33527                           ; BSR set to: 0
 33528  0065F0  5168               	movf	___llmod@divisor& (0+255),w,b
 33529  0065F2  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33530  0065F4  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33531  0065F6  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33532  0065F8  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33533  0065FA  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33534  0065FC  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33535  0065FE  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33536  006600  E308               	bnc	l12121
 33537                           
 33538                           ; BSR set to: 0
 33539  006602  5168               	movf	___llmod@divisor& (0+255),w,b
 33540  006604  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33541  006606  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33542  006608  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33543  00660A  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33544  00660C  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33545  00660E  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33546  006610  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33547  006612                     l12121:
 33548                           
 33549                           ; BSR set to: 0
 33550  006612  90D8               	bcf	status,0,c
 33551  006614  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33552  006616  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33553  006618  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33554  00661A  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33555                           
 33556                           ; BSR set to: 0
 33557  00661C  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33558  00661E  D7E8               	goto	l12117
 33559  006620                     l3111:
 33560                           
 33561                           ; BSR set to: 0
 33562  006620  C064  F064         	movff	___llmod@dividend,?___llmod
 33563  006624  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33564  006628  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33565  00662C  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33566                           
 33567                           ; BSR set to: 0
 33568  006630  0012               	return		;funcret
 33569  006632                     __end_of___llmod:
 33570                           	opt stack 0
 33571                           tosu	equ	0xFFF
 33572                           tosh	equ	0xFFE
 33573                           tosl	equ	0xFFD
 33574                           pclath	equ	0xFFA
 33575                           tblptru	equ	0xFF8
 33576                           tblptrh	equ	0xFF7
 33577                           tblptrl	equ	0xFF6
 33578                           tablat	equ	0xFF5
 33579                           prodh	equ	0xFF4
 33580                           prodl	equ	0xFF3
 33581                           intcon	equ	0xFF2
 33582                           intcon2	equ	0xFF1
 33583                           intcon3	equ	0xFF0
 33584                           indf0	equ	0xFEF
 33585                           postinc0	equ	0xFEE
 33586                           plusw0	equ	0xFEB
 33587                           fsr0h	equ	0xFEA
 33588                           fsr0l	equ	0xFE9
 33589                           wreg	equ	0xFE8
 33590                           postinc1	equ	0xFE6
 33591                           postdec1	equ	0xFE5
 33592                           plusw1	equ	0xFE3
 33593                           fsr1h	equ	0xFE2
 33594                           fsr1l	equ	0xFE1
 33595                           indf2	equ	0xFDF
 33596                           postinc2	equ	0xFDE
 33597                           postdec2	equ	0xFDD
 33598                           plusw2	equ	0xFDB
 33599                           fsr2h	equ	0xFDA
 33600                           fsr2l	equ	0xFD9
 33601                           status	equ	0xFD8
 33602                           
 33603 ;; *************** function _RADIO_RegisterWrite *****************
 33604 ;; Defined at:
 33605 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33606 ;; Parameters:    Size  Location     Type
 33607 ;;  reg             1    wreg     unsigned char 
 33608 ;;  value           1    6[BANK0 ] unsigned char 
 33609 ;; Auto vars:     Size  Location     Type
 33610 ;;  reg             1    7[BANK0 ] unsigned char 
 33611 ;; Return value:  Size  Location     Type
 33612 ;;                  1    wreg      void 
 33613 ;; Registers used:
 33614 ;;		wreg, status,2, status,0, cstack
 33615 ;; Tracked objects:
 33616 ;;		On entry : 0/0
 33617 ;;		On exit  : 0/0
 33618 ;;		Unchanged: 0/0
 33619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33620 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33624 ;;Total ram usage:        2 bytes
 33625 ;; Hardware stack levels used:    1
 33626 ;; Hardware stack levels required when called:    9
 33627 ;; This function calls:
 33628 ;;		_HALSPICSAssert
 33629 ;;		_HALSPICSDeassert
 33630 ;;		_HALSPISend
 33631 ;; This function is called by:
 33632 ;;		_RADIO_WriteMode
 33633 ;;		_RADIO_WriteFrequency
 33634 ;;		_RADIO_WriteFSKFrequencyDeviation
 33635 ;;		_RADIO_WriteFSKBitRate
 33636 ;;		_RADIO_WritePower
 33637 ;;		_RADIO_Init
 33638 ;;		_RADIO_WriteConfiguration
 33639 ;;		_RADIO_Transmit
 33640 ;;		_RADIO_ReceiveStart
 33641 ;;		_RADIO_RxDone
 33642 ;;		_RADIO_RxTimeout
 33643 ;;		_RADIO_TxDone
 33644 ;;		_RADIO_UnhandledInterrupt
 33645 ;;		_RADIO_FHSSChangeChannel
 33646 ;;		_RADIO_ReadRandom
 33647 ;; This function uses a non-reentrant model
 33648 ;;
 33649                           
 33650                           	psect	text173
 33651  007458                     __ptext173:
 33652                           	opt stack 0
 33653  007458                     _RADIO_RegisterWrite:
 33654                           	opt stack 17
 33655                           
 33656                           ; BSR set to: 0
 33657                           ;incstack = 0
 33658                           ;RADIO_RegisterWrite@reg stored from wreg
 33659  007458  0100               	movlb	0	; () banked
 33660  00745A  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33661                           
 33662                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33663  00745C  EC61  F03C         	call	_HALSPICSAssert	;wreg free
 33664                           
 33665                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33666  007460  0100               	movlb	0	; () banked
 33667  007462  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33668  007464  0980               	iorlw	128
 33669  007466  EC09  F03C         	call	_HALSPISend
 33670                           
 33671                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33672  00746A  0100               	movlb	0	; () banked
 33673  00746C  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33674  00746E  EC09  F03C         	call	_HALSPISend
 33675                           
 33676                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33677  007472  EF5F  F03C         	goto	_HALSPICSDeassert	;wreg free
 33678  007476                     __end_of_RADIO_RegisterWrite:
 33679                           	opt stack 0
 33680                           tosu	equ	0xFFF
 33681                           tosh	equ	0xFFE
 33682                           tosl	equ	0xFFD
 33683                           pclath	equ	0xFFA
 33684                           tblptru	equ	0xFF8
 33685                           tblptrh	equ	0xFF7
 33686                           tblptrl	equ	0xFF6
 33687                           tablat	equ	0xFF5
 33688                           prodh	equ	0xFF4
 33689                           prodl	equ	0xFF3
 33690                           intcon	equ	0xFF2
 33691                           intcon2	equ	0xFF1
 33692                           intcon3	equ	0xFF0
 33693                           indf0	equ	0xFEF
 33694                           postinc0	equ	0xFEE
 33695                           plusw0	equ	0xFEB
 33696                           fsr0h	equ	0xFEA
 33697                           fsr0l	equ	0xFE9
 33698                           wreg	equ	0xFE8
 33699                           postinc1	equ	0xFE6
 33700                           postdec1	equ	0xFE5
 33701                           plusw1	equ	0xFE3
 33702                           fsr1h	equ	0xFE2
 33703                           fsr1l	equ	0xFE1
 33704                           indf2	equ	0xFDF
 33705                           postinc2	equ	0xFDE
 33706                           postdec2	equ	0xFDD
 33707                           plusw2	equ	0xFDB
 33708                           fsr2h	equ	0xFDA
 33709                           fsr2l	equ	0xFD9
 33710                           status	equ	0xFD8
 33711                           
 33712 ;; *************** function _HALSPISend *****************
 33713 ;; Defined at:
 33714 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33715 ;; Parameters:    Size  Location     Type
 33716 ;;  data            1    wreg     unsigned char 
 33717 ;; Auto vars:     Size  Location     Type
 33718 ;;  data            1    5[BANK0 ] unsigned char 
 33719 ;; Return value:  Size  Location     Type
 33720 ;;                  1    wreg      unsigned char 
 33721 ;; Registers used:
 33722 ;;		wreg, status,2, cstack
 33723 ;; Tracked objects:
 33724 ;;		On entry : 0/1
 33725 ;;		On exit  : 0/0
 33726 ;;		Unchanged: 0/0
 33727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33732 ;;Total ram usage:        1 bytes
 33733 ;; Hardware stack levels used:    1
 33734 ;; Hardware stack levels required when called:    8
 33735 ;; This function calls:
 33736 ;;		_SPI2_Exchange8bit
 33737 ;; This function is called by:
 33738 ;;		_RADIO_RegisterWrite
 33739 ;;		_RADIO_RegisterRead
 33740 ;;		_RADIO_Transmit
 33741 ;;		_RADIO_RxDone
 33742 ;;		_RADIO_FSKPayloadReady
 33743 ;; This function uses a non-reentrant model
 33744 ;;
 33745                           
 33746                           	psect	text174
 33747  007812                     __ptext174:
 33748                           	opt stack 0
 33749  007812                     _HALSPISend:
 33750                           	opt stack 17
 33751                           
 33752                           ;incstack = 0
 33753                           ;HALSPISend@data stored from wreg
 33754  007812  0100               	movlb	0	; () banked
 33755  007814  6F65               	movwf	HALSPISend@data& (0+255),b
 33756                           
 33757                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33758  007816  5165               	movf	HALSPISend@data& (0+255),w,b
 33759  007818  EF7A  F03B         	goto	_SPI2_Exchange8bit
 33760  00781C                     __end_of_HALSPISend:
 33761                           	opt stack 0
 33762                           tosu	equ	0xFFF
 33763                           tosh	equ	0xFFE
 33764                           tosl	equ	0xFFD
 33765                           pclath	equ	0xFFA
 33766                           tblptru	equ	0xFF8
 33767                           tblptrh	equ	0xFF7
 33768                           tblptrl	equ	0xFF6
 33769                           tablat	equ	0xFF5
 33770                           prodh	equ	0xFF4
 33771                           prodl	equ	0xFF3
 33772                           intcon	equ	0xFF2
 33773                           intcon2	equ	0xFF1
 33774                           intcon3	equ	0xFF0
 33775                           indf0	equ	0xFEF
 33776                           postinc0	equ	0xFEE
 33777                           plusw0	equ	0xFEB
 33778                           fsr0h	equ	0xFEA
 33779                           fsr0l	equ	0xFE9
 33780                           wreg	equ	0xFE8
 33781                           postinc1	equ	0xFE6
 33782                           postdec1	equ	0xFE5
 33783                           plusw1	equ	0xFE3
 33784                           fsr1h	equ	0xFE2
 33785                           fsr1l	equ	0xFE1
 33786                           indf2	equ	0xFDF
 33787                           postinc2	equ	0xFDE
 33788                           postdec2	equ	0xFDD
 33789                           plusw2	equ	0xFDB
 33790                           fsr2h	equ	0xFDA
 33791                           fsr2l	equ	0xFD9
 33792                           status	equ	0xFD8
 33793                           
 33794 ;; *************** function _SPI2_Exchange8bit *****************
 33795 ;; Defined at:
 33796 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33797 ;; Parameters:    Size  Location     Type
 33798 ;;  data            1    wreg     unsigned char 
 33799 ;; Auto vars:     Size  Location     Type
 33800 ;;  data            1    4[BANK0 ] unsigned char 
 33801 ;; Return value:  Size  Location     Type
 33802 ;;                  1    wreg      unsigned char 
 33803 ;; Registers used:
 33804 ;;		wreg, status,2
 33805 ;; Tracked objects:
 33806 ;;		On entry : F/0
 33807 ;;		On exit  : 0/0
 33808 ;;		Unchanged: 0/0
 33809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33814 ;;Total ram usage:        1 bytes
 33815 ;; Hardware stack levels used:    1
 33816 ;; Hardware stack levels required when called:    7
 33817 ;; This function calls:
 33818 ;;		Nothing
 33819 ;; This function is called by:
 33820 ;;		_HALSPISend
 33821 ;; This function uses a non-reentrant model
 33822 ;;
 33823                           
 33824                           	psect	text175
 33825  0076F4                     __ptext175:
 33826                           	opt stack 0
 33827  0076F4                     _SPI2_Exchange8bit:
 33828                           	opt stack 17
 33829                           
 33830                           ;incstack = 0
 33831                           ;SPI2_Exchange8bit@data stored from wreg
 33832  0076F4  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 33833                           
 33834                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 33835  0076F6  9E6C               	bcf	3948,7,c	;volatile
 33836                           
 33837                           ;spi2.c: 82: SSP2BUF = data;
 33838  0076F8  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 33839  0076FC                     l192:
 33840  0076FC  A06D               	btfss	3949,0,c	;volatile
 33841  0076FE  D7FE               	goto	l192
 33842                           
 33843                           ;spi2.c: 86: }
 33844                           ;spi2.c: 88: return (SSP2BUF);
 33845  007700  506F               	movf	3951,w,c	;volatile
 33846  007702  0012               	return		;funcret
 33847  007704                     __end_of_SPI2_Exchange8bit:
 33848                           	opt stack 0
 33849                           tosu	equ	0xFFF
 33850                           tosh	equ	0xFFE
 33851                           tosl	equ	0xFFD
 33852                           pclath	equ	0xFFA
 33853                           tblptru	equ	0xFF8
 33854                           tblptrh	equ	0xFF7
 33855                           tblptrl	equ	0xFF6
 33856                           tablat	equ	0xFF5
 33857                           prodh	equ	0xFF4
 33858                           prodl	equ	0xFF3
 33859                           intcon	equ	0xFF2
 33860                           intcon2	equ	0xFF1
 33861                           intcon3	equ	0xFF0
 33862                           indf0	equ	0xFEF
 33863                           postinc0	equ	0xFEE
 33864                           plusw0	equ	0xFEB
 33865                           fsr0h	equ	0xFEA
 33866                           fsr0l	equ	0xFE9
 33867                           wreg	equ	0xFE8
 33868                           postinc1	equ	0xFE6
 33869                           postdec1	equ	0xFE5
 33870                           plusw1	equ	0xFE3
 33871                           fsr1h	equ	0xFE2
 33872                           fsr1l	equ	0xFE1
 33873                           indf2	equ	0xFDF
 33874                           postinc2	equ	0xFDE
 33875                           postdec2	equ	0xFDD
 33876                           plusw2	equ	0xFDB
 33877                           fsr2h	equ	0xFDA
 33878                           fsr2l	equ	0xFD9
 33879                           status	equ	0xFD8
 33880                           
 33881 ;; *************** function _HALSPICSDeassert *****************
 33882 ;; Defined at:
 33883 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33884 ;; Parameters:    Size  Location     Type
 33885 ;;		None
 33886 ;; Auto vars:     Size  Location     Type
 33887 ;;		None
 33888 ;; Return value:  Size  Location     Type
 33889 ;;                  1    wreg      void 
 33890 ;; Registers used:
 33891 ;;		None
 33892 ;; Tracked objects:
 33893 ;;		On entry : 0/0
 33894 ;;		On exit  : 0/0
 33895 ;;		Unchanged: 0/0
 33896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33901 ;;Total ram usage:        0 bytes
 33902 ;; Hardware stack levels used:    1
 33903 ;; Hardware stack levels required when called:    7
 33904 ;; This function calls:
 33905 ;;		Nothing
 33906 ;; This function is called by:
 33907 ;;		_RADIO_RegisterWrite
 33908 ;;		_RADIO_RegisterRead
 33909 ;;		_RADIO_Transmit
 33910 ;;		_RADIO_RxDone
 33911 ;;		_RADIO_FSKPayloadReady
 33912 ;; This function uses a non-reentrant model
 33913 ;;
 33914                           
 33915                           	psect	text176
 33916  0078BE                     __ptext176:
 33917                           	opt stack 0
 33918  0078BE                     _HALSPICSDeassert:
 33919                           	opt stack 18
 33920                           
 33921                           ;incstack = 0
 33922                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 33923  0078BE  868C               	bsf	3980,3,c	;volatile
 33924  0078C0  0012               	return		;funcret
 33925  0078C2                     __end_of_HALSPICSDeassert:
 33926                           	opt stack 0
 33927                           tosu	equ	0xFFF
 33928                           tosh	equ	0xFFE
 33929                           tosl	equ	0xFFD
 33930                           pclath	equ	0xFFA
 33931                           tblptru	equ	0xFF8
 33932                           tblptrh	equ	0xFF7
 33933                           tblptrl	equ	0xFF6
 33934                           tablat	equ	0xFF5
 33935                           prodh	equ	0xFF4
 33936                           prodl	equ	0xFF3
 33937                           intcon	equ	0xFF2
 33938                           intcon2	equ	0xFF1
 33939                           intcon3	equ	0xFF0
 33940                           indf0	equ	0xFEF
 33941                           postinc0	equ	0xFEE
 33942                           plusw0	equ	0xFEB
 33943                           fsr0h	equ	0xFEA
 33944                           fsr0l	equ	0xFE9
 33945                           wreg	equ	0xFE8
 33946                           postinc1	equ	0xFE6
 33947                           postdec1	equ	0xFE5
 33948                           plusw1	equ	0xFE3
 33949                           fsr1h	equ	0xFE2
 33950                           fsr1l	equ	0xFE1
 33951                           indf2	equ	0xFDF
 33952                           postinc2	equ	0xFDE
 33953                           postdec2	equ	0xFDD
 33954                           plusw2	equ	0xFDB
 33955                           fsr2h	equ	0xFDA
 33956                           fsr2l	equ	0xFD9
 33957                           status	equ	0xFD8
 33958                           
 33959 ;; *************** function _HALSPICSAssert *****************
 33960 ;; Defined at:
 33961 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33962 ;; Parameters:    Size  Location     Type
 33963 ;;		None
 33964 ;; Auto vars:     Size  Location     Type
 33965 ;;		None
 33966 ;; Return value:  Size  Location     Type
 33967 ;;                  1    wreg      void 
 33968 ;; Registers used:
 33969 ;;		None
 33970 ;; Tracked objects:
 33971 ;;		On entry : 0/1
 33972 ;;		On exit  : 0/0
 33973 ;;		Unchanged: 0/0
 33974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33979 ;;Total ram usage:        0 bytes
 33980 ;; Hardware stack levels used:    1
 33981 ;; Hardware stack levels required when called:    7
 33982 ;; This function calls:
 33983 ;;		Nothing
 33984 ;; This function is called by:
 33985 ;;		_RADIO_RegisterWrite
 33986 ;;		_RADIO_RegisterRead
 33987 ;;		_RADIO_Transmit
 33988 ;;		_RADIO_RxDone
 33989 ;;		_RADIO_FSKPayloadReady
 33990 ;; This function uses a non-reentrant model
 33991 ;;
 33992                           
 33993                           	psect	text177
 33994  0078C2                     __ptext177:
 33995                           	opt stack 0
 33996  0078C2                     _HALSPICSAssert:
 33997                           	opt stack 18
 33998                           
 33999                           ;incstack = 0
 34000                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 34001  0078C2  968C               	bcf	3980,3,c	;volatile
 34002  0078C4  0012               	return		;funcret
 34003  0078C6                     __end_of_HALSPICSAssert:
 34004                           	opt stack 0
 34005                           tosu	equ	0xFFF
 34006                           tosh	equ	0xFFE
 34007                           tosl	equ	0xFFD
 34008                           pclath	equ	0xFFA
 34009                           tblptru	equ	0xFF8
 34010                           tblptrh	equ	0xFF7
 34011                           tblptrl	equ	0xFF6
 34012                           tablat	equ	0xFF5
 34013                           prodh	equ	0xFF4
 34014                           prodl	equ	0xFF3
 34015                           intcon	equ	0xFF2
 34016                           intcon2	equ	0xFF1
 34017                           intcon3	equ	0xFF0
 34018                           indf0	equ	0xFEF
 34019                           postinc0	equ	0xFEE
 34020                           plusw0	equ	0xFEB
 34021                           fsr0h	equ	0xFEA
 34022                           fsr0l	equ	0xFE9
 34023                           wreg	equ	0xFE8
 34024                           postinc1	equ	0xFE6
 34025                           postdec1	equ	0xFE5
 34026                           plusw1	equ	0xFE3
 34027                           fsr1h	equ	0xFE2
 34028                           fsr1l	equ	0xFE1
 34029                           indf2	equ	0xFDF
 34030                           postinc2	equ	0xFDE
 34031                           postdec2	equ	0xFDD
 34032                           plusw2	equ	0xFDB
 34033                           fsr2h	equ	0xFDA
 34034                           fsr2l	equ	0xFD9
 34035                           status	equ	0xFD8
 34036                           
 34037 ;; *************** function _RADIO_Reset *****************
 34038 ;; Defined at:
 34039 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34040 ;; Parameters:    Size  Location     Type
 34041 ;;		None
 34042 ;; Auto vars:     Size  Location     Type
 34043 ;;		None
 34044 ;; Return value:  Size  Location     Type
 34045 ;;                  1    wreg      void 
 34046 ;; Registers used:
 34047 ;;		wreg, status,2, status,0, cstack
 34048 ;; Tracked objects:
 34049 ;;		On entry : E/1
 34050 ;;		On exit  : E/0
 34051 ;;		Unchanged: 0/0
 34052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34057 ;;Total ram usage:        0 bytes
 34058 ;; Hardware stack levels used:    1
 34059 ;; Hardware stack levels required when called:    8
 34060 ;; This function calls:
 34061 ;;		_HALResetPinMakeInput
 34062 ;;		_HALResetPinMakeOutput
 34063 ;;		_HALResetPinOutputValue
 34064 ;;		_SystemBlockingWaitMs
 34065 ;; This function is called by:
 34066 ;;		_RADIO_Init
 34067 ;; This function uses a non-reentrant model
 34068 ;;
 34069                           
 34070                           	psect	text178
 34071  006FBC                     __ptext178:
 34072                           	opt stack 0
 34073  006FBC                     _RADIO_Reset:
 34074                           	opt stack 20
 34075                           
 34076                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34077                           
 34078                           ;incstack = 0
 34079  006FBC  EC63  F03C         	call	_HALResetPinMakeOutput	;wreg free
 34080                           
 34081                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34082  006FC0  0E00               	movlw	0
 34083  006FC2  EC54  F03B         	call	_HALResetPinOutputValue
 34084                           
 34085                           ; BSR set to: 0
 34086                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34087  006FC6  0E01               	movlw	1
 34088  006FC8  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34089  006FCA  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34090  006FCC  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34091  006FCE  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34092  006FD0  ECC9  F038         	call	_SystemBlockingWaitMs	;wreg free
 34093                           
 34094                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34095  006FD4  EC65  F03C         	call	_HALResetPinMakeInput	;wreg free
 34096                           
 34097                           ; BSR set to: 0
 34098                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34099  006FD8  0E0A               	movlw	10
 34100  006FDA  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34101  006FDC  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34102  006FDE  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34103  006FE0  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34104  006FE2  ECC9  F038         	call	_SystemBlockingWaitMs	;wreg free
 34105                           
 34106                           ; BSR set to: 0
 34107                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34108  006FE6  0E01               	movlw	1
 34109  006FE8  EC54  F03B         	call	_HALResetPinOutputValue
 34110                           
 34111                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34112  006FEC  EF63  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 34113  006FF0                     __end_of_RADIO_Reset:
 34114                           	opt stack 0
 34115                           tosu	equ	0xFFF
 34116                           tosh	equ	0xFFE
 34117                           tosl	equ	0xFFD
 34118                           pclath	equ	0xFFA
 34119                           tblptru	equ	0xFF8
 34120                           tblptrh	equ	0xFF7
 34121                           tblptrl	equ	0xFF6
 34122                           tablat	equ	0xFF5
 34123                           prodh	equ	0xFF4
 34124                           prodl	equ	0xFF3
 34125                           intcon	equ	0xFF2
 34126                           intcon2	equ	0xFF1
 34127                           intcon3	equ	0xFF0
 34128                           indf0	equ	0xFEF
 34129                           postinc0	equ	0xFEE
 34130                           plusw0	equ	0xFEB
 34131                           fsr0h	equ	0xFEA
 34132                           fsr0l	equ	0xFE9
 34133                           wreg	equ	0xFE8
 34134                           postinc1	equ	0xFE6
 34135                           postdec1	equ	0xFE5
 34136                           plusw1	equ	0xFE3
 34137                           fsr1h	equ	0xFE2
 34138                           fsr1l	equ	0xFE1
 34139                           indf2	equ	0xFDF
 34140                           postinc2	equ	0xFDE
 34141                           postdec2	equ	0xFDD
 34142                           plusw2	equ	0xFDB
 34143                           fsr2h	equ	0xFDA
 34144                           fsr2l	equ	0xFD9
 34145                           status	equ	0xFD8
 34146                           
 34147 ;; *************** function _SystemBlockingWaitMs *****************
 34148 ;; Defined at:
 34149 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34150 ;; Parameters:    Size  Location     Type
 34151 ;;  ms              4    4[BANK0 ] unsigned long 
 34152 ;; Auto vars:     Size  Location     Type
 34153 ;;		None
 34154 ;; Return value:  Size  Location     Type
 34155 ;;                  1    wreg      void 
 34156 ;; Registers used:
 34157 ;;		wreg, status,2, status,0
 34158 ;; Tracked objects:
 34159 ;;		On entry : F/0
 34160 ;;		On exit  : F/0
 34161 ;;		Unchanged: 0/0
 34162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34166 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34167 ;;Total ram usage:        5 bytes
 34168 ;; Hardware stack levels used:    1
 34169 ;; Hardware stack levels required when called:    7
 34170 ;; This function calls:
 34171 ;;		Nothing
 34172 ;; This function is called by:
 34173 ;;		_RADIO_WriteMode
 34174 ;;		_RADIO_Reset
 34175 ;;		_RADIO_ReadRandom
 34176 ;; This function uses a non-reentrant model
 34177 ;;
 34178                           
 34179                           	psect	text179
 34180  007192                     __ptext179:
 34181                           	opt stack 0
 34182  007192                     _SystemBlockingWaitMs:
 34183                           	opt stack 19
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;sw_timer.c: 147: while (ms > 0)
 34187                           
 34188                           ;incstack = 0
 34189  007192  D00E               	goto	l11959
 34190  007194                     l11955:
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;sw_timer.c: 148: {
 34194                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34195  007194  0E06               	movlw	6
 34196  007196  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34197  007198  0E30               	movlw	48
 34198  00719A                     u19587:
 34199  00719A  2EE8               	decfsz	wreg,f,c
 34200  00719C  D7FE               	goto	u19587
 34201  00719E  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34202  0071A0  D7FC               	goto	u19587
 34203  0071A2  D000               	nop2	
 34204                           
 34205                           ;sw_timer.c: 150: ms--;
 34206  0071A4  0100               	movlb	0	; () banked
 34207  0071A6  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34208  0071A8  0E00               	movlw	0
 34209  0071AA  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34210  0071AC  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34211  0071AE  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34212  0071B0                     l11959:
 34213                           
 34214                           ; BSR set to: 0
 34215  0071B0  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34216  0071B2  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34217  0071B4  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34218  0071B6  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34219  0071B8  E1ED               	bnz	l11955
 34220                           
 34221                           ; BSR set to: 0
 34222  0071BA  0012               	return		;funcret
 34223  0071BC                     __end_of_SystemBlockingWaitMs:
 34224                           	opt stack 0
 34225                           tosu	equ	0xFFF
 34226                           tosh	equ	0xFFE
 34227                           tosl	equ	0xFFD
 34228                           pclath	equ	0xFFA
 34229                           tblptru	equ	0xFF8
 34230                           tblptrh	equ	0xFF7
 34231                           tblptrl	equ	0xFF6
 34232                           tablat	equ	0xFF5
 34233                           prodh	equ	0xFF4
 34234                           prodl	equ	0xFF3
 34235                           intcon	equ	0xFF2
 34236                           intcon2	equ	0xFF1
 34237                           intcon3	equ	0xFF0
 34238                           indf0	equ	0xFEF
 34239                           postinc0	equ	0xFEE
 34240                           plusw0	equ	0xFEB
 34241                           fsr0h	equ	0xFEA
 34242                           fsr0l	equ	0xFE9
 34243                           wreg	equ	0xFE8
 34244                           postinc1	equ	0xFE6
 34245                           postdec1	equ	0xFE5
 34246                           plusw1	equ	0xFE3
 34247                           fsr1h	equ	0xFE2
 34248                           fsr1l	equ	0xFE1
 34249                           indf2	equ	0xFDF
 34250                           postinc2	equ	0xFDE
 34251                           postdec2	equ	0xFDD
 34252                           plusw2	equ	0xFDB
 34253                           fsr2h	equ	0xFDA
 34254                           fsr2l	equ	0xFD9
 34255                           status	equ	0xFD8
 34256                           
 34257 ;; *************** function _HALResetPinOutputValue *****************
 34258 ;; Defined at:
 34259 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34260 ;; Parameters:    Size  Location     Type
 34261 ;;  value           1    wreg     unsigned char 
 34262 ;; Auto vars:     Size  Location     Type
 34263 ;;  value           1    4[BANK0 ] unsigned char 
 34264 ;; Return value:  Size  Location     Type
 34265 ;;                  1    wreg      void 
 34266 ;; Registers used:
 34267 ;;		wreg, status,2, status,0
 34268 ;; Tracked objects:
 34269 ;;		On entry : E/1
 34270 ;;		On exit  : F/0
 34271 ;;		Unchanged: 0/0
 34272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34277 ;;Total ram usage:        1 bytes
 34278 ;; Hardware stack levels used:    1
 34279 ;; Hardware stack levels required when called:    7
 34280 ;; This function calls:
 34281 ;;		Nothing
 34282 ;; This function is called by:
 34283 ;;		_RADIO_Reset
 34284 ;; This function uses a non-reentrant model
 34285 ;;
 34286                           
 34287                           	psect	text180
 34288  0076A8                     __ptext180:
 34289                           	opt stack 0
 34290  0076A8                     _HALResetPinOutputValue:
 34291                           	opt stack 20
 34292                           
 34293                           ; BSR set to: 0
 34294                           ;incstack = 0
 34295                           ;HALResetPinOutputValue@value stored from wreg
 34296  0076A8  0100               	movlb	0	; () banked
 34297  0076AA  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34298                           
 34299                           ;radio_driver_hal.c: 57: if (value == 0)
 34300  0076AC  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34301  0076AE  E102               	bnz	l9589
 34302                           
 34303                           ; BSR set to: 0
 34304                           
 34305                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34306  0076B0  948B               	bcf	3979,2,c	;volatile
 34307  0076B2  0012               	return	
 34308  0076B4                     l9589:
 34309                           
 34310                           ; BSR set to: 0
 34311                           ;radio_driver_hal.c: 59: else if (value == 1)
 34312  0076B4  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34313  0076B6  B4D8               	btfsc	status,2,c
 34314                           
 34315                           ; BSR set to: 0
 34316                           
 34317                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34318  0076B8  848B               	bsf	3979,2,c	;volatile
 34319                           
 34320                           ; BSR set to: 0
 34321  0076BA  0012               	return		;funcret
 34322  0076BC                     __end_of_HALResetPinOutputValue:
 34323                           	opt stack 0
 34324                           tosu	equ	0xFFF
 34325                           tosh	equ	0xFFE
 34326                           tosl	equ	0xFFD
 34327                           pclath	equ	0xFFA
 34328                           tblptru	equ	0xFF8
 34329                           tblptrh	equ	0xFF7
 34330                           tblptrl	equ	0xFF6
 34331                           tablat	equ	0xFF5
 34332                           prodh	equ	0xFF4
 34333                           prodl	equ	0xFF3
 34334                           intcon	equ	0xFF2
 34335                           intcon2	equ	0xFF1
 34336                           intcon3	equ	0xFF0
 34337                           indf0	equ	0xFEF
 34338                           postinc0	equ	0xFEE
 34339                           plusw0	equ	0xFEB
 34340                           fsr0h	equ	0xFEA
 34341                           fsr0l	equ	0xFE9
 34342                           wreg	equ	0xFE8
 34343                           postinc1	equ	0xFE6
 34344                           postdec1	equ	0xFE5
 34345                           plusw1	equ	0xFE3
 34346                           fsr1h	equ	0xFE2
 34347                           fsr1l	equ	0xFE1
 34348                           indf2	equ	0xFDF
 34349                           postinc2	equ	0xFDE
 34350                           postdec2	equ	0xFDD
 34351                           plusw2	equ	0xFDB
 34352                           fsr2h	equ	0xFDA
 34353                           fsr2l	equ	0xFD9
 34354                           status	equ	0xFD8
 34355                           
 34356 ;; *************** function _HALResetPinMakeOutput *****************
 34357 ;; Defined at:
 34358 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34359 ;; Parameters:    Size  Location     Type
 34360 ;;		None
 34361 ;; Auto vars:     Size  Location     Type
 34362 ;;		None
 34363 ;; Return value:  Size  Location     Type
 34364 ;;                  1    wreg      void 
 34365 ;; Registers used:
 34366 ;;		None
 34367 ;; Tracked objects:
 34368 ;;		On entry : E/1
 34369 ;;		On exit  : E/0
 34370 ;;		Unchanged: E/0
 34371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34376 ;;Total ram usage:        0 bytes
 34377 ;; Hardware stack levels used:    1
 34378 ;; Hardware stack levels required when called:    7
 34379 ;; This function calls:
 34380 ;;		Nothing
 34381 ;; This function is called by:
 34382 ;;		_RADIO_Reset
 34383 ;; This function uses a non-reentrant model
 34384 ;;
 34385                           
 34386                           	psect	text181
 34387  0078C6                     __ptext181:
 34388                           	opt stack 0
 34389  0078C6                     _HALResetPinMakeOutput:
 34390                           	opt stack 20
 34391                           
 34392                           ; BSR set to: 0
 34393                           ;incstack = 0
 34394                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34395  0078C6  9494               	bcf	3988,2,c	;volatile
 34396  0078C8  0012               	return		;funcret
 34397  0078CA                     __end_of_HALResetPinMakeOutput:
 34398                           	opt stack 0
 34399                           tosu	equ	0xFFF
 34400                           tosh	equ	0xFFE
 34401                           tosl	equ	0xFFD
 34402                           pclath	equ	0xFFA
 34403                           tblptru	equ	0xFF8
 34404                           tblptrh	equ	0xFF7
 34405                           tblptrl	equ	0xFF6
 34406                           tablat	equ	0xFF5
 34407                           prodh	equ	0xFF4
 34408                           prodl	equ	0xFF3
 34409                           intcon	equ	0xFF2
 34410                           intcon2	equ	0xFF1
 34411                           intcon3	equ	0xFF0
 34412                           indf0	equ	0xFEF
 34413                           postinc0	equ	0xFEE
 34414                           plusw0	equ	0xFEB
 34415                           fsr0h	equ	0xFEA
 34416                           fsr0l	equ	0xFE9
 34417                           wreg	equ	0xFE8
 34418                           postinc1	equ	0xFE6
 34419                           postdec1	equ	0xFE5
 34420                           plusw1	equ	0xFE3
 34421                           fsr1h	equ	0xFE2
 34422                           fsr1l	equ	0xFE1
 34423                           indf2	equ	0xFDF
 34424                           postinc2	equ	0xFDE
 34425                           postdec2	equ	0xFDD
 34426                           plusw2	equ	0xFDB
 34427                           fsr2h	equ	0xFDA
 34428                           fsr2l	equ	0xFD9
 34429                           status	equ	0xFD8
 34430                           
 34431 ;; *************** function _HALResetPinMakeInput *****************
 34432 ;; Defined at:
 34433 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34434 ;; Parameters:    Size  Location     Type
 34435 ;;		None
 34436 ;; Auto vars:     Size  Location     Type
 34437 ;;		None
 34438 ;; Return value:  Size  Location     Type
 34439 ;;                  1    wreg      void 
 34440 ;; Registers used:
 34441 ;;		None
 34442 ;; Tracked objects:
 34443 ;;		On entry : F/0
 34444 ;;		On exit  : F/0
 34445 ;;		Unchanged: F/0
 34446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34451 ;;Total ram usage:        0 bytes
 34452 ;; Hardware stack levels used:    1
 34453 ;; Hardware stack levels required when called:    7
 34454 ;; This function calls:
 34455 ;;		Nothing
 34456 ;; This function is called by:
 34457 ;;		_RADIO_Reset
 34458 ;; This function uses a non-reentrant model
 34459 ;;
 34460                           
 34461                           	psect	text182
 34462  0078CA                     __ptext182:
 34463                           	opt stack 0
 34464  0078CA                     _HALResetPinMakeInput:
 34465                           	opt stack 20
 34466                           
 34467                           ; BSR set to: 0
 34468                           
 34469                           ;incstack = 0
 34470                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 34471  0078CA  8494               	bsf	3988,2,c	;volatile
 34472                           
 34473                           ; BSR set to: 0
 34474  0078CC  0012               	return		;funcret
 34475  0078CE                     __end_of_HALResetPinMakeInput:
 34476                           	opt stack 0
 34477                           tosu	equ	0xFFF
 34478                           tosh	equ	0xFFE
 34479                           tosl	equ	0xFFD
 34480                           pclath	equ	0xFFA
 34481                           tblptru	equ	0xFF8
 34482                           tblptrh	equ	0xFF7
 34483                           tblptrl	equ	0xFF6
 34484                           tablat	equ	0xFF5
 34485                           prodh	equ	0xFF4
 34486                           prodl	equ	0xFF3
 34487                           intcon	equ	0xFF2
 34488                           intcon2	equ	0xFF1
 34489                           intcon3	equ	0xFF0
 34490                           indf0	equ	0xFEF
 34491                           postinc0	equ	0xFEE
 34492                           plusw0	equ	0xFEB
 34493                           fsr0h	equ	0xFEA
 34494                           fsr0l	equ	0xFE9
 34495                           wreg	equ	0xFE8
 34496                           postinc1	equ	0xFE6
 34497                           postdec1	equ	0xFE5
 34498                           plusw1	equ	0xFE3
 34499                           fsr1h	equ	0xFE2
 34500                           fsr1l	equ	0xFE1
 34501                           indf2	equ	0xFDF
 34502                           postinc2	equ	0xFDE
 34503                           postdec2	equ	0xFDD
 34504                           plusw2	equ	0xFDB
 34505                           fsr2h	equ	0xFDA
 34506                           fsr2l	equ	0xFD9
 34507                           status	equ	0xFD8
 34508                           
 34509 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34510 ;; Defined at:
 34511 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34512 ;; Parameters:    Size  Location     Type
 34513 ;;  period          2   54[BANK0 ] unsigned int 
 34514 ;; Auto vars:     Size  Location     Type
 34515 ;;  iCtr            1   68[BANK0 ] unsigned char 
 34516 ;; Return value:  Size  Location     Type
 34517 ;;                  1    wreg      void 
 34518 ;; Registers used:
 34519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34520 ;; Tracked objects:
 34521 ;;		On entry : F/0
 34522 ;;		On exit  : D/0
 34523 ;;		Unchanged: 0/0
 34524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34526 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34527 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34528 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34529 ;;Total ram usage:       15 bytes
 34530 ;; Hardware stack levels used:    1
 34531 ;; Hardware stack levels required when called:   11
 34532 ;; This function calls:
 34533 ;;		_SwTimerSetTimeout
 34534 ;;		_SwTimerStart
 34535 ;;		_SwTimerStop
 34536 ;;		___lldiv
 34537 ;; This function is called by:
 34538 ;;		_LORAWAN_Reset
 34539 ;; This function uses a non-reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text183
 34543  0036D0                     __ptext183:
 34544                           	opt stack 0
 34545  0036D0                     _LORAWAN_LinkCheckConfigure:
 34546                           	opt stack 17
 34547                           
 34548                           ; BSR set to: 0
 34549                           ;lorawan.c: 757: uint8_t iCtr;
 34550                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34551                           
 34552                           ; BSR set to: 0
 34553                           ;incstack = 0
 34554  0036D0  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34555  0036D2  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34556  0036D4  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34557  0036D6  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34558  0036D8  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34559  0036DA  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34560  0036DC  0EE8               	movlw	232
 34561  0036DE  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34562  0036E0  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34563  0036E4  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34564  0036E8  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34565  0036EA  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34566  0036EC  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34567  0036EE  50F3               	movf	prodl,w,c
 34568  0036F0  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34569  0036F2  50F4               	movf	prodh,w,c
 34570  0036F4  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34571  0036F6  0E00               	movlw	0
 34572  0036F8  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34573  0036FA  0E03               	movlw	3
 34574  0036FC  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34575  0036FE  50F3               	movf	prodl,w,c
 34576  003700  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34577  003702  50F4               	movf	prodh,w,c
 34578  003704  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34579  003706  0E00               	movlw	0
 34580  003708  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34581  00370A  0EE8               	movlw	232
 34582  00370C  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34583  00370E  50F3               	movf	prodl,w,c
 34584  003710  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34585  003712  50F4               	movf	prodh,w,c
 34586  003714  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34587  003716  0E03               	movlw	3
 34588  003718  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34589  00371A  50F3               	movf	prodl,w,c
 34590  00371C  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34591  00371E  50F4               	movf	prodh,w,c
 34592  003720  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34593  003722  0E00               	movlw	0
 34594  003724  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34595  003726  50F3               	movf	prodl,w,c
 34596  003728  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34597  00372A  50F4               	movf	prodh,w,c
 34598  00372C  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34599  00372E  0EE8               	movlw	232
 34600  003730  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34601  003732  50F3               	movf	prodl,w,c
 34602  003734  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34603  003736  0E03               	movlw	3
 34604  003738  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34605  00373A  50F3               	movf	prodl,w,c
 34606  00373C  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34607  00373E  0E00               	movlw	0
 34608  003740  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34609  003742  50F3               	movf	prodl,w,c
 34610  003744  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34611  003746  0E00               	movlw	0
 34612  003748  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34613  00374A  50F3               	movf	prodl,w,c
 34614  00374C  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34615  00374E  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34616  003752  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34617  003756  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34618  00375A  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34619                           
 34620                           ; BSR set to: 0
 34621                           ;lorawan.c: 761: if (period == 0)
 34622  00375E  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34623  003760  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34624  003762  E127               	bnz	l1993
 34625                           
 34626                           ; BSR set to: 0
 34627                           ;lorawan.c: 762: {
 34628                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34629  003764  0102               	movlb	2	; () banked
 34630  003766  51E7               	movf	(_loRa+231)& (0+255),w,b
 34631  003768  EC59  F03A         	call	_SwTimerStop
 34632                           
 34633                           ; BSR set to: 0
 34634                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34635  00376C  0102               	movlb	2	; () banked
 34636  00376E  9503               	bcf	(_loRa+3)& (0+255),2,b
 34637                           
 34638                           ; BSR set to: 2
 34639                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34640  003770  0100               	movlb	0	; () banked
 34641  003772  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34642  003774  D018               	goto	l14981
 34643  003776                     l14973:
 34644                           
 34645                           ; BSR set to: 0
 34646                           ;lorawan.c: 766: {
 34647                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34648  003776  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34649  003778  0D02               	mullw	2
 34650  00377A  0EA8               	movlw	low (_loRa+168)
 34651  00377C  24F3               	addwf	prodl,w,c
 34652  00377E  6ED9               	movwf	fsr2l,c
 34653  003780  0E02               	movlw	high (_loRa+168)
 34654  003782  20F4               	addwfc	prodh,w,c
 34655  003784  6EDA               	movwf	fsr2h,c
 34656  003786  0E02               	movlw	2
 34657  003788  18DE               	xorwf	postinc2,w,c
 34658  00378A  E10B               	bnz	l14979
 34659                           
 34660                           ; BSR set to: 0
 34661                           ;lorawan.c: 768: {
 34662                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34663  00378C  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34664  00378E  0D02               	mullw	2
 34665  003790  0EA8               	movlw	low (_loRa+168)
 34666  003792  24F3               	addwf	prodl,w,c
 34667  003794  6ED9               	movwf	fsr2l,c
 34668  003796  0E02               	movlw	high (_loRa+168)
 34669  003798  20F4               	addwfc	prodh,w,c
 34670  00379A  6EDA               	movwf	fsr2h,c
 34671  00379C  68DF               	setf	indf2,c
 34672                           
 34673                           ; BSR set to: 0
 34674                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34675  00379E  0102               	movlb	2	; () banked
 34676  0037A0  07A7               	decf	(_loRa+167)& (0+255),f,b
 34677  0037A2                     l14979:
 34678  0037A2  0100               	movlb	0	; () banked
 34679  0037A4  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34680  0037A6                     l14981:
 34681                           
 34682                           ; BSR set to: 0
 34683  0037A6  0102               	movlb	2	; () banked
 34684  0037A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 34685  0037AA  0100               	movlb	0	; () banked
 34686  0037AC  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34687  0037AE  E3E3               	bnc	l14973
 34688  0037B0  0012               	return	
 34689  0037B2                     l1993:
 34690                           
 34691                           ; BSR set to: 0
 34692                           ;lorawan.c: 776: else
 34693                           ;lorawan.c: 777: {
 34694                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34695  0037B2  0102               	movlb	2	; () banked
 34696  0037B4  8503               	bsf	(_loRa+3)& (0+255),2,b
 34697                           
 34698                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34699  0037B6  A902               	btfss	(_loRa+2)& (0+255),4,b
 34700  0037B8  0012               	return	
 34701                           
 34702                           ; BSR set to: 2
 34703                           ;lorawan.c: 782: {
 34704                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34705  0037BA  51CF               	movf	(_loRa+207)& (0+255),w,b
 34706  0037BC  E106               	bnz	u17390
 34707  0037BE  29CC               	incf	(_loRa+204)& (0+255),w,b
 34708  0037C0  0EFF               	movlw	255
 34709  0037C2  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34710  0037C4  0E0F               	movlw	15
 34711  0037C6  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34712  0037C8  E319               	bnc	l14987
 34713  0037CA                     u17390:
 34714                           
 34715                           ; BSR set to: 2
 34716  0037CA  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34717  0037CE  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34718  0037D2  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34719  0037D6  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34720  0037DA  0E7D               	movlw	125
 34721  0037DC  0100               	movlb	0	; () banked
 34722  0037DE  6F68               	movwf	___lldiv@divisor& (0+255),b
 34723  0037E0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34724  0037E2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34725  0037E4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34726  0037E6  EC0D  F030         	call	___lldiv	;wreg free
 34727  0037EA  0E0C               	movlw	12
 34728  0037EC                     u17405:
 34729  0037EC  90D8               	bcf	status,0,c
 34730  0037EE  3764               	rlcf	?___lldiv& (0+255),f,b
 34731  0037F0  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34732  0037F2  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34733  0037F4  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34734  0037F6  2EE8               	decfsz	wreg,f,c
 34735  0037F8  D7F9               	goto	u17405
 34736  0037FA  D020               	goto	L21
 34737  0037FC                     l14987:
 34738                           
 34739                           ; BSR set to: 2
 34740  0037FC  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34741  003800  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34742  003804  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34743  003808  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34744  00380C  0E0C               	movlw	12
 34745  00380E                     u17415:
 34746  00380E  90D8               	bcf	status,0,c
 34747  003810  0100               	movlb	0	; () banked
 34748  003812  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34749  003814  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34750  003816  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34751  003818  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34752  00381A  2EE8               	decfsz	wreg,f,c
 34753  00381C  D7F8               	goto	u17415
 34754  00381E  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34755  003822  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34756  003826  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34757  00382A  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34758  00382E  0E7D               	movlw	125
 34759  003830  6F68               	movwf	___lldiv@divisor& (0+255),b
 34760  003832  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34761  003834  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34762  003836  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34763  003838  EC0D  F030         	call	___lldiv	;wreg free
 34764  00383C                     L21:
 34765  00383C  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3502
 34766  003840  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3502+1
 34767  003844  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3502+2
 34768  003848  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3502+3
 34769                           
 34770                           ; BSR set to: 0
 34771  00384C  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3502,SwTimerSetTimeout@timeout
 34772  003850  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3502+1,SwTimerSetTimeout@timeout+1
 34773  003854  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3502+2,SwTimerSetTimeout@timeout+2
 34774  003858  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3502+3,SwTimerSetTimeout@timeout+3
 34775  00385C  0102               	movlb	2	; () banked
 34776  00385E  51E7               	movf	(_loRa+231)& (0+255),w,b
 34777  003860  EC62  F036         	call	_SwTimerSetTimeout
 34778                           
 34779                           ; BSR set to: 0
 34780                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34781  003864  0102               	movlb	2	; () banked
 34782  003866  51E7               	movf	(_loRa+231)& (0+255),w,b
 34783  003868  EF4B  F02E         	goto	_SwTimerStart
 34784  00386C                     __end_of_LORAWAN_LinkCheckConfigure:
 34785                           	opt stack 0
 34786                           tosu	equ	0xFFF
 34787                           tosh	equ	0xFFE
 34788                           tosl	equ	0xFFD
 34789                           pclath	equ	0xFFA
 34790                           tblptru	equ	0xFF8
 34791                           tblptrh	equ	0xFF7
 34792                           tblptrl	equ	0xFF6
 34793                           tablat	equ	0xFF5
 34794                           prodh	equ	0xFF4
 34795                           prodl	equ	0xFF3
 34796                           intcon	equ	0xFF2
 34797                           intcon2	equ	0xFF1
 34798                           intcon3	equ	0xFF0
 34799                           indf0	equ	0xFEF
 34800                           postinc0	equ	0xFEE
 34801                           plusw0	equ	0xFEB
 34802                           fsr0h	equ	0xFEA
 34803                           fsr0l	equ	0xFE9
 34804                           wreg	equ	0xFE8
 34805                           postinc1	equ	0xFE6
 34806                           postdec1	equ	0xFE5
 34807                           plusw1	equ	0xFE3
 34808                           fsr1h	equ	0xFE2
 34809                           fsr1l	equ	0xFE1
 34810                           indf2	equ	0xFDF
 34811                           postinc2	equ	0xFDE
 34812                           postdec2	equ	0xFDD
 34813                           plusw2	equ	0xFDB
 34814                           fsr2h	equ	0xFDA
 34815                           fsr2l	equ	0xFD9
 34816                           status	equ	0xFD8
 34817                           
 34818 ;; *************** function ___lldiv *****************
 34819 ;; Defined at:
 34820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 34821 ;; Parameters:    Size  Location     Type
 34822 ;;  dividend        4    4[BANK0 ] unsigned long 
 34823 ;;  divisor         4    8[BANK0 ] unsigned long 
 34824 ;; Auto vars:     Size  Location     Type
 34825 ;;  quotient        4   12[BANK0 ] unsigned long 
 34826 ;;  counter         1   16[BANK0 ] unsigned char 
 34827 ;; Return value:  Size  Location     Type
 34828 ;;                  4    4[BANK0 ] unsigned long 
 34829 ;; Registers used:
 34830 ;;		wreg, status,2, status,0
 34831 ;; Tracked objects:
 34832 ;;		On entry : F/0
 34833 ;;		On exit  : F/0
 34834 ;;		Unchanged: 0/0
 34835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34836 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34837 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34839 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34840 ;;Total ram usage:       13 bytes
 34841 ;; Hardware stack levels used:    1
 34842 ;; Hardware stack levels required when called:    7
 34843 ;; This function calls:
 34844 ;;		Nothing
 34845 ;; This function is called by:
 34846 ;;		_RADIO_WriteFrequency
 34847 ;;		_RADIO_WriteFSKFrequencyDeviation
 34848 ;;		_RADIO_WriteFSKBitRate
 34849 ;;		_RADIO_Transmit
 34850 ;;		_RADIO_ReceiveStart
 34851 ;;		_LORAWAN_TxDone
 34852 ;;		_LORAWAN_RxTimeout
 34853 ;;		_StartReTxTimer
 34854 ;;		_DutyCycleCallback
 34855 ;;		_LORAWAN_LinkCheckConfigure
 34856 ;;		_LORAWAN_LinkCheckCallback
 34857 ;;		_UpdateRetransmissionAckTimeoutState
 34858 ;;		_UpdateJoinSuccessState
 34859 ;; This function uses a non-reentrant model
 34860 ;;
 34861                           
 34862                           	psect	text184
 34863  00601A                     __ptext184:
 34864                           	opt stack 0
 34865  00601A                     ___lldiv:
 34866                           	opt stack 20
 34867                           
 34868                           ; BSR set to: 0
 34869                           
 34870                           ;incstack = 0
 34871  00601A  6B6C               	clrf	___lldiv@quotient& (0+255),b
 34872  00601C  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 34873  00601E  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 34874  006020  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 34875                           
 34876                           ; BSR set to: 0
 34877  006022  5168               	movf	___lldiv@divisor& (0+255),w,b
 34878  006024  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34879  006026  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34880  006028  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34881  00602A  E029               	bz	l3101
 34882                           
 34883                           ; BSR set to: 0
 34884  00602C  0E01               	movlw	1
 34885  00602E  6F70               	movwf	___lldiv@counter& (0+255),b
 34886  006030  D006               	goto	l12095
 34887  006032                     l12093:
 34888                           
 34889                           ; BSR set to: 0
 34890  006032  90D8               	bcf	status,0,c
 34891  006034  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 34892  006036  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34893  006038  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34894  00603A  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34895  00603C  2B70               	incf	___lldiv@counter& (0+255),f,b
 34896  00603E                     l12095:
 34897                           
 34898                           ; BSR set to: 0
 34899  00603E  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34900  006040  D7F8               	goto	l12093
 34901  006042                     l12097:
 34902                           
 34903                           ; BSR set to: 0
 34904  006042  90D8               	bcf	status,0,c
 34905  006044  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 34906  006046  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34907  006048  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34908  00604A  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34909                           
 34910                           ; BSR set to: 0
 34911  00604C  5168               	movf	___lldiv@divisor& (0+255),w,b
 34912  00604E  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 34913  006050  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34914  006052  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34915  006054  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34916  006056  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34917  006058  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34918  00605A  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34919  00605C  E309               	bnc	l12105
 34920                           
 34921                           ; BSR set to: 0
 34922  00605E  5168               	movf	___lldiv@divisor& (0+255),w,b
 34923  006060  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 34924  006062  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34925  006064  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34926  006066  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34927  006068  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34928  00606A  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34929  00606C  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34930                           
 34931                           ; BSR set to: 0
 34932  00606E  816C               	bsf	___lldiv@quotient& (0+255),0,b
 34933  006070                     l12105:
 34934                           
 34935                           ; BSR set to: 0
 34936  006070  90D8               	bcf	status,0,c
 34937  006072  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34938  006074  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34939  006076  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34940  006078  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 34941                           
 34942                           ; BSR set to: 0
 34943  00607A  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 34944  00607C  D7E2               	goto	l12097
 34945  00607E                     l3101:
 34946                           
 34947                           ; BSR set to: 0
 34948  00607E  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 34949  006082  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 34950  006086  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 34951  00608A  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 34952                           
 34953                           ; BSR set to: 0
 34954  00608E  0012               	return		;funcret
 34955  006090                     __end_of___lldiv:
 34956                           	opt stack 0
 34957                           tosu	equ	0xFFF
 34958                           tosh	equ	0xFFE
 34959                           tosl	equ	0xFFD
 34960                           pclath	equ	0xFFA
 34961                           tblptru	equ	0xFF8
 34962                           tblptrh	equ	0xFF7
 34963                           tblptrl	equ	0xFF6
 34964                           tablat	equ	0xFF5
 34965                           prodh	equ	0xFF4
 34966                           prodl	equ	0xFF3
 34967                           intcon	equ	0xFF2
 34968                           intcon2	equ	0xFF1
 34969                           intcon3	equ	0xFF0
 34970                           indf0	equ	0xFEF
 34971                           postinc0	equ	0xFEE
 34972                           plusw0	equ	0xFEB
 34973                           fsr0h	equ	0xFEA
 34974                           fsr0l	equ	0xFE9
 34975                           wreg	equ	0xFE8
 34976                           postinc1	equ	0xFE6
 34977                           postdec1	equ	0xFE5
 34978                           plusw1	equ	0xFE3
 34979                           fsr1h	equ	0xFE2
 34980                           fsr1l	equ	0xFE1
 34981                           indf2	equ	0xFDF
 34982                           postinc2	equ	0xFDE
 34983                           postdec2	equ	0xFDD
 34984                           plusw2	equ	0xFDB
 34985                           fsr2h	equ	0xFDA
 34986                           fsr2l	equ	0xFD9
 34987                           status	equ	0xFD8
 34988                           
 34989 ;; *************** function _SwTimerStop *****************
 34990 ;; Defined at:
 34991 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34992 ;; Parameters:    Size  Location     Type
 34993 ;;  timerId         1    wreg     unsigned char 
 34994 ;; Auto vars:     Size  Location     Type
 34995 ;;  timerId         1    4[BANK0 ] unsigned char 
 34996 ;; Return value:  Size  Location     Type
 34997 ;;                  1    wreg      void 
 34998 ;; Registers used:
 34999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35000 ;; Tracked objects:
 35001 ;;		On entry : C/1
 35002 ;;		On exit  : F/0
 35003 ;;		Unchanged: 0/0
 35004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35009 ;;Total ram usage:        1 bytes
 35010 ;; Hardware stack levels used:    1
 35011 ;; Hardware stack levels required when called:    7
 35012 ;; This function calls:
 35013 ;;		Nothing
 35014 ;; This function is called by:
 35015 ;;		_RADIO_Init
 35016 ;;		_RADIO_Transmit
 35017 ;;		_RADIO_RxDone
 35018 ;;		_RADIO_FSKPayloadReady
 35019 ;;		_RADIO_RxTimeout
 35020 ;;		_RADIO_TxDone
 35021 ;;		_RADIO_FSKPacketSent
 35022 ;;		_RADIO_RxFSKTimeout
 35023 ;;		_LORAWAN_TxDone
 35024 ;;		_StopAllSoftwareTimers
 35025 ;;		_LORAWAN_LinkCheckConfigure
 35026 ;;		_LORAWAN_RxDone
 35027 ;; This function uses a non-reentrant model
 35028 ;;
 35029                           
 35030                           	psect	text185
 35031  0074B2                     __ptext185:
 35032                           	opt stack 0
 35033  0074B2                     _SwTimerStop:
 35034                           	opt stack 20
 35035                           
 35036                           ; BSR set to: 0
 35037                           ;incstack = 0
 35038                           ;SwTimerStop@timerId stored from wreg
 35039  0074B2  0100               	movlb	0	; () banked
 35040  0074B4  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 35041                           
 35042                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35043  0074B6  9EF2               	bcf	intcon,7,c	;volatile
 35044                           
 35045                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35046  0074B8  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 35047  0074BA  0D08               	mullw	8
 35048  0074BC  0E04               	movlw	low (_swTimers+4)
 35049  0074BE  24F3               	addwf	prodl,w,c
 35050  0074C0  6ED9               	movwf	fsr2l,c
 35051  0074C2  0E03               	movlw	high (_swTimers+4)
 35052  0074C4  20F4               	addwfc	prodh,w,c
 35053  0074C6  6EDA               	movwf	fsr2h,c
 35054  0074C8  6ADF               	clrf	indf2,c
 35055                           
 35056                           ; BSR set to: 0
 35057                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35058  0074CA  8EF2               	bsf	intcon,7,c	;volatile
 35059                           
 35060                           ; BSR set to: 0
 35061  0074CC  0C00               	retlw	0	;funcret
 35062  0074CE                     __end_of_SwTimerStop:
 35063                           	opt stack 0
 35064                           tosu	equ	0xFFF
 35065                           tosh	equ	0xFFE
 35066                           tosl	equ	0xFFD
 35067                           pclath	equ	0xFFA
 35068                           tblptru	equ	0xFF8
 35069                           tblptrh	equ	0xFF7
 35070                           tblptrl	equ	0xFF6
 35071                           tablat	equ	0xFF5
 35072                           prodh	equ	0xFF4
 35073                           prodl	equ	0xFF3
 35074                           intcon	equ	0xFF2
 35075                           intcon2	equ	0xFF1
 35076                           intcon3	equ	0xFF0
 35077                           indf0	equ	0xFEF
 35078                           postinc0	equ	0xFEE
 35079                           plusw0	equ	0xFEB
 35080                           fsr0h	equ	0xFEA
 35081                           fsr0l	equ	0xFE9
 35082                           wreg	equ	0xFE8
 35083                           postinc1	equ	0xFE6
 35084                           postdec1	equ	0xFE5
 35085                           plusw1	equ	0xFE3
 35086                           fsr1h	equ	0xFE2
 35087                           fsr1l	equ	0xFE1
 35088                           indf2	equ	0xFDF
 35089                           postinc2	equ	0xFDE
 35090                           postdec2	equ	0xFDD
 35091                           plusw2	equ	0xFDB
 35092                           fsr2h	equ	0xFDA
 35093                           fsr2l	equ	0xFD9
 35094                           status	equ	0xFD8
 35095                           
 35096 ;; *************** function _SwTimerStart *****************
 35097 ;; Defined at:
 35098 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35099 ;; Parameters:    Size  Location     Type
 35100 ;;  timerId         1    wreg     unsigned char 
 35101 ;; Auto vars:     Size  Location     Type
 35102 ;;  timerId         1   53[BANK0 ] unsigned char 
 35103 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 35104 ;; Return value:  Size  Location     Type
 35105 ;;                  1    wreg      void 
 35106 ;; Registers used:
 35107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35108 ;; Tracked objects:
 35109 ;;		On entry : C/2
 35110 ;;		On exit  : F/0
 35111 ;;		Unchanged: 0/0
 35112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35114 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35115 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35116 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35117 ;;Total ram usage:        9 bytes
 35118 ;; Hardware stack levels used:    1
 35119 ;; Hardware stack levels required when called:   10
 35120 ;; This function calls:
 35121 ;;		_SwTimersInterrupt
 35122 ;;		_TMR_OverrideRemaining
 35123 ;; This function is called by:
 35124 ;;		_RADIO_Transmit
 35125 ;;		_RADIO_ReceiveStart
 35126 ;;		_LORAWAN_TxDone
 35127 ;;		_LORAWAN_RxTimeout
 35128 ;;		_StartReTxTimer
 35129 ;;		_DutyCycleCallback
 35130 ;;		_LORAWAN_Join
 35131 ;;		_LORAWAN_LinkCheckConfigure
 35132 ;;		_LORAWAN_LinkCheckCallback
 35133 ;;		_UpdateRetransmissionAckTimeoutState
 35134 ;;		_UpdateJoinSuccessState
 35135 ;; This function uses a non-reentrant model
 35136 ;;
 35137                           
 35138                           	psect	text186
 35139  005C96                     __ptext186:
 35140                           	opt stack 0
 35141  005C96                     _SwTimerStart:
 35142                           	opt stack 17
 35143                           
 35144                           ; BSR set to: 0
 35145                           ;incstack = 0
 35146                           ;SwTimerStart@timerId stored from wreg
 35147  005C96  0100               	movlb	0	; () banked
 35148  005C98  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 35149                           
 35150                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35151                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35152  005C9A  9EF2               	bcf	intcon,7,c	;volatile
 35153                           
 35154                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35155  005C9C  ECA7  F025         	call	_SwTimersInterrupt	;wreg free
 35156  005CA0  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35157  005CA4  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35158  005CA8  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35159  005CAC  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35160                           
 35161                           ; BSR set to: 0
 35162                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35163  005CB0  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35164  005CB2  0D08               	mullw	8
 35165  005CB4  0E00               	movlw	low _swTimers
 35166  005CB6  24F3               	addwf	prodl,w,c
 35167  005CB8  6ED9               	movwf	fsr2l,c
 35168  005CBA  0E03               	movlw	high _swTimers
 35169  005CBC  20F4               	addwfc	prodh,w,c
 35170  005CBE  6EDA               	movwf	fsr2h,c
 35171  005CC0  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35172  005CC2  5CDE               	subwf	postinc2,w,c
 35173  005CC4  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35174  005CC6  58DE               	subwfb	postinc2,w,c
 35175  005CC8  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35176  005CCA  58DE               	subwfb	postinc2,w,c
 35177  005CCC  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35178  005CCE  58DE               	subwfb	postinc2,w,c
 35179  005CD0  E210               	bc	l12431
 35180                           
 35181                           ; BSR set to: 0
 35182                           ;sw_timer.c: 225: {
 35183                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35184  005CD2  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35185  005CD4  0D08               	mullw	8
 35186  005CD6  0E00               	movlw	low _swTimers
 35187  005CD8  24F3               	addwf	prodl,w,c
 35188  005CDA  6ED9               	movwf	fsr2l,c
 35189  005CDC  0E03               	movlw	high _swTimers
 35190  005CDE  20F4               	addwfc	prodh,w,c
 35191  005CE0  6EDA               	movwf	fsr2h,c
 35192  005CE2  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 35193  005CE6  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35194  005CEA  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35195  005CEE  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35196  005CF2                     l12431:
 35197                           
 35198                           ; BSR set to: 0
 35199                           ;sw_timer.c: 227: }
 35200                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35201  005CF2  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35202  005CF6  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35203  005CFA  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35204  005CFE  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35205  005D02  ECCF  F02F         	call	_TMR_OverrideRemaining	;wreg free
 35206                           
 35207                           ; BSR set to: 0
 35208                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35209  005D06  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35210  005D08  0D08               	mullw	8
 35211  005D0A  0E04               	movlw	low (_swTimers+4)
 35212  005D0C  24F3               	addwf	prodl,w,c
 35213  005D0E  6ED9               	movwf	fsr2l,c
 35214  005D10  0E03               	movlw	high (_swTimers+4)
 35215  005D12  20F4               	addwfc	prodh,w,c
 35216  005D14  6EDA               	movwf	fsr2h,c
 35217  005D16  0E01               	movlw	1
 35218  005D18  6EDF               	movwf	indf2,c
 35219                           
 35220                           ; BSR set to: 0
 35221                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35222  005D1A  8EF2               	bsf	intcon,7,c	;volatile
 35223                           
 35224                           ; BSR set to: 0
 35225  005D1C  0C01               	retlw	1	;funcret
 35226  005D1E                     __end_of_SwTimerStart:
 35227                           	opt stack 0
 35228                           tosu	equ	0xFFF
 35229                           tosh	equ	0xFFE
 35230                           tosl	equ	0xFFD
 35231                           pclath	equ	0xFFA
 35232                           tblptru	equ	0xFF8
 35233                           tblptrh	equ	0xFF7
 35234                           tblptrl	equ	0xFF6
 35235                           tablat	equ	0xFF5
 35236                           prodh	equ	0xFF4
 35237                           prodl	equ	0xFF3
 35238                           intcon	equ	0xFF2
 35239                           intcon2	equ	0xFF1
 35240                           intcon3	equ	0xFF0
 35241                           indf0	equ	0xFEF
 35242                           postinc0	equ	0xFEE
 35243                           plusw0	equ	0xFEB
 35244                           fsr0h	equ	0xFEA
 35245                           fsr0l	equ	0xFE9
 35246                           wreg	equ	0xFE8
 35247                           postinc1	equ	0xFE6
 35248                           postdec1	equ	0xFE5
 35249                           plusw1	equ	0xFE3
 35250                           fsr1h	equ	0xFE2
 35251                           fsr1l	equ	0xFE1
 35252                           indf2	equ	0xFDF
 35253                           postinc2	equ	0xFDE
 35254                           postdec2	equ	0xFDD
 35255                           plusw2	equ	0xFDB
 35256                           fsr2h	equ	0xFDA
 35257                           fsr2l	equ	0xFD9
 35258                           status	equ	0xFD8
 35259                           
 35260 ;; *************** function _TMR_OverrideRemaining *****************
 35261 ;; Defined at:
 35262 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35263 ;; Parameters:    Size  Location     Type
 35264 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 35265 ;; Auto vars:     Size  Location     Type
 35266 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 35267 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 35268 ;; Return value:  Size  Location     Type
 35269 ;;                  1    wreg      void 
 35270 ;; Registers used:
 35271 ;;		wreg, status,2, status,0, cstack
 35272 ;; Tracked objects:
 35273 ;;		On entry : F/0
 35274 ;;		On exit  : F/0
 35275 ;;		Unchanged: 0/0
 35276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35278 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35280 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35281 ;;Total ram usage:       10 bytes
 35282 ;; Hardware stack levels used:    1
 35283 ;; Hardware stack levels required when called:    9
 35284 ;; This function calls:
 35285 ;;		_TMR_SwapTimer
 35286 ;; This function is called by:
 35287 ;;		_SwTimerStart
 35288 ;; This function uses a non-reentrant model
 35289 ;;
 35290                           
 35291                           	psect	text187
 35292  005F9E                     __ptext187:
 35293                           	opt stack 0
 35294  005F9E                     _TMR_OverrideRemaining:
 35295                           	opt stack 17
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;sw_timer.c: 67: uint16_t tmrVal;
 35299                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35300                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35301                           
 35302                           ; BSR set to: 0
 35303                           ;incstack = 0
 35304  005F9E  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35305  005FA0  1058               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35306  005FA2  1057               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35307  005FA4  E104               	bnz	u12730
 35308  005FA6  0E0B               	movlw	11
 35309  005FA8  5C56               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35310  005FAA  A0D8               	btfss	status,0,c
 35311  005FAC  0012               	return	
 35312  005FAE                     u12730:
 35313                           
 35314                           ; BSR set to: 0
 35315                           ;sw_timer.c: 72: {
 35316                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35317  005FAE  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35318  005FB0  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35319  005FB2  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35320  005FB4  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35321  005FB6  5058               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35322  005FB8  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35323  005FBA  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35324  005FBC  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35325  005FBE  B0D8               	btfsc	status,0,c
 35326  005FC0  0012               	return	
 35327                           
 35328                           ; BSR set to: 0
 35329                           ;sw_timer.c: 74: {
 35330                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35331  005FC2  C06E  F056         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35332  005FC6  C06F  F057         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35333  005FCA  C070  F058         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35334  005FCE  C071  F059         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35335                           
 35336                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35337  005FD2  C0EC  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35338  005FD6  C0ED  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35339                           
 35340                           ; BSR set to: 0
 35341                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35342  005FDA  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35343  005FDC  0800               	sublw	0
 35344  005FDE  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 35345  005FE0  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35346  005FE2  A0D8               	btfss	status,0,c
 35347  005FE4  2AE8               	incf	wreg,f,c
 35348  005FE6  0800               	sublw	0
 35349  005FE8  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35353  005FEA  C0EC  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35354  005FEE  C0ED  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35355  005FF2  ECC1  F036         	call	_TMR_SwapTimer	;wreg free
 35356  005FF6  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35357  005FFA  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35358                           
 35359                           ; BSR set to: 0
 35360                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35361  005FFE  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35362  006000  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35363  006002  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35364  006004  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35365  006006  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35366  006008  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35367  00600A  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35368  00600C  263A               	addwf	_ticksAdded,f,c	;volatile
 35369  00600E  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35370  006010  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 35371  006012  0E00               	movlw	0
 35372  006014  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 35373  006016  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 35374                           
 35375                           ; BSR set to: 0
 35376  006018  0C00               	retlw	0	;funcret
 35377  00601A                     __end_of_TMR_OverrideRemaining:
 35378                           	opt stack 0
 35379                           tosu	equ	0xFFF
 35380                           tosh	equ	0xFFE
 35381                           tosl	equ	0xFFD
 35382                           pclath	equ	0xFFA
 35383                           tblptru	equ	0xFF8
 35384                           tblptrh	equ	0xFF7
 35385                           tblptrl	equ	0xFF6
 35386                           tablat	equ	0xFF5
 35387                           prodh	equ	0xFF4
 35388                           prodl	equ	0xFF3
 35389                           intcon	equ	0xFF2
 35390                           intcon2	equ	0xFF1
 35391                           intcon3	equ	0xFF0
 35392                           indf0	equ	0xFEF
 35393                           postinc0	equ	0xFEE
 35394                           plusw0	equ	0xFEB
 35395                           fsr0h	equ	0xFEA
 35396                           fsr0l	equ	0xFE9
 35397                           wreg	equ	0xFE8
 35398                           postinc1	equ	0xFE6
 35399                           postdec1	equ	0xFE5
 35400                           plusw1	equ	0xFE3
 35401                           fsr1h	equ	0xFE2
 35402                           fsr1l	equ	0xFE1
 35403                           indf2	equ	0xFDF
 35404                           postinc2	equ	0xFDE
 35405                           postdec2	equ	0xFDD
 35406                           plusw2	equ	0xFDB
 35407                           fsr2h	equ	0xFDA
 35408                           fsr2l	equ	0xFD9
 35409                           status	equ	0xFD8
 35410                           
 35411 ;; *************** function _TMR_SwapTimer *****************
 35412 ;; Defined at:
 35413 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35414 ;; Parameters:    Size  Location     Type
 35415 ;;  timerVal        2   12[BANK0 ] unsigned int 
 35416 ;; Auto vars:     Size  Location     Type
 35417 ;;		None
 35418 ;; Return value:  Size  Location     Type
 35419 ;;                  2   12[BANK0 ] unsigned int 
 35420 ;; Registers used:
 35421 ;;		wreg, status,2, status,0, cstack
 35422 ;; Tracked objects:
 35423 ;;		On entry : F/0
 35424 ;;		On exit  : F/0
 35425 ;;		Unchanged: 0/0
 35426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35431 ;;Total ram usage:        2 bytes
 35432 ;; Hardware stack levels used:    1
 35433 ;; Hardware stack levels required when called:    8
 35434 ;; This function calls:
 35435 ;;		_TMR1_ReadTimer
 35436 ;;		_TMR1_WriteTimer
 35437 ;; This function is called by:
 35438 ;;		_TMR_OverrideRemaining
 35439 ;; This function uses a non-reentrant model
 35440 ;;
 35441                           
 35442                           	psect	text188
 35443  006D82                     __ptext188:
 35444                           	opt stack 0
 35445  006D82                     _TMR_SwapTimer:
 35446                           	opt stack 17
 35447                           
 35448                           ; BSR set to: 0
 35449                           ;sw_timer.c: 114: static uint16_t oldVal;
 35450                           ;sw_timer.c: 115: static uint16_t retVal;
 35451                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35452                           
 35453                           ; BSR set to: 0
 35454                           ;incstack = 0
 35455  006D82  EC3B  F03A         	call	_TMR1_ReadTimer	;wreg free
 35456  006D86  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35457  006D8A  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35458  006D8E                     l11921:
 35459                           
 35460                           ; BSR set to: 0
 35461  006D8E  EC3B  F03A         	call	_TMR1_ReadTimer	;wreg free
 35462  006D92  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35463  006D94  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35464  006D96  E103               	bnz	u12520
 35465  006D98  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35466  006D9A  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35467  006D9C  E0F8               	bz	l11921
 35468  006D9E                     u12520:
 35469                           
 35470                           ; BSR set to: 0
 35471                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35472  006D9E  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35473  006DA2  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35474  006DA6  EC67  F03A         	call	_TMR1_WriteTimer	;wreg free
 35475                           
 35476                           ; BSR set to: 0
 35477                           ;sw_timer.c: 128: oldVal++;
 35478  006DAA  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35479  006DAC  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;sw_timer.c: 130: retVal = oldVal;
 35483  006DAE  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35484  006DB2  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35485                           
 35486                           ; BSR set to: 0
 35487                           ;sw_timer.c: 132: return retVal;
 35488  006DB6  C042  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35489  006DBA  C043  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35490                           
 35491                           ; BSR set to: 0
 35492  006DBE  0012               	return		;funcret
 35493  006DC0                     __end_of_TMR_SwapTimer:
 35494                           	opt stack 0
 35495                           tosu	equ	0xFFF
 35496                           tosh	equ	0xFFE
 35497                           tosl	equ	0xFFD
 35498                           pclath	equ	0xFFA
 35499                           tblptru	equ	0xFF8
 35500                           tblptrh	equ	0xFF7
 35501                           tblptrl	equ	0xFF6
 35502                           tablat	equ	0xFF5
 35503                           prodh	equ	0xFF4
 35504                           prodl	equ	0xFF3
 35505                           intcon	equ	0xFF2
 35506                           intcon2	equ	0xFF1
 35507                           intcon3	equ	0xFF0
 35508                           indf0	equ	0xFEF
 35509                           postinc0	equ	0xFEE
 35510                           plusw0	equ	0xFEB
 35511                           fsr0h	equ	0xFEA
 35512                           fsr0l	equ	0xFE9
 35513                           wreg	equ	0xFE8
 35514                           postinc1	equ	0xFE6
 35515                           postdec1	equ	0xFE5
 35516                           plusw1	equ	0xFE3
 35517                           fsr1h	equ	0xFE2
 35518                           fsr1l	equ	0xFE1
 35519                           indf2	equ	0xFDF
 35520                           postinc2	equ	0xFDE
 35521                           postdec2	equ	0xFDD
 35522                           plusw2	equ	0xFDB
 35523                           fsr2h	equ	0xFDA
 35524                           fsr2l	equ	0xFD9
 35525                           status	equ	0xFD8
 35526                           
 35527 ;; *************** function _TMR1_WriteTimer *****************
 35528 ;; Defined at:
 35529 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 35530 ;; Parameters:    Size  Location     Type
 35531 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35532 ;; Auto vars:     Size  Location     Type
 35533 ;;		None
 35534 ;; Return value:  Size  Location     Type
 35535 ;;                  1    wreg      void 
 35536 ;; Registers used:
 35537 ;;		None
 35538 ;; Tracked objects:
 35539 ;;		On entry : F/0
 35540 ;;		On exit  : F/0
 35541 ;;		Unchanged: F/0
 35542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35543 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35546 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35547 ;;Total ram usage:        2 bytes
 35548 ;; Hardware stack levels used:    1
 35549 ;; Hardware stack levels required when called:    7
 35550 ;; This function calls:
 35551 ;;		Nothing
 35552 ;; This function is called by:
 35553 ;;		_TMR_SwapTimer
 35554 ;; This function uses a non-reentrant model
 35555 ;;
 35556                           
 35557                           	psect	text189
 35558  0074CE                     __ptext189:
 35559                           	opt stack 0
 35560  0074CE                     _TMR1_WriteTimer:
 35561                           	opt stack 17
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 35565                           
 35566                           ; BSR set to: 0
 35567                           ;incstack = 0
 35568  0074CE  A4CD               	btfss	4045,2,c	;volatile
 35569  0074D0  D007               	goto	l1347
 35570                           
 35571                           ; BSR set to: 0
 35572                           ;tmr1.c: 123: {
 35573                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 35574  0074D2  90CD               	bcf	4045,0,c	;volatile
 35575                           
 35576                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 35577  0074D4  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35578                           
 35579                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 35580  0074D8  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35581                           
 35582                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 35583  0074DC  80CD               	bsf	4045,0,c	;volatile
 35584                           
 35585                           ;tmr1.c: 133: }
 35586  0074DE  0012               	return	
 35587  0074E0                     l1347:
 35588                           
 35589                           ; BSR set to: 0
 35590                           ;tmr1.c: 134: else
 35591                           ;tmr1.c: 135: {
 35592                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 35593  0074E0  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35594                           
 35595                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 35596  0074E4  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35597                           
 35598                           ; BSR set to: 0
 35599  0074E8  0012               	return		;funcret
 35600  0074EA                     __end_of_TMR1_WriteTimer:
 35601                           	opt stack 0
 35602                           tosu	equ	0xFFF
 35603                           tosh	equ	0xFFE
 35604                           tosl	equ	0xFFD
 35605                           pclath	equ	0xFFA
 35606                           tblptru	equ	0xFF8
 35607                           tblptrh	equ	0xFF7
 35608                           tblptrl	equ	0xFF6
 35609                           tablat	equ	0xFF5
 35610                           prodh	equ	0xFF4
 35611                           prodl	equ	0xFF3
 35612                           intcon	equ	0xFF2
 35613                           intcon2	equ	0xFF1
 35614                           intcon3	equ	0xFF0
 35615                           indf0	equ	0xFEF
 35616                           postinc0	equ	0xFEE
 35617                           plusw0	equ	0xFEB
 35618                           fsr0h	equ	0xFEA
 35619                           fsr0l	equ	0xFE9
 35620                           wreg	equ	0xFE8
 35621                           postinc1	equ	0xFE6
 35622                           postdec1	equ	0xFE5
 35623                           plusw1	equ	0xFE3
 35624                           fsr1h	equ	0xFE2
 35625                           fsr1l	equ	0xFE1
 35626                           indf2	equ	0xFDF
 35627                           postinc2	equ	0xFDE
 35628                           postdec2	equ	0xFDD
 35629                           plusw2	equ	0xFDB
 35630                           fsr2h	equ	0xFDA
 35631                           fsr2l	equ	0xFD9
 35632                           status	equ	0xFD8
 35633                           
 35634 ;; *************** function _SwTimersInterrupt *****************
 35635 ;; Defined at:
 35636 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35637 ;; Parameters:    Size  Location     Type
 35638 ;;		None
 35639 ;; Auto vars:     Size  Location     Type
 35640 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 35641 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 35642 ;;  i               1   44[BANK0 ] unsigned char 
 35643 ;; Return value:  Size  Location     Type
 35644 ;;                  4   28[BANK0 ] unsigned long 
 35645 ;; Registers used:
 35646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35647 ;; Tracked objects:
 35648 ;;		On entry : 0/0
 35649 ;;		On exit  : F/0
 35650 ;;		Unchanged: 0/0
 35651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35653 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35655 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35656 ;;Total ram usage:       17 bytes
 35657 ;; Hardware stack levels used:    1
 35658 ;; Hardware stack levels required when called:    9
 35659 ;; This function calls:
 35660 ;;		_TMR_GetDeltaTime
 35661 ;; This function is called by:
 35662 ;;		_SwTimerReadValue
 35663 ;;		_SwTimerStart
 35664 ;; This function uses a non-reentrant model
 35665 ;;
 35666                           
 35667                           	psect	text190
 35668  004B4E                     __ptext190:
 35669                           	opt stack 0
 35670  004B4E                     _SwTimersInterrupt:
 35671                           	opt stack 17
 35672                           
 35673                           ;sw_timer.c: 289: uint8_t i;
 35674                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35675                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35676                           
 35677                           ; BSR set to: 0
 35678                           ;incstack = 0
 35679  004B4E  0100               	movlb	0	; () banked
 35680  004B50  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35681  004B52  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35682  004B54  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35683  004B56  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35684                           
 35685                           ; BSR set to: 0
 35686                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35687  004B58  EC95  F026         	call	_TMR_GetDeltaTime	;wreg free
 35688  004B5C  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35689  004B60  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35690  004B64  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35691  004B68  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35692                           
 35693                           ; BSR set to: 0
 35694                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35695  004B6C  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 35696  004B6E  D05A               	goto	l12155
 35697  004B70                     l12143:
 35698                           
 35699                           ; BSR set to: 0
 35700                           ;sw_timer.c: 298: {
 35701                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35702  004B70  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35703  004B72  0D08               	mullw	8
 35704  004B74  0E04               	movlw	low (_swTimers+4)
 35705  004B76  24F3               	addwf	prodl,w,c
 35706  004B78  6ED9               	movwf	fsr2l,c
 35707  004B7A  0E03               	movlw	high (_swTimers+4)
 35708  004B7C  20F4               	addwfc	prodh,w,c
 35709  004B7E  6EDA               	movwf	fsr2h,c
 35710  004B80  04DE               	decf	postinc2,w,c
 35711  004B82  E14F               	bnz	l12153
 35712                           
 35713                           ; BSR set to: 0
 35714                           ;sw_timer.c: 302: {
 35715                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35716  004B84  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35717  004B86  0D08               	mullw	8
 35718  004B88  0E00               	movlw	low _swTimers
 35719  004B8A  24F3               	addwf	prodl,w,c
 35720  004B8C  6ED9               	movwf	fsr2l,c
 35721  004B8E  0E03               	movlw	high _swTimers
 35722  004B90  20F4               	addwfc	prodh,w,c
 35723  004B92  6EDA               	movwf	fsr2h,c
 35724  004B94  50DE               	movf	postinc2,w,c
 35725  004B96  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35726  004B98  50DE               	movf	postinc2,w,c
 35727  004B9A  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35728  004B9C  50DE               	movf	postinc2,w,c
 35729  004B9E  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35730  004BA0  50DE               	movf	postinc2,w,c
 35731  004BA2  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35732  004BA4  E30D               	bnc	l12149
 35733                           
 35734                           ; BSR set to: 0
 35735                           ;sw_timer.c: 304: {
 35736                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35737  004BA6  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35738  004BA8  0D08               	mullw	8
 35739  004BAA  0E00               	movlw	low _swTimers
 35740  004BAC  24F3               	addwf	prodl,w,c
 35741  004BAE  6ED9               	movwf	fsr2l,c
 35742  004BB0  0E03               	movlw	high _swTimers
 35743  004BB2  20F4               	addwfc	prodh,w,c
 35744  004BB4  6EDA               	movwf	fsr2h,c
 35745  004BB6  6ADE               	clrf	postinc2,c
 35746  004BB8  6ADE               	clrf	postinc2,c
 35747  004BBA  6ADE               	clrf	postinc2,c
 35748  004BBC  6ADD               	clrf	postdec2,c
 35749                           
 35750                           ;sw_timer.c: 306: }
 35751  004BBE  D031               	goto	l12153
 35752  004BC0                     l12149:
 35753                           
 35754                           ; BSR set to: 0
 35755                           ;sw_timer.c: 307: else
 35756                           ;sw_timer.c: 308: {
 35757                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35758  004BC0  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35759  004BC2  0D08               	mullw	8
 35760  004BC4  0E00               	movlw	low _swTimers
 35761  004BC6  24F3               	addwf	prodl,w,c
 35762  004BC8  6ED9               	movwf	fsr2l,c
 35763  004BCA  0E03               	movlw	high _swTimers
 35764  004BCC  20F4               	addwfc	prodh,w,c
 35765  004BCE  6EDA               	movwf	fsr2h,c
 35766  004BD0  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35767  004BD2  5EDE               	subwf	postinc2,f,c
 35768  004BD4  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35769  004BD6  5ADE               	subwfb	postinc2,f,c
 35770  004BD8  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35771  004BDA  5ADE               	subwfb	postinc2,f,c
 35772  004BDC  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35773  004BDE  5ADE               	subwfb	postinc2,f,c
 35774                           
 35775                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35776  004BE0  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35777  004BE2  0D08               	mullw	8
 35778  004BE4  0E00               	movlw	low _swTimers
 35779  004BE6  24F3               	addwf	prodl,w,c
 35780  004BE8  6ED9               	movwf	fsr2l,c
 35781  004BEA  0E03               	movlw	high _swTimers
 35782  004BEC  20F4               	addwfc	prodh,w,c
 35783  004BEE  6EDA               	movwf	fsr2h,c
 35784  004BF0  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35785  004BF2  5CDE               	subwf	postinc2,w,c
 35786  004BF4  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35787  004BF6  58DE               	subwfb	postinc2,w,c
 35788  004BF8  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35789  004BFA  58DE               	subwfb	postinc2,w,c
 35790  004BFC  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35791  004BFE  58DE               	subwfb	postinc2,w,c
 35792  004C00  E210               	bc	l12153
 35793                           
 35794                           ; BSR set to: 0
 35795                           ;sw_timer.c: 313: {
 35796                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35797  004C02  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35798  004C04  0D08               	mullw	8
 35799  004C06  0E00               	movlw	low _swTimers
 35800  004C08  24F3               	addwf	prodl,w,c
 35801  004C0A  6ED9               	movwf	fsr2l,c
 35802  004C0C  0E03               	movlw	high _swTimers
 35803  004C0E  20F4               	addwfc	prodh,w,c
 35804  004C10  6EDA               	movwf	fsr2h,c
 35805  004C12  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 35806  004C16  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 35807  004C1A  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 35808  004C1E  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 35809  004C22                     l12153:
 35810                           
 35811                           ; BSR set to: 0
 35812  004C22  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 35813  004C24                     l12155:
 35814                           
 35815                           ; BSR set to: 0
 35816  004C24  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 35817  004C26  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 35818  004C28  E3A3               	bnc	l12143
 35819                           
 35820                           ; BSR set to: 0
 35821                           ;sw_timer.c: 315: }
 35822                           ;sw_timer.c: 316: }
 35823                           ;sw_timer.c: 317: }
 35824                           ;sw_timer.c: 318: }
 35825                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 35826  004C2A  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 35827  004C2E  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 35828  004C32  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 35829  004C36  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 35830                           
 35831                           ; BSR set to: 0
 35832  004C3A  0012               	return		;funcret
 35833  004C3C                     __end_of_SwTimersInterrupt:
 35834                           	opt stack 0
 35835                           tosu	equ	0xFFF
 35836                           tosh	equ	0xFFE
 35837                           tosl	equ	0xFFD
 35838                           pclath	equ	0xFFA
 35839                           tblptru	equ	0xFF8
 35840                           tblptrh	equ	0xFF7
 35841                           tblptrl	equ	0xFF6
 35842                           tablat	equ	0xFF5
 35843                           prodh	equ	0xFF4
 35844                           prodl	equ	0xFF3
 35845                           intcon	equ	0xFF2
 35846                           intcon2	equ	0xFF1
 35847                           intcon3	equ	0xFF0
 35848                           indf0	equ	0xFEF
 35849                           postinc0	equ	0xFEE
 35850                           plusw0	equ	0xFEB
 35851                           fsr0h	equ	0xFEA
 35852                           fsr0l	equ	0xFE9
 35853                           wreg	equ	0xFE8
 35854                           postinc1	equ	0xFE6
 35855                           postdec1	equ	0xFE5
 35856                           plusw1	equ	0xFE3
 35857                           fsr1h	equ	0xFE2
 35858                           fsr1l	equ	0xFE1
 35859                           indf2	equ	0xFDF
 35860                           postinc2	equ	0xFDE
 35861                           postdec2	equ	0xFDD
 35862                           plusw2	equ	0xFDB
 35863                           fsr2h	equ	0xFDA
 35864                           fsr2l	equ	0xFD9
 35865                           status	equ	0xFD8
 35866                           
 35867 ;; *************** function _TMR_GetDeltaTime *****************
 35868 ;; Defined at:
 35869 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35870 ;; Parameters:    Size  Location     Type
 35871 ;;		None
 35872 ;; Auto vars:     Size  Location     Type
 35873 ;;		None
 35874 ;; Return value:  Size  Location     Type
 35875 ;;                  4   12[BANK0 ] unsigned long 
 35876 ;; Registers used:
 35877 ;;		wreg, status,2, status,0, cstack
 35878 ;; Tracked objects:
 35879 ;;		On entry : F/0
 35880 ;;		On exit  : F/0
 35881 ;;		Unchanged: 0/0
 35882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35885 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35886 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35887 ;;Total ram usage:       16 bytes
 35888 ;; Hardware stack levels used:    1
 35889 ;; Hardware stack levels required when called:    8
 35890 ;; This function calls:
 35891 ;;		_TMR1_ReadTimer
 35892 ;; This function is called by:
 35893 ;;		_SwTimersInterrupt
 35894 ;; This function uses a non-reentrant model
 35895 ;;
 35896                           
 35897                           	psect	text191
 35898  004D2A                     __ptext191:
 35899                           	opt stack 0
 35900  004D2A                     _TMR_GetDeltaTime:
 35901                           	opt stack 17
 35902                           
 35903                           ; BSR set to: 0
 35904                           ;sw_timer.c: 90: static uint32_t retVal;
 35905                           ;sw_timer.c: 91: static uint16_t tmrVal;
 35906                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 35907                           
 35908                           ; BSR set to: 0
 35909                           ;incstack = 0
 35910  004D2A  EC3B  F03A         	call	_TMR1_ReadTimer	;wreg free
 35911  004D2E  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 35912  004D32  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 35913                           
 35914                           ; BSR set to: 0
 35915                           ;sw_timer.c: 95: if (timerOverflow == 1)
 35916  004D36  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 35917  004D38  E13D               	bnz	l11947
 35918                           
 35919                           ; BSR set to: 0
 35920                           ;sw_timer.c: 96: {
 35921                           ;sw_timer.c: 97: timerOverflow = 0;
 35922  004D3A  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 35923                           
 35924                           ; BSR set to: 0
 35925                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 35926  004D3C  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 35927  004D3E  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 35928  004D40  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 35929  004D42  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 35930  004D44  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 35931  004D46  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 35932  004D48  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 35933  004D4A  A0D8               	btfss	status,0,c
 35934  004D4C  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 35935  004D4E  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35936  004D50  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 35937  004D52  5036               	movf	_ticksAccounted,w,c	;volatile
 35938  004D54  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 35939  004D56  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 35940  004D58  5037               	movf	_ticksAccounted+1,w,c	;volatile
 35941  004D5A  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 35942  004D5C  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 35943  004D5E  5038               	movf	_ticksAccounted+2,w,c	;volatile
 35944  004D60  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35945  004D62  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 35946  004D64  5039               	movf	_ticksAccounted+3,w,c	;volatile
 35947  004D66  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 35948  004D68  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 35949  004D6A  503A               	movf	_ticksAdded,w,c	;volatile
 35950  004D6C  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 35951  004D6E  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 35952  004D70  503B               	movf	_ticksAdded+1,w,c	;volatile
 35953  004D72  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 35954  004D74  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 35955  004D76  503C               	movf	_ticksAdded+2,w,c	;volatile
 35956  004D78  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 35957  004D7A  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 35958  004D7C  503D               	movf	_ticksAdded+3,w,c	;volatile
 35959  004D7E  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 35960  004D80  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 35961  004D82  0E00               	movlw	0
 35962  004D84  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 35963  004D86  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 35964  004D88  0E00               	movlw	0
 35965  004D8A  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 35966  004D8C  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 35967  004D8E  0E01               	movlw	1
 35968  004D90  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 35969  004D92  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 35970  004D94  0E00               	movlw	0
 35971  004D96  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 35972  004D98  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 35973                           
 35974                           ; BSR set to: 0
 35975                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 35976  004D9A  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 35977  004D9E  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 35978  004DA2  6A38               	clrf	_ticksAccounted+2,c	;volatile
 35979  004DA4  6A39               	clrf	_ticksAccounted+3,c	;volatile
 35980                           
 35981                           ; BSR set to: 0
 35982                           ;sw_timer.c: 100: ticksAdded = 0;
 35983  004DA6  6A3A               	clrf	_ticksAdded,c	;volatile
 35984  004DA8  6A3B               	clrf	_ticksAdded+1,c	;volatile
 35985  004DAA  6A3C               	clrf	_ticksAdded+2,c	;volatile
 35986  004DAC  6A3D               	clrf	_ticksAdded+3,c	;volatile
 35987                           
 35988                           ; BSR set to: 0
 35989                           ;sw_timer.c: 101: reloadVal = 0;
 35990  004DAE  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 35991  004DB0  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 35992                           
 35993                           ;sw_timer.c: 102: }
 35994  004DB2  D028               	goto	l11949
 35995  004DB4                     l11947:
 35996                           
 35997                           ; BSR set to: 0
 35998                           ;sw_timer.c: 103: else
 35999                           ;sw_timer.c: 104: {
 36000                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 36001  004DB4  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36002  004DB6  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36003  004DB8  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36004  004DBA  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36005  004DBC  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36006  004DBE  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36007  004DC0  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36008  004DC2  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36009  004DC4  5036               	movf	_ticksAccounted,w,c	;volatile
 36010  004DC6  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36011  004DC8  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36012  004DCA  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36013  004DCC  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36014  004DCE  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36015  004DD0  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36016  004DD2  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36017  004DD4  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36018  004DD6  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36019  004DD8  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36020  004DDA  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36021  004DDC  503A               	movf	_ticksAdded,w,c	;volatile
 36022  004DDE  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36023  004DE0  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36024  004DE2  503B               	movf	_ticksAdded+1,w,c	;volatile
 36025  004DE4  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36026  004DE6  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36027  004DE8  503C               	movf	_ticksAdded+2,w,c	;volatile
 36028  004DEA  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36029  004DEC  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36030  004DEE  503D               	movf	_ticksAdded+3,w,c	;volatile
 36031  004DF0  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36032  004DF2  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36033                           
 36034                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36035  004DF4  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 36036  004DF6  2636               	addwf	_ticksAccounted,f,c	;volatile
 36037  004DF8  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 36038  004DFA  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 36039  004DFC  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 36040  004DFE  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 36041  004E00  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 36042  004E02  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 36043  004E04                     l11949:
 36044                           
 36045                           ; BSR set to: 0
 36046                           ;sw_timer.c: 107: }
 36047                           ;sw_timer.c: 109: return retVal;
 36048  004E04  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36049  004E08  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36050  004E0C  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36051  004E10  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36052                           
 36053                           ; BSR set to: 0
 36054  004E14  0012               	return		;funcret
 36055  004E16                     __end_of_TMR_GetDeltaTime:
 36056                           	opt stack 0
 36057                           tosu	equ	0xFFF
 36058                           tosh	equ	0xFFE
 36059                           tosl	equ	0xFFD
 36060                           pclath	equ	0xFFA
 36061                           tblptru	equ	0xFF8
 36062                           tblptrh	equ	0xFF7
 36063                           tblptrl	equ	0xFF6
 36064                           tablat	equ	0xFF5
 36065                           prodh	equ	0xFF4
 36066                           prodl	equ	0xFF3
 36067                           intcon	equ	0xFF2
 36068                           intcon2	equ	0xFF1
 36069                           intcon3	equ	0xFF0
 36070                           indf0	equ	0xFEF
 36071                           postinc0	equ	0xFEE
 36072                           plusw0	equ	0xFEB
 36073                           fsr0h	equ	0xFEA
 36074                           fsr0l	equ	0xFE9
 36075                           wreg	equ	0xFE8
 36076                           postinc1	equ	0xFE6
 36077                           postdec1	equ	0xFE5
 36078                           plusw1	equ	0xFE3
 36079                           fsr1h	equ	0xFE2
 36080                           fsr1l	equ	0xFE1
 36081                           indf2	equ	0xFDF
 36082                           postinc2	equ	0xFDE
 36083                           postdec2	equ	0xFDD
 36084                           plusw2	equ	0xFDB
 36085                           fsr2h	equ	0xFDA
 36086                           fsr2l	equ	0xFD9
 36087                           status	equ	0xFD8
 36088                           
 36089 ;; *************** function _TMR1_ReadTimer *****************
 36090 ;; Defined at:
 36091 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 36092 ;; Parameters:    Size  Location     Type
 36093 ;;		None
 36094 ;; Auto vars:     Size  Location     Type
 36095 ;;  readVal         2    8[BANK0 ] unsigned int 
 36096 ;;  readValLow      1   11[BANK0 ] unsigned char 
 36097 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 36098 ;; Return value:  Size  Location     Type
 36099 ;;                  2    4[BANK0 ] unsigned int 
 36100 ;; Registers used:
 36101 ;;		wreg, status,2
 36102 ;; Tracked objects:
 36103 ;;		On entry : F/0
 36104 ;;		On exit  : F/0
 36105 ;;		Unchanged: 0/0
 36106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36110 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36111 ;;Total ram usage:        8 bytes
 36112 ;; Hardware stack levels used:    1
 36113 ;; Hardware stack levels required when called:    7
 36114 ;; This function calls:
 36115 ;;		Nothing
 36116 ;; This function is called by:
 36117 ;;		_TMR_GetDeltaTime
 36118 ;;		_TMR_SwapTimer
 36119 ;; This function uses a non-reentrant model
 36120 ;;
 36121                           
 36122                           	psect	text192
 36123  007476                     __ptext192:
 36124                           	opt stack 0
 36125  007476                     _TMR1_ReadTimer:
 36126                           	opt stack 17
 36127                           
 36128                           ; BSR set to: 0
 36129                           ;tmr1.c: 108: uint16_t readVal;
 36130                           ;tmr1.c: 109: uint8_t readValHigh;
 36131                           ;tmr1.c: 110: uint8_t readValLow;
 36132                           ;tmr1.c: 112: readValLow = TMR1L;
 36133                           
 36134                           ; BSR set to: 0
 36135                           ;incstack = 0
 36136  007476  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36137                           
 36138                           ;tmr1.c: 113: readValHigh = TMR1H;
 36139  00747A  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36140                           
 36141                           ; BSR set to: 0
 36142                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36143  00747E  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36144  007480  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 36145  007482  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36146  007484  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36147  007486  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36148                           
 36149                           ; BSR set to: 0
 36150                           ;tmr1.c: 117: return readVal;
 36151  00748A  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36152  00748E  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36153                           
 36154                           ; BSR set to: 0
 36155  007492  0012               	return		;funcret
 36156  007494                     __end_of_TMR1_ReadTimer:
 36157                           	opt stack 0
 36158                           tosu	equ	0xFFF
 36159                           tosh	equ	0xFFE
 36160                           tosl	equ	0xFFD
 36161                           pclath	equ	0xFFA
 36162                           tblptru	equ	0xFF8
 36163                           tblptrh	equ	0xFF7
 36164                           tblptrl	equ	0xFF6
 36165                           tablat	equ	0xFF5
 36166                           prodh	equ	0xFF4
 36167                           prodl	equ	0xFF3
 36168                           intcon	equ	0xFF2
 36169                           intcon2	equ	0xFF1
 36170                           intcon3	equ	0xFF0
 36171                           indf0	equ	0xFEF
 36172                           postinc0	equ	0xFEE
 36173                           plusw0	equ	0xFEB
 36174                           fsr0h	equ	0xFEA
 36175                           fsr0l	equ	0xFE9
 36176                           wreg	equ	0xFE8
 36177                           postinc1	equ	0xFE6
 36178                           postdec1	equ	0xFE5
 36179                           plusw1	equ	0xFE3
 36180                           fsr1h	equ	0xFE2
 36181                           fsr1l	equ	0xFE1
 36182                           indf2	equ	0xFDF
 36183                           postinc2	equ	0xFDE
 36184                           postdec2	equ	0xFDD
 36185                           plusw2	equ	0xFDB
 36186                           fsr2h	equ	0xFDA
 36187                           fsr2l	equ	0xFD9
 36188                           status	equ	0xFD8
 36189                           
 36190 ;; *************** function _SwTimerSetTimeout *****************
 36191 ;; Defined at:
 36192 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36193 ;; Parameters:    Size  Location     Type
 36194 ;;  timerId         1    wreg     unsigned char 
 36195 ;;  timeout         4   17[BANK0 ] unsigned long 
 36196 ;; Auto vars:     Size  Location     Type
 36197 ;;  timerId         1   25[BANK0 ] unsigned char 
 36198 ;; Return value:  Size  Location     Type
 36199 ;;                  1    wreg      void 
 36200 ;; Registers used:
 36201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36202 ;; Tracked objects:
 36203 ;;		On entry : C/2
 36204 ;;		On exit  : F/0
 36205 ;;		Unchanged: 0/0
 36206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36210 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36211 ;;Total ram usage:        9 bytes
 36212 ;; Hardware stack levels used:    1
 36213 ;; Hardware stack levels required when called:    7
 36214 ;; This function calls:
 36215 ;;		Nothing
 36216 ;; This function is called by:
 36217 ;;		_RADIO_Transmit
 36218 ;;		_RADIO_ReceiveStart
 36219 ;;		_LORAWAN_TxDone
 36220 ;;		_LORAWAN_RxTimeout
 36221 ;;		_StartReTxTimer
 36222 ;;		_DutyCycleCallback
 36223 ;;		_LORAWAN_Join
 36224 ;;		_LORAWAN_LinkCheckConfigure
 36225 ;;		_LORAWAN_LinkCheckCallback
 36226 ;;		_UpdateRetransmissionAckTimeoutState
 36227 ;;		_UpdateJoinSuccessState
 36228 ;; This function uses a non-reentrant model
 36229 ;;
 36230                           
 36231                           	psect	text193
 36232  006CC4                     __ptext193:
 36233                           	opt stack 0
 36234  006CC4                     _SwTimerSetTimeout:
 36235                           	opt stack 20
 36236                           
 36237                           ; BSR set to: 0
 36238                           ;incstack = 0
 36239                           ;SwTimerSetTimeout@timerId stored from wreg
 36240  006CC4  0100               	movlb	0	; () banked
 36241  006CC6  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 36242                           
 36243                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 36244  006CC8  9EF2               	bcf	intcon,7,c	;volatile
 36245                           
 36246                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 36247  006CCA  0EE0               	movlw	224
 36248  006CCC  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 36249  006CCE  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 36250  006CD0  0EFF               	movlw	255
 36251  006CD2  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 36252  006CD4  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 36253  006CD6  0EFF               	movlw	255
 36254  006CD8  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 36255  006CDA  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 36256  006CDC  0EFF               	movlw	255
 36257  006CDE  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 36258  006CE0  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 36259  006CE2  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 36260  006CE4  0D08               	mullw	8
 36261  006CE6  0E00               	movlw	low _swTimers
 36262  006CE8  24F3               	addwf	prodl,w,c
 36263  006CEA  6ED9               	movwf	fsr2l,c
 36264  006CEC  0E03               	movlw	high _swTimers
 36265  006CEE  20F4               	addwfc	prodh,w,c
 36266  006CF0  6EDA               	movwf	fsr2h,c
 36267  006CF2  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 36268  006CF6  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36269  006CFA  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36270  006CFE  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36271                           
 36272                           ; BSR set to: 0
 36273                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36274  006D02  8EF2               	bsf	intcon,7,c	;volatile
 36275                           
 36276                           ; BSR set to: 0
 36277  006D04  0012               	return		;funcret
 36278  006D06                     __end_of_SwTimerSetTimeout:
 36279                           	opt stack 0
 36280                           tosu	equ	0xFFF
 36281                           tosh	equ	0xFFE
 36282                           tosl	equ	0xFFD
 36283                           pclath	equ	0xFFA
 36284                           tblptru	equ	0xFF8
 36285                           tblptrh	equ	0xFF7
 36286                           tblptrl	equ	0xFF6
 36287                           tablat	equ	0xFF5
 36288                           prodh	equ	0xFF4
 36289                           prodl	equ	0xFF3
 36290                           intcon	equ	0xFF2
 36291                           intcon2	equ	0xFF1
 36292                           intcon3	equ	0xFF0
 36293                           indf0	equ	0xFEF
 36294                           postinc0	equ	0xFEE
 36295                           plusw0	equ	0xFEB
 36296                           fsr0h	equ	0xFEA
 36297                           fsr0l	equ	0xFE9
 36298                           wreg	equ	0xFE8
 36299                           postinc1	equ	0xFE6
 36300                           postdec1	equ	0xFE5
 36301                           plusw1	equ	0xFE3
 36302                           fsr1h	equ	0xFE2
 36303                           fsr1l	equ	0xFE1
 36304                           indf2	equ	0xFDF
 36305                           postinc2	equ	0xFDE
 36306                           postdec2	equ	0xFDD
 36307                           plusw2	equ	0xFDB
 36308                           fsr2h	equ	0xFDA
 36309                           fsr2l	equ	0xFD9
 36310                           status	equ	0xFD8
 36311                           
 36312 ;; *************** function _InitDefault868Channels *****************
 36313 ;; Defined at:
 36314 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36315 ;; Parameters:    Size  Location     Type
 36316 ;;		None
 36317 ;; Auto vars:     Size  Location     Type
 36318 ;;  i               1   14[BANK0 ] unsigned char 
 36319 ;; Return value:  Size  Location     Type
 36320 ;;                  1    wreg      void 
 36321 ;; Registers used:
 36322 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36323 ;; Tracked objects:
 36324 ;;		On entry : F/1
 36325 ;;		On exit  : F/0
 36326 ;;		Unchanged: 0/0
 36327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36331 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36332 ;;Total ram usage:        1 bytes
 36333 ;; Hardware stack levels used:    1
 36334 ;; Hardware stack levels required when called:    8
 36335 ;; This function calls:
 36336 ;;		_memcpy
 36337 ;;		_memset
 36338 ;; This function is called by:
 36339 ;;		_LORAWAN_Reset
 36340 ;; This function uses a non-reentrant model
 36341 ;;
 36342                           
 36343                           	psect	text194
 36344  006378                     __ptext194:
 36345                           	opt stack 0
 36346  006378                     _InitDefault868Channels:
 36347                           	opt stack 20
 36348                           
 36349                           ; BSR set to: 1
 36350                           ;lorawan_eu.c: 981: uint8_t i;
 36351                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36352                           
 36353                           ; BSR set to: 0
 36354                           ;incstack = 0
 36355  006378  0E00               	movlw	low _Channels
 36356  00637A  0100               	movlb	0	; () banked
 36357  00637C  6F64               	movwf	memset@p1& (0+255),b
 36358  00637E  0E04               	movlw	high _Channels
 36359  006380  6F65               	movwf	(memset@p1+1)& (0+255),b
 36360  006382  6B67               	clrf	(memset@c+1)& (0+255),b
 36361  006384  6B66               	clrf	memset@c& (0+255),b
 36362  006386  6B69               	clrf	(memset@n+1)& (0+255),b
 36363  006388  0EE0               	movlw	224
 36364  00638A  6F68               	movwf	memset@n& (0+255),b
 36365  00638C  ECDE  F038         	call	_memset	;wreg free
 36366                           
 36367                           ; BSR set to: 0
 36368                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36369  006390  0E00               	movlw	low _Channels
 36370  006392  6F64               	movwf	memcpy@d1& (0+255),b
 36371  006394  0E04               	movlw	high _Channels
 36372  006396  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36373  006398  0ED2               	movlw	low _DefaultChannels868
 36374  00639A  6F66               	movwf	memcpy@s1& (0+255),b
 36375  00639C  0EFF               	movlw	high _DefaultChannels868
 36376  00639E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36377  0063A0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36378  0063A2  0E2A               	movlw	42
 36379  0063A4  6F68               	movwf	memcpy@n& (0+255),b
 36380  0063A6  EC01  F034         	call	_memcpy	;wreg free
 36381                           
 36382                           ; BSR set to: 0
 36383                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36384  0063AA  0E03               	movlw	3
 36385  0063AC  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36386  0063AE                     l14941:
 36387                           
 36388                           ; BSR set to: 0
 36389                           ;lorawan_eu.c: 986: {
 36390                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36391  0063AE  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36392  0063B0  0D0E               	mullw	14
 36393  0063B2  0E06               	movlw	low (_Channels+6)
 36394  0063B4  24F3               	addwf	prodl,w,c
 36395  0063B6  6ED9               	movwf	fsr2l,c
 36396  0063B8  0E04               	movlw	high (_Channels+6)
 36397  0063BA  20F4               	addwfc	prodh,w,c
 36398  0063BC  6EDA               	movwf	fsr2h,c
 36399  0063BE  68DE               	setf	postinc2,c
 36400  0063C0  68DD               	setf	postdec2,c
 36401                           
 36402                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36403  0063C2  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36404  0063C4  0D0E               	mullw	14
 36405  0063C6  0E05               	movlw	low (_Channels+5)
 36406  0063C8  24F3               	addwf	prodl,w,c
 36407  0063CA  6ED9               	movwf	fsr2l,c
 36408  0063CC  0E04               	movlw	high (_Channels+5)
 36409  0063CE  20F4               	addwfc	prodh,w,c
 36410  0063D0  6EDA               	movwf	fsr2h,c
 36411  0063D2  68DF               	setf	indf2,c
 36412                           
 36413                           ; BSR set to: 0
 36414  0063D4  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36415                           
 36416                           ; BSR set to: 0
 36417  0063D6  0E0F               	movlw	15
 36418  0063D8  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36419  0063DA  D7E9               	goto	l14941
 36420  0063DC  0C0F               	retlw	15
 36421  0063DE                     __end_of_InitDefault868Channels:
 36422                           	opt stack 0
 36423                           tosu	equ	0xFFF
 36424                           tosh	equ	0xFFE
 36425                           tosl	equ	0xFFD
 36426                           pclath	equ	0xFFA
 36427                           tblptru	equ	0xFF8
 36428                           tblptrh	equ	0xFF7
 36429                           tblptrl	equ	0xFF6
 36430                           tablat	equ	0xFF5
 36431                           prodh	equ	0xFF4
 36432                           prodl	equ	0xFF3
 36433                           intcon	equ	0xFF2
 36434                           intcon2	equ	0xFF1
 36435                           intcon3	equ	0xFF0
 36436                           indf0	equ	0xFEF
 36437                           postinc0	equ	0xFEE
 36438                           plusw0	equ	0xFEB
 36439                           fsr0h	equ	0xFEA
 36440                           fsr0l	equ	0xFE9
 36441                           wreg	equ	0xFE8
 36442                           postinc1	equ	0xFE6
 36443                           postdec1	equ	0xFE5
 36444                           plusw1	equ	0xFE3
 36445                           fsr1h	equ	0xFE2
 36446                           fsr1l	equ	0xFE1
 36447                           indf2	equ	0xFDF
 36448                           postinc2	equ	0xFDE
 36449                           postdec2	equ	0xFDD
 36450                           plusw2	equ	0xFDB
 36451                           fsr2h	equ	0xFDA
 36452                           fsr2l	equ	0xFD9
 36453                           status	equ	0xFD8
 36454                           
 36455 ;; *************** function _InitDefault433Channels *****************
 36456 ;; Defined at:
 36457 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36458 ;; Parameters:    Size  Location     Type
 36459 ;;		None
 36460 ;; Auto vars:     Size  Location     Type
 36461 ;;  i               1   14[BANK0 ] unsigned char 
 36462 ;; Return value:  Size  Location     Type
 36463 ;;                  1    wreg      void 
 36464 ;; Registers used:
 36465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36466 ;; Tracked objects:
 36467 ;;		On entry : F/1
 36468 ;;		On exit  : F/0
 36469 ;;		Unchanged: 0/0
 36470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36475 ;;Total ram usage:        1 bytes
 36476 ;; Hardware stack levels used:    1
 36477 ;; Hardware stack levels required when called:    8
 36478 ;; This function calls:
 36479 ;;		_memcpy
 36480 ;;		_memset
 36481 ;; This function is called by:
 36482 ;;		_LORAWAN_Reset
 36483 ;; This function uses a non-reentrant model
 36484 ;;
 36485                           
 36486                           	psect	text195
 36487  0063DE                     __ptext195:
 36488                           	opt stack 0
 36489  0063DE                     _InitDefault433Channels:
 36490                           	opt stack 20
 36491                           
 36492                           ; BSR set to: 1
 36493                           ;lorawan_eu.c: 996: uint8_t i;
 36494                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36495                           
 36496                           ; BSR set to: 0
 36497                           ;incstack = 0
 36498  0063DE  0E00               	movlw	low _Channels
 36499  0063E0  0100               	movlb	0	; () banked
 36500  0063E2  6F64               	movwf	memset@p1& (0+255),b
 36501  0063E4  0E04               	movlw	high _Channels
 36502  0063E6  6F65               	movwf	(memset@p1+1)& (0+255),b
 36503  0063E8  6B67               	clrf	(memset@c+1)& (0+255),b
 36504  0063EA  6B66               	clrf	memset@c& (0+255),b
 36505  0063EC  6B69               	clrf	(memset@n+1)& (0+255),b
 36506  0063EE  0EE0               	movlw	224
 36507  0063F0  6F68               	movwf	memset@n& (0+255),b
 36508  0063F2  ECDE  F038         	call	_memset	;wreg free
 36509                           
 36510                           ; BSR set to: 0
 36511                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36512  0063F6  0E00               	movlw	low _Channels
 36513  0063F8  6F64               	movwf	memcpy@d1& (0+255),b
 36514  0063FA  0E04               	movlw	high _Channels
 36515  0063FC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36516  0063FE  0EA8               	movlw	low _DefaultChannels433
 36517  006400  6F66               	movwf	memcpy@s1& (0+255),b
 36518  006402  0EFF               	movlw	high _DefaultChannels433
 36519  006404  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36520  006406  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36521  006408  0E2A               	movlw	42
 36522  00640A  6F68               	movwf	memcpy@n& (0+255),b
 36523  00640C  EC01  F034         	call	_memcpy	;wreg free
 36524                           
 36525                           ; BSR set to: 0
 36526                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36527  006410  0E03               	movlw	3
 36528  006412  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36529  006414                     l14957:
 36530                           
 36531                           ; BSR set to: 0
 36532                           ;lorawan_eu.c: 1001: {
 36533                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36534  006414  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36535  006416  0D0E               	mullw	14
 36536  006418  0E06               	movlw	low (_Channels+6)
 36537  00641A  24F3               	addwf	prodl,w,c
 36538  00641C  6ED9               	movwf	fsr2l,c
 36539  00641E  0E04               	movlw	high (_Channels+6)
 36540  006420  20F4               	addwfc	prodh,w,c
 36541  006422  6EDA               	movwf	fsr2h,c
 36542  006424  68DE               	setf	postinc2,c
 36543  006426  68DD               	setf	postdec2,c
 36544                           
 36545                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36546  006428  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36547  00642A  0D0E               	mullw	14
 36548  00642C  0E05               	movlw	low (_Channels+5)
 36549  00642E  24F3               	addwf	prodl,w,c
 36550  006430  6ED9               	movwf	fsr2l,c
 36551  006432  0E04               	movlw	high (_Channels+5)
 36552  006434  20F4               	addwfc	prodh,w,c
 36553  006436  6EDA               	movwf	fsr2h,c
 36554  006438  68DF               	setf	indf2,c
 36555                           
 36556                           ; BSR set to: 0
 36557  00643A  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36558                           
 36559                           ; BSR set to: 0
 36560  00643C  0E0F               	movlw	15
 36561  00643E  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36562  006440  D7E9               	goto	l14957
 36563  006442  0C0F               	retlw	15
 36564  006444                     __end_of_InitDefault433Channels:
 36565                           	opt stack 0
 36566                           tosu	equ	0xFFF
 36567                           tosh	equ	0xFFE
 36568                           tosl	equ	0xFFD
 36569                           pclath	equ	0xFFA
 36570                           tblptru	equ	0xFF8
 36571                           tblptrh	equ	0xFF7
 36572                           tblptrl	equ	0xFF6
 36573                           tablat	equ	0xFF5
 36574                           prodh	equ	0xFF4
 36575                           prodl	equ	0xFF3
 36576                           intcon	equ	0xFF2
 36577                           intcon2	equ	0xFF1
 36578                           intcon3	equ	0xFF0
 36579                           indf0	equ	0xFEF
 36580                           postinc0	equ	0xFEE
 36581                           plusw0	equ	0xFEB
 36582                           fsr0h	equ	0xFEA
 36583                           fsr0l	equ	0xFE9
 36584                           wreg	equ	0xFE8
 36585                           postinc1	equ	0xFE6
 36586                           postdec1	equ	0xFE5
 36587                           plusw1	equ	0xFE3
 36588                           fsr1h	equ	0xFE2
 36589                           fsr1l	equ	0xFE1
 36590                           indf2	equ	0xFDF
 36591                           postinc2	equ	0xFDE
 36592                           postdec2	equ	0xFDD
 36593                           plusw2	equ	0xFDB
 36594                           fsr2h	equ	0xFDA
 36595                           fsr2l	equ	0xFD9
 36596                           status	equ	0xFD8
 36597                           
 36598 ;; *************** function _memset *****************
 36599 ;; Defined at:
 36600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36601 ;; Parameters:    Size  Location     Type
 36602 ;;  p1              2    4[BANK0 ] PTR void 
 36603 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36604 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36605 ;;  c               2    6[BANK0 ] int 
 36606 ;;  n               2    8[BANK0 ] unsigned int 
 36607 ;; Auto vars:     Size  Location     Type
 36608 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36609 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36610 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36611 ;; Return value:  Size  Location     Type
 36612 ;;                  2    4[BANK0 ] PTR void 
 36613 ;; Registers used:
 36614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36615 ;; Tracked objects:
 36616 ;;		On entry : F/0
 36617 ;;		On exit  : F/0
 36618 ;;		Unchanged: 0/0
 36619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36620 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36623 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36624 ;;Total ram usage:        8 bytes
 36625 ;; Hardware stack levels used:    1
 36626 ;; Hardware stack levels required when called:    7
 36627 ;; This function calls:
 36628 ;;		Nothing
 36629 ;; This function is called by:
 36630 ;;		_LORAWAN_Reset
 36631 ;;		_InitDefault868Channels
 36632 ;;		_InitDefault433Channels
 36633 ;;		_AESCmac
 36634 ;;		_GenerateSubkey
 36635 ;;		_AssemblePacket
 36636 ;;		_PrepareJoinRequestFrame
 36637 ;;		_PrepareSessionKeys
 36638 ;;		_AssembleEncryptionBlock
 36639 ;; This function uses a non-reentrant model
 36640 ;;
 36641                           
 36642                           	psect	text196
 36643  0071BC                     __ptext196:
 36644                           	opt stack 0
 36645  0071BC                     _memset:
 36646                           	opt stack 20
 36647                           
 36648                           ; BSR set to: 0
 36649                           
 36650                           ; BSR set to: 0
 36651                           ;incstack = 0
 36652  0071BC  C064  F06A         	movff	memset@p1,memset@p
 36653  0071C0  C065  F06B         	movff	memset@p1+1,memset@p+1
 36654  0071C4  D008               	goto	l12353
 36655  0071C6                     l12349:
 36656                           
 36657                           ; BSR set to: 0
 36658  0071C6  C06A  FFD9         	movff	memset@p,fsr2l
 36659  0071CA  C06B  FFDA         	movff	memset@p+1,fsr2h
 36660  0071CE  C066  FFDF         	movff	memset@c,indf2
 36661                           
 36662                           ; BSR set to: 0
 36663  0071D2  4B6A               	infsnz	memset@p& (0+255),f,b
 36664  0071D4  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36665  0071D6                     l12353:
 36666                           
 36667                           ; BSR set to: 0
 36668  0071D6  0768               	decf	memset@n& (0+255),f,b
 36669  0071D8  A0D8               	btfss	status,0,c
 36670  0071DA  0769               	decf	(memset@n+1)& (0+255),f,b
 36671  0071DC  2968               	incf	memset@n& (0+255),w,b
 36672  0071DE  E1F3               	bnz	l12349
 36673  0071E0  2969               	incf	(memset@n+1)& (0+255),w,b
 36674  0071E2  E1F1               	bnz	l12349
 36675                           
 36676                           ; BSR set to: 0
 36677  0071E4  0012               	return		;funcret
 36678  0071E6                     __end_of_memset:
 36679                           	opt stack 0
 36680                           tosu	equ	0xFFF
 36681                           tosh	equ	0xFFE
 36682                           tosl	equ	0xFFD
 36683                           pclath	equ	0xFFA
 36684                           tblptru	equ	0xFF8
 36685                           tblptrh	equ	0xFF7
 36686                           tblptrl	equ	0xFF6
 36687                           tablat	equ	0xFF5
 36688                           prodh	equ	0xFF4
 36689                           prodl	equ	0xFF3
 36690                           intcon	equ	0xFF2
 36691                           intcon2	equ	0xFF1
 36692                           intcon3	equ	0xFF0
 36693                           indf0	equ	0xFEF
 36694                           postinc0	equ	0xFEE
 36695                           plusw0	equ	0xFEB
 36696                           fsr0h	equ	0xFEA
 36697                           fsr0l	equ	0xFE9
 36698                           wreg	equ	0xFE8
 36699                           postinc1	equ	0xFE6
 36700                           postdec1	equ	0xFE5
 36701                           plusw1	equ	0xFE3
 36702                           fsr1h	equ	0xFE2
 36703                           fsr1l	equ	0xFE1
 36704                           indf2	equ	0xFDF
 36705                           postinc2	equ	0xFDE
 36706                           postdec2	equ	0xFDD
 36707                           plusw2	equ	0xFDB
 36708                           fsr2h	equ	0xFDA
 36709                           fsr2l	equ	0xFD9
 36710                           status	equ	0xFD8
 36711                           
 36712 ;; *************** function _memcpy *****************
 36713 ;; Defined at:
 36714 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36715 ;; Parameters:    Size  Location     Type
 36716 ;;  d1              2    4[BANK0 ] PTR void 
 36717 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36718 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36719 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36720 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36721 ;;  s1              2    6[BANK0 ] PTR const void 
 36722 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36723 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36724 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36725 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36726 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36727 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36728 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36729 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36730 ;;		 -> NULL(0), 
 36731 ;;  n               2    8[BANK0 ] unsigned int 
 36732 ;; Auto vars:     Size  Location     Type
 36733 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36734 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36735 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36736 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36737 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36738 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36739 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36740 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36741 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36742 ;;		 -> NULL(0), 
 36743 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36744 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36745 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36746 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36747 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36748 ;; Return value:  Size  Location     Type
 36749 ;;                  2    4[BANK0 ] PTR void 
 36750 ;; Registers used:
 36751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36752 ;; Tracked objects:
 36753 ;;		On entry : F/0
 36754 ;;		On exit  : F/0
 36755 ;;		Unchanged: 0/0
 36756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36757 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36758 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36761 ;;Total ram usage:       10 bytes
 36762 ;; Hardware stack levels used:    1
 36763 ;; Hardware stack levels required when called:    7
 36764 ;; This function calls:
 36765 ;;		Nothing
 36766 ;; This function is called by:
 36767 ;;		_RADIO_SetFSKSyncWord
 36768 ;;		_UpdateCfList
 36769 ;;		_InitDefault868Channels
 36770 ;;		_InitDefault433Channels
 36771 ;;		_AESCmac
 36772 ;;		_LORAWAN_SetNetworkSessionKey
 36773 ;;		_LORAWAN_SetApplicationSessionKey
 36774 ;;		_LORAWAN_RxDone
 36775 ;;		_AssemblePacket
 36776 ;;		_PrepareJoinRequestFrame
 36777 ;;		_PrepareSessionKeys
 36778 ;;		_AssembleEncryptionBlock
 36779 ;;		_ExtractMic
 36780 ;;		_ComputeMic
 36781 ;;		_AESEncodeLoRa
 36782 ;; This function uses a non-reentrant model
 36783 ;;
 36784                           
 36785                           	psect	text197
 36786  006802                     __ptext197:
 36787                           	opt stack 0
 36788  006802                     _memcpy:
 36789                           	opt stack 17
 36790                           
 36791                           ; BSR set to: 0
 36792                           
 36793                           ; BSR set to: 0
 36794                           ;incstack = 0
 36795  006802  C066  F06C         	movff	memcpy@s1,memcpy@s
 36796  006806  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36797  00680A  C064  F06A         	movff	memcpy@d1,memcpy@d
 36798  00680E  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36799  006812  D01B               	goto	l11995
 36800  006814                     l11989:
 36801                           
 36802                           ; BSR set to: 0
 36803  006814  C06C  FFF6         	movff	memcpy@s,tblptrl
 36804  006818  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36805  00681C  0E00               	movlw	low (__mediumconst shr (0+16))
 36806  00681E  6EF8               	movwf	tblptru,c
 36807  006820  C06A  FFD9         	movff	memcpy@d,fsr2l
 36808  006824  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 36809  006828  0E0F               	movlw	(high __ramtop+-1)
 36810  00682A  64F7               	cpfsgt	tblptrh,c
 36811  00682C  D003               	bra	u12567
 36812  00682E  0008               	tblrd		*
 36813  006830  50F5               	movf	tablat,w,c
 36814  006832  D005               	bra	u12560
 36815  006834                     u12567:
 36816  006834  CFF6 FFE9          	movff	tblptrl,fsr0l
 36817  006838  CFF7 FFEA          	movff	tblptrh,fsr0h
 36818  00683C  50EF               	movf	indf0,w,c
 36819  00683E                     u12560:
 36820  00683E  6EDF               	movwf	indf2,c
 36821  006840  0100               	movlb	0	; () banked
 36822  006842  4B6C               	infsnz	memcpy@s& (0+255),f,b
 36823  006844  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 36824                           
 36825                           ; BSR set to: 0
 36826  006846  4B6A               	infsnz	memcpy@d& (0+255),f,b
 36827  006848  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 36828  00684A                     l11995:
 36829                           
 36830                           ; BSR set to: 0
 36831  00684A  0768               	decf	memcpy@n& (0+255),f,b
 36832  00684C  A0D8               	btfss	status,0,c
 36833  00684E  0769               	decf	(memcpy@n+1)& (0+255),f,b
 36834  006850  2968               	incf	memcpy@n& (0+255),w,b
 36835  006852  E1E0               	bnz	l11989
 36836  006854  2969               	incf	(memcpy@n+1)& (0+255),w,b
 36837  006856  E1DE               	bnz	l11989
 36838                           
 36839                           ; BSR set to: 0
 36840  006858  0012               	return		;funcret
 36841  00685A                     __end_of_memcpy:
 36842                           	opt stack 0
 36843                           tosu	equ	0xFFF
 36844                           tosh	equ	0xFFE
 36845                           tosl	equ	0xFFD
 36846                           pclath	equ	0xFFA
 36847                           tblptru	equ	0xFF8
 36848                           tblptrh	equ	0xFF7
 36849                           tblptrl	equ	0xFF6
 36850                           tablat	equ	0xFF5
 36851                           prodh	equ	0xFF4
 36852                           prodl	equ	0xFF3
 36853                           intcon	equ	0xFF2
 36854                           intcon2	equ	0xFF1
 36855                           intcon3	equ	0xFF0
 36856                           indf0	equ	0xFEF
 36857                           postinc0	equ	0xFEE
 36858                           plusw0	equ	0xFEB
 36859                           fsr0h	equ	0xFEA
 36860                           fsr0l	equ	0xFE9
 36861                           wreg	equ	0xFE8
 36862                           postinc1	equ	0xFE6
 36863                           postdec1	equ	0xFE5
 36864                           plusw1	equ	0xFE3
 36865                           fsr1h	equ	0xFE2
 36866                           fsr1l	equ	0xFE1
 36867                           indf2	equ	0xFDF
 36868                           postinc2	equ	0xFDE
 36869                           postdec2	equ	0xFDD
 36870                           plusw2	equ	0xFDB
 36871                           fsr2h	equ	0xFDA
 36872                           fsr2l	equ	0xFD9
 36873                           status	equ	0xFD8
 36874                           
 36875 ;; *************** function _CreateAllSoftwareTimers *****************
 36876 ;; Defined at:
 36877 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36878 ;; Parameters:    Size  Location     Type
 36879 ;;		None
 36880 ;; Auto vars:     Size  Location     Type
 36881 ;;		None
 36882 ;; Return value:  Size  Location     Type
 36883 ;;                  1    wreg      void 
 36884 ;; Registers used:
 36885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36886 ;; Tracked objects:
 36887 ;;		On entry : F/2
 36888 ;;		On exit  : F/2
 36889 ;;		Unchanged: 0/0
 36890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36895 ;;Total ram usage:        0 bytes
 36896 ;; Hardware stack levels used:    1
 36897 ;; Hardware stack levels required when called:    8
 36898 ;; This function calls:
 36899 ;;		_SwTimerCreate
 36900 ;; This function is called by:
 36901 ;;		_LORAWAN_Init
 36902 ;; This function uses a non-reentrant model
 36903 ;;
 36904                           
 36905                           	psect	text198
 36906  0068FE                     __ptext198:
 36907                           	opt stack 0
 36908  0068FE                     _CreateAllSoftwareTimers:
 36909                           	opt stack 21
 36910                           
 36911                           ; BSR set to: 2
 36912                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 36913                           
 36914                           ; BSR set to: 0
 36915                           ;incstack = 0
 36916  0068FE  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36917  006902  0102               	movlb	2	; () banked
 36918  006904  6FE2               	movwf	(_loRa+226)& (0+255),b
 36919                           
 36920                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 36921  006906  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36922  00690A  0102               	movlb	2	; () banked
 36923  00690C  6FE3               	movwf	(_loRa+227)& (0+255),b
 36924                           
 36925                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 36926  00690E  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36927  006912  0102               	movlb	2	; () banked
 36928  006914  6FE4               	movwf	(_loRa+228)& (0+255),b
 36929                           
 36930                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 36931  006916  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36932  00691A  0102               	movlb	2	; () banked
 36933  00691C  6FE5               	movwf	(_loRa+229)& (0+255),b
 36934                           
 36935                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 36936  00691E  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36937  006922  0102               	movlb	2	; () banked
 36938  006924  6FE7               	movwf	(_loRa+231)& (0+255),b
 36939                           
 36940                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 36941  006926  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36942  00692A  0102               	movlb	2	; () banked
 36943  00692C  6FE8               	movwf	(_loRa+232)& (0+255),b
 36944                           
 36945                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 36946  00692E  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36947  006932  0102               	movlb	2	; () banked
 36948  006934  6FE6               	movwf	(_loRa+230)& (0+255),b
 36949                           
 36950                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 36951  006936  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36952  00693A  0102               	movlb	2	; () banked
 36953  00693C  6FEA               	movwf	(_loRa+234)& (0+255),b
 36954                           
 36955                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 36956  00693E  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36957  006942  0102               	movlb	2	; () banked
 36958  006944  6FF3               	movwf	(_loRa+243)& (0+255),b
 36959                           
 36960                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 36961  006946  ECEE  F030         	call	_SwTimerCreate	;wreg free
 36962  00694A  0102               	movlb	2	; () banked
 36963  00694C  6FE9               	movwf	(_loRa+233)& (0+255),b
 36964                           
 36965                           ; BSR set to: 2
 36966  00694E  0012               	return		;funcret
 36967  006950                     __end_of_CreateAllSoftwareTimers:
 36968                           	opt stack 0
 36969                           tosu	equ	0xFFF
 36970                           tosh	equ	0xFFE
 36971                           tosl	equ	0xFFD
 36972                           pclath	equ	0xFFA
 36973                           tblptru	equ	0xFF8
 36974                           tblptrh	equ	0xFF7
 36975                           tblptrl	equ	0xFF6
 36976                           tablat	equ	0xFF5
 36977                           prodh	equ	0xFF4
 36978                           prodl	equ	0xFF3
 36979                           intcon	equ	0xFF2
 36980                           intcon2	equ	0xFF1
 36981                           intcon3	equ	0xFF0
 36982                           indf0	equ	0xFEF
 36983                           postinc0	equ	0xFEE
 36984                           plusw0	equ	0xFEB
 36985                           fsr0h	equ	0xFEA
 36986                           fsr0l	equ	0xFE9
 36987                           wreg	equ	0xFE8
 36988                           postinc1	equ	0xFE6
 36989                           postdec1	equ	0xFE5
 36990                           plusw1	equ	0xFE3
 36991                           fsr1h	equ	0xFE2
 36992                           fsr1l	equ	0xFE1
 36993                           indf2	equ	0xFDF
 36994                           postinc2	equ	0xFDE
 36995                           postdec2	equ	0xFDD
 36996                           plusw2	equ	0xFDB
 36997                           fsr2h	equ	0xFDA
 36998                           fsr2l	equ	0xFD9
 36999                           status	equ	0xFD8
 37000                           
 37001 ;; *************** function _SwTimerCreate *****************
 37002 ;; Defined at:
 37003 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37004 ;; Parameters:    Size  Location     Type
 37005 ;;		None
 37006 ;; Auto vars:     Size  Location     Type
 37007 ;;  retVal          1    4[BANK0 ] unsigned char 
 37008 ;; Return value:  Size  Location     Type
 37009 ;;                  1    wreg      unsigned char 
 37010 ;; Registers used:
 37011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37012 ;; Tracked objects:
 37013 ;;		On entry : C/1
 37014 ;;		On exit  : F/0
 37015 ;;		Unchanged: 0/0
 37016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37021 ;;Total ram usage:        1 bytes
 37022 ;; Hardware stack levels used:    1
 37023 ;; Hardware stack levels required when called:    7
 37024 ;; This function calls:
 37025 ;;		Nothing
 37026 ;; This function is called by:
 37027 ;;		_RADIO_Init
 37028 ;;		_CreateAllSoftwareTimers
 37029 ;; This function uses a non-reentrant model
 37030 ;;
 37031                           
 37032                           	psect	text199
 37033  0061DC                     __ptext199:
 37034                           	opt stack 0
 37035  0061DC                     _SwTimerCreate:
 37036                           	opt stack 21
 37037                           
 37038                           ;sw_timer.c: 156: uint8_t retVal;
 37039                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37040                           
 37041                           ; BSR set to: 2
 37042                           ;incstack = 0
 37043  0061DC  0E14               	movlw	20
 37044  0061DE  0100               	movlb	0	; () banked
 37045  0061E0  61EF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37046  0061E2  D02E               	goto	l126
 37047                           
 37048                           ; BSR set to: 0
 37049                           ;sw_timer.c: 158: {
 37050                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37051  0061E4  9EF2               	bcf	intcon,7,c	;volatile
 37052                           
 37053                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37054  0061E6  C0EF  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37055                           
 37056                           ; BSR set to: 0
 37057                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37058  0061EA  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37059  0061EC  0D08               	mullw	8
 37060  0061EE  0E04               	movlw	low (_swTimers+4)
 37061  0061F0  24F3               	addwf	prodl,w,c
 37062  0061F2  6ED9               	movwf	fsr2l,c
 37063  0061F4  0E03               	movlw	high (_swTimers+4)
 37064  0061F6  20F4               	addwfc	prodh,w,c
 37065  0061F8  6EDA               	movwf	fsr2h,c
 37066  0061FA  6ADF               	clrf	indf2,c
 37067                           
 37068                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37069  0061FC  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37070  0061FE  0D08               	mullw	8
 37071  006200  0E00               	movlw	low _swTimers
 37072  006202  24F3               	addwf	prodl,w,c
 37073  006204  6ED9               	movwf	fsr2l,c
 37074  006206  0E03               	movlw	high _swTimers
 37075  006208  20F4               	addwfc	prodh,w,c
 37076  00620A  6EDA               	movwf	fsr2h,c
 37077  00620C  6ADE               	clrf	postinc2,c
 37078  00620E  6ADE               	clrf	postinc2,c
 37079  006210  6ADE               	clrf	postinc2,c
 37080  006212  6ADD               	clrf	postdec2,c
 37081                           
 37082                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37083  006214  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37084  006216  0D08               	mullw	8
 37085  006218  0E05               	movlw	low (_swTimers+5)
 37086  00621A  24F3               	addwf	prodl,w,c
 37087  00621C  6ED9               	movwf	fsr2l,c
 37088  00621E  0E03               	movlw	high (_swTimers+5)
 37089  006220  20F4               	addwfc	prodh,w,c
 37090  006222  6EDA               	movwf	fsr2h,c
 37091  006224  6ADF               	clrf	indf2,c
 37092                           
 37093                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37094  006226  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37095  006228  0D08               	mullw	8
 37096  00622A  0E06               	movlw	low (_swTimers+6)
 37097  00622C  24F3               	addwf	prodl,w,c
 37098  00622E  6ED9               	movwf	fsr2l,c
 37099  006230  0E03               	movlw	high (_swTimers+6)
 37100  006232  20F4               	addwfc	prodh,w,c
 37101  006234  6EDA               	movwf	fsr2h,c
 37102  006236  6ADE               	clrf	postinc2,c
 37103  006238  6ADD               	clrf	postdec2,c
 37104                           
 37105                           ; BSR set to: 0
 37106                           ;sw_timer.c: 165: allocatedTimers++;
 37107  00623A  2BEF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37108                           
 37109                           ; BSR set to: 0
 37110                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37111  00623C  8EF2               	bsf	intcon,7,c	;volatile
 37112                           
 37113                           ;sw_timer.c: 167: }
 37114  00623E  D001               	goto	l9957
 37115  006240                     l126:
 37116  006240  D7FF               	goto	l126
 37117  006242                     l9957:
 37118                           
 37119                           ; BSR set to: 0
 37120                           ;sw_timer.c: 175: }
 37121                           ;sw_timer.c: 176: }
 37122                           ;sw_timer.c: 177: return retVal;
 37123  006242  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37124                           
 37125                           ; BSR set to: 0
 37126  006244  0012               	return		;funcret
 37127  006246                     __end_of_SwTimerCreate:
 37128                           	opt stack 0
 37129                           tosu	equ	0xFFF
 37130                           tosh	equ	0xFFE
 37131                           tosl	equ	0xFFD
 37132                           pclath	equ	0xFFA
 37133                           tblptru	equ	0xFF8
 37134                           tblptrh	equ	0xFF7
 37135                           tblptrl	equ	0xFF6
 37136                           tablat	equ	0xFF5
 37137                           prodh	equ	0xFF4
 37138                           prodl	equ	0xFF3
 37139                           intcon	equ	0xFF2
 37140                           intcon2	equ	0xFF1
 37141                           intcon3	equ	0xFF0
 37142                           indf0	equ	0xFEF
 37143                           postinc0	equ	0xFEE
 37144                           plusw0	equ	0xFEB
 37145                           fsr0h	equ	0xFEA
 37146                           fsr0l	equ	0xFE9
 37147                           wreg	equ	0xFE8
 37148                           postinc1	equ	0xFE6
 37149                           postdec1	equ	0xFE5
 37150                           plusw1	equ	0xFE3
 37151                           fsr1h	equ	0xFE2
 37152                           fsr1l	equ	0xFE1
 37153                           indf2	equ	0xFDF
 37154                           postinc2	equ	0xFDE
 37155                           postdec2	equ	0xFDD
 37156                           plusw2	equ	0xFDB
 37157                           fsr2h	equ	0xFDA
 37158                           fsr2l	equ	0xFD9
 37159                           status	equ	0xFD8
 37160                           
 37161 ;; *************** function _LORAWAN_GetState *****************
 37162 ;; Defined at:
 37163 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37164 ;; Parameters:    Size  Location     Type
 37165 ;;		None
 37166 ;; Auto vars:     Size  Location     Type
 37167 ;;		None
 37168 ;; Return value:  Size  Location     Type
 37169 ;;                  1    wreg      unsigned char 
 37170 ;; Registers used:
 37171 ;;		wreg, status,2, status,0
 37172 ;; Tracked objects:
 37173 ;;		On entry : F/1
 37174 ;;		On exit  : F/2
 37175 ;;		Unchanged: 0/0
 37176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37181 ;;Total ram usage:        0 bytes
 37182 ;; Hardware stack levels used:    1
 37183 ;; Hardware stack levels required when called:    7
 37184 ;; This function calls:
 37185 ;;		Nothing
 37186 ;; This function is called by:
 37187 ;;		_main
 37188 ;; This function uses a non-reentrant model
 37189 ;;
 37190                           
 37191                           	psect	text200
 37192  007866                     __ptext200:
 37193                           	opt stack 0
 37194  007866                     _LORAWAN_GetState:
 37195                           	opt stack 23
 37196                           
 37197                           ; BSR set to: 1
 37198                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 37199                           
 37200                           ; BSR set to: 0
 37201                           ;incstack = 0
 37202  007866  0102               	movlb	2	; () banked
 37203  007868  5102               	movf	(_loRa+2)& (0+255),w,b
 37204  00786A  0B0F               	andlw	15
 37205                           
 37206                           ; BSR set to: 2
 37207  00786C  0012               	return		;funcret
 37208  00786E                     __end_of_LORAWAN_GetState:
 37209                           	opt stack 0
 37210                           tosu	equ	0xFFF
 37211                           tosh	equ	0xFFE
 37212                           tosl	equ	0xFFD
 37213                           pclath	equ	0xFFA
 37214                           tblptru	equ	0xFF8
 37215                           tblptrh	equ	0xFF7
 37216                           tblptrl	equ	0xFF6
 37217                           tablat	equ	0xFF5
 37218                           prodh	equ	0xFF4
 37219                           prodl	equ	0xFF3
 37220                           intcon	equ	0xFF2
 37221                           intcon2	equ	0xFF1
 37222                           intcon3	equ	0xFF0
 37223                           indf0	equ	0xFEF
 37224                           postinc0	equ	0xFEE
 37225                           plusw0	equ	0xFEB
 37226                           fsr0h	equ	0xFEA
 37227                           fsr0l	equ	0xFE9
 37228                           wreg	equ	0xFE8
 37229                           postinc1	equ	0xFE6
 37230                           postdec1	equ	0xFE5
 37231                           plusw1	equ	0xFE3
 37232                           fsr1h	equ	0xFE2
 37233                           fsr1l	equ	0xFE1
 37234                           indf2	equ	0xFDF
 37235                           postinc2	equ	0xFDE
 37236                           postdec2	equ	0xFDD
 37237                           plusw2	equ	0xFDB
 37238                           fsr2h	equ	0xFDA
 37239                           fsr2l	equ	0xFD9
 37240                           status	equ	0xFD8
 37241                           
 37242 ;; *************** function _IO_pins_init *****************
 37243 ;; Defined at:
 37244 ;;		line 117 in file "main.c"
 37245 ;; Parameters:    Size  Location     Type
 37246 ;;		None
 37247 ;; Auto vars:     Size  Location     Type
 37248 ;;		None
 37249 ;; Return value:  Size  Location     Type
 37250 ;;                  1    wreg      void 
 37251 ;; Registers used:
 37252 ;;		None
 37253 ;; Tracked objects:
 37254 ;;		On entry : F/F
 37255 ;;		On exit  : F/F
 37256 ;;		Unchanged: 0/0
 37257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37262 ;;Total ram usage:        0 bytes
 37263 ;; Hardware stack levels used:    1
 37264 ;; Hardware stack levels required when called:    7
 37265 ;; This function calls:
 37266 ;;		Nothing
 37267 ;; This function is called by:
 37268 ;;		_main
 37269 ;; This function uses a non-reentrant model
 37270 ;;
 37271                           
 37272                           	psect	text201
 37273  0076E2                     __ptext201:
 37274                           	opt stack 0
 37275  0076E2                     _IO_pins_init:
 37276                           	opt stack 23
 37277                           
 37278                           ; BSR set to: 15
 37279                           ;main.c: 119: TRISCbits.TRISC5 = 0;
 37280                           
 37281                           ; BSR set to: 2
 37282                           ;incstack = 0
 37283  0076E2  9A94               	bcf	3988,5,c	;volatile
 37284                           
 37285                           ;main.c: 120: TRISDbits.TRISD5 = 0;
 37286  0076E4  9A95               	bcf	3989,5,c	;volatile
 37287                           
 37288                           ;main.c: 121: TRISDbits.TRISD6 = 1;
 37289  0076E6  8C95               	bsf	3989,6,c	;volatile
 37290                           
 37291                           ;main.c: 122: TRISDbits.TRISD7 = 1;
 37292  0076E8  8E95               	bsf	3989,7,c	;volatile
 37293                           
 37294                           ;main.c: 124: ANSELCbits.ANSC5 = 0;
 37295  0076EA  9B3A               	bcf	58,5,b	;volatile
 37296                           
 37297                           ;main.c: 125: ANSELDbits.ANSD5 = 0;
 37298  0076EC  9B3B               	bcf	59,5,b	;volatile
 37299                           
 37300                           ;main.c: 126: ANSELDbits.ANSD6 = 1;
 37301  0076EE  8D3B               	bsf	59,6,b	;volatile
 37302                           
 37303                           ;main.c: 127: ANSELDbits.ANSD7 = 1;
 37304  0076F0  8F3B               	bsf	59,7,b	;volatile
 37305                           
 37306                           ; BSR set to: 15
 37307  0076F2  0012               	return		;funcret
 37308  0076F4                     __end_of_IO_pins_init:
 37309                           	opt stack 0
 37310                           tosu	equ	0xFFF
 37311                           tosh	equ	0xFFE
 37312                           tosl	equ	0xFFD
 37313                           pclath	equ	0xFFA
 37314                           tblptru	equ	0xFF8
 37315                           tblptrh	equ	0xFF7
 37316                           tblptrl	equ	0xFF6
 37317                           tablat	equ	0xFF5
 37318                           prodh	equ	0xFF4
 37319                           prodl	equ	0xFF3
 37320                           intcon	equ	0xFF2
 37321                           intcon2	equ	0xFF1
 37322                           intcon3	equ	0xFF0
 37323                           indf0	equ	0xFEF
 37324                           postinc0	equ	0xFEE
 37325                           plusw0	equ	0xFEB
 37326                           fsr0h	equ	0xFEA
 37327                           fsr0l	equ	0xFE9
 37328                           wreg	equ	0xFE8
 37329                           postinc1	equ	0xFE6
 37330                           postdec1	equ	0xFE5
 37331                           plusw1	equ	0xFE3
 37332                           fsr1h	equ	0xFE2
 37333                           fsr1l	equ	0xFE1
 37334                           indf2	equ	0xFDF
 37335                           postinc2	equ	0xFDE
 37336                           postdec2	equ	0xFDD
 37337                           plusw2	equ	0xFDB
 37338                           fsr2h	equ	0xFDA
 37339                           fsr2l	equ	0xFD9
 37340                           status	equ	0xFD8
 37341                           
 37342 ;; *************** function _ADC_Init *****************
 37343 ;; Defined at:
 37344 ;;		line 145 in file "main.c"
 37345 ;; Parameters:    Size  Location     Type
 37346 ;;		None
 37347 ;; Auto vars:     Size  Location     Type
 37348 ;;		None
 37349 ;; Return value:  Size  Location     Type
 37350 ;;                  1    wreg      void 
 37351 ;; Registers used:
 37352 ;;		wreg, status,2
 37353 ;; Tracked objects:
 37354 ;;		On entry : F/F
 37355 ;;		On exit  : F/F
 37356 ;;		Unchanged: E/0
 37357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37362 ;;Total ram usage:        0 bytes
 37363 ;; Hardware stack levels used:    1
 37364 ;; Hardware stack levels required when called:    7
 37365 ;; This function calls:
 37366 ;;		Nothing
 37367 ;; This function is called by:
 37368 ;;		_main
 37369 ;; This function uses a non-reentrant model
 37370 ;;
 37371                           
 37372                           	psect	text202
 37373  00773C                     __ptext202:
 37374                           	opt stack 0
 37375  00773C                     _ADC_Init:
 37376                           	opt stack 23
 37377                           
 37378                           ; BSR set to: 15
 37379                           ;main.c: 146: ADCON0bits.GO = 0;
 37380                           
 37381                           ; BSR set to: 15
 37382                           ;incstack = 0
 37383  00773C  92C2               	bcf	4034,1,c	;volatile
 37384                           
 37385                           ;main.c: 147: ADCON2bits.ADFM = 1;
 37386  00773E  8EC0               	bsf	4032,7,c	;volatile
 37387                           
 37388                           ; BSR set to: 15
 37389                           ;main.c: 148: ADCON2bits.ADCS = 3;
 37390  007740  50C0               	movf	4032,w,c	;volatile
 37391  007742  0BF8               	andlw	-8
 37392  007744  0903               	iorlw	3
 37393  007746  6EC0               	movwf	4032,c	;volatile
 37394                           
 37395                           ; BSR set to: 15
 37396  007748  0012               	return		;funcret
 37397  00774A                     __end_of_ADC_Init:
 37398                           	opt stack 0
 37399                           tosu	equ	0xFFF
 37400                           tosh	equ	0xFFE
 37401                           tosl	equ	0xFFD
 37402                           pclath	equ	0xFFA
 37403                           tblptru	equ	0xFF8
 37404                           tblptrh	equ	0xFF7
 37405                           tblptrl	equ	0xFF6
 37406                           tablat	equ	0xFF5
 37407                           prodh	equ	0xFF4
 37408                           prodl	equ	0xFF3
 37409                           intcon	equ	0xFF2
 37410                           intcon2	equ	0xFF1
 37411                           intcon3	equ	0xFF0
 37412                           indf0	equ	0xFEF
 37413                           postinc0	equ	0xFEE
 37414                           plusw0	equ	0xFEB
 37415                           fsr0h	equ	0xFEA
 37416                           fsr0l	equ	0xFE9
 37417                           wreg	equ	0xFE8
 37418                           postinc1	equ	0xFE6
 37419                           postdec1	equ	0xFE5
 37420                           plusw1	equ	0xFE3
 37421                           fsr1h	equ	0xFE2
 37422                           fsr1l	equ	0xFE1
 37423                           indf2	equ	0xFDF
 37424                           postinc2	equ	0xFDE
 37425                           postdec2	equ	0xFDD
 37426                           plusw2	equ	0xFDB
 37427                           fsr2h	equ	0xFDA
 37428                           fsr2l	equ	0xFD9
 37429                           status	equ	0xFD8
 37430                           
 37431 ;; *************** function _INTERRUPT_InterruptManager *****************
 37432 ;; Defined at:
 37433 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 37434 ;; Parameters:    Size  Location     Type
 37435 ;;		None
 37436 ;; Auto vars:     Size  Location     Type
 37437 ;;		None
 37438 ;; Return value:  Size  Location     Type
 37439 ;;                  1    wreg      void 
 37440 ;; Registers used:
 37441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37442 ;; Tracked objects:
 37443 ;;		On entry : 0/0
 37444 ;;		On exit  : 0/0
 37445 ;;		Unchanged: 0/0
 37446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37449 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37450 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37451 ;;Total ram usage:        8 bytes
 37452 ;; Hardware stack levels used:    1
 37453 ;; Hardware stack levels required when called:    6
 37454 ;; This function calls:
 37455 ;;		_INT1_ISR
 37456 ;;		_INT2_ISR
 37457 ;;		_PIN_MANAGER_IOC
 37458 ;;		_TMR1_ISR
 37459 ;;		_TMR3_ISR
 37460 ;; This function is called by:
 37461 ;;		Interrupt level 2
 37462 ;; This function uses a non-reentrant model
 37463 ;;
 37464                           
 37465                           	psect	intcode
 37466  000008                     __pintcode:
 37467                           	opt stack 0
 37468  000008                     _INTERRUPT_InterruptManager:
 37469                           	opt stack 12
 37470                           
 37471                           ; BSR set to: 15
 37472                           ;incstack = 0
 37473  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 37474  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37475  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37476  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37477  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37478  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37479  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37480  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37481  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 37482                           
 37483                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37484  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37485  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37486  000030  D003               	goto	i2l2497
 37487                           
 37488                           ;interrupt_manager.c: 61: {
 37489                           ;interrupt_manager.c: 62: INT1_ISR();
 37490  000032  EC4F  F03C         	call	_INT1_ISR	;wreg free
 37491                           
 37492                           ;interrupt_manager.c: 63: }
 37493  000036  D01B               	goto	i2l2507
 37494  000038                     i2l2497:
 37495                           
 37496                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37497  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37498  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37499  00003C  D003               	goto	i2l2499
 37500                           
 37501                           ;interrupt_manager.c: 65: {
 37502                           ;interrupt_manager.c: 66: INT2_ISR();
 37503  00003E  EC49  F03C         	call	_INT2_ISR	;wreg free
 37504                           
 37505                           ;interrupt_manager.c: 67: }
 37506  000042  D015               	goto	i2l2507
 37507  000044                     i2l2499:
 37508                           
 37509                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.TMR3IE == 1 && PIR2bi
      +                          ts.TMR3IF == 1)
 37510  000044  BCF2               	btfsc	intcon,6,c	;volatile
 37511  000046  A2A0               	btfss	4000,1,c	;volatile
 37512  000048  D005               	goto	i2l2501
 37513  00004A  A2A1               	btfss	4001,1,c	;volatile
 37514  00004C  D003               	goto	i2l2501
 37515                           
 37516                           ;interrupt_manager.c: 69: {
 37517                           ;interrupt_manager.c: 70: TMR3_ISR();
 37518  00004E  ECA5  F03B         	call	_TMR3_ISR	;wreg free
 37519                           
 37520                           ;interrupt_manager.c: 71: }
 37521  000052  D00D               	goto	i2l2507
 37522  000054                     i2l2501:
 37523                           
 37524                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 37525  000054  BCF2               	btfsc	intcon,6,c	;volatile
 37526  000056  A09D               	btfss	3997,0,c	;volatile
 37527  000058  D005               	goto	i2l2503
 37528  00005A  A09E               	btfss	3998,0,c	;volatile
 37529  00005C  D003               	goto	i2l2503
 37530                           
 37531                           ;interrupt_manager.c: 73: {
 37532                           ;interrupt_manager.c: 74: TMR1_ISR();
 37533  00005E  ECAC  F03B         	call	_TMR1_ISR	;wreg free
 37534                           
 37535                           ;interrupt_manager.c: 75: }
 37536  000062  D005               	goto	i2l2507
 37537  000064                     i2l2503:
 37538                           
 37539                           ;interrupt_manager.c: 76: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37540  000064  B6F2               	btfsc	intcon,3,c	;volatile
 37541  000066  A0F2               	btfss	intcon,0,c	;volatile
 37542  000068  D002               	goto	i2l2507
 37543                           
 37544                           ;interrupt_manager.c: 77: {
 37545                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37546  00006A  EC0E  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37547  00006E                     i2l2507:
 37548  00006E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37549  000072  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37550  000076  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37551  00007A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37552  00007E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37553  000082  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37554  000086  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37555  00008A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37556  00008E  0011               	retfie		f
 37557  000090                     __end_of_INTERRUPT_InterruptManager:
 37558                           	opt stack 0
 37559                           tosu	equ	0xFFF
 37560                           tosh	equ	0xFFE
 37561                           tosl	equ	0xFFD
 37562                           pclatu	equ	0xFFB
 37563                           pclath	equ	0xFFA
 37564                           tblptru	equ	0xFF8
 37565                           tblptrh	equ	0xFF7
 37566                           tblptrl	equ	0xFF6
 37567                           tablat	equ	0xFF5
 37568                           prodh	equ	0xFF4
 37569                           prodl	equ	0xFF3
 37570                           intcon	equ	0xFF2
 37571                           intcon2	equ	0xFF1
 37572                           intcon3	equ	0xFF0
 37573                           indf0	equ	0xFEF
 37574                           postinc0	equ	0xFEE
 37575                           plusw0	equ	0xFEB
 37576                           fsr0h	equ	0xFEA
 37577                           fsr0l	equ	0xFE9
 37578                           wreg	equ	0xFE8
 37579                           postinc1	equ	0xFE6
 37580                           postdec1	equ	0xFE5
 37581                           plusw1	equ	0xFE3
 37582                           fsr1h	equ	0xFE2
 37583                           fsr1l	equ	0xFE1
 37584                           indf2	equ	0xFDF
 37585                           postinc2	equ	0xFDE
 37586                           postdec2	equ	0xFDD
 37587                           plusw2	equ	0xFDB
 37588                           fsr2h	equ	0xFDA
 37589                           fsr2l	equ	0xFD9
 37590                           status	equ	0xFD8
 37591                           
 37592 ;; *************** function _TMR3_ISR *****************
 37593 ;; Defined at:
 37594 ;;		line 159 in file "mcc_generated_files/tmr3.c"
 37595 ;; Parameters:    Size  Location     Type
 37596 ;;		None
 37597 ;; Auto vars:     Size  Location     Type
 37598 ;;		None
 37599 ;; Return value:  Size  Location     Type
 37600 ;;                  1    wreg      void 
 37601 ;; Registers used:
 37602 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37603 ;; Tracked objects:
 37604 ;;		On entry : 0/0
 37605 ;;		On exit  : 0/0
 37606 ;;		Unchanged: 0/0
 37607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37612 ;;Total ram usage:        0 bytes
 37613 ;; Hardware stack levels used:    1
 37614 ;; Hardware stack levels required when called:    2
 37615 ;; This function calls:
 37616 ;;		_TMR3_CallBack
 37617 ;; This function is called by:
 37618 ;;		_INTERRUPT_InterruptManager
 37619 ;; This function uses a non-reentrant model
 37620 ;;
 37621                           
 37622                           	psect	text204
 37623  00774A                     __ptext204:
 37624                           	opt stack 0
 37625  00774A                     _TMR3_ISR:
 37626                           	opt stack 15
 37627                           
 37628                           ;tmr3.c: 163: PIR2bits.TMR3IF = 0;
 37629                           
 37630                           ;incstack = 0
 37631  00774A  92A1               	bcf	4001,1,c	;volatile
 37632                           
 37633                           ;tmr3.c: 166: TMR3H = (timer3ReloadVal >> 8);
 37634  00774C  C05F  FFB3         	movff	_timer3ReloadVal+1,4019	;volatile
 37635                           
 37636                           ;tmr3.c: 167: TMR3L = (uint8_t) timer3ReloadVal;
 37637  007750  C05E  FFB2         	movff	_timer3ReloadVal,4018	;volatile
 37638                           
 37639                           ;tmr3.c: 171: TMR3_CallBack();
 37640  007754  EF75  F03A         	goto	_TMR3_CallBack	;wreg free
 37641  007758                     __end_of_TMR3_ISR:
 37642                           	opt stack 0
 37643                           tosu	equ	0xFFF
 37644                           tosh	equ	0xFFE
 37645                           tosl	equ	0xFFD
 37646                           pclatu	equ	0xFFB
 37647                           pclath	equ	0xFFA
 37648                           tblptru	equ	0xFF8
 37649                           tblptrh	equ	0xFF7
 37650                           tblptrl	equ	0xFF6
 37651                           tablat	equ	0xFF5
 37652                           prodh	equ	0xFF4
 37653                           prodl	equ	0xFF3
 37654                           intcon	equ	0xFF2
 37655                           intcon2	equ	0xFF1
 37656                           intcon3	equ	0xFF0
 37657                           indf0	equ	0xFEF
 37658                           postinc0	equ	0xFEE
 37659                           plusw0	equ	0xFEB
 37660                           fsr0h	equ	0xFEA
 37661                           fsr0l	equ	0xFE9
 37662                           wreg	equ	0xFE8
 37663                           postinc1	equ	0xFE6
 37664                           postdec1	equ	0xFE5
 37665                           plusw1	equ	0xFE3
 37666                           fsr1h	equ	0xFE2
 37667                           fsr1l	equ	0xFE1
 37668                           indf2	equ	0xFDF
 37669                           postinc2	equ	0xFDE
 37670                           postdec2	equ	0xFDD
 37671                           plusw2	equ	0xFDB
 37672                           fsr2h	equ	0xFDA
 37673                           fsr2l	equ	0xFD9
 37674                           status	equ	0xFD8
 37675                           
 37676 ;; *************** function _TMR3_CallBack *****************
 37677 ;; Defined at:
 37678 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 37679 ;; Parameters:    Size  Location     Type
 37680 ;;		None
 37681 ;; Auto vars:     Size  Location     Type
 37682 ;;		None
 37683 ;; Return value:  Size  Location     Type
 37684 ;;                  1    wreg      void 
 37685 ;; Registers used:
 37686 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37687 ;; Tracked objects:
 37688 ;;		On entry : 0/0
 37689 ;;		On exit  : 0/0
 37690 ;;		Unchanged: 0/0
 37691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37696 ;;Total ram usage:        0 bytes
 37697 ;; Hardware stack levels used:    1
 37698 ;; Hardware stack levels required when called:    1
 37699 ;; This function calls:
 37700 ;;		Absolute function
 37701 ;;		_TMR3_DefaultInterruptHandler
 37702 ;;		_handle16sInterrupt
 37703 ;; This function is called by:
 37704 ;;		_TMR3_ISR
 37705 ;; This function uses a non-reentrant model
 37706 ;;
 37707                           
 37708                           	psect	text205
 37709  0074EA                     __ptext205:
 37710                           	opt stack 0
 37711  0074EA                     _TMR3_CallBack:
 37712                           	opt stack 15
 37713                           
 37714                           ;tmr3.c: 177: if(TMR3_InterruptHandler)
 37715                           
 37716                           ;incstack = 0
 37717  0074EA  0101               	movlb	1	; () banked
 37718  0074EC  51FE               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37719  0074EE  11FF               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37720  0074F0  B4D8               	btfsc	status,2,c
 37721  0074F2  0012               	return	
 37722                           
 37723                           ; BSR set to: 1
 37724                           ;tmr3.c: 178: {
 37725                           ;tmr3.c: 179: TMR3_InterruptHandler();
 37726  0074F4  0005               	push	
 37727  0074F6  6EFA               	movwf	pclath,c
 37728  0074F8  51FE               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37729  0074FA  6EFD               	movwf	tosl,c
 37730  0074FC  51FF               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37731  0074FE  6EFE               	movwf	tosh,c
 37732  007500  6AFF               	clrf	tosu,c
 37733  007502  50FA               	movf	pclath,w,c
 37734  007504  0012               	return		;indir
 37735  007506                     __end_of_TMR3_CallBack:
 37736                           	opt stack 0
 37737                           tosu	equ	0xFFF
 37738                           tosh	equ	0xFFE
 37739                           tosl	equ	0xFFD
 37740                           pclatu	equ	0xFFB
 37741                           pclath	equ	0xFFA
 37742                           tblptru	equ	0xFF8
 37743                           tblptrh	equ	0xFF7
 37744                           tblptrl	equ	0xFF6
 37745                           tablat	equ	0xFF5
 37746                           prodh	equ	0xFF4
 37747                           prodl	equ	0xFF3
 37748                           intcon	equ	0xFF2
 37749                           intcon2	equ	0xFF1
 37750                           intcon3	equ	0xFF0
 37751                           indf0	equ	0xFEF
 37752                           postinc0	equ	0xFEE
 37753                           plusw0	equ	0xFEB
 37754                           fsr0h	equ	0xFEA
 37755                           fsr0l	equ	0xFE9
 37756                           wreg	equ	0xFE8
 37757                           postinc1	equ	0xFE6
 37758                           postdec1	equ	0xFE5
 37759                           plusw1	equ	0xFE3
 37760                           fsr1h	equ	0xFE2
 37761                           fsr1l	equ	0xFE1
 37762                           indf2	equ	0xFDF
 37763                           postinc2	equ	0xFDE
 37764                           postdec2	equ	0xFDD
 37765                           plusw2	equ	0xFDB
 37766                           fsr2h	equ	0xFDA
 37767                           fsr2l	equ	0xFD9
 37768                           status	equ	0xFD8
 37769                           
 37770 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37771 ;; Defined at:
 37772 ;;		line 187 in file "mcc_generated_files/tmr3.c"
 37773 ;; Parameters:    Size  Location     Type
 37774 ;;		None
 37775 ;; Auto vars:     Size  Location     Type
 37776 ;;		None
 37777 ;; Return value:  Size  Location     Type
 37778 ;;                  1    wreg      void 
 37779 ;; Registers used:
 37780 ;;		None
 37781 ;; Tracked objects:
 37782 ;;		On entry : F/1
 37783 ;;		On exit  : F/1
 37784 ;;		Unchanged: F/0
 37785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37790 ;;Total ram usage:        0 bytes
 37791 ;; Hardware stack levels used:    1
 37792 ;; This function calls:
 37793 ;;		Nothing
 37794 ;; This function is called by:
 37795 ;;		_TMR3_Initialize
 37796 ;;		_TMR3_CallBack
 37797 ;; This function uses a non-reentrant model
 37798 ;;
 37799                           
 37800                           	psect	text206
 37801  0078D6                     __ptext206:
 37802                           	opt stack 0
 37803  0078D6                     _TMR3_DefaultInterruptHandler:
 37804                           	opt stack 15
 37805                           
 37806                           ; BSR set to: 1
 37807                           
 37808                           ;incstack = 0
 37809  0078D6  0012               	return		;funcret
 37810  0078D8                     __end_of_TMR3_DefaultInterruptHandler:
 37811                           	opt stack 0
 37812                           tosu	equ	0xFFF
 37813                           tosh	equ	0xFFE
 37814                           tosl	equ	0xFFD
 37815                           pclatu	equ	0xFFB
 37816                           pclath	equ	0xFFA
 37817                           tblptru	equ	0xFF8
 37818                           tblptrh	equ	0xFF7
 37819                           tblptrl	equ	0xFF6
 37820                           tablat	equ	0xFF5
 37821                           prodh	equ	0xFF4
 37822                           prodl	equ	0xFF3
 37823                           intcon	equ	0xFF2
 37824                           intcon2	equ	0xFF1
 37825                           intcon3	equ	0xFF0
 37826                           indf0	equ	0xFEF
 37827                           postinc0	equ	0xFEE
 37828                           plusw0	equ	0xFEB
 37829                           fsr0h	equ	0xFEA
 37830                           fsr0l	equ	0xFE9
 37831                           wreg	equ	0xFE8
 37832                           postinc1	equ	0xFE6
 37833                           postdec1	equ	0xFE5
 37834                           plusw1	equ	0xFE3
 37835                           fsr1h	equ	0xFE2
 37836                           fsr1l	equ	0xFE1
 37837                           indf2	equ	0xFDF
 37838                           postinc2	equ	0xFDE
 37839                           postdec2	equ	0xFDD
 37840                           plusw2	equ	0xFDB
 37841                           fsr2h	equ	0xFDA
 37842                           fsr2l	equ	0xFD9
 37843                           status	equ	0xFD8
 37844                           
 37845 ;; *************** function _handle16sInterrupt *****************
 37846 ;; Defined at:
 37847 ;;		line 78 in file "main.c"
 37848 ;; Parameters:    Size  Location     Type
 37849 ;;		None
 37850 ;; Auto vars:     Size  Location     Type
 37851 ;;		None
 37852 ;; Return value:  Size  Location     Type
 37853 ;;                  1    wreg      void 
 37854 ;; Registers used:
 37855 ;;		wreg, status,2, status,0
 37856 ;; Tracked objects:
 37857 ;;		On entry : F/1
 37858 ;;		On exit  : 0/0
 37859 ;;		Unchanged: 0/0
 37860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37865 ;;Total ram usage:        0 bytes
 37866 ;; Hardware stack levels used:    1
 37867 ;; This function calls:
 37868 ;;		Nothing
 37869 ;; This function is called by:
 37870 ;;		_main
 37871 ;;		_TMR3_CallBack
 37872 ;; This function uses a non-reentrant model
 37873 ;;
 37874                           
 37875                           	psect	text207
 37876  0076BC                     __ptext207:
 37877                           	opt stack 0
 37878  0076BC                     _handle16sInterrupt:
 37879                           	opt stack 15
 37880                           
 37881                           ; BSR set to: 1
 37882                           ;main.c: 82: static volatile uint8_t counterSleepTimeout = 0;
 37883                           ;main.c: 83: if( ++counterSleepTimeout == 85 )
 37884                           
 37885                           ; BSR set to: 1
 37886                           ;incstack = 0
 37887  0076BC  2A45               	incf	handle16sInterrupt@counterSleepTimeout,f,c	;volatile
 37888  0076BE  0E55               	movlw	85
 37889  0076C0  1845               	xorwf	handle16sInterrupt@counterSleepTimeout,w,c	;volatile
 37890  0076C2  E104               	bnz	i2l2720
 37891                           
 37892                           ; BSR set to: 1
 37893                           ;main.c: 84: {
 37894                           ;main.c: 86: TimeToSend = 1;
 37895  0076C4  0E01               	movlw	1
 37896  0076C6  6F7D               	movwf	_TimeToSend& (0+255),b
 37897                           
 37898                           ; BSR set to: 1
 37899                           ;main.c: 87: counterSleepTimeout = 0;
 37900  0076C8  6A45               	clrf	handle16sInterrupt@counterSleepTimeout,c	;volatile
 37901                           
 37902                           ;main.c: 88: }
 37903  0076CA  0012               	return	
 37904  0076CC                     i2l2720:
 37905                           
 37906                           ; BSR set to: 1
 37907  0076CC  0003               	sleep		;# 
 37908  0076CE  0012               	return		;funcret
 37909  0076D0                     __end_of_handle16sInterrupt:
 37910                           	opt stack 0
 37911                           tosu	equ	0xFFF
 37912                           tosh	equ	0xFFE
 37913                           tosl	equ	0xFFD
 37914                           pclatu	equ	0xFFB
 37915                           pclath	equ	0xFFA
 37916                           tblptru	equ	0xFF8
 37917                           tblptrh	equ	0xFF7
 37918                           tblptrl	equ	0xFF6
 37919                           tablat	equ	0xFF5
 37920                           prodh	equ	0xFF4
 37921                           prodl	equ	0xFF3
 37922                           intcon	equ	0xFF2
 37923                           intcon2	equ	0xFF1
 37924                           intcon3	equ	0xFF0
 37925                           indf0	equ	0xFEF
 37926                           postinc0	equ	0xFEE
 37927                           plusw0	equ	0xFEB
 37928                           fsr0h	equ	0xFEA
 37929                           fsr0l	equ	0xFE9
 37930                           wreg	equ	0xFE8
 37931                           postinc1	equ	0xFE6
 37932                           postdec1	equ	0xFE5
 37933                           plusw1	equ	0xFE3
 37934                           fsr1h	equ	0xFE2
 37935                           fsr1l	equ	0xFE1
 37936                           indf2	equ	0xFDF
 37937                           postinc2	equ	0xFDE
 37938                           postdec2	equ	0xFDD
 37939                           plusw2	equ	0xFDB
 37940                           fsr2h	equ	0xFDA
 37941                           fsr2l	equ	0xFD9
 37942                           status	equ	0xFD8
 37943                           
 37944 ;; *************** function _TMR1_ISR *****************
 37945 ;; Defined at:
 37946 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 37947 ;; Parameters:    Size  Location     Type
 37948 ;;		None
 37949 ;; Auto vars:     Size  Location     Type
 37950 ;;		None
 37951 ;; Return value:  Size  Location     Type
 37952 ;;                  1    wreg      void 
 37953 ;; Registers used:
 37954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37955 ;; Tracked objects:
 37956 ;;		On entry : 0/0
 37957 ;;		On exit  : 0/0
 37958 ;;		Unchanged: 0/0
 37959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37964 ;;Total ram usage:        0 bytes
 37965 ;; Hardware stack levels used:    1
 37966 ;; Hardware stack levels required when called:    5
 37967 ;; This function calls:
 37968 ;;		_TMR1_CallBack
 37969 ;; This function is called by:
 37970 ;;		_INTERRUPT_InterruptManager
 37971 ;; This function uses a non-reentrant model
 37972 ;;
 37973                           
 37974                           	psect	text208
 37975  007758                     __ptext208:
 37976                           	opt stack 0
 37977  007758                     _TMR1_ISR:
 37978                           	opt stack 12
 37979                           
 37980                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 37981                           
 37982                           ;incstack = 0
 37983  007758  909E               	bcf	3998,0,c	;volatile
 37984                           
 37985                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 37986  00775A  C05D  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 37987                           
 37988                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 37989  00775E  C05C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 37990                           
 37991                           ;tmr1.c: 171: TMR1_CallBack();
 37992  007762  EF83  F03A         	goto	_TMR1_CallBack	;wreg free
 37993  007766                     __end_of_TMR1_ISR:
 37994                           	opt stack 0
 37995                           tosu	equ	0xFFF
 37996                           tosh	equ	0xFFE
 37997                           tosl	equ	0xFFD
 37998                           pclatu	equ	0xFFB
 37999                           pclath	equ	0xFFA
 38000                           tblptru	equ	0xFF8
 38001                           tblptrh	equ	0xFF7
 38002                           tblptrl	equ	0xFF6
 38003                           tablat	equ	0xFF5
 38004                           prodh	equ	0xFF4
 38005                           prodl	equ	0xFF3
 38006                           intcon	equ	0xFF2
 38007                           intcon2	equ	0xFF1
 38008                           intcon3	equ	0xFF0
 38009                           indf0	equ	0xFEF
 38010                           postinc0	equ	0xFEE
 38011                           plusw0	equ	0xFEB
 38012                           fsr0h	equ	0xFEA
 38013                           fsr0l	equ	0xFE9
 38014                           wreg	equ	0xFE8
 38015                           postinc1	equ	0xFE6
 38016                           postdec1	equ	0xFE5
 38017                           plusw1	equ	0xFE3
 38018                           fsr1h	equ	0xFE2
 38019                           fsr1l	equ	0xFE1
 38020                           indf2	equ	0xFDF
 38021                           postinc2	equ	0xFDE
 38022                           postdec2	equ	0xFDD
 38023                           plusw2	equ	0xFDB
 38024                           fsr2h	equ	0xFDA
 38025                           fsr2l	equ	0xFD9
 38026                           status	equ	0xFD8
 38027                           
 38028 ;; *************** function _TMR1_CallBack *****************
 38029 ;; Defined at:
 38030 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 38031 ;; Parameters:    Size  Location     Type
 38032 ;;		None
 38033 ;; Auto vars:     Size  Location     Type
 38034 ;;		None
 38035 ;; Return value:  Size  Location     Type
 38036 ;;                  1    wreg      void 
 38037 ;; Registers used:
 38038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38039 ;; Tracked objects:
 38040 ;;		On entry : 0/0
 38041 ;;		On exit  : 0/0
 38042 ;;		Unchanged: 0/0
 38043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38048 ;;Total ram usage:        0 bytes
 38049 ;; Hardware stack levels used:    1
 38050 ;; Hardware stack levels required when called:    4
 38051 ;; This function calls:
 38052 ;;		Absolute function
 38053 ;;		_TMR1_DefaultInterruptHandler
 38054 ;;		_TMR_ISR_lora
 38055 ;; This function is called by:
 38056 ;;		_TMR1_ISR
 38057 ;; This function uses a non-reentrant model
 38058 ;;
 38059                           
 38060                           	psect	text209
 38061  007506                     __ptext209:
 38062                           	opt stack 0
 38063  007506                     _TMR1_CallBack:
 38064                           	opt stack 12
 38065                           
 38066                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 38067                           
 38068                           ;incstack = 0
 38069  007506  0101               	movlb	1	; () banked
 38070  007508  51FC               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38071  00750A  11FD               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38072  00750C  B4D8               	btfsc	status,2,c
 38073  00750E  0012               	return	
 38074                           
 38075                           ; BSR set to: 1
 38076                           ;tmr1.c: 178: {
 38077                           ;tmr1.c: 179: TMR1_InterruptHandler();
 38078  007510  0005               	push	
 38079  007512  6EFA               	movwf	pclath,c
 38080  007514  51FC               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38081  007516  6EFD               	movwf	tosl,c
 38082  007518  51FD               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38083  00751A  6EFE               	movwf	tosh,c
 38084  00751C  6AFF               	clrf	tosu,c
 38085  00751E  50FA               	movf	pclath,w,c
 38086  007520  0012               	return		;indir
 38087  007522                     __end_of_TMR1_CallBack:
 38088                           	opt stack 0
 38089                           tosu	equ	0xFFF
 38090                           tosh	equ	0xFFE
 38091                           tosl	equ	0xFFD
 38092                           pclatu	equ	0xFFB
 38093                           pclath	equ	0xFFA
 38094                           tblptru	equ	0xFF8
 38095                           tblptrh	equ	0xFF7
 38096                           tblptrl	equ	0xFF6
 38097                           tablat	equ	0xFF5
 38098                           prodh	equ	0xFF4
 38099                           prodl	equ	0xFF3
 38100                           intcon	equ	0xFF2
 38101                           intcon2	equ	0xFF1
 38102                           intcon3	equ	0xFF0
 38103                           indf0	equ	0xFEF
 38104                           postinc0	equ	0xFEE
 38105                           plusw0	equ	0xFEB
 38106                           fsr0h	equ	0xFEA
 38107                           fsr0l	equ	0xFE9
 38108                           wreg	equ	0xFE8
 38109                           postinc1	equ	0xFE6
 38110                           postdec1	equ	0xFE5
 38111                           plusw1	equ	0xFE3
 38112                           fsr1h	equ	0xFE2
 38113                           fsr1l	equ	0xFE1
 38114                           indf2	equ	0xFDF
 38115                           postinc2	equ	0xFDE
 38116                           postdec2	equ	0xFDD
 38117                           plusw2	equ	0xFDB
 38118                           fsr2h	equ	0xFDA
 38119                           fsr2l	equ	0xFD9
 38120                           status	equ	0xFD8
 38121                           
 38122 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38123 ;; Defined at:
 38124 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 38125 ;; Parameters:    Size  Location     Type
 38126 ;;		None
 38127 ;; Auto vars:     Size  Location     Type
 38128 ;;		None
 38129 ;; Return value:  Size  Location     Type
 38130 ;;                  1    wreg      void 
 38131 ;; Registers used:
 38132 ;;		None
 38133 ;; Tracked objects:
 38134 ;;		On entry : F/1
 38135 ;;		On exit  : F/1
 38136 ;;		Unchanged: F/0
 38137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38142 ;;Total ram usage:        0 bytes
 38143 ;; Hardware stack levels used:    1
 38144 ;; This function calls:
 38145 ;;		Nothing
 38146 ;; This function is called by:
 38147 ;;		_TMR1_Initialize
 38148 ;;		_TMR1_CallBack
 38149 ;; This function uses a non-reentrant model
 38150 ;;
 38151                           
 38152                           	psect	text210
 38153  0078D8                     __ptext210:
 38154                           	opt stack 0
 38155  0078D8                     _TMR1_DefaultInterruptHandler:
 38156                           	opt stack 15
 38157                           
 38158                           ; BSR set to: 1
 38159                           
 38160                           ;incstack = 0
 38161  0078D8  0012               	return		;funcret
 38162  0078DA                     __end_of_TMR1_DefaultInterruptHandler:
 38163                           	opt stack 0
 38164                           tosu	equ	0xFFF
 38165                           tosh	equ	0xFFE
 38166                           tosl	equ	0xFFD
 38167                           pclatu	equ	0xFFB
 38168                           pclath	equ	0xFFA
 38169                           tblptru	equ	0xFF8
 38170                           tblptrh	equ	0xFF7
 38171                           tblptrl	equ	0xFF6
 38172                           tablat	equ	0xFF5
 38173                           prodh	equ	0xFF4
 38174                           prodl	equ	0xFF3
 38175                           intcon	equ	0xFF2
 38176                           intcon2	equ	0xFF1
 38177                           intcon3	equ	0xFF0
 38178                           indf0	equ	0xFEF
 38179                           postinc0	equ	0xFEE
 38180                           plusw0	equ	0xFEB
 38181                           fsr0h	equ	0xFEA
 38182                           fsr0l	equ	0xFE9
 38183                           wreg	equ	0xFE8
 38184                           postinc1	equ	0xFE6
 38185                           postdec1	equ	0xFE5
 38186                           plusw1	equ	0xFE3
 38187                           fsr1h	equ	0xFE2
 38188                           fsr1l	equ	0xFE1
 38189                           indf2	equ	0xFDF
 38190                           postinc2	equ	0xFDE
 38191                           postdec2	equ	0xFDD
 38192                           plusw2	equ	0xFDB
 38193                           fsr2h	equ	0xFDA
 38194                           fsr2l	equ	0xFD9
 38195                           status	equ	0xFD8
 38196                           
 38197 ;; *************** function _TMR_ISR_lora *****************
 38198 ;; Defined at:
 38199 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38200 ;; Parameters:    Size  Location     Type
 38201 ;;		None
 38202 ;; Auto vars:     Size  Location     Type
 38203 ;;		None
 38204 ;; Return value:  Size  Location     Type
 38205 ;;                  1    wreg      void 
 38206 ;; Registers used:
 38207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38208 ;; Tracked objects:
 38209 ;;		On entry : F/1
 38210 ;;		On exit  : 0/0
 38211 ;;		Unchanged: 0/0
 38212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38217 ;;Total ram usage:        0 bytes
 38218 ;; Hardware stack levels used:    1
 38219 ;; Hardware stack levels required when called:    3
 38220 ;; This function calls:
 38221 ;;		i2_SwTimersInterrupt
 38222 ;;		i2_TMR_SwapTimer
 38223 ;; This function is called by:
 38224 ;;		_TMR_ISR_Lora_Init
 38225 ;;		_TMR1_CallBack
 38226 ;; This function uses a non-reentrant model
 38227 ;;
 38228                           
 38229                           	psect	text211
 38230  006A3A                     __ptext211:
 38231                           	opt stack 0
 38232  006A3A                     _TMR_ISR_lora:
 38233                           	opt stack 12
 38234                           
 38235                           ; BSR set to: 1
 38236                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38237                           
 38238                           ; BSR set to: 1
 38239                           ;incstack = 0
 38240  006A3A  0E01               	movlw	1
 38241  006A3C  0100               	movlb	0	; () banked
 38242  006A3E  6FF2               	movwf	_timerOverflow& (0+255),b	;volatile
 38243                           
 38244                           ; BSR set to: 0
 38245                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38246  006A40  EC0B  F027         	call	i2_SwTimersInterrupt	;wreg free
 38247  006A44  C019  F056         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38248  006A48  C01A  F057         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38249  006A4C  C01B  F058         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38250  006A50  C01C  F059         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38251                           
 38252                           ; BSR set to: 0
 38253                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38254  006A54  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38255  006A56  E117               	bnz	i2l242
 38256  006A58  0458               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38257  006A5A  B0D8               	btfsc	status,0,c
 38258  006A5C  0012               	return	
 38259                           
 38260                           ; BSR set to: 0
 38261                           ;tmr_lora_addons.c: 66: {
 38262                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38263  006A5E  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38264  006A60  0800               	sublw	0
 38265  006A62  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 38266  006A64  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38267  006A66  A0D8               	btfss	status,0,c
 38268  006A68  2AE8               	incf	wreg,f,c
 38269  006A6A  0800               	sublw	0
 38270  006A6C  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38271                           
 38272                           ; BSR set to: 0
 38273                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38274  006A6E  C0EC  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38275  006A72  C0ED  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38276  006A76  ECE0  F036         	call	i2_TMR_SwapTimer	;wreg free
 38277  006A7A  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38278  006A7E  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38279  006A82  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38280  006A84  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38281  006A86                     i2l242:
 38282  006A86  0012               	return		;funcret
 38283  006A88                     __end_of_TMR_ISR_lora:
 38284                           	opt stack 0
 38285                           tosu	equ	0xFFF
 38286                           tosh	equ	0xFFE
 38287                           tosl	equ	0xFFD
 38288                           pclatu	equ	0xFFB
 38289                           pclath	equ	0xFFA
 38290                           tblptru	equ	0xFF8
 38291                           tblptrh	equ	0xFF7
 38292                           tblptrl	equ	0xFF6
 38293                           tablat	equ	0xFF5
 38294                           prodh	equ	0xFF4
 38295                           prodl	equ	0xFF3
 38296                           intcon	equ	0xFF2
 38297                           intcon2	equ	0xFF1
 38298                           intcon3	equ	0xFF0
 38299                           indf0	equ	0xFEF
 38300                           postinc0	equ	0xFEE
 38301                           plusw0	equ	0xFEB
 38302                           fsr0h	equ	0xFEA
 38303                           fsr0l	equ	0xFE9
 38304                           wreg	equ	0xFE8
 38305                           postinc1	equ	0xFE6
 38306                           postdec1	equ	0xFE5
 38307                           plusw1	equ	0xFE3
 38308                           fsr1h	equ	0xFE2
 38309                           fsr1l	equ	0xFE1
 38310                           indf2	equ	0xFDF
 38311                           postinc2	equ	0xFDE
 38312                           postdec2	equ	0xFDD
 38313                           plusw2	equ	0xFDB
 38314                           fsr2h	equ	0xFDA
 38315                           fsr2l	equ	0xFD9
 38316                           status	equ	0xFD8
 38317                           
 38318 ;; *************** function i2_TMR_SwapTimer *****************
 38319 ;; Defined at:
 38320 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38321 ;; Parameters:    Size  Location     Type
 38322 ;;  timerVal        2    8[COMRAM] unsigned int 
 38323 ;; Auto vars:     Size  Location     Type
 38324 ;;		None
 38325 ;; Return value:  Size  Location     Type
 38326 ;;                  2    8[COMRAM] unsigned int 
 38327 ;; Registers used:
 38328 ;;		wreg, status,2, status,0, cstack
 38329 ;; Tracked objects:
 38330 ;;		On entry : F/0
 38331 ;;		On exit  : 0/0
 38332 ;;		Unchanged: 0/0
 38333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38338 ;;Total ram usage:        2 bytes
 38339 ;; Hardware stack levels used:    1
 38340 ;; Hardware stack levels required when called:    1
 38341 ;; This function calls:
 38342 ;;		i2_TMR1_ReadTimer
 38343 ;;		i2_TMR1_WriteTimer
 38344 ;; This function is called by:
 38345 ;;		_TMR_ISR_lora
 38346 ;; This function uses a non-reentrant model
 38347 ;;
 38348                           
 38349                           	psect	text212
 38350  006DC0                     __ptext212:
 38351                           	opt stack 0
 38352  006DC0                     i2_TMR_SwapTimer:
 38353                           	opt stack 13
 38354                           
 38355                           ; BSR set to: 0
 38356                           ;sw_timer.c: 114: static uint16_t oldVal;
 38357                           ;sw_timer.c: 115: static uint16_t retVal;
 38358                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38359                           
 38360                           ;incstack = 0
 38361  006DC0  EC4A  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38362  006DC4  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38363  006DC8  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38364  006DCC                     i2l10597:
 38365  006DCC  EC4A  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38366  006DD0  5040               	movf	TMR_SwapTimer@oldVal,w,c
 38367  006DD2  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38368  006DD4  E103               	bnz	i2u1093_40
 38369  006DD6  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 38370  006DD8  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38371  006DDA  E0F8               	bz	i2l10597
 38372  006DDC                     i2u1093_40:
 38373                           
 38374                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38375  006DDC  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38376  006DE0  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38377  006DE4  EC91  F03A         	call	i2_TMR1_WriteTimer	;wreg free
 38378                           
 38379                           ;sw_timer.c: 128: oldVal++;
 38380  006DE8  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 38381  006DEA  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 38382                           
 38383                           ;sw_timer.c: 130: retVal = oldVal;
 38384  006DEC  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38385  006DF0  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38386                           
 38387                           ;sw_timer.c: 132: return retVal;
 38388  006DF4  C042  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38389  006DF8  C043  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38390  006DFC  0012               	return		;funcret
 38391  006DFE                     __end_ofi2_TMR_SwapTimer:
 38392                           	opt stack 0
 38393                           tosu	equ	0xFFF
 38394                           tosh	equ	0xFFE
 38395                           tosl	equ	0xFFD
 38396                           pclatu	equ	0xFFB
 38397                           pclath	equ	0xFFA
 38398                           tblptru	equ	0xFF8
 38399                           tblptrh	equ	0xFF7
 38400                           tblptrl	equ	0xFF6
 38401                           tablat	equ	0xFF5
 38402                           prodh	equ	0xFF4
 38403                           prodl	equ	0xFF3
 38404                           intcon	equ	0xFF2
 38405                           intcon2	equ	0xFF1
 38406                           intcon3	equ	0xFF0
 38407                           indf0	equ	0xFEF
 38408                           postinc0	equ	0xFEE
 38409                           plusw0	equ	0xFEB
 38410                           fsr0h	equ	0xFEA
 38411                           fsr0l	equ	0xFE9
 38412                           wreg	equ	0xFE8
 38413                           postinc1	equ	0xFE6
 38414                           postdec1	equ	0xFE5
 38415                           plusw1	equ	0xFE3
 38416                           fsr1h	equ	0xFE2
 38417                           fsr1l	equ	0xFE1
 38418                           indf2	equ	0xFDF
 38419                           postinc2	equ	0xFDE
 38420                           postdec2	equ	0xFDD
 38421                           plusw2	equ	0xFDB
 38422                           fsr2h	equ	0xFDA
 38423                           fsr2l	equ	0xFD9
 38424                           status	equ	0xFD8
 38425                           
 38426 ;; *************** function i2_TMR1_WriteTimer *****************
 38427 ;; Defined at:
 38428 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38429 ;; Parameters:    Size  Location     Type
 38430 ;;  timerVal        2    0[COMRAM] unsigned int 
 38431 ;; Auto vars:     Size  Location     Type
 38432 ;;		None
 38433 ;; Return value:  Size  Location     Type
 38434 ;;                  1    wreg      void 
 38435 ;; Registers used:
 38436 ;;		None
 38437 ;; Tracked objects:
 38438 ;;		On entry : 0/0
 38439 ;;		On exit  : 0/0
 38440 ;;		Unchanged: 0/0
 38441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38446 ;;Total ram usage:        2 bytes
 38447 ;; Hardware stack levels used:    1
 38448 ;; This function calls:
 38449 ;;		Nothing
 38450 ;; This function is called by:
 38451 ;;		i2_TMR_SwapTimer
 38452 ;; This function uses a non-reentrant model
 38453 ;;
 38454                           
 38455                           	psect	text213
 38456  007522                     __ptext213:
 38457                           	opt stack 0
 38458  007522                     i2_TMR1_WriteTimer:
 38459                           	opt stack 13
 38460                           
 38461                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38462                           
 38463                           ;incstack = 0
 38464  007522  A4CD               	btfss	4045,2,c	;volatile
 38465  007524  D007               	goto	i2l1347
 38466                           
 38467                           ;tmr1.c: 123: {
 38468                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38469  007526  90CD               	bcf	4045,0,c	;volatile
 38470                           
 38471                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38472  007528  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38473                           
 38474                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38475  00752C  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38476                           
 38477                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38478  007530  80CD               	bsf	4045,0,c	;volatile
 38479                           
 38480                           ;tmr1.c: 133: }
 38481  007532  0012               	return	
 38482  007534                     i2l1347:
 38483                           
 38484                           ;tmr1.c: 134: else
 38485                           ;tmr1.c: 135: {
 38486                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 38487  007534  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38488                           
 38489                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 38490  007538  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38491  00753C  0012               	return		;funcret
 38492  00753E                     __end_ofi2_TMR1_WriteTimer:
 38493                           	opt stack 0
 38494                           tosu	equ	0xFFF
 38495                           tosh	equ	0xFFE
 38496                           tosl	equ	0xFFD
 38497                           pclatu	equ	0xFFB
 38498                           pclath	equ	0xFFA
 38499                           tblptru	equ	0xFF8
 38500                           tblptrh	equ	0xFF7
 38501                           tblptrl	equ	0xFF6
 38502                           tablat	equ	0xFF5
 38503                           prodh	equ	0xFF4
 38504                           prodl	equ	0xFF3
 38505                           intcon	equ	0xFF2
 38506                           intcon2	equ	0xFF1
 38507                           intcon3	equ	0xFF0
 38508                           indf0	equ	0xFEF
 38509                           postinc0	equ	0xFEE
 38510                           plusw0	equ	0xFEB
 38511                           fsr0h	equ	0xFEA
 38512                           fsr0l	equ	0xFE9
 38513                           wreg	equ	0xFE8
 38514                           postinc1	equ	0xFE6
 38515                           postdec1	equ	0xFE5
 38516                           plusw1	equ	0xFE3
 38517                           fsr1h	equ	0xFE2
 38518                           fsr1l	equ	0xFE1
 38519                           indf2	equ	0xFDF
 38520                           postinc2	equ	0xFDE
 38521                           postdec2	equ	0xFDD
 38522                           plusw2	equ	0xFDB
 38523                           fsr2h	equ	0xFDA
 38524                           fsr2l	equ	0xFD9
 38525                           status	equ	0xFD8
 38526                           
 38527 ;; *************** function i2_SwTimersInterrupt *****************
 38528 ;; Defined at:
 38529 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38530 ;; Parameters:    Size  Location     Type
 38531 ;;		None
 38532 ;; Auto vars:     Size  Location     Type
 38533 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 38534 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 38535 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 38536 ;; Return value:  Size  Location     Type
 38537 ;;                  4   24[COMRAM] unsigned long 
 38538 ;; Registers used:
 38539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38540 ;; Tracked objects:
 38541 ;;		On entry : F/0
 38542 ;;		On exit  : F/0
 38543 ;;		Unchanged: 0/0
 38544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38546 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38547 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38548 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38549 ;;Total ram usage:       17 bytes
 38550 ;; Hardware stack levels used:    1
 38551 ;; Hardware stack levels required when called:    2
 38552 ;; This function calls:
 38553 ;;		i2_TMR_GetDeltaTime
 38554 ;; This function is called by:
 38555 ;;		_TMR_ISR_lora
 38556 ;; This function uses a non-reentrant model
 38557 ;;
 38558                           
 38559                           	psect	text214
 38560  004E16                     __ptext214:
 38561                           	opt stack 0
 38562  004E16                     i2_SwTimersInterrupt:
 38563                           	opt stack 12
 38564                           
 38565                           ; BSR set to: 0
 38566                           ;sw_timer.c: 289: uint8_t i;
 38567                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38568                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38569                           
 38570                           ;incstack = 0
 38571  004E16  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38572  004E18  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38573  004E1A  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38574  004E1C  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38575                           
 38576                           ; BSR set to: 0
 38577                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38578  004E1E  EC1E  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 38579  004E22  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38580  004E26  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38581  004E2A  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38582  004E2E  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38583                           
 38584                           ; BSR set to: 0
 38585                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38586  004E32  6A29               	clrf	i2SwTimersInterrupt@i,c
 38587  004E34  D05A               	goto	i2l10627
 38588  004E36                     i2l10615:
 38589                           
 38590                           ; BSR set to: 0
 38591                           ;sw_timer.c: 298: {
 38592                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38593  004E36  5029               	movf	i2SwTimersInterrupt@i,w,c
 38594  004E38  0D08               	mullw	8
 38595  004E3A  0E04               	movlw	low (_swTimers+4)
 38596  004E3C  24F3               	addwf	prodl,w,c
 38597  004E3E  6ED9               	movwf	fsr2l,c
 38598  004E40  0E03               	movlw	high (_swTimers+4)
 38599  004E42  20F4               	addwfc	prodh,w,c
 38600  004E44  6EDA               	movwf	fsr2h,c
 38601  004E46  04DE               	decf	postinc2,w,c
 38602  004E48  E14F               	bnz	i2l10625
 38603                           
 38604                           ; BSR set to: 0
 38605                           ;sw_timer.c: 302: {
 38606                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38607  004E4A  5029               	movf	i2SwTimersInterrupt@i,w,c
 38608  004E4C  0D08               	mullw	8
 38609  004E4E  0E00               	movlw	low _swTimers
 38610  004E50  24F3               	addwf	prodl,w,c
 38611  004E52  6ED9               	movwf	fsr2l,c
 38612  004E54  0E03               	movlw	high _swTimers
 38613  004E56  20F4               	addwfc	prodh,w,c
 38614  004E58  6EDA               	movwf	fsr2h,c
 38615  004E5A  50DE               	movf	postinc2,w,c
 38616  004E5C  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38617  004E5E  50DE               	movf	postinc2,w,c
 38618  004E60  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38619  004E62  50DE               	movf	postinc2,w,c
 38620  004E64  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38621  004E66  50DE               	movf	postinc2,w,c
 38622  004E68  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38623  004E6A  E30D               	bnc	i2l10621
 38624                           
 38625                           ; BSR set to: 0
 38626                           ;sw_timer.c: 304: {
 38627                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38628  004E6C  5029               	movf	i2SwTimersInterrupt@i,w,c
 38629  004E6E  0D08               	mullw	8
 38630  004E70  0E00               	movlw	low _swTimers
 38631  004E72  24F3               	addwf	prodl,w,c
 38632  004E74  6ED9               	movwf	fsr2l,c
 38633  004E76  0E03               	movlw	high _swTimers
 38634  004E78  20F4               	addwfc	prodh,w,c
 38635  004E7A  6EDA               	movwf	fsr2h,c
 38636  004E7C  6ADE               	clrf	postinc2,c
 38637  004E7E  6ADE               	clrf	postinc2,c
 38638  004E80  6ADE               	clrf	postinc2,c
 38639  004E82  6ADD               	clrf	postdec2,c
 38640                           
 38641                           ;sw_timer.c: 306: }
 38642  004E84  D031               	goto	i2l10625
 38643  004E86                     i2l10621:
 38644                           
 38645                           ; BSR set to: 0
 38646                           ;sw_timer.c: 307: else
 38647                           ;sw_timer.c: 308: {
 38648                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38649  004E86  5029               	movf	i2SwTimersInterrupt@i,w,c
 38650  004E88  0D08               	mullw	8
 38651  004E8A  0E00               	movlw	low _swTimers
 38652  004E8C  24F3               	addwf	prodl,w,c
 38653  004E8E  6ED9               	movwf	fsr2l,c
 38654  004E90  0E03               	movlw	high _swTimers
 38655  004E92  20F4               	addwfc	prodh,w,c
 38656  004E94  6EDA               	movwf	fsr2h,c
 38657  004E96  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38658  004E98  5EDE               	subwf	postinc2,f,c
 38659  004E9A  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38660  004E9C  5ADE               	subwfb	postinc2,f,c
 38661  004E9E  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38662  004EA0  5ADE               	subwfb	postinc2,f,c
 38663  004EA2  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38664  004EA4  5ADE               	subwfb	postinc2,f,c
 38665                           
 38666                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38667  004EA6  5029               	movf	i2SwTimersInterrupt@i,w,c
 38668  004EA8  0D08               	mullw	8
 38669  004EAA  0E00               	movlw	low _swTimers
 38670  004EAC  24F3               	addwf	prodl,w,c
 38671  004EAE  6ED9               	movwf	fsr2l,c
 38672  004EB0  0E03               	movlw	high _swTimers
 38673  004EB2  20F4               	addwfc	prodh,w,c
 38674  004EB4  6EDA               	movwf	fsr2h,c
 38675  004EB6  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38676  004EB8  5CDE               	subwf	postinc2,w,c
 38677  004EBA  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38678  004EBC  58DE               	subwfb	postinc2,w,c
 38679  004EBE  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38680  004EC0  58DE               	subwfb	postinc2,w,c
 38681  004EC2  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38682  004EC4  58DE               	subwfb	postinc2,w,c
 38683  004EC6  E210               	bc	i2l10625
 38684                           
 38685                           ; BSR set to: 0
 38686                           ;sw_timer.c: 313: {
 38687                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38688  004EC8  5029               	movf	i2SwTimersInterrupt@i,w,c
 38689  004ECA  0D08               	mullw	8
 38690  004ECC  0E00               	movlw	low _swTimers
 38691  004ECE  24F3               	addwf	prodl,w,c
 38692  004ED0  6ED9               	movwf	fsr2l,c
 38693  004ED2  0E03               	movlw	high _swTimers
 38694  004ED4  20F4               	addwfc	prodh,w,c
 38695  004ED6  6EDA               	movwf	fsr2h,c
 38696  004ED8  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38697  004EDC  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38698  004EE0  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38699  004EE4  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38700  004EE8                     i2l10625:
 38701                           
 38702                           ; BSR set to: 0
 38703  004EE8  2A29               	incf	i2SwTimersInterrupt@i,f,c
 38704  004EEA                     i2l10627:
 38705                           
 38706                           ; BSR set to: 0
 38707  004EEA  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38708  004EEC  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 38709  004EEE  E3A3               	bnc	i2l10615
 38710                           
 38711                           ; BSR set to: 0
 38712                           ;sw_timer.c: 315: }
 38713                           ;sw_timer.c: 316: }
 38714                           ;sw_timer.c: 317: }
 38715                           ;sw_timer.c: 318: }
 38716                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38717  004EF0  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38718  004EF4  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38719  004EF8  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38720  004EFC  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38721                           
 38722                           ; BSR set to: 0
 38723  004F00  0012               	return		;funcret
 38724  004F02                     __end_ofi2_SwTimersInterrupt:
 38725                           	opt stack 0
 38726                           tosu	equ	0xFFF
 38727                           tosh	equ	0xFFE
 38728                           tosl	equ	0xFFD
 38729                           pclatu	equ	0xFFB
 38730                           pclath	equ	0xFFA
 38731                           tblptru	equ	0xFF8
 38732                           tblptrh	equ	0xFF7
 38733                           tblptrl	equ	0xFF6
 38734                           tablat	equ	0xFF5
 38735                           prodh	equ	0xFF4
 38736                           prodl	equ	0xFF3
 38737                           intcon	equ	0xFF2
 38738                           intcon2	equ	0xFF1
 38739                           intcon3	equ	0xFF0
 38740                           indf0	equ	0xFEF
 38741                           postinc0	equ	0xFEE
 38742                           plusw0	equ	0xFEB
 38743                           fsr0h	equ	0xFEA
 38744                           fsr0l	equ	0xFE9
 38745                           wreg	equ	0xFE8
 38746                           postinc1	equ	0xFE6
 38747                           postdec1	equ	0xFE5
 38748                           plusw1	equ	0xFE3
 38749                           fsr1h	equ	0xFE2
 38750                           fsr1l	equ	0xFE1
 38751                           indf2	equ	0xFDF
 38752                           postinc2	equ	0xFDE
 38753                           postdec2	equ	0xFDD
 38754                           plusw2	equ	0xFDB
 38755                           fsr2h	equ	0xFDA
 38756                           fsr2l	equ	0xFD9
 38757                           status	equ	0xFD8
 38758                           
 38759 ;; *************** function i2_TMR_GetDeltaTime *****************
 38760 ;; Defined at:
 38761 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38762 ;; Parameters:    Size  Location     Type
 38763 ;;		None
 38764 ;; Auto vars:     Size  Location     Type
 38765 ;;		None
 38766 ;; Return value:  Size  Location     Type
 38767 ;;                  4    8[COMRAM] unsigned long 
 38768 ;; Registers used:
 38769 ;;		wreg, status,2, status,0, cstack
 38770 ;; Tracked objects:
 38771 ;;		On entry : F/0
 38772 ;;		On exit  : F/0
 38773 ;;		Unchanged: 0/0
 38774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38777 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38778 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38779 ;;Total ram usage:       16 bytes
 38780 ;; Hardware stack levels used:    1
 38781 ;; Hardware stack levels required when called:    1
 38782 ;; This function calls:
 38783 ;;		i2_TMR1_ReadTimer
 38784 ;; This function is called by:
 38785 ;;		i2_SwTimersInterrupt
 38786 ;; This function uses a non-reentrant model
 38787 ;;
 38788                           
 38789                           	psect	text215
 38790  004C3C                     __ptext215:
 38791                           	opt stack 0
 38792  004C3C                     i2_TMR_GetDeltaTime:
 38793                           	opt stack 12
 38794                           
 38795                           ; BSR set to: 0
 38796                           ;sw_timer.c: 90: static uint32_t retVal;
 38797                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38798                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38799                           
 38800                           ; BSR set to: 0
 38801                           ;incstack = 0
 38802  004C3C  EC4A  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38803  004C40  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38804  004C44  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38805                           
 38806                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38807  004C48  0100               	movlb	0	; () banked
 38808  004C4A  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 38809  004C4C  E13D               	bnz	i2l9933
 38810                           
 38811                           ; BSR set to: 0
 38812                           ;sw_timer.c: 96: {
 38813                           ;sw_timer.c: 97: timerOverflow = 0;
 38814  004C4E  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 38815                           
 38816                           ; BSR set to: 0
 38817                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38818  004C50  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38819  004C52  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38820  004C54  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38821  004C56  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38822  004C58  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38823  004C5A  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38824  004C5C  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38825  004C5E  A0D8               	btfss	status,0,c
 38826  004C60  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 38827  004C62  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 38828  004C64  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38829  004C66  5036               	movf	_ticksAccounted,w,c	;volatile
 38830  004C68  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38831  004C6A  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38832  004C6C  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38833  004C6E  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38834  004C70  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38835  004C72  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38836  004C74  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38837  004C76  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38838  004C78  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38839  004C7A  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38840  004C7C  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38841  004C7E  503A               	movf	_ticksAdded,w,c	;volatile
 38842  004C80  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38843  004C82  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 38844  004C84  503B               	movf	_ticksAdded+1,w,c	;volatile
 38845  004C86  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38846  004C88  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 38847  004C8A  503C               	movf	_ticksAdded+2,w,c	;volatile
 38848  004C8C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38849  004C8E  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 38850  004C90  503D               	movf	_ticksAdded+3,w,c	;volatile
 38851  004C92  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38852  004C94  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 38853  004C96  0E00               	movlw	0
 38854  004C98  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 38855  004C9A  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 38856  004C9C  0E00               	movlw	0
 38857  004C9E  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 38858  004CA0  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 38859  004CA2  0E01               	movlw	1
 38860  004CA4  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 38861  004CA6  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 38862  004CA8  0E00               	movlw	0
 38863  004CAA  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 38864  004CAC  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 38865                           
 38866                           ; BSR set to: 0
 38867                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38868  004CAE  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38869  004CB2  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38870  004CB6  6A38               	clrf	_ticksAccounted+2,c	;volatile
 38871  004CB8  6A39               	clrf	_ticksAccounted+3,c	;volatile
 38872                           
 38873                           ; BSR set to: 0
 38874                           ;sw_timer.c: 100: ticksAdded = 0;
 38875  004CBA  6A3A               	clrf	_ticksAdded,c	;volatile
 38876  004CBC  6A3B               	clrf	_ticksAdded+1,c	;volatile
 38877  004CBE  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38878  004CC0  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38879                           
 38880                           ; BSR set to: 0
 38881                           ;sw_timer.c: 101: reloadVal = 0;
 38882  004CC2  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 38883  004CC4  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 38884                           
 38885                           ;sw_timer.c: 102: }
 38886  004CC6  D028               	goto	i2l9935
 38887  004CC8                     i2l9933:
 38888                           
 38889                           ; BSR set to: 0
 38890                           ;sw_timer.c: 103: else
 38891                           ;sw_timer.c: 104: {
 38892                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38893  004CC8  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38894  004CCA  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38895  004CCC  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38896  004CCE  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38897  004CD0  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38898  004CD2  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38899  004CD4  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38900  004CD6  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38901  004CD8  5036               	movf	_ticksAccounted,w,c	;volatile
 38902  004CDA  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38903  004CDC  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38904  004CDE  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38905  004CE0  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38906  004CE2  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38907  004CE4  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38908  004CE6  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38909  004CE8  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38910  004CEA  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38911  004CEC  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38912  004CEE  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38913  004CF0  503A               	movf	_ticksAdded,w,c	;volatile
 38914  004CF2  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38915  004CF4  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 38916  004CF6  503B               	movf	_ticksAdded+1,w,c	;volatile
 38917  004CF8  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38918  004CFA  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 38919  004CFC  503C               	movf	_ticksAdded+2,w,c	;volatile
 38920  004CFE  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38921  004D00  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 38922  004D02  503D               	movf	_ticksAdded+3,w,c	;volatile
 38923  004D04  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38924  004D06  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 38925                           
 38926                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38927  004D08  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 38928  004D0A  2636               	addwf	_ticksAccounted,f,c	;volatile
 38929  004D0C  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 38930  004D0E  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 38931  004D10  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 38932  004D12  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 38933  004D14  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 38934  004D16  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 38935  004D18                     i2l9935:
 38936                           
 38937                           ; BSR set to: 0
 38938                           ;sw_timer.c: 107: }
 38939                           ;sw_timer.c: 109: return retVal;
 38940  004D18  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 38941  004D1C  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 38942  004D20  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 38943  004D24  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 38944                           
 38945                           ; BSR set to: 0
 38946  004D28  0012               	return		;funcret
 38947  004D2A                     __end_ofi2_TMR_GetDeltaTime:
 38948                           	opt stack 0
 38949                           tosu	equ	0xFFF
 38950                           tosh	equ	0xFFE
 38951                           tosl	equ	0xFFD
 38952                           pclatu	equ	0xFFB
 38953                           pclath	equ	0xFFA
 38954                           tblptru	equ	0xFF8
 38955                           tblptrh	equ	0xFF7
 38956                           tblptrl	equ	0xFF6
 38957                           tablat	equ	0xFF5
 38958                           prodh	equ	0xFF4
 38959                           prodl	equ	0xFF3
 38960                           intcon	equ	0xFF2
 38961                           intcon2	equ	0xFF1
 38962                           intcon3	equ	0xFF0
 38963                           indf0	equ	0xFEF
 38964                           postinc0	equ	0xFEE
 38965                           plusw0	equ	0xFEB
 38966                           fsr0h	equ	0xFEA
 38967                           fsr0l	equ	0xFE9
 38968                           wreg	equ	0xFE8
 38969                           postinc1	equ	0xFE6
 38970                           postdec1	equ	0xFE5
 38971                           plusw1	equ	0xFE3
 38972                           fsr1h	equ	0xFE2
 38973                           fsr1l	equ	0xFE1
 38974                           indf2	equ	0xFDF
 38975                           postinc2	equ	0xFDE
 38976                           postdec2	equ	0xFDD
 38977                           plusw2	equ	0xFDB
 38978                           fsr2h	equ	0xFDA
 38979                           fsr2l	equ	0xFD9
 38980                           status	equ	0xFD8
 38981                           
 38982 ;; *************** function i2_TMR1_ReadTimer *****************
 38983 ;; Defined at:
 38984 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 38985 ;; Parameters:    Size  Location     Type
 38986 ;;		None
 38987 ;; Auto vars:     Size  Location     Type
 38988 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 38989 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 38990 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 38991 ;; Return value:  Size  Location     Type
 38992 ;;                  2    0[COMRAM] unsigned int 
 38993 ;; Registers used:
 38994 ;;		wreg, status,2
 38995 ;; Tracked objects:
 38996 ;;		On entry : 0/0
 38997 ;;		On exit  : 0/0
 38998 ;;		Unchanged: 0/0
 38999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39001 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39003 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39004 ;;Total ram usage:        8 bytes
 39005 ;; Hardware stack levels used:    1
 39006 ;; This function calls:
 39007 ;;		Nothing
 39008 ;; This function is called by:
 39009 ;;		i2_TMR_GetDeltaTime
 39010 ;;		i2_TMR_SwapTimer
 39011 ;; This function uses a non-reentrant model
 39012 ;;
 39013                           
 39014                           	psect	text216
 39015  007494                     __ptext216:
 39016                           	opt stack 0
 39017  007494                     i2_TMR1_ReadTimer:
 39018                           	opt stack 13
 39019                           
 39020                           ;tmr1.c: 108: uint16_t readVal;
 39021                           ;tmr1.c: 109: uint8_t readValHigh;
 39022                           ;tmr1.c: 110: uint8_t readValLow;
 39023                           ;tmr1.c: 112: readValLow = TMR1L;
 39024                           
 39025                           ; BSR set to: 0
 39026                           ;incstack = 0
 39027  007494  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39028                           
 39029                           ;tmr1.c: 113: readValHigh = TMR1H;
 39030  007498  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39031                           
 39032                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39033  00749C  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39034  00749E  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39035  0074A0  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39036  0074A2  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39037  0074A4  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39038                           
 39039                           ;tmr1.c: 117: return readVal;
 39040  0074A8  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39041  0074AC  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39042  0074B0  0012               	return		;funcret
 39043  0074B2                     __end_ofi2_TMR1_ReadTimer:
 39044                           	opt stack 0
 39045                           tosu	equ	0xFFF
 39046                           tosh	equ	0xFFE
 39047                           tosl	equ	0xFFD
 39048                           pclatu	equ	0xFFB
 39049                           pclath	equ	0xFFA
 39050                           tblptru	equ	0xFF8
 39051                           tblptrh	equ	0xFF7
 39052                           tblptrl	equ	0xFF6
 39053                           tablat	equ	0xFF5
 39054                           prodh	equ	0xFF4
 39055                           prodl	equ	0xFF3
 39056                           intcon	equ	0xFF2
 39057                           intcon2	equ	0xFF1
 39058                           intcon3	equ	0xFF0
 39059                           indf0	equ	0xFEF
 39060                           postinc0	equ	0xFEE
 39061                           plusw0	equ	0xFEB
 39062                           fsr0h	equ	0xFEA
 39063                           fsr0l	equ	0xFE9
 39064                           wreg	equ	0xFE8
 39065                           postinc1	equ	0xFE6
 39066                           postdec1	equ	0xFE5
 39067                           plusw1	equ	0xFE3
 39068                           fsr1h	equ	0xFE2
 39069                           fsr1l	equ	0xFE1
 39070                           indf2	equ	0xFDF
 39071                           postinc2	equ	0xFDE
 39072                           postdec2	equ	0xFDD
 39073                           plusw2	equ	0xFDB
 39074                           fsr2h	equ	0xFDA
 39075                           fsr2l	equ	0xFD9
 39076                           status	equ	0xFD8
 39077                           
 39078 ;; *************** function _PIN_MANAGER_IOC *****************
 39079 ;; Defined at:
 39080 ;;		line 103 in file "mcc_generated_files/pin_manager.c"
 39081 ;; Parameters:    Size  Location     Type
 39082 ;;		None
 39083 ;; Auto vars:     Size  Location     Type
 39084 ;;		None
 39085 ;; Return value:  Size  Location     Type
 39086 ;;                  1    wreg      void 
 39087 ;; Registers used:
 39088 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39089 ;; Tracked objects:
 39090 ;;		On entry : 0/0
 39091 ;;		On exit  : 0/0
 39092 ;;		Unchanged: 0/0
 39093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39098 ;;Total ram usage:        0 bytes
 39099 ;; Hardware stack levels used:    1
 39100 ;; Hardware stack levels required when called:    2
 39101 ;; This function calls:
 39102 ;;		_IOCB4_ISR
 39103 ;; This function is called by:
 39104 ;;		_INTERRUPT_InterruptManager
 39105 ;; This function uses a non-reentrant model
 39106 ;;
 39107                           
 39108                           	psect	text217
 39109  00781C                     __ptext217:
 39110                           	opt stack 0
 39111  00781C                     _PIN_MANAGER_IOC:
 39112                           	opt stack 15
 39113                           
 39114                           ;pin_manager.c: 106: if(IOCBbits.IOCB4 == 1)
 39115                           
 39116                           ;incstack = 0
 39117  00781C  B862               	btfsc	3938,4,c	;volatile
 39118                           
 39119                           ;pin_manager.c: 107: {
 39120                           ;pin_manager.c: 108: IOCB4_ISR();
 39121  00781E  EC9F  F03A         	call	_IOCB4_ISR	;wreg free
 39122                           
 39123                           ;pin_manager.c: 109: }
 39124                           ;pin_manager.c: 112: INTCONbits.RBIF = 0;
 39125  007822  90F2               	bcf	intcon,0,c	;volatile
 39126  007824  0012               	return		;funcret
 39127  007826                     __end_of_PIN_MANAGER_IOC:
 39128                           	opt stack 0
 39129                           tosu	equ	0xFFF
 39130                           tosh	equ	0xFFE
 39131                           tosl	equ	0xFFD
 39132                           pclatu	equ	0xFFB
 39133                           pclath	equ	0xFFA
 39134                           tblptru	equ	0xFF8
 39135                           tblptrh	equ	0xFF7
 39136                           tblptrl	equ	0xFF6
 39137                           tablat	equ	0xFF5
 39138                           prodh	equ	0xFF4
 39139                           prodl	equ	0xFF3
 39140                           intcon	equ	0xFF2
 39141                           intcon2	equ	0xFF1
 39142                           intcon3	equ	0xFF0
 39143                           indf0	equ	0xFEF
 39144                           postinc0	equ	0xFEE
 39145                           plusw0	equ	0xFEB
 39146                           fsr0h	equ	0xFEA
 39147                           fsr0l	equ	0xFE9
 39148                           wreg	equ	0xFE8
 39149                           postinc1	equ	0xFE6
 39150                           postdec1	equ	0xFE5
 39151                           plusw1	equ	0xFE3
 39152                           fsr1h	equ	0xFE2
 39153                           fsr1l	equ	0xFE1
 39154                           indf2	equ	0xFDF
 39155                           postinc2	equ	0xFDE
 39156                           postdec2	equ	0xFDD
 39157                           plusw2	equ	0xFDB
 39158                           fsr2h	equ	0xFDA
 39159                           fsr2l	equ	0xFD9
 39160                           status	equ	0xFD8
 39161                           
 39162 ;; *************** function _IOCB4_ISR *****************
 39163 ;; Defined at:
 39164 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 39165 ;; Parameters:    Size  Location     Type
 39166 ;;		None
 39167 ;; Auto vars:     Size  Location     Type
 39168 ;;		None
 39169 ;; Return value:  Size  Location     Type
 39170 ;;                  1    wreg      void 
 39171 ;; Registers used:
 39172 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39173 ;; Tracked objects:
 39174 ;;		On entry : 0/0
 39175 ;;		On exit  : 0/0
 39176 ;;		Unchanged: 0/0
 39177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39182 ;;Total ram usage:        0 bytes
 39183 ;; Hardware stack levels used:    1
 39184 ;; Hardware stack levels required when called:    1
 39185 ;; This function calls:
 39186 ;;		Absolute function
 39187 ;;		_DIO2_ISR_Lora
 39188 ;;		_IOCB4_DefaultInterruptHandler
 39189 ;; This function is called by:
 39190 ;;		_PIN_MANAGER_IOC
 39191 ;; This function uses a non-reentrant model
 39192 ;;
 39193                           
 39194                           	psect	text218
 39195  00753E                     __ptext218:
 39196                           	opt stack 0
 39197  00753E                     _IOCB4_ISR:
 39198                           	opt stack 15
 39199                           
 39200                           ;pin_manager.c: 124: if(IOCB4_InterruptHandler)
 39201                           
 39202                           ;incstack = 0
 39203  00753E  0101               	movlb	1	; () banked
 39204  007540  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39205  007542  11FB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39206  007544  B4D8               	btfsc	status,2,c
 39207  007546  0012               	return	
 39208                           
 39209                           ; BSR set to: 1
 39210                           ;pin_manager.c: 125: {
 39211                           ;pin_manager.c: 126: IOCB4_InterruptHandler();
 39212  007548  0005               	push	
 39213  00754A  6EFA               	movwf	pclath,c
 39214  00754C  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39215  00754E  6EFD               	movwf	tosl,c
 39216  007550  51FB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39217  007552  6EFE               	movwf	tosh,c
 39218  007554  6AFF               	clrf	tosu,c
 39219  007556  50FA               	movf	pclath,w,c
 39220  007558  0012               	return		;indir
 39221  00755A                     __end_of_IOCB4_ISR:
 39222                           	opt stack 0
 39223                           tosu	equ	0xFFF
 39224                           tosh	equ	0xFFE
 39225                           tosl	equ	0xFFD
 39226                           pclatu	equ	0xFFB
 39227                           pclath	equ	0xFFA
 39228                           tblptru	equ	0xFF8
 39229                           tblptrh	equ	0xFF7
 39230                           tblptrl	equ	0xFF6
 39231                           tablat	equ	0xFF5
 39232                           prodh	equ	0xFF4
 39233                           prodl	equ	0xFF3
 39234                           intcon	equ	0xFF2
 39235                           intcon2	equ	0xFF1
 39236                           intcon3	equ	0xFF0
 39237                           indf0	equ	0xFEF
 39238                           postinc0	equ	0xFEE
 39239                           plusw0	equ	0xFEB
 39240                           fsr0h	equ	0xFEA
 39241                           fsr0l	equ	0xFE9
 39242                           wreg	equ	0xFE8
 39243                           postinc1	equ	0xFE6
 39244                           postdec1	equ	0xFE5
 39245                           plusw1	equ	0xFE3
 39246                           fsr1h	equ	0xFE2
 39247                           fsr1l	equ	0xFE1
 39248                           indf2	equ	0xFDF
 39249                           postinc2	equ	0xFDE
 39250                           postdec2	equ	0xFDD
 39251                           plusw2	equ	0xFDB
 39252                           fsr2h	equ	0xFDA
 39253                           fsr2l	equ	0xFD9
 39254                           status	equ	0xFD8
 39255                           
 39256 ;; *************** function _DIO2_ISR_Lora *****************
 39257 ;; Defined at:
 39258 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39259 ;; Parameters:    Size  Location     Type
 39260 ;;		None
 39261 ;; Auto vars:     Size  Location     Type
 39262 ;;		None
 39263 ;; Return value:  Size  Location     Type
 39264 ;;                  1    wreg      void 
 39265 ;; Registers used:
 39266 ;;		status,2, status,0
 39267 ;; Tracked objects:
 39268 ;;		On entry : F/1
 39269 ;;		On exit  : F/0
 39270 ;;		Unchanged: 0/0
 39271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39276 ;;Total ram usage:        0 bytes
 39277 ;; Hardware stack levels used:    1
 39278 ;; This function calls:
 39279 ;;		Nothing
 39280 ;; This function is called by:
 39281 ;;		_DIO2_ISR_Lora_Init
 39282 ;;		_IOCB4_ISR
 39283 ;; This function uses a non-reentrant model
 39284 ;;
 39285                           
 39286                           	psect	text219
 39287  00788C                     __ptext219:
 39288                           	opt stack 0
 39289  00788C                     _DIO2_ISR_Lora:
 39290                           	opt stack 15
 39291                           
 39292                           ; BSR set to: 1
 39293                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39294                           
 39295                           ;incstack = 0
 39296  00788C  0100               	movlb	0	; () banked
 39297  00788E  85F0               	bsf	_dioStatus& (0+255),2,b	;volatile
 39298                           
 39299                           ; BSR set to: 0
 39300  007890  0012               	return		;funcret
 39301  007892                     __end_of_DIO2_ISR_Lora:
 39302                           	opt stack 0
 39303                           tosu	equ	0xFFF
 39304                           tosh	equ	0xFFE
 39305                           tosl	equ	0xFFD
 39306                           pclatu	equ	0xFFB
 39307                           pclath	equ	0xFFA
 39308                           tblptru	equ	0xFF8
 39309                           tblptrh	equ	0xFF7
 39310                           tblptrl	equ	0xFF6
 39311                           tablat	equ	0xFF5
 39312                           prodh	equ	0xFF4
 39313                           prodl	equ	0xFF3
 39314                           intcon	equ	0xFF2
 39315                           intcon2	equ	0xFF1
 39316                           intcon3	equ	0xFF0
 39317                           indf0	equ	0xFEF
 39318                           postinc0	equ	0xFEE
 39319                           plusw0	equ	0xFEB
 39320                           fsr0h	equ	0xFEA
 39321                           fsr0l	equ	0xFE9
 39322                           wreg	equ	0xFE8
 39323                           postinc1	equ	0xFE6
 39324                           postdec1	equ	0xFE5
 39325                           plusw1	equ	0xFE3
 39326                           fsr1h	equ	0xFE2
 39327                           fsr1l	equ	0xFE1
 39328                           indf2	equ	0xFDF
 39329                           postinc2	equ	0xFDE
 39330                           postdec2	equ	0xFDD
 39331                           plusw2	equ	0xFDB
 39332                           fsr2h	equ	0xFDA
 39333                           fsr2l	equ	0xFD9
 39334                           status	equ	0xFD8
 39335                           
 39336 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39337 ;; Defined at:
 39338 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 39339 ;; Parameters:    Size  Location     Type
 39340 ;;		None
 39341 ;; Auto vars:     Size  Location     Type
 39342 ;;		None
 39343 ;; Return value:  Size  Location     Type
 39344 ;;                  1    wreg      void 
 39345 ;; Registers used:
 39346 ;;		None
 39347 ;; Tracked objects:
 39348 ;;		On entry : F/1
 39349 ;;		On exit  : F/1
 39350 ;;		Unchanged: F/0
 39351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39356 ;;Total ram usage:        0 bytes
 39357 ;; Hardware stack levels used:    1
 39358 ;; This function calls:
 39359 ;;		Nothing
 39360 ;; This function is called by:
 39361 ;;		_PIN_MANAGER_Initialize
 39362 ;;		_IOCB4_ISR
 39363 ;; This function uses a non-reentrant model
 39364 ;;
 39365                           
 39366                           	psect	text220
 39367  0078DA                     __ptext220:
 39368                           	opt stack 0
 39369  0078DA                     _IOCB4_DefaultInterruptHandler:
 39370                           	opt stack 15
 39371                           
 39372                           ; BSR set to: 1
 39373                           
 39374                           ; BSR set to: 0
 39375                           ;incstack = 0
 39376  0078DA  0012               	return		;funcret
 39377  0078DC                     __end_of_IOCB4_DefaultInterruptHandler:
 39378                           	opt stack 0
 39379                           tosu	equ	0xFFF
 39380                           tosh	equ	0xFFE
 39381                           tosl	equ	0xFFD
 39382                           pclatu	equ	0xFFB
 39383                           pclath	equ	0xFFA
 39384                           tblptru	equ	0xFF8
 39385                           tblptrh	equ	0xFF7
 39386                           tblptrl	equ	0xFF6
 39387                           tablat	equ	0xFF5
 39388                           prodh	equ	0xFF4
 39389                           prodl	equ	0xFF3
 39390                           intcon	equ	0xFF2
 39391                           intcon2	equ	0xFF1
 39392                           intcon3	equ	0xFF0
 39393                           indf0	equ	0xFEF
 39394                           postinc0	equ	0xFEE
 39395                           plusw0	equ	0xFEB
 39396                           fsr0h	equ	0xFEA
 39397                           fsr0l	equ	0xFE9
 39398                           wreg	equ	0xFE8
 39399                           postinc1	equ	0xFE6
 39400                           postdec1	equ	0xFE5
 39401                           plusw1	equ	0xFE3
 39402                           fsr1h	equ	0xFE2
 39403                           fsr1l	equ	0xFE1
 39404                           indf2	equ	0xFDF
 39405                           postinc2	equ	0xFDE
 39406                           postdec2	equ	0xFDD
 39407                           plusw2	equ	0xFDB
 39408                           fsr2h	equ	0xFDA
 39409                           fsr2l	equ	0xFD9
 39410                           status	equ	0xFD8
 39411                           
 39412 ;; *************** function _INT2_ISR *****************
 39413 ;; Defined at:
 39414 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 39415 ;; Parameters:    Size  Location     Type
 39416 ;;		None
 39417 ;; Auto vars:     Size  Location     Type
 39418 ;;		None
 39419 ;; Return value:  Size  Location     Type
 39420 ;;                  1    wreg      void 
 39421 ;; Registers used:
 39422 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39423 ;; Tracked objects:
 39424 ;;		On entry : 0/0
 39425 ;;		On exit  : 0/0
 39426 ;;		Unchanged: 0/0
 39427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39432 ;;Total ram usage:        0 bytes
 39433 ;; Hardware stack levels used:    1
 39434 ;; Hardware stack levels required when called:    2
 39435 ;; This function calls:
 39436 ;;		_INT2_CallBack
 39437 ;; This function is called by:
 39438 ;;		_INTERRUPT_InterruptManager
 39439 ;; This function uses a non-reentrant model
 39440 ;;
 39441                           
 39442                           	psect	text221
 39443  007892                     __ptext221:
 39444                           	opt stack 0
 39445  007892                     _INT2_ISR:
 39446                           	opt stack 15
 39447                           
 39448                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 39449                           
 39450                           ; BSR set to: 1
 39451                           ;incstack = 0
 39452  007892  92F0               	bcf	intcon3,1,c	;volatile
 39453                           
 39454                           ;ext_int.c: 95: INT2_CallBack();
 39455  007894  EFAD  F03A         	goto	_INT2_CallBack	;wreg free
 39456  007898                     __end_of_INT2_ISR:
 39457                           	opt stack 0
 39458                           tosu	equ	0xFFF
 39459                           tosh	equ	0xFFE
 39460                           tosl	equ	0xFFD
 39461                           pclatu	equ	0xFFB
 39462                           pclath	equ	0xFFA
 39463                           tblptru	equ	0xFF8
 39464                           tblptrh	equ	0xFF7
 39465                           tblptrl	equ	0xFF6
 39466                           tablat	equ	0xFF5
 39467                           prodh	equ	0xFF4
 39468                           prodl	equ	0xFF3
 39469                           intcon	equ	0xFF2
 39470                           intcon2	equ	0xFF1
 39471                           intcon3	equ	0xFF0
 39472                           indf0	equ	0xFEF
 39473                           postinc0	equ	0xFEE
 39474                           plusw0	equ	0xFEB
 39475                           fsr0h	equ	0xFEA
 39476                           fsr0l	equ	0xFE9
 39477                           wreg	equ	0xFE8
 39478                           postinc1	equ	0xFE6
 39479                           postdec1	equ	0xFE5
 39480                           plusw1	equ	0xFE3
 39481                           fsr1h	equ	0xFE2
 39482                           fsr1l	equ	0xFE1
 39483                           indf2	equ	0xFDF
 39484                           postinc2	equ	0xFDE
 39485                           postdec2	equ	0xFDD
 39486                           plusw2	equ	0xFDB
 39487                           fsr2h	equ	0xFDA
 39488                           fsr2l	equ	0xFD9
 39489                           status	equ	0xFD8
 39490                           
 39491 ;; *************** function _INT2_CallBack *****************
 39492 ;; Defined at:
 39493 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 39494 ;; Parameters:    Size  Location     Type
 39495 ;;		None
 39496 ;; Auto vars:     Size  Location     Type
 39497 ;;		None
 39498 ;; Return value:  Size  Location     Type
 39499 ;;                  1    wreg      void 
 39500 ;; Registers used:
 39501 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39502 ;; Tracked objects:
 39503 ;;		On entry : 0/0
 39504 ;;		On exit  : 0/0
 39505 ;;		Unchanged: 0/0
 39506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39511 ;;Total ram usage:        0 bytes
 39512 ;; Hardware stack levels used:    1
 39513 ;; Hardware stack levels required when called:    1
 39514 ;; This function calls:
 39515 ;;		Absolute function
 39516 ;;		_DIO1_ISR_Lora
 39517 ;;		_INT2_DefaultInterruptHandler
 39518 ;; This function is called by:
 39519 ;;		_INT2_ISR
 39520 ;; This function uses a non-reentrant model
 39521 ;;
 39522                           
 39523                           	psect	text222
 39524  00755A                     __ptext222:
 39525                           	opt stack 0
 39526  00755A                     _INT2_CallBack:
 39527                           	opt stack 15
 39528                           
 39529                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 39530                           
 39531                           ;incstack = 0
 39532  00755A  0101               	movlb	1	; () banked
 39533  00755C  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 39534  00755E  11F9               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39535  007560  B4D8               	btfsc	status,2,c
 39536  007562  0012               	return	
 39537                           
 39538                           ; BSR set to: 1
 39539                           ;ext_int.c: 105: {
 39540                           ;ext_int.c: 106: INT2_InterruptHandler();
 39541  007564  0005               	push	
 39542  007566  6EFA               	movwf	pclath,c
 39543  007568  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 39544  00756A  6EFD               	movwf	tosl,c
 39545  00756C  51F9               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39546  00756E  6EFE               	movwf	tosh,c
 39547  007570  6AFF               	clrf	tosu,c
 39548  007572  50FA               	movf	pclath,w,c
 39549  007574  0012               	return		;indir
 39550  007576                     __end_of_INT2_CallBack:
 39551                           	opt stack 0
 39552                           tosu	equ	0xFFF
 39553                           tosh	equ	0xFFE
 39554                           tosl	equ	0xFFD
 39555                           pclatu	equ	0xFFB
 39556                           pclath	equ	0xFFA
 39557                           tblptru	equ	0xFF8
 39558                           tblptrh	equ	0xFF7
 39559                           tblptrl	equ	0xFF6
 39560                           tablat	equ	0xFF5
 39561                           prodh	equ	0xFF4
 39562                           prodl	equ	0xFF3
 39563                           intcon	equ	0xFF2
 39564                           intcon2	equ	0xFF1
 39565                           intcon3	equ	0xFF0
 39566                           indf0	equ	0xFEF
 39567                           postinc0	equ	0xFEE
 39568                           plusw0	equ	0xFEB
 39569                           fsr0h	equ	0xFEA
 39570                           fsr0l	equ	0xFE9
 39571                           wreg	equ	0xFE8
 39572                           postinc1	equ	0xFE6
 39573                           postdec1	equ	0xFE5
 39574                           plusw1	equ	0xFE3
 39575                           fsr1h	equ	0xFE2
 39576                           fsr1l	equ	0xFE1
 39577                           indf2	equ	0xFDF
 39578                           postinc2	equ	0xFDE
 39579                           postdec2	equ	0xFDD
 39580                           plusw2	equ	0xFDB
 39581                           fsr2h	equ	0xFDA
 39582                           fsr2l	equ	0xFD9
 39583                           status	equ	0xFD8
 39584                           
 39585 ;; *************** function _DIO1_ISR_Lora *****************
 39586 ;; Defined at:
 39587 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39588 ;; Parameters:    Size  Location     Type
 39589 ;;		None
 39590 ;; Auto vars:     Size  Location     Type
 39591 ;;		None
 39592 ;; Return value:  Size  Location     Type
 39593 ;;                  1    wreg      void 
 39594 ;; Registers used:
 39595 ;;		status,2, status,0
 39596 ;; Tracked objects:
 39597 ;;		On entry : F/1
 39598 ;;		On exit  : F/0
 39599 ;;		Unchanged: 0/0
 39600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39605 ;;Total ram usage:        0 bytes
 39606 ;; Hardware stack levels used:    1
 39607 ;; This function calls:
 39608 ;;		Nothing
 39609 ;; This function is called by:
 39610 ;;		_DIO1_ISR_Lora_Init
 39611 ;;		_INT2_CallBack
 39612 ;; This function uses a non-reentrant model
 39613 ;;
 39614                           
 39615                           	psect	text223
 39616  007898                     __ptext223:
 39617                           	opt stack 0
 39618  007898                     _DIO1_ISR_Lora:
 39619                           	opt stack 15
 39620                           
 39621                           ; BSR set to: 1
 39622                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39623                           
 39624                           ;incstack = 0
 39625  007898  0100               	movlb	0	; () banked
 39626  00789A  83F0               	bsf	_dioStatus& (0+255),1,b	;volatile
 39627                           
 39628                           ; BSR set to: 0
 39629  00789C  0012               	return		;funcret
 39630  00789E                     __end_of_DIO1_ISR_Lora:
 39631                           	opt stack 0
 39632                           tosu	equ	0xFFF
 39633                           tosh	equ	0xFFE
 39634                           tosl	equ	0xFFD
 39635                           pclatu	equ	0xFFB
 39636                           pclath	equ	0xFFA
 39637                           tblptru	equ	0xFF8
 39638                           tblptrh	equ	0xFF7
 39639                           tblptrl	equ	0xFF6
 39640                           tablat	equ	0xFF5
 39641                           prodh	equ	0xFF4
 39642                           prodl	equ	0xFF3
 39643                           intcon	equ	0xFF2
 39644                           intcon2	equ	0xFF1
 39645                           intcon3	equ	0xFF0
 39646                           indf0	equ	0xFEF
 39647                           postinc0	equ	0xFEE
 39648                           plusw0	equ	0xFEB
 39649                           fsr0h	equ	0xFEA
 39650                           fsr0l	equ	0xFE9
 39651                           wreg	equ	0xFE8
 39652                           postinc1	equ	0xFE6
 39653                           postdec1	equ	0xFE5
 39654                           plusw1	equ	0xFE3
 39655                           fsr1h	equ	0xFE2
 39656                           fsr1l	equ	0xFE1
 39657                           indf2	equ	0xFDF
 39658                           postinc2	equ	0xFDE
 39659                           postdec2	equ	0xFDD
 39660                           plusw2	equ	0xFDB
 39661                           fsr2h	equ	0xFDA
 39662                           fsr2l	equ	0xFD9
 39663                           status	equ	0xFD8
 39664                           
 39665 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39666 ;; Defined at:
 39667 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 39668 ;; Parameters:    Size  Location     Type
 39669 ;;		None
 39670 ;; Auto vars:     Size  Location     Type
 39671 ;;		None
 39672 ;; Return value:  Size  Location     Type
 39673 ;;                  1    wreg      void 
 39674 ;; Registers used:
 39675 ;;		None
 39676 ;; Tracked objects:
 39677 ;;		On entry : F/1
 39678 ;;		On exit  : F/1
 39679 ;;		Unchanged: F/0
 39680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39685 ;;Total ram usage:        0 bytes
 39686 ;; Hardware stack levels used:    1
 39687 ;; This function calls:
 39688 ;;		Nothing
 39689 ;; This function is called by:
 39690 ;;		_EXT_INT_Initialize
 39691 ;;		_INT2_CallBack
 39692 ;; This function uses a non-reentrant model
 39693 ;;
 39694                           
 39695                           	psect	text224
 39696  0078DC                     __ptext224:
 39697                           	opt stack 0
 39698  0078DC                     _INT2_DefaultInterruptHandler:
 39699                           	opt stack 15
 39700                           
 39701                           ; BSR set to: 1
 39702                           
 39703                           ; BSR set to: 0
 39704                           ;incstack = 0
 39705  0078DC  0012               	return		;funcret
 39706  0078DE                     __end_of_INT2_DefaultInterruptHandler:
 39707                           	opt stack 0
 39708                           tosu	equ	0xFFF
 39709                           tosh	equ	0xFFE
 39710                           tosl	equ	0xFFD
 39711                           pclatu	equ	0xFFB
 39712                           pclath	equ	0xFFA
 39713                           tblptru	equ	0xFF8
 39714                           tblptrh	equ	0xFF7
 39715                           tblptrl	equ	0xFF6
 39716                           tablat	equ	0xFF5
 39717                           prodh	equ	0xFF4
 39718                           prodl	equ	0xFF3
 39719                           intcon	equ	0xFF2
 39720                           intcon2	equ	0xFF1
 39721                           intcon3	equ	0xFF0
 39722                           indf0	equ	0xFEF
 39723                           postinc0	equ	0xFEE
 39724                           plusw0	equ	0xFEB
 39725                           fsr0h	equ	0xFEA
 39726                           fsr0l	equ	0xFE9
 39727                           wreg	equ	0xFE8
 39728                           postinc1	equ	0xFE6
 39729                           postdec1	equ	0xFE5
 39730                           plusw1	equ	0xFE3
 39731                           fsr1h	equ	0xFE2
 39732                           fsr1l	equ	0xFE1
 39733                           indf2	equ	0xFDF
 39734                           postinc2	equ	0xFDE
 39735                           postdec2	equ	0xFDD
 39736                           plusw2	equ	0xFDB
 39737                           fsr2h	equ	0xFDA
 39738                           fsr2l	equ	0xFD9
 39739                           status	equ	0xFD8
 39740                           
 39741 ;; *************** function _INT1_ISR *****************
 39742 ;; Defined at:
 39743 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 39744 ;; Parameters:    Size  Location     Type
 39745 ;;		None
 39746 ;; Auto vars:     Size  Location     Type
 39747 ;;		None
 39748 ;; Return value:  Size  Location     Type
 39749 ;;                  1    wreg      void 
 39750 ;; Registers used:
 39751 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39752 ;; Tracked objects:
 39753 ;;		On entry : 0/0
 39754 ;;		On exit  : 0/0
 39755 ;;		Unchanged: 0/0
 39756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39761 ;;Total ram usage:        0 bytes
 39762 ;; Hardware stack levels used:    1
 39763 ;; Hardware stack levels required when called:    2
 39764 ;; This function calls:
 39765 ;;		_INT1_CallBack
 39766 ;; This function is called by:
 39767 ;;		_INTERRUPT_InterruptManager
 39768 ;; This function uses a non-reentrant model
 39769 ;;
 39770                           
 39771                           	psect	text225
 39772  00789E                     __ptext225:
 39773                           	opt stack 0
 39774  00789E                     _INT1_ISR:
 39775                           	opt stack 15
 39776                           
 39777                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 39778                           
 39779                           ; BSR set to: 1
 39780                           ;incstack = 0
 39781  00789E  90F0               	bcf	intcon3,0,c	;volatile
 39782                           
 39783                           ;ext_int.c: 54: INT1_CallBack();
 39784  0078A0  EFD5  F03A         	goto	_INT1_CallBack	;wreg free
 39785  0078A4                     __end_of_INT1_ISR:
 39786                           	opt stack 0
 39787                           tosu	equ	0xFFF
 39788                           tosh	equ	0xFFE
 39789                           tosl	equ	0xFFD
 39790                           pclatu	equ	0xFFB
 39791                           pclath	equ	0xFFA
 39792                           tblptru	equ	0xFF8
 39793                           tblptrh	equ	0xFF7
 39794                           tblptrl	equ	0xFF6
 39795                           tablat	equ	0xFF5
 39796                           prodh	equ	0xFF4
 39797                           prodl	equ	0xFF3
 39798                           intcon	equ	0xFF2
 39799                           intcon2	equ	0xFF1
 39800                           intcon3	equ	0xFF0
 39801                           indf0	equ	0xFEF
 39802                           postinc0	equ	0xFEE
 39803                           plusw0	equ	0xFEB
 39804                           fsr0h	equ	0xFEA
 39805                           fsr0l	equ	0xFE9
 39806                           wreg	equ	0xFE8
 39807                           postinc1	equ	0xFE6
 39808                           postdec1	equ	0xFE5
 39809                           plusw1	equ	0xFE3
 39810                           fsr1h	equ	0xFE2
 39811                           fsr1l	equ	0xFE1
 39812                           indf2	equ	0xFDF
 39813                           postinc2	equ	0xFDE
 39814                           postdec2	equ	0xFDD
 39815                           plusw2	equ	0xFDB
 39816                           fsr2h	equ	0xFDA
 39817                           fsr2l	equ	0xFD9
 39818                           status	equ	0xFD8
 39819                           
 39820 ;; *************** function _INT1_CallBack *****************
 39821 ;; Defined at:
 39822 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 39823 ;; Parameters:    Size  Location     Type
 39824 ;;		None
 39825 ;; Auto vars:     Size  Location     Type
 39826 ;;		None
 39827 ;; Return value:  Size  Location     Type
 39828 ;;                  1    wreg      void 
 39829 ;; Registers used:
 39830 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39831 ;; Tracked objects:
 39832 ;;		On entry : 0/0
 39833 ;;		On exit  : 0/0
 39834 ;;		Unchanged: 0/0
 39835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39840 ;;Total ram usage:        0 bytes
 39841 ;; Hardware stack levels used:    1
 39842 ;; Hardware stack levels required when called:    1
 39843 ;; This function calls:
 39844 ;;		Absolute function
 39845 ;;		_DIO0_ISR_Lora
 39846 ;;		_INT1_DefaultInterruptHandler
 39847 ;; This function is called by:
 39848 ;;		_INT1_ISR
 39849 ;; This function uses a non-reentrant model
 39850 ;;
 39851                           
 39852                           	psect	text226
 39853  0075AA                     __ptext226:
 39854                           	opt stack 0
 39855  0075AA                     _INT1_CallBack:
 39856                           	opt stack 15
 39857                           
 39858                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 39859                           
 39860                           ;incstack = 0
 39861  0075AA  505A               	movf	_INT1_InterruptHandler,w,c
 39862  0075AC  105B               	iorwf	_INT1_InterruptHandler+1,w,c
 39863  0075AE  B4D8               	btfsc	status,2,c
 39864  0075B0  0012               	return	
 39865                           
 39866                           ;ext_int.c: 64: {
 39867                           ;ext_int.c: 65: INT1_InterruptHandler();
 39868  0075B2  0005               	push	
 39869  0075B4  6EFA               	movwf	pclath,c
 39870  0075B6  505A               	movf	_INT1_InterruptHandler,w,c
 39871  0075B8  6EFD               	movwf	tosl,c
 39872  0075BA  505B               	movf	_INT1_InterruptHandler+1,w,c
 39873  0075BC  6EFE               	movwf	tosh,c
 39874  0075BE  6AFF               	clrf	tosu,c
 39875  0075C0  50FA               	movf	pclath,w,c
 39876  0075C2  0012               	return		;indir
 39877  0075C4                     __end_of_INT1_CallBack:
 39878                           	opt stack 0
 39879                           tosu	equ	0xFFF
 39880                           tosh	equ	0xFFE
 39881                           tosl	equ	0xFFD
 39882                           pclatu	equ	0xFFB
 39883                           pclath	equ	0xFFA
 39884                           tblptru	equ	0xFF8
 39885                           tblptrh	equ	0xFF7
 39886                           tblptrl	equ	0xFF6
 39887                           tablat	equ	0xFF5
 39888                           prodh	equ	0xFF4
 39889                           prodl	equ	0xFF3
 39890                           intcon	equ	0xFF2
 39891                           intcon2	equ	0xFF1
 39892                           intcon3	equ	0xFF0
 39893                           indf0	equ	0xFEF
 39894                           postinc0	equ	0xFEE
 39895                           plusw0	equ	0xFEB
 39896                           fsr0h	equ	0xFEA
 39897                           fsr0l	equ	0xFE9
 39898                           wreg	equ	0xFE8
 39899                           postinc1	equ	0xFE6
 39900                           postdec1	equ	0xFE5
 39901                           plusw1	equ	0xFE3
 39902                           fsr1h	equ	0xFE2
 39903                           fsr1l	equ	0xFE1
 39904                           indf2	equ	0xFDF
 39905                           postinc2	equ	0xFDE
 39906                           postdec2	equ	0xFDD
 39907                           plusw2	equ	0xFDB
 39908                           fsr2h	equ	0xFDA
 39909                           fsr2l	equ	0xFD9
 39910                           status	equ	0xFD8
 39911                           
 39912 ;; *************** function _DIO0_ISR_Lora *****************
 39913 ;; Defined at:
 39914 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39915 ;; Parameters:    Size  Location     Type
 39916 ;;		None
 39917 ;; Auto vars:     Size  Location     Type
 39918 ;;		None
 39919 ;; Return value:  Size  Location     Type
 39920 ;;                  1    wreg      void 
 39921 ;; Registers used:
 39922 ;;		status,2, status,0
 39923 ;; Tracked objects:
 39924 ;;		On entry : 0/0
 39925 ;;		On exit  : F/0
 39926 ;;		Unchanged: 0/0
 39927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39932 ;;Total ram usage:        0 bytes
 39933 ;; Hardware stack levels used:    1
 39934 ;; This function calls:
 39935 ;;		Nothing
 39936 ;; This function is called by:
 39937 ;;		_DIO0_ISR_Lora_Init
 39938 ;;		_INT1_CallBack
 39939 ;; This function uses a non-reentrant model
 39940 ;;
 39941                           
 39942                           	psect	text227
 39943  0078A4                     __ptext227:
 39944                           	opt stack 0
 39945  0078A4                     _DIO0_ISR_Lora:
 39946                           	opt stack 15
 39947                           
 39948                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 39949                           
 39950                           ;incstack = 0
 39951  0078A4  0100               	movlb	0	; () banked
 39952  0078A6  81F0               	bsf	_dioStatus& (0+255),0,b	;volatile
 39953                           
 39954                           ; BSR set to: 0
 39955  0078A8  0012               	return		;funcret
 39956  0078AA                     __end_of_DIO0_ISR_Lora:
 39957                           	opt stack 0
 39958                           tosu	equ	0xFFF
 39959                           tosh	equ	0xFFE
 39960                           tosl	equ	0xFFD
 39961                           pclatu	equ	0xFFB
 39962                           pclath	equ	0xFFA
 39963                           tblptru	equ	0xFF8
 39964                           tblptrh	equ	0xFF7
 39965                           tblptrl	equ	0xFF6
 39966                           tablat	equ	0xFF5
 39967                           prodh	equ	0xFF4
 39968                           prodl	equ	0xFF3
 39969                           intcon	equ	0xFF2
 39970                           intcon2	equ	0xFF1
 39971                           intcon3	equ	0xFF0
 39972                           indf0	equ	0xFEF
 39973                           postinc0	equ	0xFEE
 39974                           plusw0	equ	0xFEB
 39975                           fsr0h	equ	0xFEA
 39976                           fsr0l	equ	0xFE9
 39977                           wreg	equ	0xFE8
 39978                           postinc1	equ	0xFE6
 39979                           postdec1	equ	0xFE5
 39980                           plusw1	equ	0xFE3
 39981                           fsr1h	equ	0xFE2
 39982                           fsr1l	equ	0xFE1
 39983                           indf2	equ	0xFDF
 39984                           postinc2	equ	0xFDE
 39985                           postdec2	equ	0xFDD
 39986                           plusw2	equ	0xFDB
 39987                           fsr2h	equ	0xFDA
 39988                           fsr2l	equ	0xFD9
 39989                           status	equ	0xFD8
 39990                           
 39991 ;; *************** function _INT1_DefaultInterruptHandler *****************
 39992 ;; Defined at:
 39993 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 39994 ;; Parameters:    Size  Location     Type
 39995 ;;		None
 39996 ;; Auto vars:     Size  Location     Type
 39997 ;;		None
 39998 ;; Return value:  Size  Location     Type
 39999 ;;                  1    wreg      void 
 40000 ;; Registers used:
 40001 ;;		None
 40002 ;; Tracked objects:
 40003 ;;		On entry : 0/0
 40004 ;;		On exit  : 0/0
 40005 ;;		Unchanged: 0/0
 40006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40011 ;;Total ram usage:        0 bytes
 40012 ;; Hardware stack levels used:    1
 40013 ;; This function calls:
 40014 ;;		Nothing
 40015 ;; This function is called by:
 40016 ;;		_EXT_INT_Initialize
 40017 ;;		_INT1_CallBack
 40018 ;; This function uses a non-reentrant model
 40019 ;;
 40020                           
 40021                           	psect	text228
 40022  0078DE                     __ptext228:
 40023                           	opt stack 0
 40024  0078DE                     _INT1_DefaultInterruptHandler:
 40025                           	opt stack 15
 40026                           
 40027                           ; BSR set to: 0
 40028                           ;incstack = 0
 40029  0078DE  0012               	return		;funcret
 40030  0078E0                     __end_of_INT1_DefaultInterruptHandler:
 40031                           	opt stack 0
 40032                           tosu	equ	0xFFF
 40033                           tosh	equ	0xFFE
 40034                           tosl	equ	0xFFD
 40035                           pclatu	equ	0xFFB
 40036                           pclath	equ	0xFFA
 40037                           tblptru	equ	0xFF8
 40038                           tblptrh	equ	0xFF7
 40039                           tblptrl	equ	0xFF6
 40040                           tablat	equ	0xFF5
 40041                           prodh	equ	0xFF4
 40042                           prodl	equ	0xFF3
 40043                           intcon	equ	0xFF2
 40044                           intcon2	equ	0xFF1
 40045                           intcon3	equ	0xFF0
 40046                           indf0	equ	0xFEF
 40047                           postinc0	equ	0xFEE
 40048                           plusw0	equ	0xFEB
 40049                           fsr0h	equ	0xFEA
 40050                           fsr0l	equ	0xFE9
 40051                           wreg	equ	0xFE8
 40052                           postinc1	equ	0xFE6
 40053                           postdec1	equ	0xFE5
 40054                           plusw1	equ	0xFE3
 40055                           fsr1h	equ	0xFE2
 40056                           fsr1l	equ	0xFE1
 40057                           indf2	equ	0xFDF
 40058                           postinc2	equ	0xFDE
 40059                           postdec2	equ	0xFDD
 40060                           plusw2	equ	0xFDB
 40061                           fsr2h	equ	0xFDA
 40062                           fsr2l	equ	0xFD9
 40063                           status	equ	0xFD8
 40064                           tosu	equ	0xFFF
 40065                           tosh	equ	0xFFE
 40066                           tosl	equ	0xFFD
 40067                           pclatu	equ	0xFFB
 40068                           pclath	equ	0xFFA
 40069                           tblptru	equ	0xFF8
 40070                           tblptrh	equ	0xFF7
 40071                           tblptrl	equ	0xFF6
 40072                           tablat	equ	0xFF5
 40073                           prodh	equ	0xFF4
 40074                           prodl	equ	0xFF3
 40075                           intcon	equ	0xFF2
 40076                           intcon2	equ	0xFF1
 40077                           intcon3	equ	0xFF0
 40078                           indf0	equ	0xFEF
 40079                           postinc0	equ	0xFEE
 40080                           plusw0	equ	0xFEB
 40081                           fsr0h	equ	0xFEA
 40082                           fsr0l	equ	0xFE9
 40083                           wreg	equ	0xFE8
 40084                           postinc1	equ	0xFE6
 40085                           postdec1	equ	0xFE5
 40086                           plusw1	equ	0xFE3
 40087                           fsr1h	equ	0xFE2
 40088                           fsr1l	equ	0xFE1
 40089                           indf2	equ	0xFDF
 40090                           postinc2	equ	0xFDE
 40091                           postdec2	equ	0xFDD
 40092                           plusw2	equ	0xFDB
 40093                           fsr2h	equ	0xFDA
 40094                           fsr2l	equ	0xFD9
 40095                           status	equ	0xFD8
 40096                           
 40097                           	psect	text229
 40098  000000                     __ptext229:
 40099                           	opt stack 0
 40100                           tosu	equ	0xFFF
 40101                           tosh	equ	0xFFE
 40102                           tosl	equ	0xFFD
 40103                           pclatu	equ	0xFFB
 40104                           pclath	equ	0xFFA
 40105                           tblptru	equ	0xFF8
 40106                           tblptrh	equ	0xFF7
 40107                           tblptrl	equ	0xFF6
 40108                           tablat	equ	0xFF5
 40109                           prodh	equ	0xFF4
 40110                           prodl	equ	0xFF3
 40111                           intcon	equ	0xFF2
 40112                           intcon2	equ	0xFF1
 40113                           intcon3	equ	0xFF0
 40114                           indf0	equ	0xFEF
 40115                           postinc0	equ	0xFEE
 40116                           plusw0	equ	0xFEB
 40117                           fsr0h	equ	0xFEA
 40118                           fsr0l	equ	0xFE9
 40119                           wreg	equ	0xFE8
 40120                           postinc1	equ	0xFE6
 40121                           postdec1	equ	0xFE5
 40122                           plusw1	equ	0xFE3
 40123                           fsr1h	equ	0xFE2
 40124                           fsr1l	equ	0xFE1
 40125                           indf2	equ	0xFDF
 40126                           postinc2	equ	0xFDE
 40127                           postdec2	equ	0xFDD
 40128                           plusw2	equ	0xFDB
 40129                           fsr2h	equ	0xFDA
 40130                           fsr2l	equ	0xFD9
 40131                           status	equ	0xFD8
 40132                           
 40133                           	psect	rparam
 40134  0000                     tosu	equ	0xFFF
 40135                           tosh	equ	0xFFE
 40136                           tosl	equ	0xFFD
 40137                           pclatu	equ	0xFFB
 40138                           pclath	equ	0xFFA
 40139                           tblptru	equ	0xFF8
 40140                           tblptrh	equ	0xFF7
 40141                           tblptrl	equ	0xFF6
 40142                           tablat	equ	0xFF5
 40143                           prodh	equ	0xFF4
 40144                           prodl	equ	0xFF3
 40145                           intcon	equ	0xFF2
 40146                           intcon2	equ	0xFF1
 40147                           intcon3	equ	0xFF0
 40148                           indf0	equ	0xFEF
 40149                           postinc0	equ	0xFEE
 40150                           plusw0	equ	0xFEB
 40151                           fsr0h	equ	0xFEA
 40152                           fsr0l	equ	0xFE9
 40153                           wreg	equ	0xFE8
 40154                           postinc1	equ	0xFE6
 40155                           postdec1	equ	0xFE5
 40156                           plusw1	equ	0xFE3
 40157                           fsr1h	equ	0xFE2
 40158                           fsr1l	equ	0xFE1
 40159                           indf2	equ	0xFDF
 40160                           postinc2	equ	0xFDE
 40161                           postdec2	equ	0xFDD
 40162                           plusw2	equ	0xFDB
 40163                           fsr2h	equ	0xFDA
 40164                           fsr2l	equ	0xFD9
 40165                           status	equ	0xFD8
 40166                           
 40167                           	psect	temp
 40168  000046                     btemp:
 40169                           	opt stack 0
 40170  000046                     	ds	12
 40171                           tosu	equ	0xFFF
 40172                           tosh	equ	0xFFE
 40173                           tosl	equ	0xFFD
 40174                           pclatu	equ	0xFFB
 40175                           pclath	equ	0xFFA
 40176                           tblptru	equ	0xFF8
 40177                           tblptrh	equ	0xFF7
 40178                           tblptrl	equ	0xFF6
 40179                           tablat	equ	0xFF5
 40180                           prodh	equ	0xFF4
 40181                           prodl	equ	0xFF3
 40182                           intcon	equ	0xFF2
 40183                           intcon2	equ	0xFF1
 40184                           intcon3	equ	0xFF0
 40185                           indf0	equ	0xFEF
 40186                           postinc0	equ	0xFEE
 40187                           plusw0	equ	0xFEB
 40188                           fsr0h	equ	0xFEA
 40189                           fsr0l	equ	0xFE9
 40190                           wreg	equ	0xFE8
 40191                           postinc1	equ	0xFE6
 40192                           postdec1	equ	0xFE5
 40193                           plusw1	equ	0xFE3
 40194                           fsr1h	equ	0xFE2
 40195                           fsr1l	equ	0xFE1
 40196                           indf2	equ	0xFDF
 40197                           postinc2	equ	0xFDE
 40198                           postdec2	equ	0xFDD
 40199                           plusw2	equ	0xFDB
 40200                           fsr2h	equ	0xFDA
 40201                           fsr2l	equ	0xFD9
 40202                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        56
    BSS         1277
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      83
    BANK0           160    136     147
    BANK1           256    125     256
    BANK2           256      0     245
    BANK3           256      0     160
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1658$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[4]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK1[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1658$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1658$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S983$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S983$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6560196
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
           _TMR3_SetInterruptHandler
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          3     3      0  311921
                                            125 BANK0      3     3      0
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      68
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2178
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     200
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     989
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     189
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     589
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     189
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5803720
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2268378
                                            125 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148022
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  663131
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  489385
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  311785
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  157973
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  535291
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  498937
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2934074
                                            132 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  199966
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1035143
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     389
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1498510
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  473506
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  315972
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1008964
                                            125 BANK0      5     5      0
                                            102 BANK1     23    20      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9258
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  162837
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  311785
                                            118 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151121
                                            106 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   43958
                                             52 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37564
                                             52 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  190414
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  173941
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  157986
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           4     0      4    4851
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248062
                                            124 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101368
                                            115 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80839
                                            106 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   66989
                                             92 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26238
                                             52 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19756
                                             32 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           23    20      3    4744
                                             10 BANK0     22    19      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  167548
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   92735
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   45810
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     662
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                 _handle16sInterrupt *
 ---------------------------------------------------------------------------------
 (16) _handle16sInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
   _SysConfigSleep
   _TMR3_SetInterruptHandler
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _handle16sInterrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A0      11       62.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     7D     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      53       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45B      12        0.0%
DATA                 0      0     67B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Aug 08 16:48:37 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 78D2  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 7654  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6A3A  
                                   __end_of_AESEncodeLoRa 725E  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 6240  
                                                     l192 76FC  
                                                     l460 152A  
                                                     l453 14A2  
                                                     l382 50EE  
                                                     l447 14DA  
                                                     l466 1714  
                                             ?_RADIO_Init 007D  
                                                     l670 6F82  
                                                     l479 17E6  
                                                     l592 7106  
                                                     l673 6C6C  
                                                     l690 5E14  
                                                     l676 6C7E  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 6692  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 6632  
                                  _ExecuteRxParamSetupReq 428A  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 777E  
                                      __size_of_AESEncode 02DA  
                                         _timer1ReloadVal 005C  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 6102  
                                   _RADIO_SetLoRaSyncWord 7808  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B16  
                                 __end_of_SwTimersExecute 5844  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00DC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 599C  
                     __end_of_RADIO_SetFrequencyHopPeriod 7808  
                             _RADIO_SetFrequencyHopPeriod 77FE  
                                              _CheckFlags 6692  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 75AA  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                                    l1110 3434  
                                                    l1031 11F4  
                                                    l1204 49EC  
                                                    l2012 5652  
                                                    l1133 4F1C  
                                                    l2014 56D4  
                                                    l1215 47F4  
                                                    l1231 67A6  
                                                    l1223 7690  
                                                    l1127 4360  
                                                    l1151 31A6  
                                                    l1063 27E8  
                                                    l1136 4FAA  
                                                    l2121 010A  
                                                    l1049 26F8  
                                                    l2017 53E8  
                                                    l2041 412C  
                                                    l1146 4FDE  
                                                    l1250 7650  
                                                    l2026 53F8  
                                                    l1091 698A  
                                                    l1083 7358  
                                                    l1244 7436  
                                                    l3101 607E  
                                                    l2133 0262  
                                                    l1238 6FB8  
                                                    l2150 053C  
                                                    l3111 6620  
                                                    l2231 1E74  
                                                    l1079 76A4  
                                                    l2151 0544  
                                                    l2063 4B48  
                                                    l2232 1F1A  
                                                    l1264 6EEE  
                                                    l2241 1F28  
                                                    l2233 1F18  
                                                    l2090 4628  
                                                    l1347 74E0  
                                                    l1099 35F6  
                                                    l2307 6328  
                                                    l2171 0978  
                                         _timer3ReloadVal 005E  
                                                    l2236 1F14  
                                                    l2069 630E  
                                                    l1454 1866  
                                                    l2095 5738  
                                                    l1279 67D8  
                                                    l1297 23E0  
                                                    l2522 2418  
                                                    l2283 1D96  
                                                    l3164 6D78  
                                                    l2292 590A  
                                                    l1469 19CE  
                                                    l1717 5C1E  
                                                    l1718 5C66  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l1746 54AA  
                                                    l2742 6F2A  
                                                    l1993 37B2  
                                                    l9589 76B4  
                                        _RADIO_WritePower 5266  
                                                    l9957 6242  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4632  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1196 00A1  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                                    _TMR3 000FB2  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 755A  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5F22  
                                                    _loRa 0200  
                                                    _main 5A3E  
                                                    _rand 699E  
                          __end_of_UpdateMinMaxChDataRate 5792  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 0046  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00CF  
                                           ComputeMic@key 00CA  
                               __end_of_LORAWAN_RxTimeout 2962  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init 774A  
                                        __end_of_ADC_Read 6F52  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6A3A  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0090  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5574  
                                         _TMR3_Initialize 71E6  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00CF  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 787A  
                                            ___param_bank 000010  
                                              _GetRx1Freq 76D0  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 6950  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 656E  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 78A4  
                                        __end_of_INT2_ISR 7898  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 7772  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12005 23F4  
                                                   l12031 246C  
                                                   l12015 241A  
                                                   l12105 6070  
                                                   l12121 6612  
                                                   l12113 65E0  
                                                   l12201 5154  
                                                   l12041 2536  
                                                   l12115 65EC  
                                                   l12203 515E  
                                                   l12051 2584  
                                                   l13003 4FDA  
                                                   l12117 65F0  
                                                   l12213 517E  
                                                   l12053 258E  
                                                   l12045 2558  
                                                   l13101 1AA8  
                                                   l12143 4B70  
                                                   l12215 5188  
                                                   l12071 2696  
                                                   l12047 2562  
                                                   l12039 252C  
                                                   l12063 268C  
                                                   l12303 530A  
                                                   l12153 4C22  
                                                   l13033 1852  
                                                   l13201 54C0  
                                                   l13121 590E  
                                                   l12155 4C24  
                                                   l12171 50F0  
                                                   l12163 50D6  
                                                   l12323 5DCA  
                                                   l13211 5570  
                                                   l13131 5964  
                                                   l10571 6880  
                                         __end_of___abdiv 68AC  
                                                   l12149 4BC0  
                                                   l12093 6032  
                                                   l13061 195A  
                                                   l13053 1912  
                                                   l13045 18B4  
                                                   l12413 6D6E  
                                                   l12405 6D50  
                                                   l12309 5312  
                                                   l12261 528A  
                                                   l14021 60EC  
                                                   l13205 5528  
                                                   l13133 596E  
                                                   l13221 1B24  
                                                   l14101 2F60  
                                                   l10565 6874  
                                                   l12431 5CF2  
                                                   l12095 603E  
                                                   l12183 511A  
                                                   l13071 1972  
                                                   l13063 1968  
                                                   l13039 1878  
                                                   l13047 18EC  
                                                   l12407 6D58  
                                                   l12503 159A  
                                                   l12511 15B6  
                                                   l12327 5DEE  
                                                   l12343 711E  
                                                   l14015 60DA  
                                                   l14007 60C6  
                                                   l13207 5564  
                                                   l13143 598E  
                                                   l13303 1D9C  
                                                   l14111 2F9C  
                                                   l10591 68A8  
                                                   l10583 689A  
                                                   l10575 6886  
                                                   l10559 686A  
                                                   l12353 71D6  
                                                   l12097 6042  
                                                   l12185 5122  
                                                   l13057 193C  
                                                   l12409 6D5C  
                                                   l12281 52CC  
                                                   l12257 527E  
                                                   l13209 5566  
                                                   l13129 5962  
                                                   l13313 1DC0  
                                                   l12361 47A6  
                                                   l10577 688A  
                                                   l12179 5110  
                                                   l12187 512C  
                                                   l10915 56EA  
                                                   l12275 52B2  
                                                   l12451 146E  
                                                   l13139 597E  
                                                   l13147 5996  
                                                   l13315 1DF4  
                                                   l13243 1C14  
                                                   l12371 483E  
                                                   l14107 2F7E  
                                                   l14043 6360  
                                                   l10587 68A2  
                                                   l15011 21EC  
                                                   l15003 2132  
                                                   l12349 71C6  
                                                   l10925 5782  
                                                   l12701 4932  
                                                   l13085 19D2  
                                                   l13077 19B0  
                                                   l12285 52D8  
                                                   l12277 52BE  
                                                   l13405 318C  
                                                   l13341 2FE6  
                                                   l13333 2FCE  
                                                   l13173 417E  
                                                   l13165 4146  
                                                   l13245 1C2A  
                                                   l13229 1BA8  
                                                   l13317 1DF6  
                                                   l12373 4842  
                                                   l13157 6B0E  
                                                   l14045 6364  
                                                   l14205 02C2  
                                                   l15013 2206  
                                                   l15021 229E  
                                                   l12199 5150  
                                                   l10927 5786  
                                                   l12391 6B60  
                                                   l13095 1A70  
                                                   l12471 1520  
                                                   l12447 142A  
                                                   l12455 14AE  
                                                   l13327 2FB8  
                                                   l14063 66D4  
                                                   l14055 66A8  
                                                   l13191 4234  
                                                   l13183 41E8  
                                                   l13263 1CAE  
                                                   l13247 1C3C  
                                                   l13239 1BEE  
                                                   l13319 1E02  
                                                   l12359 47A2  
                                                   l13511 3678  
                                                   l14071 2DC2  
                                                   l14143 010C  
                                                   l11921 6D8E  
                                                   l12289 52E4  
                                                   l12561 16FC  
                                                   l12553 16CA  
                                                   l12545 1686  
                                                   l12473 1526  
                                                   l12449 144C  
                                                   l12457 14C0  
                                                   l13361 305A  
                                                   l13249 1C42  
                                                   l13513 368C  
                                                   l12617 7432  
                                                   l14081 2EB2  
                                                   l14401 07B4  
                                                   l14225 0402  
                                                   l14305 057C  
                                                   l14161 019C  
                                                   l14137 00CE  
                                                   l15201 6472  
                                                   l15033 2342  
                                                   l12387 6B28  
                                                   l12555 16D6  
                                                   l12467 1514  
                                                   l12459 14E4  
                                                   l12563 171E  
                                                   l13371 307A  
                                                   l13443 668C  
                                                   l14059 66BE  
                                                   l12723 589C  
                                                   l13283 1D10  
                                                   l13259 1C88  
                                                   l12379 4858  
                                                   l12643 67B6  
                                                   l13515 3690  
                                                   l14091 2F20  
                                                   l14083 2EC8  
                                                   l14075 2E72  
                                                   l14411 0818  
                                                   l15203 6484  
                                                   l15123 4AF2  
                                                   l12493 1570  
                                                   l13365 306A  
                                                   l12637 5BFC  
                                                   l12725 58A2  
                                                   l13197 427A  
                                                   l13269 1CC6  
                                                   l13621 6AAE  
                                                   l12661 67FA  
                                                   l13517 36C6  
                                                   l14085 2EDE  
                                                   l14077 2E86  
                                                   l14309 05A8  
                                                   l14317 05B4  
                                                   l14237 041C  
                                                   l14165 01AC  
                                                   l15213 649C  
                                                   l15045 5642  
                                                   l16013 579A  
                                                   l15303 3E8E  
                                                   l12583 17BC  
                                                   l12575 1790  
                                                   l13375 3090  
                                                   l13359 3046  
                                                   l13287 1D28  
                                                   l13279 1CFE  
                                                   l13623 6ACE  
                                                   l12655 67E8  
                                                   l12647 67C4  
                                                   l12815 677C  
                                                   l14087 2EF4  
                                                   l14079 2E9C  
                                                   l14351 072E  
                                                   l14239 0434  
                                                   l15207 6492  
                                                   l15231 6E5C  
                                                   l15119 4AEC  
                                                   l16023 5834  
                                                   l12753 2BDE  
                                                   l12729 58C2  
                                                   l13297 1D6E  
                                                   l13705 1FA6  
                                                   l12657 67F0  
                                                   l12649 67CC  
                                                   l12905 734C  
                                                   l12817 6782  
                                                   l13561 34AC  
                                                   l13609 43C8  
                                                   l14089 2F0A  
                                                   l14521 0AD8  
                                                   l14409 0810  
                                                   l14337 06AC  
                                                   l14273 0486  
                                                   l14257 045A  
                                                   l15217 64A2  
                                                   l15049 5654  
                                                   l15073 4010  
                                                   l15129 4B0E  
                                                   l16025 5836  
                                                   l11947 4DB4  
                                                   l11955 7194  
                                                   l11891 2A5C  
                                                   l12683 48D0  
                                                   l12675 48B8  
                                                   l12579 17A0  
                                                   l12763 2C26  
                                                   l12747 2BC8  
                                                   l13723 2072  
                                                   l13643 1E6C  
                                                   l13459 6994  
                                                   l12907 7354  
                                                   l13491 35D6  
                                                   l13483 35A6  
                                                   l12851 499E  
                                                   l13563 34B6  
                                                   l13571 3514  
                                                   l13547 3400  
                                                   l14099 2F32  
                                                   l14427 08E4  
                                                   l14187 0248  
                                                   l14515 0AA0  
                                                   l15227 6E56  
                                                   l15235 6E6E  
                                                   l15243 6BD8  
                                                   l15075 401C  
                                                   l15067 3FF4  
                                                   l15083 4040  
                                                   l15139 4B44  
                                                   l16027 583A  
                                                   l11949 4E04  
                                                   l11893 2A66  
                                                   l12693 4918  
                                                   l12589 17DC  
                                                   l12773 2C6E  
                                                   l12765 2C4E  
                                                   l12757 2BF2  
                                                   l13717 201C  
                                                   l12861 4A36  
                                                   l12837 6FB4  
                                                   l13549 3414  
                                                   l14461 09E2  
                                                   l14437 0980  
                                                   l14365 0734  
                                                   l14277 0494  
                                                   l14269 046E  
                                                   l14533 26EA  
                                                   l15149 62E2  
                                                   l13813 53E0  
                                                   l11959 71B0  
                                                   l13399 311C  
                                                   l12783 2CF0  
                                                   l12759 2BFE  
                                                   l13911 543A  
                                                   l13903 5416  
                                                   l12863 4A3A  
                                                   l13567 3506  
                                                   l13591 431C  
                                                   l14471 09F4  
                                                   l14375 0788  
                                                   l14367 074C  
                                                   l14199 02B4  
                                                   l15247 6BDE  
                                                   l16143 5AB4  
                                                   l12689 48F4  
                                                   l12777 2C86  
                                                   l14641 1122  
                                                   l13569 3510  
                                                   l14481 0A2E  
                                                   l14385 078E  
                                                   l14553 2782  
                                                   l13817 53F0  
                                                   l13809 53D2  
                                                   l15089 4096  
                                                   l11995 684A  
                                                   l15283 5ED2  
                                                   l15435 4666  
                                                   l12795 2DAE  
                                                   l14627 0E50  
                                                   l14619 0D4A  
                                                   l13691 1F50  
                                                   l13907 5424  
                                                   l12939 6F0C  
                                                   l13595 433E  
                                                   l13851 3342  
                                                   l14475 0A1C  
                                                   l14387 07A0  
                                                   l14555 279C  
                                                   l16155 5ACC  
                                                   l11989 6814  
                                                   l14733 3946  
                                                   l15365 3F3E  
                                                   l12973 4F20  
                                                   l12789 2D3E  
                                                   l14637 1058  
                                                   l14629 0F84  
                                                   l13669 1EDE  
                                                   l13925 5454  
                                                   l13917 5446  
                                                   l12869 4A50  
                                                   l13853 334C  
                                                   l13861 7584  
                                                   l14477 0A22  
                                                   l14397 07A6  
                                                   l14573 27EC  
                                                   l14549 2774  
                                                   l14805 5B14  
                                                   l15197 646C  
                                                   l14743 398E  
                                                   l14735 395C  
                                                   l15447 46A4  
                                                   l14647 1124  
                                                   l13687 1F3A  
                                                   l12879 6EC0  
                                                   l14479 0A28  
                                                   l14567 27DA  
                                                   l14591 2912  
                                                   l14823 5B5C  
                                                   l15607 6252  
                                                   l12993 4FB8  
                                                   l12985 4FA8  
                                                   l14657 11DC  
                                                   l14665 1256  
                                                   l13689 1F42  
                                                   l13929 5460  
                                                   l13881 4496  
                                                   l14497 0A76  
                                                   l14489 0A66  
                                                   l14585 289E  
                                                   l14825 5B62  
                                                   l14809 5B2E  
                                                   l14761 51D2  
                                                   l14683 1320  
                                                   l13867 43E0  
                                                   l14587 28A2  
                                                   l14941 63AE  
                                                   l15485 6706  
                                                   l12989 4FAE  
                                                   l12997 4FC4  
                                                   l14693 135E  
                                                   l14677 12B2  
                                                   l14597 293C  
                                                   l14829 5B66  
                                                   l14773 5210  
                                                   l13965 460A  
                                                   l15487 670A  
                                                   l12999 4FC8  
                                                   l13879 4492  
                                                   l14783 5240  
                                                   l13959 4574  
                                  __end_of_SysConfigSleep 6172  
                                                   l14689 1336  
                                                   l14881 3ACE  
                                                   l14785 5244  
                                                   l14769 51F6  
                                                   l14859 3C60  
                                                   l14957 6414  
                                                   l14973 3776  
                                                   l14981 37A6  
                                                   l14893 7328  
                                                   l14987 37FC  
                                                   l14979 37A2  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                              _FillSubKey 6B1E  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 78AE  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 77CC  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 6090  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 6632  
                                                   u12520 6D9E  
                                                   u13260 14D4  
                                       ??_EnableChannels1 006D  
                                                   u12560 683E  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _T3CON 000FB1  
                                                   u13265 14CA  
                                                   _LATD1 007C61  
                                                   u12730 5FAE  
                                    RxJoinResponse@status 0001  
                                                   u14155 1836  
                                                   _LATD3 007C63  
                                                   u16100 04D2  
                                                   _LATD4 007C64  
                                                   u13365 15CE  
                                                   u12567 6834  
                       __end_of_AckRetransmissionCallback 4B4E  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u13730 2D0C  
                                                   u16130 05A4  
                                                   u13715 2CA4  
                                                   u16028 041A  
                                                   u17005 12C4  
                                                   u15405 44B8  
                                                   u16150 06A6  
                                                   u13591 486E  
                                                   u14480 1BA6  
                                                   u16208 071C  
                                                   u16128 056A  
                                                   u17200 3BEA  
                                                   u15248 53C0  
                                                   u14705 312E  
                                                   u13745 2D2E  
                                                   u17210 3CE6  
                                                   u13755 2D50  
                                                   u17205 3BE0  
                                                   u17215 3CDC  
                                                   u14680 30EA  
                                                   u17240 3A42  
                                                   u15608 4616  
                                                   u15560 4532  
                                                   u15545 6190  
                                                   u17250 3A58  
                                                   u16290 0850  
                                                   u17260 3B54  
                                                   u14764 697A  
                                                   u16428 0A54  
                                                   u17405 37EC  
                                                   u14765 6974  
                                                   u16358 09D0  
                                                   u17190 3BD4  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17415 380E  
                                                   u14695 310C  
                                                   u17255 3A4E  
                                                   u16615 2728  
                                                   u15575 4564  
                                                   u15728 634E  
                                                   u17265 3B4A  
                                                   u15585 4586  
                                                   u17505 2332  
                                                   u17515 235C  
                                                   u17620 4054  
                                                   u18340 6276  
                                                   u17390 37CA  
                                                   u15870 017A  
                                                   u16815 0B5E  
                                                   u15951 029E  
                                                   u17720 4AE6  
                                                   u16825 0BD8  
                                                   u16745 28BC  
                                                   u17490 22F2  
                                                   u16835 0D7E  
                                                   u17635 4086  
                                                   u16845 0DF8  
                                                   u17645 40A8  
                                                   u16870 0FC4  
                                                   u16880 0FE2  
                                                   u16890 10E6  
                                                   u16980 1282  
                                                   u17828 62FC  
                                                   u17748 4B0C  
                                                   u16885 0FD8  
                                                   u17925 6450  
                                                   u16895 10DC  
                                                   u19288 5822  
                                                   u16995 12A2  
                                                   u17788 4B32  
                                                   u19577 6258  
                                                   u19587 719A  
                                         __end_of___lwmod 6D82  
                                                   i2l242 6A86  
                                           ?_RADIO_RxDone 0001  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR3H 000FB3  
                                                   _TMR1L 000FCE  
                                                   _TMR3L 000FB2  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 782E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                       __size_of_TMR3_SetInterruptHandler 000A  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 78BA  
                                 ?_SetReceptionNotOkState 0001  
                               ?_TMR3_SetInterruptHandler 0064  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 7766  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                        __end_of_TMR3_ISR 7758  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 00EE  
                          ??_TMR3_DefaultInterruptHandler 0001  
                                 __end_of_PIN_MANAGER_IOC 7826  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6C82  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0052  
                          LORAWAN_RxDone@frmPayloadLength 017A  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 772E  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 0178  
                                  _UpdateJoinSuccessState 4506  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 77D6  
                                              _ComputeMic 68AC  
                                 __end_of_TMR1_Initialize 7284  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 7846  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4864  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2DB6  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 74CE  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 0169  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 26C4  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 17FA  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 599C  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 00D6  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 76F4  
                                            __end_of_main 5ADE  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 69EC  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5F22  
                                        _SetJoinFailState 72D0  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 7590  
                                    _ExecuteRxTimingSetup 72F4  
                                       __end_of_IOCB4_ISR 755A  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00BE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 784E  
                                               ??_AESCmac 00C3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00E8  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E2  
                                          ??_RADIO_TxDone 00D2  
                                         _TMR3_StartTimer 78AA  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 78BE  
                                   _TMR3_InterruptHandler 01FE  
                       __end_of_LORAWAN_LinkCheckCallback 4136  
                          __end_of_SetReceptionNotOkState 6378  
                             __end_of_UpdateReceiveDelays 6B1E  
                         __end_of_AssembleEncryptionBlock 58F6  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6D82  
                                              _RxDataDone 78D4  
                                          _EnableChannels 766A  
                                      __size_of_LoRaSleep 0020  
                               ??_PrepareJoinRequestFrame 00D3  
                                          _HALSPICSAssert 78C2  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6C82  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 76A8  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 56DE  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 562A  
                                _RADIO_FSKPacketSent$1215 00DA  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 733A  
                                                  _T1GCON 000FCC  
                                                  _T3GCON 000FB4  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 351E  
                                 __end_of_TMR3_Initialize 720E  
                  __end_of_LORAWAN_ReceiveWindow2Callback 53FC  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 5334  
                                                  i2l1347 7534  
                                                  i2l2501 0054  
                                                  i2l2503 0064  
                                                  i2l2507 006E  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2720 76CC  
                                                  i2l2497 0038  
                                                  i2l2499 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9933 4CC8  
                                                  i2l9935 4D18  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00D6  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 029E  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 77A2  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FE6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 7704  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 6090  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 735C  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 017D  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 78DA  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 78D8  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 70E4  
                                               ??___abdiv 0065  
                                                  ___lmul 5D1E  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 78B2  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 58F6  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 6802  
                                                  _memset 71BC  
                                                  clear_0 59E4  
                                                  clear_1 59F6  
                                                  clear_2 5A02  
                                                  clear_3 5A0E  
                                                  clear_4 5A1A  
                                                  clear_5 5A26  
                                                  clear_6 5A32  
                                 SwTimerIsRunning@timerId 0064  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 7680  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 78DE  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 78DC  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 78C6  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 008D  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4966  
                                  __end_of_ExecuteLinkAdr 36D0  
                                      ??_ExecuteDutyCycle 0066  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR3_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 6EE4  
                              _LORAWAN_SetChannelIdStatus 6EAC  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007D  
                                           AESEncode@aux2 007C  
                                           AESEncode@aux3 007E  
                                 __end_of_TMR1_WriteTimer 74EA  
                                   __end_of_SwTimerCreate 6246  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00CA  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 7522  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 737E  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DC  
                                          ??_LORAWAN_Send 00DA  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5A38  
                           __end_of_RADIO_FSKPayloadReady 5B7C  
                                          _RADIO_Transmit 2FA6  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 7284  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6BF8  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 0172  
                                          _maxPayloadSize FF6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                                   __end_of_TMR3_CallBack 7506  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 781C  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 73DE  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 4F02  
                              __end_of_handle16sInterrupt 76D0  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 7086  
                                     ??_SYSTEM_Initialize 0066  
                                 __end_of_TMR3_StartTimer 78AE  
                              __end_of_DIO4_ISR_Lora_Init 78D0  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                               ?_TMR3_ISR 0001  
                                _RADIO_WriteConfiguration 1382  
                                    __size_of_readAndSend 0066  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF9B  
                               __size_of_LORAWAN_Mainloop 003A  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 78DC  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 78DA  
                                __end_of_RADIO_WritePower 5334  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 773C  
                                       LORAWAN_RxDone@hdr 017B  
                                            ??_RADIO_DIO0 00E4  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 63DE  
                                         _UpdateFrequency 6E72  
                                  _AutomaticReplyCallback 73FE  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 016A  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 6FF0  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 735C  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 78D0  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput 78CE  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 77D6  
                                        RADIO_DIO0@opMode 00E7  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0064  
                      __end_of_IncludeMacCommandsResponse 1E0E  
                              _IncludeMacCommandsResponse 1B16  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00DC  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 7694  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 739E  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 3194  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3E80  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00E8  
                                              __pbssBANK1 017D  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 74CE  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 6102  
                                        ?_TMR3_Initialize 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 7846  
                                              __pnvCOMRAM 005A  
                                    __end_of_RADIO_SetCRC 77FE  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 5266  
                              __end_of_RADIO_RxFSKTimeout 6F88  
                                    __end_of_RADIO_TxDone 3D1E  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 64A8  
                                      __end_of_RADIO_DIO1 6E72  
                                      __end_of_RADIO_DIO2 6BF8  
                                      __end_of_RADIO_DIO3 763C  
                                      __end_of_RADIO_DIO4 7624  
                                      __end_of_RADIO_DIO5 760C  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A02  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 7494  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 67AA  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                            readAndSend@j 00DE  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 43D2  
                        __end_of_TMR3_SetInterruptHandler 77B8  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0006  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00A8  
                                      EncryptFRMPayload@j 00A9  
                                      EncryptFRMPayload@k 00A7  
                                              ??_TMR1_ISR 002A  
                                              ??_TMR3_ISR 0001  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 7576  
                                        _ValidateRxOffset 7680  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 7772  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A02  
                                                 _AESCmac 17FA  
                                  ComputeMic@bufferLength 00CE  
                                 __size_of_ADC_SelChannel 0018  
                                 __end_of_UpdateDataRange 4A5C  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10621 4E86  
                                                 i2l10615 4E36  
                                                 i2l10625 4EE8  
                                                 i2l10627 4EEA  
                                                 i2l10597 6DCC  
                                    EncryptFRMPayload@dir 0097  
                                      _RADIO_GetPacketSnr 7874  
                                    EncryptFRMPayload@key 009C  
                                   __end_of_UpdateTxPower 783E  
                                     _RADIO_SetIQInverted 77EA  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00EE  
                                     i2_SwTimersInterrupt 4E16  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 72F4  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 763C  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 00CD  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 5E26  
                             PrepareJoinRequestFrame@iCtr 00DB  
                               _IOCB4_SetInterruptHandler 77C2  
                       __end_of_SetCallbackSoftwareTimers 562A  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4A5C  
                             PrepareJoinRequestFrame@mhdr 00D9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00BC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FFA2  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D5  
                                  _InitDefault868Channels 6378  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00D9  
                                   _StopAllSoftwareTimers 69EC  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 6EAC  
                                     AssemblePacket@fCtrl 00D3  
                                                 ___abdiv 685A  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0002  
                                              AESEncode@i 007F  
                                               _AESEncode 23EA  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 777E  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                        ?_TMR3_StartTimer 0001  
                                 __end_of_UpdateDutyCycle 7022  
                                                 ___lldiv 601A  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 65D0  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6D44  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 599C  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 01D8  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2DB6  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00A1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5A3E  
                                                 __ptext1 6246  
                                                 __ptext2 6F1C  
                                                 __ptext3 75C4  
                                                 __ptext4 6102  
                                                 __ptext5 737E  
                                                 __ptext6 71E6  
                                                 __ptext7 78AA  
                                                 __ptext8 77AE  
                                                 __ptext9 725E  
                                    __end_of_LORAWAN_Init 674E  
                                    __end_of_LORAWAN_Join 5C96  
                                    __end_of_LORAWAN_Send 54B8  
                                           _DIO0_ISR_Lora 78A4  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D1E  
                                               _IOCB4_ISR 753E  
                              ExecuteNewChannel@frequency 0073  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A62  
                                   _OSCILLATOR_Initialize 7766  
                          __end_of_UpdateJoinSuccessState 4632  
                                 __size_of_LORAWAN_TxDone 0888  
                              __end_of_RADIO_SetBandwidth 7866  
                                         _RADIO_GetStatus 787A  
                                               _T3CONbits 000FB1  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 7898  
                                             _SwTimerStop 74B2  
                                                 _payload 01C4  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01E8  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 335C  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 788C  
                              __size_of_SYSTEM_Initialize 0020  
                    __end_of_LORAWAN_SetNetworkSessionKey 7168  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 713E  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00CC  
                                    end_of_initialization 5A38  
                                 _CreateAllSoftwareTimers 68FE  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 77CC  
                                   ??_RADIO_FSKPacketSent 00D2  
                                          _GenerateSubkey 4864  
                                   _RADIO_WatchdogTimeout 6C40  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 6802  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 3FDE  
                                          ??_SwTimerStart 008D  
                                               i2u1093_40 6DDC  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 783E  
                                   _UpdateChannelIdStatus 475E  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 7796  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 6EE4  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 0094  
                                        _LORAWAN_GetState 7866  
                                    _HALResetPinMakeInput 78CA  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 7856  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 78B2  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6DFE  
                            __end_of_RADIO_SetFSKSyncWord 713E  
                                      LORAWAN_Join@result 00DD  
                                      __end_of_CheckFlags 66F0  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3E80  
                                      _DIO0_ISR_Lora_Init 7796  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 005A  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                            ??_FillSubKey 0069  
                                        RxDataDone@status 0067  
                            SwTimersInterrupt@timeElapsed 0084  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 7236  
                               __size_of_ExecuteDevStatus 000A  
                                _TMR3_SetInterruptHandler 77AE  
                            __end_of_RADIO_WriteFrequency 50BE  
                              __end_of_RADIO_RegisterRead 72D0  
                       __end_of_LORAWAN_GetMaxPayloadSize 6AD4  
                          __end_of_HALResetPinOutputValue 76BC  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 72AA  
                                __end_of_ConfigureRadioTx 6C40  
                                         _RADIO_RxTimeout 720E  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 351E  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02F4  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6CC4  
                                          _TMR1_ReadTimer 7476  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4966  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 0036  
                                           RADIO_RxDone@i 00E3  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D4  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00F1  
                                      __end_of_GetRx1Freq 76E2  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00CF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 009E  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5EA4  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 7720  
                                         _RADIO_WriteMode 50BE  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D1  
                                      __end_of_FillSubKey 6B68  
                                 _AssembleEncryptionBlock 5844  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF6D  
                                     AESEncodeLoRa@useKey 0084  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 7836  
                                      LORAWAN_Send@buffer 00D7  
                                          __end_of_Random 737E  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 76A8  
                            __end_of_INTERRUPT_Initialize 78BA  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 7874  
                                 __end_of_RADIO_GetStatus 7880  
                                          __end_of___lmul 5DA4  
                                      LORAWAN_Send@result 00DB  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 73BE  
                                           __pidataCOMRAM 7826  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0080  
                                       __size_of_TMR1_ISR 000E  
                                       __size_of_TMR3_ISR 000E  
                                          _ADC_SelChannel 75C4  
                                      __end_of_ComputeMic 68FE  
                                               Random@max 0077  
                                          __end_of_memcpy 685A  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6D06  
                                  __end_of_TMR1_ReadTimer 7494  
                                          __end_of_memset 71E6  
                                         _SPI2_Initialize 77A2  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 77F4  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 5196  
                                            _RADIO_TxDone 3B94  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 599C  
                                      _handle16sInterrupt 76BC  
                                          _ConfigureRadio 5B7C  
                                      LORAWAN_RxDone@mhdr 016B  
                                      LORAWAN_RxDone@temp 0171  
                                            ??_RxDataDone 0068  
                                      _DIO4_ISR_Lora_Init 78CE  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer 74B2  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 7458  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0066  
                         __size_of_PIN_MANAGER_Initialize 0048  
                           __end_of_TMR_OverrideRemaining 601A  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 75C4  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 009F  
                                            AESCmac@input 00C0  
                        __end_of_LORAWAN_SetDeviceAddress 75F4  
                                         ?_GenerateSubkey 0094  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 7576  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 7590  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                     ?_handle16sInterrupt 0001  
                                __end_of_ValidateRxOffset 7694  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 7856  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 4FE2  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6DC0  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 78B6  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5ADE  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 78CA  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00DD  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 6444  
                          __end_of_AutomaticReplyCallback 741C  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0026  
                                    _macEndDevCmdReplyLen FF94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F2  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BC  
                                 __end_of_RADIO_RxTimeout 7236  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 78D6  
                                ??_SetReceptionNotOkState 00A0  
                                          ??_TMR_ISR_lora 002A  
                                  __end_of_ADC_SelChannel 75DC  
                                         ??_DIO0_ISR_Lora 0001  
                                    ??_handle16sInterrupt 0001  
                                             __pdataBANK1 01C8  
                                       _ValidateDataRange 6F88  
                                      __end_of_ExtractMic 6CC4  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 70E4  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 741C  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor 784E  
                                      _RADIO_RxFSKTimeout 6F52  
                                                ?_AESCmac 00BC  
                                  __size_of_TMR1_CallBack 001C  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 007B  
                                            AESEncode@key 006C  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 5C0A  
                                          _LORAWAN_RxDone 0098  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0AFA  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5D1E  
                  __end_of_LORAWAN_EnterContinuousReceive 656E  
                 __size_of_LORAWAN_EnterContinuousReceive 0062  
                          _LORAWAN_EnterContinuousReceive 650C  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 78D4  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                  __size_of_TMR3_CallBack 001C  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D2A  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 5196  
                 __end_of_UnconfirmedTransmissionCallback 6312  
                __size_of_UnconfirmedTransmissionCallback 0066  
                         _UnconfirmedTransmissionCallback 62AC  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                                 _RADIO_ReceiveStart$1199 009C  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01B4  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 7112  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 7086  
       __end_of_ResetParametersForUnconfirmedTransmission 7712  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 7704  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01F8  
                                               _bandwidth FF8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 66F0  
                                            _LORAWAN_Join 5C0A  
                                            _LORAWAN_Send 53FC  
                                  RADIO_FSKPayloadReady@i 00E3  
                                       _ValidateFrequency 674E  
                                               __pnvBANK1 01F8  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 4FE2  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 78BE  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 6FF0  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 6B68  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 335C  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                __size_of_TMR3_Initialize 0028  
                                               _macBuffer 04E0  
                                               _dioStatus 00F0  
                               __end_of_ValidateDataRange 6FBC  
                           RADIO_FSKPayloadReady@irqFlags 00E2  
                                       _SwTimersInterrupt 4B4E  
                                       ??_SwTimersExecute 00DD  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 77C2  
                                           __pmediumconst FE6C  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 77AE  
                                               __ptext100 1B16  
                                               __ptext101 7874  
                                               __ptext110 6692  
                                               __ptext102 58F6  
                               __end_of_ValidateChannelId 743A  
                                               __ptext111 3A02  
                                               __ptext103 4136  
                                               __ptext200 7866  
                                               __ptext120 7880  
                                               __ptext112 0AFA  
                                               __ptext104 5844  
                                               __ptext201 76E2  
                                               __ptext121 743A  
                                               __ptext113 6D06  
                                               __ptext105 54B8  
                                               __ptext210 78D8  
                                               __ptext202 773C  
                                               __ptext130 7846  
                                               __ptext122 2BB6  
                                               __ptext114 73DE  
                                               __ptext106 6C82  
                                               __ptext211 6A3A  
                                               __ptext131 77EA  
                                               __ptext123 7284  
                                               __ptext115 787A  
                                               __ptext107 5E26  
                                               __ptext220 78DA  
                                               __ptext212 6DC0  
                                               __ptext204 774A  
                                               __ptext140 2FA6  
                                               __ptext132 77F4  
                                               __ptext124 7720  
                                               __ptext116 650C  
                                               __ptext108 5F22  
                                               __ptext221 7892  
                                               __ptext213 7522  
                                               __ptext205 74EA  
                                               __ptext141 1382  
                                               __ptext133 5B7C  
                                               __ptext125 5C0A  
                                               __ptext117 78D4  
                                               __ptext109 6090  
                                               __ptext222 755A  
                                               __ptext214 4E16  
                                               __ptext206 78D6  
                                               __ptext150 68AC  
                                               __ptext142 5266  
                                               __ptext134 784E  
                                               __ptext126 7590  
                                               __ptext118 7704  
                                               __ptext223 7898  
                                               __ptext215 4C3C  
                                               __ptext207 76BC  
                                               __ptext151 17FA  
                                               __ptext143 64A8  
                                               __ptext135 7856  
                                               __ptext127 6632  
                                               __ptext119 7712  
                                               __ptext224 78DC  
                                               __ptext216 7494  
                                               __ptext208 7758  
                                               __ptext160 5574  
                                               __ptext152 4864  
                                               __ptext144 656E  
                                               __ptext136 77FE  
                                               __ptext128 4F02  
                                               __ptext225 789E  
                                               __ptext217 781C  
                                               __ptext209 7506  
                                               __ptext161 5EA4  
                                               __ptext153 6B1E  
                                               __ptext145 4632  
                                               __ptext137 7112  
                                               __ptext129 6BF8  
                                               __ptext226 75AA  
                                               __ptext218 753E  
                                               __ptext170 7886  
                                               __ptext162 3E80  
                                               __ptext154 7236  
                                               __ptext146 735C  
                                               __ptext138 5DA4  
                                               __ptext227 78A4  
                                               __ptext219 788C  
                                               __ptext171 4FE2  
                                               __ptext163 56DE  
                                               __ptext155 23EA  
                                               __ptext147 699E  
                                               __ptext139 785E  
                                               __ptext228 78DE  
                                               __ptext180 76A8  
                                               __ptext172 65D0  
                                               __ptext164 69EC  
                                               __ptext156 3D1E  
                                               __ptext148 5D1E  
                                               __ptext229 0000  
                                               __ptext181 78C6  
                                               __ptext173 7458  
                                               __ptext165 7808  
                                               __ptext157 2962  
                                               __ptext149 6D44  
                                               __ptext190 4B4E  
                                               __ptext182 78CA  
                                               __ptext174 7812  
                                               __ptext166 386C  
                                               __ptext158 66F0  
                                               __ptext191 4D2A  
                                               __ptext183 36D0  
                                               __ptext175 76F4  
                                               __ptext167 7054  
                                               __ptext159 772E  
                                               __ptext192 7476  
                                               __ptext184 601A  
                                               __ptext176 78BE  
                                               __ptext168 50BE  
                                               __ptext193 6CC4  
                                               __ptext185 74B2  
                                               __ptext177 78C2  
                                               __ptext169 72AA  
                                               __ptext194 6378  
                                               __ptext186 5C96  
                                               __ptext178 6FBC  
                                               __ptext195 63DE  
                                               __ptext187 5F9E  
                                               __ptext179 7192  
                                               __ptext196 71BC  
                                               __ptext188 6D82  
                                               __ptext197 6802  
                                               __ptext189 74CE  
                                               __ptext198 68FE  
                                               __ptext199 61DC  
                                       _EncryptFRMPayload 4136  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0084  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 475E  
                                                ?___lwmod 0072  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5DA4  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5574  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0AFA  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 1382  
                                      ?_EncryptFRMPayload 0094  
                                     __end_of_readAndSend 62AC  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 73BE  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 77E0  
                           __end_of_RADIO_SetLoRaSyncWord 7812  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1E0E  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00D5  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4D2A  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00E6  
                                       _DutyCycleCallback 2102  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6DC0  
                                                _ADC_Init 773C  
                                                _ADC_Read 6F1C  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00A2  
                                __end_of_LORAWAN_GetState 786E  
                                 __end_ofi2_TMR_SwapTimer 6DFE  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00D2  
                                      AssemblePacket@port 00CA  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2BB6  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6E38  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 78B6  
                                           _SwTimerCreate 61DC  
                          __end_of_InitDefault868Channels 63DE  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 7506  
                               __end_of_ValidateFrequency 67AA  
                                        _SwTimerIsRunning 73DE  
                                        _ExecuteLinkCheck 7022  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 789E  
                                _LORAWAN_SetDeviceAddress 75DC  
                                                _INT2_ISR 7892  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 785E  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00EC  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6D06  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                                        _ExecuteDutyCycle 6950  
                                         _HALDIO5PinValue 7886  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4C3C  
                                __size_of_TMR1_WriteTimer 001C  
                     __size_of_INTERRUPT_InterruptManager 0088  
                              __end_of_DIO2_ISR_Lora_Init 778A  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0096  
                                        GenerateSubkey@k2 0098  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0076  
                              ??_TMR3_SetInterruptHandler 0066  
                                           _TMR3_CallBack 74EA  
                               __end_of_EncryptFRMPayload 428A  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 0170  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 65D0  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0064  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 00E8  
                                    __end_of_IO_pins_init 76F4  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 56DE  
                           EncryptFRMPayload@bufferLength 0096  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 7758  
                                ConfigureRadioTx@dataRate 007A  
                                                _TMR3_ISR 774A  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6AD4  
                         __size_of_SetReceptionNotOkState 0066  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2102  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init 778A  
                               __end_of_DutyCycleCallback 23EA  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 5F9E  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                __size_of_TMR3_StartTimer 0004  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0080  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3B94  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 0174  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 59B0  
                                               copy_data1 59D0  
                                   ?_INTERRUPT_Initialize 0001  
                                     _EncKeySchedule$4148 0068  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 78D2  
                             __end_of_RADIO_SetIQInverted 77F4  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6A88  
                                             _RADIO_Reset 6FBC  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 72AA  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 43D2  
                             __end_ofi2_SwTimersInterrupt 4F02  
                               _LORAWAN_GetMaxPayloadSize 6A88  
                              LORAWAN_RxDone@extractedMic 016C  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0098  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00C2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                   handle16sInterrupt@counterSleepTimeout 0045  
                                          ?_TMR3_CallBack 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 71BC  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 7522  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 6246  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 0056  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5E26  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 00CA  
                                    AssemblePacket@buffer 00CB  
                                        SwTimersExecute@i 00E1  
                                      ??_ValidateDataRate 0064  
                                       ??_TMR3_Initialize 0066  
                                _TMR1_SetInterruptHandler 77B8  
                                  _IOCB4_InterruptHandler 01FA  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 7720  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 7712  
                                   _TMR1_InterruptHandler 01FC  
                                        ??_GenerateSubkey 009A  
                                        _CountfOptsLength 54B8  
                                              _HALSPISend 7812  
                                     ?_ComputeSessionKeys 0094  
                                          _rxWindowOffset FF7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 2FA6  
                                 __size_of_SysConfigSleep 0070  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 733A  
                                           _UpdateTxPower 7836  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 7112  
                                         _allocatedTimers 00EF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 772E  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 786E  
                                                __ptext10 78AE  
                                                __ptext11 6B68  
                                                __ptext20 777E  
                                                __ptext12 7766  
                                                __ptext21 77C2  
                                                __ptext13 739E  
                                                __ptext30 77A2  
                                                __ptext22 778A  
                                                __ptext14 7772  
                                                __ptext31 73BE  
                                                __ptext23 7796  
                                                __ptext15 77B8  
                                                __ptext40 4A5C  
                                                __ptext32 713E  
                                                __ptext24 78B6  
                                                __ptext16 78B2  
                                                __ptext41 3FDE  
                                                __ptext33 75DC  
                                                __ptext25 70B6  
                                                __ptext17 786E  
                                                __ptext50 7624  
                                                __ptext42 562A  
                                                __ptext34 7168  
                                                __ptext26 77CC  
                                                __ptext18 78CE  
                                                __ptext51 6BB0  
                                                __ptext43 5334  
                                                __ptext35 6DFE  
                                                __ptext27 77D6  
                                                __ptext19 78D0  
                                                __ptext60 5ADE  
                                                __ptext52 6E38  
                                                __ptext44 6C40  
                                                __ptext36 5792  
                                                __ptext28 78D2  
                                                __ptext61 26C4  
                                                __ptext53 720E  
                                                __ptext45 6F52  
                                                __ptext37 2102  
                                                __ptext29 782E  
                                                __ptext70 2DB6  
                                                __ptext62 0098  
                                                __ptext54 70E4  
                                                __ptext46 62AC  
                                                __ptext38 4506  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 72F4  
                                                __ptext63 6172  
                                                __ptext55 6444  
                                                __ptext47 76D0  
                                                __ptext39 73FE  
                                                __ptext80 6FF0  
                                                __ptext72 6AD4  
                                                __ptext64 7576  
                                                __ptext56 7318  
                                                __ptext48 75F4  
                                                __ptext81 4966  
                                                __ptext73 428A  
                                                __ptext65 3194  
                                                __ptext57 3B94  
                                                __ptext49 760C  
                                                __ptext90 7836  
                                                __ptext82 6EAC  
                                                __ptext74 7680  
                                                __ptext66 43D2  
                                                __ptext58 5196  
                                                __ptext91 783E  
                                                __ptext83 741C  
                                                __ptext75 7654  
                                                __ptext67 6312  
                                                __ptext59 685A  
                                                __ptext92 766A  
                                                __ptext84 7022  
                                                __ptext76 335C  
                                                __ptext68 72D0  
                                                __ptext93 67AA  
                                                __ptext85 351E  
                                                __ptext77 674E  
                                                __ptext69 78BA  
                                                __ptext94 475E  
                                                __ptext86 733A  
                                                __ptext78 6F88  
                                                __ptext95 6950  
                                                __ptext87 7694  
                                                __ptext79 6E72  
                                                __ptext96 77E0  
                                                __ptext88 763C  
                                                __ptext97 53FC  
                                                __ptext89 6EE4  
                                                __ptext98 6A88  
                                                __ptext99 1E0E  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 3FDE  
                                  __end_of_StartReTxTimer 4506  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 6312  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01C8  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 788C  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 00A0  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 743A  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 739E  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 753E  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 0096  
                                           _timerOverflow 00F2  
                                            _SwTimerStart 5C96  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00BB  
                                         GenerateSubkey@l 00AB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E16  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E2  
                             __end_of_ValidateChannelMask 6F1C  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0090  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 7880  
                                       ??_TMR1_WriteTimer 0066  
                    __end_of_TMR3_DefaultInterruptHandler 78D8  
                   __size_of_TMR3_DefaultInterruptHandler 0002  
                            _TMR3_DefaultInterruptHandler 78D6  
                                              _RADIO_DIO0 6444  
                                              _RADIO_DIO1 6E38  
                                              _RADIO_DIO2 6BB0  
                                              _RADIO_DIO3 7624  
                                              _RADIO_DIO4 760C  
                                              _RADIO_DIO5 75F4  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 78E0  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 78DE  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FF85  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 0094  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FF7D  
                                              _RADIO_Init 386C  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0044  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 78C2  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 2962  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 3194  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5EA4  
                                       _RADIO_TxDone$1211 00DA  
                                      _EXT_INT_Initialize 70B6  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 5F9E  
                                       ??_TMR3_StartTimer 0064  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 7458  
                                         _SwTimersExecute 5792  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 77EA  
                                 ?_PIN_MANAGER_Initialize 0001  
                                         ??_TMR3_CallBack 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 009B  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2092 00BC  
                                     _LORAWAN_TxDone$2093 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 386C  
                               __end_of_RADIO_ReleaseData 7886  
                              _LORAWAN_LinkCheckConfigure 36D0  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 78C6  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001A  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0082  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 7054  
             __end_of_UpdateRetransmissionAckTimeoutState 61DC  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 6172  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                             __size_of_handle16sInterrupt 0014  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$4143 0075  
                                          _AESEncode$4144 0077  
                                          _AESEncode$4145 0079  
                                   __end_of_DIO0_ISR_Lora 78AA  
                                __end_of_SwTimerIsRunning 73FE  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 7054  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                           ?_TMR3_DefaultInterruptHandler 0001  
                                            _rxWindowSize FF85  
                                  __end_of_EncKeySchedule 2BB6  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 789E  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6D44  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 699E  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 766A  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 7654  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3502 00A0  
                        __end_of_INT1_SetInterruptHandler 77E0  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00DE  
                                   __size_of_TMR_ISR_lora 004E  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 7892  
                                    _SystemBlockingWaitMs 7192  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 0094  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 75AA  
                            __end_of_ExecuteRxTimingSetup 7318  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init 76E2  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 650C  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 64A8  
                __end_of_LORAWAN_SetApplicationSessionKey 7192  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 7168  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E2  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 7318  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6BB0  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 7476  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4C3C  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 781C  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00E8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 725E  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 017E  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 26C4  
                             __end_of_RADIO_SetModulation 785E  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00DD  
                                     ?i2_TMR_GetDeltaTime 0009  
