

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Mon Aug 08 20:17:12 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   253                           	psect	text229,global,reloc=2,class=CODE,delta=1
   254                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   255                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   256  0000                     
   257 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   258  0000                     
   259 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   260  0000                     
   261 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   262 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   263 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   264 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   265 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   266 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   267 ;;_LORAWAN_LinkCheckCallback$3516	offset	0
   268 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   269 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   270 ;;_DutyCycleCallback$2268	offset	0
   271 ;;DutyCycleCallback@minim	offset	4
   272 ;;DutyCycleCallback@i	offset	8
   273 ;;DutyCycleCallback@found	offset	9
   274 ;;DutyCycleCallback@param	offset=-1 (param)
   275 ;;AutomaticReplyCallback@param	offset=-1 (param)
   276 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   277 ;;AckRetransmissionCallback@param	offset=-1 (param)
   278 ;;_param	offset=-1 (param)
   279 ;;_UpdateJoinSuccessState$3533	offset	0
   280 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   281                           
   282                           	psect	idataCOMRAM
   283  007822                     __pidataCOMRAM:
   284                           	opt stack 0
   285                           
   286                           ;initializer for _randx
   287  007822  0001               	dw	1
   288  007824  0000               	dw	0
   289                           
   290                           ;initializer for _ticksToScheduledInterrupt
   291  007826  FFFF               	dw	65535
   292  007828  FFFF               	dw	65535
   293                           
   294                           	psect	idataBANK1
   295  007082                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for GenerateSubkey@F7870
   299  007082  00                 	db	0
   300  007083  00                 	db	0
   301  007084  00                 	db	0
   302  007085  00                 	db	0
   303  007086  00                 	db	0
   304  007087  00                 	db	0
   305  007088  00                 	db	0
   306  007089  00                 	db	0
   307  00708A  00                 	db	0
   308  00708B  00                 	db	0
   309  00708C  00                 	db	0
   310  00708D  00                 	db	0
   311  00708E  00                 	db	0
   312  00708F  00                 	db	0
   313  007090  00                 	db	0
   314  007091  87                 	db	135
   315                           
   316                           ;initializer for _appSKey
   317  007092  DD                 	db	221
   318  007093  32                 	db	50
   319  007094  54                 	db	84
   320  007095  F0                 	db	240
   321  007096  8D                 	db	141
   322  007097  55                 	db	85
   323  007098  D6                 	db	214
   324  007099  52                 	db	82
   325  00709A  E7                 	db	231
   326  00709B  73                 	db	115
   327  00709C  0B                 	db	11
   328  00709D  BC                 	db	188
   329  00709E  26                 	db	38
   330  00709F  3E                 	db	62
   331  0070A0  0A                 	db	10
   332  0070A1  DA                 	db	218
   333                           
   334                           ;initializer for _nwkSKey
   335  0070A2  75                 	db	117
   336  0070A3  E0                 	db	224
   337  0070A4  66                 	db	102
   338  0070A5  1A                 	db	26
   339  0070A6  A0                 	db	160
   340  0070A7  BC                 	db	188
   341  0070A8  21                 	db	33
   342  0070A9  E4                 	db	228
   343  0070AA  4B                 	db	75
   344  0070AB  57                 	db	87
   345  0070AC  21                 	db	33
   346  0070AD  B0                 	db	176
   347  0070AE  D6                 	db	214
   348  0070AF  30                 	db	48
   349  0070B0  F7                 	db	247
   350  0070B1  B2                 	db	178
   351                           
   352                           	psect	mediumconst
   353  00FE6C                     __pmediumconst:
   354                           	opt stack 0
   355  00FE6C  00                 	db	0
   356  00FE6D                     _STable:
   357                           	opt stack 0
   358  00FE6D  63                 	db	99
   359  00FE6E  7C                 	db	124
   360  00FE6F  77                 	db	119
   361  00FE70  7B                 	db	123
   362  00FE71  F2                 	db	242
   363  00FE72  6B                 	db	107
   364  00FE73  6F                 	db	111
   365  00FE74  C5                 	db	197
   366  00FE75  30                 	db	48
   367  00FE76  01                 	db	1
   368  00FE77  67                 	db	103
   369  00FE78  2B                 	db	43
   370  00FE79  FE                 	db	254
   371  00FE7A  D7                 	db	215
   372  00FE7B  AB                 	db	171
   373  00FE7C  76                 	db	118
   374  00FE7D  CA                 	db	202
   375  00FE7E  82                 	db	130
   376  00FE7F  C9                 	db	201
   377  00FE80  7D                 	db	125
   378  00FE81  FA                 	db	250
   379  00FE82  59                 	db	89
   380  00FE83  47                 	db	71
   381  00FE84  F0                 	db	240
   382  00FE85  AD                 	db	173
   383  00FE86  D4                 	db	212
   384  00FE87  A2                 	db	162
   385  00FE88  AF                 	db	175
   386  00FE89  9C                 	db	156
   387  00FE8A  A4                 	db	164
   388  00FE8B  72                 	db	114
   389  00FE8C  C0                 	db	192
   390  00FE8D  B7                 	db	183
   391  00FE8E  FD                 	db	253
   392  00FE8F  93                 	db	147
   393  00FE90  26                 	db	38
   394  00FE91  36                 	db	54
   395  00FE92  3F                 	db	63
   396  00FE93  F7                 	db	247
   397  00FE94  CC                 	db	204
   398  00FE95  34                 	db	52
   399  00FE96  A5                 	db	165
   400  00FE97  E5                 	db	229
   401  00FE98  F1                 	db	241
   402  00FE99  71                 	db	113
   403  00FE9A  D8                 	db	216
   404  00FE9B  31                 	db	49
   405  00FE9C  15                 	db	21
   406  00FE9D  04                 	db	4
   407  00FE9E  C7                 	db	199
   408  00FE9F  23                 	db	35
   409  00FEA0  C3                 	db	195
   410  00FEA1  18                 	db	24
   411  00FEA2  96                 	db	150
   412  00FEA3  05                 	db	5
   413  00FEA4  9A                 	db	154
   414  00FEA5  07                 	db	7
   415  00FEA6  12                 	db	18
   416  00FEA7  80                 	db	128
   417  00FEA8  E2                 	db	226
   418  00FEA9  EB                 	db	235
   419  00FEAA  27                 	db	39
   420  00FEAB  B2                 	db	178
   421  00FEAC  75                 	db	117
   422  00FEAD  09                 	db	9
   423  00FEAE  83                 	db	131
   424  00FEAF  2C                 	db	44
   425  00FEB0  1A                 	db	26
   426  00FEB1  1B                 	db	27
   427  00FEB2  6E                 	db	110
   428  00FEB3  5A                 	db	90
   429  00FEB4  A0                 	db	160
   430  00FEB5  52                 	db	82
   431  00FEB6  3B                 	db	59
   432  00FEB7  D6                 	db	214
   433  00FEB8  B3                 	db	179
   434  00FEB9  29                 	db	41
   435  00FEBA  E3                 	db	227
   436  00FEBB  2F                 	db	47
   437  00FEBC  84                 	db	132
   438  00FEBD  53                 	db	83
   439  00FEBE  D1                 	db	209
   440  00FEBF  00                 	db	0
   441  00FEC0  ED                 	db	237
   442  00FEC1  20                 	db	32
   443  00FEC2  FC                 	db	252
   444  00FEC3  B1                 	db	177
   445  00FEC4  5B                 	db	91
   446  00FEC5  6A                 	db	106
   447  00FEC6  CB                 	db	203
   448  00FEC7  BE                 	db	190
   449  00FEC8  39                 	db	57
   450  00FEC9  4A                 	db	74
   451  00FECA  4C                 	db	76
   452  00FECB  58                 	db	88
   453  00FECC  CF                 	db	207
   454  00FECD  D0                 	db	208
   455  00FECE  EF                 	db	239
   456  00FECF  AA                 	db	170
   457  00FED0  FB                 	db	251
   458  00FED1  43                 	db	67
   459  00FED2  4D                 	db	77
   460  00FED3  33                 	db	51
   461  00FED4  85                 	db	133
   462  00FED5  45                 	db	69
   463  00FED6  F9                 	db	249
   464  00FED7  02                 	db	2
   465  00FED8  7F                 	db	127
   466  00FED9  50                 	db	80
   467  00FEDA  3C                 	db	60
   468  00FEDB  9F                 	db	159
   469  00FEDC  A8                 	db	168
   470  00FEDD  51                 	db	81
   471  00FEDE  A3                 	db	163
   472  00FEDF  40                 	db	64
   473  00FEE0  8F                 	db	143
   474  00FEE1  92                 	db	146
   475  00FEE2  9D                 	db	157
   476  00FEE3  38                 	db	56
   477  00FEE4  F5                 	db	245
   478  00FEE5  BC                 	db	188
   479  00FEE6  B6                 	db	182
   480  00FEE7  DA                 	db	218
   481  00FEE8  21                 	db	33
   482  00FEE9  10                 	db	16
   483  00FEEA  FF                 	db	255
   484  00FEEB  F3                 	db	243
   485  00FEEC  D2                 	db	210
   486  00FEED  CD                 	db	205
   487  00FEEE  0C                 	db	12
   488  00FEEF  13                 	db	19
   489  00FEF0  EC                 	db	236
   490  00FEF1  5F                 	db	95
   491  00FEF2  97                 	db	151
   492  00FEF3  44                 	db	68
   493  00FEF4  17                 	db	23
   494  00FEF5  C4                 	db	196
   495  00FEF6  A7                 	db	167
   496  00FEF7  7E                 	db	126
   497  00FEF8  3D                 	db	61
   498  00FEF9  64                 	db	100
   499  00FEFA  5D                 	db	93
   500  00FEFB  19                 	db	25
   501  00FEFC  73                 	db	115
   502  00FEFD  60                 	db	96
   503  00FEFE  81                 	db	129
   504  00FEFF  4F                 	db	79
   505  00FF00  DC                 	db	220
   506  00FF01  22                 	db	34
   507  00FF02  2A                 	db	42
   508  00FF03  90                 	db	144
   509  00FF04  88                 	db	136
   510  00FF05  46                 	db	70
   511  00FF06  EE                 	db	238
   512  00FF07  B8                 	db	184
   513  00FF08  14                 	db	20
   514  00FF09  DE                 	db	222
   515  00FF0A  5E                 	db	94
   516  00FF0B  0B                 	db	11
   517  00FF0C  DB                 	db	219
   518  00FF0D  E0                 	db	224
   519  00FF0E  32                 	db	50
   520  00FF0F  3A                 	db	58
   521  00FF10  0A                 	db	10
   522  00FF11  49                 	db	73
   523  00FF12  06                 	db	6
   524  00FF13  24                 	db	36
   525  00FF14  5C                 	db	92
   526  00FF15  C2                 	db	194
   527  00FF16  D3                 	db	211
   528  00FF17  AC                 	db	172
   529  00FF18  62                 	db	98
   530  00FF19  91                 	db	145
   531  00FF1A  95                 	db	149
   532  00FF1B  E4                 	db	228
   533  00FF1C  79                 	db	121
   534  00FF1D  E7                 	db	231
   535  00FF1E  C8                 	db	200
   536  00FF1F  37                 	db	55
   537  00FF20  6D                 	db	109
   538  00FF21  8D                 	db	141
   539  00FF22  D5                 	db	213
   540  00FF23  4E                 	db	78
   541  00FF24  A9                 	db	169
   542  00FF25  6C                 	db	108
   543  00FF26  56                 	db	86
   544  00FF27  F4                 	db	244
   545  00FF28  EA                 	db	234
   546  00FF29  65                 	db	101
   547  00FF2A  7A                 	db	122
   548  00FF2B  AE                 	db	174
   549  00FF2C  08                 	db	8
   550  00FF2D  BA                 	db	186
   551  00FF2E  78                 	db	120
   552  00FF2F  25                 	db	37
   553  00FF30  2E                 	db	46
   554  00FF31  1C                 	db	28
   555  00FF32  A6                 	db	166
   556  00FF33  B4                 	db	180
   557  00FF34  C6                 	db	198
   558  00FF35  E8                 	db	232
   559  00FF36  DD                 	db	221
   560  00FF37  74                 	db	116
   561  00FF38  1F                 	db	31
   562  00FF39  4B                 	db	75
   563  00FF3A  BD                 	db	189
   564  00FF3B  8B                 	db	139
   565  00FF3C  8A                 	db	138
   566  00FF3D  70                 	db	112
   567  00FF3E  3E                 	db	62
   568  00FF3F  B5                 	db	181
   569  00FF40  66                 	db	102
   570  00FF41  48                 	db	72
   571  00FF42  03                 	db	3
   572  00FF43  F6                 	db	246
   573  00FF44  0E                 	db	14
   574  00FF45  61                 	db	97
   575  00FF46  35                 	db	53
   576  00FF47  57                 	db	87
   577  00FF48  B9                 	db	185
   578  00FF49  86                 	db	134
   579  00FF4A  C1                 	db	193
   580  00FF4B  1D                 	db	29
   581  00FF4C  9E                 	db	158
   582  00FF4D  E1                 	db	225
   583  00FF4E  F8                 	db	248
   584  00FF4F  98                 	db	152
   585  00FF50  11                 	db	17
   586  00FF51  69                 	db	105
   587  00FF52  D9                 	db	217
   588  00FF53  8E                 	db	142
   589  00FF54  94                 	db	148
   590  00FF55  9B                 	db	155
   591  00FF56  1E                 	db	30
   592  00FF57  87                 	db	135
   593  00FF58  E9                 	db	233
   594  00FF59  CE                 	db	206
   595  00FF5A  55                 	db	85
   596  00FF5B  28                 	db	40
   597  00FF5C  DF                 	db	223
   598  00FF5D  8C                 	db	140
   599  00FF5E  A1                 	db	161
   600  00FF5F  89                 	db	137
   601  00FF60  0D                 	db	13
   602  00FF61  BF                 	db	191
   603  00FF62  E6                 	db	230
   604  00FF63  42                 	db	66
   605  00FF64  68                 	db	104
   606  00FF65  41                 	db	65
   607  00FF66  99                 	db	153
   608  00FF67  2D                 	db	45
   609  00FF68  0F                 	db	15
   610  00FF69  B0                 	db	176
   611  00FF6A  54                 	db	84
   612  00FF6B  BB                 	db	187
   613  00FF6C  16                 	db	22
   614  00FF6D                     __end_of_STable:
   615                           	opt stack 0
   616  00FF6D                     _maxPayloadSize:
   617                           	opt stack 0
   618  00FF6D  33                 	db	51
   619  00FF6E  33                 	db	51
   620  00FF6F  33                 	db	51
   621  00FF70  73                 	db	115
   622  00FF71  F2                 	db	242
   623  00FF72  F2                 	db	242
   624  00FF73  F2                 	db	242
   625  00FF74  38                 	db	56
   626  00FF75                     __end_of_maxPayloadSize:
   627                           	opt stack 0
   628  00FF75                     _modulation:
   629                           	opt stack 0
   630  00FF75  01                 	db	1
   631  00FF76  01                 	db	1
   632  00FF77  01                 	db	1
   633  00FF78  01                 	db	1
   634  00FF79  01                 	db	1
   635  00FF7A  01                 	db	1
   636  00FF7B  01                 	db	1
   637  00FF7C  00                 	db	0
   638  00FF7D                     __end_of_modulation:
   639                           	opt stack 0
   640  00FF7D                     _rxWindowOffset:
   641                           	opt stack 0
   642  00FF7D  DF                 	db	223
   643  00FF7E  CE                 	db	206
   644  00FF7F  C6                 	db	198
   645  00FF80  C2                 	db	194
   646  00FF81  BE                 	db	190
   647  00FF82  BC                 	db	188
   648  00FF83  F1                 	db	241
   649  00FF84  FE                 	db	254
   650  00FF85                     __end_of_rxWindowOffset:
   651                           	opt stack 0
   652  00FF85                     _rxWindowSize:
   653                           	opt stack 0
   654  00FF85  08                 	db	8
   655  00FF86  0A                 	db	10
   656  00FF87  0E                 	db	14
   657  00FF88  1A                 	db	26
   658  00FF89  31                 	db	49
   659  00FF8A  58                 	db	88
   660  00FF8B  3C                 	db	60
   661  00FF8C  08                 	db	8
   662  00FF8D                     __end_of_rxWindowSize:
   663                           	opt stack 0
   664  00FF8D                     _bandwidth:
   665                           	opt stack 0
   666  00FF8D  07                 	db	7
   667  00FF8E  07                 	db	7
   668  00FF8F  07                 	db	7
   669  00FF90  07                 	db	7
   670  00FF91  07                 	db	7
   671  00FF92  07                 	db	7
   672  00FF93  08                 	db	8
   673  00FF94                     __end_of_bandwidth:
   674                           	opt stack 0
   675  00FF94                     _macEndDevCmdReplyLen:
   676                           	opt stack 0
   677  00FF94  01                 	db	1
   678  00FF95  02                 	db	2
   679  00FF96  01                 	db	1
   680  00FF97  02                 	db	2
   681  00FF98  03                 	db	3
   682  00FF99  02                 	db	2
   683  00FF9A  01                 	db	1
   684  00FF9B                     __end_of_macEndDevCmdReplyLen:
   685                           	opt stack 0
   686  00FF9B                     _spreadingFactor:
   687                           	opt stack 0
   688  00FF9B  0C                 	db	12
   689  00FF9C  0B                 	db	11
   690  00FF9D  0A                 	db	10
   691  00FF9E  09                 	db	9
   692  00FF9F  08                 	db	8
   693  00FFA0  07                 	db	7
   694  00FFA1  07                 	db	7
   695  00FFA2                     __end_of_spreadingFactor:
   696                           	opt stack 0
   697  00FFA2                     _txPower868:
   698                           	opt stack 0
   699  00FFA2  14                 	db	20
   700  00FFA3  0E                 	db	14
   701  00FFA4  0B                 	db	11
   702  00FFA5  08                 	db	8
   703  00FFA6  05                 	db	5
   704  00FFA7  02                 	db	2
   705  00FFA8                     __end_of_txPower868:
   706                           	opt stack 0
   707  00FFA8                     _DefaultChannels433:
   708                           	opt stack 0
   709  00FFA8  B9D8               	dw	47576
   710  00FFAA  19D1               	dw	6609
   711  00FFAC  01                 	db	1
   712  00FFAD  50                 	db	80
   713  00FFAE  012E               	dw	302
   714  00FFB0  0000               	dw	0
   715  00FFB2  0000               	dw	0
   716  00FFB4  01                 	db	1
   717  00FFB5  FF                 	db	255
   718  00FFB6  C718               	dw	50968
   719  00FFB8  19D4               	dw	6612
   720  00FFBA  01                 	db	1
   721  00FFBB  50                 	db	80
   722  00FFBC  012E               	dw	302
   723  00FFBE  0000               	dw	0
   724  00FFC0  0000               	dw	0
   725  00FFC2  01                 	db	1
   726  00FFC3  FF                 	db	255
   727  00FFC4  D458               	dw	54360
   728  00FFC6  19D7               	dw	6615
   729  00FFC8  01                 	db	1
   730  00FFC9  50                 	db	80
   731  00FFCA  012E               	dw	302
   732  00FFCC  0000               	dw	0
   733  00FFCE  0000               	dw	0
   734  00FFD0  01                 	db	1
   735  00FFD1  FF                 	db	255
   736  00FFD2                     __end_of_DefaultChannels433:
   737                           	opt stack 0
   738  00FFD2                     _DefaultChannels868:
   739                           	opt stack 0
   740  00FFD2  27A0               	dw	10144
   741  00FFD4  33BE               	dw	13246
   742  00FFD6  01                 	db	1
   743  00FFD7  50                 	db	80
   744  00FFD8  012E               	dw	302
   745  00FFDA  0000               	dw	0
   746  00FFDC  0000               	dw	0
   747  00FFDE  01                 	db	1
   748  00FFDF  FF                 	db	255
   749  00FFE0  34E0               	dw	13536
   750  00FFE2  33C1               	dw	13249
   751  00FFE4  01                 	db	1
   752  00FFE5  50                 	db	80
   753  00FFE6  012E               	dw	302
   754  00FFE8  0000               	dw	0
   755  00FFEA  0000               	dw	0
   756  00FFEC  01                 	db	1
   757  00FFED  FF                 	db	255
   758  00FFEE  4220               	dw	16928
   759  00FFF0  33C4               	dw	13252
   760  00FFF2  01                 	db	1
   761  00FFF3  50                 	db	80
   762  00FFF4  012E               	dw	302
   763  00FFF6  0000               	dw	0
   764  00FFF8  0000               	dw	0
   765  00FFFA  01                 	db	1
   766  00FFFB  FF                 	db	255
   767  00FFFC                     __end_of_DefaultChannels868:
   768                           	opt stack 0
   769  00FFFC                     _FskSyncWordBuff:
   770                           	opt stack 0
   771  00FFFC  C1                 	db	193
   772  00FFFD  94                 	db	148
   773  00FFFE  C1                 	db	193
   774  00FFFF                     __end_of_FskSyncWordBuff:
   775                           	opt stack 0
   776  00FFFF  00                 	db	0	; dummy byte at the end
   777  0000                     
   778                           	psect	nvCOMRAM
   779  00005A                     __pnvCOMRAM:
   780                           	opt stack 0
   781  00005A                     _INT1_InterruptHandler:
   782                           	opt stack 0
   783  00005A                     	ds	2
   784  00005C                     _timer1ReloadVal:
   785                           	opt stack 0
   786  00005C                     	ds	2
   787  00005E                     _timer3ReloadVal:
   788                           	opt stack 0
   789  00005E                     	ds	2
   790                           
   791                           	psect	nvBANK1
   792  0001F8                     __pnvBANK1:
   793                           	opt stack 0
   794  0001F8                     _INT2_InterruptHandler:
   795                           	opt stack 0
   796  0001F8                     	ds	2
   797  0001FA                     _IOCB4_InterruptHandler:
   798                           	opt stack 0
   799  0001FA                     	ds	2
   800  0001FC                     _TMR1_InterruptHandler:
   801                           	opt stack 0
   802  0001FC                     	ds	2
   803  0001FE                     _TMR3_InterruptHandler:
   804                           	opt stack 0
   805  0001FE                     	ds	2
   806  0000                     _ANSELA	set	3896
   807  0000                     _ANSELB	set	3897
   808  0000                     _ANSELC	set	3898
   809  0000                     _ANSELCbits	set	3898
   810  0000                     _ANSELD	set	3899
   811  0000                     _ANSELDbits	set	3899
   812  0000                     _ANSELE	set	3900
   813  0000                     _ANSD0	set	31192
   814  0000                     _ANSD1	set	31193
   815  0000                     _ANSD3	set	31195
   816  0000                     _ANSD4	set	31196
   817  0000                     _CCP1MD	set	31216
   818  0000                     _CCP2MD	set	31217
   819  0000                     _CCP3MD	set	31218
   820  0000                     _CCP4MD	set	31219
   821  0000                     _CCP5MD	set	31220
   822  0000                     _CMP1MD	set	31209
   823  0000                     _CMP2MD	set	31210
   824  0000                     _CTMUMD	set	31211
   825  0000                     _MSSP1MD	set	31222
   826  0000                     _MSSP2MD	set	31223
   827  0000                     _TMR2MD	set	31225
   828  0000                     _TMR4MD	set	31227
   829  0000                     _TMR5MD	set	31228
   830  0000                     _TMR6MD	set	31229
   831  0000                     _UART1MD	set	31230
   832  0000                     _UART2MD	set	31231
   833  0000                     _TMR1	set	4046
   834  0000                     _TMR3	set	4018
   835  0000                     _ADCON0bits	set	4034
   836  0000                     _ADCON2bits	set	4032
   837  0000                     _ADRESH	set	4036
   838  0000                     _ADRESL	set	4035
   839  0000                     _INTCON2bits	set	4081
   840  0000                     _INTCON3bits	set	4080
   841  0000                     _INTCONbits	set	4082
   842  0000                     _IOCBbits	set	3938
   843  0000                     _LATA	set	3977
   844  0000                     _LATB	set	3978
   845  0000                     _LATBbits	set	3978
   846  0000                     _LATC	set	3979
   847  0000                     _LATCbits	set	3979
   848  0000                     _LATD	set	3980
   849  0000                     _LATDbits	set	3980
   850  0000                     _LATE	set	3981
   851  0000                     _LATEbits	set	3981
   852  0000                     _OSCCON	set	4051
   853  0000                     _OSCCON2	set	4050
   854  0000                     _OSCTUNE	set	3995
   855  0000                     _PIE1bits	set	3997
   856  0000                     _PIE2bits	set	4000
   857  0000                     _PIR1bits	set	3998
   858  0000                     _PIR2bits	set	4001
   859  0000                     _PORTBbits	set	3969
   860  0000                     _PORTCbits	set	3970
   861  0000                     _PORTDbits	set	3971
   862  0000                     _RCONbits	set	4048
   863  0000                     _SSP2ADD	set	3950
   864  0000                     _SSP2BUF	set	3951
   865  0000                     _SSP2CON1	set	3948
   866  0000                     _SSP2CON1bits	set	3948
   867  0000                     _SSP2STAT	set	3949
   868  0000                     _SSP2STATbits	set	3949
   869  0000                     _T1CON	set	4045
   870  0000                     _T1CONbits	set	4045
   871  0000                     _T1GCON	set	4044
   872  0000                     _T3CON	set	4017
   873  0000                     _T3CONbits	set	4017
   874  0000                     _T3GCON	set	4020
   875  0000                     _TMR1H	set	4047
   876  0000                     _TMR1L	set	4046
   877  0000                     _TMR3H	set	4019
   878  0000                     _TMR3L	set	4018
   879  0000                     _TRISA	set	3986
   880  0000                     _TRISB	set	3987
   881  0000                     _TRISBbits	set	3987
   882  0000                     _TRISC	set	3988
   883  0000                     _TRISCbits	set	3988
   884  0000                     _TRISD	set	3989
   885  0000                     _TRISDbits	set	3989
   886  0000                     _TRISE	set	3990
   887  0000                     _TRISEbits	set	3990
   888  0000                     _WPUB	set	3937
   889  0000                     _IDLEN	set	32415
   890  0000                     _LATC2	set	31834
   891  0000                     _LATD0	set	31840
   892  0000                     _LATD1	set	31841
   893  0000                     _LATD3	set	31843
   894  0000                     _LATD4	set	31844
   895  0000                     _TRISC2	set	31906
   896  0000                     _TRISD0	set	31912
   897  0000                     _TRISD1	set	31913
   898  0000                     _TRISD3	set	31915
   899  0000                     _TRISD4	set	31916
   900                           
   901                           ; #config settings
   902  0000                     
   903                           	psect	cinit
   904  00599C                     __pcinit:
   905                           	opt stack 0
   906  00599C                     start_initialization:
   907                           	opt stack 0
   908  00599C                     __initialization:
   909                           	opt stack 0
   910                           
   911                           ; Initialize objects allocated to BANK1 (48 bytes)
   912                           ; load TBLPTR registers with __pidataBANK1
   913  00599C  0E82               	movlw	low __pidataBANK1
   914  00599E  6EF6               	movwf	tblptrl,c
   915  0059A0  0E70               	movlw	high __pidataBANK1
   916  0059A2  6EF7               	movwf	tblptrh,c
   917  0059A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   918  0059A6  6EF8               	movwf	tblptru,c
   919  0059A8  EE01  F0C8         	lfsr	0,__pdataBANK1
   920  0059AC  EE20 F030          	lfsr	2,48
   921  0059B0                     copy_data0:
   922  0059B0  0009               	tblrd		*+
   923  0059B2  CFF5 FFEE          	movff	tablat,postinc0
   924  0059B6  50DD               	movf	postdec2,w,c
   925  0059B8  50D9               	movf	fsr2l,w,c
   926  0059BA  E1FA               	bnz	copy_data0
   927                           
   928                           ; Initialize objects allocated to COMRAM (8 bytes)
   929                           ; load TBLPTR registers with __pidataCOMRAM
   930  0059BC  0E22               	movlw	low __pidataCOMRAM
   931  0059BE  6EF6               	movwf	tblptrl,c
   932  0059C0  0E78               	movlw	high __pidataCOMRAM
   933  0059C2  6EF7               	movwf	tblptrh,c
   934  0059C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   935  0059C6  6EF8               	movwf	tblptru,c
   936  0059C8  EE00  F052         	lfsr	0,__pdataCOMRAM
   937  0059CC  EE20 F008          	lfsr	2,8
   938  0059D0                     copy_data1:
   939  0059D0  0009               	tblrd		*+
   940  0059D2  CFF5 FFEE          	movff	tablat,postinc0
   941  0059D6  50DD               	movf	postdec2,w,c
   942  0059D8  50D9               	movf	fsr2l,w,c
   943  0059DA  E1FA               	bnz	copy_data1
   944                           
   945                           ; Clear objects allocated to BIGRAM (542 bytes)
   946  0059DC  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   947  0059E0  EE22 F01E          	lfsr	2,542
   948  0059E4                     clear_0:
   949  0059E4  6AEE               	clrf	postinc0,c
   950  0059E6  50DD               	movf	postdec2,w,c
   951  0059E8  50D9               	movf	fsr2l,w,c
   952  0059EA  E1FC               	bnz	clear_0
   953  0059EC  50DA               	movf	fsr2h,w,c
   954  0059EE  E1FA               	bnz	clear_0
   955                           
   956                           ; Clear objects allocated to BANK4 (224 bytes)
   957  0059F0  EE04  F000         	lfsr	0,__pbssBANK4
   958  0059F4  0EE0               	movlw	224
   959  0059F6                     clear_1:
   960  0059F6  6AEE               	clrf	postinc0,c
   961  0059F8  06E8               	decf	wreg,f,c
   962  0059FA  E1FD               	bnz	clear_1
   963                           
   964                           ; Clear objects allocated to BANK3 (160 bytes)
   965  0059FC  EE03  F000         	lfsr	0,__pbssBANK3
   966  005A00  0EA0               	movlw	160
   967  005A02                     clear_2:
   968  005A02  6AEE               	clrf	postinc0,c
   969  005A04  06E8               	decf	wreg,f,c
   970  005A06  E1FD               	bnz	clear_2
   971                           
   972                           ; Clear objects allocated to BANK2 (245 bytes)
   973  005A08  EE02  F000         	lfsr	0,__pbssBANK2
   974  005A0C  0EF5               	movlw	245
   975  005A0E                     clear_3:
   976  005A0E  6AEE               	clrf	postinc0,c
   977  005A10  06E8               	decf	wreg,f,c
   978  005A12  E1FD               	bnz	clear_3
   979                           
   980                           ; Clear objects allocated to BANK1 (75 bytes)
   981  005A14  EE01  F07D         	lfsr	0,__pbssBANK1
   982  005A18  0E4B               	movlw	75
   983  005A1A                     clear_4:
   984  005A1A  6AEE               	clrf	postinc0,c
   985  005A1C  06E8               	decf	wreg,f,c
   986  005A1E  E1FD               	bnz	clear_4
   987                           
   988                           ; Clear objects allocated to BANK0 (11 bytes)
   989  005A20  EE00  F0E8         	lfsr	0,__pbssBANK0
   990  005A24  0E0B               	movlw	11
   991  005A26                     clear_5:
   992  005A26  6AEE               	clrf	postinc0,c
   993  005A28  06E8               	decf	wreg,f,c
   994  005A2A  E1FD               	bnz	clear_5
   995                           
   996                           ; Clear objects allocated to COMRAM (20 bytes)
   997  005A2C  EE00  F032         	lfsr	0,__pbssCOMRAM
   998  005A30  0E14               	movlw	20
   999  005A32                     clear_6:
  1000  005A32  6AEE               	clrf	postinc0,c
  1001  005A34  06E8               	decf	wreg,f,c
  1002  005A36  E1FD               	bnz	clear_6
  1003  005A38                     end_of_initialization:
  1004                           	opt stack 0
  1005  005A38                     __end_of__initialization:
  1006                           	opt stack 0
  1007  005A38  0100               	movlb	0
  1008  005A3A  EF6E  F02D         	goto	_main	;jump to C main() function
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           postdec2	equ	0xFDD
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           
  1019                           	psect	bssCOMRAM
  1020  000032                     __pbssCOMRAM:
  1021                           	opt stack 0
  1022  000032                     TMR_GetDeltaTime@retVal:
  1023                           	opt stack 0
  1024  000032                     	ds	4
  1025  000036                     _ticksAccounted:
  1026                           	opt stack 0
  1027  000036                     	ds	4
  1028  00003A                     _ticksAdded:
  1029                           	opt stack 0
  1030  00003A                     	ds	4
  1031  00003E                     TMR_GetDeltaTime@tmrVal:
  1032                           	opt stack 0
  1033  00003E                     	ds	2
  1034  000040                     TMR_SwapTimer@oldVal:
  1035                           	opt stack 0
  1036  000040                     	ds	2
  1037  000042                     TMR_SwapTimer@retVal:
  1038                           	opt stack 0
  1039  000042                     	ds	2
  1040  000044                     __roundCounter:
  1041                           	opt stack 0
  1042  000044                     	ds	1
  1043  000045                     handle16sInterrupt@counterSleepTimeout:
  1044                           	opt stack 0
  1045  000045                     	ds	1
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec2	equ	0xFDD
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           
  1056                           	psect	dataCOMRAM
  1057  000052                     __pdataCOMRAM:
  1058                           	opt stack 0
  1059  000052                     _randx:
  1060                           	opt stack 0
  1061  000052                     	ds	4
  1062  000056                     _ticksToScheduledInterrupt:
  1063                           	opt stack 0
  1064  000056                     	ds	4
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec2	equ	0xFDD
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           
  1075                           	psect	bssBANK0
  1076  0000E8                     __pbssBANK0:
  1077                           	opt stack 0
  1078  0000E8                     _rxPayload:
  1079                           	opt stack 0
  1080  0000E8                     	ds	4
  1081  0000EC                     _reloadVal:
  1082                           	opt stack 0
  1083  0000EC                     	ds	2
  1084  0000EE                     __rcon:
  1085                           	opt stack 0
  1086  0000EE                     	ds	1
  1087  0000EF                     _allocatedTimers:
  1088                           	opt stack 0
  1089  0000EF                     	ds	1
  1090  0000F0                     _dioStatus:
  1091                           	opt stack 0
  1092  0000F0                     	ds	1
  1093  0000F1                     _localDioStatus:
  1094                           	opt stack 0
  1095  0000F1                     	ds	1
  1096  0000F2                     _timerOverflow:
  1097                           	opt stack 0
  1098  0000F2                     	ds	1
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec2	equ	0xFDD
  1106                           fsr2h	equ	0xFDA
  1107                           fsr2l	equ	0xFD9
  1108                           
  1109                           	psect	bssBANK1
  1110  00017D                     __pbssBANK1:
  1111                           	opt stack 0
  1112  00017D                     _TimeToSend:
  1113                           	opt stack 0
  1114  00017D                     	ds	1
  1115  00017E                     _RadioConfiguration:
  1116                           	opt stack 0
  1117  00017E                     	ds	54
  1118  0001B4                     _aesBuffer:
  1119                           	opt stack 0
  1120  0001B4                     	ds	16
  1121  0001C4                     _payload:
  1122                           	opt stack 0
  1123  0001C4                     	ds	4
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           postdec2	equ	0xFDD
  1131                           fsr2h	equ	0xFDA
  1132                           fsr2l	equ	0xFD9
  1133                           
  1134                           	psect	dataBANK1
  1135  0001C8                     __pdataBANK1:
  1136                           	opt stack 0
  1137  0001C8                     GenerateSubkey@F7870:
  1138                           	opt stack 0
  1139  0001C8                     	ds	16
  1140  0001D8                     _appSKey:
  1141                           	opt stack 0
  1142  0001D8                     	ds	16
  1143  0001E8                     _nwkSKey:
  1144                           	opt stack 0
  1145  0001E8                     	ds	16
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           postinc0	equ	0xFEE
  1151                           wreg	equ	0xFE8
  1152                           postdec2	equ	0xFDD
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           
  1156                           	psect	bssBANK2
  1157  000200                     __pbssBANK2:
  1158                           	opt stack 0
  1159  000200                     _loRa:
  1160                           	opt stack 0
  1161  000200                     	ds	245
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec2	equ	0xFDD
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           
  1172                           	psect	bssBANK3
  1173  000300                     __pbssBANK3:
  1174                           	opt stack 0
  1175  000300                     _swTimers:
  1176                           	opt stack 0
  1177  000300                     	ds	160
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec2	equ	0xFDD
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           
  1188                           	psect	bssBANK4
  1189  000400                     __pbssBANK4:
  1190                           	opt stack 0
  1191  000400                     _Channels:
  1192                           	opt stack 0
  1193  000400                     	ds	224
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           postinc0	equ	0xFEE
  1199                           wreg	equ	0xFE8
  1200                           postdec2	equ	0xFDD
  1201                           fsr2h	equ	0xFDA
  1202                           fsr2l	equ	0xFD9
  1203                           
  1204                           	psect	bssBIGRAM
  1205  0004E0                     __pbssBIGRAM:
  1206                           	opt stack 0
  1207  0004E0                     _macBuffer:
  1208                           	opt stack 0
  1209  0004E0                     	ds	271
  1210  0005EF                     _radioBuffer:
  1211                           	opt stack 0
  1212  0005EF                     	ds	271
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec2	equ	0xFDD
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           
  1223                           	psect	cstackBANK1
  1224  000100                     __pcstackBANK1:
  1225                           	opt stack 0
  1226  000100                     AESCmac@k2:
  1227                           	opt stack 0
  1228                           
  1229                           ; 16 bytes @ 0x0
  1230  000100                     	ds	16
  1231  000110                     AESCmac@k1:
  1232                           	opt stack 0
  1233                           
  1234                           ; 16 bytes @ 0x10
  1235  000110                     	ds	16
  1236  000120                     AESCmac@mLast:
  1237                           	opt stack 0
  1238                           
  1239                           ; 16 bytes @ 0x20
  1240  000120                     	ds	16
  1241  000130                     AESCmac@padded:
  1242                           	opt stack 0
  1243                           
  1244                           ; 16 bytes @ 0x30
  1245  000130                     	ds	16
  1246  000140                     AESCmac@y:
  1247                           	opt stack 0
  1248                           
  1249                           ; 16 bytes @ 0x40
  1250  000140                     	ds	16
  1251  000150                     AESCmac@x:
  1252                           	opt stack 0
  1253                           
  1254                           ; 16 bytes @ 0x50
  1255  000150                     	ds	16
  1256  000160                     AESCmac@ptr:
  1257                           	opt stack 0
  1258                           
  1259                           ; 2 bytes @ 0x60
  1260  000160                     	ds	2
  1261  000162                     AESCmac@flag:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x62
  1265  000162                     	ds	1
  1266  000163                     AESCmac@n:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0x63
  1270  000163                     	ds	1
  1271  000164                     AESCmac@j:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0x64
  1275  000164                     	ds	1
  1276  000165                     AESCmac@i:
  1277                           	opt stack 0
  1278                           
  1279                           ; 1 bytes @ 0x65
  1280  000165                     	ds	1
  1281  000166                     LORAWAN_RxDone@buffer:
  1282                           	opt stack 0
  1283                           
  1284                           ; 2 bytes @ 0x66
  1285  000166                     	ds	2
  1286  000168                     LORAWAN_RxDone@bufferLength:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x68
  1290  000168                     	ds	1
  1291  000169                     LORAWAN_RxDone@fPort:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x69
  1295  000169                     	ds	1
  1296  00016A                     LORAWAN_RxDone@channelIndex:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x6A
  1300  00016A                     	ds	1
  1301  00016B                     LORAWAN_RxDone@mhdr:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x6B
  1305  00016B                     	ds	1
  1306  00016C                     LORAWAN_RxDone@extractedMic:
  1307                           	opt stack 0
  1308                           
  1309                           ; 4 bytes @ 0x6C
  1310  00016C                     	ds	4
  1311  000170                     LORAWAN_RxDone@bufferIndex:
  1312                           	opt stack 0
  1313                           
  1314                           ; 1 bytes @ 0x70
  1315  000170                     	ds	1
  1316  000171                     LORAWAN_RxDone@temp:
  1317                           	opt stack 0
  1318                           
  1319                           ; 1 bytes @ 0x71
  1320  000171                     	ds	1
  1321  000172                     LORAWAN_RxDone@packet:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x72
  1325  000172                     	ds	2
  1326  000174                     LORAWAN_RxDone@computedMic:
  1327                           	opt stack 0
  1328                           
  1329                           ; 4 bytes @ 0x74
  1330  000174                     	ds	4
  1331  000178                     LORAWAN_RxDone@joinAccept:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x78
  1335  000178                     	ds	2
  1336  00017A                     LORAWAN_RxDone@frmPayloadLength:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x7A
  1340  00017A                     	ds	1
  1341  00017B                     LORAWAN_RxDone@hdr:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0x7B
  1345  00017B                     	ds	2
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           postdec2	equ	0xFDD
  1353                           fsr2h	equ	0xFDA
  1354                           fsr2l	equ	0xFD9
  1355                           
  1356                           	psect	cstackBANK0
  1357  000060                     __pcstackBANK0:
  1358                           	opt stack 0
  1359  000060                     	ds	4
  1360  000064                     ??_UpdateMinMaxChDataRate:
  1361  000064                     ??_FindSmallestDataRate:
  1362  000064                     ??_UpdateReceiveDelays:
  1363  000064                     ??_CountfOptsLength:
  1364  000064                     ??_ADC_SelChannel:
  1365  000064                     ?_TMR1_ReadTimer:
  1366                           	opt stack 0
  1367  000064                     ?_ExecuteLinkCheck:
  1368                           	opt stack 0
  1369  000064                     ?_ExecuteDutyCycle:
  1370                           	opt stack 0
  1371  000064                     ?_ExecuteDevStatus:
  1372                           	opt stack 0
  1373  000064                     ?_GetRx1Freq:
  1374                           	opt stack 0
  1375  000064                     ?___lmul:
  1376                           	opt stack 0
  1377  000064                     ?___lldiv:
  1378                           	opt stack 0
  1379  000064                     ?___llmod:
  1380                           	opt stack 0
  1381  000064                     SwTimerCreate@retVal:
  1382                           	opt stack 0
  1383  000064                     SwTimerIsRunning@timerId:
  1384                           	opt stack 0
  1385  000064                     SwTimerStop@timerId:
  1386                           	opt stack 0
  1387  000064                     SPI2_Exchange8bit@data:
  1388                           	opt stack 0
  1389  000064                     HALResetPinOutputValue@value:
  1390                           	opt stack 0
  1391  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1392                           	opt stack 0
  1393  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1394                           	opt stack 0
  1395  000064                     RADIO_SetOutputPower@power:
  1396                           	opt stack 0
  1397  000064                     RADIO_SetCRC@crc:
  1398                           	opt stack 0
  1399  000064                     RADIO_SetIQInverted@iqInverted:
  1400                           	opt stack 0
  1401  000064                     RADIO_SetBandwidth@bandwidth:
  1402                           	opt stack 0
  1403  000064                     RADIO_SetModulation@modulation:
  1404                           	opt stack 0
  1405  000064                     ValidateDataRate@dataRate:
  1406                           	opt stack 0
  1407  000064                     ValidateTxPower@result:
  1408                           	opt stack 0
  1409  000064                     UpdateDLSettings@dlRx1DrOffset:
  1410                           	opt stack 0
  1411  000064                     UpdateDataRange@dataRangeNew:
  1412                           	opt stack 0
  1413  000064                     UpdateChannelIdStatus@statusNew:
  1414                           	opt stack 0
  1415  000064                     ValidateRxOffset@rxOffset:
  1416                           	opt stack 0
  1417  000064                     ValidateChannelId@allowedForDefaultChannels:
  1418                           	opt stack 0
  1419  000064                     ValidateChannelMaskCntl@result:
  1420                           	opt stack 0
  1421  000064                     UpdateCurrentDataRate@valueNew:
  1422                           	opt stack 0
  1423  000064                     UpdateTxPower@txPowerNew:
  1424                           	opt stack 0
  1425  000064                     UpdateJoinInProgress@state:
  1426                           	opt stack 0
  1427  000064                     INTERRUPT_GetDioStatus@a:
  1428                           	opt stack 0
  1429  000064                     EncKeySchedule@key:
  1430                           	opt stack 0
  1431  000064                     ___abdiv@divisor:
  1432                           	opt stack 0
  1433  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1434                           	opt stack 0
  1435  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1436                           	opt stack 0
  1437  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1438                           	opt stack 0
  1439  000064                     SwTimerSetCallback@callback:
  1440                           	opt stack 0
  1441  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1442                           	opt stack 0
  1443  000064                     ExecuteDutyCycle@ptr:
  1444                           	opt stack 0
  1445  000064                     ExecuteDevStatus@ptr:
  1446                           	opt stack 0
  1447  000064                     UpdateDutyCycle@dutyCycleNew:
  1448                           	opt stack 0
  1449  000064                     ValidateChannelMask@channelMask:
  1450                           	opt stack 0
  1451  000064                     TMR1_WriteTimer@timerVal:
  1452                           	opt stack 0
  1453  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1454                           	opt stack 0
  1455  000064                     TMR3_SetInterruptHandler@InterruptHandler:
  1456                           	opt stack 0
  1457  000064                     FillSubKey@source:
  1458                           	opt stack 0
  1459  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1460                           	opt stack 0
  1461  000064                     ExecuteLinkCheck@ptr:
  1462                           	opt stack 0
  1463  000064                     IncludeMacCommandsResponse@macBuffer:
  1464                           	opt stack 0
  1465  000064                     CheckFlags@hdr:
  1466                           	opt stack 0
  1467  000064                     CheckMcastFlags@hdr:
  1468                           	opt stack 0
  1469  000064                     EncodeShiftRow@stateTable:
  1470                           	opt stack 0
  1471  000064                     RxDataDone@pData:
  1472                           	opt stack 0
  1473  000064                     memcpy@d1:
  1474                           	opt stack 0
  1475  000064                     memset@p1:
  1476                           	opt stack 0
  1477  000064                     SystemBlockingWaitMs@ms:
  1478                           	opt stack 0
  1479  000064                     RADIO_SetChannelFrequency@frequency:
  1480                           	opt stack 0
  1481  000064                     ValidateFrequency@frequencyNew:
  1482                           	opt stack 0
  1483  000064                     UpdateFrequency@frequencyNew:
  1484                           	opt stack 0
  1485  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1486                           	opt stack 0
  1487  000064                     UpdateReceiveWindow2Parameters@frequency:
  1488                           	opt stack 0
  1489  000064                     ___lmul@multiplier:
  1490                           	opt stack 0
  1491  000064                     ___lldiv@dividend:
  1492                           	opt stack 0
  1493  000064                     ___llmod@dividend:
  1494                           	opt stack 0
  1495                           
  1496                           ; 4 bytes @ 0x4
  1497  000064                     	ds	1
  1498  000065                     ??_UpdateDataRange:
  1499  000065                     ??_UpdateChannelIdStatus:
  1500  000065                     ??_EncKeySchedule:
  1501  000065                     SwTimerIsRunning@isRunning:
  1502                           	opt stack 0
  1503  000065                     HALSPISend@data:
  1504                           	opt stack 0
  1505  000065                     ValidateDataRate@result:
  1506                           	opt stack 0
  1507  000065                     ValidateTxPower@txPowerNew:
  1508                           	opt stack 0
  1509  000065                     UpdateDLSettings@dlRx2Dr:
  1510                           	opt stack 0
  1511  000065                     ValidateRxOffset@result:
  1512                           	opt stack 0
  1513  000065                     ValidateChannelId@result:
  1514                           	opt stack 0
  1515  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1516                           	opt stack 0
  1517  000065                     UpdateMinMaxChDataRate@i:
  1518                           	opt stack 0
  1519  000065                     FindSmallestDataRate@found:
  1520                           	opt stack 0
  1521  000065                     ADC_SelChannel@c:
  1522                           	opt stack 0
  1523  000065                     ___abdiv@counter:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x5
  1527  000065                     	ds	1
  1528  000066                     ??_TMR1_ReadTimer:
  1529  000066                     ??_ExecuteDutyCycle:
  1530  000066                     ?_ADC_Read:
  1531                           	opt stack 0
  1532  000066                     SwTimerSetCallback@callbackParameter:
  1533                           	opt stack 0
  1534  000066                     RADIO_RegisterWrite@value:
  1535                           	opt stack 0
  1536  000066                     RADIO_RegisterRead@reg:
  1537                           	opt stack 0
  1538  000066                     UpdateDataRange@channelId:
  1539                           	opt stack 0
  1540  000066                     UpdateChannelIdStatus@channelId:
  1541                           	opt stack 0
  1542  000066                     ValidateDataRange@result:
  1543                           	opt stack 0
  1544  000066                     ValidateChannelId@channelId:
  1545                           	opt stack 0
  1546  000066                     UpdateDutyCycle@channelId:
  1547                           	opt stack 0
  1548  000066                     ValidateChannelMask@i:
  1549                           	opt stack 0
  1550  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1551                           	opt stack 0
  1552  000066                     FindSmallestDataRate@i:
  1553                           	opt stack 0
  1554  000066                     EncodeShiftRow@temp:
  1555                           	opt stack 0
  1556  000066                     RxDataDone@dataLength:
  1557                           	opt stack 0
  1558  000066                     ___abdiv@sign:
  1559                           	opt stack 0
  1560  000066                     FillSubKey@key:
  1561                           	opt stack 0
  1562  000066                     memcpy@s1:
  1563                           	opt stack 0
  1564  000066                     memset@c:
  1565                           	opt stack 0
  1566                           
  1567                           ; 2 bytes @ 0x6
  1568  000066                     	ds	1
  1569  000067                     SwTimerSetCallback@timerId:
  1570                           	opt stack 0
  1571  000067                     RADIO_RegisterWrite@reg:
  1572                           	opt stack 0
  1573  000067                     RADIO_RegisterRead@readValue:
  1574                           	opt stack 0
  1575  000067                     UpdateDataRange@i:
  1576                           	opt stack 0
  1577  000067                     UpdateChannelIdStatus@i:
  1578                           	opt stack 0
  1579  000067                     ValidateDataRange@dataRangeNew:
  1580                           	opt stack 0
  1581  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1582                           	opt stack 0
  1583  000067                     FindSmallestDataRate@dataRate:
  1584                           	opt stack 0
  1585  000067                     RxDataDone@status:
  1586                           	opt stack 0
  1587  000067                     ___abdiv@quotient:
  1588                           	opt stack 0
  1589                           
  1590                           ; 1 bytes @ 0x7
  1591  000067                     	ds	1
  1592  000068                     ??_IncludeMacCommandsResponse:
  1593  000068                     ??_ADC_Read:
  1594  000068                     ??_SystemBlockingWaitMs:
  1595  000068                     RADIO_WritePower@ocp:
  1596                           	opt stack 0
  1597  000068                     RADIO_UnhandledInterrupt@modulation:
  1598                           	opt stack 0
  1599  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1600                           	opt stack 0
  1601  000068                     ValidateFrequency@result:
  1602                           	opt stack 0
  1603  000068                     ValidateDataRange@dataRateMax:
  1604                           	opt stack 0
  1605  000068                     UpdateFrequency@channelId:
  1606                           	opt stack 0
  1607  000068                     FillSubKey@size:
  1608                           	opt stack 0
  1609  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1610                           	opt stack 0
  1611  000068                     UpdateReceiveDelays@delay:
  1612                           	opt stack 0
  1613  000068                     ___abdiv@dividend:
  1614                           	opt stack 0
  1615  000068                     EnableChannels1@channelMask:
  1616                           	opt stack 0
  1617  000068                     TMR1_ReadTimer@readVal:
  1618                           	opt stack 0
  1619  000068                     _EncKeySchedule$4148:
  1620                           	opt stack 0
  1621  000068                     memcpy@n:
  1622                           	opt stack 0
  1623  000068                     memset@n:
  1624                           	opt stack 0
  1625  000068                     ___lmul@multiplicand:
  1626                           	opt stack 0
  1627  000068                     ___lldiv@divisor:
  1628                           	opt stack 0
  1629  000068                     ___llmod@divisor:
  1630                           	opt stack 0
  1631                           
  1632                           ; 4 bytes @ 0x8
  1633  000068                     	ds	1
  1634  000069                     ??_FillSubKey:
  1635  000069                     ??_RADIO_DIO3:
  1636  000069                     ??_RADIO_DIO4:
  1637  000069                     ??_RADIO_DIO5:
  1638  000069                     ?_ExecuteRxTimingSetup:
  1639                           	opt stack 0
  1640  000069                     RADIO_WriteMode@newModulation:
  1641                           	opt stack 0
  1642  000069                     RADIO_WritePower@paDac:
  1643                           	opt stack 0
  1644  000069                     ExecuteDutyCycle@maxDCycle:
  1645                           	opt stack 0
  1646  000069                     ValidateDataRange@dataRateMin:
  1647                           	opt stack 0
  1648  000069                     ExecuteRxTimingSetup@ptr:
  1649                           	opt stack 0
  1650                           
  1651                           ; 2 bytes @ 0x9
  1652  000069                     	ds	1
  1653  00006A                     RADIO_WriteMode@blocking:
  1654                           	opt stack 0
  1655  00006A                     RADIO_WritePower@power:
  1656                           	opt stack 0
  1657  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1658                           	opt stack 0
  1659  00006A                     EnableChannels1@channelMaskCntl:
  1660                           	opt stack 0
  1661  00006A                     TMR1_ReadTimer@readValHigh:
  1662                           	opt stack 0
  1663  00006A                     FillSubKey@carry:
  1664                           	opt stack 0
  1665  00006A                     CountfOptsLength@macCommandLength:
  1666                           	opt stack 0
  1667  00006A                     ADC_Read@channel:
  1668                           	opt stack 0
  1669  00006A                     AESEncode@block:
  1670                           	opt stack 0
  1671  00006A                     memcpy@d:
  1672                           	opt stack 0
  1673  00006A                     memset@p:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0xA
  1677  00006A                     	ds	1
  1678  00006B                     RADIO_WriteMode@currentModulation:
  1679                           	opt stack 0
  1680  00006B                     EnableChannels1@channelIndexMin:
  1681                           	opt stack 0
  1682  00006B                     TMR1_ReadTimer@readValLow:
  1683                           	opt stack 0
  1684  00006B                     FillSubKey@i:
  1685                           	opt stack 0
  1686  00006B                     ExecuteRxTimingSetup@delay:
  1687                           	opt stack 0
  1688  00006B                     CountfOptsLength@i:
  1689                           	opt stack 0
  1690  00006B                     ADC_Read@result:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0xB
  1694  00006B                     	ds	1
  1695  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1696  00006C                     ?_TMR_SwapTimer:
  1697                           	opt stack 0
  1698  00006C                     ?_TMR_GetDeltaTime:
  1699                           	opt stack 0
  1700  00006C                     RADIO_WriteMode@dioMapping:
  1701                           	opt stack 0
  1702  00006C                     EnableChannels1@channelIndexMax:
  1703                           	opt stack 0
  1704  00006C                     AESEncode@key:
  1705                           	opt stack 0
  1706  00006C                     ___llmod@counter:
  1707                           	opt stack 0
  1708  00006C                     TMR_SwapTimer@timerVal:
  1709                           	opt stack 0
  1710  00006C                     memcpy@s:
  1711                           	opt stack 0
  1712  00006C                     ___lmul@product:
  1713                           	opt stack 0
  1714  00006C                     ___lldiv@quotient:
  1715                           	opt stack 0
  1716                           
  1717                           ; 4 bytes @ 0xC
  1718  00006C                     	ds	1
  1719  00006D                     ??_AESEncode:
  1720  00006D                     RADIO_WriteMode@currentMode:
  1721                           	opt stack 0
  1722  00006D                     EnableChannels1@i:
  1723                           	opt stack 0
  1724  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0xD
  1728  00006D                     	ds	1
  1729  00006E                     ?_ExtractMic:
  1730                           	opt stack 0
  1731  00006E                     RADIO_WriteMode@newMode:
  1732                           	opt stack 0
  1733  00006E                     InitDefault868Channels@i:
  1734                           	opt stack 0
  1735  00006E                     InitDefault433Channels@i:
  1736                           	opt stack 0
  1737  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1738                           	opt stack 0
  1739  00006E                     IncludeMacCommandsResponse@i:
  1740                           	opt stack 0
  1741  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1742                           	opt stack 0
  1743  00006E                     EnableChannels@channelMask:
  1744                           	opt stack 0
  1745  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1746                           	opt stack 0
  1747  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1748                           	opt stack 0
  1749  00006E                     PrepareSessionKeys@sessionKey:
  1750                           	opt stack 0
  1751  00006E                     ExtractMic@buffer:
  1752                           	opt stack 0
  1753  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1754                           	opt stack 0
  1755  00006E                     AssembleEncryptionBlock@frameCounter:
  1756                           	opt stack 0
  1757                           
  1758                           ; 4 bytes @ 0xE
  1759  00006E                     	ds	1
  1760  00006F                     RADIO_WriteMode@opMode:
  1761                           	opt stack 0
  1762  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1763                           	opt stack 0
  1764                           
  1765                           ; 1 bytes @ 0xF
  1766  00006F                     	ds	1
  1767  000070                     ??_TMR_GetDeltaTime:
  1768  000070                     ?_rand:
  1769                           	opt stack 0
  1770  000070                     ?_RADIO_ReadRandom:
  1771                           	opt stack 0
  1772  000070                     ?_ExecuteNewChannel:
  1773                           	opt stack 0
  1774  000070                     ?_ExecuteRxParamSetupReq:
  1775                           	opt stack 0
  1776  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1777                           	opt stack 0
  1778  000070                     EnableChannels@channelMaskCntl:
  1779                           	opt stack 0
  1780  000070                     ExtractMic@bufferLength:
  1781                           	opt stack 0
  1782  000070                     ___lldiv@counter:
  1783                           	opt stack 0
  1784  000070                     ExecuteNewChannel@ptr:
  1785                           	opt stack 0
  1786  000070                     ExecuteRxParamSetupReq@ptr:
  1787                           	opt stack 0
  1788  000070                     UpdateCfList@joinAccept:
  1789                           	opt stack 0
  1790  000070                     PrepareSessionKeys@appNonce:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x10
  1794  000070                     	ds	1
  1795  000071                     ?_ExecuteLinkAdr:
  1796                           	opt stack 0
  1797  000071                     ExecuteLinkAdr@ptr:
  1798                           	opt stack 0
  1799  000071                     SwTimerSetTimeout@timeout:
  1800                           	opt stack 0
  1801  000071                     RADIO_WriteFrequency@frequency:
  1802                           	opt stack 0
  1803  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1804                           	opt stack 0
  1805  000071                     RADIO_WriteFSKBitRate@bitRate:
  1806                           	opt stack 0
  1807  000071                     ConfigureRadio@freq:
  1808                           	opt stack 0
  1809                           
  1810                           ; 4 bytes @ 0x11
  1811  000071                     	ds	1
  1812  000072                     ??_ExtractMic:
  1813  000072                     ??_TMR_OverrideRemaining:
  1814  000072                     ??_UpdateCfList:
  1815  000072                     ?___lwmod:
  1816                           	opt stack 0
  1817  000072                     ExecuteNewChannel@drRange:
  1818                           	opt stack 0
  1819  000072                     AssembleEncryptionBlock@blockId:
  1820                           	opt stack 0
  1821  000072                     RADIO_ReadRandom@retVal:
  1822                           	opt stack 0
  1823  000072                     PrepareSessionKeys@networkId:
  1824                           	opt stack 0
  1825  000072                     ___lwmod@dividend:
  1826                           	opt stack 0
  1827  000072                     ExecuteRxParamSetupReq@frequency:
  1828                           	opt stack 0
  1829                           
  1830                           ; 4 bytes @ 0x12
  1831  000072                     	ds	1
  1832  000073                     ??_ExecuteLinkAdr:
  1833  000073                     AssembleEncryptionBlock@firstByte:
  1834                           	opt stack 0
  1835  000073                     ExecuteNewChannel@frequency:
  1836                           	opt stack 0
  1837                           
  1838                           ; 4 bytes @ 0x13
  1839  000073                     	ds	1
  1840  000074                     RADIO_ReadRandom@i:
  1841                           	opt stack 0
  1842  000074                     UpdateCfList@bufferLength:
  1843                           	opt stack 0
  1844  000074                     PrepareSessionKeys@index:
  1845                           	opt stack 0
  1846  000074                     AssembleEncryptionBlock@multicastStatus:
  1847                           	opt stack 0
  1848  000074                     TMR_OverrideRemaining@tmrVal:
  1849                           	opt stack 0
  1850  000074                     ExecuteLinkAdr@channelMask:
  1851                           	opt stack 0
  1852  000074                     ___lwmod@divisor:
  1853                           	opt stack 0
  1854  000074                     ExtractMic@mic:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x14
  1858  000074                     	ds	1
  1859  000075                     ??_SwTimerSetTimeout:
  1860  000075                     ConfigureRadio@dataRate:
  1861                           	opt stack 0
  1862  000075                     AssembleEncryptionBlock@dir:
  1863                           	opt stack 0
  1864  000075                     _AESEncode$4143:
  1865                           	opt stack 0
  1866  000075                     srand@x:
  1867                           	opt stack 0
  1868  000075                     RADIO_WriteFrequency@num_mod:
  1869                           	opt stack 0
  1870  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1871                           	opt stack 0
  1872  000075                     RADIO_WriteFSKBitRate@num:
  1873                           	opt stack 0
  1874  000075                     UpdateCfList@frequency:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x15
  1878  000075                     	ds	1
  1879  000076                     ExecuteLinkAdr@txPower:
  1880                           	opt stack 0
  1881  000076                     ExecuteRxParamSetupReq@dlSettings:
  1882                           	opt stack 0
  1883  000076                     AssembleEncryptionBlock@bufferIndex:
  1884                           	opt stack 0
  1885  000076                     ___lwmod@counter:
  1886                           	opt stack 0
  1887  000076                     TMR_OverrideRemaining@oldReloadVal:
  1888                           	opt stack 0
  1889  000076                     ConfigureRadioTx@freq:
  1890                           	opt stack 0
  1891  000076                     ConfigureRadioRx@freq:
  1892                           	opt stack 0
  1893                           
  1894                           ; 4 bytes @ 0x16
  1895  000076                     	ds	1
  1896  000077                     ?_Random:
  1897                           	opt stack 0
  1898  000077                     ExecuteNewChannel@channelIndex:
  1899                           	opt stack 0
  1900  000077                     ExecuteLinkAdr@redundancy:
  1901                           	opt stack 0
  1902  000077                     Random@max:
  1903                           	opt stack 0
  1904  000077                     _AESEncode$4144:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x17
  1908  000077                     	ds	2
  1909  000079                     SwTimerSetTimeout@timerId:
  1910                           	opt stack 0
  1911  000079                     ExecuteLinkAdr@dataRate:
  1912                           	opt stack 0
  1913  000079                     SearchAvailableChannel@transmissionType:
  1914                           	opt stack 0
  1915  000079                     UpdateCfList@channelIndex:
  1916                           	opt stack 0
  1917  000079                     _AESEncode$4145:
  1918                           	opt stack 0
  1919  000079                     RADIO_WriteFrequency@num:
  1920                           	opt stack 0
  1921                           
  1922                           ; 4 bytes @ 0x19
  1923  000079                     	ds	1
  1924  00007A                     ?_MacExecuteCommands:
  1925                           	opt stack 0
  1926  00007A                     UpdateCfList@i:
  1927                           	opt stack 0
  1928  00007A                     ConfigureRadioTx@dataRate:
  1929                           	opt stack 0
  1930  00007A                     ConfigureRadioRx@dataRate:
  1931                           	opt stack 0
  1932  00007A                     SearchAvailableChannel@channelIndex:
  1933                           	opt stack 0
  1934  00007A                     MacExecuteCommands@buffer:
  1935                           	opt stack 0
  1936                           
  1937                           ; 2 bytes @ 0x1A
  1938  00007A                     	ds	1
  1939  00007B                     ConfigureRadioTx@txPower:
  1940                           	opt stack 0
  1941  00007B                     AESEncode@aux:
  1942                           	opt stack 0
  1943                           
  1944                           ; 1 bytes @ 0x1B
  1945  00007B                     	ds	1
  1946  00007C                     ??_SearchAvailableChannel:
  1947  00007C                     ?_SwTimersInterrupt:
  1948                           	opt stack 0
  1949  00007C                     MacExecuteCommands@fOptsLen:
  1950                           	opt stack 0
  1951  00007C                     AESEncode@aux2:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x1C
  1955  00007C                     	ds	1
  1956  00007D                     ??_MacExecuteCommands:
  1957  00007D                     ??_RADIO_DIO2:
  1958  00007D                     AESEncode@aux1:
  1959                           	opt stack 0
  1960  00007D                     RADIO_Init@radioBuffer:
  1961                           	opt stack 0
  1962  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0x1D
  1966  00007D                     	ds	1
  1967  00007E                     RADIO_DIO2@dioMapping:
  1968                           	opt stack 0
  1969  00007E                     AESEncode@aux3:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0x1E
  1973  00007E                     	ds	1
  1974  00007F                     ??_RADIO_WriteConfiguration:
  1975  00007F                     MacExecuteCommands@done:
  1976                           	opt stack 0
  1977  00007F                     AESEncode@i:
  1978                           	opt stack 0
  1979  00007F                     RADIO_Init@frequency:
  1980                           	opt stack 0
  1981                           
  1982                           ; 4 bytes @ 0x1F
  1983  00007F                     	ds	1
  1984  000080                     SearchAvailableChannel@randomNumberCopy:
  1985                           	opt stack 0
  1986  000080                     MacExecuteCommands@ptr:
  1987                           	opt stack 0
  1988  000080                     AESEncodeLoRa@block:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x20
  1992  000080                     	ds	1
  1993  000081                     RADIO_WriteConfiguration@i:
  1994                           	opt stack 0
  1995  000081                     SearchAvailableChannel@result:
  1996                           	opt stack 0
  1997                           
  1998                           ; 1 bytes @ 0x21
  1999  000081                     	ds	1
  2000  000082                     SearchAvailableChannel@maxChannels:
  2001                           	opt stack 0
  2002  000082                     AESEncodeLoRa@key:
  2003                           	opt stack 0
  2004  000082                     RADIO_WriteConfiguration@tempValue:
  2005                           	opt stack 0
  2006                           
  2007                           ; 4 bytes @ 0x22
  2008  000082                     	ds	1
  2009  000083                     ??_RADIO_Init:
  2010  000083                     SearchAvailableChannel@randomNumber:
  2011                           	opt stack 0
  2012                           
  2013                           ; 1 bytes @ 0x23
  2014  000083                     	ds	1
  2015  000084                     SearchAvailableChannel@i:
  2016                           	opt stack 0
  2017  000084                     SwTimersInterrupt@timeElapsed:
  2018                           	opt stack 0
  2019  000084                     AESEncodeLoRa@useKey:
  2020                           	opt stack 0
  2021                           
  2022                           ; 16 bytes @ 0x24
  2023  000084                     	ds	1
  2024  000085                     SelectChannelForTransmission@transmissionType:
  2025                           	opt stack 0
  2026                           
  2027                           ; 1 bytes @ 0x25
  2028  000085                     	ds	1
  2029  000086                     RADIO_WriteConfiguration@regValue:
  2030                           	opt stack 0
  2031  000086                     SelectChannelForTransmission@result:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x26
  2035  000086                     	ds	1
  2036  000087                     SelectChannelForTransmission@channelIndex:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x27
  2040  000087                     	ds	1
  2041  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2042                           	opt stack 0
  2043                           
  2044                           ; 4 bytes @ 0x28
  2045  000088                     	ds	4
  2046  00008C                     SwTimersInterrupt@i:
  2047                           	opt stack 0
  2048                           
  2049                           ; 1 bytes @ 0x2C
  2050  00008C                     	ds	1
  2051  00008D                     ?_SwTimerReadValue:
  2052                           	opt stack 0
  2053                           
  2054                           ; 4 bytes @ 0x2D
  2055  00008D                     	ds	4
  2056  000091                     SwTimerReadValue@ticksCount:
  2057                           	opt stack 0
  2058  000091                     SwTimerStart@ticksRemaining:
  2059                           	opt stack 0
  2060                           
  2061                           ; 4 bytes @ 0x31
  2062  000091                     	ds	3
  2063  000094                     GenerateSubkey@key:
  2064                           	opt stack 0
  2065  000094                     ComputeSessionKeys@joinAcceptBuffer:
  2066                           	opt stack 0
  2067  000094                     EncryptFRMPayload@buffer:
  2068                           	opt stack 0
  2069                           
  2070                           ; 2 bytes @ 0x34
  2071  000094                     	ds	1
  2072  000095                     SwTimerReadValue@timerId:
  2073                           	opt stack 0
  2074  000095                     SwTimerStart@timerId:
  2075                           	opt stack 0
  2076                           
  2077                           ; 1 bytes @ 0x35
  2078  000095                     	ds	1
  2079  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2080  000096                     ??_StartReTxTimer:
  2081  000096                     ?_RADIO_Transmit:
  2082                           	opt stack 0
  2083  000096                     ?_RADIO_ReceiveStart:
  2084                           	opt stack 0
  2085  000096                     EncryptFRMPayload@bufferLength:
  2086                           	opt stack 0
  2087  000096                     RADIO_Transmit@buffer:
  2088                           	opt stack 0
  2089  000096                     RADIO_ReceiveStart@rxWindowSize:
  2090                           	opt stack 0
  2091  000096                     GenerateSubkey@k1:
  2092                           	opt stack 0
  2093  000096                     LORAWAN_LinkCheckConfigure@period:
  2094                           	opt stack 0
  2095                           
  2096                           ; 2 bytes @ 0x36
  2097  000096                     	ds	1
  2098  000097                     EncryptFRMPayload@dir:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x37
  2102  000097                     	ds	1
  2103  000098                     ??_LORAWAN_LinkCheckConfigure:
  2104  000098                     ??_RADIO_ReceiveStart:
  2105  000098                     RADIO_Transmit@bufferLen:
  2106                           	opt stack 0
  2107  000098                     GenerateSubkey@k2:
  2108                           	opt stack 0
  2109  000098                     EncryptFRMPayload@frameCounter:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x38
  2113  000098                     	ds	1
  2114  000099                     ??_RADIO_Transmit:
  2115                           
  2116                           ; 1 bytes @ 0x39
  2117  000099                     	ds	1
  2118  00009A                     ??_GenerateSubkey:
  2119  00009A                     StartReTxTimer@minim:
  2120                           	opt stack 0
  2121                           
  2122                           ; 4 bytes @ 0x3A
  2123  00009A                     	ds	1
  2124  00009B                     GenerateSubkey@const_Rb:
  2125                           	opt stack 0
  2126                           
  2127                           ; 16 bytes @ 0x3B
  2128  00009B                     	ds	1
  2129  00009C                     EncryptFRMPayload@key:
  2130                           	opt stack 0
  2131  00009C                     _RADIO_ReceiveStart$1199:
  2132                           	opt stack 0
  2133                           
  2134                           ; 4 bytes @ 0x3C
  2135  00009C                     	ds	2
  2136  00009E                     StartReTxTimer@i:
  2137                           	opt stack 0
  2138  00009E                     EncryptFRMPayload@macBufferIndex:
  2139                           	opt stack 0
  2140                           
  2141                           ; 1 bytes @ 0x3E
  2142  00009E                     	ds	1
  2143  00009F                     EncryptFRMPayload@bufferToBeEncrypted:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x3F
  2147  00009F                     	ds	1
  2148  0000A0                     LORAWAN_TxDone@timeOnAir:
  2149                           	opt stack 0
  2150  0000A0                     _LORAWAN_LinkCheckConfigure$3502:
  2151                           	opt stack 0
  2152                           
  2153                           ; 4 bytes @ 0x40
  2154  0000A0                     	ds	1
  2155  0000A1                     EncryptFRMPayload@multicastStatus:
  2156                           	opt stack 0
  2157  0000A1                     _RADIO_Transmit$1196:
  2158                           	opt stack 0
  2159                           
  2160                           ; 4 bytes @ 0x41
  2161  0000A1                     	ds	1
  2162  0000A2                     ??_LORAWAN_TxDone:
  2163  0000A2                     ??_EncryptFRMPayload:
  2164                           
  2165                           ; 1 bytes @ 0x42
  2166  0000A2                     	ds	2
  2167  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2168                           	opt stack 0
  2169                           
  2170                           ; 1 bytes @ 0x44
  2171  0000A4                     	ds	1
  2172  0000A5                     RADIO_Transmit@regValue:
  2173                           	opt stack 0
  2174  0000A5                     LORAWAN_Reset@ismBandNew:
  2175                           	opt stack 0
  2176                           
  2177                           ; 1 bytes @ 0x45
  2178  0000A5                     	ds	1
  2179  0000A6                     RADIO_Transmit@i:
  2180                           	opt stack 0
  2181  0000A6                     LORAWAN_Init@RxPayload:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x46
  2185  0000A6                     	ds	1
  2186  0000A7                     ??_LORAWAN_RxTimeout:
  2187  0000A7                     EncryptFRMPayload@k:
  2188                           	opt stack 0
  2189                           
  2190                           ; 1 bytes @ 0x47
  2191  0000A7                     	ds	1
  2192  0000A8                     EncryptFRMPayload@i:
  2193                           	opt stack 0
  2194  0000A8                     LORAWAN_Init@RxJoinResponse:
  2195                           	opt stack 0
  2196                           
  2197                           ; 2 bytes @ 0x48
  2198  0000A8                     	ds	1
  2199  0000A9                     EncryptFRMPayload@j:
  2200                           	opt stack 0
  2201                           
  2202                           ; 1 bytes @ 0x49
  2203  0000A9                     	ds	1
  2204  0000AA                     
  2205                           ; 1 bytes @ 0x4A
  2206  0000AA                     	ds	1
  2207  0000AB                     LORAWAN_RxTimeout@minim:
  2208                           	opt stack 0
  2209  0000AB                     GenerateSubkey@l:
  2210                           	opt stack 0
  2211                           
  2212                           ; 16 bytes @ 0x4B
  2213  0000AB                     	ds	4
  2214  0000AF                     LORAWAN_RxTimeout@i:
  2215                           	opt stack 0
  2216                           
  2217                           ; 1 bytes @ 0x4F
  2218  0000AF                     	ds	1
  2219  0000B0                     ??_RADIO_DIO1:
  2220                           
  2221                           ; 1 bytes @ 0x50
  2222  0000B0                     	ds	1
  2223  0000B1                     RADIO_DIO1@dioMapping:
  2224                           	opt stack 0
  2225                           
  2226                           ; 1 bytes @ 0x51
  2227  0000B1                     	ds	10
  2228  0000BB                     GenerateSubkey@i:
  2229                           	opt stack 0
  2230                           
  2231                           ; 1 bytes @ 0x5B
  2232  0000BB                     	ds	1
  2233  0000BC                     AESCmac@key:
  2234                           	opt stack 0
  2235  0000BC                     _LORAWAN_TxDone$2092:
  2236                           	opt stack 0
  2237                           
  2238                           ; 4 bytes @ 0x5C
  2239  0000BC                     	ds	2
  2240  0000BE                     AESCmac@output:
  2241                           	opt stack 0
  2242                           
  2243                           ; 2 bytes @ 0x5E
  2244  0000BE                     	ds	2
  2245  0000C0                     AESCmac@input:
  2246                           	opt stack 0
  2247  0000C0                     _LORAWAN_TxDone$2093:
  2248                           	opt stack 0
  2249                           
  2250                           ; 4 bytes @ 0x60
  2251  0000C0                     	ds	2
  2252  0000C2                     AESCmac@size:
  2253                           	opt stack 0
  2254                           
  2255                           ; 1 bytes @ 0x62
  2256  0000C2                     	ds	1
  2257  0000C3                     ??_AESCmac:
  2258                           
  2259                           ; 1 bytes @ 0x63
  2260  0000C3                     	ds	1
  2261  0000C4                     LORAWAN_TxDone@found:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x64
  2265  0000C4                     	ds	1
  2266  0000C5                     LORAWAN_TxDone@delta:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x65
  2270  0000C5                     	ds	4
  2271  0000C9                     LORAWAN_TxDone@ticks:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x69
  2275  0000C9                     	ds	1
  2276  0000CA                     ?_ComputeMic:
  2277                           	opt stack 0
  2278  0000CA                     AssemblePacket@port:
  2279                           	opt stack 0
  2280  0000CA                     ComputeMic@key:
  2281                           	opt stack 0
  2282                           
  2283                           ; 2 bytes @ 0x6A
  2284  0000CA                     	ds	1
  2285  0000CB                     AssemblePacket@buffer:
  2286                           	opt stack 0
  2287                           
  2288                           ; 2 bytes @ 0x6B
  2289  0000CB                     	ds	1
  2290  0000CC                     ComputeMic@buffer:
  2291                           	opt stack 0
  2292                           
  2293                           ; 2 bytes @ 0x6C
  2294  0000CC                     	ds	1
  2295  0000CD                     AssemblePacket@bufferLength:
  2296                           	opt stack 0
  2297  0000CD                     LORAWAN_TxDone@minim:
  2298                           	opt stack 0
  2299                           
  2300                           ; 4 bytes @ 0x6D
  2301  0000CD                     	ds	1
  2302  0000CE                     ComputeMic@bufferLength:
  2303                           	opt stack 0
  2304                           
  2305                           ; 1 bytes @ 0x6E
  2306  0000CE                     	ds	1
  2307  0000CF                     ??_AssemblePacket:
  2308  0000CF                     ComputeMic@mic:
  2309                           	opt stack 0
  2310                           
  2311                           ; 4 bytes @ 0x6F
  2312  0000CF                     	ds	2
  2313  0000D1                     LORAWAN_TxDone@i:
  2314                           	opt stack 0
  2315  0000D1                     AssemblePacket@confirmed:
  2316                           	opt stack 0
  2317                           
  2318                           ; 1 bytes @ 0x71
  2319  0000D1                     	ds	1
  2320  0000D2                     ??_RADIO_TxDone:
  2321  0000D2                     ??_RADIO_FSKPacketSent:
  2322  0000D2                     AssemblePacket@mhdr:
  2323                           	opt stack 0
  2324                           
  2325                           ; 1 bytes @ 0x72
  2326  0000D2                     	ds	1
  2327  0000D3                     ??_PrepareJoinRequestFrame:
  2328  0000D3                     AssemblePacket@fCtrl:
  2329                           	opt stack 0
  2330                           
  2331                           ; 1 bytes @ 0x73
  2332  0000D3                     	ds	1
  2333  0000D4                     AssemblePacket@macCmdIdx:
  2334                           	opt stack 0
  2335                           
  2336                           ; 1 bytes @ 0x74
  2337  0000D4                     	ds	1
  2338  0000D5                     AssemblePacket@bufferIndex:
  2339                           	opt stack 0
  2340  0000D5                     PrepareJoinRequestFrame@mic:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x75
  2344  0000D5                     	ds	1
  2345  0000D6                     LORAWAN_Send@port:
  2346                           	opt stack 0
  2347  0000D6                     RADIO_TxDone@timeOnAir:
  2348                           	opt stack 0
  2349  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2350                           	opt stack 0
  2351                           
  2352                           ; 4 bytes @ 0x76
  2353  0000D6                     	ds	1
  2354  0000D7                     LORAWAN_Send@buffer:
  2355                           	opt stack 0
  2356                           
  2357                           ; 2 bytes @ 0x77
  2358  0000D7                     	ds	2
  2359  0000D9                     LORAWAN_Send@bufferLength:
  2360                           	opt stack 0
  2361  0000D9                     PrepareJoinRequestFrame@mhdr:
  2362                           	opt stack 0
  2363                           
  2364                           ; 1 bytes @ 0x79
  2365  0000D9                     	ds	1
  2366  0000DA                     ??_LORAWAN_Send:
  2367  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2368                           	opt stack 0
  2369  0000DA                     _RADIO_TxDone$1211:
  2370                           	opt stack 0
  2371  0000DA                     _RADIO_FSKPacketSent$1215:
  2372                           	opt stack 0
  2373                           
  2374                           ; 4 bytes @ 0x7A
  2375  0000DA                     	ds	1
  2376  0000DB                     LORAWAN_Send@result:
  2377                           	opt stack 0
  2378  0000DB                     PrepareJoinRequestFrame@iCtr:
  2379                           	opt stack 0
  2380                           
  2381                           ; 1 bytes @ 0x7B
  2382  0000DB                     	ds	1
  2383  0000DC                     LORAWAN_Join@bufferIndex:
  2384                           	opt stack 0
  2385  0000DC                     LORAWAN_Send@confirmed:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0x7C
  2389  0000DC                     	ds	1
  2390  0000DD                     ??_LORAWAN_RxDone:
  2391  0000DD                     ??_readAndSend:
  2392  0000DD                     ??_SwTimersExecute:
  2393  0000DD                     LORAWAN_Join@result:
  2394                           	opt stack 0
  2395                           
  2396                           ; 1 bytes @ 0x7D
  2397  0000DD                     	ds	1
  2398  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2399                           	opt stack 0
  2400  0000DE                     LORAWAN_Join@activationTypeNew:
  2401                           	opt stack 0
  2402  0000DE                     readAndSend@j:
  2403                           	opt stack 0
  2404                           
  2405                           ; 2 bytes @ 0x7E
  2406  0000DE                     	ds	3
  2407  0000E1                     SwTimersExecute@i:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x81
  2411  0000E1                     	ds	1
  2412  0000E2                     RADIO_RxDone@irqFlags:
  2413                           	opt stack 0
  2414  0000E2                     RADIO_FSKPayloadReady@irqFlags:
  2415                           	opt stack 0
  2416                           
  2417                           ; 1 bytes @ 0x82
  2418  0000E2                     	ds	1
  2419  0000E3                     RADIO_RxDone@i:
  2420                           	opt stack 0
  2421  0000E3                     RADIO_FSKPayloadReady@i:
  2422                           	opt stack 0
  2423                           
  2424                           ; 1 bytes @ 0x83
  2425  0000E3                     	ds	1
  2426  0000E4                     ??_RADIO_DIO0:
  2427                           
  2428                           ; 1 bytes @ 0x84
  2429  0000E4                     	ds	2
  2430  0000E6                     RADIO_DIO0@dioMapping:
  2431                           	opt stack 0
  2432                           
  2433                           ; 1 bytes @ 0x86
  2434  0000E6                     	ds	1
  2435  0000E7                     RADIO_DIO0@opMode:
  2436                           	opt stack 0
  2437                           
  2438                           ; 1 bytes @ 0x87
  2439  0000E7                     	ds	1
  2440  0000E8                     tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec2	equ	0xFDD
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           
  2450                           ; 1 bytes @ 0x88
  2451                           
  2452                           	psect	cstackCOMRAM
  2453  000001                     __pcstackCOMRAM:
  2454                           	opt stack 0
  2455  000001                     ?i2_TMR1_ReadTimer:
  2456                           	opt stack 0
  2457  000001                     i2TMR1_WriteTimer@timerVal:
  2458                           	opt stack 0
  2459                           
  2460                           ; 2 bytes @ 0x0
  2461  000001                     	ds	2
  2462  000003                     ??i2_TMR1_ReadTimer:
  2463  000003                     
  2464                           ; 1 bytes @ 0x2
  2465  000003                     	ds	2
  2466  000005                     i2TMR1_ReadTimer@readVal:
  2467                           	opt stack 0
  2468                           
  2469                           ; 2 bytes @ 0x4
  2470  000005                     	ds	2
  2471  000007                     i2TMR1_ReadTimer@readValHigh:
  2472                           	opt stack 0
  2473                           
  2474                           ; 1 bytes @ 0x6
  2475  000007                     	ds	1
  2476  000008                     i2TMR1_ReadTimer@readValLow:
  2477                           	opt stack 0
  2478                           
  2479                           ; 1 bytes @ 0x7
  2480  000008                     	ds	1
  2481  000009                     ?i2_TMR_SwapTimer:
  2482                           	opt stack 0
  2483  000009                     ?i2_TMR_GetDeltaTime:
  2484                           	opt stack 0
  2485  000009                     i2TMR_SwapTimer@timerVal:
  2486                           	opt stack 0
  2487                           
  2488                           ; 2 bytes @ 0x8
  2489  000009                     	ds	2
  2490  00000B                     
  2491                           ; 1 bytes @ 0xA
  2492  00000B                     	ds	2
  2493  00000D                     ??i2_TMR_GetDeltaTime:
  2494                           
  2495                           ; 1 bytes @ 0xC
  2496  00000D                     	ds	12
  2497  000019                     ?i2_SwTimersInterrupt:
  2498                           	opt stack 0
  2499                           
  2500                           ; 4 bytes @ 0x18
  2501  000019                     	ds	4
  2502  00001D                     
  2503                           ; 1 bytes @ 0x1C
  2504  00001D                     	ds	4
  2505  000021                     i2SwTimersInterrupt@timeElapsed:
  2506                           	opt stack 0
  2507                           
  2508                           ; 4 bytes @ 0x20
  2509  000021                     	ds	4
  2510  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2511                           	opt stack 0
  2512                           
  2513                           ; 4 bytes @ 0x24
  2514  000025                     	ds	4
  2515  000029                     i2SwTimersInterrupt@i:
  2516                           	opt stack 0
  2517                           
  2518                           ; 1 bytes @ 0x28
  2519  000029                     	ds	1
  2520  00002A                     ??_INTERRUPT_InterruptManager:
  2521                           
  2522                           ; 1 bytes @ 0x29
  2523  00002A                     	ds	8
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           
  2534 ;;
  2535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2536 ;;
  2537 ;; *************** function _main *****************
  2538 ;; Defined at:
  2539 ;;		line 45 in file "main.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels required when called:   19
  2559 ;; This function calls:
  2560 ;;		_ADC_Init
  2561 ;;		_IO_pins_init
  2562 ;;		_LORAWAN_GetState
  2563 ;;		_LORAWAN_Init
  2564 ;;		_LORAWAN_Join
  2565 ;;		_LORAWAN_Mainloop
  2566 ;;		_LORAWAN_SetApplicationSessionKey
  2567 ;;		_LORAWAN_SetDeviceAddress
  2568 ;;		_LORAWAN_SetNetworkSessionKey
  2569 ;;		_LoRaSleep
  2570 ;;		_LoRaWakeUp
  2571 ;;		_SYSTEM_Initialize
  2572 ;;		_SysConfigSleep
  2573 ;;		_TMR3_SetInterruptHandler
  2574 ;;		_readAndSend
  2575 ;; This function is called by:
  2576 ;;		Startup code after reset
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text0
  2581  005ADC                     __ptext0:
  2582                           	opt stack 0
  2583  005ADC                     _main:
  2584                           	opt stack 12
  2585                           
  2586                           ;main.c: 48: SYSTEM_Initialize();
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;incstack = 0
  2590  005ADC  ECBD  F039         	call	_SYSTEM_Initialize	;wreg free
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;main.c: 51: PORTCbits.RC5 = 1;
  2594  005AE0  8A82               	bsf	3970,5,c	;volatile
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;main.c: 53: (INTCONbits.GIE = 1);
  2598  005AE2  8EF2               	bsf	intcon,7,c	;volatile
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;main.c: 54: (INTCONbits.PEIE = 1);
  2602  005AE4  8CF2               	bsf	intcon,6,c	;volatile
  2603                           
  2604                           ;main.c: 55: TMR3_SetInterruptHandler(handle16sInterrupt);
  2605  005AE6  0EB8               	movlw	low _handle16sInterrupt
  2606  005AE8  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2607  005AEA  0E76               	movlw	high _handle16sInterrupt
  2608  005AEC  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2609  005AEE  ECD5  F03B         	call	_TMR3_SetInterruptHandler	;wreg free
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;main.c: 56: SysConfigSleep();
  2613  005AF2  EC7F  F030         	call	_SysConfigSleep	;wreg free
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;main.c: 57: ADC_Init();
  2617  005AF6  EC9C  F03B         	call	_ADC_Init	;wreg free
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;main.c: 58: IO_pins_init();
  2621  005AFA  EC6F  F03B         	call	_IO_pins_init	;wreg free
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;main.c: 60: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2625  005AFE  0ED0               	movlw	low _RxDataDone
  2626  005B00  0100               	movlb	0	; () banked
  2627  005B02  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2628  005B04  0E78               	movlw	high _RxDataDone
  2629  005B06  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2630  005B08  0EB6               	movlw	low _RxJoinResponse
  2631  005B0A  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2632  005B0C  0E78               	movlw	high _RxJoinResponse
  2633  005B0E  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2634  005B10  EC76  F033         	call	_LORAWAN_Init	;wreg free
  2635                           
  2636                           ;main.c: 61: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2637  005B14  0EE8               	movlw	low _nwkSKey
  2638  005B16  0100               	movlb	0	; () banked
  2639  005B18  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2640  005B1A  0E01               	movlw	high _nwkSKey
  2641  005B1C  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2642  005B1E  EC9D  F038         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2643                           
  2644                           ;main.c: 62: LORAWAN_SetApplicationSessionKey(appSKey);
  2645  005B22  0ED8               	movlw	low _appSKey
  2646  005B24  0100               	movlb	0	; () banked
  2647  005B26  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2648  005B28  0E01               	movlw	high _appSKey
  2649  005B2A  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2650  005B2C  ECB2  F038         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2651                           
  2652                           ;main.c: 63: LORAWAN_SetDeviceAddress(devAddr);
  2653  005B30  0E78               	movlw	120
  2654  005B32  0100               	movlb	0	; () banked
  2655  005B34  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2656  005B36  0E56               	movlw	86
  2657  005B38  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2658  005B3A  0E34               	movlw	52
  2659  005B3C  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2660  005B3E  0E12               	movlw	18
  2661  005B40  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2662  005B42  ECEC  F03A         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2663                           
  2664                           ; BSR set to: 2
  2665                           ;main.c: 64: LORAWAN_Join(ABP);
  2666  005B46  0E01               	movlw	1
  2667  005B48  EC03  F02E         	call	_LORAWAN_Join
  2668                           
  2669                           ;main.c: 67: TimeToSend = 1;
  2670  005B4C  0E01               	movlw	1
  2671  005B4E  0101               	movlb	1	; () banked
  2672  005B50  6F7D               	movwf	_TimeToSend& (0+255),b
  2673  005B52                     l16125:
  2674                           
  2675                           ;main.c: 70: {
  2676                           ;main.c: 71: LORAWAN_Mainloop();
  2677  005B52  ECFD  F036         	call	_LORAWAN_Mainloop	;wreg free
  2678                           
  2679                           ;main.c: 73: if(TimeToSend){
  2680  005B56  0101               	movlb	1	; () banked
  2681  005B58  517D               	movf	_TimeToSend& (0+255),w,b
  2682  005B5A  E006               	bz	l16135
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;main.c: 74: LoRaWakeUp();
  2686  005B5C  EC15  F03C         	call	_LoRaWakeUp	;wreg free
  2687                           
  2688                           ;main.c: 75: readAndSend();
  2689  005B60  EC21  F031         	call	_readAndSend	;wreg free
  2690                           
  2691                           ;main.c: 76: TimeToSend = 0;
  2692  005B64  0101               	movlb	1	; () banked
  2693  005B66  6B7D               	clrf	_TimeToSend& (0+255),b
  2694  005B68                     l16135:
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;main.c: 78: }
  2698                           ;main.c: 80: if(LORAWAN_GetState() == IDLE){
  2699  005B68  EC31  F03C         	call	_LORAWAN_GetState	;wreg free
  2700  005B6C  0900               	iorlw	0
  2701  005B6E  E1F1               	bnz	l16125
  2702                           
  2703                           ; BSR set to: 2
  2704                           ;main.c: 81: LoRaSleep();
  2705  005B70  ECDD  F039         	call	_LoRaSleep	;wreg free
  2706  005B74  0003               	sleep		;# 
  2707  005B76  D7ED               	goto	l16125
  2708  005B78                     __end_of_main:
  2709                           	opt stack 0
  2710                           tblptru	equ	0xFF8
  2711                           tblptrh	equ	0xFF7
  2712                           tblptrl	equ	0xFF6
  2713                           tablat	equ	0xFF5
  2714                           intcon	equ	0xFF2
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec2	equ	0xFDD
  2718                           fsr2h	equ	0xFDA
  2719                           fsr2l	equ	0xFD9
  2720                           
  2721 ;; *************** function _readAndSend *****************
  2722 ;; Defined at:
  2723 ;;		line 117 in file "main.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  j               2  126[BANK0 ] int 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/1
  2734 ;;		On exit  : D/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;Total ram usage:        3 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:   14
  2744 ;; This function calls:
  2745 ;;		_ADC_Read
  2746 ;;		_LORAWAN_Send
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text1
  2753  006242                     __ptext1:
  2754                           	opt stack 0
  2755  006242                     _readAndSend:
  2756                           	opt stack 16
  2757                           
  2758                           ;main.c: 118: PORTDbits.RD5 = 1;
  2759                           
  2760                           ;incstack = 0
  2761  006242  8A83               	bsf	3971,5,c	;volatile
  2762                           
  2763                           ;main.c: 119: for(int j = 1; j<100; j++) _delay((unsigned long)((1)*(16000000/4000.0)));
  2764  006244  0E00               	movlw	0
  2765  006246  0100               	movlb	0	; () banked
  2766  006248  6FDF               	movwf	(readAndSend@j+1)& (0+255),b
  2767  00624A  0E01               	movlw	1
  2768  00624C  6FDE               	movwf	readAndSend@j& (0+255),b
  2769  00624E                     l15601:
  2770                           
  2771                           ; BSR set to: 0
  2772  00624E  0E06               	movlw	6
  2773  006250  6FDD               	movwf	??_readAndSend& (0+255),b
  2774  006252  0E30               	movlw	48
  2775  006254                     u19577:
  2776  006254  2EE8               	decfsz	wreg,f,c
  2777  006256  D7FE               	goto	u19577
  2778  006258  2FDD               	decfsz	??_readAndSend& (0+255),f,b
  2779  00625A  D7FC               	goto	u19577
  2780  00625C  D000               	nop2	
  2781  00625E  0100               	movlb	0	; () banked
  2782  006260  4BDE               	infsnz	readAndSend@j& (0+255),f,b
  2783  006262  2BDF               	incf	(readAndSend@j+1)& (0+255),f,b
  2784  006264  BFDF               	btfsc	(readAndSend@j+1)& (0+255),7,b
  2785  006266  D7F3               	goto	l15601
  2786  006268  51DF               	movf	(readAndSend@j+1)& (0+255),w,b
  2787  00626A  E103               	bnz	u18340
  2788  00626C  0E64               	movlw	100
  2789  00626E  5DDE               	subwf	readAndSend@j& (0+255),w,b
  2790  006270  E3EE               	bnc	l15601
  2791  006272                     u18340:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;main.c: 120: payload[0] = ADC_Read(27);
  2795  006272  0E1B               	movlw	27
  2796  006274  EC8C  F037         	call	_ADC_Read
  2797  006278  C066  F1C4         	movff	?_ADC_Read,_payload
  2798  00627C  C067  F1C5         	movff	?_ADC_Read+1,_payload+1
  2799                           
  2800                           ;main.c: 121: payload[1] = ADC_Read(26);
  2801  006280  0E1A               	movlw	26
  2802  006282  EC8C  F037         	call	_ADC_Read
  2803  006286  C066  F1C6         	movff	?_ADC_Read,_payload+2
  2804  00628A  C067  F1C7         	movff	?_ADC_Read+1,_payload+3
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;main.c: 122: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2808  00628E  0E02               	movlw	2
  2809  006290  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  2810  006292  0EC4               	movlw	low _payload
  2811  006294  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  2812  006296  0E01               	movlw	high _payload
  2813  006298  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2814  00629A  0E04               	movlw	4
  2815  00629C  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2816  00629E  0E00               	movlw	0
  2817  0062A0  ECFE  F029         	call	_LORAWAN_Send
  2818                           
  2819                           ;main.c: 123: PORTDbits.RD5 = 0;
  2820  0062A4  9A83               	bcf	3971,5,c	;volatile
  2821  0062A6  0012               	return		;funcret
  2822  0062A8                     __end_of_readAndSend:
  2823                           	opt stack 0
  2824                           tblptru	equ	0xFF8
  2825                           tblptrh	equ	0xFF7
  2826                           tblptrl	equ	0xFF6
  2827                           tablat	equ	0xFF5
  2828                           intcon	equ	0xFF2
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postdec2	equ	0xFDD
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           
  2835 ;; *************** function _ADC_Read *****************
  2836 ;; Defined at:
  2837 ;;		line 144 in file "main.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  channel         1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  channel         1   10[BANK0 ] unsigned char 
  2842 ;;  result          2   11[BANK0 ] unsigned int 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  2    6[BANK0 ] unsigned int 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : F/0
  2849 ;;		On exit  : F/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;Total ram usage:        7 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    8
  2859 ;; This function calls:
  2860 ;;		_ADC_SelChannel
  2861 ;; This function is called by:
  2862 ;;		_readAndSend
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text2
  2867  006F18                     __ptext2:
  2868                           	opt stack 0
  2869  006F18                     _ADC_Read:
  2870                           	opt stack 21
  2871                           
  2872                           ;incstack = 0
  2873                           ;ADC_Read@channel stored from wreg
  2874  006F18  6F6A               	movwf	ADC_Read@channel& (0+255),b
  2875                           
  2876                           ;main.c: 146: ADCON0bits.ADON = 1;
  2877  006F1A  80C2               	bsf	4034,0,c	;volatile
  2878                           
  2879                           ;main.c: 147: ADC_SelChannel(channel);
  2880  006F1C  0100               	movlb	0	; () banked
  2881  006F1E  516A               	movf	ADC_Read@channel& (0+255),w,b
  2882  006F20  ECE0  F03A         	call	_ADC_SelChannel
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;main.c: 148: ADCON0bits.GO = 1;
  2886  006F24  82C2               	bsf	4034,1,c	;volatile
  2887  006F26                     l2744:
  2888  006F26  B2C2               	btfsc	4034,1,c	;volatile
  2889  006F28  D7FE               	goto	l2744
  2890                           
  2891                           ;main.c: 150: result = (ADRESH<<8) | ADRESL;
  2892  006F2A  50C3               	movf	4035,w,c	;volatile
  2893  006F2C  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  2894  006F30  0100               	movlb	0	; () banked
  2895  006F32  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  2896  006F34  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  2897  006F38  6B68               	clrf	??_ADC_Read& (0+255),b
  2898  006F3A  1168               	iorwf	??_ADC_Read& (0+255),w,b
  2899  006F3C  6F6B               	movwf	ADC_Read@result& (0+255),b
  2900  006F3E  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  2901  006F40  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;main.c: 151: ADCON0bits.ADON = 0;
  2905  006F42  90C2               	bcf	4034,0,c	;volatile
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;main.c: 152: return result;
  2909  006F44  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  2910  006F48  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  2911                           
  2912                           ; BSR set to: 0
  2913  006F4C  0012               	return		;funcret
  2914  006F4E                     __end_of_ADC_Read:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           intcon	equ	0xFF2
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           postdec2	equ	0xFDD
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           
  2927 ;; *************** function _ADC_SelChannel *****************
  2928 ;; Defined at:
  2929 ;;		line 139 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  c               1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  c               1    5[BANK0 ] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : F/0
  2940 ;;		On exit  : F/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;Total ram usage:        2 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    7
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_ADC_Read
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text3
  2958  0075C0                     __ptext3:
  2959                           	opt stack 0
  2960  0075C0                     _ADC_SelChannel:
  2961                           	opt stack 21
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;incstack = 0
  2965                           ;ADC_SelChannel@c stored from wreg
  2966  0075C0  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  2967                           
  2968                           ;main.c: 140: ADCON0bits.CHS = c;
  2969  0075C2  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  2970  0075C6  0100               	movlb	0	; () banked
  2971  0075C8  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2972  0075CA  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2973  0075CC  50C2               	movf	4034,w,c	;volatile
  2974  0075CE  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2975  0075D0  0B83               	andlw	-125
  2976  0075D2  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2977  0075D4  6EC2               	movwf	4034,c	;volatile
  2978                           
  2979                           ; BSR set to: 0
  2980  0075D6  0012               	return		;funcret
  2981  0075D8                     __end_of_ADC_SelChannel:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           intcon	equ	0xFF2
  2988                           postinc0	equ	0xFEE
  2989                           wreg	equ	0xFE8
  2990                           postdec2	equ	0xFDD
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           
  2994 ;; *************** function _SysConfigSleep *****************
  2995 ;; Defined at:
  2996 ;;		line 162 in file "main.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		None
  3005 ;; Tracked objects:
  3006 ;;		On entry : F/0
  3007 ;;		On exit  : F/F
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    7
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text4
  3025  0060FE                     __ptext4:
  3026                           	opt stack 0
  3027  0060FE                     _SysConfigSleep:
  3028                           	opt stack 23
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;main.c: 165: UART2MD = 1;
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;incstack = 0
  3035  0060FE  010F               	movlb	15	; () banked
  3036  006100  8F3F               	bsf	63,7,b	;volatile
  3037                           
  3038                           ;main.c: 166: UART1MD = 1;
  3039  006102  8D3F               	bsf	63,6,b	;volatile
  3040                           
  3041                           ;main.c: 167: TMR6MD = 1;
  3042  006104  8B3F               	bsf	63,5,b	;volatile
  3043                           
  3044                           ;main.c: 168: TMR5MD = 1;
  3045  006106  893F               	bsf	63,4,b	;volatile
  3046                           
  3047                           ;main.c: 169: TMR4MD = 1;
  3048  006108  873F               	bsf	63,3,b	;volatile
  3049                           
  3050                           ;main.c: 170: TMR2MD = 1;
  3051  00610A  833F               	bsf	63,1,b	;volatile
  3052                           
  3053                           ;main.c: 171: MSSP1MD = 1;
  3054  00610C  8D3E               	bsf	62,6,b	;volatile
  3055                           
  3056                           ;main.c: 172: CCP5MD = 1;
  3057  00610E  893E               	bsf	62,4,b	;volatile
  3058                           
  3059                           ;main.c: 173: CCP4MD = 1;
  3060  006110  873E               	bsf	62,3,b	;volatile
  3061                           
  3062                           ;main.c: 174: CCP3MD = 1;
  3063  006112  853E               	bsf	62,2,b	;volatile
  3064                           
  3065                           ;main.c: 175: CCP2MD = 1;
  3066  006114  833E               	bsf	62,1,b	;volatile
  3067                           
  3068                           ;main.c: 176: CCP1MD = 1;
  3069  006116  813E               	bsf	62,0,b	;volatile
  3070                           
  3071                           ;main.c: 177: CTMUMD = 1;
  3072  006118  873D               	bsf	61,3,b	;volatile
  3073                           
  3074                           ;main.c: 178: CMP2MD = 1;
  3075  00611A  853D               	bsf	61,2,b	;volatile
  3076                           
  3077                           ;main.c: 179: CMP1MD = 1;
  3078  00611C  833D               	bsf	61,1,b	;volatile
  3079                           
  3080                           ;main.c: 182: IDLEN = 0;
  3081  00611E  9ED3               	bcf	4051,7,c	;volatile
  3082                           
  3083                           ;main.c: 186: TRISA = 0x00;
  3084  006120  6A92               	clrf	3986,c	;volatile
  3085                           
  3086                           ;main.c: 187: LATA = 0x00;
  3087  006122  6A89               	clrf	3977,c	;volatile
  3088                           
  3089                           ;main.c: 190: TRISBbits.RB4 = 0;
  3090  006124  9893               	bcf	3987,4,c	;volatile
  3091                           
  3092                           ;main.c: 191: TRISBbits.RB5 = 0;
  3093  006126  9A93               	bcf	3987,5,c	;volatile
  3094                           
  3095                           ;main.c: 192: TRISBbits.RB6 = 0;
  3096  006128  9C93               	bcf	3987,6,c	;volatile
  3097                           
  3098                           ;main.c: 193: TRISBbits.RB7 = 0;
  3099  00612A  9E93               	bcf	3987,7,c	;volatile
  3100                           
  3101                           ;main.c: 194: LATBbits.LATB4 = 0;
  3102  00612C  988A               	bcf	3978,4,c	;volatile
  3103                           
  3104                           ;main.c: 195: LATBbits.LATB5 = 0;
  3105  00612E  9A8A               	bcf	3978,5,c	;volatile
  3106                           
  3107                           ;main.c: 196: LATBbits.LATB6 = 0;
  3108  006130  9C8A               	bcf	3978,6,c	;volatile
  3109                           
  3110                           ;main.c: 197: LATBbits.LATB7 = 0;
  3111  006132  9E8A               	bcf	3978,7,c	;volatile
  3112                           
  3113                           ;main.c: 200: TRISCbits.RC0 = 0;
  3114  006134  9094               	bcf	3988,0,c	;volatile
  3115                           
  3116                           ;main.c: 201: TRISCbits.RC1 = 0;
  3117  006136  9294               	bcf	3988,1,c	;volatile
  3118                           
  3119                           ;main.c: 202: TRISCbits.RC3 = 0;
  3120  006138  9694               	bcf	3988,3,c	;volatile
  3121                           
  3122                           ;main.c: 203: TRISCbits.RC4 = 0;
  3123  00613A  9894               	bcf	3988,4,c	;volatile
  3124                           
  3125                           ;main.c: 205: TRISCbits.RC6 = 0;
  3126  00613C  9C94               	bcf	3988,6,c	;volatile
  3127                           
  3128                           ;main.c: 206: TRISCbits.RC7 = 0;
  3129  00613E  9E94               	bcf	3988,7,c	;volatile
  3130                           
  3131                           ;main.c: 207: LATCbits.LATC0 = 0;
  3132  006140  908B               	bcf	3979,0,c	;volatile
  3133                           
  3134                           ;main.c: 208: LATCbits.LATC1 = 0;
  3135  006142  928B               	bcf	3979,1,c	;volatile
  3136                           
  3137                           ;main.c: 209: LATCbits.LATC3 = 0;
  3138  006144  968B               	bcf	3979,3,c	;volatile
  3139                           
  3140                           ;main.c: 210: LATCbits.LATC4 = 0;
  3141  006146  988B               	bcf	3979,4,c	;volatile
  3142                           
  3143                           ;main.c: 212: LATCbits.LATC6 = 0;
  3144  006148  9C8B               	bcf	3979,6,c	;volatile
  3145                           
  3146                           ;main.c: 213: LATCbits.LATC7 = 0;
  3147  00614A  9E8B               	bcf	3979,7,c	;volatile
  3148                           
  3149                           ;main.c: 216: TRISDbits.RD0 = 0;
  3150  00614C  9095               	bcf	3989,0,c	;volatile
  3151                           
  3152                           ;main.c: 217: TRISDbits.RD1 = 0;
  3153  00614E  9295               	bcf	3989,1,c	;volatile
  3154                           
  3155                           ;main.c: 218: TRISDbits.RD2 = 0;
  3156  006150  9495               	bcf	3989,2,c	;volatile
  3157                           
  3158                           ;main.c: 219: TRISDbits.RD4 = 0;
  3159  006152  9895               	bcf	3989,4,c	;volatile
  3160                           
  3161                           ;main.c: 220: TRISDbits.RD5 = 0;
  3162  006154  9A95               	bcf	3989,5,c	;volatile
  3163                           
  3164                           ;main.c: 221: TRISDbits.RD7 = 0;
  3165  006156  9E95               	bcf	3989,7,c	;volatile
  3166                           
  3167                           ;main.c: 222: LATDbits.LATD0 = 0;
  3168  006158  908C               	bcf	3980,0,c	;volatile
  3169                           
  3170                           ;main.c: 223: LATDbits.LATD1 = 0;
  3171  00615A  928C               	bcf	3980,1,c	;volatile
  3172                           
  3173                           ;main.c: 224: LATDbits.LATD2 = 0;
  3174  00615C  948C               	bcf	3980,2,c	;volatile
  3175                           
  3176                           ;main.c: 225: LATDbits.LATD4 = 0;
  3177  00615E  988C               	bcf	3980,4,c	;volatile
  3178                           
  3179                           ;main.c: 230: TRISEbits.RE0 = 0;
  3180  006160  9096               	bcf	3990,0,c	;volatile
  3181                           
  3182                           ;main.c: 231: TRISEbits.RE1 = 0;
  3183  006162  9296               	bcf	3990,1,c	;volatile
  3184                           
  3185                           ;main.c: 232: TRISEbits.RE2 = 0;
  3186  006164  9496               	bcf	3990,2,c	;volatile
  3187                           
  3188                           ;main.c: 233: LATEbits.LATE0 = 0;
  3189  006166  908D               	bcf	3981,0,c	;volatile
  3190                           
  3191                           ;main.c: 234: LATEbits.LATE1 = 0;
  3192  006168  928D               	bcf	3981,1,c	;volatile
  3193                           
  3194                           ;main.c: 235: LATEbits.LATE2 = 0;
  3195  00616A  948D               	bcf	3981,2,c	;volatile
  3196                           
  3197                           ; BSR set to: 15
  3198  00616C  0012               	return		;funcret
  3199  00616E                     __end_of_SysConfigSleep:
  3200                           	opt stack 0
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           intcon	equ	0xFF2
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           postdec2	equ	0xFDD
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           
  3212 ;; *************** function _SYSTEM_Initialize *****************
  3213 ;; Defined at:
  3214 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : F/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:   10
  3235 ;; This function calls:
  3236 ;;		_EXT_INT_Initialize
  3237 ;;		_INTERRUPT_Initialize
  3238 ;;		_LORAWAN_PlatformInit
  3239 ;;		_OSCILLATOR_Initialize
  3240 ;;		_PIN_MANAGER_Initialize
  3241 ;;		_SPI2_Initialize
  3242 ;;		_TMR1_Initialize
  3243 ;;		_TMR3_Initialize
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text5
  3250  00737A                     __ptext5:
  3251                           	opt stack 0
  3252  00737A                     _SYSTEM_Initialize:
  3253                           	opt stack 20
  3254                           
  3255                           ;mcc.c: 114: INTERRUPT_Initialize();
  3256                           
  3257                           ; BSR set to: 15
  3258                           ;incstack = 0
  3259  00737A  EC59  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3260                           
  3261                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3262  00737E  ECB2  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3266  007382  ECB1  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;mcc.c: 117: SPI2_Initialize();
  3270  007386  ECCF  F03B         	call	_SPI2_Initialize	;wreg free
  3271                           
  3272                           ;mcc.c: 118: TMR3_Initialize();
  3273  00738A  ECF1  F038         	call	_TMR3_Initialize	;wreg free
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;mcc.c: 119: EXT_INT_Initialize();
  3277  00738E  EC59  F038         	call	_EXT_INT_Initialize	;wreg free
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;mcc.c: 120: TMR1_Initialize();
  3281  007392  EC2D  F039         	call	_TMR1_Initialize	;wreg free
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;mcc.c: 121: LORAWAN_PlatformInit();
  3285  007396  EFCD  F039         	goto	_LORAWAN_PlatformInit	;wreg free
  3286  00739A                     __end_of_SYSTEM_Initialize:
  3287                           	opt stack 0
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           intcon	equ	0xFF2
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           
  3299 ;; *************** function _TMR3_Initialize *****************
  3300 ;; Defined at:
  3301 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : F/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    8
  3322 ;; This function calls:
  3323 ;;		_TMR3_SetInterruptHandler
  3324 ;;		_TMR3_StartTimer
  3325 ;; This function is called by:
  3326 ;;		_SYSTEM_Initialize
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text6
  3331  0071E2                     __ptext6:
  3332                           	opt stack 0
  3333  0071E2                     _TMR3_Initialize:
  3334                           	opt stack 21
  3335                           
  3336                           ;tmr3.c: 67: T3CON = 0xBC;
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;incstack = 0
  3340  0071E2  0EBC               	movlw	188
  3341  0071E4  6EB1               	movwf	4017,c	;volatile
  3342                           
  3343                           ;tmr3.c: 70: T3GCON = 0x00;
  3344  0071E6  6AB4               	clrf	4020,c	;volatile
  3345                           
  3346                           ;tmr3.c: 73: TMR3H = 0x00;
  3347  0071E8  6AB3               	clrf	4019,c	;volatile
  3348                           
  3349                           ;tmr3.c: 76: TMR3L = 0x00;
  3350  0071EA  6AB2               	clrf	4018,c	;volatile
  3351                           
  3352                           ;tmr3.c: 79: timer3ReloadVal=TMR3;
  3353  0071EC  CFB2 F05E          	movff	4018,_timer3ReloadVal	;volatile
  3354  0071F0  CFB3 F05F          	movff	4019,_timer3ReloadVal+1	;volatile
  3355                           
  3356                           ;tmr3.c: 82: PIR2bits.TMR3IF = 0;
  3357  0071F4  92A1               	bcf	4001,1,c	;volatile
  3358                           
  3359                           ;tmr3.c: 85: PIE2bits.TMR3IE = 1;
  3360  0071F6  82A0               	bsf	4000,1,c	;volatile
  3361                           
  3362                           ;tmr3.c: 88: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  3363  0071F8  0ED2               	movlw	low _TMR3_DefaultInterruptHandler
  3364  0071FA  0100               	movlb	0	; () banked
  3365  0071FC  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3366  0071FE  0E78               	movlw	high _TMR3_DefaultInterruptHandler
  3367  007200  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3368  007202  ECD5  F03B         	call	_TMR3_SetInterruptHandler	;wreg free
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;tmr3.c: 91: TMR3_StartTimer();
  3372  007206  EF53  F03C         	goto	_TMR3_StartTimer	;wreg free
  3373  00720A                     __end_of_TMR3_Initialize:
  3374                           	opt stack 0
  3375                           tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           intcon	equ	0xFF2
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           postdec2	equ	0xFDD
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           
  3386 ;; *************** function _TMR3_StartTimer *****************
  3387 ;; Defined at:
  3388 ;;		line 94 in file "mcc_generated_files/tmr3.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		None
  3397 ;; Tracked objects:
  3398 ;;		On entry : F/0
  3399 ;;		On exit  : F/0
  3400 ;;		Unchanged: F/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    7
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_TMR3_Initialize
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text7
  3417  0078A6                     __ptext7:
  3418                           	opt stack 0
  3419  0078A6                     _TMR3_StartTimer:
  3420                           	opt stack 21
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;tmr3.c: 97: T3CONbits.TMR3ON = 1;
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;incstack = 0
  3427  0078A6  80B1               	bsf	4017,0,c	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430  0078A8  0012               	return		;funcret
  3431  0078AA                     __end_of_TMR3_StartTimer:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           intcon	equ	0xFF2
  3438                           postinc0	equ	0xFEE
  3439                           wreg	equ	0xFE8
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           
  3444 ;; *************** function _TMR3_SetInterruptHandler *****************
  3445 ;; Defined at:
  3446 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3449 ;;		 -> handle16sInterrupt(1), TMR3_DefaultInterruptHandler(1), 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : F/0
  3458 ;;		On exit  : F/0
  3459 ;;		Unchanged: F/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    7
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_TMR3_Initialize
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text8
  3477  0077AA                     __ptext8:
  3478                           	opt stack 0
  3479  0077AA                     _TMR3_SetInterruptHandler:
  3480                           	opt stack 23
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;tmr3.c: 184: TMR3_InterruptHandler = InterruptHandler;
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;incstack = 0
  3487  0077AA  C064  F1FE         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3488  0077AE  C065  F1FF         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3489                           
  3490                           ; BSR set to: 0
  3491  0077B2  0012               	return		;funcret
  3492  0077B4                     __end_of_TMR3_SetInterruptHandler:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           intcon	equ	0xFF2
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           
  3505 ;; *************** function _TMR1_Initialize *****************
  3506 ;; Defined at:
  3507 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : F/0
  3518 ;;		On exit  : F/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    8
  3528 ;; This function calls:
  3529 ;;		_TMR1_SetInterruptHandler
  3530 ;;		_TMR1_StartTimer
  3531 ;; This function is called by:
  3532 ;;		_SYSTEM_Initialize
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text9
  3537  00725A                     __ptext9:
  3538                           	opt stack 0
  3539  00725A                     _TMR1_Initialize:
  3540                           	opt stack 21
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;tmr1.c: 67: T1CON = 0x8C;
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;incstack = 0
  3547  00725A  0E8C               	movlw	140
  3548  00725C  6ECD               	movwf	4045,c	;volatile
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;tmr1.c: 70: T1GCON = 0x00;
  3552  00725E  6ACC               	clrf	4044,c	;volatile
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;tmr1.c: 73: TMR1H = 0x00;
  3556  007260  6ACF               	clrf	4047,c	;volatile
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;tmr1.c: 76: TMR1L = 0x00;
  3560  007262  6ACE               	clrf	4046,c	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3564  007264  CFCE F05C          	movff	4046,_timer1ReloadVal	;volatile
  3565  007268  CFCF F05D          	movff	4047,_timer1ReloadVal+1	;volatile
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3569  00726C  909E               	bcf	3998,0,c	;volatile
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3573  00726E  809D               	bsf	3997,0,c	;volatile
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3577  007270  0ED4               	movlw	low _TMR1_DefaultInterruptHandler
  3578  007272  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3579  007274  0E78               	movlw	high _TMR1_DefaultInterruptHandler
  3580  007276  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3581  007278  ECDA  F03B         	call	_TMR1_SetInterruptHandler	;wreg free
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;tmr1.c: 91: TMR1_StartTimer();
  3585  00727C  EF55  F03C         	goto	_TMR1_StartTimer	;wreg free
  3586  007280                     __end_of_TMR1_Initialize:
  3587                           	opt stack 0
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           intcon	equ	0xFF2
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           postdec2	equ	0xFDD
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           
  3599 ;; *************** function _TMR1_StartTimer *****************
  3600 ;; Defined at:
  3601 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		None
  3610 ;; Tracked objects:
  3611 ;;		On entry : F/0
  3612 ;;		On exit  : F/0
  3613 ;;		Unchanged: F/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    7
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_TMR1_Initialize
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text10
  3630  0078AA                     __ptext10:
  3631                           	opt stack 0
  3632  0078AA                     _TMR1_StartTimer:
  3633                           	opt stack 21
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;incstack = 0
  3640  0078AA  80CD               	bsf	4045,0,c	;volatile
  3641                           
  3642                           ; BSR set to: 0
  3643  0078AC  0012               	return		;funcret
  3644  0078AE                     __end_of_TMR1_StartTimer:
  3645                           	opt stack 0
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           intcon	equ	0xFF2
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           
  3657 ;; *************** function _PIN_MANAGER_Initialize *****************
  3658 ;; Defined at:
  3659 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : F/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    8
  3680 ;; This function calls:
  3681 ;;		_IOCB4_SetInterruptHandler
  3682 ;; This function is called by:
  3683 ;;		_SYSTEM_Initialize
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text11
  3688  006B64                     __ptext11:
  3689                           	opt stack 0
  3690  006B64                     _PIN_MANAGER_Initialize:
  3691                           	opt stack 21
  3692                           
  3693                           ;pin_manager.c: 57: LATE = 0x00;
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;incstack = 0
  3697  006B64  6A8D               	clrf	3981,c	;volatile
  3698                           
  3699                           ;pin_manager.c: 58: LATD = 0x00;
  3700  006B66  6A8C               	clrf	3980,c	;volatile
  3701                           
  3702                           ;pin_manager.c: 59: LATA = 0x00;
  3703  006B68  6A89               	clrf	3977,c	;volatile
  3704                           
  3705                           ;pin_manager.c: 60: LATB = 0x00;
  3706  006B6A  6A8A               	clrf	3978,c	;volatile
  3707                           
  3708                           ;pin_manager.c: 61: LATC = 0x00;
  3709  006B6C  6A8B               	clrf	3979,c	;volatile
  3710                           
  3711                           ;pin_manager.c: 66: TRISE = 0x07;
  3712  006B6E  0E07               	movlw	7
  3713  006B70  6E96               	movwf	3990,c	;volatile
  3714                           
  3715                           ;pin_manager.c: 67: TRISA = 0xFF;
  3716  006B72  6892               	setf	3986,c	;volatile
  3717                           
  3718                           ;pin_manager.c: 68: TRISB = 0xFF;
  3719  006B74  6893               	setf	3987,c	;volatile
  3720                           
  3721                           ;pin_manager.c: 69: TRISC = 0xFE;
  3722  006B76  0EFE               	movlw	254
  3723  006B78  6E94               	movwf	3988,c	;volatile
  3724                           
  3725                           ;pin_manager.c: 70: TRISD = 0xE6;
  3726  006B7A  0EE6               	movlw	230
  3727  006B7C  6E95               	movwf	3989,c	;volatile
  3728                           
  3729                           ;pin_manager.c: 75: ANSELC = 0xF8;
  3730  006B7E  0EF8               	movlw	248
  3731  006B80  010F               	movlb	15	; () banked
  3732  006B82  6F3A               	movwf	58,b	;volatile
  3733                           
  3734                           ;pin_manager.c: 76: ANSELB = 0x28;
  3735  006B84  0E28               	movlw	40
  3736  006B86  6F39               	movwf	57,b	;volatile
  3737                           
  3738                           ;pin_manager.c: 77: ANSELD = 0xE4;
  3739  006B88  0EE4               	movlw	228
  3740  006B8A  6F3B               	movwf	59,b	;volatile
  3741                           
  3742                           ;pin_manager.c: 78: ANSELE = 0x07;
  3743  006B8C  0E07               	movlw	7
  3744  006B8E  6F3C               	movwf	60,b	;volatile
  3745                           
  3746                           ;pin_manager.c: 79: ANSELA = 0x2F;
  3747  006B90  0E2F               	movlw	47
  3748  006B92  6F38               	movwf	56,b	;volatile
  3749                           
  3750                           ; BSR set to: 15
  3751                           ;pin_manager.c: 84: WPUB = 0xFF;
  3752  006B94  6861               	setf	3937,c	;volatile
  3753                           
  3754                           ; BSR set to: 15
  3755                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  3756  006B96  9EF1               	bcf	intcon2,7,c	;volatile
  3757                           
  3758                           ; BSR set to: 15
  3759                           ;pin_manager.c: 93: IOCBbits.IOCB4 = 1;
  3760  006B98  8862               	bsf	3938,4,c	;volatile
  3761                           
  3762                           ; BSR set to: 15
  3763                           ;pin_manager.c: 96: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3764  006B9A  0ED6               	movlw	low _IOCB4_DefaultInterruptHandler
  3765  006B9C  0100               	movlb	0	; () banked
  3766  006B9E  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3767  006BA0  0E78               	movlw	high _IOCB4_DefaultInterruptHandler
  3768  006BA2  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3769  006BA4  ECDF  F03B         	call	_IOCB4_SetInterruptHandler	;wreg free
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;pin_manager.c: 99: INTCONbits.RBIE = 1;
  3773  006BA8  86F2               	bsf	intcon,3,c	;volatile
  3774                           
  3775                           ; BSR set to: 0
  3776  006BAA  0012               	return		;funcret
  3777  006BAC                     __end_of_PIN_MANAGER_Initialize:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           intcon	equ	0xFF2
  3784                           intcon2	equ	0xFF1
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           postdec2	equ	0xFDD
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           
  3791 ;; *************** function _OSCILLATOR_Initialize *****************
  3792 ;; Defined at:
  3793 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2
  3802 ;; Tracked objects:
  3803 ;;		On entry : F/0
  3804 ;;		On exit  : F/0
  3805 ;;		Unchanged: F/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    7
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_SYSTEM_Initialize
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text12
  3822  007762                     __ptext12:
  3823                           	opt stack 0
  3824  007762                     _OSCILLATOR_Initialize:
  3825                           	opt stack 22
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;mcc.c: 127: OSCCON = 0x70;
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;incstack = 0
  3832  007762  0E70               	movlw	112
  3833  007764  6ED3               	movwf	4051,c	;volatile
  3834                           
  3835                           ;mcc.c: 129: OSCCON2 = 0x04;
  3836  007766  0E04               	movlw	4
  3837  007768  6ED2               	movwf	4050,c	;volatile
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;mcc.c: 131: OSCTUNE = 0x00;
  3841  00776A  6A9B               	clrf	3995,c	;volatile
  3842                           
  3843                           ; BSR set to: 0
  3844  00776C  0012               	return		;funcret
  3845  00776E                     __end_of_OSCILLATOR_Initialize:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           intcon	equ	0xFF2
  3852                           intcon2	equ	0xFF1
  3853                           postinc0	equ	0xFEE
  3854                           wreg	equ	0xFE8
  3855                           postdec2	equ	0xFDD
  3856                           fsr2h	equ	0xFDA
  3857                           fsr2l	equ	0xFD9
  3858                           
  3859 ;; *************** function _LORAWAN_PlatformInit *****************
  3860 ;; Defined at:
  3861 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : F/0
  3872 ;;		On exit  : F/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    9
  3882 ;; This function calls:
  3883 ;;		_DIO0_ISR_Lora_Init
  3884 ;;		_DIO1_ISR_Lora_Init
  3885 ;;		_DIO2_ISR_Lora_Init
  3886 ;;		_DIO3_ISR_Lora_Init
  3887 ;;		_DIO4_ISR_Lora_Init
  3888 ;;		_DIO5_ISR_Lora_Init
  3889 ;;		_SystemTimerInit
  3890 ;;		_TMR_ISR_Lora_Init
  3891 ;; This function is called by:
  3892 ;;		_SYSTEM_Initialize
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text13
  3897  00739A                     __ptext13:
  3898                           	opt stack 0
  3899  00739A                     _LORAWAN_PlatformInit:
  3900                           	opt stack 20
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;incstack = 0
  3907  00739A  ECB7  F03B         	call	_TMR_ISR_Lora_Init	;wreg free
  3908                           
  3909                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3910  00739E  ECC9  F03B         	call	_DIO0_ISR_Lora_Init	;wreg free
  3911                           
  3912                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3913  0073A2  ECC3  F03B         	call	_DIO1_ISR_Lora_Init	;wreg free
  3914                           
  3915                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3916  0073A6  ECBD  F03B         	call	_DIO2_ISR_Lora_Init	;wreg free
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3920  0073AA  EC66  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3924  0073AE  EC65  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3925                           
  3926                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3927  0073B2  EC35  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;lorawan_init.c: 81: SystemTimerInit();
  3931  0073B6  EF57  F03C         	goto	_SystemTimerInit	;wreg free
  3932  0073BA                     __end_of_LORAWAN_PlatformInit:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           intcon	equ	0xFF2
  3939                           intcon2	equ	0xFF1
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           postdec2	equ	0xFDD
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           
  3946 ;; *************** function _TMR_ISR_Lora_Init *****************
  3947 ;; Defined at:
  3948 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : F/0
  3959 ;;		On exit  : F/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    8
  3969 ;; This function calls:
  3970 ;;		_TMR1_SetInterruptHandler
  3971 ;; This function is called by:
  3972 ;;		_LORAWAN_PlatformInit
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text14
  3977  00776E                     __ptext14:
  3978                           	opt stack 0
  3979  00776E                     _TMR_ISR_Lora_Init:
  3980                           	opt stack 20
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;incstack = 0
  3987  00776E  0E36               	movlw	low _TMR_ISR_lora
  3988  007770  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3989  007772  0E6A               	movlw	high _TMR_ISR_lora
  3990  007774  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3991  007776  EFDA  F03B         	goto	_TMR1_SetInterruptHandler	;wreg free
  3992  00777A                     __end_of_TMR_ISR_Lora_Init:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           intcon	equ	0xFF2
  3999                           intcon2	equ	0xFF1
  4000                           postinc0	equ	0xFEE
  4001                           wreg	equ	0xFE8
  4002                           postdec2	equ	0xFDD
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           
  4006 ;; *************** function _TMR1_SetInterruptHandler *****************
  4007 ;; Defined at:
  4008 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4011 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : F/0
  4020 ;;		On exit  : F/0
  4021 ;;		Unchanged: F/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;Total ram usage:        2 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    7
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_TMR_ISR_Lora_Init
  4034 ;;		_TMR1_Initialize
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text15
  4039  0077B4                     __ptext15:
  4040                           	opt stack 0
  4041  0077B4                     _TMR1_SetInterruptHandler:
  4042                           	opt stack 21
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;incstack = 0
  4049  0077B4  C064  F1FC         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4050  0077B8  C065  F1FD         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4051                           
  4052                           ; BSR set to: 0
  4053  0077BC  0012               	return		;funcret
  4054  0077BE                     __end_of_TMR1_SetInterruptHandler:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           intcon	equ	0xFF2
  4061                           intcon2	equ	0xFF1
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postdec2	equ	0xFDD
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           
  4068 ;; *************** function _SystemTimerInit *****************
  4069 ;; Defined at:
  4070 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		None
  4079 ;; Tracked objects:
  4080 ;;		On entry : F/0
  4081 ;;		On exit  : F/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    7
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_LORAWAN_PlatformInit
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text16
  4099  0078AE                     __ptext16:
  4100                           	opt stack 0
  4101  0078AE                     _SystemTimerInit:
  4102                           	opt stack 21
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;sw_timer.c: 137: allocatedTimers = 0;
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;incstack = 0
  4109  0078AE  6BEF               	clrf	_allocatedTimers& (0+255),b	;volatile
  4110                           
  4111                           ; BSR set to: 0
  4112  0078B0  0012               	return		;funcret
  4113  0078B2                     __end_of_SystemTimerInit:
  4114                           	opt stack 0
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           intcon	equ	0xFF2
  4120                           intcon2	equ	0xFF1
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           
  4127 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4128 ;; Defined at:
  4129 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : F/0
  4140 ;;		On exit  : F/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    8
  4150 ;; This function calls:
  4151 ;;		_INT0_SetInterruptHandler
  4152 ;; This function is called by:
  4153 ;;		_LORAWAN_PlatformInit
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text17
  4158  00786A                     __ptext17:
  4159                           	opt stack 0
  4160  00786A                     _DIO5_ISR_Lora_Init:
  4161                           	opt stack 20
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;incstack = 0
  4168  00786A  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4169  00786C  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4170  00786E  0C00               	retlw	0	;wreg free
  4171  007870                     __end_of_DIO5_ISR_Lora_Init:
  4172                           	opt stack 0
  4173                           tblptru	equ	0xFF8
  4174                           tblptrh	equ	0xFF7
  4175                           tblptrl	equ	0xFF6
  4176                           tablat	equ	0xFF5
  4177                           intcon	equ	0xFF2
  4178                           intcon2	equ	0xFF1
  4179                           postinc0	equ	0xFEE
  4180                           wreg	equ	0xFE8
  4181                           postdec2	equ	0xFDD
  4182                           fsr2h	equ	0xFDA
  4183                           fsr2l	equ	0xFD9
  4184                           
  4185 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4186 ;; Defined at:
  4187 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		None
  4196 ;; Tracked objects:
  4197 ;;		On entry : F/0
  4198 ;;		On exit  : F/0
  4199 ;;		Unchanged: F/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;Total ram usage:        0 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    7
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_LORAWAN_PlatformInit
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text18
  4216  0078CA                     __ptext18:
  4217                           	opt stack 0
  4218  0078CA                     _DIO4_ISR_Lora_Init:
  4219                           	opt stack 21
  4220                           
  4221                           ; BSR set to: 0
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;incstack = 0
  4225  0078CA  0012               	return		;funcret
  4226  0078CC                     __end_of_DIO4_ISR_Lora_Init:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           intcon	equ	0xFF2
  4233                           intcon2	equ	0xFF1
  4234                           postinc0	equ	0xFEE
  4235                           wreg	equ	0xFE8
  4236                           postdec2	equ	0xFDD
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           
  4240 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4241 ;; Defined at:
  4242 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		None
  4251 ;; Tracked objects:
  4252 ;;		On entry : F/0
  4253 ;;		On exit  : F/0
  4254 ;;		Unchanged: F/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    7
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_LORAWAN_PlatformInit
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text19
  4271  0078CC                     __ptext19:
  4272                           	opt stack 0
  4273  0078CC                     _DIO3_ISR_Lora_Init:
  4274                           	opt stack 21
  4275                           
  4276                           ; BSR set to: 0
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280  0078CC  0012               	return		;funcret
  4281  0078CE                     __end_of_DIO3_ISR_Lora_Init:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           intcon	equ	0xFF2
  4288                           intcon2	equ	0xFF1
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           postdec2	equ	0xFDD
  4292                           fsr2h	equ	0xFDA
  4293                           fsr2l	equ	0xFD9
  4294                           
  4295 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4296 ;; Defined at:
  4297 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : F/0
  4308 ;;		On exit  : F/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    8
  4318 ;; This function calls:
  4319 ;;		_IOCB4_SetInterruptHandler
  4320 ;; This function is called by:
  4321 ;;		_LORAWAN_PlatformInit
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text20
  4326  00777A                     __ptext20:
  4327                           	opt stack 0
  4328  00777A                     _DIO2_ISR_Lora_Init:
  4329                           	opt stack 20
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;incstack = 0
  4336  00777A  0E88               	movlw	low _DIO2_ISR_Lora
  4337  00777C  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4338  00777E  0E78               	movlw	high _DIO2_ISR_Lora
  4339  007780  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4340  007782  EFDF  F03B         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4341  007786                     __end_of_DIO2_ISR_Lora_Init:
  4342                           	opt stack 0
  4343                           tblptru	equ	0xFF8
  4344                           tblptrh	equ	0xFF7
  4345                           tblptrl	equ	0xFF6
  4346                           tablat	equ	0xFF5
  4347                           intcon	equ	0xFF2
  4348                           intcon2	equ	0xFF1
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           postdec2	equ	0xFDD
  4352                           fsr2h	equ	0xFDA
  4353                           fsr2l	equ	0xFD9
  4354                           
  4355 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4356 ;; Defined at:
  4357 ;;		line 133 in file "mcc_generated_files/pin_manager.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4360 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : F/0
  4369 ;;		On exit  : F/0
  4370 ;;		Unchanged: F/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;Total ram usage:        2 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    7
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_PIN_MANAGER_Initialize
  4383 ;;		_DIO2_ISR_Lora_Init
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text21
  4388  0077BE                     __ptext21:
  4389                           	opt stack 0
  4390  0077BE                     _IOCB4_SetInterruptHandler:
  4391                           	opt stack 21
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;pin_manager.c: 134: IOCB4_InterruptHandler = InterruptHandler;
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;incstack = 0
  4398  0077BE  C064  F1FA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4399  0077C2  C065  F1FB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4400                           
  4401                           ; BSR set to: 0
  4402  0077C6  0012               	return		;funcret
  4403  0077C8                     __end_of_IOCB4_SetInterruptHandler:
  4404                           	opt stack 0
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           intcon	equ	0xFF2
  4410                           intcon2	equ	0xFF1
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           postdec2	equ	0xFDD
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           
  4417 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4418 ;; Defined at:
  4419 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : F/0
  4430 ;;		On exit  : F/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    8
  4440 ;; This function calls:
  4441 ;;		_INT2_SetInterruptHandler
  4442 ;; This function is called by:
  4443 ;;		_LORAWAN_PlatformInit
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text22
  4448  007786                     __ptext22:
  4449                           	opt stack 0
  4450  007786                     _DIO1_ISR_Lora_Init:
  4451                           	opt stack 20
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;incstack = 0
  4458  007786  0E94               	movlw	low _DIO1_ISR_Lora
  4459  007788  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4460  00778A  0E78               	movlw	high _DIO1_ISR_Lora
  4461  00778C  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4462  00778E  EFE4  F03B         	goto	_INT2_SetInterruptHandler	;wreg free
  4463  007792                     __end_of_DIO1_ISR_Lora_Init:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           intcon	equ	0xFF2
  4470                           intcon2	equ	0xFF1
  4471                           postinc0	equ	0xFEE
  4472                           wreg	equ	0xFE8
  4473                           postdec2	equ	0xFDD
  4474                           fsr2h	equ	0xFDA
  4475                           fsr2l	equ	0xFD9
  4476                           
  4477 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4478 ;; Defined at:
  4479 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : F/0
  4490 ;;		On exit  : F/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    8
  4500 ;; This function calls:
  4501 ;;		_INT1_SetInterruptHandler
  4502 ;; This function is called by:
  4503 ;;		_LORAWAN_PlatformInit
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text23
  4508  007792                     __ptext23:
  4509                           	opt stack 0
  4510  007792                     _DIO0_ISR_Lora_Init:
  4511                           	opt stack 20
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;incstack = 0
  4518  007792  0EA0               	movlw	low _DIO0_ISR_Lora
  4519  007794  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4520  007796  0E78               	movlw	high _DIO0_ISR_Lora
  4521  007798  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4522  00779A  EFE9  F03B         	goto	_INT1_SetInterruptHandler	;wreg free
  4523  00779E                     __end_of_DIO0_ISR_Lora_Init:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           intcon	equ	0xFF2
  4530                           intcon2	equ	0xFF1
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postdec2	equ	0xFDD
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           
  4537 ;; *************** function _INTERRUPT_Initialize *****************
  4538 ;; Defined at:
  4539 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    7
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_SYSTEM_Initialize
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text24
  4568  0078B2                     __ptext24:
  4569                           	opt stack 0
  4570  0078B2                     _INTERRUPT_Initialize:
  4571                           	opt stack 22
  4572                           
  4573                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;incstack = 0
  4577  0078B2  9ED0               	bcf	4048,7,c	;volatile
  4578  0078B4  0012               	return		;funcret
  4579  0078B6                     __end_of_INTERRUPT_Initialize:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           intcon	equ	0xFF2
  4586                           intcon2	equ	0xFF1
  4587                           postinc0	equ	0xFEE
  4588                           wreg	equ	0xFE8
  4589                           postdec2	equ	0xFDD
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           
  4593 ;; *************** function _EXT_INT_Initialize *****************
  4594 ;; Defined at:
  4595 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : F/0
  4606 ;;		On exit  : F/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        0 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    8
  4616 ;; This function calls:
  4617 ;;		_INT0_SetInterruptHandler
  4618 ;;		_INT1_SetInterruptHandler
  4619 ;;		_INT2_SetInterruptHandler
  4620 ;; This function is called by:
  4621 ;;		_SYSTEM_Initialize
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text25
  4626  0070B2                     __ptext25:
  4627                           	opt stack 0
  4628  0070B2                     _EXT_INT_Initialize:
  4629                           	opt stack 21
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4633                           
  4634                           ;incstack = 0
  4635  0070B2  90F0               	bcf	intcon3,0,c	;volatile
  4636                           
  4637                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4638  0070B4  8AF1               	bsf	intcon2,5,c	;volatile
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4642  0070B6  0EDA               	movlw	low _INT1_DefaultInterruptHandler
  4643  0070B8  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4644  0070BA  0E78               	movlw	high _INT1_DefaultInterruptHandler
  4645  0070BC  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4646  0070BE  ECE9  F03B         	call	_INT1_SetInterruptHandler	;wreg free
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4650  0070C2  86F0               	bsf	intcon3,3,c	;volatile
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4654  0070C4  92F0               	bcf	intcon3,1,c	;volatile
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4658  0070C6  88F1               	bsf	intcon2,4,c	;volatile
  4659                           
  4660                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4661  0070C8  0ED8               	movlw	low _INT2_DefaultInterruptHandler
  4662  0070CA  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4663  0070CC  0E78               	movlw	high _INT2_DefaultInterruptHandler
  4664  0070CE  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4665  0070D0  ECE4  F03B         	call	_INT2_SetInterruptHandler	;wreg free
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4669  0070D4  88F0               	bsf	intcon3,4,c	;volatile
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4673  0070D6  92F2               	bcf	intcon,1,c	;volatile
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4677  0070D8  8CF1               	bsf	intcon2,6,c	;volatile
  4678                           
  4679                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4680  0070DA  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4681  0070DC  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4682  0070DE  0C00               	retlw	0	;wreg free
  4683  0070E0                     __end_of_EXT_INT_Initialize:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           intcon	equ	0xFF2
  4690                           intcon2	equ	0xFF1
  4691                           intcon3	equ	0xFF0
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           postdec2	equ	0xFDD
  4695                           fsr2h	equ	0xFDA
  4696                           fsr2l	equ	0xFD9
  4697                           
  4698 ;; *************** function _INT2_SetInterruptHandler *****************
  4699 ;; Defined at:
  4700 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4703 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : F/0
  4712 ;;		On exit  : F/0
  4713 ;;		Unchanged: F/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;Total ram usage:        2 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    7
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_EXT_INT_Initialize
  4726 ;;		_DIO1_ISR_Lora_Init
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text26
  4731  0077C8                     __ptext26:
  4732                           	opt stack 0
  4733  0077C8                     _INT2_SetInterruptHandler:
  4734                           	opt stack 20
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;incstack = 0
  4741  0077C8  C064  F1F8         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4742  0077CC  C065  F1F9         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4743                           
  4744                           ; BSR set to: 0
  4745  0077D0  0012               	return		;funcret
  4746  0077D2                     __end_of_INT2_SetInterruptHandler:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           intcon	equ	0xFF2
  4753                           intcon2	equ	0xFF1
  4754                           intcon3	equ	0xFF0
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           postdec2	equ	0xFDD
  4758                           fsr2h	equ	0xFDA
  4759                           fsr2l	equ	0xFD9
  4760                           
  4761 ;; *************** function _INT1_SetInterruptHandler *****************
  4762 ;; Defined at:
  4763 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4766 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : F/0
  4775 ;;		On exit  : F/0
  4776 ;;		Unchanged: F/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        2 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    7
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_EXT_INT_Initialize
  4789 ;;		_DIO0_ISR_Lora_Init
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text27
  4794  0077D2                     __ptext27:
  4795                           	opt stack 0
  4796  0077D2                     _INT1_SetInterruptHandler:
  4797                           	opt stack 20
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;incstack = 0
  4804  0077D2  C064  F05A         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4805  0077D6  C065  F05B         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4806                           
  4807                           ; BSR set to: 0
  4808  0077DA  0012               	return		;funcret
  4809  0077DC                     __end_of_INT1_SetInterruptHandler:
  4810                           	opt stack 0
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           intcon	equ	0xFF2
  4816                           intcon2	equ	0xFF1
  4817                           intcon3	equ	0xFF0
  4818                           postinc0	equ	0xFEE
  4819                           wreg	equ	0xFE8
  4820                           postdec2	equ	0xFDD
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           
  4824 ;; *************** function _INT0_SetInterruptHandler *****************
  4825 ;; Defined at:
  4826 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4829 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		None
  4836 ;; Tracked objects:
  4837 ;;		On entry : F/0
  4838 ;;		On exit  : F/0
  4839 ;;		Unchanged: F/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;Total ram usage:        2 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    7
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_EXT_INT_Initialize
  4852 ;;		_DIO5_ISR_Lora_Init
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text28
  4857  0078CE                     __ptext28:
  4858                           	opt stack 0
  4859  0078CE                     _INT0_SetInterruptHandler:
  4860                           	opt stack 20
  4861                           
  4862                           ; BSR set to: 0
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;incstack = 0
  4866  0078CE  0012               	return		;funcret
  4867  0078D0                     __end_of_INT0_SetInterruptHandler:
  4868                           	opt stack 0
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           intcon	equ	0xFF2
  4874                           intcon2	equ	0xFF1
  4875                           intcon3	equ	0xFF0
  4876                           postinc0	equ	0xFEE
  4877                           wreg	equ	0xFE8
  4878                           postdec2	equ	0xFDD
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           
  4882 ;; *************** function _LoRaWakeUp *****************
  4883 ;; Defined at:
  4884 ;;		line 269 in file "main.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : F/1
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    8
  4905 ;; This function calls:
  4906 ;;		_SPI2_Initialize
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text29
  4913  00782A                     __ptext29:
  4914                           	opt stack 0
  4915  00782A                     _LoRaWakeUp:
  4916                           	opt stack 22
  4917                           
  4918                           ; BSR set to: 1
  4919                           ;main.c: 271: MSSP2MD = 0;
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;incstack = 0
  4923  00782A  010F               	movlb	15	; () banked
  4924  00782C  9F3E               	bcf	62,7,b	;volatile
  4925                           
  4926                           ; BSR set to: 15
  4927                           ;main.c: 272: SPI2_Initialize();
  4928  00782E  EFCF  F03B         	goto	_SPI2_Initialize	;wreg free
  4929  007832                     __end_of_LoRaWakeUp:
  4930                           	opt stack 0
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           intcon	equ	0xFF2
  4936                           intcon2	equ	0xFF1
  4937                           intcon3	equ	0xFF0
  4938                           postinc0	equ	0xFEE
  4939                           wreg	equ	0xFE8
  4940                           postdec2	equ	0xFDD
  4941                           fsr2h	equ	0xFDA
  4942                           fsr2l	equ	0xFD9
  4943                           
  4944 ;; *************** function _SPI2_Initialize *****************
  4945 ;; Defined at:
  4946 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    7
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_SYSTEM_Initialize
  4971 ;;		_LoRaWakeUp
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text30
  4976  00779E                     __ptext30:
  4977                           	opt stack 0
  4978  00779E                     _SPI2_Initialize:
  4979                           	opt stack 22
  4980                           
  4981                           ;spi2.c: 68: SSP2STAT = 0x40;
  4982                           
  4983                           ;incstack = 0
  4984  00779E  0E40               	movlw	64
  4985  0077A0  6E6D               	movwf	3949,c	;volatile
  4986                           
  4987                           ;spi2.c: 71: SSP2CON1 = 0x20;
  4988  0077A2  0E20               	movlw	32
  4989  0077A4  6E6C               	movwf	3948,c	;volatile
  4990                           
  4991                           ;spi2.c: 74: SSP2ADD = 0x00;
  4992  0077A6  6A6E               	clrf	3950,c	;volatile
  4993  0077A8  0012               	return		;funcret
  4994  0077AA                     __end_of_SPI2_Initialize:
  4995                           	opt stack 0
  4996                           tblptru	equ	0xFF8
  4997                           tblptrh	equ	0xFF7
  4998                           tblptrl	equ	0xFF6
  4999                           tablat	equ	0xFF5
  5000                           intcon	equ	0xFF2
  5001                           intcon2	equ	0xFF1
  5002                           intcon3	equ	0xFF0
  5003                           postinc0	equ	0xFEE
  5004                           wreg	equ	0xFE8
  5005                           postdec2	equ	0xFDD
  5006                           fsr2h	equ	0xFDA
  5007                           fsr2l	equ	0xFD9
  5008                           
  5009 ;; *************** function _LoRaSleep *****************
  5010 ;; Defined at:
  5011 ;;		line 239 in file "main.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		None
  5020 ;; Tracked objects:
  5021 ;;		On entry : F/2
  5022 ;;		On exit  : F/F
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        0 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    7
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_main
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text31
  5040  0073BA                     __ptext31:
  5041                           	opt stack 0
  5042  0073BA                     _LoRaSleep:
  5043                           	opt stack 23
  5044                           
  5045                           ; BSR set to: 2
  5046                           ;main.c: 242: SSP2CON1 = 0x00;
  5047                           
  5048                           ;incstack = 0
  5049  0073BA  6A6C               	clrf	3948,c	;volatile
  5050                           
  5051                           ;main.c: 245: MSSP2MD = 1;
  5052  0073BC  010F               	movlb	15	; () banked
  5053  0073BE  8F3E               	bsf	62,7,b	;volatile
  5054                           
  5055                           ;main.c: 249: ANSD3 = 0;
  5056  0073C0  973B               	bcf	59,3,b	;volatile
  5057                           
  5058                           ;main.c: 250: TRISD3 = 0;
  5059  0073C2  9695               	bcf	3989,3,c	;volatile
  5060                           
  5061                           ;main.c: 251: LATD3 = 1;
  5062  0073C4  868C               	bsf	3980,3,c	;volatile
  5063                           
  5064                           ;main.c: 254: ANSD1 = 0;
  5065  0073C6  933B               	bcf	59,1,b	;volatile
  5066                           
  5067                           ;main.c: 255: TRISD1 = 0;
  5068  0073C8  9295               	bcf	3989,1,c	;volatile
  5069                           
  5070                           ;main.c: 256: LATD1 = 0;
  5071  0073CA  928C               	bcf	3980,1,c	;volatile
  5072                           
  5073                           ;main.c: 259: ANSD4 = 0;
  5074  0073CC  993B               	bcf	59,4,b	;volatile
  5075                           
  5076                           ;main.c: 260: TRISD4 = 0;
  5077  0073CE  9895               	bcf	3989,4,c	;volatile
  5078                           
  5079                           ;main.c: 261: LATD4 = 0;
  5080  0073D0  988C               	bcf	3980,4,c	;volatile
  5081                           
  5082                           ;main.c: 264: ANSD0 = 0;
  5083  0073D2  913B               	bcf	59,0,b	;volatile
  5084                           
  5085                           ;main.c: 265: TRISD0 = 0;
  5086  0073D4  9095               	bcf	3989,0,c	;volatile
  5087                           
  5088                           ;main.c: 266: LATD0 = 0;
  5089  0073D6  908C               	bcf	3980,0,c	;volatile
  5090                           
  5091                           ; BSR set to: 15
  5092  0073D8  0012               	return		;funcret
  5093  0073DA                     __end_of_LoRaSleep:
  5094                           	opt stack 0
  5095                           tblptru	equ	0xFF8
  5096                           tblptrh	equ	0xFF7
  5097                           tblptrl	equ	0xFF6
  5098                           tablat	equ	0xFF5
  5099                           intcon	equ	0xFF2
  5100                           intcon2	equ	0xFF1
  5101                           intcon3	equ	0xFF0
  5102                           postinc0	equ	0xFEE
  5103                           wreg	equ	0xFE8
  5104                           postdec2	equ	0xFDD
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           
  5108 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5109 ;; Defined at:
  5110 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5113 ;;		 -> nwkSKey(16), 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : F/0
  5122 ;;		On exit  : D/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:        2 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    8
  5132 ;; This function calls:
  5133 ;;		_memcpy
  5134 ;; This function is called by:
  5135 ;;		_main
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text32
  5140  00713A                     __ptext32:
  5141                           	opt stack 0
  5142  00713A                     _LORAWAN_SetNetworkSessionKey:
  5143                           	opt stack 22
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5147                           
  5148                           ; BSR set to: 15
  5149                           ;incstack = 0
  5150  00713A  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5151  00713C  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5152  00713E  B4D8               	btfsc	status,2,c
  5153  007140  0012               	return	
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;lorawan.c: 382: {
  5157                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5158  007142  0E22               	movlw	low (_loRa+34)
  5159  007144  6F64               	movwf	memcpy@d1& (0+255),b
  5160  007146  0E02               	movlw	high (_loRa+34)
  5161  007148  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5162  00714A  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5163  00714E  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5164  007152  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5165  007154  0E10               	movlw	16
  5166  007156  6F68               	movwf	memcpy@n& (0+255),b
  5167  007158  ECFF  F033         	call	_memcpy	;wreg free
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5171  00715C  0102               	movlb	2	; () banked
  5172  00715E  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5173                           
  5174                           ; BSR set to: 2
  5175                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5176  007160  9902               	bcf	(_loRa+2)& (0+255),4,b
  5177  007162  0012               	return		;funcret
  5178  007164                     __end_of_LORAWAN_SetNetworkSessionKey:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           intcon	equ	0xFF2
  5185                           intcon2	equ	0xFF1
  5186                           intcon3	equ	0xFF0
  5187                           postinc0	equ	0xFEE
  5188                           wreg	equ	0xFE8
  5189                           postdec2	equ	0xFDD
  5190                           fsr2h	equ	0xFDA
  5191                           fsr2l	equ	0xFD9
  5192                           status	equ	0xFD8
  5193                           
  5194 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5195 ;; Defined at:
  5196 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		None
  5205 ;; Tracked objects:
  5206 ;;		On entry : F/0
  5207 ;;		On exit  : F/2
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;Total ram usage:        4 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    7
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_main
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text33
  5225  0075D8                     __ptext33:
  5226                           	opt stack 0
  5227  0075D8                     _LORAWAN_SetDeviceAddress:
  5228                           	opt stack 23
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5232                           
  5233                           ;incstack = 0
  5234  0075D8  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5235  0075DC  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5236  0075E0  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5237  0075E4  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5238                           
  5239                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5240  0075E8  0102               	movlb	2	; () banked
  5241  0075EA  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5242                           
  5243                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5244  0075EC  9902               	bcf	(_loRa+2)& (0+255),4,b
  5245                           
  5246                           ; BSR set to: 2
  5247  0075EE  0012               	return		;funcret
  5248  0075F0                     __end_of_LORAWAN_SetDeviceAddress:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           intcon	equ	0xFF2
  5255                           intcon2	equ	0xFF1
  5256                           intcon3	equ	0xFF0
  5257                           postinc0	equ	0xFEE
  5258                           wreg	equ	0xFE8
  5259                           postdec2	equ	0xFDD
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5265 ;; Defined at:
  5266 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5269 ;;		 -> appSKey(16), 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      void 
  5274 ;; Registers used:
  5275 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : F/0
  5278 ;;		On exit  : D/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;Total ram usage:        2 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    8
  5288 ;; This function calls:
  5289 ;;		_memcpy
  5290 ;; This function is called by:
  5291 ;;		_main
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text34
  5296  007164                     __ptext34:
  5297                           	opt stack 0
  5298  007164                     _LORAWAN_SetApplicationSessionKey:
  5299                           	opt stack 22
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5303                           
  5304                           ; BSR set to: 2
  5305                           ;incstack = 0
  5306  007164  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5307  007166  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5308  007168  B4D8               	btfsc	status,2,c
  5309  00716A  0012               	return	
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;lorawan.c: 397: {
  5313                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5314  00716C  0E32               	movlw	low (_loRa+50)
  5315  00716E  6F64               	movwf	memcpy@d1& (0+255),b
  5316  007170  0E02               	movlw	high (_loRa+50)
  5317  007172  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5318  007174  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5319  007178  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5320  00717C  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5321  00717E  0E10               	movlw	16
  5322  007180  6F68               	movwf	memcpy@n& (0+255),b
  5323  007182  ECFF  F033         	call	_memcpy	;wreg free
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5327  007186  0102               	movlb	2	; () banked
  5328  007188  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5329                           
  5330                           ; BSR set to: 2
  5331                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5332  00718A  9902               	bcf	(_loRa+2)& (0+255),4,b
  5333  00718C  0012               	return		;funcret
  5334  00718E                     __end_of_LORAWAN_SetApplicationSessionKey:
  5335                           	opt stack 0
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           intcon	equ	0xFF2
  5341                           intcon2	equ	0xFF1
  5342                           intcon3	equ	0xFF0
  5343                           postinc0	equ	0xFEE
  5344                           wreg	equ	0xFE8
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function _LORAWAN_Mainloop *****************
  5351 ;; Defined at:
  5352 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/1
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:   18
  5373 ;; This function calls:
  5374 ;;		_INTERRUPT_GetDioStatus
  5375 ;;		_RADIO_DIO0
  5376 ;;		_RADIO_DIO1
  5377 ;;		_RADIO_DIO2
  5378 ;;		_RADIO_DIO3
  5379 ;;		_RADIO_DIO4
  5380 ;;		_RADIO_DIO5
  5381 ;;		_SwTimersExecute
  5382 ;; This function is called by:
  5383 ;;		_main
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text35
  5388  006DFA                     __ptext35:
  5389                           	opt stack 0
  5390  006DFA                     _LORAWAN_Mainloop:
  5391                           	opt stack 12
  5392                           
  5393                           ;lorawan.c: 2240: SwTimersExecute();
  5394                           
  5395                           ;incstack = 0
  5396  006DFA  ECC9  F02B         	call	_SwTimersExecute	;wreg free
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5400  006DFE  EC8E  F03B         	call	_INTERRUPT_GetDioStatus	;wreg free
  5401  006E02  6FF1               	movwf	_localDioStatus& (0+255),b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5405  006E04  B1F1               	btfsc	_localDioStatus& (0+255),0,b
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;lorawan.c: 2246: {
  5409                           ;lorawan.c: 2247: RADIO_DIO0();
  5410  006E06  EC20  F032         	call	_RADIO_DIO0	;wreg free
  5411                           
  5412                           ;lorawan.c: 2248: }
  5413                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5414  006E0A  0100               	movlb	0	; () banked
  5415  006E0C  B3F1               	btfsc	_localDioStatus& (0+255),1,b
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;lorawan.c: 2250: {
  5419                           ;lorawan.c: 2251: RADIO_DIO1();
  5420  006E0E  EC1A  F037         	call	_RADIO_DIO1	;wreg free
  5421                           
  5422                           ;lorawan.c: 2252: }
  5423                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5424  006E12  0100               	movlb	0	; () banked
  5425  006E14  B5F1               	btfsc	_localDioStatus& (0+255),2,b
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;lorawan.c: 2254: {
  5429                           ;lorawan.c: 2255: RADIO_DIO2();
  5430  006E16  ECD6  F035         	call	_RADIO_DIO2	;wreg free
  5431                           
  5432                           ;lorawan.c: 2256: }
  5433                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5434  006E1A  0100               	movlb	0	; () banked
  5435  006E1C  B7F1               	btfsc	_localDioStatus& (0+255),3,b
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;lorawan.c: 2258: {
  5439                           ;lorawan.c: 2259: RADIO_DIO3();
  5440  006E1E  EC10  F03B         	call	_RADIO_DIO3	;wreg free
  5441                           
  5442                           ;lorawan.c: 2260: }
  5443                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5444  006E22  0100               	movlb	0	; () banked
  5445  006E24  B9F1               	btfsc	_localDioStatus& (0+255),4,b
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;lorawan.c: 2262: {
  5449                           ;lorawan.c: 2263: RADIO_DIO4();
  5450  006E26  EC04  F03B         	call	_RADIO_DIO4	;wreg free
  5451                           
  5452                           ;lorawan.c: 2264: }
  5453                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5454  006E2A  0100               	movlb	0	; () banked
  5455  006E2C  BBF1               	btfsc	_localDioStatus& (0+255),5,b
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;lorawan.c: 2266: {
  5459                           ;lorawan.c: 2267: RADIO_DIO5();
  5460  006E2E  ECF8  F03A         	call	_RADIO_DIO5	;wreg free
  5461  006E32  0012               	return		;funcret
  5462  006E34                     __end_of_LORAWAN_Mainloop:
  5463                           	opt stack 0
  5464                           tblptru	equ	0xFF8
  5465                           tblptrh	equ	0xFF7
  5466                           tblptrl	equ	0xFF6
  5467                           tablat	equ	0xFF5
  5468                           intcon	equ	0xFF2
  5469                           intcon2	equ	0xFF1
  5470                           intcon3	equ	0xFF0
  5471                           postinc0	equ	0xFEE
  5472                           wreg	equ	0xFE8
  5473                           postdec2	equ	0xFDD
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _SwTimersExecute *****************
  5479 ;; Defined at:
  5480 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  i               1  129[BANK0 ] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/1
  5491 ;;		On exit  : F/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        5 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:   17
  5501 ;; This function calls:
  5502 ;;		Absolute function
  5503 ;;		_AckRetransmissionCallback
  5504 ;;		_AutomaticReplyCallback
  5505 ;;		_DutyCycleCallback
  5506 ;;		_LORAWAN_LinkCheckCallback
  5507 ;;		_LORAWAN_ReceiveWindow1Callback
  5508 ;;		_LORAWAN_ReceiveWindow2Callback
  5509 ;;		_RADIO_RxFSKTimeout
  5510 ;;		_RADIO_WatchdogTimeout
  5511 ;;		_UnconfirmedTransmissionCallback
  5512 ;;		_UpdateJoinSuccessState
  5513 ;; This function is called by:
  5514 ;;		_LORAWAN_Mainloop
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text36
  5519  005792                     __ptext36:
  5520                           	opt stack 0
  5521  005792                     _SwTimersExecute:
  5522                           	opt stack 12
  5523                           
  5524                           ;sw_timer.c: 262: uint8_t i;
  5525                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5526                           
  5527                           ;incstack = 0
  5528  005792  9EF2               	bcf	intcon,7,c	;volatile
  5529                           
  5530                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5531  005794  0100               	movlb	0	; () banked
  5532  005796  6BE1               	clrf	SwTimersExecute@i& (0+255),b
  5533  005798  D050               	goto	l16009
  5534  00579A                     l15995:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;sw_timer.c: 266: {
  5538                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5539  00579A  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5540  00579C  0D08               	mullw	8
  5541  00579E  0E04               	movlw	low (_swTimers+4)
  5542  0057A0  24F3               	addwf	prodl,w,c
  5543  0057A2  6ED9               	movwf	fsr2l,c
  5544  0057A4  0E03               	movlw	high (_swTimers+4)
  5545  0057A6  20F4               	addwfc	prodh,w,c
  5546  0057A8  6EDA               	movwf	fsr2h,c
  5547  0057AA  04DE               	decf	postinc2,w,c
  5548  0057AC  E144               	bnz	l16007
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;sw_timer.c: 270: {
  5552                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5553  0057AE  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5554  0057B0  0D08               	mullw	8
  5555  0057B2  0E00               	movlw	low _swTimers
  5556  0057B4  24F3               	addwf	prodl,w,c
  5557  0057B6  6ED9               	movwf	fsr2l,c
  5558  0057B8  0E03               	movlw	high _swTimers
  5559  0057BA  20F4               	addwfc	prodh,w,c
  5560  0057BC  6EDA               	movwf	fsr2h,c
  5561  0057BE  50DE               	movf	postinc2,w,c
  5562  0057C0  10DE               	iorwf	postinc2,w,c
  5563  0057C2  10DE               	iorwf	postinc2,w,c
  5564  0057C4  10DE               	iorwf	postinc2,w,c
  5565  0057C6  E137               	bnz	l16007
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;sw_timer.c: 272: {
  5569                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5570  0057C8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5571  0057CA  0D08               	mullw	8
  5572  0057CC  0E04               	movlw	low (_swTimers+4)
  5573  0057CE  24F3               	addwf	prodl,w,c
  5574  0057D0  6ED9               	movwf	fsr2l,c
  5575  0057D2  0E03               	movlw	high (_swTimers+4)
  5576  0057D4  20F4               	addwfc	prodh,w,c
  5577  0057D6  6EDA               	movwf	fsr2h,c
  5578  0057D8  6ADF               	clrf	indf2,c
  5579                           
  5580                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5581  0057DA  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5582  0057DC  0D08               	mullw	8
  5583  0057DE  0E06               	movlw	low (_swTimers+6)
  5584  0057E0  24F3               	addwf	prodl,w,c
  5585  0057E2  6ED9               	movwf	fsr2l,c
  5586  0057E4  0E03               	movlw	high (_swTimers+6)
  5587  0057E6  20F4               	addwfc	prodh,w,c
  5588  0057E8  6EDA               	movwf	fsr2h,c
  5589  0057EA  50DE               	movf	postinc2,w,c
  5590  0057EC  10DE               	iorwf	postinc2,w,c
  5591  0057EE  E023               	bz	l16007
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;sw_timer.c: 275: {
  5595                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5596  0057F0  8EF2               	bsf	intcon,7,c	;volatile
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5600  0057F2  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5601  0057F4  0D08               	mullw	8
  5602  0057F6  0E05               	movlw	low (_swTimers+5)
  5603  0057F8  24F3               	addwf	prodl,w,c
  5604  0057FA  6ED9               	movwf	fsr2l,c
  5605  0057FC  0E03               	movlw	high (_swTimers+5)
  5606  0057FE  20F4               	addwfc	prodh,w,c
  5607  005800  6EDA               	movwf	fsr2h,c
  5608  005802  50DF               	movf	indf2,w,c
  5609  005804  6EE6               	movwf	postinc1,c
  5610  005806  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5611  005808  0D08               	mullw	8
  5612  00580A  0E06               	movlw	low (_swTimers+6)
  5613  00580C  24F3               	addwf	prodl,w,c
  5614  00580E  6ED9               	movwf	fsr2l,c
  5615  005810  0E03               	movlw	high (_swTimers+6)
  5616  005812  20F4               	addwfc	prodh,w,c
  5617  005814  6EDA               	movwf	fsr2h,c
  5618  005816  CFDE F0DD          	movff	postinc2,??_SwTimersExecute
  5619  00581A  CFDD F0DE          	movff	postdec2,??_SwTimersExecute+1
  5620  00581E  D801               	call	u19288
  5621  005820  D009               	goto	l16005
  5622  005822                     u19288:
  5623  005822  0005               	push	
  5624  005824  6EFA               	movwf	pclath,c
  5625  005826  51DD               	movf	??_SwTimersExecute& (0+255),w,b
  5626  005828  6EFD               	movwf	tosl,c
  5627  00582A  51DE               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5628  00582C  6EFE               	movwf	tosh,c
  5629  00582E  6AFF               	clrf	tosu,c
  5630  005830  50FA               	movf	pclath,w,c
  5631  005832  0012               	return		;indir
  5632  005834                     l16005:
  5633                           
  5634                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5635  005834  9EF2               	bcf	intcon,7,c	;volatile
  5636  005836                     l16007:
  5637  005836  0100               	movlb	0	; () banked
  5638  005838  2BE1               	incf	SwTimersExecute@i& (0+255),f,b
  5639  00583A                     l16009:
  5640                           
  5641                           ; BSR set to: 0
  5642  00583A  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5643  00583C  5DE1               	subwf	SwTimersExecute@i& (0+255),w,b
  5644  00583E  E3AD               	bnc	l15995
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;sw_timer.c: 279: }
  5648                           ;sw_timer.c: 280: }
  5649                           ;sw_timer.c: 281: }
  5650                           ;sw_timer.c: 282: }
  5651                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5652  005840  8EF2               	bsf	intcon,7,c	;volatile
  5653                           
  5654                           ; BSR set to: 0
  5655  005842  0012               	return		;funcret
  5656  005844                     __end_of_SwTimersExecute:
  5657                           	opt stack 0
  5658                           tosu	equ	0xFFF
  5659                           tosh	equ	0xFFE
  5660                           tosl	equ	0xFFD
  5661                           pclath	equ	0xFFA
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           intcon2	equ	0xFF1
  5670                           intcon3	equ	0xFF0
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           postinc1	equ	0xFE6
  5674                           indf2	equ	0xFDF
  5675                           postinc2	equ	0xFDE
  5676                           postdec2	equ	0xFDD
  5677                           fsr2h	equ	0xFDA
  5678                           fsr2l	equ	0xFD9
  5679                           status	equ	0xFD8
  5680                           
  5681 ;; *************** function _DutyCycleCallback *****************
  5682 ;; Defined at:
  5683 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  param           1  [STACK] unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  minim           4  [STACK] unsigned long 
  5688 ;;  i               1  [STACK] unsigned char 
  5689 ;;  found           1  [STACK] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1  [STACK] void 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : F/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:   11
  5706 ;; This function calls:
  5707 ;;		_SwTimerSetTimeout
  5708 ;;		_SwTimerStart
  5709 ;;		___lldiv
  5710 ;; This function is called by:
  5711 ;;		_SetCallbackSoftwareTimers
  5712 ;;		_SwTimersExecute
  5713 ;; This function uses a reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text37
  5717  002102                     __ptext37:
  5718                           	opt stack 0
  5719  002102                     _DutyCycleCallback:
  5720                           	opt stack 0
  5721                           
  5722                           ; BSR set to: 0
  5723                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5724  002102  0E0A               	movlw	10
  5725  002104  26E1               	addwf	fsr1l,f,c
  5726  002106  0E00               	movlw	0
  5727  002108  22E2               	addwfc	fsr1h,f,c
  5728                           
  5729                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5730                           
  5731                           ;incstack = 0
  5732  00210A  684E               	setf	btemp+8,c
  5733  00210C  684F               	setf	btemp+9,c
  5734  00210E  6850               	setf	btemp+10,c
  5735  002110  6851               	setf	btemp+11,c
  5736                           
  5737                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5738  002112  0EFA               	movlw	-6
  5739  002114  C04E  FFE3         	movff	btemp+8,plusw1
  5740  002118  0EFB               	movlw	-5
  5741  00211A  C04F  FFE3         	movff	btemp+9,plusw1
  5742  00211E  0EFC               	movlw	-4
  5743  002120  C050  FFE3         	movff	btemp+10,plusw1
  5744  002124  0EFD               	movlw	-3
  5745  002126  C051  FFE3         	movff	btemp+11,plusw1
  5746                           
  5747                           ;lorawan_eu.c: 1224: bool found = 0;
  5748                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5749  00212A  0EFF               	movlw	-1
  5750  00212C  6AE3               	clrf	plusw1,c
  5751                           
  5752                           ;lorawan_eu.c: 1225: uint8_t i;
  5753                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5754                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5755  00212E  0EFE               	movlw	-2
  5756  002130  6AE3               	clrf	plusw1,c
  5757  002132                     l14997:
  5758                           
  5759                           ;lorawan_eu.c: 1228: {
  5760                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5761                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5762  002132  0EFE               	movlw	-2
  5763  002134  50E3               	movf	plusw1,w,c
  5764  002136  0D0E               	mullw	14
  5765  002138  0E04               	movlw	low (_Channels+4)
  5766  00213A  24F3               	addwf	prodl,w,c
  5767  00213C  6ED9               	movwf	fsr2l,c
  5768  00213E  0E04               	movlw	high (_Channels+4)
  5769  002140  20F4               	addwfc	prodh,w,c
  5770  002142  6EDA               	movwf	fsr2h,c
  5771  002144  04DE               	decf	postinc2,w,c
  5772  002146  E001 D0AA          	bnz	l15015
  5773                           
  5774                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5775  00214A  0EFE               	movlw	-2
  5776  00214C  50E3               	movf	plusw1,w,c
  5777  00214E  0D0E               	mullw	14
  5778  002150  0E08               	movlw	low (_Channels+8)
  5779  002152  24F3               	addwf	prodl,w,c
  5780  002154  6ED9               	movwf	fsr2l,c
  5781  002156  0E04               	movlw	high (_Channels+8)
  5782  002158  20F4               	addwfc	prodh,w,c
  5783  00215A  6EDA               	movwf	fsr2h,c
  5784  00215C  50DE               	movf	postinc2,w,c
  5785  00215E  10DE               	iorwf	postinc2,w,c
  5786  002160  10DE               	iorwf	postinc2,w,c
  5787  002162  10DE               	iorwf	postinc2,w,c
  5788  002164  E101 D09B          	bz	l15015
  5789                           
  5790                           ;lorawan_eu.c: 1231: {
  5791                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5792                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5793  002168  0EFE               	movlw	-2
  5794  00216A  50E3               	movf	plusw1,w,c
  5795  00216C  0D0E               	mullw	14
  5796  00216E  0E08               	movlw	low (_Channels+8)
  5797  002170  24F3               	addwf	prodl,w,c
  5798  002172  6ED9               	movwf	fsr2l,c
  5799  002174  0E04               	movlw	high (_Channels+8)
  5800  002176  20F4               	addwfc	prodh,w,c
  5801  002178  6EDA               	movwf	fsr2h,c
  5802  00217A  50DE               	movf	postinc2,w,c
  5803  00217C  0102               	movlb	2	; () banked
  5804  00217E  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5805  002180  50DE               	movf	postinc2,w,c
  5806  002182  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5807  002184  50DE               	movf	postinc2,w,c
  5808  002186  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5809  002188  50DE               	movf	postinc2,w,c
  5810  00218A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5811  00218C  E22F               	bc	l15005
  5812                           
  5813                           ; BSR set to: 2
  5814                           ;lorawan_eu.c: 1233: {
  5815                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5816                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5817  00218E  0EFE               	movlw	-2
  5818  002190  50E3               	movf	plusw1,w,c
  5819  002192  0D0E               	mullw	14
  5820  002194  0E08               	movlw	low (_Channels+8)
  5821  002196  24F3               	addwf	prodl,w,c
  5822  002198  6ED9               	movwf	fsr2l,c
  5823  00219A  0E04               	movlw	high (_Channels+8)
  5824  00219C  20F4               	addwfc	prodh,w,c
  5825  00219E  6EDA               	movwf	fsr2h,c
  5826  0021A0  CFDE F04E          	movff	postinc2,btemp+8
  5827  0021A4  CFDE F04F          	movff	postinc2,btemp+9
  5828  0021A8  CFDE F050          	movff	postinc2,btemp+10
  5829  0021AC  CFDE F051          	movff	postinc2,btemp+11
  5830  0021B0  51C8               	movf	(_loRa+200)& (0+255),w,b
  5831  0021B2  5C4E               	subwf	btemp+8,w,c
  5832  0021B4  6E4A               	movwf	btemp+4,c
  5833  0021B6  51C9               	movf	(_loRa+201)& (0+255),w,b
  5834  0021B8  584F               	subwfb	btemp+9,w,c
  5835  0021BA  6E4B               	movwf	btemp+5,c
  5836  0021BC  51CA               	movf	(_loRa+202)& (0+255),w,b
  5837  0021BE  5850               	subwfb	btemp+10,w,c
  5838  0021C0  6E4C               	movwf	btemp+6,c
  5839  0021C2  51CB               	movf	(_loRa+203)& (0+255),w,b
  5840  0021C4  5851               	subwfb	btemp+11,w,c
  5841  0021C6  6E4D               	movwf	btemp+7,c
  5842                           
  5843                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5844  0021C8  0EFE               	movlw	-2
  5845  0021CA  50E3               	movf	plusw1,w,c
  5846  0021CC  0D0E               	mullw	14
  5847  0021CE  0E08               	movlw	low (_Channels+8)
  5848  0021D0  24F3               	addwf	prodl,w,c
  5849  0021D2  6ED9               	movwf	fsr2l,c
  5850  0021D4  0E04               	movlw	high (_Channels+8)
  5851  0021D6  20F4               	addwfc	prodh,w,c
  5852  0021D8  6EDA               	movwf	fsr2h,c
  5853  0021DA  C04A  FFDE         	movff	btemp+4,postinc2
  5854  0021DE  C04B  FFDE         	movff	btemp+5,postinc2
  5855  0021E2  C04C  FFDE         	movff	btemp+6,postinc2
  5856  0021E6  C04D  FFDE         	movff	btemp+7,postinc2
  5857                           
  5858                           ;lorawan_eu.c: 1235: }
  5859  0021EA  D00D               	goto	l15007
  5860  0021EC                     l15005:
  5861                           
  5862                           ; BSR set to: 2
  5863                           ;lorawan_eu.c: 1236: else
  5864                           ;lorawan_eu.c: 1237: {
  5865                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5866                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5867  0021EC  0EFE               	movlw	-2
  5868  0021EE  50E3               	movf	plusw1,w,c
  5869  0021F0  0D0E               	mullw	14
  5870  0021F2  0E08               	movlw	low (_Channels+8)
  5871  0021F4  24F3               	addwf	prodl,w,c
  5872  0021F6  6ED9               	movwf	fsr2l,c
  5873  0021F8  0E04               	movlw	high (_Channels+8)
  5874  0021FA  20F4               	addwfc	prodh,w,c
  5875  0021FC  6EDA               	movwf	fsr2h,c
  5876  0021FE  6ADE               	clrf	postinc2,c
  5877  002200  6ADE               	clrf	postinc2,c
  5878  002202  6ADE               	clrf	postinc2,c
  5879  002204  6ADD               	clrf	postdec2,c
  5880  002206                     l15007:
  5881                           
  5882                           ; BSR set to: 2
  5883                           ;lorawan_eu.c: 1239: }
  5884                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5885                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5886  002206  0EFE               	movlw	-2
  5887  002208  50E3               	movf	plusw1,w,c
  5888  00220A  0D0E               	mullw	14
  5889  00220C  0E08               	movlw	low (_Channels+8)
  5890  00220E  24F3               	addwf	prodl,w,c
  5891  002210  6ED9               	movwf	fsr2l,c
  5892  002212  0E04               	movlw	high (_Channels+8)
  5893  002214  20F4               	addwfc	prodh,w,c
  5894  002216  6EDA               	movwf	fsr2h,c
  5895                           
  5896                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5897  002218  0EFA               	movlw	-6
  5898  00221A  CFE3 F047          	movff	plusw1,btemp+1
  5899  00221E  50DE               	movf	postinc2,w,c
  5900  002220  5C47               	subwf	btemp+1,w,c
  5901  002222  0EFB               	movlw	-5
  5902  002224  CFE3 F047          	movff	plusw1,btemp+1
  5903  002228  50DE               	movf	postinc2,w,c
  5904  00222A  5847               	subwfb	btemp+1,w,c
  5905  00222C  0EFC               	movlw	-4
  5906  00222E  CFE3 F047          	movff	plusw1,btemp+1
  5907  002232  50DE               	movf	postinc2,w,c
  5908  002234  5847               	subwfb	btemp+1,w,c
  5909  002236  0EFD               	movlw	-3
  5910  002238  CFE3 F047          	movff	plusw1,btemp+1
  5911  00223C  50DE               	movf	postinc2,w,c
  5912  00223E  5847               	subwfb	btemp+1,w,c
  5913  002240  E32E               	bnc	l15015
  5914                           
  5915                           ; BSR set to: 2
  5916                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5917  002242  0EFE               	movlw	-2
  5918  002244  50E3               	movf	plusw1,w,c
  5919  002246  0D0E               	mullw	14
  5920  002248  0E08               	movlw	low (_Channels+8)
  5921  00224A  24F3               	addwf	prodl,w,c
  5922  00224C  6ED9               	movwf	fsr2l,c
  5923  00224E  0E04               	movlw	high (_Channels+8)
  5924  002250  20F4               	addwfc	prodh,w,c
  5925  002252  6EDA               	movwf	fsr2h,c
  5926  002254  50DE               	movf	postinc2,w,c
  5927  002256  10DE               	iorwf	postinc2,w,c
  5928  002258  10DE               	iorwf	postinc2,w,c
  5929  00225A  10DE               	iorwf	postinc2,w,c
  5930  00225C  E020               	bz	l15015
  5931                           
  5932                           ; BSR set to: 2
  5933                           ;lorawan_eu.c: 1241: {
  5934                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5935                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5936  00225E  0EFE               	movlw	-2
  5937  002260  50E3               	movf	plusw1,w,c
  5938  002262  0D0E               	mullw	14
  5939  002264  0E08               	movlw	low (_Channels+8)
  5940  002266  24F3               	addwf	prodl,w,c
  5941  002268  6ED9               	movwf	fsr2l,c
  5942  00226A  0E04               	movlw	high (_Channels+8)
  5943  00226C  20F4               	addwfc	prodh,w,c
  5944  00226E  6EDA               	movwf	fsr2h,c
  5945  002270  CFDE F04E          	movff	postinc2,btemp+8
  5946  002274  CFDE F04F          	movff	postinc2,btemp+9
  5947  002278  CFDE F050          	movff	postinc2,btemp+10
  5948  00227C  CFDE F051          	movff	postinc2,btemp+11
  5949                           
  5950                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5951  002280  0EFA               	movlw	-6
  5952  002282  C04E  FFE3         	movff	btemp+8,plusw1
  5953  002286  0EFB               	movlw	-5
  5954  002288  C04F  FFE3         	movff	btemp+9,plusw1
  5955  00228C  0EFC               	movlw	-4
  5956  00228E  C050  FFE3         	movff	btemp+10,plusw1
  5957  002292  0EFD               	movlw	-3
  5958  002294  C051  FFE3         	movff	btemp+11,plusw1
  5959                           
  5960                           ; BSR set to: 2
  5961                           ;lorawan_eu.c: 1243: found = 1;
  5962                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5963  002298  0EFF               	movlw	-1
  5964  00229A  6AE3               	clrf	plusw1,c
  5965  00229C  2AE3               	incf	plusw1,f,c
  5966  00229E                     l15015:
  5967                           
  5968                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5969  00229E  0EFE               	movlw	-2
  5970  0022A0  2AE3               	incf	plusw1,f,c
  5971                           
  5972                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5973  0022A2  CFE3 F047          	movff	plusw1,btemp+1
  5974  0022A6  0E0F               	movlw	15
  5975  0022A8  6447               	cpfsgt	btemp+1,c
  5976  0022AA  D743               	goto	l14997
  5977                           
  5978                           ;lorawan_eu.c: 1244: }
  5979                           ;lorawan_eu.c: 1245: }
  5980                           ;lorawan_eu.c: 1246: }
  5981                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5982                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5983  0022AC  0EFF               	movlw	-1
  5984  0022AE  04E3               	decf	plusw1,w,c
  5985  0022B0  E001 D096          	bnz	l1297
  5986                           
  5987                           ;lorawan_eu.c: 1248: {
  5988                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5989                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5990  0022B4  50E1               	movf	fsr1l,w,c
  5991  0022B6  0FFA               	addlw	-6
  5992  0022B8  6ED9               	movwf	fsr2l,c
  5993  0022BA  50E2               	movf	fsr1h,w,c
  5994  0022BC  6EDA               	movwf	fsr2h,c
  5995  0022BE  0EFF               	movlw	255
  5996  0022C0  22DA               	addwfc	fsr2h,f,c
  5997  0022C2  CFDE F2C8          	movff	postinc2,_loRa+200
  5998  0022C6  CFDE F2C9          	movff	postinc2,_loRa+201
  5999  0022CA  CFDE F2CA          	movff	postinc2,_loRa+202
  6000  0022CE  CFDE F2CB          	movff	postinc2,_loRa+203
  6001                           
  6002                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6003                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6004  0022D2  0EFD               	movlw	-3
  6005  0022D4  50E3               	movf	plusw1,w,c
  6006  0022D6  E10D               	bnz	u17490
  6007  0022D8  0EFA               	movlw	-6
  6008  0022DA  28E3               	incf	plusw1,w,c
  6009  0022DC  0EFB               	movlw	-5
  6010  0022DE  CFE3 F047          	movff	plusw1,btemp+1
  6011  0022E2  0EFF               	movlw	255
  6012  0022E4  5A47               	subwfb	btemp+1,f,c
  6013  0022E6  0EFC               	movlw	-4
  6014  0022E8  CFE3 F047          	movff	plusw1,btemp+1
  6015  0022EC  0E0F               	movlw	15
  6016  0022EE  5A47               	subwfb	btemp+1,f,c
  6017  0022F0  E328               	bnc	l15027
  6018  0022F2                     u17490:
  6019                           
  6020                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6021  0022F2  50E1               	movf	fsr1l,w,c
  6022  0022F4  0FFA               	addlw	-6
  6023  0022F6  6ED9               	movwf	fsr2l,c
  6024  0022F8  50E2               	movf	fsr1h,w,c
  6025  0022FA  6EDA               	movwf	fsr2h,c
  6026  0022FC  0EFF               	movlw	255
  6027  0022FE  22DA               	addwfc	fsr2h,f,c
  6028  002300  CFDE F064          	movff	postinc2,___lldiv@dividend
  6029  002304  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6030  002308  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6031  00230C  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6032  002310  0E7D               	movlw	125
  6033  002312  0100               	movlb	0	; () banked
  6034  002314  6F68               	movwf	___lldiv@divisor& (0+255),b
  6035  002316  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6036  002318  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6037  00231A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6038  00231C  EC0B  F030         	call	___lldiv	;wreg free
  6039  002320  C064  F04E         	movff	?___lldiv,btemp+8
  6040  002324  C065  F04F         	movff	?___lldiv+1,btemp+9
  6041  002328  C066  F050         	movff	?___lldiv+2,btemp+10
  6042  00232C  C067  F051         	movff	?___lldiv+3,btemp+11
  6043  002330  0E0C               	movlw	12
  6044  002332                     u17505:
  6045  002332  90D8               	bcf	status,0,c
  6046  002334  364E               	rlcf	btemp+8,f,c
  6047  002336  364F               	rlcf	btemp+9,f,c
  6048  002338  3650               	rlcf	btemp+10,f,c
  6049  00233A  3651               	rlcf	btemp+11,f,c
  6050  00233C  2EE8               	decfsz	wreg,f,c
  6051  00233E  D7F9               	goto	u17505
  6052  002340  D02C               	goto	L1
  6053  002342                     l15027:
  6054                           
  6055                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6056  002342  0EFA               	movlw	-6
  6057  002344  CFE3 F04E          	movff	plusw1,btemp+8
  6058  002348  0EFB               	movlw	-5
  6059  00234A  CFE3 F04F          	movff	plusw1,btemp+9
  6060  00234E  0EFC               	movlw	-4
  6061  002350  CFE3 F050          	movff	plusw1,btemp+10
  6062  002354  0EFD               	movlw	-3
  6063  002356  CFE3 F051          	movff	plusw1,btemp+11
  6064  00235A  0E0C               	movlw	12
  6065  00235C                     u17515:
  6066  00235C  90D8               	bcf	status,0,c
  6067  00235E  364E               	rlcf	btemp+8,f,c
  6068  002360  364F               	rlcf	btemp+9,f,c
  6069  002362  3650               	rlcf	btemp+10,f,c
  6070  002364  3651               	rlcf	btemp+11,f,c
  6071  002366  2EE8               	decfsz	wreg,f,c
  6072  002368  D7F9               	goto	u17515
  6073  00236A  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6074  00236E  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6075  002372  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6076  002376  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6077  00237A  0E7D               	movlw	125
  6078  00237C  0100               	movlb	0	; () banked
  6079  00237E  6F68               	movwf	___lldiv@divisor& (0+255),b
  6080  002380  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6081  002382  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6082  002384  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6083  002386  EC0B  F030         	call	___lldiv	;wreg free
  6084  00238A  C064  F04E         	movff	?___lldiv,btemp+8
  6085  00238E  C065  F04F         	movff	?___lldiv+1,btemp+9
  6086  002392  C066  F050         	movff	?___lldiv+2,btemp+10
  6087  002396  C067  F051         	movff	?___lldiv+3,btemp+11
  6088  00239A                     L1:
  6089                           
  6090                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6091  00239A  0EF6               	movlw	-10
  6092  00239C  C04E  FFE3         	movff	btemp+8,plusw1
  6093  0023A0  0EF7               	movlw	-9
  6094  0023A2  C04F  FFE3         	movff	btemp+9,plusw1
  6095  0023A6  0EF8               	movlw	-8
  6096  0023A8  C050  FFE3         	movff	btemp+10,plusw1
  6097  0023AC  0EF9               	movlw	-7
  6098  0023AE  C051  FFE3         	movff	btemp+11,plusw1
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6102  0023B2  50E1               	movf	fsr1l,w,c
  6103  0023B4  0FF6               	addlw	-10
  6104  0023B6  6ED9               	movwf	fsr2l,c
  6105  0023B8  50E2               	movf	fsr1h,w,c
  6106  0023BA  6EDA               	movwf	fsr2h,c
  6107  0023BC  0EFF               	movlw	255
  6108  0023BE  22DA               	addwfc	fsr2h,f,c
  6109  0023C0  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6110  0023C4  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6111  0023C8  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6112  0023CC  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6113  0023D0  0102               	movlb	2	; () banked
  6114  0023D2  51E9               	movf	(_loRa+233)& (0+255),w,b
  6115  0023D4  EC60  F036         	call	_SwTimerSetTimeout
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6119  0023D8  0102               	movlb	2	; () banked
  6120  0023DA  51E9               	movf	(_loRa+233)& (0+255),w,b
  6121  0023DC  EC49  F02E         	call	_SwTimerStart
  6122  0023E0                     l1297:
  6123                           
  6124                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6125  0023E0  0EF5               	movlw	245
  6126  0023E2  26E1               	addwf	fsr1l,f,c
  6127  0023E4  0EFF               	movlw	255
  6128  0023E6  22E2               	addwfc	fsr1h,f,c
  6129  0023E8  0CFF               	retlw	255	;funcret
  6130  0023EA                     __end_of_DutyCycleCallback:
  6131                           	opt stack 0
  6132                           tosu	equ	0xFFF
  6133                           tosh	equ	0xFFE
  6134                           tosl	equ	0xFFD
  6135                           pclath	equ	0xFFA
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           intcon	equ	0xFF2
  6143                           intcon2	equ	0xFF1
  6144                           intcon3	equ	0xFF0
  6145                           postinc0	equ	0xFEE
  6146                           wreg	equ	0xFE8
  6147                           postinc1	equ	0xFE6
  6148                           plusw1	equ	0xFE3
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           indf2	equ	0xFDF
  6152                           postinc2	equ	0xFDE
  6153                           postdec2	equ	0xFDD
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function _UpdateJoinSuccessState *****************
  6159 ;; Defined at:
  6160 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  param           1  [STACK] unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1  [STACK] void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : F/0
  6171 ;;		On exit  : F/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:   11
  6181 ;; This function calls:
  6182 ;;		_RxJoinResponse
  6183 ;;		_SwTimerSetTimeout
  6184 ;;		_SwTimerStart
  6185 ;;		___lldiv
  6186 ;; This function is called by:
  6187 ;;		_SetCallbackSoftwareTimers
  6188 ;;		_LORAWAN_RxDone
  6189 ;;		_SwTimersExecute
  6190 ;; This function uses a reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text38
  6194  004506                     __ptext38:
  6195                           	opt stack 0
  6196  004506                     _UpdateJoinSuccessState:
  6197                           	opt stack 0
  6198                           
  6199                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6200  004506  52E6               	movf	postinc1,f,c
  6201  004508  52E6               	movf	postinc1,f,c
  6202  00450A  52E6               	movf	postinc1,f,c
  6203  00450C  52E6               	movf	postinc1,f,c
  6204                           
  6205                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6206                           
  6207                           ;incstack = 0
  6208  00450E  0102               	movlb	2	; () banked
  6209  004510  9500               	bcf	_loRa& (0+255),2,b
  6210                           
  6211                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6212  004512  8902               	bsf	(_loRa+2)& (0+255),4,b
  6213                           
  6214                           ; BSR set to: 2
  6215                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6216  004514  0EF0               	movlw	-16
  6217  004516  1702               	andwf	(_loRa+2)& (0+255),f,b
  6218                           
  6219                           ; BSR set to: 2
  6220                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6221  004518  6BD0               	clrf	(_loRa+208)& (0+255),b
  6222  00451A  6BD1               	clrf	(_loRa+209)& (0+255),b
  6223                           
  6224                           ; BSR set to: 2
  6225                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6226  00451C  6BEE               	clrf	(_loRa+238)& (0+255),b
  6227                           
  6228                           ; BSR set to: 2
  6229                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6230  00451E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6231  004520  D074               	goto	l13959
  6232                           
  6233                           ; BSR set to: 2
  6234                           ;lorawan.c: 1052: {
  6235                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6236  004522  51CF               	movf	(_loRa+207)& (0+255),w,b
  6237  004524  E106               	bnz	u15560
  6238  004526  29CC               	incf	(_loRa+204)& (0+255),w,b
  6239  004528  0EFF               	movlw	255
  6240  00452A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6241  00452C  0E0F               	movlw	15
  6242  00452E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6243  004530  E321               	bnc	l13953
  6244  004532                     u15560:
  6245                           
  6246                           ; BSR set to: 2
  6247  004532  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6248  004536  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6249  00453A  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6250  00453E  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6251  004542  0E7D               	movlw	125
  6252  004544  0100               	movlb	0	; () banked
  6253  004546  6F68               	movwf	___lldiv@divisor& (0+255),b
  6254  004548  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6255  00454A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6256  00454C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6257  00454E  EC0B  F030         	call	___lldiv	;wreg free
  6258  004552  C064  F04E         	movff	?___lldiv,btemp+8
  6259  004556  C065  F04F         	movff	?___lldiv+1,btemp+9
  6260  00455A  C066  F050         	movff	?___lldiv+2,btemp+10
  6261  00455E  C067  F051         	movff	?___lldiv+3,btemp+11
  6262  004562  0E0C               	movlw	12
  6263  004564                     u15575:
  6264  004564  90D8               	bcf	status,0,c
  6265  004566  364E               	rlcf	btemp+8,f,c
  6266  004568  364F               	rlcf	btemp+9,f,c
  6267  00456A  3650               	rlcf	btemp+10,f,c
  6268  00456C  3651               	rlcf	btemp+11,f,c
  6269  00456E  2EE8               	decfsz	wreg,f,c
  6270  004570  D7F9               	goto	u15575
  6271  004572  D028               	goto	L2
  6272  004574                     l13953:
  6273                           
  6274                           ; BSR set to: 2
  6275  004574  C2CC  F04E         	movff	_loRa+204,btemp+8
  6276  004578  C2CD  F04F         	movff	_loRa+205,btemp+9
  6277  00457C  C2CE  F050         	movff	_loRa+206,btemp+10
  6278  004580  C2CF  F051         	movff	_loRa+207,btemp+11
  6279  004584  0E0C               	movlw	12
  6280  004586                     u15585:
  6281  004586  90D8               	bcf	status,0,c
  6282  004588  364E               	rlcf	btemp+8,f,c
  6283  00458A  364F               	rlcf	btemp+9,f,c
  6284  00458C  3650               	rlcf	btemp+10,f,c
  6285  00458E  3651               	rlcf	btemp+11,f,c
  6286  004590  2EE8               	decfsz	wreg,f,c
  6287  004592  D7F9               	goto	u15585
  6288  004594  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6289  004598  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6290  00459C  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6291  0045A0  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6292  0045A4  0E7D               	movlw	125
  6293  0045A6  0100               	movlb	0	; () banked
  6294  0045A8  6F68               	movwf	___lldiv@divisor& (0+255),b
  6295  0045AA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6296  0045AC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6297  0045AE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6298  0045B0  EC0B  F030         	call	___lldiv	;wreg free
  6299  0045B4  C064  F04E         	movff	?___lldiv,btemp+8
  6300  0045B8  C065  F04F         	movff	?___lldiv+1,btemp+9
  6301  0045BC  C066  F050         	movff	?___lldiv+2,btemp+10
  6302  0045C0  C067  F051         	movff	?___lldiv+3,btemp+11
  6303  0045C4                     L2:
  6304                           
  6305                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6306  0045C4  0EFC               	movlw	-4
  6307  0045C6  C04E  FFE3         	movff	btemp+8,plusw1
  6308  0045CA  0EFD               	movlw	-3
  6309  0045CC  C04F  FFE3         	movff	btemp+9,plusw1
  6310  0045D0  0EFE               	movlw	-2
  6311  0045D2  C050  FFE3         	movff	btemp+10,plusw1
  6312  0045D6  0EFF               	movlw	-1
  6313  0045D8  C051  FFE3         	movff	btemp+11,plusw1
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6317  0045DC  50E1               	movf	fsr1l,w,c
  6318  0045DE  0FFC               	addlw	-4
  6319  0045E0  6ED9               	movwf	fsr2l,c
  6320  0045E2  50E2               	movf	fsr1h,w,c
  6321  0045E4  6EDA               	movwf	fsr2h,c
  6322  0045E6  0EFF               	movlw	255
  6323  0045E8  22DA               	addwfc	fsr2h,f,c
  6324  0045EA  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6325  0045EE  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6326  0045F2  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6327  0045F6  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6328  0045FA  0102               	movlb	2	; () banked
  6329  0045FC  51E7               	movf	(_loRa+231)& (0+255),w,b
  6330  0045FE  EC60  F036         	call	_SwTimerSetTimeout
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6334  004602  0102               	movlb	2	; () banked
  6335  004604  51E7               	movf	(_loRa+231)& (0+255),w,b
  6336  004606  EC49  F02E         	call	_SwTimerStart
  6337  00460A                     l13959:
  6338                           
  6339                           ;lorawan.c: 1055: }
  6340                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6341  00460A  0100               	movlb	0	; () banked
  6342  00460C  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6343  00460E  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
  6344  004610  E00B               	bz	l2090
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;lorawan.c: 1058: {
  6348                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6349  004612  D801               	call	u15608
  6350  004614  D009               	goto	l2090
  6351  004616                     u15608:
  6352  004616  0005               	push	
  6353  004618  6EFA               	movwf	pclath,c
  6354  00461A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6355  00461C  6EFD               	movwf	tosl,c
  6356  00461E  51EB               	movf	(_rxPayload+3)& (0+255),w,b
  6357  004620  6EFE               	movwf	tosh,c
  6358  004622  6AFF               	clrf	tosu,c
  6359  004624  50FA               	movf	pclath,w,c
  6360  004626  0C01               	retlw	1	;indir
  6361  004628                     l2090:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6365  004628  0EFB               	movlw	251
  6366  00462A  26E1               	addwf	fsr1l,f,c
  6367  00462C  0EFF               	movlw	255
  6368  00462E  22E2               	addwfc	fsr1h,f,c
  6369  004630  0CFF               	retlw	255	;funcret
  6370  004632                     __end_of_UpdateJoinSuccessState:
  6371                           	opt stack 0
  6372                           tosu	equ	0xFFF
  6373                           tosh	equ	0xFFE
  6374                           tosl	equ	0xFFD
  6375                           pclath	equ	0xFFA
  6376                           tblptru	equ	0xFF8
  6377                           tblptrh	equ	0xFF7
  6378                           tblptrl	equ	0xFF6
  6379                           tablat	equ	0xFF5
  6380                           prodh	equ	0xFF4
  6381                           prodl	equ	0xFF3
  6382                           intcon	equ	0xFF2
  6383                           intcon2	equ	0xFF1
  6384                           intcon3	equ	0xFF0
  6385                           postinc0	equ	0xFEE
  6386                           wreg	equ	0xFE8
  6387                           postinc1	equ	0xFE6
  6388                           plusw1	equ	0xFE3
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _AutomaticReplyCallback *****************
  6399 ;; Defined at:
  6400 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  param           1  [STACK] unsigned char 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1  [STACK] void 
  6407 ;; Registers used:
  6408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : F/0
  6411 ;;		On exit  : F/2
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;Total ram usage:        0 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:   14
  6421 ;; This function calls:
  6422 ;;		_LORAWAN_Send
  6423 ;; This function is called by:
  6424 ;;		_SetCallbackSoftwareTimers
  6425 ;;		_SwTimersExecute
  6426 ;; This function uses a reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text39
  6430  0073FA                     __ptext39:
  6431                           	opt stack 0
  6432  0073FA                     _AutomaticReplyCallback:
  6433                           	opt stack 14
  6434                           
  6435                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6436                           
  6437                           ; BSR set to: 0
  6438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6439                           ;incstack = 0
  6440  0073FA  0EF0               	movlw	-16
  6441  0073FC  0102               	movlb	2	; () banked
  6442  0073FE  1702               	andwf	(_loRa+2)& (0+255),f,b
  6443                           
  6444                           ; BSR set to: 2
  6445                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6446  007400  0E00               	movlw	0
  6447  007402  0100               	movlb	0	; () banked
  6448  007404  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  6449  007406  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  6450  007408  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6451  00740A  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6452  00740C  ECFE  F029         	call	_LORAWAN_Send
  6453                           
  6454                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6455  007410  0102               	movlb	2	; () banked
  6456  007412  9700               	bcf	_loRa& (0+255),3,b
  6457                           
  6458                           ; BSR set to: 2
  6459                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6460  007414  52E5               	movf	postdec1,f,c
  6461  007416  0012               	return		;funcret
  6462  007418                     __end_of_AutomaticReplyCallback:
  6463                           	opt stack 0
  6464                           tosu	equ	0xFFF
  6465                           tosh	equ	0xFFE
  6466                           tosl	equ	0xFFD
  6467                           pclath	equ	0xFFA
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           intcon2	equ	0xFF1
  6476                           intcon3	equ	0xFF0
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           postinc1	equ	0xFE6
  6480                           postdec1	equ	0xFE5
  6481                           plusw1	equ	0xFE3
  6482                           fsr1h	equ	0xFE2
  6483                           fsr1l	equ	0xFE1
  6484                           indf2	equ	0xFDF
  6485                           postinc2	equ	0xFDE
  6486                           postdec2	equ	0xFDD
  6487                           fsr2h	equ	0xFDA
  6488                           fsr2l	equ	0xFD9
  6489                           status	equ	0xFD8
  6490                           
  6491 ;; *************** function _AckRetransmissionCallback *****************
  6492 ;; Defined at:
  6493 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  param           1  [STACK] unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  maximumPacke    1  [STACK] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1  [STACK] void 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : F/0
  6504 ;;		On exit  : D/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:   13
  6514 ;; This function calls:
  6515 ;;		_FindSmallestDataRate
  6516 ;;		_LORAWAN_GetMaxPayloadSize
  6517 ;;		_RADIO_Transmit
  6518 ;;		_ResetParametersForConfirmedTransmission
  6519 ;;		_RxDataDone
  6520 ;;		_SelectChannelForTransmission
  6521 ;;		_UpdateRetransmissionAckTimeoutState
  6522 ;; This function is called by:
  6523 ;;		_SetCallbackSoftwareTimers
  6524 ;;		_SwTimersExecute
  6525 ;; This function uses a reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text40
  6529  004A5C                     __ptext40:
  6530                           	opt stack 0
  6531  004A5C                     _AckRetransmissionCallback:
  6532                           	opt stack 0
  6533                           
  6534                           ; BSR set to: 2
  6535                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6536  004A5C  52E6               	movf	postinc1,f,c
  6537                           
  6538                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6539                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6540                           
  6541                           ;incstack = 0
  6542  004A5E  0102               	movlb	2	; () banked
  6543  004A60  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6544  004A62  D070               	goto	l15133
  6545                           
  6546                           ; BSR set to: 2
  6547                           ;lorawan.c: 939: {
  6548                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6549  004A64  51D9               	movf	(_loRa+217)& (0+255),w,b
  6550  004A66  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6551  004A68  E352               	bnc	l15123
  6552                           
  6553                           ; BSR set to: 2
  6554                           ;lorawan.c: 941: {
  6555                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6556  004A6A  EC42  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6557  004A6E  6E51               	movwf	btemp+11,c
  6558  004A70  0E0D               	movlw	13
  6559  004A72  2651               	addwf	btemp+11,f,c
  6560                           
  6561                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6562  004A74  0EFF               	movlw	-1
  6563  004A76  C051  FFE3         	movff	btemp+11,plusw1
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6567                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6568  004A7A  50E3               	movf	plusw1,w,c
  6569  004A7C  6E47               	movwf	btemp+1,c
  6570  004A7E  6A48               	clrf	btemp+2,c
  6571  004A80  0102               	movlb	2	; () banked
  6572  004A82  51D4               	movf	(_loRa+212)& (0+255),w,b
  6573  004A84  5C47               	subwf	btemp+1,w,c
  6574  004A86  51D5               	movf	(_loRa+213)& (0+255),w,b
  6575  004A88  5848               	subwfb	btemp+2,w,c
  6576  004A8A  E333               	bnc	l15117
  6577                           
  6578                           ; BSR set to: 2
  6579                           ;lorawan.c: 946: {
  6580                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6581  004A8C  0E01               	movlw	1
  6582  004A8E  EC17  F033         	call	_SelectChannelForTransmission
  6583  004A92  0900               	iorlw	0
  6584  004A94  E12B               	bnz	l15113
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;lorawan.c: 948: {
  6588                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6589  004A96  0EF0               	movlw	low (_macBuffer+16)
  6590  004A98  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6591  004A9A  0E04               	movlw	high (_macBuffer+16)
  6592  004A9C  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6593  004A9E  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6594  004AA2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
  6595  004AA6  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  6596  004AAA  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  6597  004AAE  5047               	movf	btemp+1,w,c
  6598  004AB0  1048               	iorwf	btemp+2,w,c
  6599  004AB2  E11C               	bnz	l15113
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;lorawan.c: 951: {
  6603                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6604  004AB4  0102               	movlb	2	; () banked
  6605  004AB6  5102               	movf	(_loRa+2)& (0+255),w,b
  6606  004AB8  0BF0               	andlw	-16
  6607  004ABA  0901               	iorlw	1
  6608  004ABC  6F02               	movwf	(_loRa+2)& (0+255),b
  6609                           
  6610                           ; BSR set to: 2
  6611                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6612  004ABE  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 2
  6615                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6616  004AC0  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6617  004AC2  D042               	goto	l2063
  6618                           
  6619                           ; BSR set to: 2
  6620  004AC4  51DF               	movf	(_loRa+223)& (0+255),w,b
  6621  004AC6  E040               	bz	l2063
  6622                           
  6623                           ; BSR set to: 2
  6624  004AC8  51D9               	movf	(_loRa+217)& (0+255),w,b
  6625  004ACA  6E47               	movwf	btemp+1,c
  6626  004ACC  6A48               	clrf	btemp+2,c
  6627  004ACE  51D7               	movf	(_loRa+215)& (0+255),w,b
  6628  004AD0  6E50               	movwf	btemp+10,c
  6629  004AD2  6A51               	clrf	btemp+11,c
  6630  004AD4  2A50               	incf	btemp+10,f,c
  6631  004AD6  0E00               	movlw	0
  6632  004AD8  2251               	addwfc	btemp+11,f,c
  6633  004ADA  5047               	movf	btemp+1,w,c
  6634  004ADC  1850               	xorwf	btemp+10,w,c
  6635  004ADE  E103               	bnz	u17720
  6636  004AE0  5048               	movf	btemp+2,w,c
  6637  004AE2  1851               	xorwf	btemp+11,w,c
  6638  004AE4  E031               	bz	l2063
  6639  004AE6                     u17720:
  6640                           
  6641                           ; BSR set to: 2
  6642                           ;lorawan.c: 957: {
  6643                           ;lorawan.c: 958: FindSmallestDataRate();
  6644  004AE6  EC7B  F02C         	call	_FindSmallestDataRate	;wreg free
  6645  004AEA  D02E               	goto	l2063
  6646  004AEC                     l15113:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;lorawan.c: 961: else
  6650                           ;lorawan.c: 962: {
  6651                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6652  004AEC  ECB7  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6653  004AF0  D02B               	goto	l2063
  6654  004AF2                     l15117:
  6655                           
  6656                           ; BSR set to: 2
  6657                           ;lorawan.c: 973: else
  6658                           ;lorawan.c: 974: {
  6659                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6660  004AF2  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6661                           
  6662                           ; BSR set to: 2
  6663                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6664  004AF6  0100               	movlb	0	; () banked
  6665  004AF8  51E8               	movf	_rxPayload& (0+255),w,b
  6666  004AFA  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6667  004AFC  E025               	bz	l2063
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;lorawan.c: 977: {
  6671                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6672  004AFE  6B64               	clrf	RxDataDone@pData& (0+255),b
  6673  004B00  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  6674  004B02  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  6675  004B04  0E04               	movlw	4
  6676  004B06  6F67               	movwf	RxDataDone@status& (0+255),b
  6677  004B08  D801               	call	u17748
  6678  004B0A  D01E               	goto	l2063
  6679  004B0C                     u17748:
  6680  004B0C  D012               	goto	u17788
  6681  004B0E                     l15123:
  6682                           
  6683                           ; BSR set to: 2
  6684                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6685  004B0E  51D9               	movf	(_loRa+217)& (0+255),w,b
  6686  004B10  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6687  004B12  E21A               	bc	l2063
  6688                           
  6689                           ; BSR set to: 2
  6690  004B14  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6691  004B16  D018               	goto	l2063
  6692                           
  6693                           ; BSR set to: 2
  6694                           ;lorawan.c: 983: {
  6695                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6696  004B18  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6697                           
  6698                           ; BSR set to: 2
  6699                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6700  004B1C  0100               	movlb	0	; () banked
  6701  004B1E  51E8               	movf	_rxPayload& (0+255),w,b
  6702  004B20  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6703  004B22  E012               	bz	l2063
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;lorawan.c: 986: {
  6707                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6708  004B24  0E00               	movlw	0
  6709  004B26  6B64               	clrf	RxDataDone@pData& (0+255),b
  6710  004B28  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  6711  004B2A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  6712  004B2C  6B67               	clrf	RxDataDone@status& (0+255),b
  6713  004B2E  D801               	call	u17788
  6714  004B30  D00B               	goto	l2063
  6715  004B32                     u17788:
  6716  004B32  0005               	push	
  6717  004B34  6EFA               	movwf	pclath,c
  6718  004B36  51E8               	movf	_rxPayload& (0+255),w,b
  6719  004B38  6EFD               	movwf	tosl,c
  6720  004B3A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  6721  004B3C  6EFE               	movwf	tosh,c
  6722  004B3E  6AFF               	clrf	tosu,c
  6723  004B40  50FA               	movf	pclath,w,c
  6724  004B42  0012               	return		;indir
  6725  004B44                     l15133:
  6726                           
  6727                           ; BSR set to: 2
  6728                           ;lorawan.c: 991: else
  6729                           ;lorawan.c: 992: {
  6730                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6731  004B44  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6732  004B48                     l2063:
  6733                           
  6734                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6735  004B48  52E5               	movf	postdec1,f,c
  6736  004B4A  52E5               	movf	postdec1,f,c
  6737  004B4C  0012               	return		;funcret
  6738  004B4E                     __end_of_AckRetransmissionCallback:
  6739                           	opt stack 0
  6740                           tosu	equ	0xFFF
  6741                           tosh	equ	0xFFE
  6742                           tosl	equ	0xFFD
  6743                           pclath	equ	0xFFA
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           intcon2	equ	0xFF1
  6752                           intcon3	equ	0xFF0
  6753                           postinc0	equ	0xFEE
  6754                           wreg	equ	0xFE8
  6755                           postinc1	equ	0xFE6
  6756                           postdec1	equ	0xFE5
  6757                           plusw1	equ	0xFE3
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           fsr2h	equ	0xFDA
  6764                           fsr2l	equ	0xFD9
  6765                           status	equ	0xFD8
  6766                           
  6767 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6768 ;; Defined at:
  6769 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  param           1  [STACK] unsigned char 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;  iCtr            1  [STACK] unsigned char 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1  [STACK] void 
  6776 ;; Registers used:
  6777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6778 ;; Tracked objects:
  6779 ;;		On entry : F/0
  6780 ;;		On exit  : D/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;Total ram usage:        0 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:   11
  6790 ;; This function calls:
  6791 ;;		_SwTimerSetTimeout
  6792 ;;		_SwTimerStart
  6793 ;;		___lldiv
  6794 ;; This function is called by:
  6795 ;;		_SetCallbackSoftwareTimers
  6796 ;;		_SwTimersExecute
  6797 ;; This function uses a reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text41
  6801  003FDE                     __ptext41:
  6802                           	opt stack 0
  6803  003FDE                     _LORAWAN_LinkCheckCallback:
  6804                           	opt stack 0
  6805                           
  6806                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6807  003FDE  0E05               	movlw	5
  6808  003FE0  26E1               	addwf	fsr1l,f,c
  6809  003FE2  0E00               	movlw	0
  6810  003FE4  22E2               	addwfc	fsr1h,f,c
  6811                           
  6812                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6813                           
  6814                           ;incstack = 0
  6815  003FE6  0102               	movlb	2	; () banked
  6816  003FE8  A103               	btfss	(_loRa+3)& (0+255),0,b
  6817                           
  6818                           ; BSR set to: 2
  6819  003FEA  A503               	btfss	(_loRa+3)& (0+255),2,b
  6820  003FEC  D029               	goto	l15077
  6821                           
  6822                           ; BSR set to: 2
  6823                           ;lorawan.c: 886: {
  6824                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6825                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6826  003FEE  0EFF               	movlw	-1
  6827  003FF0  6AE3               	clrf	plusw1,c
  6828  003FF2  D00E               	goto	l15067
  6829  003FF4                     l15061:
  6830                           
  6831                           ; BSR set to: 2
  6832                           ;lorawan.c: 889: {
  6833                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6834                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6835  003FF4  0EFF               	movlw	-1
  6836  003FF6  50E3               	movf	plusw1,w,c
  6837  003FF8  0D02               	mullw	2
  6838  003FFA  0EA8               	movlw	low (_loRa+168)
  6839  003FFC  24F3               	addwf	prodl,w,c
  6840  003FFE  6ED9               	movwf	fsr2l,c
  6841  004000  0E02               	movlw	high (_loRa+168)
  6842  004002  20F4               	addwfc	prodh,w,c
  6843  004004  6EDA               	movwf	fsr2h,c
  6844  004006  0E02               	movlw	2
  6845  004008  18DE               	xorwf	postinc2,w,c
  6846  00400A  E008               	bz	l15069
  6847                           
  6848                           ; BSR set to: 2
  6849                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6850  00400C  0EFF               	movlw	-1
  6851  00400E  2AE3               	incf	plusw1,f,c
  6852  004010                     l15067:
  6853                           
  6854                           ; BSR set to: 2
  6855                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6856  004010  0EFF               	movlw	-1
  6857  004012  CFE3 F047          	movff	plusw1,btemp+1
  6858  004016  51A7               	movf	(_loRa+167)& (0+255),w,b
  6859  004018  5C47               	subwf	btemp+1,w,c
  6860  00401A  E3EC               	bnc	l15061
  6861  00401C                     l15069:
  6862                           
  6863                           ; BSR set to: 2
  6864                           ;lorawan.c: 893: }
  6865                           ;lorawan.c: 894: }
  6866                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6867                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6868  00401C  0EFF               	movlw	-1
  6869  00401E  50E3               	movf	plusw1,w,c
  6870  004020  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6871  004022  E10E               	bnz	l15077
  6872                           
  6873                           ; BSR set to: 2
  6874                           ;lorawan.c: 897: {
  6875                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6876  004024  51A7               	movf	(_loRa+167)& (0+255),w,b
  6877  004026  0D02               	mullw	2
  6878  004028  0EA8               	movlw	low (_loRa+168)
  6879  00402A  24F3               	addwf	prodl,w,c
  6880  00402C  6ED9               	movwf	fsr2l,c
  6881  00402E  0E02               	movlw	high (_loRa+168)
  6882  004030  20F4               	addwfc	prodh,w,c
  6883  004032  6EDA               	movwf	fsr2h,c
  6884  004034  0E02               	movlw	2
  6885  004036  6EDF               	movwf	indf2,c
  6886                           
  6887                           ; BSR set to: 2
  6888                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6889  004038  0E10               	movlw	16
  6890  00403A  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6891  00403C  D001               	goto	l15077
  6892                           
  6893                           ; BSR set to: 2
  6894                           ;lorawan.c: 901: {
  6895                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6896  00403E  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6897  004040                     l15077:
  6898                           
  6899                           ; BSR set to: 2
  6900                           ;lorawan.c: 903: }
  6901                           ;lorawan.c: 904: }
  6902                           ;lorawan.c: 905: }
  6903                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6904  004040  A503               	btfss	(_loRa+3)& (0+255),2,b
  6905  004042  D074               	goto	l2041
  6906                           
  6907                           ; BSR set to: 2
  6908                           ;lorawan.c: 909: {
  6909                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6910  004044  51CF               	movf	(_loRa+207)& (0+255),w,b
  6911  004046  E106               	bnz	u17620
  6912  004048  29CC               	incf	(_loRa+204)& (0+255),w,b
  6913  00404A  0EFF               	movlw	255
  6914  00404C  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6915  00404E  0E0F               	movlw	15
  6916  004050  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6917  004052  E321               	bnc	l15083
  6918  004054                     u17620:
  6919                           
  6920                           ; BSR set to: 2
  6921  004054  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6922  004058  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6923  00405C  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6924  004060  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6925  004064  0E7D               	movlw	125
  6926  004066  0100               	movlb	0	; () banked
  6927  004068  6F68               	movwf	___lldiv@divisor& (0+255),b
  6928  00406A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6929  00406C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6930  00406E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6931  004070  EC0B  F030         	call	___lldiv	;wreg free
  6932  004074  C064  F04E         	movff	?___lldiv,btemp+8
  6933  004078  C065  F04F         	movff	?___lldiv+1,btemp+9
  6934  00407C  C066  F050         	movff	?___lldiv+2,btemp+10
  6935  004080  C067  F051         	movff	?___lldiv+3,btemp+11
  6936  004084  0E0C               	movlw	12
  6937  004086                     u17635:
  6938  004086  90D8               	bcf	status,0,c
  6939  004088  364E               	rlcf	btemp+8,f,c
  6940  00408A  364F               	rlcf	btemp+9,f,c
  6941  00408C  3650               	rlcf	btemp+10,f,c
  6942  00408E  3651               	rlcf	btemp+11,f,c
  6943  004090  2EE8               	decfsz	wreg,f,c
  6944  004092  D7F9               	goto	u17635
  6945  004094  D028               	goto	L3
  6946  004096                     l15083:
  6947                           
  6948                           ; BSR set to: 2
  6949  004096  C2CC  F04E         	movff	_loRa+204,btemp+8
  6950  00409A  C2CD  F04F         	movff	_loRa+205,btemp+9
  6951  00409E  C2CE  F050         	movff	_loRa+206,btemp+10
  6952  0040A2  C2CF  F051         	movff	_loRa+207,btemp+11
  6953  0040A6  0E0C               	movlw	12
  6954  0040A8                     u17645:
  6955  0040A8  90D8               	bcf	status,0,c
  6956  0040AA  364E               	rlcf	btemp+8,f,c
  6957  0040AC  364F               	rlcf	btemp+9,f,c
  6958  0040AE  3650               	rlcf	btemp+10,f,c
  6959  0040B0  3651               	rlcf	btemp+11,f,c
  6960  0040B2  2EE8               	decfsz	wreg,f,c
  6961  0040B4  D7F9               	goto	u17645
  6962  0040B6  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6963  0040BA  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6964  0040BE  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6965  0040C2  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6966  0040C6  0E7D               	movlw	125
  6967  0040C8  0100               	movlb	0	; () banked
  6968  0040CA  6F68               	movwf	___lldiv@divisor& (0+255),b
  6969  0040CC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6970  0040CE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6971  0040D0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6972  0040D2  EC0B  F030         	call	___lldiv	;wreg free
  6973  0040D6  C064  F04E         	movff	?___lldiv,btemp+8
  6974  0040DA  C065  F04F         	movff	?___lldiv+1,btemp+9
  6975  0040DE  C066  F050         	movff	?___lldiv+2,btemp+10
  6976  0040E2  C067  F051         	movff	?___lldiv+3,btemp+11
  6977  0040E6                     L3:
  6978                           
  6979                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6980  0040E6  0EFB               	movlw	-5
  6981  0040E8  C04E  FFE3         	movff	btemp+8,plusw1
  6982  0040EC  0EFC               	movlw	-4
  6983  0040EE  C04F  FFE3         	movff	btemp+9,plusw1
  6984  0040F2  0EFD               	movlw	-3
  6985  0040F4  C050  FFE3         	movff	btemp+10,plusw1
  6986  0040F8  0EFE               	movlw	-2
  6987  0040FA  C051  FFE3         	movff	btemp+11,plusw1
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6991  0040FE  50E1               	movf	fsr1l,w,c
  6992  004100  0FFB               	addlw	-5
  6993  004102  6ED9               	movwf	fsr2l,c
  6994  004104  50E2               	movf	fsr1h,w,c
  6995  004106  6EDA               	movwf	fsr2h,c
  6996  004108  0EFF               	movlw	255
  6997  00410A  22DA               	addwfc	fsr2h,f,c
  6998  00410C  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6999  004110  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7000  004114  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7001  004118  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7002  00411C  0102               	movlb	2	; () banked
  7003  00411E  51E7               	movf	(_loRa+231)& (0+255),w,b
  7004  004120  EC60  F036         	call	_SwTimerSetTimeout
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7008  004124  0102               	movlb	2	; () banked
  7009  004126  51E7               	movf	(_loRa+231)& (0+255),w,b
  7010  004128  EC49  F02E         	call	_SwTimerStart
  7011  00412C                     l2041:
  7012                           
  7013                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7014  00412C  0EFA               	movlw	250
  7015  00412E  26E1               	addwf	fsr1l,f,c
  7016  004130  0EFF               	movlw	255
  7017  004132  22E2               	addwfc	fsr1h,f,c
  7018  004134  0CFF               	retlw	255	;funcret
  7019  004136                     __end_of_LORAWAN_LinkCheckCallback:
  7020                           	opt stack 0
  7021                           tosu	equ	0xFFF
  7022                           tosh	equ	0xFFE
  7023                           tosl	equ	0xFFD
  7024                           pclath	equ	0xFFA
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           prodh	equ	0xFF4
  7030                           prodl	equ	0xFF3
  7031                           intcon	equ	0xFF2
  7032                           intcon2	equ	0xFF1
  7033                           intcon3	equ	0xFF0
  7034                           postinc0	equ	0xFEE
  7035                           wreg	equ	0xFE8
  7036                           postinc1	equ	0xFE6
  7037                           postdec1	equ	0xFE5
  7038                           plusw1	equ	0xFE3
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7049 ;; Defined at:
  7050 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  param           1  [STACK] unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  freq            4  [STACK] unsigned long 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1  [STACK] void 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : F/0
  7061 ;;		On exit  : D/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:   13
  7071 ;; This function calls:
  7072 ;;		_ConfigureRadioRx
  7073 ;;		_GetRx1Freq
  7074 ;;		_RADIO_ReceiveStart
  7075 ;;		_RADIO_ReceiveStop
  7076 ;;		_RADIO_ReleaseData
  7077 ;; This function is called by:
  7078 ;;		_SetCallbackSoftwareTimers
  7079 ;;		_SwTimersExecute
  7080 ;; This function uses a reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text42
  7084  00562A                     __ptext42:
  7085                           	opt stack 0
  7086  00562A                     _LORAWAN_ReceiveWindow1Callback:
  7087                           	opt stack 0
  7088                           
  7089                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7090  00562A  52E6               	movf	postinc1,f,c
  7091  00562C  52E6               	movf	postinc1,f,c
  7092  00562E  52E6               	movf	postinc1,f,c
  7093  005630  52E6               	movf	postinc1,f,c
  7094                           
  7095                           ;lorawan.c: 798: uint32_t freq;
  7096                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7097                           
  7098                           ;incstack = 0
  7099  005632  0102               	movlb	2	; () banked
  7100  005634  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7101  005636  D04E               	goto	l2014
  7102                           
  7103                           ; BSR set to: 2
  7104                           ;lorawan.c: 801: {
  7105                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7106  005638  0E02               	movlw	2
  7107  00563A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7108  00563C  E102               	bnz	l15039
  7109                           
  7110                           ; BSR set to: 2
  7111                           ;lorawan.c: 803: {
  7112                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7113  00563E  EC1B  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7114  005642                     l15039:
  7115                           
  7116                           ;lorawan.c: 805: }
  7117                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7118  005642  0102               	movlb	2	; () banked
  7119  005644  51EF               	movf	(_loRa+239)& (0+255),w,b
  7120  005646  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7121  005648  E304               	bnc	l2012
  7122                           
  7123                           ; BSR set to: 2
  7124                           ;lorawan.c: 807: {
  7125                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7126  00564A  51EF               	movf	(_loRa+239)& (0+255),w,b
  7127  00564C  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7128  00564E  6F17               	movwf	(_loRa+23)& (0+255),b
  7129                           
  7130                           ;lorawan.c: 809: }
  7131  005650  D001               	goto	l15043
  7132  005652                     l2012:
  7133                           
  7134                           ; BSR set to: 2
  7135                           ;lorawan.c: 810: else
  7136                           ;lorawan.c: 811: {
  7137                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7138  005652  6B17               	clrf	(_loRa+23)& (0+255),b
  7139  005654                     l15043:
  7140                           
  7141                           ; BSR set to: 2
  7142                           ;lorawan.c: 813: }
  7143                           ;lorawan.c: 815: freq = GetRx1Freq();
  7144  005654  EC66  F03B         	call	_GetRx1Freq	;wreg free
  7145  005658  C064  F04E         	movff	?_GetRx1Freq,btemp+8
  7146  00565C  C065  F04F         	movff	?_GetRx1Freq+1,btemp+9
  7147  005660  C066  F050         	movff	?_GetRx1Freq+2,btemp+10
  7148  005664  C067  F051         	movff	?_GetRx1Freq+3,btemp+11
  7149                           
  7150                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7151  005668  0EFC               	movlw	-4
  7152  00566A  C04E  FFE3         	movff	btemp+8,plusw1
  7153  00566E  0EFD               	movlw	-3
  7154  005670  C04F  FFE3         	movff	btemp+9,plusw1
  7155  005674  0EFE               	movlw	-2
  7156  005676  C050  FFE3         	movff	btemp+10,plusw1
  7157  00567A  0EFF               	movlw	-1
  7158  00567C  C051  FFE3         	movff	btemp+11,plusw1
  7159                           
  7160                           ; BSR set to: 2
  7161                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7162  005680  5102               	movf	(_loRa+2)& (0+255),w,b
  7163  005682  0BF0               	andlw	-16
  7164  005684  0903               	iorlw	3
  7165  005686  6F02               	movwf	(_loRa+2)& (0+255),b
  7166                           
  7167                           ; BSR set to: 2
  7168                           ;lorawan.c: 819: RADIO_ReleaseData();
  7169  005688  EC3E  F03C         	call	_RADIO_ReleaseData	;wreg free
  7170                           
  7171                           ; BSR set to: 1
  7172                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7173                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7174  00568C  50E1               	movf	fsr1l,w,c
  7175  00568E  0FFC               	addlw	-4
  7176  005690  6ED9               	movwf	fsr2l,c
  7177  005692  50E2               	movf	fsr1h,w,c
  7178  005694  6EDA               	movwf	fsr2h,c
  7179  005696  0EFF               	movlw	255
  7180  005698  22DA               	addwfc	fsr2h,f,c
  7181  00569A  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7182  00569E  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7183  0056A2  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7184  0056A6  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7185  0056AA  0102               	movlb	2	; () banked
  7186  0056AC  5117               	movf	(_loRa+23)& (0+255),w,b
  7187  0056AE  EC40  F039         	call	_ConfigureRadioRx
  7188                           
  7189                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7190  0056B2  0E85               	movlw	low _rxWindowSize
  7191  0056B4  0102               	movlb	2	; () banked
  7192  0056B6  2517               	addwf	(_loRa+23)& (0+255),w,b
  7193  0056B8  6EF6               	movwf	tblptrl,c
  7194  0056BA  6AF7               	clrf	tblptrh,c
  7195  0056BC  0EFF               	movlw	high _rxWindowSize
  7196  0056BE  22F7               	addwfc	tblptrh,f,c
  7197  0056C0                     	if	1	;There are 3 active tblptr bytes
  7198  0056C0  6AF8               	clrf	tblptru,c
  7199  0056C2  0E00               	movlw	low (__mediumconst shr (0+16))
  7200  0056C4  22F8               	addwfc	tblptru,f,c
  7201  0056C6                     	endif
  7202  0056C6  0008               	tblrd		*
  7203  0056C8  50F5               	movf	tablat,w,c
  7204  0056CA  0100               	movlb	0	; () banked
  7205  0056CC  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7206  0056CE  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7207  0056D0  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
  7208  0056D4                     l2014:
  7209                           
  7210                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7211  0056D4  0EFB               	movlw	251
  7212  0056D6  26E1               	addwf	fsr1l,f,c
  7213  0056D8  0EFF               	movlw	255
  7214  0056DA  22E2               	addwfc	fsr1h,f,c
  7215  0056DC  0CFF               	retlw	255	;funcret
  7216  0056DE                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7217                           	opt stack 0
  7218                           tosu	equ	0xFFF
  7219                           tosh	equ	0xFFE
  7220                           tosl	equ	0xFFD
  7221                           pclath	equ	0xFFA
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           intcon	equ	0xFF2
  7229                           intcon2	equ	0xFF1
  7230                           intcon3	equ	0xFF0
  7231                           postinc0	equ	0xFEE
  7232                           wreg	equ	0xFE8
  7233                           postinc1	equ	0xFE6
  7234                           postdec1	equ	0xFE5
  7235                           plusw1	equ	0xFE3
  7236                           fsr1h	equ	0xFE2
  7237                           fsr1l	equ	0xFE1
  7238                           indf2	equ	0xFDF
  7239                           postinc2	equ	0xFDE
  7240                           postdec2	equ	0xFDD
  7241                           fsr2h	equ	0xFDA
  7242                           fsr2l	equ	0xFD9
  7243                           status	equ	0xFD8
  7244                           
  7245 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7246 ;; Defined at:
  7247 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  param           1  [STACK] unsigned char 
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;		None
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1  [STACK] void 
  7254 ;; Registers used:
  7255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : D/0
  7258 ;;		On exit  : D/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;Total ram usage:        0 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; Hardware stack levels required when called:   14
  7268 ;; This function calls:
  7269 ;;		_ConfigureRadioRx
  7270 ;;		_LORAWAN_EnterContinuousReceive
  7271 ;;		_RADIO_GetStatus
  7272 ;;		_RADIO_ReceiveStart
  7273 ;;		_RADIO_ReceiveStop
  7274 ;;		_RADIO_ReleaseData
  7275 ;;		_ResetParametersForConfirmedTransmission
  7276 ;;		_ResetParametersForUnconfirmedTransmission
  7277 ;;		_RxDataDone
  7278 ;; This function is called by:
  7279 ;;		_LORAWAN_RxTimeout
  7280 ;;		_SetCallbackSoftwareTimers
  7281 ;;		_SwTimersExecute
  7282 ;; This function uses a reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text43
  7286  005334                     __ptext43:
  7287                           	opt stack 0
  7288  005334                     _LORAWAN_ReceiveWindow2Callback:
  7289                           	opt stack 12
  7290                           
  7291                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7292                           
  7293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7294                           ;incstack = 0
  7295  005334  0102               	movlb	2	; () banked
  7296  005336  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7297  005338  D057               	goto	l2017
  7298                           
  7299                           ; BSR set to: 2
  7300                           ;lorawan.c: 831: {
  7301                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7302  00533A  EC3B  F03C         	call	_RADIO_GetStatus	;wreg free
  7303  00533E  6E51               	movwf	btemp+11,c
  7304  005340  B251               	btfsc	btemp+11,1,c
  7305  005342  D04E               	goto	l13807
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;lorawan.c: 833: {
  7309                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7310  005344  0102               	movlb	2	; () banked
  7311  005346  5102               	movf	(_loRa+2)& (0+255),w,b
  7312  005348  0BF0               	andlw	-16
  7313  00534A  0905               	iorlw	5
  7314  00534C  6F02               	movwf	(_loRa+2)& (0+255),b
  7315                           
  7316                           ; BSR set to: 2
  7317                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7318  00534E  EC1B  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7319                           
  7320                           ; BSR set to: 1
  7321                           ;lorawan.c: 837: RADIO_ReleaseData();
  7322  005352  EC3E  F03C         	call	_RADIO_ReleaseData	;wreg free
  7323                           
  7324                           ; BSR set to: 1
  7325                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7326  005356  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7327  00535A  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7328  00535E  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7329  005362  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7330  005366  0102               	movlb	2	; () banked
  7331  005368  511C               	movf	(_loRa+28)& (0+255),w,b
  7332  00536A  EC40  F039         	call	_ConfigureRadioRx
  7333                           
  7334                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7335  00536E  0102               	movlb	2	; () banked
  7336  005370  5112               	movf	(_loRa+18)& (0+255),w,b
  7337  005372  E12F               	bnz	l13803
  7338                           
  7339                           ; BSR set to: 2
  7340                           ;lorawan.c: 842: {
  7341                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7342  005374  0E85               	movlw	low _rxWindowSize
  7343  005376  251C               	addwf	(_loRa+28)& (0+255),w,b
  7344  005378  6EF6               	movwf	tblptrl,c
  7345  00537A  6AF7               	clrf	tblptrh,c
  7346  00537C  0EFF               	movlw	high _rxWindowSize
  7347  00537E  22F7               	addwfc	tblptrh,f,c
  7348  005380                     	if	1	;There are 3 active tblptr bytes
  7349  005380  6AF8               	clrf	tblptru,c
  7350  005382  0E00               	movlw	low (__mediumconst shr (0+16))
  7351  005384  22F8               	addwfc	tblptru,f,c
  7352  005386                     	endif
  7353  005386  0008               	tblrd		*
  7354  005388  50F5               	movf	tablat,w,c
  7355  00538A  0100               	movlb	0	; () banked
  7356  00538C  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7357  00538E  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7358  005390  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
  7359  005394  C096  F047         	movff	?_RADIO_ReceiveStart,btemp+1
  7360  005398  C097  F048         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7361  00539C  5047               	movf	btemp+1,w,c
  7362  00539E  1048               	iorwf	btemp+2,w,c
  7363  0053A0  E02B               	bz	l2026
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;lorawan.c: 844: {
  7367                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7368  0053A2  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7369                           
  7370                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7371  0053A6  EC80  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7372                           
  7373                           ; BSR set to: 2
  7374                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7375  0053AA  0100               	movlb	0	; () banked
  7376  0053AC  51E8               	movf	_rxPayload& (0+255),w,b
  7377  0053AE  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7378  0053B0  E023               	bz	l2026
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;lorawan.c: 848: {
  7382                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7383  0053B2  0E00               	movlw	0
  7384  0053B4  6B64               	clrf	RxDataDone@pData& (0+255),b
  7385  0053B6  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7386  0053B8  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7387  0053BA  6B67               	clrf	RxDataDone@status& (0+255),b
  7388  0053BC  D801               	call	u15248
  7389  0053BE  D01C               	goto	l2026
  7390  0053C0                     u15248:
  7391  0053C0  0005               	push	
  7392  0053C2  6EFA               	movwf	pclath,c
  7393  0053C4  51E8               	movf	_rxPayload& (0+255),w,b
  7394  0053C6  6EFD               	movwf	tosl,c
  7395  0053C8  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7396  0053CA  6EFE               	movwf	tosh,c
  7397  0053CC  6AFF               	clrf	tosu,c
  7398  0053CE  50FA               	movf	pclath,w,c
  7399  0053D0  0012               	return		;indir
  7400  0053D2                     l13803:
  7401                           
  7402                           ; BSR set to: 2
  7403                           ;lorawan.c: 853: else
  7404                           ;lorawan.c: 854: {
  7405                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7406  0053D2  5102               	movf	(_loRa+2)& (0+255),w,b
  7407  0053D4  0BF0               	andlw	-16
  7408  0053D6  0909               	iorlw	9
  7409  0053D8  6F02               	movwf	(_loRa+2)& (0+255),b
  7410                           
  7411                           ; BSR set to: 2
  7412                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7413  0053DA  EC84  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7414  0053DE  D00C               	goto	l2026
  7415  0053E0                     l13807:
  7416                           
  7417                           ; BSR set to: 1
  7418                           ;lorawan.c: 859: else
  7419                           ;lorawan.c: 860: {
  7420                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7421  0053E0  0E01               	movlw	1
  7422  0053E2  0102               	movlb	2	; () banked
  7423  0053E4  6FF1               	movwf	(_loRa+241)& (0+255),b
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;lorawan.c: 864: }
  7427                           ;lorawan.c: 865: }
  7428  0053E6  D008               	goto	l2026
  7429  0053E8                     l2017:
  7430                           
  7431                           ; BSR set to: 2
  7432                           ;lorawan.c: 866: else
  7433                           ;lorawan.c: 867: {
  7434                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7435  0053E8  A500               	btfss	_loRa& (0+255),2,b
  7436  0053EA  D002               	goto	l13811
  7437                           
  7438                           ; BSR set to: 2
  7439                           ;lorawan.c: 871: {
  7440                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7441  0053EC  9500               	bcf	_loRa& (0+255),2,b
  7442                           
  7443                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7444  0053EE  9902               	bcf	(_loRa+2)& (0+255),4,b
  7445  0053F0                     l13811:
  7446                           
  7447                           ; BSR set to: 2
  7448                           ;lorawan.c: 874: }
  7449                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7450  0053F0  EC80  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7451                           
  7452                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7453  0053F4  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7454  0053F8                     l2026:
  7455                           
  7456                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7457  0053F8  52E5               	movf	postdec1,f,c
  7458  0053FA  0012               	return		;funcret
  7459  0053FC                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7460                           	opt stack 0
  7461                           tosu	equ	0xFFF
  7462                           tosh	equ	0xFFE
  7463                           tosl	equ	0xFFD
  7464                           pclath	equ	0xFFA
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           intcon	equ	0xFF2
  7472                           intcon2	equ	0xFF1
  7473                           intcon3	equ	0xFF0
  7474                           postinc0	equ	0xFEE
  7475                           wreg	equ	0xFE8
  7476                           postinc1	equ	0xFE6
  7477                           postdec1	equ	0xFE5
  7478                           plusw1	equ	0xFE3
  7479                           fsr1h	equ	0xFE2
  7480                           fsr1l	equ	0xFE1
  7481                           indf2	equ	0xFDF
  7482                           postinc2	equ	0xFDE
  7483                           postdec2	equ	0xFDD
  7484                           fsr2h	equ	0xFDA
  7485                           fsr2l	equ	0xFD9
  7486                           status	equ	0xFD8
  7487                           
  7488 ;; *************** function _RADIO_WatchdogTimeout *****************
  7489 ;; Defined at:
  7490 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  param           1  [STACK] unsigned char 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1  [STACK] void 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : F/0
  7501 ;;		On exit  : C/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;Total ram usage:        0 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:   16
  7511 ;; This function calls:
  7512 ;;		_LORAWAN_RxTimeout
  7513 ;;		_LORAWAN_TxDone
  7514 ;;		_RADIO_WriteMode
  7515 ;; This function is called by:
  7516 ;;		_RADIO_Init
  7517 ;;		_SwTimersExecute
  7518 ;; This function uses a reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text44
  7522  006C3C                     __ptext44:
  7523                           	opt stack 0
  7524  006C3C                     _RADIO_WatchdogTimeout:
  7525                           	opt stack 12
  7526                           
  7527                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7528                           
  7529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7530                           ;incstack = 0
  7531  006C3C  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7532  006C40  0E01               	movlw	1
  7533  006C42  0100               	movlb	0	; () banked
  7534  006C44  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7535  006C46  EC5F  F028         	call	_RADIO_WriteMode
  7536                           
  7537                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7538  006C4A  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7539  006C4E  0E00               	movlw	0
  7540  006C50  0100               	movlb	0	; () banked
  7541  006C52  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7542  006C54  EC5F  F028         	call	_RADIO_WriteMode
  7543                           
  7544                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7545  006C58  0101               	movlb	1	; () banked
  7546  006C5A  89A1               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7547                           
  7548                           ; BSR set to: 1
  7549                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7550  006C5C  A3A1               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7551  006C5E  D004               	goto	l673
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;radio_driver_SX1276.c: 1414: {
  7555                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7556  006C60  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7557                           
  7558                           ; BSR set to: 1
  7559                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7560  006C62  EC62  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7561                           
  7562                           ;radio_driver_SX1276.c: 1417: }
  7563  006C66  D009               	goto	l676
  7564  006C68                     l673:
  7565                           
  7566                           ; BSR set to: 1
  7567                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7568  006C68  A1A1               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7569  006C6A  D007               	goto	l676
  7570                           
  7571                           ; BSR set to: 1
  7572                           ;radio_driver_SX1276.c: 1419: {
  7573                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7574  006C6C  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7578  006C6E  C1A8  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7579  006C72  C1A9  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7580  006C76  EC7D  F005         	call	_LORAWAN_TxDone	;wreg free
  7581  006C7A                     l676:
  7582                           
  7583                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7584  006C7A  52E5               	movf	postdec1,f,c
  7585  006C7C  0012               	return		;funcret
  7586  006C7E                     __end_of_RADIO_WatchdogTimeout:
  7587                           	opt stack 0
  7588                           tosu	equ	0xFFF
  7589                           tosh	equ	0xFFE
  7590                           tosl	equ	0xFFD
  7591                           pclath	equ	0xFFA
  7592                           tblptru	equ	0xFF8
  7593                           tblptrh	equ	0xFF7
  7594                           tblptrl	equ	0xFF6
  7595                           tablat	equ	0xFF5
  7596                           prodh	equ	0xFF4
  7597                           prodl	equ	0xFF3
  7598                           intcon	equ	0xFF2
  7599                           intcon2	equ	0xFF1
  7600                           intcon3	equ	0xFF0
  7601                           postinc0	equ	0xFEE
  7602                           wreg	equ	0xFE8
  7603                           postinc1	equ	0xFE6
  7604                           postdec1	equ	0xFE5
  7605                           plusw1	equ	0xFE3
  7606                           fsr1h	equ	0xFE2
  7607                           fsr1l	equ	0xFE1
  7608                           indf2	equ	0xFDF
  7609                           postinc2	equ	0xFDE
  7610                           postdec2	equ	0xFDD
  7611                           fsr2h	equ	0xFDA
  7612                           fsr2l	equ	0xFD9
  7613                           status	equ	0xFD8
  7614                           
  7615 ;; *************** function _RADIO_RxFSKTimeout *****************
  7616 ;; Defined at:
  7617 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  param           1  [STACK] unsigned char 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  irqFlags        1  [STACK] unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1  [STACK] void 
  7624 ;; Registers used:
  7625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : F/0
  7628 ;;		On exit  : D/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;Total ram usage:        0 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:   16
  7638 ;; This function calls:
  7639 ;;		_LORAWAN_RxTimeout
  7640 ;;		_RADIO_RegisterRead
  7641 ;;		_RADIO_WriteMode
  7642 ;;		_SwTimerStop
  7643 ;; This function is called by:
  7644 ;;		_RADIO_Init
  7645 ;;		_SwTimersExecute
  7646 ;; This function uses a reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text45
  7650  006F4E                     __ptext45:
  7651                           	opt stack 0
  7652  006F4E                     _RADIO_RxFSKTimeout:
  7653                           	opt stack 0
  7654                           
  7655                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7656  006F4E  52E6               	movf	postinc1,f,c
  7657                           
  7658                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7659                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7660                           
  7661                           ;incstack = 0
  7662  006F50  0E3E               	movlw	62
  7663  006F52  EC53  F039         	call	_RADIO_RegisterRead
  7664  006F56  6E51               	movwf	btemp+11,c
  7665                           
  7666                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7667  006F58  0EFF               	movlw	-1
  7668  006F5A  C051  FFE3         	movff	btemp+11,plusw1
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7672                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7673  006F5E  B0E3               	btfsc	plusw1,0,c
  7674  006F60  D00E               	goto	l670
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;radio_driver_SX1276.c: 1397: {
  7678                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7679  006F62  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7680  006F66  0E00               	movlw	0
  7681  006F68  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7682  006F6A  EC5F  F028         	call	_RADIO_WriteMode
  7683                           
  7684                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7685  006F6E  0101               	movlb	1	; () banked
  7686  006F70  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7687  006F72  EC57  F03A         	call	_SwTimerStop
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7691  006F76  0101               	movlb	1	; () banked
  7692  006F78  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7693                           
  7694                           ; BSR set to: 1
  7695                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7696  006F7A  EC62  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7697  006F7E                     l670:
  7698                           
  7699                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7700  006F7E  52E5               	movf	postdec1,f,c
  7701  006F80  52E5               	movf	postdec1,f,c
  7702  006F82  0012               	return		;funcret
  7703  006F84                     __end_of_RADIO_RxFSKTimeout:
  7704                           	opt stack 0
  7705                           tosu	equ	0xFFF
  7706                           tosh	equ	0xFFE
  7707                           tosl	equ	0xFFD
  7708                           pclath	equ	0xFFA
  7709                           tblptru	equ	0xFF8
  7710                           tblptrh	equ	0xFF7
  7711                           tblptrl	equ	0xFF6
  7712                           tablat	equ	0xFF5
  7713                           prodh	equ	0xFF4
  7714                           prodl	equ	0xFF3
  7715                           intcon	equ	0xFF2
  7716                           intcon2	equ	0xFF1
  7717                           intcon3	equ	0xFF0
  7718                           postinc0	equ	0xFEE
  7719                           wreg	equ	0xFE8
  7720                           postinc1	equ	0xFE6
  7721                           postdec1	equ	0xFE5
  7722                           plusw1	equ	0xFE3
  7723                           fsr1h	equ	0xFE2
  7724                           fsr1l	equ	0xFE1
  7725                           indf2	equ	0xFDF
  7726                           postinc2	equ	0xFDE
  7727                           postdec2	equ	0xFDD
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8
  7731                           
  7732 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7733 ;; Defined at:
  7734 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  param           1  [STACK] unsigned char 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1  [STACK] void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : F/0
  7745 ;;		On exit  : D/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:   13
  7755 ;; This function calls:
  7756 ;;		_RADIO_Transmit
  7757 ;;		_ResetParametersForUnconfirmedTransmission
  7758 ;;		_RxDataDone
  7759 ;;		_SelectChannelForTransmission
  7760 ;; This function is called by:
  7761 ;;		_SetCallbackSoftwareTimers
  7762 ;;		_SwTimersExecute
  7763 ;; This function uses a reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text46
  7767  0062A8                     __ptext46:
  7768                           	opt stack 0
  7769  0062A8                     _UnconfirmedTransmissionCallback:
  7770                           	opt stack 15
  7771                           
  7772                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7773                           
  7774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7775                           ;incstack = 0
  7776  0062A8  0E01               	movlw	1
  7777  0062AA  EC17  F033         	call	_SelectChannelForTransmission
  7778  0062AE  0900               	iorlw	0
  7779  0062B0  E116               	bnz	l15143
  7780                           
  7781                           ; BSR set to: 0
  7782  0062B2  0EF0               	movlw	low (_macBuffer+16)
  7783  0062B4  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  7784  0062B6  0E04               	movlw	high (_macBuffer+16)
  7785  0062B8  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7786  0062BA  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7787  0062BE  ECD3  F017         	call	_RADIO_Transmit	;wreg free
  7788  0062C2  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  7789  0062C6  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  7790  0062CA  5047               	movf	btemp+1,w,c
  7791  0062CC  1048               	iorwf	btemp+2,w,c
  7792  0062CE  E107               	bnz	l15143
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;lorawan.c: 1001: {
  7796                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7797  0062D0  0102               	movlb	2	; () banked
  7798  0062D2  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7799                           
  7800                           ; BSR set to: 2
  7801                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7802  0062D4  5102               	movf	(_loRa+2)& (0+255),w,b
  7803  0062D6  0BF0               	andlw	-16
  7804  0062D8  0901               	iorlw	1
  7805  0062DA  6F02               	movwf	(_loRa+2)& (0+255),b
  7806                           
  7807                           ;lorawan.c: 1005: }
  7808  0062DC  D016               	goto	l2069
  7809  0062DE                     l15143:
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;lorawan.c: 1006: else
  7813                           ;lorawan.c: 1008: {
  7814                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7815  0062DE  EC80  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7816                           
  7817                           ; BSR set to: 2
  7818                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7819  0062E2  0100               	movlb	0	; () banked
  7820  0062E4  51E8               	movf	_rxPayload& (0+255),w,b
  7821  0062E6  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7822  0062E8  E010               	bz	l2069
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;lorawan.c: 1011: {
  7826                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7827  0062EA  0E00               	movlw	0
  7828  0062EC  6B64               	clrf	RxDataDone@pData& (0+255),b
  7829  0062EE  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7830  0062F0  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7831  0062F2  6B67               	clrf	RxDataDone@status& (0+255),b
  7832  0062F4  D801               	call	u17828
  7833  0062F6  D009               	goto	l2069
  7834  0062F8                     u17828:
  7835  0062F8  0005               	push	
  7836  0062FA  6EFA               	movwf	pclath,c
  7837  0062FC  51E8               	movf	_rxPayload& (0+255),w,b
  7838  0062FE  6EFD               	movwf	tosl,c
  7839  006300  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7840  006302  6EFE               	movwf	tosh,c
  7841  006304  6AFF               	clrf	tosu,c
  7842  006306  50FA               	movf	pclath,w,c
  7843  006308  0012               	return		;indir
  7844  00630A                     l2069:
  7845                           
  7846                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7847  00630A  52E5               	movf	postdec1,f,c
  7848  00630C  0012               	return		;funcret
  7849  00630E                     __end_of_UnconfirmedTransmissionCallback:
  7850                           	opt stack 0
  7851                           tosu	equ	0xFFF
  7852                           tosh	equ	0xFFE
  7853                           tosl	equ	0xFFD
  7854                           pclath	equ	0xFFA
  7855                           tblptru	equ	0xFF8
  7856                           tblptrh	equ	0xFF7
  7857                           tblptrl	equ	0xFF6
  7858                           tablat	equ	0xFF5
  7859                           prodh	equ	0xFF4
  7860                           prodl	equ	0xFF3
  7861                           intcon	equ	0xFF2
  7862                           intcon2	equ	0xFF1
  7863                           intcon3	equ	0xFF0
  7864                           postinc0	equ	0xFEE
  7865                           wreg	equ	0xFE8
  7866                           postinc1	equ	0xFE6
  7867                           postdec1	equ	0xFE5
  7868                           plusw1	equ	0xFE3
  7869                           fsr1h	equ	0xFE2
  7870                           fsr1l	equ	0xFE1
  7871                           indf2	equ	0xFDF
  7872                           postinc2	equ	0xFDE
  7873                           postdec2	equ	0xFDD
  7874                           fsr2h	equ	0xFDA
  7875                           fsr2l	equ	0xFD9
  7876                           status	equ	0xFD8
  7877                           
  7878 ;; *************** function _GetRx1Freq *****************
  7879 ;; Defined at:
  7880 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  4    4[BANK0 ] unsigned long 
  7887 ;; Registers used:
  7888 ;;		None
  7889 ;; Tracked objects:
  7890 ;;		On entry : F/2
  7891 ;;		On exit  : F/2
  7892 ;;		Unchanged: F/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;Total ram usage:        4 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    7
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_LORAWAN_ReceiveWindow1Callback
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text47
  7909  0076CC                     __ptext47:
  7910                           	opt stack 0
  7911  0076CC                     _GetRx1Freq:
  7912                           	opt stack 20
  7913                           
  7914                           ; BSR set to: 2
  7915                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7916                           
  7917                           ;incstack = 0
  7918  0076CC  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7919  0076D0  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7920  0076D4  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7921  0076D8  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7922                           
  7923                           ; BSR set to: 2
  7924  0076DC  0012               	return		;funcret
  7925  0076DE                     __end_of_GetRx1Freq:
  7926                           	opt stack 0
  7927                           tosu	equ	0xFFF
  7928                           tosh	equ	0xFFE
  7929                           tosl	equ	0xFFD
  7930                           pclath	equ	0xFFA
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           intcon	equ	0xFF2
  7938                           intcon2	equ	0xFF1
  7939                           intcon3	equ	0xFF0
  7940                           postinc0	equ	0xFEE
  7941                           wreg	equ	0xFE8
  7942                           postinc1	equ	0xFE6
  7943                           postdec1	equ	0xFE5
  7944                           plusw1	equ	0xFE3
  7945                           fsr1h	equ	0xFE2
  7946                           fsr1l	equ	0xFE1
  7947                           indf2	equ	0xFDF
  7948                           postinc2	equ	0xFDE
  7949                           postdec2	equ	0xFDD
  7950                           fsr2h	equ	0xFDA
  7951                           fsr2l	equ	0xFD9
  7952                           status	equ	0xFD8
  7953                           
  7954 ;; *************** function _RADIO_DIO5 *****************
  7955 ;; Defined at:
  7956 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;		None
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  dioMapping      1    0        unsigned char 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : F/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;Total ram usage:        1 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:   11
  7977 ;; This function calls:
  7978 ;;		_RADIO_RegisterRead
  7979 ;;		_RADIO_UnhandledInterrupt
  7980 ;; This function is called by:
  7981 ;;		_LORAWAN_Mainloop
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text48
  7986  0075F0                     __ptext48:
  7987                           	opt stack 0
  7988  0075F0                     _RADIO_DIO5:
  7989                           	opt stack 18
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7993                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7994                           
  7995                           ; BSR set to: 2
  7996                           ;incstack = 0
  7997  0075F0  0E41               	movlw	65
  7998  0075F2  EC53  F039         	call	_RADIO_RegisterRead
  7999                           
  8000                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8001  0075F6  0E01               	movlw	1
  8002  0075F8  EC53  F039         	call	_RADIO_RegisterRead
  8003  0075FC  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8004  0075FE  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8005  007600  0012               	return	
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8009  007602  0E01               	movlw	1
  8010  007604  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8011  007608                     __end_of_RADIO_DIO5:
  8012                           	opt stack 0
  8013                           tosu	equ	0xFFF
  8014                           tosh	equ	0xFFE
  8015                           tosl	equ	0xFFD
  8016                           pclath	equ	0xFFA
  8017                           tblptru	equ	0xFF8
  8018                           tblptrh	equ	0xFF7
  8019                           tblptrl	equ	0xFF6
  8020                           tablat	equ	0xFF5
  8021                           prodh	equ	0xFF4
  8022                           prodl	equ	0xFF3
  8023                           intcon	equ	0xFF2
  8024                           intcon2	equ	0xFF1
  8025                           intcon3	equ	0xFF0
  8026                           postinc0	equ	0xFEE
  8027                           wreg	equ	0xFE8
  8028                           postinc1	equ	0xFE6
  8029                           postdec1	equ	0xFE5
  8030                           plusw1	equ	0xFE3
  8031                           fsr1h	equ	0xFE2
  8032                           fsr1l	equ	0xFE1
  8033                           indf2	equ	0xFDF
  8034                           postinc2	equ	0xFDE
  8035                           postdec2	equ	0xFDD
  8036                           fsr2h	equ	0xFDA
  8037                           fsr2l	equ	0xFD9
  8038                           status	equ	0xFD8
  8039                           
  8040 ;; *************** function _RADIO_DIO4 *****************
  8041 ;; Defined at:
  8042 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  dioMapping      1    0        unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : F/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;Total ram usage:        1 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:   11
  8063 ;; This function calls:
  8064 ;;		_RADIO_RegisterRead
  8065 ;;		_RADIO_UnhandledInterrupt
  8066 ;; This function is called by:
  8067 ;;		_LORAWAN_Mainloop
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text49
  8072  007608                     __ptext49:
  8073                           	opt stack 0
  8074  007608                     _RADIO_DIO4:
  8075                           	opt stack 18
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8079                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8080                           
  8081                           ;incstack = 0
  8082  007608  0E41               	movlw	65
  8083  00760A  EC53  F039         	call	_RADIO_RegisterRead
  8084                           
  8085                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8086  00760E  0E01               	movlw	1
  8087  007610  EC53  F039         	call	_RADIO_RegisterRead
  8088  007614  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8089  007616  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8090  007618  0012               	return	
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8094  00761A  0E01               	movlw	1
  8095  00761C  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8096  007620                     __end_of_RADIO_DIO4:
  8097                           	opt stack 0
  8098                           tosu	equ	0xFFF
  8099                           tosh	equ	0xFFE
  8100                           tosl	equ	0xFFD
  8101                           pclath	equ	0xFFA
  8102                           tblptru	equ	0xFF8
  8103                           tblptrh	equ	0xFF7
  8104                           tblptrl	equ	0xFF6
  8105                           tablat	equ	0xFF5
  8106                           prodh	equ	0xFF4
  8107                           prodl	equ	0xFF3
  8108                           intcon	equ	0xFF2
  8109                           intcon2	equ	0xFF1
  8110                           intcon3	equ	0xFF0
  8111                           postinc0	equ	0xFEE
  8112                           wreg	equ	0xFE8
  8113                           postinc1	equ	0xFE6
  8114                           postdec1	equ	0xFE5
  8115                           plusw1	equ	0xFE3
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           indf2	equ	0xFDF
  8119                           postinc2	equ	0xFDE
  8120                           postdec2	equ	0xFDD
  8121                           fsr2h	equ	0xFDA
  8122                           fsr2l	equ	0xFD9
  8123                           status	equ	0xFD8
  8124                           
  8125 ;; *************** function _RADIO_DIO3 *****************
  8126 ;; Defined at:
  8127 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  dioMapping      1    0        unsigned char 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : F/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;Total ram usage:        1 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; Hardware stack levels required when called:   11
  8148 ;; This function calls:
  8149 ;;		_RADIO_RegisterRead
  8150 ;;		_RADIO_UnhandledInterrupt
  8151 ;; This function is called by:
  8152 ;;		_LORAWAN_Mainloop
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           	psect	text50
  8157  007620                     __ptext50:
  8158                           	opt stack 0
  8159  007620                     _RADIO_DIO3:
  8160                           	opt stack 18
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8164                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8165                           
  8166                           ;incstack = 0
  8167  007620  0E40               	movlw	64
  8168  007622  EC53  F039         	call	_RADIO_RegisterRead
  8169                           
  8170                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8171  007626  0E01               	movlw	1
  8172  007628  EC53  F039         	call	_RADIO_RegisterRead
  8173  00762C  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8174  00762E  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8175  007630  0012               	return	
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8179  007632  0E01               	movlw	1
  8180  007634  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8181  007638                     __end_of_RADIO_DIO3:
  8182                           	opt stack 0
  8183                           tosu	equ	0xFFF
  8184                           tosh	equ	0xFFE
  8185                           tosl	equ	0xFFD
  8186                           pclath	equ	0xFFA
  8187                           tblptru	equ	0xFF8
  8188                           tblptrh	equ	0xFF7
  8189                           tblptrl	equ	0xFF6
  8190                           tablat	equ	0xFF5
  8191                           prodh	equ	0xFF4
  8192                           prodl	equ	0xFF3
  8193                           intcon	equ	0xFF2
  8194                           intcon2	equ	0xFF1
  8195                           intcon3	equ	0xFF0
  8196                           postinc0	equ	0xFEE
  8197                           wreg	equ	0xFE8
  8198                           postinc1	equ	0xFE6
  8199                           postdec1	equ	0xFE5
  8200                           plusw1	equ	0xFE3
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           indf2	equ	0xFDF
  8204                           postinc2	equ	0xFDE
  8205                           postdec2	equ	0xFDD
  8206                           fsr2h	equ	0xFDA
  8207                           fsr2l	equ	0xFD9
  8208                           status	equ	0xFD8
  8209                           
  8210 ;; *************** function _RADIO_DIO2 *****************
  8211 ;; Defined at:
  8212 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8217 ;;  opMode          1    0        unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : F/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;Total ram usage:        2 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:   12
  8234 ;; This function calls:
  8235 ;;		_RADIO_FHSSChangeChannel
  8236 ;;		_RADIO_RegisterRead
  8237 ;;		_RADIO_UnhandledInterrupt
  8238 ;; This function is called by:
  8239 ;;		_LORAWAN_Mainloop
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text51
  8244  006BAC                     __ptext51:
  8245                           	opt stack 0
  8246  006BAC                     _RADIO_DIO2:
  8247                           	opt stack 17
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8251                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8252                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8253                           
  8254                           ;incstack = 0
  8255  006BAC  0E40               	movlw	64
  8256  006BAE  EC53  F039         	call	_RADIO_RegisterRead
  8257  006BB2  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8258  006BB4  90D8               	bcf	status,0,c
  8259  006BB6  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8260  006BB8  90D8               	bcf	status,0,c
  8261  006BBA  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8262  006BBC  0B03               	andlw	3
  8263  006BBE  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8264                           
  8265                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8266  006BC0  0E01               	movlw	1
  8267  006BC2  EC53  F039         	call	_RADIO_RegisterRead
  8268                           
  8269                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8270  006BC6  0E01               	movlw	1
  8271  006BC8  EC53  F039         	call	_RADIO_RegisterRead
  8272  006BCC  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8273  006BCE  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8274  006BD0  0012               	return	
  8275  006BD2  D003               	goto	l15241
  8276  006BD4                     l15237:
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8280  006BD4  0E01               	movlw	1
  8281  006BD6  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8282  006BDA                     l15241:
  8283                           
  8284                           ; BSR set to: 0
  8285  006BDA  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8286                           
  8287                           ; Switch size 1, requested type "speed"
  8288                           ; Number of cases is 3, Range of values is 0 to 2
  8289                           ; switch strategies available:
  8290                           ; Name         Instructions Cycles
  8291                           ; simple_byte           10     6 (average)
  8292                           ;	Chosen strategy is simple_byte
  8293  006BDC  E102 EF70  F038    	bz	_RADIO_FHSSChangeChannel
  8294  006BE2  0A01               	xorlw	1	; case 1
  8295  006BE4  E102 EF70  F038    	bz	_RADIO_FHSSChangeChannel
  8296  006BEA  0A03               	xorlw	3	; case 2
  8297  006BEC  E102 EF70  F038    	bz	_RADIO_FHSSChangeChannel
  8298  006BF2  D7F0               	goto	l15237
  8299  006BF4                     __end_of_RADIO_DIO2:
  8300                           	opt stack 0
  8301                           tosu	equ	0xFFF
  8302                           tosh	equ	0xFFE
  8303                           tosl	equ	0xFFD
  8304                           pclath	equ	0xFFA
  8305                           tblptru	equ	0xFF8
  8306                           tblptrh	equ	0xFF7
  8307                           tblptrl	equ	0xFF6
  8308                           tablat	equ	0xFF5
  8309                           prodh	equ	0xFF4
  8310                           prodl	equ	0xFF3
  8311                           intcon	equ	0xFF2
  8312                           intcon2	equ	0xFF1
  8313                           intcon3	equ	0xFF0
  8314                           postinc0	equ	0xFEE
  8315                           wreg	equ	0xFE8
  8316                           postinc1	equ	0xFE6
  8317                           postdec1	equ	0xFE5
  8318                           plusw1	equ	0xFE3
  8319                           fsr1h	equ	0xFE2
  8320                           fsr1l	equ	0xFE1
  8321                           indf2	equ	0xFDF
  8322                           postinc2	equ	0xFDE
  8323                           postdec2	equ	0xFDD
  8324                           fsr2h	equ	0xFDA
  8325                           fsr2l	equ	0xFD9
  8326                           status	equ	0xFD8
  8327                           
  8328 ;; *************** function _RADIO_DIO1 *****************
  8329 ;; Defined at:
  8330 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;		None
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : F/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;Total ram usage:        2 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:   17
  8351 ;; This function calls:
  8352 ;;		_RADIO_FHSSChangeChannel
  8353 ;;		_RADIO_RegisterRead
  8354 ;;		_RADIO_RxTimeout
  8355 ;;		_RADIO_UnhandledInterrupt
  8356 ;; This function is called by:
  8357 ;;		_LORAWAN_Mainloop
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text52
  8362  006E34                     __ptext52:
  8363                           	opt stack 0
  8364  006E34                     _RADIO_DIO1:
  8365                           	opt stack 12
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8369                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8370                           
  8371                           ;incstack = 0
  8372  006E34  0E40               	movlw	64
  8373  006E36  EC53  F039         	call	_RADIO_RegisterRead
  8374  006E3A  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8375  006E3C  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8376  006E3E  0B0F               	andlw	15
  8377  006E40  0B03               	andlw	3
  8378  006E42  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8379                           
  8380                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8381  006E44  0E01               	movlw	1
  8382  006E46  EC53  F039         	call	_RADIO_RegisterRead
  8383  006E4A  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8384  006E4C  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8385  006E4E  D00D               	goto	l15229
  8386  006E50  D003               	goto	l15225
  8387  006E52                     l15221:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8391  006E52  0E01               	movlw	1
  8392  006E54  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8393  006E58                     l15225:
  8394                           
  8395                           ; BSR set to: 0
  8396  006E58  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8397                           
  8398                           ; Switch size 1, requested type "speed"
  8399                           ; Number of cases is 2, Range of values is 0 to 1
  8400                           ; switch strategies available:
  8401                           ; Name         Instructions Cycles
  8402                           ; simple_byte            7     4 (average)
  8403                           ;	Chosen strategy is simple_byte
  8404  006E5A  E102 EF05  F039    	bz	_RADIO_RxTimeout
  8405  006E60  0A01               	xorlw	1	; case 1
  8406  006E62  E102 EF70  F038    	bz	_RADIO_FHSSChangeChannel
  8407  006E68  D7F4               	goto	l15221
  8408  006E6A                     l15229:
  8409                           
  8410                           ; BSR set to: 0
  8411  006E6A  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8412                           
  8413                           ; Switch size 1, requested type "speed"
  8414                           ; Number of cases is 1, Range of values is 0 to 0
  8415                           ; switch strategies available:
  8416                           ; Name         Instructions Cycles
  8417                           ; simple_byte            4     3 (average)
  8418                           ;	Chosen strategy is simple_byte
  8419  006E6C  0012               	return	
  8420  006E6E                     __end_of_RADIO_DIO1:
  8421                           	opt stack 0
  8422                           tosu	equ	0xFFF
  8423                           tosh	equ	0xFFE
  8424                           tosl	equ	0xFFD
  8425                           pclath	equ	0xFFA
  8426                           tblptru	equ	0xFF8
  8427                           tblptrh	equ	0xFF7
  8428                           tblptrl	equ	0xFF6
  8429                           tablat	equ	0xFF5
  8430                           prodh	equ	0xFF4
  8431                           prodl	equ	0xFF3
  8432                           intcon	equ	0xFF2
  8433                           intcon2	equ	0xFF1
  8434                           intcon3	equ	0xFF0
  8435                           postinc0	equ	0xFEE
  8436                           wreg	equ	0xFE8
  8437                           postinc1	equ	0xFE6
  8438                           postdec1	equ	0xFE5
  8439                           plusw1	equ	0xFE3
  8440                           fsr1h	equ	0xFE2
  8441                           fsr1l	equ	0xFE1
  8442                           indf2	equ	0xFDF
  8443                           postinc2	equ	0xFDE
  8444                           postdec2	equ	0xFDD
  8445                           fsr2h	equ	0xFDA
  8446                           fsr2l	equ	0xFD9
  8447                           status	equ	0xFD8
  8448                           
  8449 ;; *************** function _RADIO_RxTimeout *****************
  8450 ;; Defined at:
  8451 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : F/0
  8462 ;;		On exit  : D/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;Total ram usage:        0 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:   16
  8472 ;; This function calls:
  8473 ;;		_LORAWAN_RxTimeout
  8474 ;;		_RADIO_RegisterWrite
  8475 ;;		_RADIO_WriteMode
  8476 ;;		_SwTimerStop
  8477 ;; This function is called by:
  8478 ;;		_RADIO_DIO1
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text53
  8483  00720A                     __ptext53:
  8484                           	opt stack 0
  8485  00720A                     _RADIO_RxTimeout:
  8486                           	opt stack 12
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8490                           
  8491                           ;incstack = 0
  8492  00720A  0101               	movlb	1	; () banked
  8493  00720C  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8494  00720E  EC57  F03A         	call	_SwTimerStop
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8498  007212  0E80               	movlw	128
  8499  007214  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8500  007216  0E12               	movlw	18
  8501  007218  EC2A  F03A         	call	_RADIO_RegisterWrite
  8502                           
  8503                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8504  00721C  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8505  007220  0E00               	movlw	0
  8506  007222  0100               	movlb	0	; () banked
  8507  007224  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8508  007226  EC5F  F028         	call	_RADIO_WriteMode
  8509                           
  8510                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8511  00722A  0101               	movlb	1	; () banked
  8512  00722C  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8513                           
  8514                           ; BSR set to: 1
  8515                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8516  00722E  EF62  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8517  007232                     __end_of_RADIO_RxTimeout:
  8518                           	opt stack 0
  8519                           tosu	equ	0xFFF
  8520                           tosh	equ	0xFFE
  8521                           tosl	equ	0xFFD
  8522                           pclath	equ	0xFFA
  8523                           tblptru	equ	0xFF8
  8524                           tblptrh	equ	0xFF7
  8525                           tblptrl	equ	0xFF6
  8526                           tablat	equ	0xFF5
  8527                           prodh	equ	0xFF4
  8528                           prodl	equ	0xFF3
  8529                           intcon	equ	0xFF2
  8530                           intcon2	equ	0xFF1
  8531                           intcon3	equ	0xFF0
  8532                           postinc0	equ	0xFEE
  8533                           wreg	equ	0xFE8
  8534                           postinc1	equ	0xFE6
  8535                           postdec1	equ	0xFE5
  8536                           plusw1	equ	0xFE3
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           indf2	equ	0xFDF
  8540                           postinc2	equ	0xFDE
  8541                           postdec2	equ	0xFDD
  8542                           fsr2h	equ	0xFDA
  8543                           fsr2l	equ	0xFD9
  8544                           status	equ	0xFD8
  8545                           
  8546 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8547 ;; Defined at:
  8548 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  irqFlags        1    0        unsigned char 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : F/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:   11
  8569 ;; This function calls:
  8570 ;;		_RADIO_RegisterRead
  8571 ;;		_RADIO_RegisterWrite
  8572 ;;		_RADIO_WriteFrequency
  8573 ;; This function is called by:
  8574 ;;		_RADIO_DIO1
  8575 ;;		_RADIO_DIO2
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text54
  8580  0070E0                     __ptext54:
  8581                           	opt stack 0
  8582  0070E0                     _RADIO_FHSSChangeChannel:
  8583                           	opt stack 17
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8587                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8588                           
  8589                           ;incstack = 0
  8590  0070E0  0E12               	movlw	18
  8591  0070E2  EC53  F039         	call	_RADIO_RegisterRead
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8595  0070E6  0101               	movlb	1	; () banked
  8596  0070E8  519C               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8597  0070EA  119D               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8598  0070EC  E00A               	bz	l592
  8599                           
  8600                           ; BSR set to: 1
  8601                           ;radio_driver_SX1276.c: 1164: {
  8602                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8603  0070EE  51AD               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8604  0070F0  11AE               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8605  0070F2  E007               	bz	l592
  8606                           
  8607                           ; BSR set to: 1
  8608                           ;radio_driver_SX1276.c: 1166: {
  8609                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8610  0070F4  0100               	movlb	0	; () banked
  8611  0070F6  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8612  0070F8  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8613  0070FA  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8614  0070FC  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8615  0070FE  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
  8616  007102                     l592:
  8617                           
  8618                           ;radio_driver_SX1276.c: 1168: }
  8619                           ;radio_driver_SX1276.c: 1169: }
  8620                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8621  007102  0E02               	movlw	2
  8622  007104  0100               	movlb	0	; () banked
  8623  007106  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8624  007108  0E12               	movlw	18
  8625  00710A  EF2A  F03A         	goto	_RADIO_RegisterWrite
  8626  00710E                     __end_of_RADIO_FHSSChangeChannel:
  8627                           	opt stack 0
  8628                           tosu	equ	0xFFF
  8629                           tosh	equ	0xFFE
  8630                           tosl	equ	0xFFD
  8631                           pclath	equ	0xFFA
  8632                           tblptru	equ	0xFF8
  8633                           tblptrh	equ	0xFF7
  8634                           tblptrl	equ	0xFF6
  8635                           tablat	equ	0xFF5
  8636                           prodh	equ	0xFF4
  8637                           prodl	equ	0xFF3
  8638                           intcon	equ	0xFF2
  8639                           intcon2	equ	0xFF1
  8640                           intcon3	equ	0xFF0
  8641                           postinc0	equ	0xFEE
  8642                           wreg	equ	0xFE8
  8643                           postinc1	equ	0xFE6
  8644                           postdec1	equ	0xFE5
  8645                           plusw1	equ	0xFE3
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           indf2	equ	0xFDF
  8649                           postinc2	equ	0xFDE
  8650                           postdec2	equ	0xFDD
  8651                           fsr2h	equ	0xFDA
  8652                           fsr2l	equ	0xFD9
  8653                           status	equ	0xFD8
  8654                           
  8655 ;; *************** function _RADIO_DIO0 *****************
  8656 ;; Defined at:
  8657 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;		None
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  opMode          1  135[BANK0 ] unsigned char 
  8662 ;;  dioMapping      1  134[BANK0 ] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : F/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;Total ram usage:        4 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:   17
  8679 ;; This function calls:
  8680 ;;		_RADIO_FSKPacketSent
  8681 ;;		_RADIO_FSKPayloadReady
  8682 ;;		_RADIO_RegisterRead
  8683 ;;		_RADIO_RxDone
  8684 ;;		_RADIO_TxDone
  8685 ;;		_RADIO_UnhandledInterrupt
  8686 ;; This function is called by:
  8687 ;;		_LORAWAN_Mainloop
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text55
  8692  006440                     __ptext55:
  8693                           	opt stack 0
  8694  006440                     _RADIO_DIO0:
  8695                           	opt stack 12
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8699                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8700                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8701                           
  8702                           ;incstack = 0
  8703  006440  0E40               	movlw	64
  8704  006442  EC53  F039         	call	_RADIO_RegisterRead
  8705  006446  6FE4               	movwf	??_RADIO_DIO0& (0+255),b
  8706  006448  0E06               	movlw	6
  8707  00644A  6FE5               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8708  00644C                     u17925:
  8709  00644C  90D8               	bcf	status,0,c
  8710  00644E  33E4               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8711  006450  2FE5               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8712  006452  D7FC               	goto	u17925
  8713  006454  51E4               	movf	??_RADIO_DIO0& (0+255),w,b
  8714  006456  0B03               	andlw	3
  8715  006458  6FE6               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8716                           
  8717                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8718  00645A  0E01               	movlw	1
  8719  00645C  EC53  F039         	call	_RADIO_RegisterRead
  8720  006460  6FE7               	movwf	RADIO_DIO0@opMode& (0+255),b
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8724  006462  AFE7               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8725  006464  D01C               	goto	l15211
  8726  006466  D003               	goto	l15195
  8727  006468                     l15191:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8731  006468  0E01               	movlw	1
  8732  00646A  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8733  00646E                     l15195:
  8734                           
  8735                           ; BSR set to: 0
  8736  00646E  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8737                           
  8738                           ; Switch size 1, requested type "speed"
  8739                           ; Number of cases is 2, Range of values is 0 to 1
  8740                           ; switch strategies available:
  8741                           ; Name         Instructions Cycles
  8742                           ; simple_byte            7     4 (average)
  8743                           ;	Chosen strategy is simple_byte
  8744  006470  E102 EFCB  F028    	bz	_RADIO_RxDone
  8745  006476  0A01               	xorlw	1	; case 1
  8746  006478  E102 EFCA  F01D    	bz	_RADIO_TxDone
  8747  00647E  D7F4               	goto	l15191
  8748  006480                     l15197:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8752  006480  0E07               	movlw	7
  8753  006482  17E7               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8754                           
  8755                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8756  006484  0E03               	movlw	3
  8757  006486  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8758  006488  E102               	bnz	l15201
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;radio_driver_SX1276.c: 1209: {
  8762                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8763  00648A  EF01  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8764  00648E                     l15201:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8768  00648E  0E05               	movlw	5
  8769  006490  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8770  006492  E102               	bnz	l15207
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;radio_driver_SX1276.c: 1214: {
  8774                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8775  006494  EF1F  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8776  006498                     l15207:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8780  006498  0E00               	movlw	0
  8781  00649A  EF8A  F039         	goto	_RADIO_UnhandledInterrupt
  8782  00649E                     l15211:
  8783                           
  8784                           ; BSR set to: 0
  8785  00649E  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8786                           
  8787                           ; Switch size 1, requested type "speed"
  8788                           ; Number of cases is 1, Range of values is 0 to 0
  8789                           ; switch strategies available:
  8790                           ; Name         Instructions Cycles
  8791                           ; simple_byte            4     3 (average)
  8792                           ;	Chosen strategy is simple_byte
  8793  0064A0  E0EF               	bz	l15197
  8794  0064A2  D7FA               	goto	l15207
  8795  0064A4                     __end_of_RADIO_DIO0:
  8796                           	opt stack 0
  8797                           tosu	equ	0xFFF
  8798                           tosh	equ	0xFFE
  8799                           tosl	equ	0xFFD
  8800                           pclath	equ	0xFFA
  8801                           tblptru	equ	0xFF8
  8802                           tblptrh	equ	0xFF7
  8803                           tblptrl	equ	0xFF6
  8804                           tablat	equ	0xFF5
  8805                           prodh	equ	0xFF4
  8806                           prodl	equ	0xFF3
  8807                           intcon	equ	0xFF2
  8808                           intcon2	equ	0xFF1
  8809                           intcon3	equ	0xFF0
  8810                           postinc0	equ	0xFEE
  8811                           wreg	equ	0xFE8
  8812                           postinc1	equ	0xFE6
  8813                           postdec1	equ	0xFE5
  8814                           plusw1	equ	0xFE3
  8815                           fsr1h	equ	0xFE2
  8816                           fsr1l	equ	0xFE1
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           fsr2h	equ	0xFDA
  8821                           fsr2l	equ	0xFD9
  8822                           status	equ	0xFD8
  8823                           
  8824 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8825 ;; Defined at:
  8826 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  modulation      1    wreg     enum E7751
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  modulation      1    8[BANK0 ] enum E7751
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      void 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : F/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8844 ;;Total ram usage:        1 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:   10
  8847 ;; This function calls:
  8848 ;;		_RADIO_RegisterWrite
  8849 ;; This function is called by:
  8850 ;;		_RADIO_DIO0
  8851 ;;		_RADIO_DIO1
  8852 ;;		_RADIO_DIO2
  8853 ;;		_RADIO_DIO3
  8854 ;;		_RADIO_DIO4
  8855 ;;		_RADIO_DIO5
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text56
  8860  007314                     __ptext56:
  8861                           	opt stack 0
  8862  007314                     _RADIO_UnhandledInterrupt:
  8863                           	opt stack 18
  8864                           
  8865                           ;incstack = 0
  8866                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8867  007314  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8868                           
  8869                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8870  007316  0100               	movlb	0	; () banked
  8871  007318  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8872  00731A  E104               	bnz	l14887
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;radio_driver_SX1276.c: 1145: {
  8876                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8877  00731C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8878  00731E  0E12               	movlw	18
  8879  007320  EF2A  F03A         	goto	_RADIO_RegisterWrite
  8880  007324                     l14887:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;radio_driver_SX1276.c: 1148: else
  8884                           ;radio_driver_SX1276.c: 1149: {
  8885                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8886  007324  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8887  007326  0E3E               	movlw	62
  8888  007328  EC2A  F03A         	call	_RADIO_RegisterWrite
  8889                           
  8890                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8891  00732C  0100               	movlb	0	; () banked
  8892  00732E  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8893  007330  0E3F               	movlw	63
  8894  007332  EF2A  F03A         	goto	_RADIO_RegisterWrite
  8895  007336                     __end_of_RADIO_UnhandledInterrupt:
  8896                           	opt stack 0
  8897                           tosu	equ	0xFFF
  8898                           tosh	equ	0xFFE
  8899                           tosl	equ	0xFFD
  8900                           pclath	equ	0xFFA
  8901                           tblptru	equ	0xFF8
  8902                           tblptrh	equ	0xFF7
  8903                           tblptrl	equ	0xFF6
  8904                           tablat	equ	0xFF5
  8905                           prodh	equ	0xFF4
  8906                           prodl	equ	0xFF3
  8907                           intcon	equ	0xFF2
  8908                           intcon2	equ	0xFF1
  8909                           intcon3	equ	0xFF0
  8910                           postinc0	equ	0xFEE
  8911                           wreg	equ	0xFE8
  8912                           postinc1	equ	0xFE6
  8913                           postdec1	equ	0xFE5
  8914                           plusw1	equ	0xFE3
  8915                           fsr1h	equ	0xFE2
  8916                           fsr1l	equ	0xFE1
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           postdec2	equ	0xFDD
  8920                           fsr2h	equ	0xFDA
  8921                           fsr2l	equ	0xFD9
  8922                           status	equ	0xFD8
  8923                           
  8924 ;; *************** function _RADIO_TxDone *****************
  8925 ;; Defined at:
  8926 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : F/0
  8937 ;;		On exit  : C/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;Total ram usage:       12 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:   15
  8947 ;; This function calls:
  8948 ;;		_LORAWAN_TxDone
  8949 ;;		_RADIO_RegisterWrite
  8950 ;;		_RADIO_WriteMode
  8951 ;;		_SwTimerReadValue
  8952 ;;		_SwTimerStop
  8953 ;; This function is called by:
  8954 ;;		_RADIO_DIO0
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           	psect	text57
  8959  003B94                     __ptext57:
  8960                           	opt stack 0
  8961  003B94                     _RADIO_TxDone:
  8962                           	opt stack 13
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8966                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8967                           
  8968                           ;incstack = 0
  8969  003B94  0101               	movlb	1	; () banked
  8970  003B96  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8971  003B98  EC57  F03A         	call	_SwTimerStop
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8975  003B9C  0E08               	movlw	8
  8976  003B9E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8977  003BA0  0E12               	movlw	18
  8978  003BA2  EC2A  F03A         	call	_RADIO_RegisterWrite
  8979                           
  8980                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8981  003BA6  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8982  003BAA  0E00               	movlw	0
  8983  003BAC  0100               	movlb	0	; () banked
  8984  003BAE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8985  003BB0  EC5F  F028         	call	_RADIO_WriteMode
  8986                           
  8987                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8988  003BB4  0101               	movlb	1	; () banked
  8989  003BB6  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8990                           
  8991                           ; BSR set to: 1
  8992                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8993  003BB8  B9A1               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8994  003BBA  0012               	return	
  8995                           
  8996                           ; BSR set to: 1
  8997                           ;radio_driver_SX1276.c: 1087: {
  8998                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8999  003BBC  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9000  003BBE  EC81  F036         	call	_SwTimerReadValue
  9001  003BC2  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9002  003BC4  E107               	bnz	u17190
  9003  003BC6  0E1F               	movlw	31
  9004  003BC8  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  9005  003BCA  0EAC               	movlw	172
  9006  003BCC  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9007  003BCE  0EDF               	movlw	223
  9008  003BD0  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9009  003BD2  E346               	bnc	l14853
  9010  003BD4                     u17190:
  9011                           
  9012                           ; BSR set to: 0
  9013  003BD4  0101               	movlb	1	; () banked
  9014  003BD6  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9015  003BD8  EC81  F036         	call	_SwTimerReadValue
  9016  003BDC  0E0D               	movlw	13
  9017  003BDE  D005               	goto	u17200
  9018  003BE0                     u17205:
  9019  003BE0  90D8               	bcf	status,0,c
  9020  003BE2  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9021  003BE4  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9022  003BE6  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9023  003BE8  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9024  003BEA                     u17200:
  9025  003BEA  2EE8               	decfsz	wreg,f,c
  9026  003BEC  D7F9               	goto	u17205
  9027  003BEE  0E7D               	movlw	125
  9028  003BF0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9029  003BF2  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9030  003BF6  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9031  003BFA  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9032  003BFC  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9033  003BFE  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9034  003C00  50F3               	movf	prodl,w,c
  9035  003C02  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9036  003C04  50F4               	movf	prodh,w,c
  9037  003C06  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9038  003C08  0E00               	movlw	0
  9039  003C0A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9040  003C0C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9041  003C0E  50F3               	movf	prodl,w,c
  9042  003C10  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9043  003C12  50F4               	movf	prodh,w,c
  9044  003C14  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9045  003C16  0E00               	movlw	0
  9046  003C18  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9047  003C1A  0E7D               	movlw	125
  9048  003C1C  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9049  003C1E  50F3               	movf	prodl,w,c
  9050  003C20  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9051  003C22  50F4               	movf	prodh,w,c
  9052  003C24  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9053  003C26  0E00               	movlw	0
  9054  003C28  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9055  003C2A  50F3               	movf	prodl,w,c
  9056  003C2C  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9057  003C2E  50F4               	movf	prodh,w,c
  9058  003C30  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9059  003C32  0E00               	movlw	0
  9060  003C34  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9061  003C36  50F3               	movf	prodl,w,c
  9062  003C38  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9063  003C3A  50F4               	movf	prodh,w,c
  9064  003C3C  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9065  003C3E  0E7D               	movlw	125
  9066  003C40  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9067  003C42  50F3               	movf	prodl,w,c
  9068  003C44  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9069  003C46  0E00               	movlw	0
  9070  003C48  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9071  003C4A  50F3               	movf	prodl,w,c
  9072  003C4C  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9073  003C4E  0E00               	movlw	0
  9074  003C50  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9075  003C52  50F3               	movf	prodl,w,c
  9076  003C54  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9077  003C56  0E00               	movlw	0
  9078  003C58  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9079  003C5A  50F3               	movf	prodl,w,c
  9080  003C5C  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9081  003C5E  D045               	goto	L4
  9082  003C60                     l14853:
  9083                           
  9084                           ; BSR set to: 0
  9085  003C60  0101               	movlb	1	; () banked
  9086  003C62  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9087  003C64  EC81  F036         	call	_SwTimerReadValue
  9088  003C68  0E7D               	movlw	125
  9089  003C6A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9090  003C6C  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9091  003C70  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9092  003C74  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9093  003C76  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9094  003C78  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9095  003C7A  50F3               	movf	prodl,w,c
  9096  003C7C  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9097  003C7E  50F4               	movf	prodh,w,c
  9098  003C80  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9099  003C82  0E00               	movlw	0
  9100  003C84  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9101  003C86  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9102  003C88  50F3               	movf	prodl,w,c
  9103  003C8A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9104  003C8C  50F4               	movf	prodh,w,c
  9105  003C8E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9106  003C90  0E00               	movlw	0
  9107  003C92  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9108  003C94  0E7D               	movlw	125
  9109  003C96  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9110  003C98  50F3               	movf	prodl,w,c
  9111  003C9A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9112  003C9C  50F4               	movf	prodh,w,c
  9113  003C9E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9114  003CA0  0E00               	movlw	0
  9115  003CA2  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9116  003CA4  50F3               	movf	prodl,w,c
  9117  003CA6  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9118  003CA8  50F4               	movf	prodh,w,c
  9119  003CAA  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9120  003CAC  0E00               	movlw	0
  9121  003CAE  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9122  003CB0  50F3               	movf	prodl,w,c
  9123  003CB2  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9124  003CB4  50F4               	movf	prodh,w,c
  9125  003CB6  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9126  003CB8  0E7D               	movlw	125
  9127  003CBA  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9128  003CBC  50F3               	movf	prodl,w,c
  9129  003CBE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9130  003CC0  0E00               	movlw	0
  9131  003CC2  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9132  003CC4  50F3               	movf	prodl,w,c
  9133  003CC6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9134  003CC8  0E00               	movlw	0
  9135  003CCA  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9136  003CCC  50F3               	movf	prodl,w,c
  9137  003CCE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9138  003CD0  0E00               	movlw	0
  9139  003CD2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9140  003CD4  50F3               	movf	prodl,w,c
  9141  003CD6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9142  003CD8  0E0D               	movlw	13
  9143  003CDA  D005               	goto	u17210
  9144  003CDC                     u17215:
  9145  003CDC  90D8               	bcf	status,0,c
  9146  003CDE  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9147  003CE0  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9148  003CE2  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9149  003CE4  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9150  003CE6                     u17210:
  9151  003CE6  2EE8               	decfsz	wreg,f,c
  9152  003CE8  D7F9               	goto	u17215
  9153  003CEA                     L4:
  9154  003CEA  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1211
  9155  003CEE  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1211+1
  9156  003CF2  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1211+2
  9157  003CF6  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1211+3
  9158                           
  9159                           ; BSR set to: 0
  9160  003CFA  51DA               	movf	_RADIO_TxDone$1211& (0+255),w,b
  9161  003CFC  0820               	sublw	32
  9162  003CFE  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9163  003D00  0E4E               	movlw	78
  9164  003D02  55DB               	subfwb	(_RADIO_TxDone$1211+1)& (0+255),w,b
  9165  003D04  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9166  003D06  0E00               	movlw	0
  9167  003D08  55DC               	subfwb	(_RADIO_TxDone$1211+2)& (0+255),w,b
  9168  003D0A  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9169  003D0C  0E00               	movlw	0
  9170  003D0E  55DD               	subfwb	(_RADIO_TxDone$1211+3)& (0+255),w,b
  9171  003D10  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9175  003D12  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9176  003D16  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9177  003D1A  EF7D  F005         	goto	_LORAWAN_TxDone	;wreg free
  9178  003D1E                     __end_of_RADIO_TxDone:
  9179                           	opt stack 0
  9180                           tosu	equ	0xFFF
  9181                           tosh	equ	0xFFE
  9182                           tosl	equ	0xFFD
  9183                           pclath	equ	0xFFA
  9184                           tblptru	equ	0xFF8
  9185                           tblptrh	equ	0xFF7
  9186                           tblptrl	equ	0xFF6
  9187                           tablat	equ	0xFF5
  9188                           prodh	equ	0xFF4
  9189                           prodl	equ	0xFF3
  9190                           intcon	equ	0xFF2
  9191                           intcon2	equ	0xFF1
  9192                           intcon3	equ	0xFF0
  9193                           postinc0	equ	0xFEE
  9194                           wreg	equ	0xFE8
  9195                           postinc1	equ	0xFE6
  9196                           postdec1	equ	0xFE5
  9197                           plusw1	equ	0xFE3
  9198                           fsr1h	equ	0xFE2
  9199                           fsr1l	equ	0xFE1
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           postdec2	equ	0xFDD
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207 ;; *************** function _RADIO_RxDone *****************
  9208 ;; Defined at:
  9209 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;		None
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  i               1  131[BANK0 ] unsigned char 
  9214 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : F/0
  9221 ;;		On exit  : D/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;Total ram usage:        2 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:   16
  9231 ;; This function calls:
  9232 ;;		_HALSPICSAssert
  9233 ;;		_HALSPICSDeassert
  9234 ;;		_HALSPISend
  9235 ;;		_LORAWAN_RxDone
  9236 ;;		_RADIO_RegisterRead
  9237 ;;		_RADIO_RegisterWrite
  9238 ;;		_RADIO_WriteMode
  9239 ;;		_SwTimerStop
  9240 ;;		___abdiv
  9241 ;; This function is called by:
  9242 ;;		_RADIO_DIO0
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text58
  9247  005196                     __ptext58:
  9248                           	opt stack 0
  9249  005196                     _RADIO_RxDone:
  9250                           	opt stack 12
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9254                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9255                           
  9256                           ;incstack = 0
  9257  005196  0E12               	movlw	18
  9258  005198  EC53  F039         	call	_RADIO_RegisterRead
  9259  00519C  6FE2               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9260                           
  9261                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9262  00519E  0E70               	movlw	112
  9263  0051A0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9264  0051A2  0E12               	movlw	18
  9265  0051A4  EC2A  F03A         	call	_RADIO_RegisterWrite
  9266                           
  9267                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9268  0051A8  0100               	movlb	0	; () banked
  9269  0051AA  51E2               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9270  0051AC  0B50               	andlw	80
  9271  0051AE  0A50               	xorlw	80
  9272  0051B0  A4D8               	btfss	status,2,c
  9273  0051B2  0012               	return	
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;radio_driver_SX1276.c: 969: {
  9277                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9278  0051B4  0101               	movlb	1	; () banked
  9279  0051B6  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9280  0051B8  EC57  F03A         	call	_SwTimerStop
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9284  0051BC  0E1C               	movlw	28
  9285  0051BE  EC53  F039         	call	_RADIO_RegisterRead
  9286  0051C2  6FE3               	movwf	RADIO_RxDone@i& (0+255),b
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9290  0051C4  0101               	movlb	1	; () banked
  9291  0051C6  519A               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9292  0051C8  E004               	bz	l14755
  9293                           
  9294                           ; BSR set to: 1
  9295  0051CA  0100               	movlb	0	; () banked
  9296  0051CC  ABE2               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9297                           
  9298                           ; BSR set to: 0
  9299  0051CE  ADE3               	btfss	RADIO_RxDone@i& (0+255),6,b
  9300  0051D0  D037               	goto	l14777
  9301  0051D2                     l14755:
  9302                           
  9303                           ;radio_driver_SX1276.c: 976: {
  9304                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9305  0051D2  0E13               	movlw	19
  9306  0051D4  EC53  F039         	call	_RADIO_RegisterRead
  9307  0051D8  0101               	movlb	1	; () banked
  9308  0051DA  6FA2               	movwf	(_RadioConfiguration+36)& (0+255),b
  9309                           
  9310                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9311  0051DC  0100               	movlb	0	; () banked
  9312  0051DE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9313  0051E0  0E0D               	movlw	13
  9314  0051E2  EC2A  F03A         	call	_RADIO_RegisterWrite
  9315                           
  9316                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9317  0051E6  EC5F  F03C         	call	_HALSPICSAssert	;wreg free
  9318                           
  9319                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9320  0051EA  0E00               	movlw	0
  9321  0051EC  EC07  F03C         	call	_HALSPISend
  9322                           
  9323                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9324  0051F0  0100               	movlb	0	; () banked
  9325  0051F2  6BE3               	clrf	RADIO_RxDone@i& (0+255),b
  9326  0051F4  D00D               	goto	l14767
  9327  0051F6                     l14763:
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;radio_driver_SX1276.c: 990: {
  9331                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9332  0051F6  51E3               	movf	RADIO_RxDone@i& (0+255),w,b
  9333  0051F8  0101               	movlb	1	; () banked
  9334  0051FA  25A3               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9335  0051FC  6ED9               	movwf	fsr2l,c
  9336  0051FE  0E00               	movlw	0
  9337  005200  21A4               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9338  005202  6EDA               	movwf	fsr2h,c
  9339  005204  0EFF               	movlw	255
  9340  005206  EC07  F03C         	call	_HALSPISend
  9341  00520A  6EDF               	movwf	indf2,c
  9342  00520C  0100               	movlb	0	; () banked
  9343  00520E  2BE3               	incf	RADIO_RxDone@i& (0+255),f,b
  9344  005210                     l14767:
  9345                           
  9346                           ; BSR set to: 0
  9347  005210  0101               	movlb	1	; () banked
  9348  005212  51A2               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9349  005214  0100               	movlb	0	; () banked
  9350  005216  5DE3               	subwf	RADIO_RxDone@i& (0+255),w,b
  9351  005218  E3EE               	bnc	l14763
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;radio_driver_SX1276.c: 992: }
  9355                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9356  00521A  EC5D  F03C         	call	_HALSPICSDeassert	;wreg free
  9357                           
  9358                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9359  00521E  0101               	movlb	1	; () banked
  9360  005220  85A1               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9361                           
  9362                           ; BSR set to: 1
  9363                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9364  005222  0E19               	movlw	25
  9365  005224  EC53  F039         	call	_RADIO_RegisterRead
  9366  005228  0101               	movlb	1	; () banked
  9367  00522A  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9368                           
  9369                           ; BSR set to: 1
  9370                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9371  00522C  0E04               	movlw	4
  9372  00522E  0100               	movlb	0	; () banked
  9373  005230  6F64               	movwf	___abdiv@divisor& (0+255),b
  9374  005232  0101               	movlb	1	; () banked
  9375  005234  51B0               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9376  005236  EC2B  F034         	call	___abdiv
  9377  00523A  0101               	movlb	1	; () banked
  9378  00523C  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9379                           
  9380                           ;radio_driver_SX1276.c: 998: }
  9381  00523E  D002               	goto	l14779
  9382  005240                     l14777:
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;radio_driver_SX1276.c: 999: else
  9386                           ;radio_driver_SX1276.c: 1000: {
  9387                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9388  005240  0101               	movlb	1	; () banked
  9389  005242  87A1               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9390  005244                     l14779:
  9391                           
  9392                           ; BSR set to: 1
  9393                           ;radio_driver_SX1276.c: 1003: }
  9394                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9395  005244  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9396  005248  0E00               	movlw	0
  9397  00524A  0100               	movlb	0	; () banked
  9398  00524C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9399  00524E  EC5F  F028         	call	_RADIO_WriteMode
  9400                           
  9401                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9402  005252  0101               	movlb	1	; () banked
  9403  005254  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9404                           
  9405                           ; BSR set to: 1
  9406                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9407  005256  C1A3  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9408  00525A  C1A4  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9409  00525E  C1A2  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9410  005262  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9411  005266                     __end_of_RADIO_RxDone:
  9412                           	opt stack 0
  9413                           tosu	equ	0xFFF
  9414                           tosh	equ	0xFFE
  9415                           tosl	equ	0xFFD
  9416                           pclath	equ	0xFFA
  9417                           tblptru	equ	0xFF8
  9418                           tblptrh	equ	0xFF7
  9419                           tblptrl	equ	0xFF6
  9420                           tablat	equ	0xFF5
  9421                           prodh	equ	0xFF4
  9422                           prodl	equ	0xFF3
  9423                           intcon	equ	0xFF2
  9424                           intcon2	equ	0xFF1
  9425                           intcon3	equ	0xFF0
  9426                           postinc0	equ	0xFEE
  9427                           wreg	equ	0xFE8
  9428                           postinc1	equ	0xFE6
  9429                           postdec1	equ	0xFE5
  9430                           plusw1	equ	0xFE3
  9431                           fsr1h	equ	0xFE2
  9432                           fsr1l	equ	0xFE1
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           postdec2	equ	0xFDD
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function ___abdiv *****************
  9441 ;; Defined at:
  9442 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  dividend        1    wreg     char 
  9445 ;;  divisor         1    4[BANK0 ] char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  dividend        1    8[BANK0 ] char 
  9448 ;;  quotient        1    7[BANK0 ] char 
  9449 ;;  sign            1    6[BANK0 ] unsigned char 
  9450 ;;  counter         1    5[BANK0 ] unsigned char 
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      char 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0
  9455 ;; Tracked objects:
  9456 ;;		On entry : F/1
  9457 ;;		On exit  : F/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9460 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;Total ram usage:        5 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:    7
  9467 ;; This function calls:
  9468 ;;		Nothing
  9469 ;; This function is called by:
  9470 ;;		_RADIO_RxDone
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text59
  9475  006856                     __ptext59:
  9476                           	opt stack 0
  9477  006856                     ___abdiv:
  9478                           	opt stack 20
  9479                           
  9480                           ;incstack = 0
  9481                           ;___abdiv@dividend stored from wreg
  9482  006856  0100               	movlb	0	; () banked
  9483  006858  6F68               	movwf	___abdiv@dividend& (0+255),b
  9484  00685A  6B66               	clrf	___abdiv@sign& (0+255),b
  9485                           
  9486                           ; BSR set to: 0
  9487  00685C  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9488  00685E  D003               	goto	l10557
  9489                           
  9490                           ; BSR set to: 0
  9491  006860  6D64               	negf	___abdiv@divisor& (0+255),b
  9492                           
  9493                           ; BSR set to: 0
  9494  006862  0E01               	movlw	1
  9495  006864  6F66               	movwf	___abdiv@sign& (0+255),b
  9496  006866                     l10557:
  9497                           
  9498                           ; BSR set to: 0
  9499  006866  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9500  006868  D003               	goto	l10563
  9501                           
  9502                           ; BSR set to: 0
  9503  00686A  6D68               	negf	___abdiv@dividend& (0+255),b
  9504                           
  9505                           ; BSR set to: 0
  9506  00686C  0E01               	movlw	1
  9507  00686E  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9508  006870                     l10563:
  9509                           
  9510                           ; BSR set to: 0
  9511  006870  6B67               	clrf	___abdiv@quotient& (0+255),b
  9512                           
  9513                           ; BSR set to: 0
  9514  006872  5164               	movf	___abdiv@divisor& (0+255),w,b
  9515  006874  E014               	bz	l10585
  9516                           
  9517                           ; BSR set to: 0
  9518  006876  0E01               	movlw	1
  9519  006878  6F65               	movwf	___abdiv@counter& (0+255),b
  9520  00687A  D003               	goto	l10573
  9521  00687C                     l10569:
  9522                           
  9523                           ; BSR set to: 0
  9524  00687C  90D8               	bcf	status,0,c
  9525  00687E  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 0
  9528  006880  2B65               	incf	___abdiv@counter& (0+255),f,b
  9529  006882                     l10573:
  9530                           
  9531                           ; BSR set to: 0
  9532  006882  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9533  006884  D7FB               	goto	l10569
  9534  006886                     l10575:
  9535                           
  9536                           ; BSR set to: 0
  9537  006886  90D8               	bcf	status,0,c
  9538  006888  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9539  00688A  5164               	movf	___abdiv@divisor& (0+255),w,b
  9540  00688C  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9541  00688E  E303               	bnc	l10581
  9542                           
  9543                           ; BSR set to: 0
  9544  006890  5164               	movf	___abdiv@divisor& (0+255),w,b
  9545  006892  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9546                           
  9547                           ; BSR set to: 0
  9548  006894  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9549  006896                     l10581:
  9550                           
  9551                           ; BSR set to: 0
  9552  006896  90D8               	bcf	status,0,c
  9553  006898  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9554                           
  9555                           ; BSR set to: 0
  9556  00689A  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9557  00689C  D7F4               	goto	l10575
  9558  00689E                     l10585:
  9559                           
  9560                           ; BSR set to: 0
  9561  00689E  5166               	movf	___abdiv@sign& (0+255),w,b
  9562  0068A0  E001               	bz	l10589
  9563                           
  9564                           ; BSR set to: 0
  9565  0068A2  6D67               	negf	___abdiv@quotient& (0+255),b
  9566  0068A4                     l10589:
  9567                           
  9568                           ; BSR set to: 0
  9569  0068A4  5167               	movf	___abdiv@quotient& (0+255),w,b
  9570                           
  9571                           ; BSR set to: 0
  9572  0068A6  0012               	return		;funcret
  9573  0068A8                     __end_of___abdiv:
  9574                           	opt stack 0
  9575                           tosu	equ	0xFFF
  9576                           tosh	equ	0xFFE
  9577                           tosl	equ	0xFFD
  9578                           pclath	equ	0xFFA
  9579                           tblptru	equ	0xFF8
  9580                           tblptrh	equ	0xFF7
  9581                           tblptrl	equ	0xFF6
  9582                           tablat	equ	0xFF5
  9583                           prodh	equ	0xFF4
  9584                           prodl	equ	0xFF3
  9585                           intcon	equ	0xFF2
  9586                           intcon2	equ	0xFF1
  9587                           intcon3	equ	0xFF0
  9588                           postinc0	equ	0xFEE
  9589                           wreg	equ	0xFE8
  9590                           postinc1	equ	0xFE6
  9591                           postdec1	equ	0xFE5
  9592                           plusw1	equ	0xFE3
  9593                           fsr1h	equ	0xFE2
  9594                           fsr1l	equ	0xFE1
  9595                           indf2	equ	0xFDF
  9596                           postinc2	equ	0xFDE
  9597                           postdec2	equ	0xFDD
  9598                           fsr2h	equ	0xFDA
  9599                           fsr2l	equ	0xFD9
  9600                           status	equ	0xFD8
  9601                           
  9602 ;; *************** function _RADIO_FSKPayloadReady *****************
  9603 ;; Defined at:
  9604 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  i               1  131[BANK0 ] unsigned char 
  9609 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : F/0
  9616 ;;		On exit  : D/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;Total ram usage:        2 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:   16
  9626 ;; This function calls:
  9627 ;;		_HALSPICSAssert
  9628 ;;		_HALSPICSDeassert
  9629 ;;		_HALSPISend
  9630 ;;		_LORAWAN_RxDone
  9631 ;;		_LORAWAN_RxTimeout
  9632 ;;		_RADIO_RegisterRead
  9633 ;;		_RADIO_WriteMode
  9634 ;;		_SwTimerStop
  9635 ;; This function is called by:
  9636 ;;		_RADIO_DIO0
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text60
  9641  005A3E                     __ptext60:
  9642                           	opt stack 0
  9643  005A3E                     _RADIO_FSKPayloadReady:
  9644                           	opt stack 12
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9648                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9649                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;incstack = 0
  9653  005A3E  0E3F               	movlw	63
  9654  005A40  EC53  F039         	call	_RADIO_RegisterRead
  9655  005A44  6FE2               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9659  005A46  A5E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9660  005A48  0012               	return	
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;radio_driver_SX1276.c: 1017: {
  9664                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9665  005A4A  0101               	movlb	1	; () banked
  9666  005A4C  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9667  005A4E  EC57  F03A         	call	_SwTimerStop
  9668                           
  9669                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9670  005A52  0101               	movlb	1	; () banked
  9671  005A54  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9672  005A56  EC57  F03A         	call	_SwTimerStop
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9676  005A5A  EC5F  F03C         	call	_HALSPICSAssert	;wreg free
  9677                           
  9678                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9679  005A5E  0E00               	movlw	0
  9680  005A60  EC07  F03C         	call	_HALSPISend
  9681                           
  9682                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9683  005A64  0EFF               	movlw	255
  9684  005A66  EC07  F03C         	call	_HALSPISend
  9685  005A6A  0101               	movlb	1	; () banked
  9686  005A6C  6FA2               	movwf	(_RadioConfiguration+36)& (0+255),b
  9687                           
  9688                           ; BSR set to: 1
  9689                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9690  005A6E  0100               	movlb	0	; () banked
  9691  005A70  6BE3               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9692  005A72  D00D               	goto	l14803
  9693  005A74                     l14799:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;radio_driver_SX1276.c: 1029: {
  9697                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9698  005A74  51E3               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9699  005A76  0101               	movlb	1	; () banked
  9700  005A78  25A3               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9701  005A7A  6ED9               	movwf	fsr2l,c
  9702  005A7C  0E00               	movlw	0
  9703  005A7E  21A4               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9704  005A80  6EDA               	movwf	fsr2h,c
  9705  005A82  0EFF               	movlw	255
  9706  005A84  EC07  F03C         	call	_HALSPISend
  9707  005A88  6EDF               	movwf	indf2,c
  9708  005A8A  0100               	movlb	0	; () banked
  9709  005A8C  2BE3               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9710  005A8E                     l14803:
  9711                           
  9712                           ; BSR set to: 0
  9713  005A8E  0101               	movlb	1	; () banked
  9714  005A90  51A2               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9715  005A92  0100               	movlb	0	; () banked
  9716  005A94  5DE3               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9717  005A96  E3EE               	bnc	l14799
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;radio_driver_SX1276.c: 1031: }
  9721                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9722  005A98  EC5D  F03C         	call	_HALSPICSDeassert	;wreg free
  9723                           
  9724                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9725  005A9C  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9726  005AA0  0E00               	movlw	0
  9727  005AA2  0100               	movlb	0	; () banked
  9728  005AA4  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9729  005AA6  EC5F  F028         	call	_RADIO_WriteMode
  9730                           
  9731                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9732  005AAA  0101               	movlb	1	; () banked
  9733  005AAC  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9734                           
  9735                           ; BSR set to: 1
  9736                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9737  005AAE  0E80               	movlw	128
  9738  005AB0  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
  9739                           
  9740                           ; BSR set to: 1
  9741                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9742  005AB2  059A               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9743  005AB4  E103               	bnz	l14817
  9744                           
  9745                           ; BSR set to: 1
  9746                           ;radio_driver_SX1276.c: 1040: {
  9747                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9748  005AB6  0100               	movlb	0	; () banked
  9749  005AB8  A3E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9750  005ABA  D003               	goto	l14819
  9751  005ABC                     l14817:
  9752                           
  9753                           ;radio_driver_SX1276.c: 1042: {
  9754                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9755  005ABC  0101               	movlb	1	; () banked
  9756  005ABE  85A1               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9757                           
  9758                           ;radio_driver_SX1276.c: 1044: }
  9759  005AC0  D002               	goto	l14823
  9760  005AC2                     l14819:
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;radio_driver_SX1276.c: 1045: else
  9764                           ;radio_driver_SX1276.c: 1046: {
  9765                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9766  005AC2  0101               	movlb	1	; () banked
  9767  005AC4  95A1               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9768  005AC6                     l14823:
  9769                           
  9770                           ; BSR set to: 1
  9771                           ;radio_driver_SX1276.c: 1053: }
  9772                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9773  005AC6  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9774  005AC8  EF62  F013         	goto	_LORAWAN_RxTimeout
  9775                           
  9776                           ; BSR set to: 1
  9777                           ;radio_driver_SX1276.c: 1056: {
  9778                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9779  005ACC  C1A3  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9780  005AD0  C1A4  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9781  005AD4  C1A2  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9782  005AD8  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9783  005ADC                     __end_of_RADIO_FSKPayloadReady:
  9784                           	opt stack 0
  9785                           tosu	equ	0xFFF
  9786                           tosh	equ	0xFFE
  9787                           tosl	equ	0xFFD
  9788                           pclath	equ	0xFFA
  9789                           tblptru	equ	0xFF8
  9790                           tblptrh	equ	0xFF7
  9791                           tblptrl	equ	0xFF6
  9792                           tablat	equ	0xFF5
  9793                           prodh	equ	0xFF4
  9794                           prodl	equ	0xFF3
  9795                           intcon	equ	0xFF2
  9796                           intcon2	equ	0xFF1
  9797                           intcon3	equ	0xFF0
  9798                           postinc0	equ	0xFEE
  9799                           wreg	equ	0xFE8
  9800                           postinc1	equ	0xFE6
  9801                           postdec1	equ	0xFE5
  9802                           plusw1	equ	0xFE3
  9803                           fsr1h	equ	0xFE2
  9804                           fsr1l	equ	0xFE1
  9805                           indf2	equ	0xFDF
  9806                           postinc2	equ	0xFDE
  9807                           postdec2	equ	0xFDD
  9808                           fsr2h	equ	0xFDA
  9809                           fsr2l	equ	0xFD9
  9810                           status	equ	0xFD8
  9811                           
  9812 ;; *************** function _LORAWAN_RxTimeout *****************
  9813 ;; Defined at:
  9814 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  minim           4   75[BANK0 ] unsigned long 
  9819 ;;  i               1   79[BANK0 ] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : F/1
  9826 ;;		On exit  : D/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;Total ram usage:        9 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:   15
  9836 ;; This function calls:
  9837 ;;		_LORAWAN_ReceiveWindow2Callback
  9838 ;;		_RADIO_Transmit
  9839 ;;		_ResetParametersForConfirmedTransmission
  9840 ;;		_ResetParametersForUnconfirmedTransmission
  9841 ;;		_RxDataDone
  9842 ;;		_SelectChannelForTransmission
  9843 ;;		_SetJoinFailState
  9844 ;;		_SwTimerSetTimeout
  9845 ;;		_SwTimerStart
  9846 ;;		___lldiv
  9847 ;; This function is called by:
  9848 ;;		_RADIO_FSKPayloadReady
  9849 ;;		_RADIO_RxTimeout
  9850 ;;		_RADIO_RxFSKTimeout
  9851 ;;		_RADIO_WatchdogTimeout
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text61
  9856  0026C4                     __ptext61:
  9857                           	opt stack 0
  9858  0026C4                     _LORAWAN_RxTimeout:
  9859                           	opt stack 12
  9860                           
  9861                           ; BSR set to: 1
  9862                           ;lorawan_eu.c: 466: uint8_t i;
  9863                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9864                           
  9865                           ;incstack = 0
  9866  0026C4  0100               	movlb	0	; () banked
  9867  0026C6  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9868  0026C8  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9869  0026CA  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9870  0026CC  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9871                           
  9872                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9873  0026CE  0102               	movlb	2	; () banked
  9874  0026D0  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9875  0026D2  D134               	goto	l14591
  9876                           
  9877                           ; BSR set to: 2
  9878                           ;lorawan_eu.c: 470: {
  9879                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9880  0026D4  5102               	movf	(_loRa+2)& (0+255),w,b
  9881  0026D6  0B0F               	andlw	15
  9882  0026D8  0A03               	xorlw	3
  9883  0026DA  E10E               	bnz	l1049
  9884                           
  9885                           ; BSR set to: 2
  9886                           ;lorawan_eu.c: 473: {
  9887                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9888  0026DC  5112               	movf	(_loRa+18)& (0+255),w,b
  9889  0026DE  E105               	bnz	l14527
  9890                           
  9891                           ; BSR set to: 2
  9892                           ;lorawan_eu.c: 475: {
  9893                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9894  0026E0  5102               	movf	(_loRa+2)& (0+255),w,b
  9895  0026E2  0BF0               	andlw	-16
  9896  0026E4  0904               	iorlw	4
  9897  0026E6  6F02               	movwf	(_loRa+2)& (0+255),b
  9898                           
  9899                           ;lorawan_eu.c: 477: }
  9900  0026E8  0012               	return	
  9901  0026EA                     l14527:
  9902                           
  9903                           ; BSR set to: 2
  9904                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9905  0026EA  0E02               	movlw	2
  9906  0026EC  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9907  0026EE  A4D8               	btfss	status,2,c
  9908  0026F0  0012               	return	
  9909                           
  9910                           ; BSR set to: 2
  9911                           ;lorawan_eu.c: 479: {
  9912                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9913  0026F2  6AE6               	clrf	postinc1,c
  9914  0026F4  EF9A  F029         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9915  0026F8                     l1049:
  9916                           
  9917                           ; BSR set to: 2
  9918                           ;lorawan_eu.c: 483: else
  9919                           ;lorawan_eu.c: 484: {
  9920                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9921  0026F8  B500               	btfsc	_loRa& (0+255),2,b
  9922                           
  9923                           ; BSR set to: 2
  9924                           ;lorawan_eu.c: 487: {
  9925                           ;lorawan_eu.c: 488: SetJoinFailState();
  9926  0026FA  EF66  F039         	goto	_SetJoinFailState	;wreg free
  9927                           
  9928                           ; BSR set to: 2
  9929                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9930                           
  9931                           ;lorawan_eu.c: 489: }
  9932  0026FE  A902               	btfss	(_loRa+2)& (0+255),4,b
  9933  002700  0012               	return	
  9934                           
  9935                           ; BSR set to: 2
  9936                           ;lorawan_eu.c: 492: {
  9937                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9938  002702  A100               	btfss	_loRa& (0+255),0,b
  9939  002704  D04B               	goto	l14549
  9940                           
  9941                           ; BSR set to: 2
  9942                           ;lorawan_eu.c: 494: {
  9943                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9944  002706  51D9               	movf	(_loRa+217)& (0+255),w,b
  9945  002708  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9946  00270A  E334               	bnc	l14543
  9947                           
  9948                           ; BSR set to: 2
  9949                           ;lorawan_eu.c: 496: {
  9950                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9951  00270C  5102               	movf	(_loRa+2)& (0+255),w,b
  9952  00270E  0BF0               	andlw	-16
  9953  002710  0906               	iorlw	6
  9954  002712  6F02               	movwf	(_loRa+2)& (0+255),b
  9955                           
  9956                           ; BSR set to: 2
  9957                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9958  002714  51A0               	movf	(_loRa+160)& (0+255),w,b
  9959  002716  0100               	movlb	0	; () banked
  9960  002718  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9961  00271A  0102               	movlb	2	; () banked
  9962  00271C  51A1               	movf	(_loRa+161)& (0+255),w,b
  9963  00271E  0100               	movlb	0	; () banked
  9964  002720  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9965  002722  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9966  002724  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9967  002726  0E0C               	movlw	12
  9968  002728                     u16615:
  9969  002728  90D8               	bcf	status,0,c
  9970  00272A  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9971  00272C  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9972  00272E  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9973  002730  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9974  002732  2EE8               	decfsz	wreg,f,c
  9975  002734  D7F9               	goto	u16615
  9976  002736  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9977  00273A  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9978  00273E  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9979  002742  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9980  002746  0E7D               	movlw	125
  9981  002748  6F68               	movwf	___lldiv@divisor& (0+255),b
  9982  00274A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  9983  00274C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  9984  00274E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  9985  002750  EC0B  F030         	call	___lldiv	;wreg free
  9986  002754  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9987  002758  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9988  00275C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9989  002760  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9990  002764  0102               	movlb	2	; () banked
  9991  002766  51E8               	movf	(_loRa+232)& (0+255),w,b
  9992  002768  EC60  F036         	call	_SwTimerSetTimeout
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9996  00276C  0102               	movlb	2	; () banked
  9997  00276E  51E8               	movf	(_loRa+232)& (0+255),w,b
  9998  002770  EF49  F02E         	goto	_SwTimerStart
  9999  002774                     l14543:
 10000                           
 10001                           ; BSR set to: 2
 10002                           ;lorawan_eu.c: 501: else
 10003                           ;lorawan_eu.c: 502: {
 10004                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10005  002774  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10006                           
 10007                           ; BSR set to: 2
 10008                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10009  002778  0100               	movlb	0	; () banked
 10010  00277A  51E8               	movf	_rxPayload& (0+255),w,b
 10011  00277C  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10012  00277E  B4D8               	btfsc	status,2,c
 10013  002780  0012               	return	
 10014  002782                     l14547:
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;lorawan_eu.c: 505: {
 10018                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10019  002782  6B64               	clrf	RxDataDone@pData& (0+255),b
 10020  002784  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10021  002786  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10022  002788  6B67               	clrf	RxDataDone@status& (0+255),b
 10023  00278A  0005               	push	
 10024  00278C  6AFA               	clrf	pclath,c
 10025  00278E  51E8               	movf	_rxPayload& (0+255),w,b
 10026  002790  6EFD               	movwf	tosl,c
 10027  002792  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10028  002794  6EFE               	movwf	tosh,c
 10029  002796  6AFF               	clrf	tosu,c
 10030  002798  50FA               	movf	pclath,w,c
 10031  00279A  0012               	return		;indir
 10032  00279C                     l14549:
 10033                           
 10034                           ; BSR set to: 2
 10035                           ;lorawan_eu.c: 511: else
 10036                           ;lorawan_eu.c: 512: {
 10037                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10038  00279C  51D8               	movf	(_loRa+216)& (0+255),w,b
 10039  00279E  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10040  0027A0  E201 D0B7          	bnc	l14585
 10041                           
 10042                           ; BSR set to: 2
 10043                           ;lorawan_eu.c: 514: {
 10044                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10045  0027A4  5102               	movf	(_loRa+2)& (0+255),w,b
 10046  0027A6  0BF0               	andlw	-16
 10047  0027A8  0906               	iorlw	6
 10048  0027AA  6F02               	movwf	(_loRa+2)& (0+255),b
 10049                           
 10050                           ; BSR set to: 2
 10051                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10052  0027AC  0E01               	movlw	1
 10053  0027AE  EC17  F033         	call	_SelectChannelForTransmission
 10054  0027B2  0900               	iorlw	0
 10055  0027B4  E119               	bnz	l1063
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;lorawan_eu.c: 517: {
 10059                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10060  0027B6  0EF0               	movlw	low (_macBuffer+16)
 10061  0027B8  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10062  0027BA  0E04               	movlw	high (_macBuffer+16)
 10063  0027BC  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10064  0027BE  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10065  0027C2  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 10066  0027C6  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10067  0027C8  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10068  0027CA  E107               	bnz	l14561
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;lorawan_eu.c: 520: {
 10072                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10073  0027CC  0102               	movlb	2	; () banked
 10074  0027CE  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10075                           
 10076                           ; BSR set to: 2
 10077                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10078  0027D0  5102               	movf	(_loRa+2)& (0+255),w,b
 10079  0027D2  0BF0               	andlw	-16
 10080  0027D4  0901               	iorlw	1
 10081  0027D6  6F02               	movwf	(_loRa+2)& (0+255),b
 10082                           
 10083                           ;lorawan_eu.c: 523: }
 10084  0027D8  0012               	return	
 10085  0027DA                     l14561:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;lorawan_eu.c: 524: else
 10089                           ;lorawan_eu.c: 526: {
 10090                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10091  0027DA  EC80  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10092                           
 10093                           ; BSR set to: 2
 10094                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10095  0027DE  0100               	movlb	0	; () banked
 10096  0027E0  51E8               	movf	_rxPayload& (0+255),w,b
 10097  0027E2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10098  0027E4  E1CE               	bnz	l14547
 10099  0027E6  0012               	return	
 10100  0027E8                     l1063:
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;lorawan_eu.c: 534: else
 10104                           ;lorawan_eu.c: 535: {
 10105                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10106  0027E8  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10107  0027EA  D05B               	goto	l14581
 10108  0027EC                     l14567:
 10109                           
 10110                           ; BSR set to: 2
 10111                           ;lorawan_eu.c: 538: {
 10112                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10113  0027EC  0100               	movlb	0	; () banked
 10114  0027EE  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10115  0027F0  0D0E               	mullw	14
 10116  0027F2  0E04               	movlw	low (_Channels+4)
 10117  0027F4  24F3               	addwf	prodl,w,c
 10118  0027F6  6ED9               	movwf	fsr2l,c
 10119  0027F8  0E04               	movlw	high (_Channels+4)
 10120  0027FA  20F4               	addwfc	prodh,w,c
 10121  0027FC  6EDA               	movwf	fsr2h,c
 10122  0027FE  04DE               	decf	postinc2,w,c
 10123  002800  E14E               	bnz	l14579
 10124                           
 10125                           ; BSR set to: 0
 10126  002802  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10127  002804  0D0E               	mullw	14
 10128  002806  0E08               	movlw	low (_Channels+8)
 10129  002808  24F3               	addwf	prodl,w,c
 10130  00280A  6ED9               	movwf	fsr2l,c
 10131  00280C  0E04               	movlw	high (_Channels+8)
 10132  00280E  20F4               	addwfc	prodh,w,c
 10133  002810  6EDA               	movwf	fsr2h,c
 10134  002812  50DE               	movf	postinc2,w,c
 10135  002814  10DE               	iorwf	postinc2,w,c
 10136  002816  10DE               	iorwf	postinc2,w,c
 10137  002818  10DE               	iorwf	postinc2,w,c
 10138  00281A  E041               	bz	l14579
 10139                           
 10140                           ; BSR set to: 0
 10141  00281C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10142  00281E  0D0E               	mullw	14
 10143  002820  0E08               	movlw	low (_Channels+8)
 10144  002822  24F3               	addwf	prodl,w,c
 10145  002824  6ED9               	movwf	fsr2l,c
 10146  002826  0E04               	movlw	high (_Channels+8)
 10147  002828  20F4               	addwfc	prodh,w,c
 10148  00282A  6EDA               	movwf	fsr2h,c
 10149  00282C  50DE               	movf	postinc2,w,c
 10150  00282E  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10151  002830  50DE               	movf	postinc2,w,c
 10152  002832  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10153  002834  50DE               	movf	postinc2,w,c
 10154  002836  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10155  002838  50DE               	movf	postinc2,w,c
 10156  00283A  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10157  00283C  E330               	bnc	l14579
 10158                           
 10159                           ; BSR set to: 0
 10160  00283E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10161  002840  0D0E               	mullw	14
 10162  002842  0E05               	movlw	low (_Channels+5)
 10163  002844  24F3               	addwf	prodl,w,c
 10164  002846  6ED9               	movwf	fsr2l,c
 10165  002848  0E04               	movlw	high (_Channels+5)
 10166  00284A  20F4               	addwfc	prodh,w,c
 10167  00284C  6EDA               	movwf	fsr2h,c
 10168  00284E  50DF               	movf	223,w,c
 10169  002850  0B0F               	andlw	15
 10170  002852  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10171  002854  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10172  002856  0102               	movlb	2	; () banked
 10173  002858  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10174  00285A  E321               	bnc	l14579
 10175                           
 10176                           ; BSR set to: 2
 10177  00285C  0100               	movlb	0	; () banked
 10178  00285E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10179  002860  0D0E               	mullw	14
 10180  002862  0E05               	movlw	low (_Channels+5)
 10181  002864  24F3               	addwf	prodl,w,c
 10182  002866  6ED9               	movwf	fsr2l,c
 10183  002868  0E04               	movlw	high (_Channels+5)
 10184  00286A  20F4               	addwfc	prodh,w,c
 10185  00286C  6EDA               	movwf	fsr2h,c
 10186  00286E  38DF               	swapf	223,w,c
 10187  002870  0B0F               	andlw	15
 10188  002872  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10189  002874  0102               	movlb	2	; () banked
 10190  002876  51DF               	movf	(_loRa+223)& (0+255),w,b
 10191  002878  0100               	movlb	0	; () banked
 10192  00287A  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10193  00287C  E310               	bnc	l14579
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;lorawan_eu.c: 540: {
 10197                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10198  00287E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10199  002880  0D0E               	mullw	14
 10200  002882  0E08               	movlw	low (_Channels+8)
 10201  002884  24F3               	addwf	prodl,w,c
 10202  002886  6ED9               	movwf	fsr2l,c
 10203  002888  0E04               	movlw	high (_Channels+8)
 10204  00288A  20F4               	addwfc	prodh,w,c
 10205  00288C  6EDA               	movwf	fsr2h,c
 10206  00288E  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10207  002892  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10208  002896  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10209  00289A  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10210  00289E                     l14579:
 10211  00289E  0100               	movlb	0	; () banked
 10212  0028A0  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10213  0028A2                     l14581:
 10214                           
 10215                           ; BSR set to: 0
 10216  0028A2  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10217  0028A4  0102               	movlb	2	; () banked
 10218  0028A6  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10219  0028A8  E2A1               	bc	l14567
 10220                           
 10221                           ; BSR set to: 2
 10222                           ;lorawan_eu.c: 542: }
 10223                           ;lorawan_eu.c: 543: }
 10224                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10225  0028AA  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10226  0028AE  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10227  0028B2  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10228  0028B6  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10229  0028BA  0E0C               	movlw	12
 10230  0028BC                     u16745:
 10231  0028BC  90D8               	bcf	status,0,c
 10232  0028BE  0100               	movlb	0	; () banked
 10233  0028C0  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10234  0028C2  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10235  0028C4  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10236  0028C6  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10237  0028C8  2EE8               	decfsz	wreg,f,c
 10238  0028CA  D7F8               	goto	u16745
 10239  0028CC  0E00               	movlw	0
 10240  0028CE  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10241  0028D0  6F64               	movwf	___lldiv@dividend& (0+255),b
 10242  0028D2  0E20               	movlw	32
 10243  0028D4  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10244  0028D6  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10245  0028D8  0E03               	movlw	3
 10246  0028DA  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10247  0028DC  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10248  0028DE  0E00               	movlw	0
 10249  0028E0  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10250  0028E2  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10251  0028E4  0E7D               	movlw	125
 10252  0028E6  6F68               	movwf	___lldiv@divisor& (0+255),b
 10253  0028E8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10254  0028EA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10255  0028EC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10256  0028EE  EC0B  F030         	call	___lldiv	;wreg free
 10257  0028F2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10258  0028F6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10259  0028FA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10260  0028FE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10261  002902  0102               	movlb	2	; () banked
 10262  002904  51EA               	movf	(_loRa+234)& (0+255),w,b
 10263  002906  EC60  F036         	call	_SwTimerSetTimeout
 10264                           
 10265                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10266  00290A  0102               	movlb	2	; () banked
 10267  00290C  51EA               	movf	(_loRa+234)& (0+255),w,b
 10268  00290E  EF49  F02E         	goto	_SwTimerStart
 10269  002912                     l14585:
 10270                           
 10271                           ; BSR set to: 2
 10272                           ;lorawan_eu.c: 548: else
 10273                           ;lorawan_eu.c: 549: {
 10274                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10275  002912  EC80  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10276                           
 10277                           ; BSR set to: 2
 10278                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10279  002916  0100               	movlb	0	; () banked
 10280  002918  51E8               	movf	_rxPayload& (0+255),w,b
 10281  00291A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10282  00291C  B4D8               	btfsc	status,2,c
 10283  00291E  0012               	return	
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;lorawan_eu.c: 552: {
 10287                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10288  002920  6B64               	clrf	RxDataDone@pData& (0+255),b
 10289  002922  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10290  002924  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10291  002926  0E01               	movlw	1
 10292  002928  6F67               	movwf	RxDataDone@status& (0+255),b
 10293  00292A  0005               	push	
 10294  00292C  6EFA               	movwf	pclath,c
 10295  00292E  51E8               	movf	_rxPayload& (0+255),w,b
 10296  002930  6EFD               	movwf	tosl,c
 10297  002932  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10298  002934  6EFE               	movwf	tosh,c
 10299  002936  6AFF               	clrf	tosu,c
 10300  002938  50FA               	movf	pclath,w,c
 10301  00293A  0012               	return		;indir
 10302  00293C                     l14591:
 10303                           
 10304                           ; BSR set to: 2
 10305                           ;lorawan_eu.c: 560: else
 10306                           ;lorawan_eu.c: 561: {
 10307                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10308  00293C  0100               	movlb	0	; () banked
 10309  00293E  51E8               	movf	_rxPayload& (0+255),w,b
 10310  002940  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10311  002942  B4D8               	btfsc	status,2,c
 10312  002944  0012               	return	
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;lorawan_eu.c: 564: {
 10316                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10317  002946  6B64               	clrf	RxDataDone@pData& (0+255),b
 10318  002948  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10319  00294A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10320  00294C  0E02               	movlw	2
 10321  00294E  6F67               	movwf	RxDataDone@status& (0+255),b
 10322  002950  0005               	push	
 10323  002952  6EFA               	movwf	pclath,c
 10324  002954  51E8               	movf	_rxPayload& (0+255),w,b
 10325  002956  6EFD               	movwf	tosl,c
 10326  002958  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10327  00295A  6EFE               	movwf	tosh,c
 10328  00295C  6AFF               	clrf	tosu,c
 10329  00295E  50FA               	movf	pclath,w,c
 10330  002960  0012               	return		;indir
 10331  002962                     __end_of_LORAWAN_RxTimeout:
 10332                           	opt stack 0
 10333                           tosu	equ	0xFFF
 10334                           tosh	equ	0xFFE
 10335                           tosl	equ	0xFFD
 10336                           pclath	equ	0xFFA
 10337                           tblptru	equ	0xFF8
 10338                           tblptrh	equ	0xFF7
 10339                           tblptrl	equ	0xFF6
 10340                           tablat	equ	0xFF5
 10341                           prodh	equ	0xFF4
 10342                           prodl	equ	0xFF3
 10343                           intcon	equ	0xFF2
 10344                           intcon2	equ	0xFF1
 10345                           intcon3	equ	0xFF0
 10346                           postinc0	equ	0xFEE
 10347                           wreg	equ	0xFE8
 10348                           postinc1	equ	0xFE6
 10349                           postdec1	equ	0xFE5
 10350                           plusw1	equ	0xFE3
 10351                           fsr1h	equ	0xFE2
 10352                           fsr1l	equ	0xFE1
 10353                           indf2	equ	0xFDF
 10354                           postinc2	equ	0xFDE
 10355                           postdec2	equ	0xFDD
 10356                           fsr2h	equ	0xFDA
 10357                           fsr2l	equ	0xFD9
 10358                           status	equ	0xFD8
 10359                           
 10360 ;; *************** function _LORAWAN_RxDone *****************
 10361 ;; Defined at:
 10362 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10365 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10366 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;  hdr             2  123[BANK1 ] PTR struct .
 10369 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10370 ;;  joinAccept      2  120[BANK1 ] PTR struct .
 10371 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10372 ;;  computedMic     4  116[BANK1 ] unsigned long 
 10373 ;;  extractedMic    4  108[BANK1 ] unsigned long 
 10374 ;;  packet          2  114[BANK1 ] PTR unsigned char 
 10375 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10376 ;;  frmPayloadLe    1  122[BANK1 ] unsigned char 
 10377 ;;  temp            1  113[BANK1 ] unsigned char 
 10378 ;;  bufferIndex     1  112[BANK1 ] unsigned char 
 10379 ;;  mhdr            1  107[BANK1 ] struct .
 10380 ;;  channelIndex    1  106[BANK1 ] unsigned char 
 10381 ;;  fPort           1  105[BANK1 ] unsigned char 
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      enum E8191
 10384 ;; Registers used:
 10385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10386 ;; Tracked objects:
 10387 ;;		On entry : F/1
 10388 ;;		On exit  : D/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10391 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Totals:         0       5      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;Total ram usage:       28 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; Hardware stack levels required when called:   15
 10398 ;; This function calls:
 10399 ;;		_AESCmac
 10400 ;;		_AESEncodeLoRa
 10401 ;;		_AssembleEncryptionBlock
 10402 ;;		_CheckFlags
 10403 ;;		_CheckMcastFlags
 10404 ;;		_ComputeMic
 10405 ;;		_ComputeSessionKeys
 10406 ;;		_EncryptFRMPayload
 10407 ;;		_ExtractMic
 10408 ;;		_LORAWAN_EnterContinuousReceive
 10409 ;;		_LORAWAN_Send
 10410 ;;		_MacExecuteCommands
 10411 ;;		_RADIO_GetStatus
 10412 ;;		_RADIO_ReleaseData
 10413 ;;		_RxDataDone
 10414 ;;		_SearchAvailableChannel
 10415 ;;		_SetJoinFailState
 10416 ;;		_SetReceptionNotOkState
 10417 ;;		_StartReTxTimer
 10418 ;;		_SwTimerStop
 10419 ;;		_UpdateCfList
 10420 ;;		_UpdateDLSettings
 10421 ;;		_UpdateJoinSuccessState
 10422 ;;		_UpdateReceiveDelays
 10423 ;;		_UpdateRetransmissionAckTimeoutState
 10424 ;;		_memcpy
 10425 ;; This function is called by:
 10426 ;;		_RADIO_RxDone
 10427 ;;		_RADIO_FSKPayloadReady
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text62
 10432  000098                     __ptext62:
 10433                           	opt stack 0
 10434  000098                     _LORAWAN_RxDone:
 10435                           	opt stack 12
 10436                           
 10437                           ; BSR set to: 1
 10438                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10439                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10440                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10441                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10442                           ;lorawan.c: 1127: uint8_t *packet;
 10443                           ;lorawan.c: 1128: uint8_t temp;
 10444                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10445                           
 10446                           ;incstack = 0
 10447  000098  EC3E  F03C         	call	_RADIO_ReleaseData	;wreg free
 10448                           
 10449                           ; BSR set to: 1
 10450                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10451  00009C  0102               	movlb	2	; () banked
 10452  00009E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10453  0000A0  EF50  F005         	goto	l14509
 10454                           
 10455                           ; BSR set to: 2
 10456                           ;lorawan.c: 1133: {
 10457                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10458  0000A4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10459  0000A8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10460  0000AC  50DF               	movf	indf2,w,c
 10461  0000AE  0101               	movlb	1	; () banked
 10462  0000B0  6F6B               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10463                           
 10464                           ; BSR set to: 1
 10465                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10466  0000B2  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10467  0000B4  32E8               	rrcf	wreg,f,c
 10468  0000B6  0B07               	andlw	7
 10469  0000B8  06E8               	decf	wreg,f,c
 10470  0000BA  E001 D0C5          	bnz	l14181
 10471                           
 10472                           ; BSR set to: 1
 10473  0000BE  0102               	movlb	2	; () banked
 10474  0000C0  511D               	movf	(_loRa+29)& (0+255),w,b
 10475  0000C2  E001 D0C1          	bnz	l14181
 10476                           
 10477                           ; BSR set to: 2
 10478                           ;lorawan.c: 1136: {
 10479                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10480  0000C6  0101               	movlb	1	; () banked
 10481  0000C8  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10482  0000CA  6F71               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10483                           
 10484                           ;lorawan.c: 1138: while (temp > 0)
 10485  0000CC  D01F               	goto	l14137
 10486  0000CE                     l14131:
 10487                           
 10488                           ; BSR set to: 1
 10489                           ;lorawan.c: 1139: {
 10490                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10491  0000CE  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10492  0000D0  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10493  0000D2  0100               	movlb	0	; () banked
 10494  0000D4  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 10495  0000D6  0E00               	movlw	0
 10496  0000D8  0101               	movlb	1	; () banked
 10497  0000DA  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10498  0000DC  0100               	movlb	0	; () banked
 10499  0000DE  6FDE               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10500  0000E0  0101               	movlb	1	; () banked
 10501  0000E2  5171               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10502  0000E4  0100               	movlb	0	; () banked
 10503  0000E6  5DDD               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10504  0000E8  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 10505  0000EA  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10506  0000EC  A0D8               	btfss	status,0,c
 10507  0000EE  05DE               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10508  0000F0  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10509  0000F2  0E42               	movlw	low (_loRa+66)
 10510  0000F4  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 10511  0000F6  0E02               	movlw	high (_loRa+66)
 10512  0000F8  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10513  0000FA  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;lorawan.c: 1142: if (temp > 16)
 10517  0000FE  0E10               	movlw	16
 10518  000100  0101               	movlb	1	; () banked
 10519  000102  6571               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10520  000104  D002               	goto	l2121
 10521                           
 10522                           ; BSR set to: 1
 10523                           ;lorawan.c: 1143: {
 10524                           ;lorawan.c: 1144: temp -= 16;
 10525  000106  5F71               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10526                           
 10527                           ;lorawan.c: 1145: }
 10528  000108  D001               	goto	l14137
 10529  00010A                     l2121:
 10530                           
 10531                           ; BSR set to: 1
 10532                           ;lorawan.c: 1146: else
 10533                           ;lorawan.c: 1147: {
 10534                           ;lorawan.c: 1148: temp = 0;
 10535  00010A  6B71               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10536  00010C                     l14137:
 10537                           
 10538                           ; BSR set to: 1
 10539  00010C  5171               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10540  00010E  E1DF               	bnz	l14131
 10541                           
 10542                           ; BSR set to: 1
 10543                           ;lorawan.c: 1149: }
 10544                           ;lorawan.c: 1150: }
 10545                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10546  000110  0E42               	movlw	low (_loRa+66)
 10547  000112  0100               	movlb	0	; () banked
 10548  000114  6FCA               	movwf	ComputeMic@key& (0+255),b
 10549  000116  0E02               	movlw	high (_loRa+66)
 10550  000118  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 10551  00011A  C166  F0CC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10552  00011E  C167  F0CD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10553  000122  0101               	movlb	1	; () banked
 10554  000124  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10555  000126  0FFC               	addlw	252
 10556  000128  0100               	movlb	0	; () banked
 10557  00012A  6FCE               	movwf	ComputeMic@bufferLength& (0+255),b
 10558  00012C  EC54  F034         	call	_ComputeMic	;wreg free
 10559  000130  C0CA  F174         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10560  000134  C0CB  F175         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10561  000138  C0CC  F176         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10562  00013C  C0CD  F177         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10566  000140  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10567  000144  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10568  000148  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10569  00014C  EC3F  F036         	call	_ExtractMic	;wreg free
 10570  000150  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10571  000154  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10572  000158  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10573  00015C  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10577  000160  0101               	movlb	1	; () banked
 10578  000162  5174               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10579  000164  196C               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10580  000166  E109               	bnz	u15870
 10581  000168  5175               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10582  00016A  196D               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10583  00016C  E106               	bnz	u15870
 10584  00016E  5176               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10585  000170  196E               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10586  000172  E103               	bnz	u15870
 10587  000174  5177               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10588  000176  196F               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10589  000178  E011               	bz	l14155
 10590  00017A                     u15870:
 10591                           
 10592                           ; BSR set to: 1
 10593                           ;lorawan.c: 1156: {
 10594                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10595  00017A  0102               	movlb	2	; () banked
 10596  00017C  5102               	movf	(_loRa+2)& (0+255),w,b
 10597  00017E  0B0F               	andlw	15
 10598  000180  0A05               	xorlw	5
 10599  000182  E102 EF66  F039    	bz	_SetJoinFailState
 10600                           
 10601                           ; BSR set to: 2
 10602  000188  5102               	movf	(_loRa+2)& (0+255),w,b
 10603  00018A  0B0F               	andlw	15
 10604  00018C  0A03               	xorlw	3
 10605  00018E  A4D8               	btfss	status,2,c
 10606  000190  0012               	return	
 10607                           
 10608                           ; BSR set to: 2
 10609  000192  51F1               	movf	(_loRa+241)& (0+255),w,b
 10610  000194  B4D8               	btfsc	status,2,c
 10611  000196  0012               	return	
 10612                           
 10613                           ; BSR set to: 2
 10614                           ;lorawan.c: 1158: {
 10615                           ;lorawan.c: 1159: SetJoinFailState();
 10616  000198  EF66  F039         	goto	_SetJoinFailState	;wreg free
 10617  00019C                     l14155:
 10618                           
 10619                           ; BSR set to: 1
 10620                           ;lorawan.c: 1163: }
 10621                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10622  00019C  0102               	movlb	2	; () banked
 10623  00019E  5102               	movf	(_loRa+2)& (0+255),w,b
 10624  0001A0  0B0F               	andlw	15
 10625  0001A2  0A03               	xorlw	3
 10626  0001A4  E103               	bnz	l14159
 10627                           
 10628                           ; BSR set to: 2
 10629                           ;lorawan.c: 1167: {
 10630                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10631  0001A6  51E3               	movf	(_loRa+227)& (0+255),w,b
 10632  0001A8  EC57  F03A         	call	_SwTimerStop
 10633  0001AC                     l14159:
 10634                           
 10635                           ;lorawan.c: 1169: }
 10636                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10637                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10638  0001AC  C166  F178         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10639  0001B0  C167  F179         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10640                           
 10641                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10642  0001B4  0101               	movlb	1	; () banked
 10643  0001B6  EE20 F007          	lfsr	2,7
 10644  0001BA  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10645  0001BC  26D9               	addwf	fsr2l,f,c
 10646  0001BE  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10647  0001C0  22DA               	addwfc	fsr2h,f,c
 10648  0001C2  CFDE F21E          	movff	postinc2,_loRa+30
 10649  0001C6  CFDE F21F          	movff	postinc2,_loRa+31
 10650  0001CA  CFDE F220          	movff	postinc2,_loRa+32
 10651  0001CE  CFDE F221          	movff	postinc2,_loRa+33
 10652                           
 10653                           ; BSR set to: 1
 10654                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10655  0001D2  EE20 F00C          	lfsr	2,12
 10656  0001D6  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10657  0001D8  26D9               	addwf	fsr2l,f,c
 10658  0001DA  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10659  0001DC  22DA               	addwfc	fsr2h,f,c
 10660  0001DE  50DF               	movf	indf2,w,c
 10661  0001E0  0B0F               	andlw	15
 10662  0001E2  EC68  F035         	call	_UpdateReceiveDelays
 10663                           
 10664                           ; BSR set to: 2
 10665                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10666  0001E6  0101               	movlb	1	; () banked
 10667  0001E8  EE20 F00B          	lfsr	2,11
 10668  0001EC  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10669  0001EE  26D9               	addwf	fsr2l,f,c
 10670  0001F0  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10671  0001F2  22DA               	addwfc	fsr2h,f,c
 10672  0001F4  38DF               	swapf	223,w,c
 10673  0001F6  0B07               	andlw	7
 10674  0001F8  0100               	movlb	0	; () banked
 10675  0001FA  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10676  0001FC  0101               	movlb	1	; () banked
 10677  0001FE  EE20 F00B          	lfsr	2,11
 10678  000202  5178               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10679  000204  26D9               	addwf	fsr2l,f,c
 10680  000206  5179               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10681  000208  22DA               	addwfc	fsr2h,f,c
 10682  00020A  50DF               	movf	223,w,c
 10683  00020C  0B0F               	andlw	15
 10684  00020E  ECB9  F03A         	call	_UpdateDLSettings
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10688  000212  C178  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10689  000216  C179  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10690  00021A  0101               	movlb	1	; () banked
 10691  00021C  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10692  00021E  ECCA  F018         	call	_UpdateCfList
 10693                           
 10694                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10695  000222  C178  F094         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10696  000226  C179  F095         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10697  00022A  EC11  F02F         	call	_ComputeSessionKeys	;wreg free
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10701  00022E  6AE6               	clrf	postinc1,c
 10702  000230  EC83  F022         	call	_UpdateJoinSuccessState	;wreg free
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10706  000234  0102               	movlb	2	; () banked
 10707  000236  6B06               	clrf	(_loRa+6)& (0+255),b
 10708  000238  6B07               	clrf	(_loRa+7)& (0+255),b
 10709  00023A  6B08               	clrf	(_loRa+8)& (0+255),b
 10710  00023C  6B09               	clrf	(_loRa+9)& (0+255),b
 10711                           
 10712                           ; BSR set to: 2
 10713                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10714  00023E  6B0A               	clrf	(_loRa+10)& (0+255),b
 10715  000240  6B0B               	clrf	(_loRa+11)& (0+255),b
 10716  000242  6B0C               	clrf	(_loRa+12)& (0+255),b
 10717  000244  6B0D               	clrf	(_loRa+13)& (0+255),b
 10718  000246  0012               	return	
 10719  000248                     l14181:
 10720                           
 10721                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10722  000248  0101               	movlb	1	; () banked
 10723  00024A  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10724  00024C  32E8               	rrcf	wreg,f,c
 10725  00024E  0B07               	andlw	7
 10726  000250  0A03               	xorlw	3
 10727  000252  E007               	bz	l2133
 10728                           
 10729                           ; BSR set to: 1
 10730  000254  396B               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10731  000256  32E8               	rrcf	wreg,f,c
 10732  000258  0B07               	andlw	7
 10733  00025A  0A05               	xorlw	5
 10734  00025C  E002 EF87  F031    	bnz	_SetReceptionNotOkState
 10735  000262                     l2133:
 10736                           
 10737                           ; BSR set to: 1
 10738                           ;lorawan.c: 1192: {
 10739                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10740  000262  0102               	movlb	2	; () banked
 10741  000264  6BA7               	clrf	(_loRa+167)& (0+255),b
 10742                           
 10743                           ; BSR set to: 2
 10744                           ;lorawan.c: 1195: Hdr_t *hdr;
 10745                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10746  000266  C166  F17B         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10747  00026A  C167  F17C         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10748                           
 10749                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10750  00026E  0E02               	movlw	2
 10751  000270  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10752  000272  E001 D183          	bnz	l14299
 10753                           
 10754                           ; BSR set to: 2
 10755  000276  0101               	movlb	1	; () banked
 10756  000278  EE20 F001          	lfsr	2,1
 10757  00027C  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10758  00027E  26D9               	addwf	fsr2l,f,c
 10759  000280  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10760  000282  22DA               	addwfc	fsr2h,f,c
 10761  000284  0102               	movlb	2	; () banked
 10762  000286  5162               	movf	(_loRa+98)& (0+255),w,b
 10763  000288  18DE               	xorwf	postinc2,w,c
 10764  00028A  E109               	bnz	u15951
 10765  00028C  5163               	movf	(_loRa+99)& (0+255),w,b
 10766  00028E  18DE               	xorwf	postinc2,w,c
 10767  000290  E106               	bnz	u15951
 10768  000292  5164               	movf	(_loRa+100)& (0+255),w,b
 10769  000294  18DE               	xorwf	postinc2,w,c
 10770  000296  E103               	bnz	u15951
 10771  000298  5165               	movf	(_loRa+101)& (0+255),w,b
 10772  00029A  18DE               	xorwf	postinc2,w,c
 10773  00029C  A4D8               	btfss	status,2,c
 10774  00029E                     u15951:
 10775  00029E  D16E               	goto	l14299
 10776                           
 10777                           ; BSR set to: 2
 10778  0002A0  A504               	btfss	(_loRa+4)& (0+255),2,b
 10779  0002A2  D16C               	goto	l14299
 10780                           
 10781                           ; BSR set to: 2
 10782                           ;lorawan.c: 1200: {
 10783                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10784  0002A4  C17B  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10785  0002A8  C17C  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10786  0002AC  EC46  F030         	call	_CheckMcastFlags	;wreg free
 10787  0002B0  0900               	iorlw	0
 10788  0002B2  E107               	bnz	l14199
 10789  0002B4                     l14193:
 10790                           
 10791                           ;lorawan.c: 1203: {
 10792                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10793  0002B4  0102               	movlb	2	; () banked
 10794  0002B6  5102               	movf	(_loRa+2)& (0+255),w,b
 10795  0002B8  0BF0               	andlw	-16
 10796  0002BA  0909               	iorlw	9
 10797  0002BC  6F02               	movwf	(_loRa+2)& (0+255),b
 10798                           
 10799                           ; BSR set to: 2
 10800                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10801  0002BE  EF84  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10802  0002C2                     l14199:
 10803                           
 10804                           ;lorawan.c: 1207: }
 10805                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10806  0002C2  0101               	movlb	1	; () banked
 10807  0002C4  EE20 F006          	lfsr	2,6
 10808  0002C8  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10809  0002CA  26D9               	addwf	fsr2l,f,c
 10810  0002CC  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10811  0002CE  22DA               	addwfc	fsr2h,f,c
 10812  0002D0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10813  0002D4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10814  0002D8  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10815  0002DC  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10816  0002E0  0100               	movlb	0	; () banked
 10817  0002E2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10818  0002E4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10819  0002E6  0101               	movlb	1	; () banked
 10820  0002E8  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10821  0002EA  0FFC               	addlw	252
 10822  0002EC  0100               	movlb	0	; () banked
 10823  0002EE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10824  0002F0  0E49               	movlw	73
 10825  0002F2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10826  0002F4  0E01               	movlw	1
 10827  0002F6  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10828  0002F8  EC22  F02C         	call	_AssembleEncryptionBlock
 10829                           
 10830                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10831  0002FC  0EEF               	movlw	low _radioBuffer
 10832  0002FE  6F64               	movwf	memcpy@d1& (0+255),b
 10833  000300  0E05               	movlw	high _radioBuffer
 10834  000302  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10835  000304  0EB4               	movlw	low _aesBuffer
 10836  000306  6F66               	movwf	memcpy@s1& (0+255),b
 10837  000308  0E01               	movlw	high _aesBuffer
 10838  00030A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10839  00030C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10840  00030E  0E10               	movlw	16
 10841  000310  6F68               	movwf	memcpy@n& (0+255),b
 10842  000312  ECFF  F033         	call	_memcpy	;wreg free
 10843                           
 10844                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10845  000316  0EFF               	movlw	low (_radioBuffer+16)
 10846  000318  6F64               	movwf	memcpy@d1& (0+255),b
 10847  00031A  0E05               	movlw	high (_radioBuffer+16)
 10848  00031C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10849  00031E  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10850  000322  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10851  000326  0EFC               	movlw	252
 10852  000328  0101               	movlb	1	; () banked
 10853  00032A  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10854  00032C  0100               	movlb	0	; () banked
 10855  00032E  6F68               	movwf	memcpy@n& (0+255),b
 10856  000330  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10857  000332  0EFF               	movlw	255
 10858  000334  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10859  000336  ECFF  F033         	call	_memcpy	;wreg free
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10863  00033A  0E66               	movlw	low (_loRa+102)
 10864  00033C  6FBC               	movwf	AESCmac@key& (0+255),b
 10865  00033E  0E02               	movlw	high (_loRa+102)
 10866  000340  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 10867  000342  0EB4               	movlw	low _aesBuffer
 10868  000344  6FBE               	movwf	AESCmac@output& (0+255),b
 10869  000346  0E01               	movlw	high _aesBuffer
 10870  000348  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 10871  00034A  0EEF               	movlw	low _radioBuffer
 10872  00034C  6FC0               	movwf	AESCmac@input& (0+255),b
 10873  00034E  0E05               	movlw	high _radioBuffer
 10874  000350  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 10875  000352  0101               	movlb	1	; () banked
 10876  000354  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10877  000356  0F0C               	addlw	12
 10878  000358  0100               	movlb	0	; () banked
 10879  00035A  6FC2               	movwf	AESCmac@size& (0+255),b
 10880  00035C  ECFD  F00B         	call	_AESCmac	;wreg free
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10884  000360  0E74               	movlw	low LORAWAN_RxDone@computedMic
 10885  000362  6F64               	movwf	memcpy@d1& (0+255),b
 10886  000364  0E01               	movlw	high LORAWAN_RxDone@computedMic
 10887  000366  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10888  000368  0EB4               	movlw	low _aesBuffer
 10889  00036A  6F66               	movwf	memcpy@s1& (0+255),b
 10890  00036C  0E01               	movlw	high _aesBuffer
 10891  00036E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10892  000370  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10893  000372  0E04               	movlw	4
 10894  000374  6F68               	movwf	memcpy@n& (0+255),b
 10895  000376  ECFF  F033         	call	_memcpy	;wreg free
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10899  00037A  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10900  00037E  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10901  000382  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10902  000386  EC3F  F036         	call	_ExtractMic	;wreg free
 10903  00038A  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10904  00038E  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10905  000392  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10906  000396  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10910  00039A  0101               	movlb	1	; () banked
 10911  00039C  516C               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10912  00039E  1974               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10913  0003A0  E189               	bnz	l14193
 10914  0003A2  516D               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10915  0003A4  1975               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10916  0003A6  E186               	bnz	l14193
 10917  0003A8  516E               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10918  0003AA  1976               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10919  0003AC  E183               	bnz	l14193
 10920  0003AE  516F               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10921  0003B0  1977               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10922  0003B2  E180               	bnz	l14193
 10923                           
 10924                           ; BSR set to: 1
 10925                           ;lorawan.c: 1222: }
 10926                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10927  0003B4  EE20 F006          	lfsr	2,6
 10928  0003B8  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10929  0003BA  26D9               	addwf	fsr2l,f,c
 10930  0003BC  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10931  0003BE  22DA               	addwfc	fsr2h,f,c
 10932  0003C0  0102               	movlb	2	; () banked
 10933  0003C2  510E               	movf	(_loRa+14)& (0+255),w,b
 10934  0003C4  5CDE               	subwf	postinc2,w,c
 10935  0003C6  510F               	movf	(_loRa+15)& (0+255),w,b
 10936  0003C8  58DE               	subwfb	postinc2,w,c
 10937  0003CA  E334               	bnc	l14233
 10938                           
 10939                           ; BSR set to: 2
 10940                           ;lorawan.c: 1225: {
 10941                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10942  0003CC  0101               	movlb	1	; () banked
 10943  0003CE  EE20 F006          	lfsr	2,6
 10944  0003D2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10945  0003D4  26D9               	addwf	fsr2l,f,c
 10946  0003D6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10947  0003D8  22DA               	addwfc	fsr2h,f,c
 10948  0003DA  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10949  0003DE  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10950  0003E2  0102               	movlb	2	; () banked
 10951  0003E4  510E               	movf	(_loRa+14)& (0+255),w,b
 10952  0003E6  0100               	movlb	0	; () banked
 10953  0003E8  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10954  0003EA  0102               	movlb	2	; () banked
 10955  0003EC  510F               	movf	(_loRa+15)& (0+255),w,b
 10956  0003EE  0100               	movlb	0	; () banked
 10957  0003F0  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10958  0003F2  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10959  0003F4  0102               	movlb	2	; () banked
 10960  0003F6  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10961  0003F8  0100               	movlb	0	; () banked
 10962  0003FA  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10963  0003FC  0102               	movlb	2	; () banked
 10964  0003FE  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10965  000400  E20D               	bc	l14231
 10966  000402                     l14219:
 10967                           
 10968                           ; BSR set to: 2
 10969                           ;lorawan.c: 1227: {
 10970                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10971  000402  0100               	movlb	0	; () banked
 10972  000404  51E8               	movf	_rxPayload& (0+255),w,b
 10973  000406  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10974  000408  E101 D754          	bz	l14193
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;lorawan.c: 1229: {
 10978                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10979  00040C  6B64               	clrf	RxDataDone@pData& (0+255),b
 10980  00040E  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10981  000410  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10982  000412  0E05               	movlw	5
 10983  000414  6F67               	movwf	RxDataDone@status& (0+255),b
 10984  000416  D801               	call	u16028
 10985  000418  D74D               	goto	l14193
 10986  00041A                     u16028:
 10987  00041A  D0A7               	goto	u16128
 10988  00041C                     l14231:
 10989                           
 10990                           ; BSR set to: 2
 10991                           ;lorawan.c: 1237: else
 10992                           ;lorawan.c: 1238: {
 10993                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10994  00041C  0101               	movlb	1	; () banked
 10995  00041E  EE20 F006          	lfsr	2,6
 10996  000422  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10997  000424  26D9               	addwf	fsr2l,f,c
 10998  000426  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10999  000428  22DA               	addwfc	fsr2h,f,c
 11000  00042A  CFDE F20E          	movff	postinc2,_loRa+14
 11001  00042E  CFDD F20F          	movff	postdec2,_loRa+15
 11002  000432  D013               	goto	l14251
 11003  000434                     l14233:
 11004                           
 11005                           ; BSR set to: 2
 11006                           ;lorawan.c: 1242: else
 11007                           ;lorawan.c: 1243: {
 11008                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11009  000434  0101               	movlb	1	; () banked
 11010  000436  EE20 F006          	lfsr	2,6
 11011  00043A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11012  00043C  26D9               	addwf	fsr2l,f,c
 11013  00043E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11014  000440  22DA               	addwfc	fsr2h,f,c
 11015  000442  50DE               	movf	postinc2,w,c
 11016  000444  10DE               	iorwf	postinc2,w,c
 11017  000446  E1DD               	bnz	l14219
 11018                           
 11019                           ; BSR set to: 1
 11020  000448  0102               	movlb	2	; () banked
 11021  00044A  290E               	incf	(_loRa+14)& (0+255),w,b
 11022  00044C  E1DA               	bnz	l14219
 11023  00044E  290F               	incf	(_loRa+15)& (0+255),w,b
 11024  000450  E1D8               	bnz	l14219
 11025                           
 11026                           ; BSR set to: 2
 11027                           ;lorawan.c: 1245: {
 11028                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11029  000452  6B0E               	clrf	(_loRa+14)& (0+255),b
 11030  000454  6B0F               	clrf	(_loRa+15)& (0+255),b
 11031                           
 11032                           ; BSR set to: 2
 11033                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11034  000456  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11035  000458  2B11               	incf	(_loRa+17)& (0+255),f,b
 11036  00045A                     l14251:
 11037                           
 11038                           ;lorawan.c: 1259: }
 11039                           ;lorawan.c: 1260: }
 11040                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11041  00045A  0102               	movlb	2	; () banked
 11042  00045C  290E               	incf	(_loRa+14)& (0+255),w,b
 11043  00045E  E107               	bnz	l14263
 11044  000460  290F               	incf	(_loRa+15)& (0+255),w,b
 11045  000462  E105               	bnz	l14263
 11046  000464  2910               	incf	(_loRa+16)& (0+255),w,b
 11047  000466  E103               	bnz	l14263
 11048  000468  2911               	incf	(_loRa+17)& (0+255),w,b
 11049  00046A  E101               	bnz	l14263
 11050  00046C  D7CA               	goto	l14219
 11051  00046E                     l14263:
 11052                           
 11053                           ; BSR set to: 2
 11054                           ;lorawan.c: 1272: }
 11055                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11056  00046E  5102               	movf	(_loRa+2)& (0+255),w,b
 11057  000470  0B0F               	andlw	15
 11058  000472  0A08               	xorlw	8
 11059  000474  E108               	bnz	l14267
 11060                           
 11061                           ; BSR set to: 2
 11062                           ;lorawan.c: 1275: {
 11063                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11064  000476  51E4               	movf	(_loRa+228)& (0+255),w,b
 11065  000478  EC57  F03A         	call	_SwTimerStop
 11066                           
 11067                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11068  00047C  0102               	movlb	2	; () banked
 11069  00047E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11070  000480  EC57  F03A         	call	_SwTimerStop
 11071                           
 11072                           ;lorawan.c: 1278: }
 11073  000484  D007               	goto	l14271
 11074  000486                     l14267:
 11075                           
 11076                           ; BSR set to: 2
 11077                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11078  000486  5102               	movf	(_loRa+2)& (0+255),w,b
 11079  000488  0B0F               	andlw	15
 11080  00048A  0A03               	xorlw	3
 11081  00048C  E103               	bnz	l14271
 11082                           
 11083                           ; BSR set to: 2
 11084                           ;lorawan.c: 1280: {
 11085                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11086  00048E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11087  000490  EC57  F03A         	call	_SwTimerStop
 11088  000494                     l14271:
 11089                           
 11090                           ;lorawan.c: 1282: }
 11091                           ;lorawan.c: 1284: buffer = buffer + 8;
 11092  000494  0E08               	movlw	8
 11093  000496  0101               	movlb	1	; () banked
 11094  000498  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11095  00049A  0E00               	movlw	0
 11096  00049C  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11097                           
 11098                           ; BSR set to: 1
 11099                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11100  00049E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11101  0004A0  0100               	movlb	0	; () banked
 11102  0004A2  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11103  0004A4  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11104  0004A6  0101               	movlb	1	; () banked
 11105  0004A8  EE20 F005          	lfsr	2,5
 11106  0004AC  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11107  0004AE  26D9               	addwf	fsr2l,f,c
 11108  0004B0  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11109  0004B2  22DA               	addwfc	fsr2h,f,c
 11110  0004B4  50DF               	movf	223,w,c
 11111  0004B6  0B0F               	andlw	15
 11112  0004B8  0100               	movlb	0	; () banked
 11113  0004BA  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11114  0004BC  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11115  0004BE  0E0C               	movlw	12
 11116  0004C0  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11117  0004C2  0E00               	movlw	0
 11118  0004C4  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11119  0004C6  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11120  0004C8  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11121  0004CA  E103               	bnz	u16100
 11122  0004CC  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11123  0004CE  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11124  0004D0  E035               	bz	l2150
 11125  0004D2                     u16100:
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;lorawan.c: 1287: {
 11129                           ;lorawan.c: 1288: fPort = *(buffer++);
 11130  0004D2  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11131  0004D6  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11132  0004DA  50DF               	movf	indf2,w,c
 11133  0004DC  0101               	movlb	1	; () banked
 11134  0004DE  6F69               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11135                           
 11136                           ; BSR set to: 1
 11137  0004E0  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11138  0004E2  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11139                           
 11140                           ; BSR set to: 1
 11141                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11142  0004E4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11143  0004E6  0FF4               	addlw	244
 11144  0004E8  6F7A               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11145                           
 11146                           ; BSR set to: 1
 11147                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11148  0004EA  0E19               	movlw	25
 11149  0004EC  6F70               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11150                           
 11151                           ; BSR set to: 1
 11152                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11153  0004EE  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11154  0004F2  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11155  0004F6  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11156  0004F8  0100               	movlb	0	; () banked
 11157  0004FA  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11158  0004FC  0E01               	movlw	1
 11159  0004FE  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11160  000500  C20E  F098         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11161  000504  C20F  F099         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11162  000508  C210  F09A         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11163  00050C  C211  F09B         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11164  000510  0E76               	movlw	low (_loRa+118)
 11165  000512  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11166  000514  0E02               	movlw	high (_loRa+118)
 11167  000516  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11168  000518  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11169  00051C  0EEF               	movlw	low _radioBuffer
 11170  00051E  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11171  000520  0E05               	movlw	high _radioBuffer
 11172  000522  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11173  000524  0E01               	movlw	1
 11174  000526  6FA1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11175  000528  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;lorawan.c: 1294: packet = buffer - 1;
 11179  00052C  0EFF               	movlw	255
 11180  00052E  0101               	movlb	1	; () banked
 11181  000530  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11182  000532  6F72               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11183  000534  0EFF               	movlw	255
 11184  000536  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11185  000538  6F73               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11186                           
 11187                           ;lorawan.c: 1295: }
 11188  00053A  D004               	goto	l2151
 11189  00053C                     l2150:
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;lorawan.c: 1296: else
 11193                           ;lorawan.c: 1297: {
 11194                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11195  00053C  0101               	movlb	1	; () banked
 11196  00053E  6B7A               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11197                           
 11198                           ;lorawan.c: 1299: packet = (0);
 11199  000540  6B72               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11200  000542  6B73               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11201  000544                     l2151:
 11202                           
 11203                           ; BSR set to: 1
 11204                           ;lorawan.c: 1300: }
 11205                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11206  000544  0102               	movlb	2	; () banked
 11207  000546  8303               	bsf	(_loRa+3)& (0+255),1,b
 11208                           
 11209                           ; BSR set to: 2
 11210                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11211  000548  0EF0               	movlw	-16
 11212  00054A  1702               	andwf	(_loRa+2)& (0+255),f,b
 11213                           
 11214                           ; BSR set to: 2
 11215                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11216  00054C  0100               	movlb	0	; () banked
 11217  00054E  51E8               	movf	_rxPayload& (0+255),w,b
 11218  000550  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11219  000552  E101 D6AF          	bz	l14193
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;lorawan.c: 1306: {
 11223                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11224  000556  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11225  00055A  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11226  00055E  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11227  000562  0E01               	movlw	1
 11228  000564  6F67               	movwf	RxDataDone@status& (0+255),b
 11229  000566  D801               	call	u16128
 11230  000568  D6A5               	goto	l14193
 11231  00056A                     u16128:
 11232  00056A  0005               	push	
 11233  00056C  6EFA               	movwf	pclath,c
 11234  00056E  51E8               	movf	_rxPayload& (0+255),w,b
 11235  000570  6EFD               	movwf	tosl,c
 11236  000572  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11237  000574  6EFE               	movwf	tosh,c
 11238  000576  6AFF               	clrf	tosu,c
 11239  000578  50FA               	movf	pclath,w,c
 11240  00057A  0012               	return		;indir
 11241  00057C                     l14299:
 11242                           
 11243                           ; BSR set to: 2
 11244                           ;lorawan.c: 1313: }
 11245                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11246  00057C  0101               	movlb	1	; () banked
 11247  00057E  EE20 F001          	lfsr	2,1
 11248  000582  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11249  000584  26D9               	addwf	fsr2l,f,c
 11250  000586  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11251  000588  22DA               	addwfc	fsr2h,f,c
 11252  00058A  0102               	movlb	2	; () banked
 11253  00058C  511E               	movf	(_loRa+30)& (0+255),w,b
 11254  00058E  18DE               	xorwf	postinc2,w,c
 11255  000590  E109               	bnz	u16130
 11256  000592  511F               	movf	(_loRa+31)& (0+255),w,b
 11257  000594  18DE               	xorwf	postinc2,w,c
 11258  000596  E106               	bnz	u16130
 11259  000598  5120               	movf	(_loRa+32)& (0+255),w,b
 11260  00059A  18DE               	xorwf	postinc2,w,c
 11261  00059C  E103               	bnz	u16130
 11262  00059E  5121               	movf	(_loRa+33)& (0+255),w,b
 11263  0005A0  18DE               	xorwf	postinc2,w,c
 11264  0005A2  E008               	bz	l14311
 11265  0005A4                     u16130:
 11266                           
 11267                           ; BSR set to: 2
 11268                           ;lorawan.c: 1317: {
 11269                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11270  0005A4  EC87  F031         	call	_SetReceptionNotOkState	;wreg free
 11271  0005A8                     l14303:
 11272                           
 11273                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11274  0005A8  0E02               	movlw	2
 11275  0005AA  0102               	movlb	2	; () banked
 11276  0005AC                     L5:
 11277  0005AC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11278  0005AE  E101 D681          	bz	l14193
 11279  0005B2  0012               	return	
 11280  0005B4                     l14311:
 11281                           
 11282                           ; BSR set to: 2
 11283                           ;lorawan.c: 1325: }
 11284                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11285  0005B4  0101               	movlb	1	; () banked
 11286  0005B6  EE20 F006          	lfsr	2,6
 11287  0005BA  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11288  0005BC  26D9               	addwf	fsr2l,f,c
 11289  0005BE  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11290  0005C0  22DA               	addwfc	fsr2h,f,c
 11291  0005C2  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11292  0005C6  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11293  0005CA  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11294  0005CE  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11295  0005D2  0100               	movlb	0	; () banked
 11296  0005D4  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11297  0005D6  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11298  0005D8  0101               	movlb	1	; () banked
 11299  0005DA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11300  0005DC  0FFC               	addlw	252
 11301  0005DE  0100               	movlb	0	; () banked
 11302  0005E0  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11303  0005E2  0E49               	movlw	73
 11304  0005E4  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11305  0005E6  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11306  0005E8  0E01               	movlw	1
 11307  0005EA  EC22  F02C         	call	_AssembleEncryptionBlock
 11308                           
 11309                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11310  0005EE  0EEF               	movlw	low _radioBuffer
 11311  0005F0  6F64               	movwf	memcpy@d1& (0+255),b
 11312  0005F2  0E05               	movlw	high _radioBuffer
 11313  0005F4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11314  0005F6  0EB4               	movlw	low _aesBuffer
 11315  0005F8  6F66               	movwf	memcpy@s1& (0+255),b
 11316  0005FA  0E01               	movlw	high _aesBuffer
 11317  0005FC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11318  0005FE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11319  000600  0E10               	movlw	16
 11320  000602  6F68               	movwf	memcpy@n& (0+255),b
 11321  000604  ECFF  F033         	call	_memcpy	;wreg free
 11322                           
 11323                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11324  000608  0EFF               	movlw	low (_radioBuffer+16)
 11325  00060A  6F64               	movwf	memcpy@d1& (0+255),b
 11326  00060C  0E05               	movlw	high (_radioBuffer+16)
 11327  00060E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11328  000610  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11329  000614  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11330  000618  0EFC               	movlw	252
 11331  00061A  0101               	movlb	1	; () banked
 11332  00061C  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11333  00061E  0100               	movlb	0	; () banked
 11334  000620  6F68               	movwf	memcpy@n& (0+255),b
 11335  000622  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11336  000624  0EFF               	movlw	255
 11337  000626  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11338  000628  ECFF  F033         	call	_memcpy	;wreg free
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11342  00062C  0E22               	movlw	low (_loRa+34)
 11343  00062E  6FBC               	movwf	AESCmac@key& (0+255),b
 11344  000630  0E02               	movlw	high (_loRa+34)
 11345  000632  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 11346  000634  0EB4               	movlw	low _aesBuffer
 11347  000636  6FBE               	movwf	AESCmac@output& (0+255),b
 11348  000638  0E01               	movlw	high _aesBuffer
 11349  00063A  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 11350  00063C  0EEF               	movlw	low _radioBuffer
 11351  00063E  6FC0               	movwf	AESCmac@input& (0+255),b
 11352  000640  0E05               	movlw	high _radioBuffer
 11353  000642  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 11354  000644  0101               	movlb	1	; () banked
 11355  000646  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11356  000648  0F0C               	addlw	12
 11357  00064A  0100               	movlb	0	; () banked
 11358  00064C  6FC2               	movwf	AESCmac@size& (0+255),b
 11359  00064E  ECFD  F00B         	call	_AESCmac	;wreg free
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11363  000652  0E74               	movlw	low LORAWAN_RxDone@computedMic
 11364  000654  6F64               	movwf	memcpy@d1& (0+255),b
 11365  000656  0E01               	movlw	high LORAWAN_RxDone@computedMic
 11366  000658  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11367  00065A  0EB4               	movlw	low _aesBuffer
 11368  00065C  6F66               	movwf	memcpy@s1& (0+255),b
 11369  00065E  0E01               	movlw	high _aesBuffer
 11370  000660  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11371  000662  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11372  000664  0E04               	movlw	4
 11373  000666  6F68               	movwf	memcpy@n& (0+255),b
 11374  000668  ECFF  F033         	call	_memcpy	;wreg free
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11378  00066C  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11379  000670  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11380  000674  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11381  000678  EC3F  F036         	call	_ExtractMic	;wreg free
 11382  00067C  C06E  F16C         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11383  000680  C06F  F16D         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11384  000684  C070  F16E         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11385  000688  C071  F16F         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11389  00068C  0101               	movlb	1	; () banked
 11390  00068E  516C               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11391  000690  1974               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11392  000692  E109               	bnz	u16150
 11393  000694  516D               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11394  000696  1975               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11395  000698  E106               	bnz	u16150
 11396  00069A  516E               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11397  00069C  1976               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11398  00069E  E103               	bnz	u16150
 11399  0006A0  516F               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11400  0006A2  1977               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11401  0006A4  E003               	bz	l14331
 11402  0006A6                     u16150:
 11403                           
 11404                           ; BSR set to: 1
 11405                           ;lorawan.c: 1337: {
 11406                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11407  0006A6  EC87  F031         	call	_SetReceptionNotOkState	;wreg free
 11408  0006AA  D77E               	goto	l14303
 11409  0006AC                     l14331:
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;lorawan.c: 1345: }
 11413                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11414  0006AC  EE20 F006          	lfsr	2,6
 11415  0006B0  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11416  0006B2  26D9               	addwf	fsr2l,f,c
 11417  0006B4  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11418  0006B6  22DA               	addwfc	fsr2h,f,c
 11419  0006B8  0102               	movlb	2	; () banked
 11420  0006BA  510A               	movf	(_loRa+10)& (0+255),w,b
 11421  0006BC  5CDE               	subwf	postinc2,w,c
 11422  0006BE  510B               	movf	(_loRa+11)& (0+255),w,b
 11423  0006C0  58DE               	subwfb	postinc2,w,c
 11424  0006C2  E344               	bnc	l14361
 11425                           
 11426                           ; BSR set to: 2
 11427                           ;lorawan.c: 1349: {
 11428                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11429  0006C4  0101               	movlb	1	; () banked
 11430  0006C6  EE20 F006          	lfsr	2,6
 11431  0006CA  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11432  0006CC  26D9               	addwf	fsr2l,f,c
 11433  0006CE  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11434  0006D0  22DA               	addwfc	fsr2h,f,c
 11435  0006D2  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11436  0006D6  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11437  0006DA  0102               	movlb	2	; () banked
 11438  0006DC  510A               	movf	(_loRa+10)& (0+255),w,b
 11439  0006DE  0100               	movlb	0	; () banked
 11440  0006E0  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11441  0006E2  0102               	movlb	2	; () banked
 11442  0006E4  510B               	movf	(_loRa+11)& (0+255),w,b
 11443  0006E6  0100               	movlb	0	; () banked
 11444  0006E8  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11445  0006EA  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11446  0006EC  0102               	movlb	2	; () banked
 11447  0006EE  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11448  0006F0  0100               	movlb	0	; () banked
 11449  0006F2  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11450  0006F4  0102               	movlb	2	; () banked
 11451  0006F6  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11452  0006F8  E21D               	bc	l14359
 11453                           
 11454                           ; BSR set to: 2
 11455                           ;lorawan.c: 1351: {
 11456                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11457  0006FA  9100               	bcf	_loRa& (0+255),0,b
 11458                           
 11459                           ; BSR set to: 2
 11460                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11461  0006FC  0EF0               	movlw	-16
 11462  0006FE  1702               	andwf	(_loRa+2)& (0+255),f,b
 11463                           
 11464                           ; BSR set to: 2
 11465                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11466  000700  0100               	movlb	0	; () banked
 11467  000702  51E8               	movf	_rxPayload& (0+255),w,b
 11468  000704  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11469  000706  E013               	bz	l14345
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;lorawan.c: 1355: {
 11473                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11474  000708  0102               	movlb	2	; () banked
 11475  00070A  9B00               	bcf	_loRa& (0+255),5,b
 11476                           
 11477                           ; BSR set to: 2
 11478                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11479  00070C  0E00               	movlw	0
 11480  00070E  0100               	movlb	0	; () banked
 11481  000710  6B64               	clrf	RxDataDone@pData& (0+255),b
 11482  000712  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 11483  000714  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 11484  000716  6B67               	clrf	RxDataDone@status& (0+255),b
 11485  000718  D801               	call	u16208
 11486  00071A  D009               	goto	l14345
 11487  00071C                     u16208:
 11488  00071C  0005               	push	
 11489  00071E  6EFA               	movwf	pclath,c
 11490  000720  51E8               	movf	_rxPayload& (0+255),w,b
 11491  000722  6EFD               	movwf	tosl,c
 11492  000724  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11493  000726  6EFE               	movwf	tosh,c
 11494  000728  6AFF               	clrf	tosu,c
 11495  00072A  50FA               	movf	pclath,w,c
 11496  00072C  0012               	return		;indir
 11497  00072E                     l14345:
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;lorawan.c: 1358: }
 11501                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11502  00072E  0102               	movlb	2	; () banked
 11503  000730  9303               	bcf	(_loRa+3)& (0+255),1,b
 11504  000732  D036               	goto	l14381
 11505  000734                     l14359:
 11506                           
 11507                           ; BSR set to: 2
 11508                           ;lorawan.c: 1370: else
 11509                           ;lorawan.c: 1371: {
 11510                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11511  000734  0101               	movlb	1	; () banked
 11512  000736  EE20 F006          	lfsr	2,6
 11513  00073A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11514  00073C  26D9               	addwf	fsr2l,f,c
 11515  00073E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11516  000740  22DA               	addwfc	fsr2h,f,c
 11517  000742  CFDE F20A          	movff	postinc2,_loRa+10
 11518  000746  CFDD F20B          	movff	postdec2,_loRa+11
 11519  00074A  D021               	goto	l14379
 11520  00074C                     l14361:
 11521                           
 11522                           ; BSR set to: 2
 11523                           ;lorawan.c: 1375: else
 11524                           ;lorawan.c: 1376: {
 11525                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11526  00074C  0101               	movlb	1	; () banked
 11527  00074E  EE20 F006          	lfsr	2,6
 11528  000752  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11529  000754  26D9               	addwf	fsr2l,f,c
 11530  000756  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11531  000758  22DA               	addwfc	fsr2h,f,c
 11532  00075A  50DE               	movf	postinc2,w,c
 11533  00075C  10DE               	iorwf	postinc2,w,c
 11534  00075E  E114               	bnz	l14369
 11535                           
 11536                           ; BSR set to: 1
 11537  000760  0102               	movlb	2	; () banked
 11538  000762  290A               	incf	(_loRa+10)& (0+255),w,b
 11539  000764  E111               	bnz	l14369
 11540  000766  290B               	incf	(_loRa+11)& (0+255),w,b
 11541  000768  E10F               	bnz	l14369
 11542                           
 11543                           ; BSR set to: 2
 11544                           ;lorawan.c: 1378: {
 11545                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11546  00076A  0101               	movlb	1	; () banked
 11547  00076C  EE20 F006          	lfsr	2,6
 11548  000770  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11549  000772  26D9               	addwf	fsr2l,f,c
 11550  000774  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11551  000776  22DA               	addwfc	fsr2h,f,c
 11552  000778  CFDE F20A          	movff	postinc2,_loRa+10
 11553  00077C  CFDD F20B          	movff	postdec2,_loRa+11
 11554                           
 11555                           ; BSR set to: 1
 11556                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11557  000780  0102               	movlb	2	; () banked
 11558  000782  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11559  000784  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11560                           
 11561                           ;lorawan.c: 1382: }
 11562  000786  D003               	goto	l14379
 11563  000788                     l14369:
 11564                           
 11565                           ;lorawan.c: 1383: else
 11566                           ;lorawan.c: 1384: {
 11567                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11568  000788  EC87  F031         	call	_SetReceptionNotOkState	;wreg free
 11569  00078C  D70D               	goto	l14303
 11570  00078E                     l14379:
 11571                           
 11572                           ;lorawan.c: 1393: }
 11573                           ;lorawan.c: 1394: }
 11574                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11575  00078E  0102               	movlb	2	; () banked
 11576  000790  290A               	incf	(_loRa+10)& (0+255),w,b
 11577  000792  E109               	bnz	l14391
 11578  000794  290B               	incf	(_loRa+11)& (0+255),w,b
 11579  000796  E107               	bnz	l14391
 11580  000798  290C               	incf	(_loRa+12)& (0+255),w,b
 11581  00079A  E105               	bnz	l14391
 11582  00079C  290D               	incf	(_loRa+13)& (0+255),w,b
 11583  00079E  E103               	bnz	l14391
 11584  0007A0                     l14381:
 11585                           
 11586                           ; BSR set to: 2
 11587                           ;lorawan.c: 1397: {
 11588                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11589  0007A0  8304               	bsf	(_loRa+4)& (0+255),1,b
 11590                           
 11591                           ; BSR set to: 2
 11592                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11593  0007A2  0E02               	movlw	2
 11594  0007A4  D703               	goto	L5
 11595  0007A6                     l14391:
 11596                           
 11597                           ; BSR set to: 2
 11598                           ;lorawan.c: 1407: }
 11599                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11600  0007A6  5102               	movf	(_loRa+2)& (0+255),w,b
 11601  0007A8  0B0F               	andlw	15
 11602  0007AA  0A03               	xorlw	3
 11603  0007AC  E103               	bnz	l14395
 11604                           
 11605                           ; BSR set to: 2
 11606                           ;lorawan.c: 1411: {
 11607                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11608  0007AE  51E5               	movf	(_loRa+229)& (0+255),w,b
 11609  0007B0  EC57  F03A         	call	_SwTimerStop
 11610  0007B4                     l14395:
 11611                           
 11612                           ;lorawan.c: 1413: }
 11613                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11614  0007B4  0E01               	movlw	1
 11615  0007B6  0102               	movlb	2	; () banked
 11616  0007B8  6FD8               	movwf	(_loRa+216)& (0+255),b
 11617                           
 11618                           ; BSR set to: 2
 11619                           ;lorawan.c: 1417: CheckFlags (hdr);
 11620  0007BA  C17B  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11621  0007BE  C17C  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11622  0007C2  EC47  F033         	call	_CheckFlags	;wreg free
 11623                           
 11624                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11625  0007C6  0101               	movlb	1	; () banked
 11626  0007C8  EE20 F005          	lfsr	2,5
 11627  0007CC  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11628  0007CE  26D9               	addwf	fsr2l,f,c
 11629  0007D0  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11630  0007D2  22DA               	addwfc	fsr2h,f,c
 11631  0007D4  50DF               	movf	223,w,c
 11632  0007D6  0B0F               	andlw	15
 11633  0007D8  E01B               	bz	l14403
 11634                           
 11635                           ; BSR set to: 1
 11636                           ;lorawan.c: 1420: {
 11637                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11638  0007DA  0E08               	movlw	8
 11639  0007DC  257B               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11640  0007DE  0100               	movlb	0	; () banked
 11641  0007E0  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11642  0007E2  0E00               	movlw	0
 11643  0007E4  0101               	movlb	1	; () banked
 11644  0007E6  217C               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11645  0007E8  0100               	movlb	0	; () banked
 11646  0007EA  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11647  0007EC  0101               	movlb	1	; () banked
 11648  0007EE  EE20 F005          	lfsr	2,5
 11649  0007F2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11650  0007F4  26D9               	addwf	fsr2l,f,c
 11651  0007F6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11652  0007F8  22DA               	addwfc	fsr2h,f,c
 11653  0007FA  50DF               	movf	223,w,c
 11654  0007FC  0B0F               	andlw	15
 11655  0007FE  0100               	movlb	0	; () banked
 11656  000800  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11657  000802  ECDB  F016         	call	_MacExecuteCommands	;wreg free
 11658  000806  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11659  00080A  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11660                           
 11661                           ;lorawan.c: 1422: }
 11662  00080E  D004               	goto	l14405
 11663  000810                     l14403:
 11664                           
 11665                           ; BSR set to: 1
 11666                           ;lorawan.c: 1423: else
 11667                           ;lorawan.c: 1424: {
 11668                           ;lorawan.c: 1425: buffer = buffer + 8;
 11669  000810  0E08               	movlw	8
 11670  000812  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11671  000814  0E00               	movlw	0
 11672  000816  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11673  000818                     l14405:
 11674                           
 11675                           ;lorawan.c: 1426: }
 11676                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11677  000818  0101               	movlb	1	; () banked
 11678  00081A  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11679  00081C  0100               	movlb	0	; () banked
 11680  00081E  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11681  000820  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11682  000822  0101               	movlb	1	; () banked
 11683  000824  EE20 F005          	lfsr	2,5
 11684  000828  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11685  00082A  26D9               	addwf	fsr2l,f,c
 11686  00082C  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11687  00082E  22DA               	addwfc	fsr2h,f,c
 11688  000830  50DF               	movf	223,w,c
 11689  000832  0B0F               	andlw	15
 11690  000834  0100               	movlb	0	; () banked
 11691  000836  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11692  000838  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11693  00083A  0E0C               	movlw	12
 11694  00083C  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11695  00083E  0E00               	movlw	0
 11696  000840  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11697  000842  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11698  000844  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11699  000846  E104               	bnz	u16290
 11700  000848  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11701  00084A  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11702  00084C  E101 D094          	bz	l2171
 11703  000850                     u16290:
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;lorawan.c: 1428: {
 11707                           ;lorawan.c: 1429: fPort = *(buffer++);
 11708  000850  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11709  000854  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11710  000858  50DF               	movf	indf2,w,c
 11711  00085A  0101               	movlb	1	; () banked
 11712  00085C  6F69               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11713                           
 11714                           ; BSR set to: 1
 11715  00085E  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11716  000860  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11717                           
 11718                           ; BSR set to: 1
 11719                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11720  000862  EE20 F005          	lfsr	2,5
 11721  000866  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11722  000868  26D9               	addwf	fsr2l,f,c
 11723  00086A  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11724  00086C  22DA               	addwfc	fsr2h,f,c
 11725  00086E  50DF               	movf	223,w,c
 11726  000870  0B0F               	andlw	15
 11727  000872  0100               	movlb	0	; () banked
 11728  000874  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11729  000876  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11730  000878  0101               	movlb	1	; () banked
 11731  00087A  5D68               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11732  00087C  0FF4               	addlw	244
 11733  00087E  6F7A               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11734                           
 11735                           ; BSR set to: 1
 11736                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11737  000880  EE20 F005          	lfsr	2,5
 11738  000884  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11739  000886  26D9               	addwf	fsr2l,f,c
 11740  000888  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11741  00088A  22DA               	addwfc	fsr2h,f,c
 11742  00088C  50DF               	movf	223,w,c
 11743  00088E  0B0F               	andlw	15
 11744  000890  0F19               	addlw	25
 11745  000892  6F70               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11746                           
 11747                           ; BSR set to: 1
 11748                           ;lorawan.c: 1434: if (fPort != 0)
 11749  000894  5169               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11750  000896  E026               	bz	l14421
 11751                           
 11752                           ; BSR set to: 1
 11753                           ;lorawan.c: 1435: {
 11754                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11755  000898  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11756  00089C  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11757  0008A0  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11758  0008A2  0100               	movlb	0	; () banked
 11759  0008A4  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11760  0008A6  0E01               	movlw	1
 11761  0008A8  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11762  0008AA  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11763  0008AE  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11764  0008B2  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11765  0008B6  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11766  0008BA  0E32               	movlw	low (_loRa+50)
 11767  0008BC  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11768  0008BE  0E02               	movlw	high (_loRa+50)
 11769  0008C0  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11770  0008C2  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11771  0008C6  0EEF               	movlw	low _radioBuffer
 11772  0008C8  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11773  0008CA  0E05               	movlw	high _radioBuffer
 11774  0008CC  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11775  0008CE  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11776  0008D0  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;lorawan.c: 1437: packet = buffer - 1;
 11780  0008D4  0EFF               	movlw	255
 11781  0008D6  0101               	movlb	1	; () banked
 11782  0008D8  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11783  0008DA  6F72               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11784  0008DC  0EFF               	movlw	255
 11785  0008DE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11786  0008E0  6F73               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11787                           
 11788                           ;lorawan.c: 1438: }
 11789  0008E2  D04E               	goto	l14431
 11790  0008E4                     l14421:
 11791                           
 11792                           ; BSR set to: 1
 11793                           ;lorawan.c: 1439: else
 11794                           ;lorawan.c: 1440: {
 11795                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11796  0008E4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11797  0008E6  0100               	movlb	0	; () banked
 11798  0008E8  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11799  0008EA  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11800  0008EC  0101               	movlb	1	; () banked
 11801  0008EE  EE20 F005          	lfsr	2,5
 11802  0008F2  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11803  0008F4  26D9               	addwf	fsr2l,f,c
 11804  0008F6  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11805  0008F8  22DA               	addwfc	fsr2h,f,c
 11806  0008FA  50DF               	movf	223,w,c
 11807  0008FC  0B0F               	andlw	15
 11808  0008FE  0100               	movlb	0	; () banked
 11809  000900  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11810  000902  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11811  000904  0E0D               	movlw	13
 11812  000906  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11813  000908  0E00               	movlw	0
 11814  00090A  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11815  00090C  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11816  00090E  5DDF               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11817  000910  51E0               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11818  000912  0A80               	xorlw	128
 11819  000914  6FE1               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11820  000916  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11821  000918  0A80               	xorlw	128
 11822  00091A  59E1               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11823  00091C  E22D               	bc	l2171
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;lorawan.c: 1443: {
 11827                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11828  00091E  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11829  000922  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11830  000926  0101               	movlb	1	; () banked
 11831  000928  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11832  00092A  0100               	movlb	0	; () banked
 11833  00092C  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11834  00092E  0E01               	movlw	1
 11835  000930  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11836  000932  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11837  000936  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11838  00093A  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11839  00093E  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11840  000942  0E22               	movlw	low (_loRa+34)
 11841  000944  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11842  000946  0E02               	movlw	high (_loRa+34)
 11843  000948  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11844  00094A  C170  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11845  00094E  0EEF               	movlw	low _radioBuffer
 11846  000950  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11847  000952  0E05               	movlw	high _radioBuffer
 11848  000954  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11849  000956  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11850  000958  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11854  00095C  C166  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11855  000960  C167  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11856  000964  0101               	movlb	1	; () banked
 11857  000966  057A               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11858  000968  0100               	movlb	0	; () banked
 11859  00096A  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11860  00096C  ECDB  F016         	call	_MacExecuteCommands	;wreg free
 11861  000970  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11862  000974  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11863  000978                     l2171:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;lorawan.c: 1453: else
 11867                           ;lorawan.c: 1454: {
 11868                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11869  000978  0101               	movlb	1	; () banked
 11870  00097A  6B7A               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11871                           
 11872                           ;lorawan.c: 1456: packet = (0);
 11873  00097C  6B72               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11874  00097E  6B73               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11875  000980                     l14431:
 11876                           
 11877                           ; BSR set to: 1
 11878                           ;lorawan.c: 1457: }
 11879                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11880  000980  0E01               	movlw	1
 11881  000982  0102               	movlb	2	; () banked
 11882  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 11883                           
 11884                           ; BSR set to: 2
 11885                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11886  000986  6BD0               	clrf	(_loRa+208)& (0+255),b
 11887  000988  6BD1               	clrf	(_loRa+209)& (0+255),b
 11888                           
 11889                           ; BSR set to: 2
 11890                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11891  00098A  6BEE               	clrf	(_loRa+238)& (0+255),b
 11892                           
 11893                           ; BSR set to: 2
 11894                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11895  00098C  9900               	bcf	_loRa& (0+255),4,b
 11896                           
 11897                           ; BSR set to: 2
 11898                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11899  00098E  8303               	bsf	(_loRa+3)& (0+255),1,b
 11900                           
 11901                           ; BSR set to: 2
 11902                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11903  000990  A100               	btfss	_loRa& (0+255),0,b
 11904  000992  D04D               	goto	l14475
 11905                           
 11906                           ; BSR set to: 2
 11907                           ;lorawan.c: 1468: {
 11908                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11909  000994  0101               	movlb	1	; () banked
 11910  000996  EE20 F005          	lfsr	2,5
 11911  00099A  517B               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11912  00099C  26D9               	addwf	fsr2l,f,c
 11913  00099E  517C               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11914  0009A0  22DA               	addwfc	fsr2h,f,c
 11915  0009A2  AADF               	btfss	indf2,5,c
 11916  0009A4  D041               	goto	l14473
 11917                           
 11918                           ; BSR set to: 1
 11919                           ;lorawan.c: 1470: {
 11920                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11921  0009A6  0102               	movlb	2	; () banked
 11922  0009A8  9100               	bcf	_loRa& (0+255),0,b
 11923                           
 11924                           ; BSR set to: 2
 11925                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11926  0009AA  0EF0               	movlw	-16
 11927  0009AC  1702               	andwf	(_loRa+2)& (0+255),f,b
 11928                           
 11929                           ; BSR set to: 2
 11930                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11931  0009AE  0100               	movlb	0	; () banked
 11932  0009B0  51E8               	movf	_rxPayload& (0+255),w,b
 11933  0009B2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11934  0009B4  E016               	bz	l14455
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;lorawan.c: 1474: {
 11938                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11939  0009B6  0102               	movlb	2	; () banked
 11940  0009B8  9B00               	bcf	_loRa& (0+255),5,b
 11941                           
 11942                           ; BSR set to: 2
 11943                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11944  0009BA  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11945  0009BE  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11946  0009C2  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11947  0009C6  0E01               	movlw	1
 11948  0009C8  0100               	movlb	0	; () banked
 11949  0009CA  6F67               	movwf	RxDataDone@status& (0+255),b
 11950  0009CC  D801               	call	u16358
 11951  0009CE  D009               	goto	l14455
 11952  0009D0                     u16358:
 11953  0009D0  0005               	push	
 11954  0009D2  6EFA               	movwf	pclath,c
 11955  0009D4  51E8               	movf	_rxPayload& (0+255),w,b
 11956  0009D6  6EFD               	movwf	tosl,c
 11957  0009D8  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11958  0009DA  6EFE               	movwf	tosh,c
 11959  0009DC  6AFF               	clrf	tosu,c
 11960  0009DE  50FA               	movf	pclath,w,c
 11961  0009E0  0012               	return		;indir
 11962  0009E2                     l14455:
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;lorawan.c: 1477: }
 11966                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11967  0009E2  0102               	movlb	2	; () banked
 11968  0009E4  9303               	bcf	(_loRa+3)& (0+255),1,b
 11969                           
 11970                           ; BSR set to: 2
 11971                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11972  0009E6  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11973                           
 11974                           ; BSR set to: 2
 11975  0009E8  BB00               	btfsc	_loRa& (0+255),5,b
 11976  0009EA  D5DE               	goto	l14303
 11977                           
 11978                           ; BSR set to: 2
 11979  0009EC  B300               	btfsc	_loRa& (0+255),1,b
 11980  0009EE  D002               	goto	l14465
 11981                           
 11982                           ; BSR set to: 2
 11983  0009F0  A700               	btfss	_loRa& (0+255),3,b
 11984  0009F2  D5DA               	goto	l14303
 11985  0009F4                     l14465:
 11986                           
 11987                           ; BSR set to: 2
 11988                           ;lorawan.c: 1480: {
 11989                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11990  0009F4  0E01               	movlw	1
 11991  0009F6  0100               	movlb	0	; () banked
 11992  0009F8  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11993  0009FA  0E6A               	movlw	low LORAWAN_RxDone@channelIndex
 11994  0009FC  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11995  0009FE  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 11996  000A00  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11997  000A02  0102               	movlb	2	; () banked
 11998  000A04  51ED               	movf	(_loRa+237)& (0+255),w,b
 11999  000A06  EC81  F027         	call	_SearchAvailableChannel
 12000  000A0A  0900               	iorlw	0
 12001  000A0C  E10A               	bnz	l14471
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;lorawan.c: 1482: {
 12005                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12006  000A0E  0E00               	movlw	0
 12007  000A10  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12008  000A12  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12009  000A14  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12010  000A16  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12011  000A18  ECFE  F029         	call	_LORAWAN_Send
 12012  000A1C                     l14469:
 12013                           
 12014                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12015  000A1C  0102               	movlb	2	; () banked
 12016  000A1E  9700               	bcf	_loRa& (0+255),3,b
 12017                           
 12018                           ;lorawan.c: 1485: }
 12019  000A20  D5C3               	goto	l14303
 12020  000A22                     l14471:
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;lorawan.c: 1486: else
 12024                           ;lorawan.c: 1487: {
 12025                           ;lorawan.c: 1489: StartReTxTimer();
 12026  000A22  ECE9  F021         	call	_StartReTxTimer	;wreg free
 12027  000A26  D5C0               	goto	l14303
 12028  000A28                     l14473:
 12029                           
 12030                           ; BSR set to: 1
 12031                           ;lorawan.c: 1494: else
 12032                           ;lorawan.c: 1495: {
 12033                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12034  000A28  ECB7  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12035  000A2C  D5BD               	goto	l14303
 12036  000A2E                     l14475:
 12037                           
 12038                           ; BSR set to: 2
 12039                           ;lorawan.c: 1499: else
 12040                           ;lorawan.c: 1500: {
 12041                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12042  000A2E  0EF0               	movlw	-16
 12043  000A30  1702               	andwf	(_loRa+2)& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 2
 12046                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12047  000A32  0100               	movlb	0	; () banked
 12048  000A34  51E8               	movf	_rxPayload& (0+255),w,b
 12049  000A36  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12050  000A38  E016               	bz	l14483
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;lorawan.c: 1504: {
 12054                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12055  000A3A  0102               	movlb	2	; () banked
 12056  000A3C  9B00               	bcf	_loRa& (0+255),5,b
 12057                           
 12058                           ; BSR set to: 2
 12059                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12060  000A3E  C172  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12061  000A42  C173  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12062  000A46  C17A  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12063  000A4A  0E01               	movlw	1
 12064  000A4C  0100               	movlb	0	; () banked
 12065  000A4E  6F67               	movwf	RxDataDone@status& (0+255),b
 12066  000A50  D801               	call	u16428
 12067  000A52  D009               	goto	l14483
 12068  000A54                     u16428:
 12069  000A54  0005               	push	
 12070  000A56  6EFA               	movwf	pclath,c
 12071  000A58  51E8               	movf	_rxPayload& (0+255),w,b
 12072  000A5A  6EFD               	movwf	tosl,c
 12073  000A5C  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12074  000A5E  6EFE               	movwf	tosh,c
 12075  000A60  6AFF               	clrf	tosu,c
 12076  000A62  50FA               	movf	pclath,w,c
 12077  000A64  0012               	return		;indir
 12078  000A66                     l14483:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;lorawan.c: 1507: }
 12082                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12083  000A66  0102               	movlb	2	; () banked
 12084  000A68  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12085                           
 12086                           ; BSR set to: 2
 12087  000A6A  BB00               	btfsc	_loRa& (0+255),5,b
 12088  000A6C  D59D               	goto	l14303
 12089                           
 12090                           ; BSR set to: 2
 12091  000A6E  B300               	btfsc	_loRa& (0+255),1,b
 12092  000A70  D002               	goto	l14491
 12093                           
 12094                           ; BSR set to: 2
 12095  000A72  A700               	btfss	_loRa& (0+255),3,b
 12096  000A74  D599               	goto	l14303
 12097  000A76                     l14491:
 12098                           
 12099                           ; BSR set to: 2
 12100                           ;lorawan.c: 1510: {
 12101                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12102  000A76  0E01               	movlw	1
 12103  000A78  0100               	movlb	0	; () banked
 12104  000A7A  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12105  000A7C  0E6A               	movlw	low LORAWAN_RxDone@channelIndex
 12106  000A7E  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12107  000A80  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 12108  000A82  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12109  000A84  0102               	movlb	2	; () banked
 12110  000A86  51ED               	movf	(_loRa+237)& (0+255),w,b
 12111  000A88  EC81  F027         	call	_SearchAvailableChannel
 12112  000A8C  0900               	iorlw	0
 12113  000A8E  E1C9               	bnz	l14471
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;lorawan.c: 1512: {
 12117                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12118  000A90  0E00               	movlw	0
 12119  000A92  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12120  000A94  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12121  000A96  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12122  000A98  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12123  000A9A  ECFE  F029         	call	_LORAWAN_Send
 12124  000A9E  D7BE               	goto	l14469
 12125  000AA0                     l14509:
 12126                           
 12127                           ; BSR set to: 2
 12128                           ;lorawan.c: 1537: else
 12129                           ;lorawan.c: 1538: {
 12130                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12131  000AA0  0100               	movlb	0	; () banked
 12132  000AA2  51E8               	movf	_rxPayload& (0+255),w,b
 12133  000AA4  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12134  000AA6  B4D8               	btfsc	status,2,c
 12135  000AA8  0012               	return	
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;lorawan.c: 1541: {
 12139                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12140  000AAA  EC3B  F03C         	call	_RADIO_GetStatus	;wreg free
 12141  000AAE  0100               	movlb	0	; () banked
 12142  000AB0  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 12143  000AB2  B7DD               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12144  000AB4  D011               	goto	l14515
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;lorawan.c: 1543: {
 12148                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12149  000AB6  C166  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12150  000ABA  C167  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12151  000ABE  C168  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12152  000AC2  0E03               	movlw	3
 12153  000AC4  6F67               	movwf	RxDataDone@status& (0+255),b
 12154  000AC6  0005               	push	
 12155  000AC8  6EFA               	movwf	pclath,c
 12156  000ACA  51E8               	movf	_rxPayload& (0+255),w,b
 12157  000ACC  6EFD               	movwf	tosl,c
 12158  000ACE  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12159  000AD0  6EFE               	movwf	tosh,c
 12160  000AD2  6AFF               	clrf	tosu,c
 12161  000AD4  50FA               	movf	pclath,w,c
 12162  000AD6  0012               	return		;indir
 12163  000AD8                     l14515:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;lorawan.c: 1546: else
 12167                           ;lorawan.c: 1547: {
 12168                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12169  000AD8  C166  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12170  000ADC  C167  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12171  000AE0  C168  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12172  000AE4  0E02               	movlw	2
 12173  000AE6  6F67               	movwf	RxDataDone@status& (0+255),b
 12174  000AE8  0005               	push	
 12175  000AEA  6EFA               	movwf	pclath,c
 12176  000AEC  51E8               	movf	_rxPayload& (0+255),w,b
 12177  000AEE  6EFD               	movwf	tosl,c
 12178  000AF0  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12179  000AF2  6EFE               	movwf	tosh,c
 12180  000AF4  6AFF               	clrf	tosu,c
 12181  000AF6  50FA               	movf	pclath,w,c
 12182  000AF8  0012               	return		;indir
 12183  000AFA                     __end_of_LORAWAN_RxDone:
 12184                           	opt stack 0
 12185                           tosu	equ	0xFFF
 12186                           tosh	equ	0xFFE
 12187                           tosl	equ	0xFFD
 12188                           pclath	equ	0xFFA
 12189                           tblptru	equ	0xFF8
 12190                           tblptrh	equ	0xFF7
 12191                           tblptrl	equ	0xFF6
 12192                           tablat	equ	0xFF5
 12193                           prodh	equ	0xFF4
 12194                           prodl	equ	0xFF3
 12195                           intcon	equ	0xFF2
 12196                           intcon2	equ	0xFF1
 12197                           intcon3	equ	0xFF0
 12198                           postinc0	equ	0xFEE
 12199                           wreg	equ	0xFE8
 12200                           postinc1	equ	0xFE6
 12201                           postdec1	equ	0xFE5
 12202                           plusw1	equ	0xFE3
 12203                           fsr1h	equ	0xFE2
 12204                           fsr1l	equ	0xFE1
 12205                           indf2	equ	0xFDF
 12206                           postinc2	equ	0xFDE
 12207                           postdec2	equ	0xFDD
 12208                           fsr2h	equ	0xFDA
 12209                           fsr2l	equ	0xFD9
 12210                           status	equ	0xFD8
 12211                           
 12212 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12213 ;; Defined at:
 12214 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12215 ;; Parameters:    Size  Location     Type
 12216 ;;		None
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;		None
 12219 ;; Return value:  Size  Location     Type
 12220 ;;                  1    wreg      void 
 12221 ;; Registers used:
 12222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12223 ;; Tracked objects:
 12224 ;;		On entry : E/0
 12225 ;;		On exit  : F/0
 12226 ;;		Unchanged: 0/0
 12227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12232 ;;Total ram usage:        4 bytes
 12233 ;; Hardware stack levels used:    1
 12234 ;; Hardware stack levels required when called:   11
 12235 ;; This function calls:
 12236 ;;		_SwTimerSetTimeout
 12237 ;;		_SwTimerStart
 12238 ;;		___lldiv
 12239 ;; This function is called by:
 12240 ;;		_AckRetransmissionCallback
 12241 ;;		_LORAWAN_RxDone
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text63
 12246  00616E                     __ptext63:
 12247                           	opt stack 0
 12248  00616E                     _UpdateRetransmissionAckTimeoutState:
 12249                           	opt stack 16
 12250                           
 12251                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12252                           
 12253                           ;incstack = 0
 12254  00616E  0102               	movlb	2	; () banked
 12255  006170  5102               	movf	(_loRa+2)& (0+255),w,b
 12256  006172  0BF0               	andlw	-16
 12257  006174  0906               	iorlw	6
 12258  006176  6F02               	movwf	(_loRa+2)& (0+255),b
 12259                           
 12260                           ; BSR set to: 2
 12261                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12262  006178  51A0               	movf	(_loRa+160)& (0+255),w,b
 12263  00617A  0100               	movlb	0	; () banked
 12264  00617C  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12265  00617E  0102               	movlb	2	; () banked
 12266  006180  51A1               	movf	(_loRa+161)& (0+255),w,b
 12267  006182  0100               	movlb	0	; () banked
 12268  006184  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12269  006186  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12270  006188  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12271  00618A  0E0C               	movlw	12
 12272  00618C                     u15545:
 12273  00618C  90D8               	bcf	status,0,c
 12274  00618E  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12275  006190  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12276  006192  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12277  006194  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12278  006196  2EE8               	decfsz	wreg,f,c
 12279  006198  D7F9               	goto	u15545
 12280  00619A  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12281  00619E  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12282  0061A2  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12283  0061A6  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12284  0061AA  0E7D               	movlw	125
 12285  0061AC  6F68               	movwf	___lldiv@divisor& (0+255),b
 12286  0061AE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12287  0061B0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12288  0061B2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12289  0061B4  EC0B  F030         	call	___lldiv	;wreg free
 12290  0061B8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12291  0061BC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12292  0061C0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12293  0061C4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12294  0061C8  0102               	movlb	2	; () banked
 12295  0061CA  51E8               	movf	(_loRa+232)& (0+255),w,b
 12296  0061CC  EC60  F036         	call	_SwTimerSetTimeout
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12300  0061D0  0102               	movlb	2	; () banked
 12301  0061D2  51E8               	movf	(_loRa+232)& (0+255),w,b
 12302  0061D4  EF49  F02E         	goto	_SwTimerStart
 12303  0061D8                     __end_of_UpdateRetransmissionAckTimeoutState:
 12304                           	opt stack 0
 12305                           tosu	equ	0xFFF
 12306                           tosh	equ	0xFFE
 12307                           tosl	equ	0xFFD
 12308                           pclath	equ	0xFFA
 12309                           tblptru	equ	0xFF8
 12310                           tblptrh	equ	0xFF7
 12311                           tblptrl	equ	0xFF6
 12312                           tablat	equ	0xFF5
 12313                           prodh	equ	0xFF4
 12314                           prodl	equ	0xFF3
 12315                           intcon	equ	0xFF2
 12316                           intcon2	equ	0xFF1
 12317                           intcon3	equ	0xFF0
 12318                           postinc0	equ	0xFEE
 12319                           wreg	equ	0xFE8
 12320                           postinc1	equ	0xFE6
 12321                           postdec1	equ	0xFE5
 12322                           plusw1	equ	0xFE3
 12323                           fsr1h	equ	0xFE2
 12324                           fsr1l	equ	0xFE1
 12325                           indf2	equ	0xFDF
 12326                           postinc2	equ	0xFDE
 12327                           postdec2	equ	0xFDD
 12328                           fsr2h	equ	0xFDA
 12329                           fsr2l	equ	0xFD9
 12330                           status	equ	0xFD8
 12331                           
 12332 ;; *************** function _UpdateDLSettings *****************
 12333 ;; Defined at:
 12334 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;  dlRx2Dr         1    wreg     unsigned char 
 12337 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12338 ;; Auto vars:     Size  Location     Type
 12339 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12340 ;; Return value:  Size  Location     Type
 12341 ;;                  1    wreg      void 
 12342 ;; Registers used:
 12343 ;;		wreg, status,2, status,0
 12344 ;; Tracked objects:
 12345 ;;		On entry : F/1
 12346 ;;		On exit  : F/0
 12347 ;;		Unchanged: 0/0
 12348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12349 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;Total ram usage:        2 bytes
 12354 ;; Hardware stack levels used:    1
 12355 ;; Hardware stack levels required when called:    7
 12356 ;; This function calls:
 12357 ;;		Nothing
 12358 ;; This function is called by:
 12359 ;;		_LORAWAN_RxDone
 12360 ;; This function uses a non-reentrant model
 12361 ;;
 12362                           
 12363                           	psect	text64
 12364  007572                     __ptext64:
 12365                           	opt stack 0
 12366  007572                     _UpdateDLSettings:
 12367                           	opt stack 19
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;incstack = 0
 12371                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12372  007572  0100               	movlb	0	; () banked
 12373  007574  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12374                           
 12375                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12376  007576  0E08               	movlw	8
 12377  007578  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12378  00757A  D002               	goto	l13855
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;lorawan_eu.c: 891: {
 12382                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12383  00757C  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12384  007580                     l13855:
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;lorawan_eu.c: 893: }
 12388                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12389  007580  0E06               	movlw	6
 12390  007582  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12391  007584  0C06               	retlw	6
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;lorawan_eu.c: 896: {
 12395                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12396  007586  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12397                           
 12398                           ; BSR set to: 0
 12399  00758A  0C06               	retlw	6	;funcret
 12400  00758C                     __end_of_UpdateDLSettings:
 12401                           	opt stack 0
 12402                           tosu	equ	0xFFF
 12403                           tosh	equ	0xFFE
 12404                           tosl	equ	0xFFD
 12405                           pclath	equ	0xFFA
 12406                           tblptru	equ	0xFF8
 12407                           tblptrh	equ	0xFF7
 12408                           tblptrl	equ	0xFF6
 12409                           tablat	equ	0xFF5
 12410                           prodh	equ	0xFF4
 12411                           prodl	equ	0xFF3
 12412                           intcon	equ	0xFF2
 12413                           intcon2	equ	0xFF1
 12414                           intcon3	equ	0xFF0
 12415                           postinc0	equ	0xFEE
 12416                           wreg	equ	0xFE8
 12417                           postinc1	equ	0xFE6
 12418                           postdec1	equ	0xFE5
 12419                           plusw1	equ	0xFE3
 12420                           fsr1h	equ	0xFE2
 12421                           fsr1l	equ	0xFE1
 12422                           indf2	equ	0xFDF
 12423                           postinc2	equ	0xFDE
 12424                           postdec2	equ	0xFDD
 12425                           fsr2h	equ	0xFDA
 12426                           fsr2l	equ	0xFD9
 12427                           status	equ	0xFD8
 12428                           
 12429 ;; *************** function _UpdateCfList *****************
 12430 ;; Defined at:
 12431 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  bufferLength    1    wreg     unsigned char 
 12434 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12435 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12438 ;;  frequency       4   21[BANK0 ] unsigned long 
 12439 ;;  i               1   26[BANK0 ] unsigned char 
 12440 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12445 ;; Tracked objects:
 12446 ;;		On entry : F/1
 12447 ;;		On exit  : D/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;Total ram usage:       11 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    9
 12457 ;; This function calls:
 12458 ;;		_LORAWAN_SetChannelIdStatus
 12459 ;;		_ValidateFrequency
 12460 ;;		___lmul
 12461 ;;		_memcpy
 12462 ;; This function is called by:
 12463 ;;		_LORAWAN_RxDone
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text65
 12468  003194                     __ptext65:
 12469                           	opt stack 0
 12470  003194                     _UpdateCfList:
 12471                           	opt stack 17
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;incstack = 0
 12475                           ;UpdateCfList@bufferLength stored from wreg
 12476  003194  0100               	movlb	0	; () banked
 12477  003196  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12478                           
 12479                           ;lorawan_eu.c: 826: uint8_t i;
 12480                           ;lorawan_eu.c: 827: uint32_t frequency;
 12481                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12482                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12483  003198  0E21               	movlw	33
 12484  00319A  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12485  00319C  A4D8               	btfss	status,2,c
 12486  00319E  0012               	return	
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;lorawan_eu.c: 831: {
 12490                           ;lorawan_eu.c: 833: channelIndex = 3;
 12491  0031A0  0E03               	movlw	3
 12492  0031A2  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12493                           
 12494                           ; BSR set to: 0
 12495                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12496  0031A4  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12497  0031A6                     l1151:
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;lorawan_eu.c: 836: {
 12501                           ;lorawan_eu.c: 837: frequency = 0;
 12502  0031A6  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12503  0031A8  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12504  0031AA  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12505  0031AC  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12509  0031AE  0E75               	movlw	low UpdateCfList@frequency
 12510  0031B0  6F64               	movwf	memcpy@d1& (0+255),b
 12511  0031B2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12512  0031B4  517A               	movf	UpdateCfList@i& (0+255),w,b
 12513  0031B6  0D03               	mullw	3
 12514  0031B8  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12515  0031BC  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12516  0031C0  50F3               	movf	prodl,w,c
 12517  0031C2  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12518  0031C4  50F4               	movf	prodh,w,c
 12519  0031C6  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12520  0031C8  0E0D               	movlw	13
 12521  0031CA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12522  0031CC  0E00               	movlw	0
 12523  0031CE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12524  0031D0  5172               	movf	??_UpdateCfList& (0+255),w,b
 12525  0031D2  6F66               	movwf	memcpy@s1& (0+255),b
 12526  0031D4  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12527  0031D6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12528  0031D8  0E03               	movlw	3
 12529  0031DA  6F68               	movwf	memcpy@n& (0+255),b
 12530  0031DC  ECFF  F033         	call	_memcpy	;wreg free
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;lorawan_eu.c: 839: frequency *= 100;
 12534  0031E0  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12535  0031E4  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12536  0031E8  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12537  0031EC  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12538  0031F0  0E64               	movlw	100
 12539  0031F2  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12540  0031F4  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12541  0031F6  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12542  0031F8  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12543  0031FA  EC8D  F02E         	call	___lmul	;wreg free
 12544  0031FE  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12545  003202  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12546  003206  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12547  00320A  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;lorawan_eu.c: 840: if (frequency != 0)
 12551  00320E  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12552  003210  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12553  003212  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12554  003214  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12555  003216  E101 D094          	bz	l13845
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;lorawan_eu.c: 841: {
 12559                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12560  00321A  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12561  00321E  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12562  003222  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12563  003226  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12564  00322A  ECA5  F033         	call	_ValidateFrequency	;wreg free
 12565  00322E  0900               	iorlw	0
 12566  003230  E001 D08C          	bnz	l13847
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;lorawan_eu.c: 843: {
 12570                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12571  003234  517A               	movf	UpdateCfList@i& (0+255),w,b
 12572  003236  0D0E               	mullw	14
 12573  003238  0E00               	movlw	low _Channels
 12574  00323A  6F72               	movwf	??_UpdateCfList& (0+255),b
 12575  00323C  0E04               	movlw	high _Channels
 12576  00323E  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12577  003240  50F3               	movf	prodl,w,c
 12578  003242  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12579  003244  50F4               	movf	prodh,w,c
 12580  003246  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12581  003248  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12582  00324A  0D0E               	mullw	14
 12583  00324C  50F3               	movf	prodl,w,c
 12584  00324E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12585  003250  6ED9               	movwf	fsr2l,c
 12586  003252  50F4               	movf	prodh,w,c
 12587  003254  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12588  003256  6EDA               	movwf	fsr2h,c
 12589  003258  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12590  00325C  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12591  003260  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12592  003264  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12593                           
 12594                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12595  003268  517A               	movf	UpdateCfList@i& (0+255),w,b
 12596  00326A  0D0E               	mullw	14
 12597  00326C  0E00               	movlw	low _Channels
 12598  00326E  6F72               	movwf	??_UpdateCfList& (0+255),b
 12599  003270  0E04               	movlw	high _Channels
 12600  003272  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12601  003274  0E05               	movlw	5
 12602  003276  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12603  003278  0E00               	movlw	0
 12604  00327A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12605  00327C  50F3               	movf	prodl,w,c
 12606  00327E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12607  003280  50F4               	movf	prodh,w,c
 12608  003282  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12609  003284  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12610  003286  0D0E               	mullw	14
 12611  003288  50F3               	movf	prodl,w,c
 12612  00328A  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12613  00328C  6ED9               	movwf	fsr2l,c
 12614  00328E  50F4               	movf	prodh,w,c
 12615  003290  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12616  003292  6EDA               	movwf	fsr2h,c
 12617  003294  50DF               	movf	223,w,c
 12618  003296  0B0F               	andlw	-241
 12619  003298  0950               	iorlw	80
 12620  00329A  6EDF               	movwf	223,c
 12621                           
 12622                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12623  00329C  0100               	movlb	0	; () banked
 12624  00329E  517A               	movf	UpdateCfList@i& (0+255),w,b
 12625  0032A0  0D0E               	mullw	14
 12626  0032A2  0E00               	movlw	low _Channels
 12627  0032A4  6F72               	movwf	??_UpdateCfList& (0+255),b
 12628  0032A6  0E04               	movlw	high _Channels
 12629  0032A8  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12630  0032AA  0E05               	movlw	5
 12631  0032AC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12632  0032AE  0E00               	movlw	0
 12633  0032B0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12634  0032B2  50F3               	movf	prodl,w,c
 12635  0032B4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12636  0032B6  50F4               	movf	prodh,w,c
 12637  0032B8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12638  0032BA  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12639  0032BC  0D0E               	mullw	14
 12640  0032BE  50F3               	movf	prodl,w,c
 12641  0032C0  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12642  0032C2  6ED9               	movwf	fsr2l,c
 12643  0032C4  50F4               	movf	prodh,w,c
 12644  0032C6  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12645  0032C8  6EDA               	movwf	fsr2h,c
 12646  0032CA  0EF0               	movlw	-16
 12647  0032CC  16DF               	andwf	223,f,c
 12648                           
 12649                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12650  0032CE  517A               	movf	UpdateCfList@i& (0+255),w,b
 12651  0032D0  0D0E               	mullw	14
 12652  0032D2  0E00               	movlw	low _Channels
 12653  0032D4  6F72               	movwf	??_UpdateCfList& (0+255),b
 12654  0032D6  0E04               	movlw	high _Channels
 12655  0032D8  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12656  0032DA  0E06               	movlw	6
 12657  0032DC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12658  0032DE  0E00               	movlw	0
 12659  0032E0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12660  0032E2  50F3               	movf	prodl,w,c
 12661  0032E4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12662  0032E6  50F4               	movf	prodh,w,c
 12663  0032E8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12664  0032EA  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12665  0032EC  0D0E               	mullw	14
 12666  0032EE  50F3               	movf	prodl,w,c
 12667  0032F0  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12668  0032F2  6ED9               	movwf	fsr2l,c
 12669  0032F4  50F4               	movf	prodh,w,c
 12670  0032F6  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12671  0032F8  6EDA               	movwf	fsr2h,c
 12672  0032FA  0EE7               	movlw	231
 12673  0032FC  6EDE               	movwf	postinc2,c
 12674  0032FE  0E03               	movlw	3
 12675  003300  6EDD               	movwf	postdec2,c
 12676                           
 12677                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12678  003302  517A               	movf	UpdateCfList@i& (0+255),w,b
 12679  003304  0D0E               	mullw	14
 12680  003306  0E00               	movlw	low _Channels
 12681  003308  6F72               	movwf	??_UpdateCfList& (0+255),b
 12682  00330A  0E04               	movlw	high _Channels
 12683  00330C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12684  00330E  0E0D               	movlw	13
 12685  003310  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12686  003312  0E00               	movlw	0
 12687  003314  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12688  003316  50F3               	movf	prodl,w,c
 12689  003318  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12690  00331A  50F4               	movf	prodh,w,c
 12691  00331C  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12692  00331E  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12693  003320  0D0E               	mullw	14
 12694  003322  50F3               	movf	prodl,w,c
 12695  003324  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12696  003326  6ED9               	movwf	fsr2l,c
 12697  003328  50F4               	movf	prodh,w,c
 12698  00332A  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12699  00332C  6EDA               	movwf	fsr2h,c
 12700  00332E  68DF               	setf	indf2,c
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12704  003330  0E01               	movlw	1
 12705  003332  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12706  003334  517A               	movf	UpdateCfList@i& (0+255),w,b
 12707  003336  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12708  003338  EC54  F037         	call	_LORAWAN_SetChannelIdStatus
 12709                           
 12710                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12711  00333C  0102               	movlb	2	; () banked
 12712  00333E  8703               	bsf	(_loRa+3)& (0+255),3,b
 12713  003340  D005               	goto	l13847
 12714  003342                     l13845:
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;lorawan_eu.c: 853: else
 12718                           ;lorawan_eu.c: 854: {
 12719                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12720  003342  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12721  003344  517A               	movf	UpdateCfList@i& (0+255),w,b
 12722  003346  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12723  003348  EC54  F037         	call	_LORAWAN_SetChannelIdStatus
 12724  00334C                     l13847:
 12725  00334C  0100               	movlb	0	; () banked
 12726  00334E  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12727                           
 12728                           ; BSR set to: 0
 12729  003350  0E04               	movlw	4
 12730  003352  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12731  003354  D728               	goto	l1151
 12732                           
 12733                           ; BSR set to: 0
 12734                           ;lorawan_eu.c: 856: }
 12735                           ;lorawan_eu.c: 857: }
 12736                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12737  003356  0102               	movlb	2	; () banked
 12738  003358  8703               	bsf	(_loRa+3)& (0+255),3,b
 12739  00335A  0C04               	retlw	4	;funcret
 12740  00335C                     __end_of_UpdateCfList:
 12741                           	opt stack 0
 12742                           tosu	equ	0xFFF
 12743                           tosh	equ	0xFFE
 12744                           tosl	equ	0xFFD
 12745                           pclath	equ	0xFFA
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodh	equ	0xFF4
 12751                           prodl	equ	0xFF3
 12752                           intcon	equ	0xFF2
 12753                           intcon2	equ	0xFF1
 12754                           intcon3	equ	0xFF0
 12755                           postinc0	equ	0xFEE
 12756                           wreg	equ	0xFE8
 12757                           postinc1	equ	0xFE6
 12758                           postdec1	equ	0xFE5
 12759                           plusw1	equ	0xFE3
 12760                           fsr1h	equ	0xFE2
 12761                           fsr1l	equ	0xFE1
 12762                           indf2	equ	0xFDF
 12763                           postinc2	equ	0xFDE
 12764                           postdec2	equ	0xFDD
 12765                           fsr2h	equ	0xFDA
 12766                           fsr2l	equ	0xFD9
 12767                           status	equ	0xFD8
 12768                           
 12769 ;; *************** function _StartReTxTimer *****************
 12770 ;; Defined at:
 12771 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;		None
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;  minim           4   58[BANK0 ] unsigned long 
 12776 ;;  i               1   62[BANK0 ] unsigned char 
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12781 ;; Tracked objects:
 12782 ;;		On entry : E/0
 12783 ;;		On exit  : F/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12789 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12790 ;;Total ram usage:        9 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:   11
 12793 ;; This function calls:
 12794 ;;		_SwTimerSetTimeout
 12795 ;;		_SwTimerStart
 12796 ;;		___lldiv
 12797 ;; This function is called by:
 12798 ;;		_LORAWAN_RxDone
 12799 ;; This function uses a non-reentrant model
 12800 ;;
 12801                           
 12802                           	psect	text66
 12803  0043D2                     __ptext66:
 12804                           	opt stack 0
 12805  0043D2                     _StartReTxTimer:
 12806                           	opt stack 15
 12807                           
 12808                           ;lorawan_eu.c: 904: uint8_t i;
 12809                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12810                           
 12811                           ;incstack = 0
 12812  0043D2  0100               	movlb	0	; () banked
 12813  0043D4  699A               	setf	StartReTxTimer@minim& (0+255),b
 12814  0043D6  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12815  0043D8  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12816  0043DA  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12817                           
 12818                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12819  0043DC  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 12820  0043DE  D05B               	goto	l13875
 12821  0043E0                     l13861:
 12822                           
 12823                           ; BSR set to: 2
 12824                           ;lorawan_eu.c: 908: {
 12825                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12826  0043E0  0100               	movlb	0	; () banked
 12827  0043E2  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12828  0043E4  0D0E               	mullw	14
 12829  0043E6  0E04               	movlw	low (_Channels+4)
 12830  0043E8  24F3               	addwf	prodl,w,c
 12831  0043EA  6ED9               	movwf	fsr2l,c
 12832  0043EC  0E04               	movlw	high (_Channels+4)
 12833  0043EE  20F4               	addwfc	prodh,w,c
 12834  0043F0  6EDA               	movwf	fsr2h,c
 12835  0043F2  04DE               	decf	postinc2,w,c
 12836  0043F4  E14E               	bnz	l13873
 12837                           
 12838                           ; BSR set to: 0
 12839  0043F6  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12840  0043F8  0D0E               	mullw	14
 12841  0043FA  0E08               	movlw	low (_Channels+8)
 12842  0043FC  24F3               	addwf	prodl,w,c
 12843  0043FE  6ED9               	movwf	fsr2l,c
 12844  004400  0E04               	movlw	high (_Channels+8)
 12845  004402  20F4               	addwfc	prodh,w,c
 12846  004404  6EDA               	movwf	fsr2h,c
 12847  004406  50DE               	movf	postinc2,w,c
 12848  004408  10DE               	iorwf	postinc2,w,c
 12849  00440A  10DE               	iorwf	postinc2,w,c
 12850  00440C  10DE               	iorwf	postinc2,w,c
 12851  00440E  E041               	bz	l13873
 12852                           
 12853                           ; BSR set to: 0
 12854  004410  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12855  004412  0D0E               	mullw	14
 12856  004414  0E08               	movlw	low (_Channels+8)
 12857  004416  24F3               	addwf	prodl,w,c
 12858  004418  6ED9               	movwf	fsr2l,c
 12859  00441A  0E04               	movlw	high (_Channels+8)
 12860  00441C  20F4               	addwfc	prodh,w,c
 12861  00441E  6EDA               	movwf	fsr2h,c
 12862  004420  50DE               	movf	postinc2,w,c
 12863  004422  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 12864  004424  50DE               	movf	postinc2,w,c
 12865  004426  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12866  004428  50DE               	movf	postinc2,w,c
 12867  00442A  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12868  00442C  50DE               	movf	postinc2,w,c
 12869  00442E  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12870  004430  E330               	bnc	l13873
 12871                           
 12872                           ; BSR set to: 0
 12873  004432  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12874  004434  0D0E               	mullw	14
 12875  004436  0E05               	movlw	low (_Channels+5)
 12876  004438  24F3               	addwf	prodl,w,c
 12877  00443A  6ED9               	movwf	fsr2l,c
 12878  00443C  0E04               	movlw	high (_Channels+5)
 12879  00443E  20F4               	addwfc	prodh,w,c
 12880  004440  6EDA               	movwf	fsr2h,c
 12881  004442  50DF               	movf	223,w,c
 12882  004444  0B0F               	andlw	15
 12883  004446  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12884  004448  5196               	movf	??_StartReTxTimer& (0+255),w,b
 12885  00444A  0102               	movlb	2	; () banked
 12886  00444C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12887  00444E  E321               	bnc	l13873
 12888                           
 12889                           ; BSR set to: 2
 12890  004450  0100               	movlb	0	; () banked
 12891  004452  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12892  004454  0D0E               	mullw	14
 12893  004456  0E05               	movlw	low (_Channels+5)
 12894  004458  24F3               	addwf	prodl,w,c
 12895  00445A  6ED9               	movwf	fsr2l,c
 12896  00445C  0E04               	movlw	high (_Channels+5)
 12897  00445E  20F4               	addwfc	prodh,w,c
 12898  004460  6EDA               	movwf	fsr2h,c
 12899  004462  38DF               	swapf	223,w,c
 12900  004464  0B0F               	andlw	15
 12901  004466  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12902  004468  0102               	movlb	2	; () banked
 12903  00446A  51DF               	movf	(_loRa+223)& (0+255),w,b
 12904  00446C  0100               	movlb	0	; () banked
 12905  00446E  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 12906  004470  E310               	bnc	l13873
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;lorawan_eu.c: 910: {
 12910                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12911  004472  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12912  004474  0D0E               	mullw	14
 12913  004476  0E08               	movlw	low (_Channels+8)
 12914  004478  24F3               	addwf	prodl,w,c
 12915  00447A  6ED9               	movwf	fsr2l,c
 12916  00447C  0E04               	movlw	high (_Channels+8)
 12917  00447E  20F4               	addwfc	prodh,w,c
 12918  004480  6EDA               	movwf	fsr2h,c
 12919  004482  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 12920  004486  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 12921  00448A  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 12922  00448E  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 12923  004492                     l13873:
 12924  004492  0100               	movlb	0	; () banked
 12925  004494  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 12926  004496                     l13875:
 12927                           
 12928                           ; BSR set to: 0
 12929  004496  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12930  004498  0102               	movlb	2	; () banked
 12931  00449A  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12932  00449C  E2A1               	bc	l13861
 12933                           
 12934                           ; BSR set to: 2
 12935                           ;lorawan_eu.c: 912: }
 12936                           ;lorawan_eu.c: 913: }
 12937                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12938  00449E  5102               	movf	(_loRa+2)& (0+255),w,b
 12939  0044A0  0BF0               	andlw	-16
 12940  0044A2  0906               	iorlw	6
 12941  0044A4  6F02               	movwf	(_loRa+2)& (0+255),b
 12942                           
 12943                           ; BSR set to: 2
 12944                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12945  0044A6  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12946  0044AA  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12947  0044AE  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12948  0044B2  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12949  0044B6  0E0C               	movlw	12
 12950  0044B8                     u15405:
 12951  0044B8  90D8               	bcf	status,0,c
 12952  0044BA  0100               	movlb	0	; () banked
 12953  0044BC  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 12954  0044BE  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12955  0044C0  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12956  0044C2  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12957  0044C4  2EE8               	decfsz	wreg,f,c
 12958  0044C6  D7F8               	goto	u15405
 12959  0044C8  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 12960  0044CC  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12961  0044D0  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12962  0044D4  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12963  0044D8  0E7D               	movlw	125
 12964  0044DA  6F68               	movwf	___lldiv@divisor& (0+255),b
 12965  0044DC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12966  0044DE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12967  0044E0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12968  0044E2  EC0B  F030         	call	___lldiv	;wreg free
 12969  0044E6  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12970  0044EA  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12971  0044EE  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12972  0044F2  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12973  0044F6  0102               	movlb	2	; () banked
 12974  0044F8  51E6               	movf	(_loRa+230)& (0+255),w,b
 12975  0044FA  EC60  F036         	call	_SwTimerSetTimeout
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12979  0044FE  0102               	movlb	2	; () banked
 12980  004500  51E6               	movf	(_loRa+230)& (0+255),w,b
 12981  004502  EF49  F02E         	goto	_SwTimerStart
 12982  004506                     __end_of_StartReTxTimer:
 12983                           	opt stack 0
 12984                           tosu	equ	0xFFF
 12985                           tosh	equ	0xFFE
 12986                           tosl	equ	0xFFD
 12987                           pclath	equ	0xFFA
 12988                           tblptru	equ	0xFF8
 12989                           tblptrh	equ	0xFF7
 12990                           tblptrl	equ	0xFF6
 12991                           tablat	equ	0xFF5
 12992                           prodh	equ	0xFF4
 12993                           prodl	equ	0xFF3
 12994                           intcon	equ	0xFF2
 12995                           intcon2	equ	0xFF1
 12996                           intcon3	equ	0xFF0
 12997                           postinc0	equ	0xFEE
 12998                           wreg	equ	0xFE8
 12999                           postinc1	equ	0xFE6
 13000                           postdec1	equ	0xFE5
 13001                           plusw1	equ	0xFE3
 13002                           fsr1h	equ	0xFE2
 13003                           fsr1l	equ	0xFE1
 13004                           indf2	equ	0xFDF
 13005                           postinc2	equ	0xFDE
 13006                           postdec2	equ	0xFDD
 13007                           fsr2h	equ	0xFDA
 13008                           fsr2l	equ	0xFD9
 13009                           status	equ	0xFD8
 13010                           
 13011 ;; *************** function _SetReceptionNotOkState *****************
 13012 ;; Defined at:
 13013 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      void 
 13020 ;; Registers used:
 13021 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13022 ;; Tracked objects:
 13023 ;;		On entry : C/2
 13024 ;;		On exit  : D/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:   14
 13034 ;; This function calls:
 13035 ;;		_LORAWAN_EnterContinuousReceive
 13036 ;;		_RxDataDone
 13037 ;; This function is called by:
 13038 ;;		_LORAWAN_RxDone
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	text67
 13043  00630E                     __ptext67:
 13044                           	opt stack 0
 13045  00630E                     _SetReceptionNotOkState:
 13046                           	opt stack 12
 13047                           
 13048                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;incstack = 0
 13052  00630E  0102               	movlb	2	; () banked
 13053  006310  5102               	movf	(_loRa+2)& (0+255),w,b
 13054  006312  0B0F               	andlw	15
 13055  006314  0A05               	xorlw	5
 13056  006316  E006               	bz	l2307
 13057                           
 13058                           ; BSR set to: 2
 13059  006318  5102               	movf	(_loRa+2)& (0+255),w,b
 13060  00631A  0B0F               	andlw	15
 13061  00631C  0A03               	xorlw	3
 13062  00631E  E120               	bnz	l14039
 13063                           
 13064                           ; BSR set to: 2
 13065  006320  51F1               	movf	(_loRa+241)& (0+255),w,b
 13066  006322  E01E               	bz	l14039
 13067  006324                     l2307:
 13068                           
 13069                           ; BSR set to: 2
 13070                           ;lorawan.c: 2000: {
 13071                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13072  006324  9100               	bcf	_loRa& (0+255),0,b
 13073                           
 13074                           ; BSR set to: 2
 13075                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13076  006326  0EF0               	movlw	-16
 13077  006328  1702               	andwf	(_loRa+2)& (0+255),f,b
 13078                           
 13079                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13080  00632A  5112               	movf	(_loRa+18)& (0+255),w,b
 13081  00632C  E117               	bnz	l14037
 13082                           
 13083                           ; BSR set to: 2
 13084  00632E  0100               	movlb	0	; () banked
 13085  006330  51E8               	movf	_rxPayload& (0+255),w,b
 13086  006332  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 13087  006334  E013               	bz	l14037
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;lorawan.c: 2005: {
 13091                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13092  006336  0102               	movlb	2	; () banked
 13093  006338  9B00               	bcf	_loRa& (0+255),5,b
 13094                           
 13095                           ; BSR set to: 2
 13096                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13097  00633A  0E00               	movlw	0
 13098  00633C  0100               	movlb	0	; () banked
 13099  00633E  6B64               	clrf	RxDataDone@pData& (0+255),b
 13100  006340  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 13101  006342  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 13102  006344  6B67               	clrf	RxDataDone@status& (0+255),b
 13103  006346  D801               	call	u15728
 13104  006348  D009               	goto	l14037
 13105  00634A                     u15728:
 13106  00634A  0005               	push	
 13107  00634C  6EFA               	movwf	pclath,c
 13108  00634E  51E8               	movf	_rxPayload& (0+255),w,b
 13109  006350  6EFD               	movwf	tosl,c
 13110  006352  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 13111  006354  6EFE               	movwf	tosh,c
 13112  006356  6AFF               	clrf	tosu,c
 13113  006358  50FA               	movf	pclath,w,c
 13114  00635A  0012               	return		;indir
 13115  00635C                     l14037:
 13116                           
 13117                           ;lorawan.c: 2008: }
 13118                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13119  00635C  0102               	movlb	2	; () banked
 13120  00635E  9303               	bcf	(_loRa+3)& (0+255),1,b
 13121  006360                     l14039:
 13122                           
 13123                           ; BSR set to: 2
 13124                           ;lorawan.c: 2010: }
 13125                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13126  006360  0E02               	movlw	2
 13127  006362  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13128  006364  A4D8               	btfss	status,2,c
 13129  006366  0012               	return	
 13130                           
 13131                           ; BSR set to: 2
 13132                           ;lorawan.c: 2013: {
 13133                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13134  006368  5102               	movf	(_loRa+2)& (0+255),w,b
 13135  00636A  0BF0               	andlw	-16
 13136  00636C  0909               	iorlw	9
 13137  00636E  6F02               	movwf	(_loRa+2)& (0+255),b
 13138                           
 13139                           ; BSR set to: 2
 13140                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13141  006370  EF84  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13142  006374                     __end_of_SetReceptionNotOkState:
 13143                           	opt stack 0
 13144                           tosu	equ	0xFFF
 13145                           tosh	equ	0xFFE
 13146                           tosl	equ	0xFFD
 13147                           pclath	equ	0xFFA
 13148                           tblptru	equ	0xFF8
 13149                           tblptrh	equ	0xFF7
 13150                           tblptrl	equ	0xFF6
 13151                           tablat	equ	0xFF5
 13152                           prodh	equ	0xFF4
 13153                           prodl	equ	0xFF3
 13154                           intcon	equ	0xFF2
 13155                           intcon2	equ	0xFF1
 13156                           intcon3	equ	0xFF0
 13157                           postinc0	equ	0xFEE
 13158                           wreg	equ	0xFE8
 13159                           postinc1	equ	0xFE6
 13160                           postdec1	equ	0xFE5
 13161                           plusw1	equ	0xFE3
 13162                           fsr1h	equ	0xFE2
 13163                           fsr1l	equ	0xFE1
 13164                           indf2	equ	0xFDF
 13165                           postinc2	equ	0xFDE
 13166                           postdec2	equ	0xFDD
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function _SetJoinFailState *****************
 13172 ;; Defined at:
 13173 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 13182 ;; Tracked objects:
 13183 ;;		On entry : F/2
 13184 ;;		On exit  : F/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; Hardware stack levels required when called:    8
 13194 ;; This function calls:
 13195 ;;		_RxJoinResponse
 13196 ;; This function is called by:
 13197 ;;		_LORAWAN_RxTimeout
 13198 ;;		_LORAWAN_RxDone
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text68
 13203  0072CC                     __ptext68:
 13204                           	opt stack 0
 13205  0072CC                     _SetJoinFailState:
 13206                           	opt stack 18
 13207                           
 13208                           ; BSR set to: 2
 13209                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13210                           
 13211                           ;incstack = 0
 13212  0072CC  9902               	bcf	(_loRa+2)& (0+255),4,b
 13213                           
 13214                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13215  0072CE  9500               	bcf	_loRa& (0+255),2,b
 13216                           
 13217                           ; BSR set to: 2
 13218                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13219  0072D0  0EF0               	movlw	-16
 13220  0072D2  1702               	andwf	(_loRa+2)& (0+255),f,b
 13221                           
 13222                           ; BSR set to: 2
 13223                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13224  0072D4  0100               	movlb	0	; () banked
 13225  0072D6  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13226  0072D8  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
 13227  0072DA  B4D8               	btfsc	status,2,c
 13228  0072DC  0012               	return	
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;lorawan.c: 1110: {
 13232                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13233  0072DE  0005               	push	
 13234  0072E0  6EFA               	movwf	pclath,c
 13235  0072E2  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13236  0072E4  6EFD               	movwf	tosl,c
 13237  0072E6  51EB               	movf	(_rxPayload+3)& (0+255),w,b
 13238  0072E8  6EFE               	movwf	tosh,c
 13239  0072EA  6AFF               	clrf	tosu,c
 13240  0072EC  50FA               	movf	pclath,w,c
 13241  0072EE  0C00               	retlw	0	;indir
 13242  0072F0                     __end_of_SetJoinFailState:
 13243                           	opt stack 0
 13244                           tosu	equ	0xFFF
 13245                           tosh	equ	0xFFE
 13246                           tosl	equ	0xFFD
 13247                           pclath	equ	0xFFA
 13248                           tblptru	equ	0xFF8
 13249                           tblptrh	equ	0xFF7
 13250                           tblptrl	equ	0xFF6
 13251                           tablat	equ	0xFF5
 13252                           prodh	equ	0xFF4
 13253                           prodl	equ	0xFF3
 13254                           intcon	equ	0xFF2
 13255                           intcon2	equ	0xFF1
 13256                           intcon3	equ	0xFF0
 13257                           postinc0	equ	0xFEE
 13258                           wreg	equ	0xFE8
 13259                           postinc1	equ	0xFE6
 13260                           postdec1	equ	0xFE5
 13261                           plusw1	equ	0xFE3
 13262                           fsr1h	equ	0xFE2
 13263                           fsr1l	equ	0xFE1
 13264                           indf2	equ	0xFDF
 13265                           postinc2	equ	0xFDE
 13266                           postdec2	equ	0xFDD
 13267                           fsr2h	equ	0xFDA
 13268                           fsr2l	equ	0xFD9
 13269                           status	equ	0xFD8
 13270                           
 13271 ;; *************** function _RxJoinResponse *****************
 13272 ;; Defined at:
 13273 ;;		line 112 in file "main.c"
 13274 ;; Parameters:    Size  Location     Type
 13275 ;;  status          1    wreg     unsigned char 
 13276 ;; Auto vars:     Size  Location     Type
 13277 ;;  status          1    0[COMRAM] unsigned char 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  1    wreg      void 
 13280 ;; Registers used:
 13281 ;;		wreg
 13282 ;; Tracked objects:
 13283 ;;		On entry : F/0
 13284 ;;		On exit  : F/0
 13285 ;;		Unchanged: F/0
 13286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;Total ram usage:        0 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:    7
 13294 ;; This function calls:
 13295 ;;		Nothing
 13296 ;; This function is called by:
 13297 ;;		_main
 13298 ;;		_SetJoinFailState
 13299 ;;		_UpdateJoinSuccessState
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text69
 13304  0078B6                     __ptext69:
 13305                           	opt stack 0
 13306  0078B6                     _RxJoinResponse:
 13307                           	opt stack 20
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;main.c: 114: PORTCbits.RC5 = 0;
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;incstack = 0
 13314  0078B6  9A82               	bcf	3970,5,c	;volatile
 13315                           
 13316                           ; BSR set to: 0
 13317  0078B8  0012               	return		;funcret
 13318  0078BA                     __end_of_RxJoinResponse:
 13319                           	opt stack 0
 13320                           tosu	equ	0xFFF
 13321                           tosh	equ	0xFFE
 13322                           tosl	equ	0xFFD
 13323                           pclath	equ	0xFFA
 13324                           tblptru	equ	0xFF8
 13325                           tblptrh	equ	0xFF7
 13326                           tblptrl	equ	0xFF6
 13327                           tablat	equ	0xFF5
 13328                           prodh	equ	0xFF4
 13329                           prodl	equ	0xFF3
 13330                           intcon	equ	0xFF2
 13331                           intcon2	equ	0xFF1
 13332                           intcon3	equ	0xFF0
 13333                           postinc0	equ	0xFEE
 13334                           wreg	equ	0xFE8
 13335                           postinc1	equ	0xFE6
 13336                           postdec1	equ	0xFE5
 13337                           plusw1	equ	0xFE3
 13338                           fsr1h	equ	0xFE2
 13339                           fsr1l	equ	0xFE1
 13340                           indf2	equ	0xFDF
 13341                           postinc2	equ	0xFDE
 13342                           postdec2	equ	0xFDD
 13343                           fsr2h	equ	0xFDA
 13344                           fsr2l	equ	0xFD9
 13345                           status	equ	0xFD8
 13346                           
 13347 ;; *************** function _MacExecuteCommands *****************
 13348 ;; Defined at:
 13349 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13352 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13353 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13356 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13357 ;;  done            1   31[BANK0 ] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  2   26[BANK0 ] PTR unsigned char 
 13360 ;; Registers used:
 13361 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : F/0
 13364 ;;		On exit  : F/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13367 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13370 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;Total ram usage:        8 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:   11
 13374 ;; This function calls:
 13375 ;;		_ExecuteDevStatus
 13376 ;;		_ExecuteDutyCycle
 13377 ;;		_ExecuteLinkAdr
 13378 ;;		_ExecuteLinkCheck
 13379 ;;		_ExecuteNewChannel
 13380 ;;		_ExecuteRxParamSetupReq
 13381 ;;		_ExecuteRxTimingSetup
 13382 ;; This function is called by:
 13383 ;;		_LORAWAN_RxDone
 13384 ;; This function uses a non-reentrant model
 13385 ;;
 13386                           
 13387                           	psect	text70
 13388  002DB6                     __ptext70:
 13389                           	opt stack 0
 13390  002DB6                     _MacExecuteCommands:
 13391                           	opt stack 15
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;lorawan.c: 1577: bool done = 0;
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;incstack = 0
 13398  002DB6  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;lorawan.c: 1578: uint8_t *ptr;
 13402                           ;lorawan.c: 1579: ptr = buffer;
 13403  002DB8  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13404  002DBC  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13405                           
 13406                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13407  002DC0  D0DE               	goto	l14101
 13408  002DC2                     l14065:
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;lorawan.c: 1581: {
 13412                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13413  002DC2  0102               	movlb	2	; () banked
 13414  002DC4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13415  002DC6  0D02               	mullw	2
 13416  002DC8  0EA9               	movlw	low (_loRa+169)
 13417  002DCA  24F3               	addwf	prodl,w,c
 13418  002DCC  6ED9               	movwf	fsr2l,c
 13419  002DCE  0E02               	movlw	high (_loRa+169)
 13420  002DD0  20F4               	addwfc	prodh,w,c
 13421  002DD2  6EDA               	movwf	fsr2h,c
 13422  002DD4  90DF               	bcf	indf2,0,c
 13423                           
 13424                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13425  002DD6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13426  002DD8  0D02               	mullw	2
 13427  002DDA  0EA9               	movlw	low (_loRa+169)
 13428  002DDC  24F3               	addwf	prodl,w,c
 13429  002DDE  6ED9               	movwf	fsr2l,c
 13430  002DE0  0E02               	movlw	high (_loRa+169)
 13431  002DE2  20F4               	addwfc	prodh,w,c
 13432  002DE4  6EDA               	movwf	fsr2h,c
 13433  002DE6  92DF               	bcf	indf2,1,c
 13434                           
 13435                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13436  002DE8  51A7               	movf	(_loRa+167)& (0+255),w,b
 13437  002DEA  0D02               	mullw	2
 13438  002DEC  0EA9               	movlw	low (_loRa+169)
 13439  002DEE  24F3               	addwf	prodl,w,c
 13440  002DF0  6ED9               	movwf	fsr2l,c
 13441  002DF2  0E02               	movlw	high (_loRa+169)
 13442  002DF4  20F4               	addwfc	prodh,w,c
 13443  002DF6  6EDA               	movwf	fsr2h,c
 13444  002DF8  94DF               	bcf	indf2,2,c
 13445                           
 13446                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13447  002DFA  51A7               	movf	(_loRa+167)& (0+255),w,b
 13448  002DFC  0D02               	mullw	2
 13449  002DFE  0EA9               	movlw	low (_loRa+169)
 13450  002E00  24F3               	addwf	prodl,w,c
 13451  002E02  6ED9               	movwf	fsr2l,c
 13452  002E04  0E02               	movlw	high (_loRa+169)
 13453  002E06  20F4               	addwfc	prodh,w,c
 13454  002E08  6EDA               	movwf	fsr2h,c
 13455  002E0A  96DF               	bcf	indf2,3,c
 13456                           
 13457                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13458  002E0C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13459  002E0E  0D02               	mullw	2
 13460  002E10  0EA9               	movlw	low (_loRa+169)
 13461  002E12  24F3               	addwf	prodl,w,c
 13462  002E14  6ED9               	movwf	fsr2l,c
 13463  002E16  0E02               	movlw	high (_loRa+169)
 13464  002E18  20F4               	addwfc	prodh,w,c
 13465  002E1A  6EDA               	movwf	fsr2h,c
 13466  002E1C  98DF               	bcf	indf2,4,c
 13467                           
 13468                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13469  002E1E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13470  002E20  0D02               	mullw	2
 13471  002E22  0EA9               	movlw	low (_loRa+169)
 13472  002E24  24F3               	addwf	prodl,w,c
 13473  002E26  6ED9               	movwf	fsr2l,c
 13474  002E28  0E02               	movlw	high (_loRa+169)
 13475  002E2A  20F4               	addwfc	prodh,w,c
 13476  002E2C  6EDA               	movwf	fsr2h,c
 13477  002E2E  9ADF               	bcf	indf2,5,c
 13478                           
 13479                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13480  002E30  51A7               	movf	(_loRa+167)& (0+255),w,b
 13481  002E32  0D02               	mullw	2
 13482  002E34  0EA9               	movlw	low (_loRa+169)
 13483  002E36  24F3               	addwf	prodl,w,c
 13484  002E38  6ED9               	movwf	fsr2l,c
 13485  002E3A  0E02               	movlw	high (_loRa+169)
 13486  002E3C  20F4               	addwfc	prodh,w,c
 13487  002E3E  6EDA               	movwf	fsr2h,c
 13488  002E40  9CDF               	bcf	indf2,6,c
 13489                           
 13490                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13491  002E42  51A7               	movf	(_loRa+167)& (0+255),w,b
 13492  002E44  0D02               	mullw	2
 13493  002E46  0EA9               	movlw	low (_loRa+169)
 13494  002E48  24F3               	addwf	prodl,w,c
 13495  002E4A  6ED9               	movwf	fsr2l,c
 13496  002E4C  0E02               	movlw	high (_loRa+169)
 13497  002E4E  20F4               	addwfc	prodh,w,c
 13498  002E50  6EDA               	movwf	fsr2h,c
 13499  002E52  9EDF               	bcf	indf2,7,c
 13500                           
 13501                           ; BSR set to: 2
 13502                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13503  002E54  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13504  002E58  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13505  002E5C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13506  002E5E  0D02               	mullw	2
 13507  002E60  0EA8               	movlw	low (_loRa+168)
 13508  002E62  24F3               	addwf	prodl,w,c
 13509  002E64  6EE9               	movwf	fsr0l,c
 13510  002E66  0E02               	movlw	high (_loRa+168)
 13511  002E68  20F4               	addwfc	prodh,w,c
 13512  002E6A  6EEA               	movwf	fsr0h,c
 13513  002E6C  CFDF FFEF          	movff	indf2,indf0
 13514                           
 13515                           ;lorawan.c: 1595: switch (*ptr ++)
 13516  002E70  D060               	goto	l14093
 13517  002E72                     l14069:
 13518                           
 13519                           ; BSR set to: 0
 13520                           ;lorawan.c: 1598: {
 13521                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13522  002E72  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13523  002E76  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13524  002E7A  EC0F  F038         	call	_ExecuteLinkCheck
 13525  002E7E  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13526  002E82  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13527  002E86                     l14071:
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13531  002E86  0102               	movlb	2	; () banked
 13532  002E88  51A7               	movf	(_loRa+167)& (0+255),w,b
 13533  002E8A  0D02               	mullw	2
 13534  002E8C  0EA8               	movlw	low (_loRa+168)
 13535  002E8E  24F3               	addwf	prodl,w,c
 13536  002E90  6ED9               	movwf	fsr2l,c
 13537  002E92  0E02               	movlw	high (_loRa+168)
 13538  002E94  20F4               	addwfc	prodh,w,c
 13539  002E96  6EDA               	movwf	fsr2h,c
 13540  002E98  68DF               	setf	indf2,c
 13541                           
 13542                           ;lorawan.c: 1602: } break;
 13543  002E9A  D062               	goto	l14095
 13544  002E9C                     l14073:
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;lorawan.c: 1605: {
 13548                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13549  002E9C  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13550  002EA0  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13551  002EA4  EC8F  F01A         	call	_ExecuteLinkAdr	;wreg free
 13552  002EA8  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13553  002EAC  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13554                           
 13555                           ;lorawan.c: 1607: } break;
 13556  002EB0  D057               	goto	l14095
 13557  002EB2                     l14075:
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;lorawan.c: 1610: {
 13561                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13562  002EB2  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13563  002EB6  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13564  002EBA  ECA6  F034         	call	_ExecuteDutyCycle	;wreg free
 13565  002EBE  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13566  002EC2  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13567                           
 13568                           ;lorawan.c: 1612: } break;
 13569  002EC6  D04C               	goto	l14095
 13570  002EC8                     l14077:
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;lorawan.c: 1615: {
 13574                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13575  002EC8  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13576  002ECC  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13577  002ED0  EC45  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13578  002ED4  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13579  002ED8  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13580                           
 13581                           ;lorawan.c: 1617: } break;
 13582  002EDC  D041               	goto	l14095
 13583  002EDE                     l14079:
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;lorawan.c: 1620: {
 13587                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13588  002EDE  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13589  002EE2  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13590  002EE6  ECEE  F03B         	call	_ExecuteDevStatus	;wreg free
 13591  002EEA  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13592  002EEE  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13593                           
 13594                           ;lorawan.c: 1622: } break;
 13595  002EF2  D036               	goto	l14095
 13596  002EF4                     l14081:
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;lorawan.c: 1625: {
 13600                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13601  002EF4  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13602  002EF8  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13603  002EFC  ECAE  F019         	call	_ExecuteNewChannel	;wreg free
 13604  002F00  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13605  002F04  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13606                           
 13607                           ;lorawan.c: 1628: } break;
 13608  002F08  D02B               	goto	l14095
 13609  002F0A                     l14083:
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;lorawan.c: 1631: {
 13613                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13614  002F0A  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13615  002F0E  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13616  002F12  EC78  F039         	call	_ExecuteRxTimingSetup	;wreg free
 13617  002F16  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13618  002F1A  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13619                           
 13620                           ;lorawan.c: 1633: } break;
 13621  002F1E  D020               	goto	l14095
 13622  002F20                     l14085:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;lorawan.c: 1636: {
 13626                           ;lorawan.c: 1637: done = 1;
 13627  002F20  0E01               	movlw	1
 13628  002F22  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13632  002F24  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13633  002F26  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13634  002F28  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13635  002F2A  0E00               	movlw	0
 13636  002F2C  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13637  002F2E  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13638  002F30  D7AA               	goto	l14071
 13639  002F32                     l14093:
 13640                           
 13641                           ; BSR set to: 2
 13642  002F32  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13643  002F36  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13644  002F3A  0100               	movlb	0	; () banked
 13645  002F3C  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13646  002F3E  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13647  002F40  50DF               	movf	indf2,w,c
 13648                           
 13649                           ; Switch size 1, requested type "speed"
 13650                           ; Number of cases is 7, Range of values is 2 to 8
 13651                           ; switch strategies available:
 13652                           ; Name         Instructions Cycles
 13653                           ; simple_byte           22    12 (average)
 13654                           ;	Chosen strategy is simple_byte
 13655  002F42  0A02               	xorlw	2	; case 2
 13656  002F44  E096               	bz	l14069
 13657  002F46  0A01               	xorlw	1	; case 3
 13658  002F48  E0A9               	bz	l14073
 13659  002F4A  0A07               	xorlw	7	; case 4
 13660  002F4C  E0B2               	bz	l14075
 13661  002F4E  0A01               	xorlw	1	; case 5
 13662  002F50  E0BB               	bz	l14077
 13663  002F52  0A03               	xorlw	3	; case 6
 13664  002F54  E0C4               	bz	l14079
 13665  002F56  0A01               	xorlw	1	; case 7
 13666  002F58  E0CD               	bz	l14081
 13667  002F5A  0A0F               	xorlw	15	; case 8
 13668  002F5C  E0D6               	bz	l14083
 13669  002F5E  D7E0               	goto	l14085
 13670  002F60                     l14095:
 13671                           
 13672                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13673                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13674  002F60  0102               	movlb	2	; () banked
 13675  002F62  51A7               	movf	(_loRa+167)& (0+255),w,b
 13676  002F64  0D02               	mullw	2
 13677  002F66  0EA8               	movlw	low (_loRa+168)
 13678  002F68  24F3               	addwf	prodl,w,c
 13679  002F6A  6ED9               	movwf	fsr2l,c
 13680  002F6C  0E02               	movlw	high (_loRa+168)
 13681  002F6E  20F4               	addwfc	prodh,w,c
 13682  002F70  6EDA               	movwf	fsr2h,c
 13683  002F72  28DE               	incf	postinc2,w,c
 13684  002F74  E004               	bz	l14101
 13685                           
 13686                           ; BSR set to: 2
 13687  002F76  0E10               	movlw	16
 13688  002F78  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13689  002F7A  D001               	goto	l14101
 13690                           
 13691                           ; BSR set to: 2
 13692                           ;lorawan.c: 1645: {
 13693                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13694  002F7C  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13695  002F7E                     l14101:
 13696  002F7E  0100               	movlb	0	; () banked
 13697  002F80  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13698  002F82  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13699  002F84  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13700  002F86  0E00               	movlw	0
 13701  002F88  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13702  002F8A  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13703  002F8C  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13704  002F8E  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13705  002F90  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13706  002F92  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13707  002F94  E203               	bc	l14105
 13708                           
 13709                           ; BSR set to: 0
 13710  002F96  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13711  002F98  E101 D713          	bz	l14065
 13712  002F9C                     l14105:
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;lorawan.c: 1647: }
 13716                           ;lorawan.c: 1648: }
 13717                           ;lorawan.c: 1649: return ptr;
 13718  002F9C  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13719  002FA0  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13720                           
 13721                           ; BSR set to: 0
 13722  002FA4  0012               	return		;funcret
 13723  002FA6                     __end_of_MacExecuteCommands:
 13724                           	opt stack 0
 13725                           tosu	equ	0xFFF
 13726                           tosh	equ	0xFFE
 13727                           tosl	equ	0xFFD
 13728                           pclath	equ	0xFFA
 13729                           tblptru	equ	0xFF8
 13730                           tblptrh	equ	0xFF7
 13731                           tblptrl	equ	0xFF6
 13732                           tablat	equ	0xFF5
 13733                           prodh	equ	0xFF4
 13734                           prodl	equ	0xFF3
 13735                           intcon	equ	0xFF2
 13736                           intcon2	equ	0xFF1
 13737                           intcon3	equ	0xFF0
 13738                           indf0	equ	0xFEF
 13739                           postinc0	equ	0xFEE
 13740                           fsr0h	equ	0xFEA
 13741                           fsr0l	equ	0xFE9
 13742                           wreg	equ	0xFE8
 13743                           postinc1	equ	0xFE6
 13744                           postdec1	equ	0xFE5
 13745                           plusw1	equ	0xFE3
 13746                           fsr1h	equ	0xFE2
 13747                           fsr1l	equ	0xFE1
 13748                           indf2	equ	0xFDF
 13749                           postinc2	equ	0xFDE
 13750                           postdec2	equ	0xFDD
 13751                           fsr2h	equ	0xFDA
 13752                           fsr2l	equ	0xFD9
 13753                           status	equ	0xFD8
 13754                           
 13755 ;; *************** function _ExecuteRxTimingSetup *****************
 13756 ;; Defined at:
 13757 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13758 ;; Parameters:    Size  Location     Type
 13759 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13760 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;  delay           1   11[BANK0 ] unsigned char 
 13763 ;; Return value:  Size  Location     Type
 13764 ;;                  2    9[BANK0 ] PTR unsigned char 
 13765 ;; Registers used:
 13766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13767 ;; Tracked objects:
 13768 ;;		On entry : F/0
 13769 ;;		On exit  : F/2
 13770 ;;		Unchanged: 0/0
 13771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;Total ram usage:        3 bytes
 13777 ;; Hardware stack levels used:    1
 13778 ;; Hardware stack levels required when called:    8
 13779 ;; This function calls:
 13780 ;;		_UpdateReceiveDelays
 13781 ;; This function is called by:
 13782 ;;		_MacExecuteCommands
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text71
 13787  0072F0                     __ptext71:
 13788                           	opt stack 0
 13789  0072F0                     _ExecuteRxTimingSetup:
 13790                           	opt stack 17
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;lorawan.c: 1661: uint8_t delay;
 13794                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;incstack = 0
 13798  0072F0  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13799  0072F4  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13800  0072F8  50DF               	movf	indf2,w,c
 13801  0072FA  0B0F               	andlw	15
 13802  0072FC  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;lorawan.c: 1664: ptr++;
 13806  0072FE  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13807  007300  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13811  007302  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13812  007304  EC68  F035         	call	_UpdateReceiveDelays
 13813                           
 13814                           ; BSR set to: 2
 13815                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13816  007308  8104               	bsf	(_loRa+4)& (0+255),0,b
 13817                           
 13818                           ; BSR set to: 2
 13819                           ;lorawan.c: 1669: return ptr;
 13820  00730A  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13821  00730E  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13822                           
 13823                           ; BSR set to: 2
 13824  007312  0012               	return		;funcret
 13825  007314                     __end_of_ExecuteRxTimingSetup:
 13826                           	opt stack 0
 13827                           tosu	equ	0xFFF
 13828                           tosh	equ	0xFFE
 13829                           tosl	equ	0xFFD
 13830                           pclath	equ	0xFFA
 13831                           tblptru	equ	0xFF8
 13832                           tblptrh	equ	0xFF7
 13833                           tblptrl	equ	0xFF6
 13834                           tablat	equ	0xFF5
 13835                           prodh	equ	0xFF4
 13836                           prodl	equ	0xFF3
 13837                           intcon	equ	0xFF2
 13838                           intcon2	equ	0xFF1
 13839                           intcon3	equ	0xFF0
 13840                           indf0	equ	0xFEF
 13841                           postinc0	equ	0xFEE
 13842                           fsr0h	equ	0xFEA
 13843                           fsr0l	equ	0xFE9
 13844                           wreg	equ	0xFE8
 13845                           postinc1	equ	0xFE6
 13846                           postdec1	equ	0xFE5
 13847                           plusw1	equ	0xFE3
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           postdec2	equ	0xFDD
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function _UpdateReceiveDelays *****************
 13858 ;; Defined at:
 13859 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  delay           1    wreg     unsigned char 
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;  delay           1    8[BANK0 ] unsigned char 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, status,2, status,0, prodl, prodh
 13868 ;; Tracked objects:
 13869 ;;		On entry : E/1
 13870 ;;		On exit  : F/2
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13876 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;Total ram usage:        5 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:    7
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_LORAWAN_RxDone
 13884 ;;		_ExecuteRxTimingSetup
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           	psect	text72
 13889  006AD0                     __ptext72:
 13890                           	opt stack 0
 13891  006AD0                     _UpdateReceiveDelays:
 13892                           	opt stack 19
 13893                           
 13894                           ; BSR set to: 2
 13895                           ;incstack = 0
 13896                           ;UpdateReceiveDelays@delay stored from wreg
 13897  006AD0  0100               	movlb	0	; () banked
 13898  006AD2  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13899                           
 13900                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13901  006AD4  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13902  006AD6  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13903  006AD8  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13904  006ADA  0EE8               	movlw	232
 13905  006ADC  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13906  006ADE  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13907  006AE2  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13908  006AE6  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13909  006AE8  50F3               	movf	prodl,w,c
 13910  006AEA  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13911  006AEC  0E03               	movlw	3
 13912  006AEE  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13913  006AF0  50F3               	movf	prodl,w,c
 13914  006AF2  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13915  006AF4  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13916  006AF8  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;lorawan.c: 2029: if (delay == 0)
 13920  006AFC  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13921  006AFE  E105               	bnz	l13151
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;lorawan.c: 2030: {
 13925                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13926  006B00  0E03               	movlw	3
 13927  006B02  0102               	movlb	2	; () banked
 13928  006B04  6F95               	movwf	(_loRa+149)& (0+255),b
 13929  006B06  0EE8               	movlw	232
 13930  006B08  6F94               	movwf	(_loRa+148)& (0+255),b
 13931  006B0A                     l13151:
 13932                           
 13933                           ;lorawan.c: 2032: }
 13934                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13935  006B0A  0EE8               	movlw	232
 13936  006B0C  0102               	movlb	2	; () banked
 13937  006B0E  2594               	addwf	(_loRa+148)& (0+255),w,b
 13938  006B10  6F96               	movwf	(_loRa+150)& (0+255),b
 13939  006B12  0E03               	movlw	3
 13940  006B14  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13941  006B16  6F97               	movwf	(_loRa+151)& (0+255),b
 13942                           
 13943                           ; BSR set to: 2
 13944  006B18  0012               	return		;funcret
 13945  006B1A                     __end_of_UpdateReceiveDelays:
 13946                           	opt stack 0
 13947                           tosu	equ	0xFFF
 13948                           tosh	equ	0xFFE
 13949                           tosl	equ	0xFFD
 13950                           pclath	equ	0xFFA
 13951                           tblptru	equ	0xFF8
 13952                           tblptrh	equ	0xFF7
 13953                           tblptrl	equ	0xFF6
 13954                           tablat	equ	0xFF5
 13955                           prodh	equ	0xFF4
 13956                           prodl	equ	0xFF3
 13957                           intcon	equ	0xFF2
 13958                           intcon2	equ	0xFF1
 13959                           intcon3	equ	0xFF0
 13960                           indf0	equ	0xFEF
 13961                           postinc0	equ	0xFEE
 13962                           fsr0h	equ	0xFEA
 13963                           fsr0l	equ	0xFE9
 13964                           wreg	equ	0xFE8
 13965                           postinc1	equ	0xFE6
 13966                           postdec1	equ	0xFE5
 13967                           plusw1	equ	0xFE3
 13968                           fsr1h	equ	0xFE2
 13969                           fsr1l	equ	0xFE1
 13970                           indf2	equ	0xFDF
 13971                           postinc2	equ	0xFDE
 13972                           postdec2	equ	0xFDD
 13973                           fsr2h	equ	0xFDA
 13974                           fsr2l	equ	0xFD9
 13975                           status	equ	0xFD8
 13976                           
 13977 ;; *************** function _ExecuteRxParamSetupReq *****************
 13978 ;; Defined at:
 13979 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 13982 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;  frequency       4   18[BANK0 ] unsigned long 
 13985 ;;  dlSettings      1   22[BANK0 ] struct .
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  2   16[BANK0 ] PTR unsigned char 
 13988 ;; Registers used:
 13989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : F/0
 13992 ;;		On exit  : F/2
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;Total ram usage:        7 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    8
 14002 ;; This function calls:
 14003 ;;		_UpdateReceiveWindow2Parameters
 14004 ;;		_ValidateDataRate
 14005 ;;		_ValidateFrequency
 14006 ;;		_ValidateRxOffset
 14007 ;;		___lmul
 14008 ;; This function is called by:
 14009 ;;		_MacExecuteCommands
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           	psect	text73
 14014  00428A                     __ptext73:
 14015                           	opt stack 0
 14016  00428A                     _ExecuteRxParamSetupReq:
 14017                           	opt stack 17
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14021                           
 14022                           ; BSR set to: 0
 14023                           
 14024                           ; BSR set to: 2
 14025                           ;incstack = 0
 14026  00428A  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14027  00428E  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14028  004292  50DF               	movf	indf2,w,c
 14029  004294  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14030                           
 14031                           ; BSR set to: 0
 14032  004296  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14033  004298  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14037  00429A  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14038  00429E  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14039  0042A2  0EFF               	movlw	255
 14040  0042A4  14DE               	andwf	postinc2,w,c
 14041  0042A6  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14042  0042A8  0EFF               	movlw	255
 14043  0042AA  14DE               	andwf	postinc2,w,c
 14044  0042AC  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14045  0042AE  0EFF               	movlw	255
 14046  0042B0  14DE               	andwf	postinc2,w,c
 14047  0042B2  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14048  0042B4  0E00               	movlw	0
 14049  0042B6  14DE               	andwf	postinc2,w,c
 14050  0042B8  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14054  0042BA  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14055  0042BE  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14056  0042C2  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14057  0042C6  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14058  0042CA  0E64               	movlw	100
 14059  0042CC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14060  0042CE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14061  0042D0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14062  0042D2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14063  0042D4  EC8D  F02E         	call	___lmul	;wreg free
 14064  0042D8  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14065  0042DC  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14066  0042E0  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14067  0042E4  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14071  0042E8  0E03               	movlw	3
 14072  0042EA  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14073  0042EC  0E00               	movlw	0
 14074  0042EE  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14078  0042F0  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14079  0042F4  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14080  0042F8  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14081  0042FC  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14082  004300  ECA5  F033         	call	_ValidateFrequency	;wreg free
 14083  004304  0900               	iorlw	0
 14084  004306  E10A               	bnz	l13585
 14085                           
 14086                           ; BSR set to: 0
 14087                           ;lorawan_eu.c: 754: {
 14088                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14089  004308  0102               	movlb	2	; () banked
 14090  00430A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14091  00430C  0D02               	mullw	2
 14092  00430E  0EA9               	movlw	low (_loRa+169)
 14093  004310  24F3               	addwf	prodl,w,c
 14094  004312  6ED9               	movwf	fsr2l,c
 14095  004314  0E02               	movlw	high (_loRa+169)
 14096  004316  20F4               	addwfc	prodh,w,c
 14097  004318  6EDA               	movwf	fsr2h,c
 14098  00431A  86DF               	bsf	indf2,3,c
 14099  00431C                     l13585:
 14100                           
 14101                           ;lorawan_eu.c: 756: }
 14102                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14103  00431C  0100               	movlb	0	; () banked
 14104  00431E  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14105  004320  0B0F               	andlw	15
 14106  004322  EC48  F03B         	call	_ValidateDataRate
 14107  004326  0900               	iorlw	0
 14108  004328  E10A               	bnz	l13589
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;lorawan_eu.c: 759: {
 14112                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14113  00432A  0102               	movlb	2	; () banked
 14114  00432C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14115  00432E  0D02               	mullw	2
 14116  004330  0EA9               	movlw	low (_loRa+169)
 14117  004332  24F3               	addwf	prodl,w,c
 14118  004334  6ED9               	movwf	fsr2l,c
 14119  004336  0E02               	movlw	high (_loRa+169)
 14120  004338  20F4               	addwfc	prodh,w,c
 14121  00433A  6EDA               	movwf	fsr2h,c
 14122  00433C  88DF               	bsf	indf2,4,c
 14123  00433E                     l13589:
 14124                           
 14125                           ;lorawan_eu.c: 761: }
 14126                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14127  00433E  0100               	movlb	0	; () banked
 14128  004340  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14129  004342  0B07               	andlw	7
 14130  004344  EC3E  F03B         	call	_ValidateRxOffset
 14131  004348  0900               	iorlw	0
 14132  00434A  E10A               	bnz	l1127
 14133                           
 14134                           ; BSR set to: 0
 14135                           ;lorawan_eu.c: 764: {
 14136                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14137  00434C  0102               	movlb	2	; () banked
 14138  00434E  51A7               	movf	(_loRa+167)& (0+255),w,b
 14139  004350  0D02               	mullw	2
 14140  004352  0EA9               	movlw	low (_loRa+169)
 14141  004354  24F3               	addwf	prodl,w,c
 14142  004356  6ED9               	movwf	fsr2l,c
 14143  004358  0E02               	movlw	high (_loRa+169)
 14144  00435A  20F4               	addwfc	prodh,w,c
 14145  00435C  6EDA               	movwf	fsr2h,c
 14146  00435E  8ADF               	bsf	indf2,5,c
 14147  004360                     l1127:
 14148                           
 14149                           ;lorawan_eu.c: 766: }
 14150                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14151  004360  0102               	movlb	2	; () banked
 14152  004362  51A7               	movf	(_loRa+167)& (0+255),w,b
 14153  004364  0D02               	mullw	2
 14154  004366  0EA9               	movlw	low (_loRa+169)
 14155  004368  24F3               	addwf	prodl,w,c
 14156  00436A  6ED9               	movwf	fsr2l,c
 14157  00436C  0E02               	movlw	high (_loRa+169)
 14158  00436E  20F4               	addwfc	prodh,w,c
 14159  004370  6EDA               	movwf	fsr2h,c
 14160  004372  A8DF               	btfss	indf2,4,c
 14161  004374  D029               	goto	l13603
 14162                           
 14163                           ; BSR set to: 2
 14164  004376  51A7               	movf	(_loRa+167)& (0+255),w,b
 14165  004378  0D02               	mullw	2
 14166  00437A  0EA9               	movlw	low (_loRa+169)
 14167  00437C  24F3               	addwf	prodl,w,c
 14168  00437E  6ED9               	movwf	fsr2l,c
 14169  004380  0E02               	movlw	high (_loRa+169)
 14170  004382  20F4               	addwfc	prodh,w,c
 14171  004384  6EDA               	movwf	fsr2h,c
 14172  004386  A6DF               	btfss	indf2,3,c
 14173  004388  D01F               	goto	l13603
 14174                           
 14175                           ; BSR set to: 2
 14176  00438A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14177  00438C  0D02               	mullw	2
 14178  00438E  0EA9               	movlw	low (_loRa+169)
 14179  004390  24F3               	addwf	prodl,w,c
 14180  004392  6ED9               	movwf	fsr2l,c
 14181  004394  0E02               	movlw	high (_loRa+169)
 14182  004396  20F4               	addwfc	prodh,w,c
 14183  004398  6EDA               	movwf	fsr2h,c
 14184  00439A  AADF               	btfss	indf2,5,c
 14185  00439C  D015               	goto	l13603
 14186                           
 14187                           ; BSR set to: 2
 14188                           ;lorawan_eu.c: 769: {
 14189                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14190  00439E  0100               	movlb	0	; () banked
 14191  0043A0  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14192  0043A2  0B07               	andlw	7
 14193  0043A4  0102               	movlb	2	; () banked
 14194  0043A6  6FEF               	movwf	(_loRa+239)& (0+255),b
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14198  0043A8  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14199  0043AC  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14200  0043B0  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14201  0043B4  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14202  0043B8  0100               	movlb	0	; () banked
 14203  0043BA  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14204  0043BC  0B0F               	andlw	15
 14205  0043BE  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14206  0043C0  EC28  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14207                           
 14208                           ; BSR set to: 0
 14209                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14210  0043C4  0102               	movlb	2	; () banked
 14211  0043C6  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14212  0043C8                     l13603:
 14213                           
 14214                           ; BSR set to: 2
 14215                           ;lorawan_eu.c: 773: }
 14216                           ;lorawan_eu.c: 775: return ptr;
 14217  0043C8  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14218  0043CC  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14219                           
 14220                           ; BSR set to: 2
 14221  0043D0  0012               	return		;funcret
 14222  0043D2                     __end_of_ExecuteRxParamSetupReq:
 14223                           	opt stack 0
 14224                           tosu	equ	0xFFF
 14225                           tosh	equ	0xFFE
 14226                           tosl	equ	0xFFD
 14227                           pclath	equ	0xFFA
 14228                           tblptru	equ	0xFF8
 14229                           tblptrh	equ	0xFF7
 14230                           tblptrl	equ	0xFF6
 14231                           tablat	equ	0xFF5
 14232                           prodh	equ	0xFF4
 14233                           prodl	equ	0xFF3
 14234                           intcon	equ	0xFF2
 14235                           intcon2	equ	0xFF1
 14236                           intcon3	equ	0xFF0
 14237                           indf0	equ	0xFEF
 14238                           postinc0	equ	0xFEE
 14239                           fsr0h	equ	0xFEA
 14240                           fsr0l	equ	0xFE9
 14241                           wreg	equ	0xFE8
 14242                           postinc1	equ	0xFE6
 14243                           postdec1	equ	0xFE5
 14244                           plusw1	equ	0xFE3
 14245                           fsr1h	equ	0xFE2
 14246                           fsr1l	equ	0xFE1
 14247                           indf2	equ	0xFDF
 14248                           postinc2	equ	0xFDE
 14249                           postdec2	equ	0xFDD
 14250                           fsr2h	equ	0xFDA
 14251                           fsr2l	equ	0xFD9
 14252                           status	equ	0xFD8
 14253                           
 14254 ;; *************** function _ValidateRxOffset *****************
 14255 ;; Defined at:
 14256 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;  rxOffset        1    wreg     unsigned char 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14261 ;;  result          1    5[BANK0 ] enum E8016
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      enum E8016
 14264 ;; Registers used:
 14265 ;;		wreg, status,2, status,0
 14266 ;; Tracked objects:
 14267 ;;		On entry : F/0
 14268 ;;		On exit  : F/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14272 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;Total ram usage:        2 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:    7
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_ExecuteRxParamSetupReq
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text74
 14286  00767C                     __ptext74:
 14287                           	opt stack 0
 14288  00767C                     _ValidateRxOffset:
 14289                           	opt stack 17
 14290                           
 14291                           ; BSR set to: 2
 14292                           ;incstack = 0
 14293                           ;ValidateRxOffset@rxOffset stored from wreg
 14294  00767C  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14295                           
 14296                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14297  00767E  0100               	movlb	0	; () banked
 14298  007680  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14302  007682  0E05               	movlw	5
 14303  007684  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14304  007686  D002               	goto	l1223
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;lorawan_eu.c: 1081: {
 14308                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14309  007688  0E03               	movlw	3
 14310  00768A  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14311  00768C                     l1223:
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;lorawan_eu.c: 1083: }
 14315                           ;lorawan_eu.c: 1085: return result;
 14316  00768C  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14317                           
 14318                           ; BSR set to: 0
 14319  00768E  0012               	return		;funcret
 14320  007690                     __end_of_ValidateRxOffset:
 14321                           	opt stack 0
 14322                           tosu	equ	0xFFF
 14323                           tosh	equ	0xFFE
 14324                           tosl	equ	0xFFD
 14325                           pclath	equ	0xFFA
 14326                           tblptru	equ	0xFF8
 14327                           tblptrh	equ	0xFF7
 14328                           tblptrl	equ	0xFF6
 14329                           tablat	equ	0xFF5
 14330                           prodh	equ	0xFF4
 14331                           prodl	equ	0xFF3
 14332                           intcon	equ	0xFF2
 14333                           intcon2	equ	0xFF1
 14334                           intcon3	equ	0xFF0
 14335                           indf0	equ	0xFEF
 14336                           postinc0	equ	0xFEE
 14337                           fsr0h	equ	0xFEA
 14338                           fsr0l	equ	0xFE9
 14339                           wreg	equ	0xFE8
 14340                           postinc1	equ	0xFE6
 14341                           postdec1	equ	0xFE5
 14342                           plusw1	equ	0xFE3
 14343                           fsr1h	equ	0xFE2
 14344                           fsr1l	equ	0xFE1
 14345                           indf2	equ	0xFDF
 14346                           postinc2	equ	0xFDE
 14347                           postdec2	equ	0xFDD
 14348                           fsr2h	equ	0xFDA
 14349                           fsr2l	equ	0xFD9
 14350                           status	equ	0xFD8
 14351                           
 14352 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14353 ;; Defined at:
 14354 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;  frequency       4    4[BANK0 ] unsigned long 
 14357 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14358 ;; Auto vars:     Size  Location     Type
 14359 ;;		None
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  1    wreg      void 
 14362 ;; Registers used:
 14363 ;;		None
 14364 ;; Tracked objects:
 14365 ;;		On entry : F/0
 14366 ;;		On exit  : F/0
 14367 ;;		Unchanged: F/0
 14368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14369 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14372 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14373 ;;Total ram usage:        5 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; Hardware stack levels required when called:    7
 14376 ;; This function calls:
 14377 ;;		Nothing
 14378 ;; This function is called by:
 14379 ;;		_ExecuteRxParamSetupReq
 14380 ;; This function uses a non-reentrant model
 14381 ;;
 14382                           
 14383                           	psect	text75
 14384  007650                     __ptext75:
 14385                           	opt stack 0
 14386  007650                     _UpdateReceiveWindow2Parameters:
 14387                           	opt stack 17
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;incstack = 0
 14394  007650  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14395                           
 14396                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14397  007654  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14398  007658  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14399  00765C  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14400  007660  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14401                           
 14402                           ; BSR set to: 0
 14403  007664  0012               	return		;funcret
 14404  007666                     __end_of_UpdateReceiveWindow2Parameters:
 14405                           	opt stack 0
 14406                           tosu	equ	0xFFF
 14407                           tosh	equ	0xFFE
 14408                           tosl	equ	0xFFD
 14409                           pclath	equ	0xFFA
 14410                           tblptru	equ	0xFF8
 14411                           tblptrh	equ	0xFF7
 14412                           tblptrl	equ	0xFF6
 14413                           tablat	equ	0xFF5
 14414                           prodh	equ	0xFF4
 14415                           prodl	equ	0xFF3
 14416                           intcon	equ	0xFF2
 14417                           intcon2	equ	0xFF1
 14418                           intcon3	equ	0xFF0
 14419                           indf0	equ	0xFEF
 14420                           postinc0	equ	0xFEE
 14421                           fsr0h	equ	0xFEA
 14422                           fsr0l	equ	0xFE9
 14423                           wreg	equ	0xFE8
 14424                           postinc1	equ	0xFE6
 14425                           postdec1	equ	0xFE5
 14426                           plusw1	equ	0xFE3
 14427                           fsr1h	equ	0xFE2
 14428                           fsr1l	equ	0xFE1
 14429                           indf2	equ	0xFDF
 14430                           postinc2	equ	0xFDE
 14431                           postdec2	equ	0xFDD
 14432                           fsr2h	equ	0xFDA
 14433                           fsr2l	equ	0xFD9
 14434                           status	equ	0xFD8
 14435                           
 14436 ;; *************** function _ExecuteNewChannel *****************
 14437 ;; Defined at:
 14438 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14441 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;  frequency       4   19[BANK0 ] unsigned long 
 14444 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14445 ;;  drRange         1   18[BANK0 ] struct .
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  2   16[BANK0 ] PTR unsigned char 
 14448 ;; Registers used:
 14449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14450 ;; Tracked objects:
 14451 ;;		On entry : F/0
 14452 ;;		On exit  : F/2
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14458 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14459 ;;Total ram usage:        8 bytes
 14460 ;; Hardware stack levels used:    1
 14461 ;; Hardware stack levels required when called:    9
 14462 ;; This function calls:
 14463 ;;		_LORAWAN_SetChannelIdStatus
 14464 ;;		_UpdateChannelIdStatus
 14465 ;;		_UpdateDataRange
 14466 ;;		_UpdateDutyCycle
 14467 ;;		_UpdateFrequency
 14468 ;;		_ValidateChannelId
 14469 ;;		_ValidateDataRange
 14470 ;;		_ValidateFrequency
 14471 ;;		___lmul
 14472 ;; This function is called by:
 14473 ;;		_MacExecuteCommands
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477                           	psect	text76
 14478  00335C                     __ptext76:
 14479                           	opt stack 0
 14480  00335C                     _ExecuteNewChannel:
 14481                           	opt stack 16
 14482                           
 14483                           ; BSR set to: 0
 14484                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14485                           
 14486                           ; BSR set to: 0
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;incstack = 0
 14490  00335C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14491  003360  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14492  003364  50DF               	movf	indf2,w,c
 14493  003366  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14494                           
 14495                           ; BSR set to: 0
 14496  003368  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14497  00336A  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14501  00336C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14502  003370  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14503  003374  0EFF               	movlw	255
 14504  003376  14DE               	andwf	postinc2,w,c
 14505  003378  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14506  00337A  0EFF               	movlw	255
 14507  00337C  14DE               	andwf	postinc2,w,c
 14508  00337E  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14509  003380  0EFF               	movlw	255
 14510  003382  14DE               	andwf	postinc2,w,c
 14511  003384  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14512  003386  0E00               	movlw	0
 14513  003388  14DE               	andwf	postinc2,w,c
 14514  00338A  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14515                           
 14516                           ; BSR set to: 0
 14517                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14518  00338C  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14519  003390  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14520  003394  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14521  003398  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14522  00339C  0E64               	movlw	100
 14523  00339E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14524  0033A0  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14525  0033A2  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14526  0033A4  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14527  0033A6  EC8D  F02E         	call	___lmul	;wreg free
 14528  0033AA  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14529  0033AE  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14530  0033B2  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14531  0033B6  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14535  0033BA  0E03               	movlw	3
 14536  0033BC  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14537  0033BE  0E00               	movlw	0
 14538  0033C0  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14542  0033C2  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14543  0033C6  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14544  0033CA  50DF               	movf	indf2,w,c
 14545  0033CC  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14546                           
 14547                           ; BSR set to: 0
 14548  0033CE  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14549  0033D0  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14553  0033D2  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14554  0033D4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14555  0033D6  EC0C  F03A         	call	_ValidateChannelId
 14556  0033DA  0900               	iorlw	0
 14557  0033DC  E12B               	bnz	l1110
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;lorawan_eu.c: 692: {
 14561                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14562  0033DE  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14563  0033E2  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14564  0033E6  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14565  0033EA  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14566  0033EE  ECA5  F033         	call	_ValidateFrequency	;wreg free
 14567  0033F2  0900               	iorlw	0
 14568  0033F4  E005               	bz	l13541
 14569                           
 14570                           ; BSR set to: 0
 14571  0033F6  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14572  0033F8  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14573  0033FA  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14574  0033FC  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14575  0033FE  E10A               	bnz	l13543
 14576  003400                     l13541:
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;lorawan_eu.c: 694: {
 14580                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14581  003400  0102               	movlb	2	; () banked
 14582  003402  51A7               	movf	(_loRa+167)& (0+255),w,b
 14583  003404  0D02               	mullw	2
 14584  003406  0EA9               	movlw	low (_loRa+169)
 14585  003408  24F3               	addwf	prodl,w,c
 14586  00340A  6ED9               	movwf	fsr2l,c
 14587  00340C  0E02               	movlw	high (_loRa+169)
 14588  00340E  20F4               	addwfc	prodh,w,c
 14589  003410  6EDA               	movwf	fsr2h,c
 14590  003412  8EDF               	bsf	indf2,7,c
 14591  003414                     l13543:
 14592                           
 14593                           ;lorawan_eu.c: 696: }
 14594                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14595  003414  0100               	movlb	0	; () banked
 14596  003416  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14597  003418  ECC2  F037         	call	_ValidateDataRange
 14598  00341C  0900               	iorlw	0
 14599  00341E  E10A               	bnz	l1110
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;lorawan_eu.c: 699: {
 14603                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14604  003420  0102               	movlb	2	; () banked
 14605  003422  51A7               	movf	(_loRa+167)& (0+255),w,b
 14606  003424  0D02               	mullw	2
 14607  003426  0EA9               	movlw	low (_loRa+169)
 14608  003428  24F3               	addwf	prodl,w,c
 14609  00342A  6ED9               	movwf	fsr2l,c
 14610  00342C  0E02               	movlw	high (_loRa+169)
 14611  00342E  20F4               	addwfc	prodh,w,c
 14612  003430  6EDA               	movwf	fsr2h,c
 14613  003432  8CDF               	bsf	indf2,6,c
 14614  003434                     l1110:
 14615                           
 14616                           ;lorawan_eu.c: 701: }
 14617                           ;lorawan_eu.c: 702: }
 14618                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14619  003434  0102               	movlb	2	; () banked
 14620  003436  51A7               	movf	(_loRa+167)& (0+255),w,b
 14621  003438  0D02               	mullw	2
 14622  00343A  0EA9               	movlw	low (_loRa+169)
 14623  00343C  24F3               	addwf	prodl,w,c
 14624  00343E  6ED9               	movwf	fsr2l,c
 14625  003440  0E02               	movlw	high (_loRa+169)
 14626  003442  20F4               	addwfc	prodh,w,c
 14627  003444  6EDA               	movwf	fsr2h,c
 14628  003446  AEDF               	btfss	indf2,7,c
 14629  003448  D065               	goto	l13565
 14630                           
 14631                           ; BSR set to: 2
 14632  00344A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14633  00344C  0D02               	mullw	2
 14634  00344E  0EA9               	movlw	low (_loRa+169)
 14635  003450  24F3               	addwf	prodl,w,c
 14636  003452  6ED9               	movwf	fsr2l,c
 14637  003454  0E02               	movlw	high (_loRa+169)
 14638  003456  20F4               	addwfc	prodh,w,c
 14639  003458  6EDA               	movwf	fsr2h,c
 14640  00345A  ACDF               	btfss	indf2,6,c
 14641  00345C  D05B               	goto	l13565
 14642                           
 14643                           ; BSR set to: 2
 14644                           ;lorawan_eu.c: 705: {
 14645                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14646  00345E  0E10               	movlw	16
 14647  003460  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14648  003462  D029               	goto	l13557
 14649                           
 14650                           ; BSR set to: 2
 14651                           ;lorawan_eu.c: 707: {
 14652                           ;lorawan_eu.c: 708: if (frequency != 0)
 14653  003464  0100               	movlb	0	; () banked
 14654  003466  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14655  003468  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14656  00346A  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14657  00346C  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14658  00346E  E01E               	bz	l13555
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;lorawan_eu.c: 709: {
 14662                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14663  003470  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14664  003474  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14665  003478  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14666  00347C  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14667  003480  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14668  003482  EC37  F037         	call	_UpdateFrequency
 14669                           
 14670                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14671  003486  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14672  00348A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14673  00348C  ECB3  F024         	call	_UpdateDataRange
 14674                           
 14675                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14676  003490  0E01               	movlw	1
 14677  003492  0100               	movlb	0	; () banked
 14678  003494  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14679  003496  0E2E               	movlw	46
 14680  003498  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14681  00349A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14682  00349C  ECF6  F037         	call	_UpdateDutyCycle
 14683                           
 14684                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14685  0034A0  0E01               	movlw	1
 14686  0034A2  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14687  0034A4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14688  0034A6  ECAF  F023         	call	_UpdateChannelIdStatus
 14689                           
 14690                           ;lorawan_eu.c: 714: }
 14691  0034AA  D032               	goto	l13563
 14692  0034AC                     l13555:
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;lorawan_eu.c: 715: else
 14696                           ;lorawan_eu.c: 716: {
 14697                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14698  0034AC  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14699  0034AE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14700  0034B0  EC54  F037         	call	_LORAWAN_SetChannelIdStatus
 14701  0034B4  D02D               	goto	l13563
 14702  0034B6                     l13557:
 14703                           
 14704                           ; BSR set to: 2
 14705                           ;lorawan_eu.c: 720: else
 14706                           ;lorawan_eu.c: 721: {
 14707                           ;lorawan_eu.c: 722: if (frequency != 0)
 14708  0034B6  0100               	movlb	0	; () banked
 14709  0034B8  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14710  0034BA  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14711  0034BC  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14712  0034BE  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14713  0034C0  E022               	bz	l13561
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;lorawan_eu.c: 723: {
 14717                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14718  0034C2  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14719  0034C6  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14720  0034CA  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14721  0034CE  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14722  0034D2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14723  0034D4  0F10               	addlw	16
 14724  0034D6  EC37  F037         	call	_UpdateFrequency
 14725                           
 14726                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14727  0034DA  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14728  0034DE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14729  0034E0  0F10               	addlw	16
 14730  0034E2  ECB3  F024         	call	_UpdateDataRange
 14731                           
 14732                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14733  0034E6  0E01               	movlw	1
 14734  0034E8  0100               	movlb	0	; () banked
 14735  0034EA  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14736  0034EC  0E2E               	movlw	46
 14737  0034EE  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14738  0034F0  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14739  0034F2  0F10               	addlw	16
 14740  0034F4  ECF6  F037         	call	_UpdateDutyCycle
 14741                           
 14742                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14743  0034F8  0E01               	movlw	1
 14744  0034FA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14745  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14746  0034FE  0F10               	addlw	16
 14747  003500  ECAF  F023         	call	_UpdateChannelIdStatus
 14748                           
 14749                           ;lorawan_eu.c: 728: }
 14750  003504  D005               	goto	l13563
 14751  003506                     l13561:
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;lorawan_eu.c: 729: else
 14755                           ;lorawan_eu.c: 730: {
 14756                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14757  003506  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14758  003508  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14759  00350A  0F10               	addlw	16
 14760  00350C  EC54  F037         	call	_LORAWAN_SetChannelIdStatus
 14761  003510                     l13563:
 14762                           
 14763                           ;lorawan_eu.c: 732: }
 14764                           ;lorawan_eu.c: 733: }
 14765                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14766  003510  0102               	movlb	2	; () banked
 14767  003512  8703               	bsf	(_loRa+3)& (0+255),3,b
 14768  003514                     l13565:
 14769                           
 14770                           ; BSR set to: 2
 14771                           ;lorawan_eu.c: 736: }
 14772                           ;lorawan_eu.c: 737: return ptr;
 14773  003514  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14774  003518  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14775                           
 14776                           ; BSR set to: 2
 14777  00351C  0012               	return		;funcret
 14778  00351E                     __end_of_ExecuteNewChannel:
 14779                           	opt stack 0
 14780                           tosu	equ	0xFFF
 14781                           tosh	equ	0xFFE
 14782                           tosl	equ	0xFFD
 14783                           pclath	equ	0xFFA
 14784                           tblptru	equ	0xFF8
 14785                           tblptrh	equ	0xFF7
 14786                           tblptrl	equ	0xFF6
 14787                           tablat	equ	0xFF5
 14788                           prodh	equ	0xFF4
 14789                           prodl	equ	0xFF3
 14790                           intcon	equ	0xFF2
 14791                           intcon2	equ	0xFF1
 14792                           intcon3	equ	0xFF0
 14793                           indf0	equ	0xFEF
 14794                           postinc0	equ	0xFEE
 14795                           fsr0h	equ	0xFEA
 14796                           fsr0l	equ	0xFE9
 14797                           wreg	equ	0xFE8
 14798                           postinc1	equ	0xFE6
 14799                           postdec1	equ	0xFE5
 14800                           plusw1	equ	0xFE3
 14801                           fsr1h	equ	0xFE2
 14802                           fsr1l	equ	0xFE1
 14803                           indf2	equ	0xFDF
 14804                           postinc2	equ	0xFDE
 14805                           postdec2	equ	0xFDD
 14806                           fsr2h	equ	0xFDA
 14807                           fsr2l	equ	0xFD9
 14808                           status	equ	0xFD8
 14809                           
 14810 ;; *************** function _ValidateFrequency *****************
 14811 ;; Defined at:
 14812 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14813 ;; Parameters:    Size  Location     Type
 14814 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;  result          1    8[BANK0 ] enum E8016
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  1    wreg      enum E8016
 14819 ;; Registers used:
 14820 ;;		wreg, status,2, status,0
 14821 ;; Tracked objects:
 14822 ;;		On entry : F/0
 14823 ;;		On exit  : F/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14826 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;Total ram usage:        5 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:    7
 14833 ;; This function calls:
 14834 ;;		Nothing
 14835 ;; This function is called by:
 14836 ;;		_ExecuteNewChannel
 14837 ;;		_ExecuteRxParamSetupReq
 14838 ;;		_UpdateCfList
 14839 ;; This function uses a non-reentrant model
 14840 ;;
 14841                           
 14842                           	psect	text77
 14843  00674A                     __ptext77:
 14844                           	opt stack 0
 14845  00674A                     _ValidateFrequency:
 14846                           	opt stack 18
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14850                           
 14851                           ; BSR set to: 2
 14852                           ;incstack = 0
 14853  00674A  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14857  00674C  0102               	movlb	2	; () banked
 14858  00674E  51A4               	movf	(_loRa+164)& (0+255),w,b
 14859  006750  E116               	bnz	l12811
 14860                           
 14861                           ; BSR set to: 2
 14862                           ;lorawan_eu.c: 1093: {
 14863                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14864  006752  0E81               	movlw	129
 14865  006754  0100               	movlb	0	; () banked
 14866  006756  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14867  006758  0E25               	movlw	37
 14868  00675A  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14869  00675C  0EDB               	movlw	219
 14870  00675E  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14871  006760  0E33               	movlw	51
 14872  006762  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14873  006764  E209               	bc	l12809
 14874                           
 14875                           ; BSR set to: 0
 14876  006766  0EC0               	movlw	192
 14877  006768  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14878  00676A  0E55               	movlw	85
 14879  00676C  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14880  00676E  0E70               	movlw	112
 14881  006770  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14882  006772  0E33               	movlw	51
 14883  006774  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14884  006776  E215               	bc	l1231
 14885  006778                     l12809:
 14886                           
 14887                           ; BSR set to: 0
 14888                           ;lorawan_eu.c: 1095: {
 14889                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14890  006778  0E03               	movlw	3
 14891  00677A  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14892  00677C  D012               	goto	l1231
 14893  00677E                     l12811:
 14894                           
 14895                           ; BSR set to: 2
 14896                           ;lorawan_eu.c: 1099: else
 14897                           ;lorawan_eu.c: 1100: {
 14898                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14899  00677E  0E71               	movlw	113
 14900  006780  0100               	movlb	0	; () banked
 14901  006782  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14902  006784  0E5E               	movlw	94
 14903  006786  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14904  006788  0EEA               	movlw	234
 14905  00678A  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14906  00678C  0E19               	movlw	25
 14907  00678E  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14908  006790  E2F3               	bc	l12809
 14909                           
 14910                           ; BSR set to: 0
 14911  006792  0E90               	movlw	144
 14912  006794  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14913  006796  0ED1               	movlw	209
 14914  006798  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14915  00679A  0ECF               	movlw	207
 14916  00679C  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14917  00679E  0E19               	movlw	25
 14918  0067A0  D7E9               	goto	L7
 14919  0067A2                     l1231:
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;lorawan_eu.c: 1104: }
 14923                           ;lorawan_eu.c: 1105: }
 14924                           ;lorawan_eu.c: 1107: return result;
 14925  0067A2  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14926                           
 14927                           ; BSR set to: 0
 14928  0067A4  0012               	return		;funcret
 14929  0067A6                     __end_of_ValidateFrequency:
 14930                           	opt stack 0
 14931                           tosu	equ	0xFFF
 14932                           tosh	equ	0xFFE
 14933                           tosl	equ	0xFFD
 14934                           pclath	equ	0xFFA
 14935                           tblptru	equ	0xFF8
 14936                           tblptrh	equ	0xFF7
 14937                           tblptrl	equ	0xFF6
 14938                           tablat	equ	0xFF5
 14939                           prodh	equ	0xFF4
 14940                           prodl	equ	0xFF3
 14941                           intcon	equ	0xFF2
 14942                           intcon2	equ	0xFF1
 14943                           intcon3	equ	0xFF0
 14944                           indf0	equ	0xFEF
 14945                           postinc0	equ	0xFEE
 14946                           fsr0h	equ	0xFEA
 14947                           fsr0l	equ	0xFE9
 14948                           wreg	equ	0xFE8
 14949                           postinc1	equ	0xFE6
 14950                           postdec1	equ	0xFE5
 14951                           plusw1	equ	0xFE3
 14952                           fsr1h	equ	0xFE2
 14953                           fsr1l	equ	0xFE1
 14954                           indf2	equ	0xFDF
 14955                           postinc2	equ	0xFDE
 14956                           postdec2	equ	0xFDD
 14957                           fsr2h	equ	0xFDA
 14958                           fsr2l	equ	0xFD9
 14959                           status	equ	0xFD8
 14960                           
 14961 ;; *************** function _ValidateDataRange *****************
 14962 ;; Defined at:
 14963 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  dataRangeNew    1    wreg     unsigned char 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 14968 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 14969 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 14970 ;;  result          1    6[BANK0 ] enum E8016
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  1    wreg      enum E8016
 14973 ;; Registers used:
 14974 ;;		wreg, status,2, status,0, cstack
 14975 ;; Tracked objects:
 14976 ;;		On entry : F/0
 14977 ;;		On exit  : F/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14981 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;Total ram usage:        4 bytes
 14985 ;; Hardware stack levels used:    1
 14986 ;; Hardware stack levels required when called:    8
 14987 ;; This function calls:
 14988 ;;		_ValidateDataRate
 14989 ;; This function is called by:
 14990 ;;		_ExecuteNewChannel
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           	psect	text78
 14995  006F84                     __ptext78:
 14996                           	opt stack 0
 14997  006F84                     _ValidateDataRange:
 14998                           	opt stack 16
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;incstack = 0
 15002                           ;ValidateDataRange@dataRangeNew stored from wreg
 15003  006F84  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15004                           
 15005                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15006  006F86  0100               	movlb	0	; () banked
 15007  006F88  6B66               	clrf	ValidateDataRange@result& (0+255),b
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15011                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15012  006F8A  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15013  006F8C  0B0F               	andlw	15
 15014  006F8E  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15015                           
 15016                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15017  006F90  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15018  006F92  0B0F               	andlw	15
 15019  006F94  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15023  006F96  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15024  006F98  EC48  F03B         	call	_ValidateDataRate
 15025  006F9C  0900               	iorlw	0
 15026  006F9E  E108               	bnz	l12831
 15027                           
 15028                           ; BSR set to: 0
 15029  006FA0  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15030  006FA2  EC48  F03B         	call	_ValidateDataRate
 15031  006FA6  0900               	iorlw	0
 15032  006FA8  E103               	bnz	l12831
 15033                           
 15034                           ; BSR set to: 0
 15035  006FAA  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15036  006FAC  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15037  006FAE  E202               	bc	l1238
 15038  006FB0                     l12831:
 15039                           
 15040                           ; BSR set to: 0
 15041                           ;lorawan_eu.c: 1119: {
 15042                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15043  006FB0  0E03               	movlw	3
 15044  006FB2  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15045  006FB4                     l1238:
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;lorawan_eu.c: 1121: }
 15049                           ;lorawan_eu.c: 1122: return result;
 15050  006FB4  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15051                           
 15052                           ; BSR set to: 0
 15053  006FB6  0012               	return		;funcret
 15054  006FB8                     __end_of_ValidateDataRange:
 15055                           	opt stack 0
 15056                           tosu	equ	0xFFF
 15057                           tosh	equ	0xFFE
 15058                           tosl	equ	0xFFD
 15059                           pclath	equ	0xFFA
 15060                           tblptru	equ	0xFF8
 15061                           tblptrh	equ	0xFF7
 15062                           tblptrl	equ	0xFF6
 15063                           tablat	equ	0xFF5
 15064                           prodh	equ	0xFF4
 15065                           prodl	equ	0xFF3
 15066                           intcon	equ	0xFF2
 15067                           intcon2	equ	0xFF1
 15068                           intcon3	equ	0xFF0
 15069                           indf0	equ	0xFEF
 15070                           postinc0	equ	0xFEE
 15071                           fsr0h	equ	0xFEA
 15072                           fsr0l	equ	0xFE9
 15073                           wreg	equ	0xFE8
 15074                           postinc1	equ	0xFE6
 15075                           postdec1	equ	0xFE5
 15076                           plusw1	equ	0xFE3
 15077                           fsr1h	equ	0xFE2
 15078                           fsr1l	equ	0xFE1
 15079                           indf2	equ	0xFDF
 15080                           postinc2	equ	0xFDE
 15081                           postdec2	equ	0xFDD
 15082                           fsr2h	equ	0xFDA
 15083                           fsr2l	equ	0xFD9
 15084                           status	equ	0xFD8
 15085                           
 15086 ;; *************** function _UpdateFrequency *****************
 15087 ;; Defined at:
 15088 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;  channelId       1    wreg     unsigned char 
 15091 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15092 ;; Auto vars:     Size  Location     Type
 15093 ;;  channelId       1    8[BANK0 ] unsigned char 
 15094 ;; Return value:  Size  Location     Type
 15095 ;;                  1    wreg      void 
 15096 ;; Registers used:
 15097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15098 ;; Tracked objects:
 15099 ;;		On entry : F/0
 15100 ;;		On exit  : F/0
 15101 ;;		Unchanged: 0/0
 15102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15107 ;;Total ram usage:        5 bytes
 15108 ;; Hardware stack levels used:    1
 15109 ;; Hardware stack levels required when called:    7
 15110 ;; This function calls:
 15111 ;;		Nothing
 15112 ;; This function is called by:
 15113 ;;		_ExecuteNewChannel
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           	psect	text79
 15118  006E6E                     __ptext79:
 15119                           	opt stack 0
 15120  006E6E                     _UpdateFrequency:
 15121                           	opt stack 17
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;incstack = 0
 15125                           ;UpdateFrequency@channelId stored from wreg
 15126  006E6E  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15127                           
 15128                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15129  006E70  0100               	movlb	0	; () banked
 15130  006E72  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15131  006E74  0D0E               	mullw	14
 15132  006E76  0E00               	movlw	low _Channels
 15133  006E78  24F3               	addwf	prodl,w,c
 15134  006E7A  6ED9               	movwf	fsr2l,c
 15135  006E7C  0E04               	movlw	high _Channels
 15136  006E7E  20F4               	addwfc	prodh,w,c
 15137  006E80  6EDA               	movwf	fsr2h,c
 15138  006E82  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15139  006E86  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15140  006E8A  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15141  006E8E  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15142                           
 15143                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15144  006E92  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15145  006E94  0D0E               	mullw	14
 15146  006E96  0E0D               	movlw	low (_Channels+13)
 15147  006E98  24F3               	addwf	prodl,w,c
 15148  006E9A  6ED9               	movwf	fsr2l,c
 15149  006E9C  0E04               	movlw	high (_Channels+13)
 15150  006E9E  20F4               	addwfc	prodh,w,c
 15151  006EA0  6EDA               	movwf	fsr2h,c
 15152  006EA2  0E00               	movlw	0
 15153  006EA4  80DB               	bsf	plusw2,0,c
 15154                           
 15155                           ; BSR set to: 0
 15156  006EA6  0C00               	retlw	0	;funcret
 15157  006EA8                     __end_of_UpdateFrequency:
 15158                           	opt stack 0
 15159                           tosu	equ	0xFFF
 15160                           tosh	equ	0xFFE
 15161                           tosl	equ	0xFFD
 15162                           pclath	equ	0xFFA
 15163                           tblptru	equ	0xFF8
 15164                           tblptrh	equ	0xFF7
 15165                           tblptrl	equ	0xFF6
 15166                           tablat	equ	0xFF5
 15167                           prodh	equ	0xFF4
 15168                           prodl	equ	0xFF3
 15169                           intcon	equ	0xFF2
 15170                           intcon2	equ	0xFF1
 15171                           intcon3	equ	0xFF0
 15172                           indf0	equ	0xFEF
 15173                           postinc0	equ	0xFEE
 15174                           fsr0h	equ	0xFEA
 15175                           fsr0l	equ	0xFE9
 15176                           wreg	equ	0xFE8
 15177                           postinc1	equ	0xFE6
 15178                           postdec1	equ	0xFE5
 15179                           plusw1	equ	0xFE3
 15180                           fsr1h	equ	0xFE2
 15181                           fsr1l	equ	0xFE1
 15182                           indf2	equ	0xFDF
 15183                           postinc2	equ	0xFDE
 15184                           postdec2	equ	0xFDD
 15185                           plusw2	equ	0xFDB
 15186                           fsr2h	equ	0xFDA
 15187                           fsr2l	equ	0xFD9
 15188                           status	equ	0xFD8
 15189                           
 15190 ;; *************** function _UpdateDutyCycle *****************
 15191 ;; Defined at:
 15192 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;  channelId       1    wreg     unsigned char 
 15195 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15196 ;; Auto vars:     Size  Location     Type
 15197 ;;  channelId       1    6[BANK0 ] unsigned char 
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15202 ;; Tracked objects:
 15203 ;;		On entry : F/0
 15204 ;;		On exit  : F/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15210 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;Total ram usage:        3 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:    7
 15214 ;; This function calls:
 15215 ;;		Nothing
 15216 ;; This function is called by:
 15217 ;;		_ExecuteNewChannel
 15218 ;; This function uses a non-reentrant model
 15219 ;;
 15220                           
 15221                           	psect	text80
 15222  006FEC                     __ptext80:
 15223                           	opt stack 0
 15224  006FEC                     _UpdateDutyCycle:
 15225                           	opt stack 17
 15226                           
 15227                           ; BSR set to: 0
 15228                           ;incstack = 0
 15229                           ;UpdateDutyCycle@channelId stored from wreg
 15230  006FEC  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15231                           
 15232                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15233  006FEE  0100               	movlb	0	; () banked
 15234  006FF0  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15235  006FF2  0D0E               	mullw	14
 15236  006FF4  0E06               	movlw	low (_Channels+6)
 15237  006FF6  24F3               	addwf	prodl,w,c
 15238  006FF8  6ED9               	movwf	fsr2l,c
 15239  006FFA  0E04               	movlw	high (_Channels+6)
 15240  006FFC  20F4               	addwfc	prodh,w,c
 15241  006FFE  6EDA               	movwf	fsr2h,c
 15242  007000  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15243  007004  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15244                           
 15245                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15246  007008  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15247  00700A  0D0E               	mullw	14
 15248  00700C  0E0D               	movlw	low (_Channels+13)
 15249  00700E  24F3               	addwf	prodl,w,c
 15250  007010  6ED9               	movwf	fsr2l,c
 15251  007012  0E04               	movlw	high (_Channels+13)
 15252  007014  20F4               	addwfc	prodh,w,c
 15253  007016  6EDA               	movwf	fsr2h,c
 15254  007018  0E00               	movlw	0
 15255  00701A  84DB               	bsf	plusw2,2,c
 15256                           
 15257                           ; BSR set to: 0
 15258  00701C  0C00               	retlw	0	;funcret
 15259  00701E                     __end_of_UpdateDutyCycle:
 15260                           	opt stack 0
 15261                           tosu	equ	0xFFF
 15262                           tosh	equ	0xFFE
 15263                           tosl	equ	0xFFD
 15264                           pclath	equ	0xFFA
 15265                           tblptru	equ	0xFF8
 15266                           tblptrh	equ	0xFF7
 15267                           tblptrl	equ	0xFF6
 15268                           tablat	equ	0xFF5
 15269                           prodh	equ	0xFF4
 15270                           prodl	equ	0xFF3
 15271                           intcon	equ	0xFF2
 15272                           intcon2	equ	0xFF1
 15273                           intcon3	equ	0xFF0
 15274                           indf0	equ	0xFEF
 15275                           postinc0	equ	0xFEE
 15276                           fsr0h	equ	0xFEA
 15277                           fsr0l	equ	0xFE9
 15278                           wreg	equ	0xFE8
 15279                           postinc1	equ	0xFE6
 15280                           postdec1	equ	0xFE5
 15281                           plusw1	equ	0xFE3
 15282                           fsr1h	equ	0xFE2
 15283                           fsr1l	equ	0xFE1
 15284                           indf2	equ	0xFDF
 15285                           postinc2	equ	0xFDE
 15286                           postdec2	equ	0xFDD
 15287                           plusw2	equ	0xFDB
 15288                           fsr2h	equ	0xFDA
 15289                           fsr2l	equ	0xFD9
 15290                           status	equ	0xFD8
 15291                           
 15292 ;; *************** function _UpdateDataRange *****************
 15293 ;; Defined at:
 15294 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15295 ;; Parameters:    Size  Location     Type
 15296 ;;  channelId       1    wreg     unsigned char 
 15297 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15298 ;; Auto vars:     Size  Location     Type
 15299 ;;  channelId       1    6[BANK0 ] unsigned char 
 15300 ;;  i               1    7[BANK0 ] unsigned char 
 15301 ;; Return value:  Size  Location     Type
 15302 ;;                  1    wreg      void 
 15303 ;; Registers used:
 15304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15305 ;; Tracked objects:
 15306 ;;		On entry : F/0
 15307 ;;		On exit  : F/2
 15308 ;;		Unchanged: 0/0
 15309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15310 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15311 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;Total ram usage:        4 bytes
 15315 ;; Hardware stack levels used:    1
 15316 ;; Hardware stack levels required when called:    7
 15317 ;; This function calls:
 15318 ;;		Nothing
 15319 ;; This function is called by:
 15320 ;;		_ExecuteNewChannel
 15321 ;; This function uses a non-reentrant model
 15322 ;;
 15323                           
 15324                           	psect	text81
 15325  004966                     __ptext81:
 15326                           	opt stack 0
 15327  004966                     _UpdateDataRange:
 15328                           	opt stack 17
 15329                           
 15330                           ; BSR set to: 0
 15331                           ;incstack = 0
 15332                           ;UpdateDataRange@channelId stored from wreg
 15333  004966  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15334                           
 15335                           ;lorawan_eu.c: 1011: uint8_t i;
 15336                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15337  004968  0E07               	movlw	7
 15338  00496A  0102               	movlb	2	; () banked
 15339  00496C  6FEB               	movwf	(_loRa+235)& (0+255),b
 15340                           
 15341                           ; BSR set to: 2
 15342                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15343  00496E  6BEC               	clrf	(_loRa+236)& (0+255),b
 15344                           
 15345                           ; BSR set to: 2
 15346                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15347  004970  0100               	movlb	0	; () banked
 15348  004972  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15349  004974  0D0E               	mullw	14
 15350  004976  0E05               	movlw	low (_Channels+5)
 15351  004978  24F3               	addwf	prodl,w,c
 15352  00497A  6ED9               	movwf	fsr2l,c
 15353  00497C  0E04               	movlw	high (_Channels+5)
 15354  00497E  20F4               	addwfc	prodh,w,c
 15355  004980  6EDA               	movwf	fsr2h,c
 15356  004982  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15360  004986  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15361  004988  0D0E               	mullw	14
 15362  00498A  0E0D               	movlw	low (_Channels+13)
 15363  00498C  24F3               	addwf	prodl,w,c
 15364  00498E  6ED9               	movwf	fsr2l,c
 15365  004990  0E04               	movlw	high (_Channels+13)
 15366  004992  20F4               	addwfc	prodh,w,c
 15367  004994  6EDA               	movwf	fsr2h,c
 15368  004996  0E00               	movlw	0
 15369  004998  82DB               	bsf	plusw2,1,c
 15370                           
 15371                           ; BSR set to: 0
 15372                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15373  00499A  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15374  00499C  D04E               	goto	l12857
 15375  00499E                     l12845:
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;lorawan_eu.c: 1020: {
 15379                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15380  00499E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15381  0049A0  0D0E               	mullw	14
 15382  0049A2  0E05               	movlw	low (_Channels+5)
 15383  0049A4  24F3               	addwf	prodl,w,c
 15384  0049A6  6ED9               	movwf	fsr2l,c
 15385  0049A8  0E04               	movlw	high (_Channels+5)
 15386  0049AA  20F4               	addwfc	prodh,w,c
 15387  0049AC  6EDA               	movwf	fsr2h,c
 15388  0049AE  50DF               	movf	223,w,c
 15389  0049B0  0B0F               	andlw	15
 15390  0049B2  0100               	movlb	0	; () banked
 15391  0049B4  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15392  0049B6  0102               	movlb	2	; () banked
 15393  0049B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 15394  0049BA  0100               	movlb	0	; () banked
 15395  0049BC  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15396  0049BE  E216               	bc	l1204
 15397                           
 15398                           ; BSR set to: 0
 15399  0049C0  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15400  0049C2  0D0E               	mullw	14
 15401  0049C4  0E04               	movlw	low (_Channels+4)
 15402  0049C6  24F3               	addwf	prodl,w,c
 15403  0049C8  6ED9               	movwf	fsr2l,c
 15404  0049CA  0E04               	movlw	high (_Channels+4)
 15405  0049CC  20F4               	addwfc	prodh,w,c
 15406  0049CE  6EDA               	movwf	fsr2h,c
 15407  0049D0  04DE               	decf	postinc2,w,c
 15408  0049D2  E10C               	bnz	l1204
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;lorawan_eu.c: 1022: {
 15412                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15413  0049D4  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15414  0049D6  0D0E               	mullw	14
 15415  0049D8  0E05               	movlw	low (_Channels+5)
 15416  0049DA  24F3               	addwf	prodl,w,c
 15417  0049DC  6ED9               	movwf	fsr2l,c
 15418  0049DE  0E04               	movlw	high (_Channels+5)
 15419  0049E0  20F4               	addwfc	prodh,w,c
 15420  0049E2  6EDA               	movwf	fsr2h,c
 15421  0049E4  50DF               	movf	223,w,c
 15422  0049E6  0B0F               	andlw	15
 15423  0049E8  0102               	movlb	2	; () banked
 15424  0049EA  6FEB               	movwf	(_loRa+235)& (0+255),b
 15425  0049EC                     l1204:
 15426                           
 15427                           ;lorawan_eu.c: 1024: }
 15428                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15429  0049EC  0100               	movlb	0	; () banked
 15430  0049EE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15431  0049F0  0D0E               	mullw	14
 15432  0049F2  0E05               	movlw	low (_Channels+5)
 15433  0049F4  24F3               	addwf	prodl,w,c
 15434  0049F6  6ED9               	movwf	fsr2l,c
 15435  0049F8  0E04               	movlw	high (_Channels+5)
 15436  0049FA  20F4               	addwfc	prodh,w,c
 15437  0049FC  6EDA               	movwf	fsr2h,c
 15438  0049FE  38DF               	swapf	223,w,c
 15439  004A00  0B0F               	andlw	15
 15440  004A02  0102               	movlb	2	; () banked
 15441  004A04  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15442  004A06  D017               	goto	l12855
 15443                           
 15444                           ; BSR set to: 2
 15445  004A08  0100               	movlb	0	; () banked
 15446  004A0A  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15447  004A0C  0D0E               	mullw	14
 15448  004A0E  0E04               	movlw	low (_Channels+4)
 15449  004A10  24F3               	addwf	prodl,w,c
 15450  004A12  6ED9               	movwf	fsr2l,c
 15451  004A14  0E04               	movlw	high (_Channels+4)
 15452  004A16  20F4               	addwfc	prodh,w,c
 15453  004A18  6EDA               	movwf	fsr2h,c
 15454  004A1A  04DE               	decf	postinc2,w,c
 15455  004A1C  E10C               	bnz	l12855
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;lorawan_eu.c: 1026: {
 15459                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15460  004A1E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15461  004A20  0D0E               	mullw	14
 15462  004A22  0E05               	movlw	low (_Channels+5)
 15463  004A24  24F3               	addwf	prodl,w,c
 15464  004A26  6ED9               	movwf	fsr2l,c
 15465  004A28  0E04               	movlw	high (_Channels+5)
 15466  004A2A  20F4               	addwfc	prodh,w,c
 15467  004A2C  6EDA               	movwf	fsr2h,c
 15468  004A2E  38DF               	swapf	223,w,c
 15469  004A30  0B0F               	andlw	15
 15470  004A32  0102               	movlb	2	; () banked
 15471  004A34  6FEC               	movwf	(_loRa+236)& (0+255),b
 15472  004A36                     l12855:
 15473  004A36  0100               	movlb	0	; () banked
 15474  004A38  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15475  004A3A                     l12857:
 15476                           
 15477                           ; BSR set to: 0
 15478  004A3A  0102               	movlb	2	; () banked
 15479  004A3C  51ED               	movf	(_loRa+237)& (0+255),w,b
 15480  004A3E  0100               	movlb	0	; () banked
 15481  004A40  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15482  004A42  E3AD               	bnc	l12845
 15483                           
 15484                           ; BSR set to: 0
 15485                           ;lorawan_eu.c: 1028: }
 15486                           ;lorawan_eu.c: 1029: }
 15487                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15488  004A44  0102               	movlb	2	; () banked
 15489  004A46  51DF               	movf	(_loRa+223)& (0+255),w,b
 15490  004A48  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15491  004A4A  E202               	bc	l12863
 15492                           
 15493                           ; BSR set to: 2
 15494                           ;lorawan_eu.c: 1032: {
 15495                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15496  004A4C  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15497  004A50                     l12863:
 15498                           
 15499                           ; BSR set to: 2
 15500                           ;lorawan_eu.c: 1034: }
 15501                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15502  004A50  51EB               	movf	(_loRa+235)& (0+255),w,b
 15503  004A52  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15504  004A54  A0D8               	btfss	status,0,c
 15505                           
 15506                           ; BSR set to: 2
 15507                           ;lorawan_eu.c: 1037: {
 15508                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15509  004A56  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15510                           
 15511                           ; BSR set to: 2
 15512  004A5A  0012               	return		;funcret
 15513  004A5C                     __end_of_UpdateDataRange:
 15514                           	opt stack 0
 15515                           tosu	equ	0xFFF
 15516                           tosh	equ	0xFFE
 15517                           tosl	equ	0xFFD
 15518                           pclath	equ	0xFFA
 15519                           tblptru	equ	0xFF8
 15520                           tblptrh	equ	0xFF7
 15521                           tblptrl	equ	0xFF6
 15522                           tablat	equ	0xFF5
 15523                           prodh	equ	0xFF4
 15524                           prodl	equ	0xFF3
 15525                           intcon	equ	0xFF2
 15526                           intcon2	equ	0xFF1
 15527                           intcon3	equ	0xFF0
 15528                           indf0	equ	0xFEF
 15529                           postinc0	equ	0xFEE
 15530                           fsr0h	equ	0xFEA
 15531                           fsr0l	equ	0xFE9
 15532                           wreg	equ	0xFE8
 15533                           postinc1	equ	0xFE6
 15534                           postdec1	equ	0xFE5
 15535                           plusw1	equ	0xFE3
 15536                           fsr1h	equ	0xFE2
 15537                           fsr1l	equ	0xFE1
 15538                           indf2	equ	0xFDF
 15539                           postinc2	equ	0xFDE
 15540                           postdec2	equ	0xFDD
 15541                           plusw2	equ	0xFDB
 15542                           fsr2h	equ	0xFDA
 15543                           fsr2l	equ	0xFD9
 15544                           status	equ	0xFD8
 15545                           
 15546 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15547 ;; Defined at:
 15548 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;  channelId       1    wreg     unsigned char 
 15551 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  channelId       1   10[BANK0 ] unsigned char 
 15554 ;;  result          1    0        enum E8016
 15555 ;; Return value:  Size  Location     Type
 15556 ;;                  1    wreg      enum E8016
 15557 ;; Registers used:
 15558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15559 ;; Tracked objects:
 15560 ;;		On entry : F/0
 15561 ;;		On exit  : D/0
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15564 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15565 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15567 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15568 ;;Total ram usage:        3 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; Hardware stack levels required when called:    8
 15571 ;; This function calls:
 15572 ;;		_UpdateChannelIdStatus
 15573 ;;		_ValidateChannelId
 15574 ;; This function is called by:
 15575 ;;		_ExecuteNewChannel
 15576 ;;		_UpdateCfList
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text82
 15581  006EA8                     __ptext82:
 15582                           	opt stack 0
 15583  006EA8                     _LORAWAN_SetChannelIdStatus:
 15584                           	opt stack 17
 15585                           
 15586                           ; BSR set to: 2
 15587                           ;incstack = 0
 15588                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15589  006EA8  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15590                           
 15591                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15592  006EAA  0E01               	movlw	1
 15593  006EAC  0100               	movlb	0	; () banked
 15594  006EAE  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15595  006EB0  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15596  006EB2  EC0C  F03A         	call	_ValidateChannelId
 15597  006EB6  0900               	iorlw	0
 15598  006EB8  E001               	bz	l12873
 15599                           
 15600                           ; BSR set to: 0
 15601                           ;lorawan_eu.c: 290: }
 15602  006EBA  0012               	return	
 15603  006EBC                     l12873:
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;lorawan_eu.c: 292: else
 15607                           ;lorawan_eu.c: 293: {
 15608                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15609  006EBC  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15610  006EBE  0D0E               	mullw	14
 15611  006EC0  0E0D               	movlw	low (_Channels+13)
 15612  006EC2  24F3               	addwf	prodl,w,c
 15613  006EC4  6ED9               	movwf	fsr2l,c
 15614  006EC6  0E04               	movlw	high (_Channels+13)
 15615  006EC8  20F4               	addwfc	prodh,w,c
 15616  006ECA  6EDA               	movwf	fsr2h,c
 15617  006ECC  50DF               	movf	indf2,w,c
 15618  006ECE  0B07               	andlw	7
 15619  006ED0  0A07               	xorlw	7
 15620  006ED2  A4D8               	btfss	status,2,c
 15621  006ED4  0012               	return	
 15622                           
 15623                           ; BSR set to: 0
 15624                           ;lorawan_eu.c: 295: {
 15625                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15626  006ED6  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15627  006EDA  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15628  006EDC  EFAF  F023         	goto	_UpdateChannelIdStatus
 15629  006EE0                     __end_of_LORAWAN_SetChannelIdStatus:
 15630                           	opt stack 0
 15631                           tosu	equ	0xFFF
 15632                           tosh	equ	0xFFE
 15633                           tosl	equ	0xFFD
 15634                           pclath	equ	0xFFA
 15635                           tblptru	equ	0xFF8
 15636                           tblptrh	equ	0xFF7
 15637                           tblptrl	equ	0xFF6
 15638                           tablat	equ	0xFF5
 15639                           prodh	equ	0xFF4
 15640                           prodl	equ	0xFF3
 15641                           intcon	equ	0xFF2
 15642                           intcon2	equ	0xFF1
 15643                           intcon3	equ	0xFF0
 15644                           indf0	equ	0xFEF
 15645                           postinc0	equ	0xFEE
 15646                           fsr0h	equ	0xFEA
 15647                           fsr0l	equ	0xFE9
 15648                           wreg	equ	0xFE8
 15649                           postinc1	equ	0xFE6
 15650                           postdec1	equ	0xFE5
 15651                           plusw1	equ	0xFE3
 15652                           fsr1h	equ	0xFE2
 15653                           fsr1l	equ	0xFE1
 15654                           indf2	equ	0xFDF
 15655                           postinc2	equ	0xFDE
 15656                           postdec2	equ	0xFDD
 15657                           plusw2	equ	0xFDB
 15658                           fsr2h	equ	0xFDA
 15659                           fsr2l	equ	0xFD9
 15660                           status	equ	0xFD8
 15661                           
 15662 ;; *************** function _ValidateChannelId *****************
 15663 ;; Defined at:
 15664 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  channelId       1    wreg     unsigned char 
 15667 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  channelId       1    6[BANK0 ] unsigned char 
 15670 ;;  result          1    5[BANK0 ] enum E8016
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      enum E8016
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0
 15675 ;; Tracked objects:
 15676 ;;		On entry : F/0
 15677 ;;		On exit  : F/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15680 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15681 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15683 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15684 ;;Total ram usage:        3 bytes
 15685 ;; Hardware stack levels used:    1
 15686 ;; Hardware stack levels required when called:    7
 15687 ;; This function calls:
 15688 ;;		Nothing
 15689 ;; This function is called by:
 15690 ;;		_LORAWAN_SetChannelIdStatus
 15691 ;;		_ExecuteNewChannel
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           	psect	text83
 15696  007418                     __ptext83:
 15697                           	opt stack 0
 15698  007418                     _ValidateChannelId:
 15699                           	opt stack 17
 15700                           
 15701                           ;incstack = 0
 15702                           ;ValidateChannelId@channelId stored from wreg
 15703  007418  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15704                           
 15705                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15706  00741A  0100               	movlb	0	; () banked
 15707  00741C  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15708                           
 15709                           ; BSR set to: 0
 15710                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15711  00741E  0E10               	movlw	16
 15712  007420  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15713  007422  D005               	goto	l12611
 15714                           
 15715                           ; BSR set to: 0
 15716  007424  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15717  007426  E105               	bnz	l1244
 15718                           
 15719                           ; BSR set to: 0
 15720  007428  0E03               	movlw	3
 15721  00742A  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15722  00742C  D002               	goto	l1244
 15723  00742E                     l12611:
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;lorawan_eu.c: 1130: {
 15727                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15728  00742E  0E03               	movlw	3
 15729  007430  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15730  007432                     l1244:
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;lorawan_eu.c: 1132: }
 15734                           ;lorawan_eu.c: 1134: return result;
 15735  007432  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15736                           
 15737                           ; BSR set to: 0
 15738  007434  0012               	return		;funcret
 15739  007436                     __end_of_ValidateChannelId:
 15740                           	opt stack 0
 15741                           tosu	equ	0xFFF
 15742                           tosh	equ	0xFFE
 15743                           tosl	equ	0xFFD
 15744                           pclath	equ	0xFFA
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           intcon	equ	0xFF2
 15752                           intcon2	equ	0xFF1
 15753                           intcon3	equ	0xFF0
 15754                           indf0	equ	0xFEF
 15755                           postinc0	equ	0xFEE
 15756                           fsr0h	equ	0xFEA
 15757                           fsr0l	equ	0xFE9
 15758                           wreg	equ	0xFE8
 15759                           postinc1	equ	0xFE6
 15760                           postdec1	equ	0xFE5
 15761                           plusw1	equ	0xFE3
 15762                           fsr1h	equ	0xFE2
 15763                           fsr1l	equ	0xFE1
 15764                           indf2	equ	0xFDF
 15765                           postinc2	equ	0xFDE
 15766                           postdec2	equ	0xFDD
 15767                           plusw2	equ	0xFDB
 15768                           fsr2h	equ	0xFDA
 15769                           fsr2l	equ	0xFD9
 15770                           status	equ	0xFD8
 15771                           
 15772 ;; *************** function _ExecuteLinkCheck *****************
 15773 ;; Defined at:
 15774 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15775 ;; Parameters:    Size  Location     Type
 15776 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15777 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;		None
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  2    4[BANK0 ] PTR unsigned char 
 15782 ;; Registers used:
 15783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15784 ;; Tracked objects:
 15785 ;;		On entry : F/0
 15786 ;;		On exit  : F/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15793 ;;Total ram usage:        2 bytes
 15794 ;; Hardware stack levels used:    1
 15795 ;; Hardware stack levels required when called:    7
 15796 ;; This function calls:
 15797 ;;		Nothing
 15798 ;; This function is called by:
 15799 ;;		_MacExecuteCommands
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           	psect	text84
 15804  00701E                     __ptext84:
 15805                           	opt stack 0
 15806  00701E                     _ExecuteLinkCheck:
 15807                           	opt stack 18
 15808                           
 15809                           ; BSR set to: 0
 15810                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15811                           
 15812                           ; BSR set to: 0
 15813                           ;incstack = 0
 15814  00701E  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15815  007022  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15816  007026  50DF               	movf	indf2,w,c
 15817  007028  0102               	movlb	2	; () banked
 15818  00702A  6FDD               	movwf	(_loRa+221)& (0+255),b
 15819                           
 15820                           ; BSR set to: 2
 15821  00702C  0100               	movlb	0	; () banked
 15822  00702E  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15823  007030  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15827  007032  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15828  007036  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15829  00703A  50DF               	movf	indf2,w,c
 15830  00703C  0102               	movlb	2	; () banked
 15831  00703E  6FDE               	movwf	(_loRa+222)& (0+255),b
 15832  007040  0100               	movlb	0	; () banked
 15833  007042  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15834  007044  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15835                           
 15836                           ; BSR set to: 0
 15837                           ;lorawan.c: 1656: return ptr;
 15838  007046  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15839  00704A  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15840                           
 15841                           ; BSR set to: 0
 15842  00704E  0012               	return		;funcret
 15843  007050                     __end_of_ExecuteLinkCheck:
 15844                           	opt stack 0
 15845                           tosu	equ	0xFFF
 15846                           tosh	equ	0xFFE
 15847                           tosl	equ	0xFFD
 15848                           pclath	equ	0xFFA
 15849                           tblptru	equ	0xFF8
 15850                           tblptrh	equ	0xFF7
 15851                           tblptrl	equ	0xFF6
 15852                           tablat	equ	0xFF5
 15853                           prodh	equ	0xFF4
 15854                           prodl	equ	0xFF3
 15855                           intcon	equ	0xFF2
 15856                           intcon2	equ	0xFF1
 15857                           intcon3	equ	0xFF0
 15858                           indf0	equ	0xFEF
 15859                           postinc0	equ	0xFEE
 15860                           fsr0h	equ	0xFEA
 15861                           fsr0l	equ	0xFE9
 15862                           wreg	equ	0xFE8
 15863                           postinc1	equ	0xFE6
 15864                           postdec1	equ	0xFE5
 15865                           plusw1	equ	0xFE3
 15866                           fsr1h	equ	0xFE2
 15867                           fsr1l	equ	0xFE1
 15868                           indf2	equ	0xFDF
 15869                           postinc2	equ	0xFDE
 15870                           postdec2	equ	0xFDD
 15871                           plusw2	equ	0xFDB
 15872                           fsr2h	equ	0xFDA
 15873                           fsr2l	equ	0xFD9
 15874                           status	equ	0xFD8
 15875                           
 15876 ;; *************** function _ExecuteLinkAdr *****************
 15877 ;; Defined at:
 15878 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15879 ;; Parameters:    Size  Location     Type
 15880 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15881 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15882 ;; Auto vars:     Size  Location     Type
 15883 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15884 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15885 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15886 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15887 ;;  txPower         1   22[BANK0 ] unsigned char 
 15888 ;; Return value:  Size  Location     Type
 15889 ;;                  2   17[BANK0 ] PTR unsigned char 
 15890 ;; Registers used:
 15891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15892 ;; Tracked objects:
 15893 ;;		On entry : F/0
 15894 ;;		On exit  : F/2
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15898 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15899 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15900 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15901 ;;Total ram usage:        9 bytes
 15902 ;; Hardware stack levels used:    1
 15903 ;; Hardware stack levels required when called:   10
 15904 ;; This function calls:
 15905 ;;		_EnableChannels
 15906 ;;		_UpdateCurrentDataRate
 15907 ;;		_UpdateTxPower
 15908 ;;		_ValidateChannelMask
 15909 ;;		_ValidateChannelMaskCntl
 15910 ;;		_ValidateDataRate
 15911 ;;		_ValidateTxPower
 15912 ;; This function is called by:
 15913 ;;		_MacExecuteCommands
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           	psect	text85
 15918  00351E                     __ptext85:
 15919                           	opt stack 0
 15920  00351E                     _ExecuteLinkAdr:
 15921                           	opt stack 15
 15922                           
 15923                           ; BSR set to: 0
 15924                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15925                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15926                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15927                           
 15928                           ; BSR set to: 0
 15929                           ;incstack = 0
 15930  00351E  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15931  003522  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15932  003526  50DF               	movf	indf2,w,c
 15933  003528  0B0F               	andlw	15
 15934  00352A  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15935                           
 15936                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15937  00352C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15938  003530  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15939  003534  50DF               	movf	indf2,w,c
 15940  003536  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15941  003538  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15942  00353A  0B0F               	andlw	15
 15943  00353C  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;lorawan_eu.c: 620: ptr++;
 15947  00353E  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15948  003540  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15949                           
 15950                           ; BSR set to: 0
 15951                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15952  003542  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15953  003546  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15954  00354A  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15955  00354E  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15956                           
 15957                           ; BSR set to: 0
 15958                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 15959  003552  0E02               	movlw	2
 15960  003554  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 15961  003556  0E00               	movlw	0
 15962  003558  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15963                           
 15964                           ; BSR set to: 0
 15965                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 15966                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 15967  00355A  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 15968  00355E  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 15969                           
 15970                           ; BSR set to: 0
 15971  003562  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15972  003564  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15973                           
 15974                           ; BSR set to: 0
 15975                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 15976  003566  0102               	movlb	2	; () banked
 15977  003568  AD02               	btfss	(_loRa+2)& (0+255),6,b
 15978  00356A  D092               	goto	l13509
 15979                           
 15980                           ; BSR set to: 2
 15981                           ;lorawan_eu.c: 627: {
 15982                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 15983  00356C  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 15984  003570  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 15985  003574  0100               	movlb	0	; () banked
 15986  003576  38DF               	swapf	223,w,c
 15987  003578  0B07               	andlw	7
 15988  00357A  EC1C  F03B         	call	_ValidateChannelMaskCntl
 15989  00357E  0900               	iorlw	0
 15990  003580  E112               	bnz	l13477
 15991                           
 15992                           ; BSR set to: 0
 15993  003582  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 15994  003586  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 15995  00358A  EC70  F037         	call	_ValidateChannelMask	;wreg free
 15996  00358E  0900               	iorlw	0
 15997  003590  E10A               	bnz	l13477
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;lorawan_eu.c: 629: {
 16001                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16002  003592  0102               	movlb	2	; () banked
 16003  003594  51A7               	movf	(_loRa+167)& (0+255),w,b
 16004  003596  0D02               	mullw	2
 16005  003598  0EA9               	movlw	low (_loRa+169)
 16006  00359A  24F3               	addwf	prodl,w,c
 16007  00359C  6ED9               	movwf	fsr2l,c
 16008  00359E  0E02               	movlw	high (_loRa+169)
 16009  0035A0  20F4               	addwfc	prodh,w,c
 16010  0035A2  6EDA               	movwf	fsr2h,c
 16011  0035A4  80DF               	bsf	indf2,0,c
 16012  0035A6                     l13477:
 16013                           
 16014                           ;lorawan_eu.c: 631: }
 16015                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16016  0035A6  0100               	movlb	0	; () banked
 16017  0035A8  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16018  0035AA  EC48  F03B         	call	_ValidateDataRate
 16019  0035AE  0900               	iorlw	0
 16020  0035B0  E112               	bnz	l13485
 16021                           
 16022                           ; BSR set to: 0
 16023  0035B2  0102               	movlb	2	; () banked
 16024  0035B4  51EB               	movf	(_loRa+235)& (0+255),w,b
 16025  0035B6  0100               	movlb	0	; () banked
 16026  0035B8  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16027  0035BA  E30D               	bnc	l13485
 16028                           
 16029                           ; BSR set to: 0
 16030  0035BC  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16031  0035BE  0102               	movlb	2	; () banked
 16032  0035C0  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16033  0035C2  E309               	bnc	l13485
 16034                           
 16035                           ; BSR set to: 2
 16036                           ;lorawan_eu.c: 634: {
 16037                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16038  0035C4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16039  0035C6  0D02               	mullw	2
 16040  0035C8  0EA9               	movlw	low (_loRa+169)
 16041  0035CA  24F3               	addwf	prodl,w,c
 16042  0035CC  6ED9               	movwf	fsr2l,c
 16043  0035CE  0E02               	movlw	high (_loRa+169)
 16044  0035D0  20F4               	addwfc	prodh,w,c
 16045  0035D2  6EDA               	movwf	fsr2h,c
 16046  0035D4  82DF               	bsf	indf2,1,c
 16047  0035D6                     l13485:
 16048                           
 16049                           ;lorawan_eu.c: 636: }
 16050                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16051  0035D6  0100               	movlb	0	; () banked
 16052  0035D8  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16053  0035DA  EC9B  F039         	call	_ValidateTxPower
 16054  0035DE  0900               	iorlw	0
 16055  0035E0  E10A               	bnz	l1099
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;lorawan_eu.c: 639: {
 16059                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16060  0035E2  0102               	movlb	2	; () banked
 16061  0035E4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16062  0035E6  0D02               	mullw	2
 16063  0035E8  0EA9               	movlw	low (_loRa+169)
 16064  0035EA  24F3               	addwf	prodl,w,c
 16065  0035EC  6ED9               	movwf	fsr2l,c
 16066  0035EE  0E02               	movlw	high (_loRa+169)
 16067  0035F0  20F4               	addwfc	prodh,w,c
 16068  0035F2  6EDA               	movwf	fsr2h,c
 16069  0035F4  84DF               	bsf	indf2,2,c
 16070  0035F6                     l1099:
 16071                           
 16072                           ;lorawan_eu.c: 641: }
 16073                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16074  0035F6  0102               	movlb	2	; () banked
 16075  0035F8  51A7               	movf	(_loRa+167)& (0+255),w,b
 16076  0035FA  0D02               	mullw	2
 16077  0035FC  0EA9               	movlw	low (_loRa+169)
 16078  0035FE  24F3               	addwf	prodl,w,c
 16079  003600  6ED9               	movwf	fsr2l,c
 16080  003602  0E02               	movlw	high (_loRa+169)
 16081  003604  20F4               	addwfc	prodh,w,c
 16082  003606  6EDA               	movwf	fsr2h,c
 16083  003608  A4DF               	btfss	indf2,2,c
 16084  00360A  D05D               	goto	l13511
 16085                           
 16086                           ; BSR set to: 2
 16087  00360C  51A7               	movf	(_loRa+167)& (0+255),w,b
 16088  00360E  0D02               	mullw	2
 16089  003610  0EA9               	movlw	low (_loRa+169)
 16090  003612  24F3               	addwf	prodl,w,c
 16091  003614  6ED9               	movwf	fsr2l,c
 16092  003616  0E02               	movlw	high (_loRa+169)
 16093  003618  20F4               	addwfc	prodh,w,c
 16094  00361A  6EDA               	movwf	fsr2h,c
 16095  00361C  A2DF               	btfss	indf2,1,c
 16096  00361E  D053               	goto	l13511
 16097                           
 16098                           ; BSR set to: 2
 16099  003620  51A7               	movf	(_loRa+167)& (0+255),w,b
 16100  003622  0D02               	mullw	2
 16101  003624  0EA9               	movlw	low (_loRa+169)
 16102  003626  24F3               	addwf	prodl,w,c
 16103  003628  6ED9               	movwf	fsr2l,c
 16104  00362A  0E02               	movlw	high (_loRa+169)
 16105  00362C  20F4               	addwfc	prodh,w,c
 16106  00362E  6EDA               	movwf	fsr2h,c
 16107  003630  A0DF               	btfss	indf2,0,c
 16108  003632  D049               	goto	l13511
 16109                           
 16110                           ; BSR set to: 2
 16111                           ;lorawan_eu.c: 644: {
 16112                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16113  003634  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16114  003638  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16115  00363C  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16116  003640  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16117  003644  0100               	movlb	0	; () banked
 16118  003646  38DF               	swapf	223,w,c
 16119  003648  0B07               	andlw	7
 16120  00364A  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16121  00364C  EC33  F03B         	call	_EnableChannels	;wreg free
 16122                           
 16123                           ; BSR set to: 0
 16124                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16125  003650  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16126  003652  EC19  F03C         	call	_UpdateTxPower
 16127                           
 16128                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16129  003656  0102               	movlb	2	; () banked
 16130  003658  8903               	bsf	(_loRa+3)& (0+255),4,b
 16131                           
 16132                           ; BSR set to: 2
 16133                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16134  00365A  0100               	movlb	0	; () banked
 16135  00365C  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16136  00365E  EC1D  F03C         	call	_UpdateCurrentDataRate
 16137                           
 16138                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16139  003662  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16140  003666  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16141  00366A  0100               	movlb	0	; () banked
 16142  00366C  50DF               	movf	223,w,c
 16143  00366E  0B0F               	andlw	15
 16144  003670  E103               	bnz	l13505
 16145                           
 16146                           ; BSR set to: 0
 16147                           ;lorawan_eu.c: 652: {
 16148                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16149  003672  0102               	movlb	2	; () banked
 16150  003674  6BD6               	clrf	(_loRa+214)& (0+255),b
 16151                           
 16152                           ;lorawan_eu.c: 654: }
 16153  003676  D00A               	goto	l13507
 16154  003678                     l13505:
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;lorawan_eu.c: 655: else
 16158                           ;lorawan_eu.c: 656: {
 16159                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16160  003678  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16161  00367C  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16162  003680  50DF               	movf	223,w,c
 16163  003682  0B0F               	andlw	15
 16164  003684  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16165  003686  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16166  003688  0102               	movlb	2	; () banked
 16167  00368A  6FD6               	movwf	(_loRa+214)& (0+255),b
 16168  00368C                     l13507:
 16169                           
 16170                           ; BSR set to: 2
 16171                           ;lorawan_eu.c: 658: }
 16172                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16173  00368C  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16174  00368E  D01B               	goto	l13511
 16175  003690                     l13509:
 16176                           
 16177                           ; BSR set to: 2
 16178                           ;lorawan_eu.c: 662: else
 16179                           ;lorawan_eu.c: 663: {
 16180                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16181  003690  51A7               	movf	(_loRa+167)& (0+255),w,b
 16182  003692  0D02               	mullw	2
 16183  003694  0EA9               	movlw	low (_loRa+169)
 16184  003696  24F3               	addwf	prodl,w,c
 16185  003698  6ED9               	movwf	fsr2l,c
 16186  00369A  0E02               	movlw	high (_loRa+169)
 16187  00369C  20F4               	addwfc	prodh,w,c
 16188  00369E  6EDA               	movwf	fsr2h,c
 16189  0036A0  90DF               	bcf	indf2,0,c
 16190                           
 16191                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16192  0036A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16193  0036A4  0D02               	mullw	2
 16194  0036A6  0EA9               	movlw	low (_loRa+169)
 16195  0036A8  24F3               	addwf	prodl,w,c
 16196  0036AA  6ED9               	movwf	fsr2l,c
 16197  0036AC  0E02               	movlw	high (_loRa+169)
 16198  0036AE  20F4               	addwfc	prodh,w,c
 16199  0036B0  6EDA               	movwf	fsr2h,c
 16200  0036B2  92DF               	bcf	indf2,1,c
 16201                           
 16202                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16203  0036B4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16204  0036B6  0D02               	mullw	2
 16205  0036B8  0EA9               	movlw	low (_loRa+169)
 16206  0036BA  24F3               	addwf	prodl,w,c
 16207  0036BC  6ED9               	movwf	fsr2l,c
 16208  0036BE  0E02               	movlw	high (_loRa+169)
 16209  0036C0  20F4               	addwfc	prodh,w,c
 16210  0036C2  6EDA               	movwf	fsr2h,c
 16211  0036C4  94DF               	bcf	indf2,2,c
 16212  0036C6                     l13511:
 16213                           
 16214                           ; BSR set to: 2
 16215                           ;lorawan_eu.c: 667: }
 16216                           ;lorawan_eu.c: 669: return ptr;
 16217  0036C6  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16218  0036CA  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16219                           
 16220                           ; BSR set to: 2
 16221  0036CE  0012               	return		;funcret
 16222  0036D0                     __end_of_ExecuteLinkAdr:
 16223                           	opt stack 0
 16224                           tosu	equ	0xFFF
 16225                           tosh	equ	0xFFE
 16226                           tosl	equ	0xFFD
 16227                           pclath	equ	0xFFA
 16228                           tblptru	equ	0xFF8
 16229                           tblptrh	equ	0xFF7
 16230                           tblptrl	equ	0xFF6
 16231                           tablat	equ	0xFF5
 16232                           prodh	equ	0xFF4
 16233                           prodl	equ	0xFF3
 16234                           intcon	equ	0xFF2
 16235                           intcon2	equ	0xFF1
 16236                           intcon3	equ	0xFF0
 16237                           indf0	equ	0xFEF
 16238                           postinc0	equ	0xFEE
 16239                           fsr0h	equ	0xFEA
 16240                           fsr0l	equ	0xFE9
 16241                           wreg	equ	0xFE8
 16242                           postinc1	equ	0xFE6
 16243                           postdec1	equ	0xFE5
 16244                           plusw1	equ	0xFE3
 16245                           fsr1h	equ	0xFE2
 16246                           fsr1l	equ	0xFE1
 16247                           indf2	equ	0xFDF
 16248                           postinc2	equ	0xFDE
 16249                           postdec2	equ	0xFDD
 16250                           plusw2	equ	0xFDB
 16251                           fsr2h	equ	0xFDA
 16252                           fsr2l	equ	0xFD9
 16253                           status	equ	0xFD8
 16254                           
 16255 ;; *************** function _ValidateTxPower *****************
 16256 ;; Defined at:
 16257 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16258 ;; Parameters:    Size  Location     Type
 16259 ;;  txPowerNew      1    wreg     unsigned char 
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16262 ;;  result          1    4[BANK0 ] enum E8016
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      enum E8016
 16265 ;; Registers used:
 16266 ;;		wreg, status,2, status,0
 16267 ;; Tracked objects:
 16268 ;;		On entry : F/0
 16269 ;;		On exit  : F/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16276 ;;Total ram usage:        2 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    7
 16279 ;; This function calls:
 16280 ;;		Nothing
 16281 ;; This function is called by:
 16282 ;;		_ExecuteLinkAdr
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text86
 16287  007336                     __ptext86:
 16288                           	opt stack 0
 16289  007336                     _ValidateTxPower:
 16290                           	opt stack 17
 16291                           
 16292                           ; BSR set to: 2
 16293                           ;incstack = 0
 16294                           ;ValidateTxPower@txPowerNew stored from wreg
 16295  007336  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16296                           
 16297                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16298  007338  0100               	movlb	0	; () banked
 16299  00733A  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16300                           
 16301                           ; BSR set to: 0
 16302                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16303  00733C  0102               	movlb	2	; () banked
 16304  00733E  51A4               	movf	(_loRa+164)& (0+255),w,b
 16305  007340  E103               	bnz	l12899
 16306                           
 16307                           ; BSR set to: 2
 16308  007342  0100               	movlb	0	; () banked
 16309  007344  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16310  007346  E004               	bz	l12901
 16311  007348                     l12899:
 16312  007348  0E05               	movlw	5
 16313  00734A  0100               	movlb	0	; () banked
 16314  00734C  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16315  00734E  D002               	goto	l1083
 16316  007350                     l12901:
 16317                           
 16318                           ; BSR set to: 0
 16319                           ;lorawan_eu.c: 587: {
 16320                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16321  007350  0E03               	movlw	3
 16322  007352  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16323  007354                     l1083:
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;lorawan_eu.c: 589: }
 16327                           ;lorawan_eu.c: 591: return result;
 16328  007354  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16329                           
 16330                           ; BSR set to: 0
 16331  007356  0012               	return		;funcret
 16332  007358                     __end_of_ValidateTxPower:
 16333                           	opt stack 0
 16334                           tosu	equ	0xFFF
 16335                           tosh	equ	0xFFE
 16336                           tosl	equ	0xFFD
 16337                           pclath	equ	0xFFA
 16338                           tblptru	equ	0xFF8
 16339                           tblptrh	equ	0xFF7
 16340                           tblptrl	equ	0xFF6
 16341                           tablat	equ	0xFF5
 16342                           prodh	equ	0xFF4
 16343                           prodl	equ	0xFF3
 16344                           intcon	equ	0xFF2
 16345                           intcon2	equ	0xFF1
 16346                           intcon3	equ	0xFF0
 16347                           indf0	equ	0xFEF
 16348                           postinc0	equ	0xFEE
 16349                           fsr0h	equ	0xFEA
 16350                           fsr0l	equ	0xFE9
 16351                           wreg	equ	0xFE8
 16352                           postinc1	equ	0xFE6
 16353                           postdec1	equ	0xFE5
 16354                           plusw1	equ	0xFE3
 16355                           fsr1h	equ	0xFE2
 16356                           fsr1l	equ	0xFE1
 16357                           indf2	equ	0xFDF
 16358                           postinc2	equ	0xFDE
 16359                           postdec2	equ	0xFDD
 16360                           plusw2	equ	0xFDB
 16361                           fsr2h	equ	0xFDA
 16362                           fsr2l	equ	0xFD9
 16363                           status	equ	0xFD8
 16364                           
 16365 ;; *************** function _ValidateDataRate *****************
 16366 ;; Defined at:
 16367 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  dataRate        1    wreg     unsigned char 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;  dataRate        1    4[BANK0 ] unsigned char 
 16372 ;;  result          1    5[BANK0 ] enum E8016
 16373 ;; Return value:  Size  Location     Type
 16374 ;;                  1    wreg      enum E8016
 16375 ;; Registers used:
 16376 ;;		wreg, status,2, status,0
 16377 ;; Tracked objects:
 16378 ;;		On entry : F/0
 16379 ;;		On exit  : F/0
 16380 ;;		Unchanged: 0/0
 16381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;Total ram usage:        2 bytes
 16387 ;; Hardware stack levels used:    1
 16388 ;; Hardware stack levels required when called:    7
 16389 ;; This function calls:
 16390 ;;		Nothing
 16391 ;; This function is called by:
 16392 ;;		_ExecuteLinkAdr
 16393 ;;		_ExecuteRxParamSetupReq
 16394 ;;		_ValidateDataRange
 16395 ;; This function uses a non-reentrant model
 16396 ;;
 16397                           
 16398                           	psect	text87
 16399  007690                     __ptext87:
 16400                           	opt stack 0
 16401  007690                     _ValidateDataRate:
 16402                           	opt stack 17
 16403                           
 16404                           ; BSR set to: 0
 16405                           ;incstack = 0
 16406                           ;ValidateDataRate@dataRate stored from wreg
 16407  007690  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 16408                           
 16409                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 16410  007692  0100               	movlb	0	; () banked
 16411  007694  6B65               	clrf	ValidateDataRate@result& (0+255),b
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 16415  007696  0E07               	movlw	7
 16416  007698  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 16417  00769A  D002               	goto	l1079
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;lorawan_eu.c: 575: {
 16421                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 16422  00769C  0E03               	movlw	3
 16423  00769E  6F65               	movwf	ValidateDataRate@result& (0+255),b
 16424  0076A0                     l1079:
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;lorawan_eu.c: 577: }
 16428                           ;lorawan_eu.c: 579: return result;
 16429  0076A0  5165               	movf	ValidateDataRate@result& (0+255),w,b
 16430                           
 16431                           ; BSR set to: 0
 16432  0076A2  0012               	return		;funcret
 16433  0076A4                     __end_of_ValidateDataRate:
 16434                           	opt stack 0
 16435                           tosu	equ	0xFFF
 16436                           tosh	equ	0xFFE
 16437                           tosl	equ	0xFFD
 16438                           pclath	equ	0xFFA
 16439                           tblptru	equ	0xFF8
 16440                           tblptrh	equ	0xFF7
 16441                           tblptrl	equ	0xFF6
 16442                           tablat	equ	0xFF5
 16443                           prodh	equ	0xFF4
 16444                           prodl	equ	0xFF3
 16445                           intcon	equ	0xFF2
 16446                           intcon2	equ	0xFF1
 16447                           intcon3	equ	0xFF0
 16448                           indf0	equ	0xFEF
 16449                           postinc0	equ	0xFEE
 16450                           fsr0h	equ	0xFEA
 16451                           fsr0l	equ	0xFE9
 16452                           wreg	equ	0xFE8
 16453                           postinc1	equ	0xFE6
 16454                           postdec1	equ	0xFE5
 16455                           plusw1	equ	0xFE3
 16456                           fsr1h	equ	0xFE2
 16457                           fsr1l	equ	0xFE1
 16458                           indf2	equ	0xFDF
 16459                           postinc2	equ	0xFDE
 16460                           postdec2	equ	0xFDD
 16461                           plusw2	equ	0xFDB
 16462                           fsr2h	equ	0xFDA
 16463                           fsr2l	equ	0xFD9
 16464                           status	equ	0xFD8
 16465                           
 16466 ;; *************** function _ValidateChannelMaskCntl *****************
 16467 ;; Defined at:
 16468 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16469 ;; Parameters:    Size  Location     Type
 16470 ;;  channelMaskC    1    wreg     unsigned char 
 16471 ;; Auto vars:     Size  Location     Type
 16472 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16473 ;;  result          1    4[BANK0 ] enum E8016
 16474 ;; Return value:  Size  Location     Type
 16475 ;;                  1    wreg      enum E8016
 16476 ;; Registers used:
 16477 ;;		wreg, status,2, status,0
 16478 ;; Tracked objects:
 16479 ;;		On entry : F/0
 16480 ;;		On exit  : F/0
 16481 ;;		Unchanged: 0/0
 16482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;Total ram usage:        2 bytes
 16488 ;; Hardware stack levels used:    1
 16489 ;; Hardware stack levels required when called:    7
 16490 ;; This function calls:
 16491 ;;		Nothing
 16492 ;; This function is called by:
 16493 ;;		_ExecuteLinkAdr
 16494 ;; This function uses a non-reentrant model
 16495 ;;
 16496                           
 16497                           	psect	text88
 16498  007638                     __ptext88:
 16499                           	opt stack 0
 16500  007638                     _ValidateChannelMaskCntl:
 16501                           	opt stack 17
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;incstack = 0
 16505                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16506  007638  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16507                           
 16508                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16509  00763A  0100               	movlb	0	; () banked
 16510  00763C  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16514  00763E  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16515  007640  E005               	bz	l1250
 16516                           
 16517                           ; BSR set to: 0
 16518  007642  0E06               	movlw	6
 16519  007644  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16520  007646  E002               	bz	l1250
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;lorawan_eu.c: 1142: {
 16524                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16525  007648  0E03               	movlw	3
 16526  00764A  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16527  00764C                     l1250:
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;lorawan_eu.c: 1144: }
 16531                           ;lorawan_eu.c: 1146: return result;
 16532  00764C  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16533                           
 16534                           ; BSR set to: 0
 16535  00764E  0012               	return		;funcret
 16536  007650                     __end_of_ValidateChannelMaskCntl:
 16537                           	opt stack 0
 16538                           tosu	equ	0xFFF
 16539                           tosh	equ	0xFFE
 16540                           tosl	equ	0xFFD
 16541                           pclath	equ	0xFFA
 16542                           tblptru	equ	0xFF8
 16543                           tblptrh	equ	0xFF7
 16544                           tblptrl	equ	0xFF6
 16545                           tablat	equ	0xFF5
 16546                           prodh	equ	0xFF4
 16547                           prodl	equ	0xFF3
 16548                           intcon	equ	0xFF2
 16549                           intcon2	equ	0xFF1
 16550                           intcon3	equ	0xFF0
 16551                           indf0	equ	0xFEF
 16552                           postinc0	equ	0xFEE
 16553                           fsr0h	equ	0xFEA
 16554                           fsr0l	equ	0xFE9
 16555                           wreg	equ	0xFE8
 16556                           postinc1	equ	0xFE6
 16557                           postdec1	equ	0xFE5
 16558                           plusw1	equ	0xFE3
 16559                           fsr1h	equ	0xFE2
 16560                           fsr1l	equ	0xFE1
 16561                           indf2	equ	0xFDF
 16562                           postinc2	equ	0xFDE
 16563                           postdec2	equ	0xFDD
 16564                           plusw2	equ	0xFDB
 16565                           fsr2h	equ	0xFDA
 16566                           fsr2l	equ	0xFD9
 16567                           status	equ	0xFD8
 16568                           
 16569 ;; *************** function _ValidateChannelMask *****************
 16570 ;; Defined at:
 16571 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16572 ;; Parameters:    Size  Location     Type
 16573 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16574 ;; Auto vars:     Size  Location     Type
 16575 ;;  i               1    6[BANK0 ] unsigned char 
 16576 ;; Return value:  Size  Location     Type
 16577 ;;                  1    wreg      enum E8016
 16578 ;; Registers used:
 16579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16580 ;; Tracked objects:
 16581 ;;		On entry : F/0
 16582 ;;		On exit  : F/0
 16583 ;;		Unchanged: 0/0
 16584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16589 ;;Total ram usage:        3 bytes
 16590 ;; Hardware stack levels used:    1
 16591 ;; Hardware stack levels required when called:    7
 16592 ;; This function calls:
 16593 ;;		Nothing
 16594 ;; This function is called by:
 16595 ;;		_ExecuteLinkAdr
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599                           	psect	text89
 16600  006EE0                     __ptext89:
 16601                           	opt stack 0
 16602  006EE0                     _ValidateChannelMask:
 16603                           	opt stack 17
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16607                           
 16608                           ; BSR set to: 0
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;incstack = 0
 16612  006EE0  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16613  006EE2  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16614  006EE4  B4D8               	btfsc	status,2,c
 16615  006EE6  0C03               	retlw	3
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;lorawan_eu.c: 1171: {
 16619                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16620  006EE8  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16621  006EEA                     l1264:
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;lorawan_eu.c: 1173: {
 16625                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16626  006EEA  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16627  006EEC  D00D               	goto	l12933
 16628                           
 16629                           ; BSR set to: 0
 16630  006EEE  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16631  006EF0  0D0E               	mullw	14
 16632  006EF2  0E0D               	movlw	low (_Channels+13)
 16633  006EF4  24F3               	addwf	prodl,w,c
 16634  006EF6  6ED9               	movwf	fsr2l,c
 16635  006EF8  0E04               	movlw	high (_Channels+13)
 16636  006EFA  20F4               	addwfc	prodh,w,c
 16637  006EFC  6EDA               	movwf	fsr2h,c
 16638  006EFE  50DF               	movf	indf2,w,c
 16639  006F00  0B07               	andlw	7
 16640  006F02  0A07               	xorlw	7
 16641  006F04  E001               	bz	l12933
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;lorawan_eu.c: 1175: {
 16645                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16646  006F06  0C03               	retlw	3
 16647  006F08                     l12933:
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;lorawan_eu.c: 1178: else
 16651                           ;lorawan_eu.c: 1179: {
 16652                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16653  006F08  90D8               	bcf	status,0,c
 16654  006F0A  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16655  006F0C  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16656                           
 16657                           ; BSR set to: 0
 16658  006F0E  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16659                           
 16660                           ; BSR set to: 0
 16661  006F10  0E0F               	movlw	15
 16662  006F12  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16663  006F14  D7EA               	goto	l1264
 16664  006F16  0C00               	retlw	0
 16665  006F18                     __end_of_ValidateChannelMask:
 16666                           	opt stack 0
 16667                           tosu	equ	0xFFF
 16668                           tosh	equ	0xFFE
 16669                           tosl	equ	0xFFD
 16670                           pclath	equ	0xFFA
 16671                           tblptru	equ	0xFF8
 16672                           tblptrh	equ	0xFF7
 16673                           tblptrl	equ	0xFF6
 16674                           tablat	equ	0xFF5
 16675                           prodh	equ	0xFF4
 16676                           prodl	equ	0xFF3
 16677                           intcon	equ	0xFF2
 16678                           intcon2	equ	0xFF1
 16679                           intcon3	equ	0xFF0
 16680                           indf0	equ	0xFEF
 16681                           postinc0	equ	0xFEE
 16682                           fsr0h	equ	0xFEA
 16683                           fsr0l	equ	0xFE9
 16684                           wreg	equ	0xFE8
 16685                           postinc1	equ	0xFE6
 16686                           postdec1	equ	0xFE5
 16687                           plusw1	equ	0xFE3
 16688                           fsr1h	equ	0xFE2
 16689                           fsr1l	equ	0xFE1
 16690                           indf2	equ	0xFDF
 16691                           postinc2	equ	0xFDE
 16692                           postdec2	equ	0xFDD
 16693                           plusw2	equ	0xFDB
 16694                           fsr2h	equ	0xFDA
 16695                           fsr2l	equ	0xFD9
 16696                           status	equ	0xFD8
 16697                           
 16698 ;; *************** function _UpdateTxPower *****************
 16699 ;; Defined at:
 16700 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16701 ;; Parameters:    Size  Location     Type
 16702 ;;  txPowerNew      1    wreg     unsigned char 
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16705 ;; Return value:  Size  Location     Type
 16706 ;;                  1    wreg      void 
 16707 ;; Registers used:
 16708 ;;		wreg
 16709 ;; Tracked objects:
 16710 ;;		On entry : F/0
 16711 ;;		On exit  : 0/0
 16712 ;;		Unchanged: 0/0
 16713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16717 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16718 ;;Total ram usage:        1 bytes
 16719 ;; Hardware stack levels used:    1
 16720 ;; Hardware stack levels required when called:    7
 16721 ;; This function calls:
 16722 ;;		Nothing
 16723 ;; This function is called by:
 16724 ;;		_ExecuteLinkAdr
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text90
 16729  007832                     __ptext90:
 16730                           	opt stack 0
 16731  007832                     _UpdateTxPower:
 16732                           	opt stack 17
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;incstack = 0
 16736                           ;UpdateTxPower@txPowerNew stored from wreg
 16737  007832  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16738                           
 16739                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16740  007834  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16741  007838  0012               	return		;funcret
 16742  00783A                     __end_of_UpdateTxPower:
 16743                           	opt stack 0
 16744                           tosu	equ	0xFFF
 16745                           tosh	equ	0xFFE
 16746                           tosl	equ	0xFFD
 16747                           pclath	equ	0xFFA
 16748                           tblptru	equ	0xFF8
 16749                           tblptrh	equ	0xFF7
 16750                           tblptrl	equ	0xFF6
 16751                           tablat	equ	0xFF5
 16752                           prodh	equ	0xFF4
 16753                           prodl	equ	0xFF3
 16754                           intcon	equ	0xFF2
 16755                           intcon2	equ	0xFF1
 16756                           intcon3	equ	0xFF0
 16757                           indf0	equ	0xFEF
 16758                           postinc0	equ	0xFEE
 16759                           fsr0h	equ	0xFEA
 16760                           fsr0l	equ	0xFE9
 16761                           wreg	equ	0xFE8
 16762                           postinc1	equ	0xFE6
 16763                           postdec1	equ	0xFE5
 16764                           plusw1	equ	0xFE3
 16765                           fsr1h	equ	0xFE2
 16766                           fsr1l	equ	0xFE1
 16767                           indf2	equ	0xFDF
 16768                           postinc2	equ	0xFDE
 16769                           postdec2	equ	0xFDD
 16770                           plusw2	equ	0xFDB
 16771                           fsr2h	equ	0xFDA
 16772                           fsr2l	equ	0xFD9
 16773                           status	equ	0xFD8
 16774                           
 16775 ;; *************** function _UpdateCurrentDataRate *****************
 16776 ;; Defined at:
 16777 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;  valueNew        1    wreg     unsigned char 
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;  valueNew        1    4[BANK0 ] unsigned char 
 16782 ;; Return value:  Size  Location     Type
 16783 ;;                  1    wreg      void 
 16784 ;; Registers used:
 16785 ;;		wreg
 16786 ;; Tracked objects:
 16787 ;;		On entry : F/0
 16788 ;;		On exit  : 0/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16795 ;;Total ram usage:        1 bytes
 16796 ;; Hardware stack levels used:    1
 16797 ;; Hardware stack levels required when called:    7
 16798 ;; This function calls:
 16799 ;;		Nothing
 16800 ;; This function is called by:
 16801 ;;		_ExecuteLinkAdr
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           	psect	text91
 16806  00783A                     __ptext91:
 16807                           	opt stack 0
 16808  00783A                     _UpdateCurrentDataRate:
 16809                           	opt stack 17
 16810                           
 16811                           ;incstack = 0
 16812                           ;UpdateCurrentDataRate@valueNew stored from wreg
 16813  00783A  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 16814                           
 16815                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 16816  00783C  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 16817  007840  0012               	return		;funcret
 16818  007842                     __end_of_UpdateCurrentDataRate:
 16819                           	opt stack 0
 16820                           tosu	equ	0xFFF
 16821                           tosh	equ	0xFFE
 16822                           tosl	equ	0xFFD
 16823                           pclath	equ	0xFFA
 16824                           tblptru	equ	0xFF8
 16825                           tblptrh	equ	0xFF7
 16826                           tblptrl	equ	0xFF6
 16827                           tablat	equ	0xFF5
 16828                           prodh	equ	0xFF4
 16829                           prodl	equ	0xFF3
 16830                           intcon	equ	0xFF2
 16831                           intcon2	equ	0xFF1
 16832                           intcon3	equ	0xFF0
 16833                           indf0	equ	0xFEF
 16834                           postinc0	equ	0xFEE
 16835                           fsr0h	equ	0xFEA
 16836                           fsr0l	equ	0xFE9
 16837                           wreg	equ	0xFE8
 16838                           postinc1	equ	0xFE6
 16839                           postdec1	equ	0xFE5
 16840                           plusw1	equ	0xFE3
 16841                           fsr1h	equ	0xFE2
 16842                           fsr1l	equ	0xFE1
 16843                           indf2	equ	0xFDF
 16844                           postinc2	equ	0xFDE
 16845                           postdec2	equ	0xFDD
 16846                           plusw2	equ	0xFDB
 16847                           fsr2h	equ	0xFDA
 16848                           fsr2l	equ	0xFD9
 16849                           status	equ	0xFD8
 16850                           
 16851 ;; *************** function _EnableChannels *****************
 16852 ;; Defined at:
 16853 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16854 ;; Parameters:    Size  Location     Type
 16855 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16856 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16857 ;; Auto vars:     Size  Location     Type
 16858 ;;		None
 16859 ;; Return value:  Size  Location     Type
 16860 ;;                  1    wreg      void 
 16861 ;; Registers used:
 16862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16863 ;; Tracked objects:
 16864 ;;		On entry : F/0
 16865 ;;		On exit  : F/0
 16866 ;;		Unchanged: 0/0
 16867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16868 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16871 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16872 ;;Total ram usage:        3 bytes
 16873 ;; Hardware stack levels used:    1
 16874 ;; Hardware stack levels required when called:    9
 16875 ;; This function calls:
 16876 ;;		_EnableChannels1
 16877 ;; This function is called by:
 16878 ;;		_ExecuteLinkAdr
 16879 ;; This function uses a non-reentrant model
 16880 ;;
 16881                           
 16882                           	psect	text92
 16883  007666                     __ptext92:
 16884                           	opt stack 0
 16885  007666                     _EnableChannels:
 16886                           	opt stack 15
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16890                           
 16891                           ;incstack = 0
 16892  007666  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16893  00766A  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16894  00766E  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16895  007672  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16896  007674  0E10               	movlw	16
 16897  007676  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16898  007678  EFD3  F033         	goto	_EnableChannels1	;wreg free
 16899  00767C                     __end_of_EnableChannels:
 16900                           	opt stack 0
 16901                           tosu	equ	0xFFF
 16902                           tosh	equ	0xFFE
 16903                           tosl	equ	0xFFD
 16904                           pclath	equ	0xFFA
 16905                           tblptru	equ	0xFF8
 16906                           tblptrh	equ	0xFF7
 16907                           tblptrl	equ	0xFF6
 16908                           tablat	equ	0xFF5
 16909                           prodh	equ	0xFF4
 16910                           prodl	equ	0xFF3
 16911                           intcon	equ	0xFF2
 16912                           intcon2	equ	0xFF1
 16913                           intcon3	equ	0xFF0
 16914                           indf0	equ	0xFEF
 16915                           postinc0	equ	0xFEE
 16916                           fsr0h	equ	0xFEA
 16917                           fsr0l	equ	0xFE9
 16918                           wreg	equ	0xFE8
 16919                           postinc1	equ	0xFE6
 16920                           postdec1	equ	0xFE5
 16921                           plusw1	equ	0xFE3
 16922                           fsr1h	equ	0xFE2
 16923                           fsr1l	equ	0xFE1
 16924                           indf2	equ	0xFDF
 16925                           postinc2	equ	0xFDE
 16926                           postdec2	equ	0xFDD
 16927                           plusw2	equ	0xFDB
 16928                           fsr2h	equ	0xFDA
 16929                           fsr2l	equ	0xFD9
 16930                           status	equ	0xFD8
 16931                           
 16932 ;; *************** function _EnableChannels1 *****************
 16933 ;; Defined at:
 16934 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16937 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16938 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16939 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;  i               1   13[BANK0 ] unsigned char 
 16942 ;; Return value:  Size  Location     Type
 16943 ;;                  1    wreg      void 
 16944 ;; Registers used:
 16945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16946 ;; Tracked objects:
 16947 ;;		On entry : F/0
 16948 ;;		On exit  : F/0
 16949 ;;		Unchanged: 0/0
 16950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16951 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16954 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16955 ;;Total ram usage:        6 bytes
 16956 ;; Hardware stack levels used:    1
 16957 ;; Hardware stack levels required when called:    8
 16958 ;; This function calls:
 16959 ;;		_UpdateChannelIdStatus
 16960 ;; This function is called by:
 16961 ;;		_EnableChannels
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           	psect	text93
 16966  0067A6                     __ptext93:
 16967                           	opt stack 0
 16968  0067A6                     _EnableChannels1:
 16969                           	opt stack 15
 16970                           
 16971                           ; BSR set to: 0
 16972                           ;lorawan_eu.c: 1195: uint8_t i;
 16973                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;incstack = 0
 16977  0067A6  0E06               	movlw	6
 16978  0067A8  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16979  0067AA  E10E               	bnz	l12643
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;lorawan_eu.c: 1198: {
 16983                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16984  0067AC  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16985  0067B0  D007               	goto	l12641
 16986  0067B2                     l12637:
 16987                           
 16988                           ; BSR set to: 0
 16989                           ;lorawan_eu.c: 1200: {
 16990                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 16991  0067B2  0E01               	movlw	1
 16992  0067B4  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16993  0067B6  516D               	movf	EnableChannels1@i& (0+255),w,b
 16994  0067B8  ECAF  F023         	call	_UpdateChannelIdStatus
 16995                           
 16996                           ; BSR set to: 2
 16997  0067BC  0100               	movlb	0	; () banked
 16998  0067BE  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16999  0067C0                     l12641:
 17000                           
 17001                           ; BSR set to: 0
 17002  0067C0  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17003  0067C2  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17004  0067C4  E3F6               	bnc	l12637
 17005  0067C6  0012               	return	
 17006  0067C8                     l12643:
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 17010  0067C8  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17011  0067CA  A4D8               	btfss	status,2,c
 17012  0067CC  0012               	return	
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;lorawan_eu.c: 1205: {
 17016                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17017  0067CE  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17018  0067D2  D011               	goto	l12655
 17019  0067D4                     l1279:
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;lorawan_eu.c: 1207: {
 17023                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 17024  0067D4  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 17025  0067D6  D006               	goto	l12649
 17026                           
 17027                           ; BSR set to: 0
 17028                           ;lorawan_eu.c: 1209: {
 17029                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 17030  0067D8  0E01               	movlw	1
 17031  0067DA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17032  0067DC  516D               	movf	EnableChannels1@i& (0+255),w,b
 17033  0067DE  ECAF  F023         	call	_UpdateChannelIdStatus
 17034                           
 17035                           ;lorawan_eu.c: 1211: }
 17036  0067E2  D004               	goto	l12651
 17037  0067E4                     l12649:
 17038                           
 17039                           ; BSR set to: 0
 17040                           ;lorawan_eu.c: 1212: else
 17041                           ;lorawan_eu.c: 1213: {
 17042                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 17043  0067E4  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 17044  0067E6  516D               	movf	EnableChannels1@i& (0+255),w,b
 17045  0067E8  ECAF  F023         	call	_UpdateChannelIdStatus
 17046  0067EC                     l12651:
 17047                           
 17048                           ; BSR set to: 2
 17049                           ;lorawan_eu.c: 1215: }
 17050                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 17051  0067EC  0100               	movlb	0	; () banked
 17052  0067EE  90D8               	bcf	status,0,c
 17053  0067F0  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 17054  0067F2  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 17055                           
 17056                           ; BSR set to: 0
 17057  0067F4  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 17058  0067F6                     l12655:
 17059                           
 17060                           ; BSR set to: 0
 17061  0067F6  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17062  0067F8  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17063  0067FA  E3EC               	bnc	l1279
 17064                           
 17065                           ; BSR set to: 0
 17066  0067FC  0012               	return		;funcret
 17067  0067FE                     __end_of_EnableChannels1:
 17068                           	opt stack 0
 17069                           tosu	equ	0xFFF
 17070                           tosh	equ	0xFFE
 17071                           tosl	equ	0xFFD
 17072                           pclath	equ	0xFFA
 17073                           tblptru	equ	0xFF8
 17074                           tblptrh	equ	0xFF7
 17075                           tblptrl	equ	0xFF6
 17076                           tablat	equ	0xFF5
 17077                           prodh	equ	0xFF4
 17078                           prodl	equ	0xFF3
 17079                           intcon	equ	0xFF2
 17080                           intcon2	equ	0xFF1
 17081                           intcon3	equ	0xFF0
 17082                           indf0	equ	0xFEF
 17083                           postinc0	equ	0xFEE
 17084                           fsr0h	equ	0xFEA
 17085                           fsr0l	equ	0xFE9
 17086                           wreg	equ	0xFE8
 17087                           postinc1	equ	0xFE6
 17088                           postdec1	equ	0xFE5
 17089                           plusw1	equ	0xFE3
 17090                           fsr1h	equ	0xFE2
 17091                           fsr1l	equ	0xFE1
 17092                           indf2	equ	0xFDF
 17093                           postinc2	equ	0xFDE
 17094                           postdec2	equ	0xFDD
 17095                           plusw2	equ	0xFDB
 17096                           fsr2h	equ	0xFDA
 17097                           fsr2l	equ	0xFD9
 17098                           status	equ	0xFD8
 17099                           
 17100 ;; *************** function _UpdateChannelIdStatus *****************
 17101 ;; Defined at:
 17102 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;  channelId       1    wreg     unsigned char 
 17105 ;;  statusNew       1    4[BANK0 ] unsigned char 
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;  channelId       1    6[BANK0 ] unsigned char 
 17108 ;;  i               1    7[BANK0 ] unsigned char 
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  1    wreg      void 
 17111 ;; Registers used:
 17112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17113 ;; Tracked objects:
 17114 ;;		On entry : F/0
 17115 ;;		On exit  : F/2
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17118 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17120 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17121 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17122 ;;Total ram usage:        4 bytes
 17123 ;; Hardware stack levels used:    1
 17124 ;; Hardware stack levels required when called:    7
 17125 ;; This function calls:
 17126 ;;		Nothing
 17127 ;; This function is called by:
 17128 ;;		_LORAWAN_SetChannelIdStatus
 17129 ;;		_ExecuteNewChannel
 17130 ;;		_EnableChannels1
 17131 ;; This function uses a non-reentrant model
 17132 ;;
 17133                           
 17134                           	psect	text94
 17135  00475E                     __ptext94:
 17136                           	opt stack 0
 17137  00475E                     _UpdateChannelIdStatus:
 17138                           	opt stack 17
 17139                           
 17140                           ; BSR set to: 0
 17141                           ;incstack = 0
 17142                           ;UpdateChannelIdStatus@channelId stored from wreg
 17143  00475E  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 17144                           
 17145                           ;lorawan_eu.c: 1044: uint8_t i;
 17146                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17147  004760  0100               	movlb	0	; () banked
 17148  004762  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17149  004764  0D0E               	mullw	14
 17150  004766  0E04               	movlw	low (_Channels+4)
 17151  004768  24F3               	addwf	prodl,w,c
 17152  00476A  6ED9               	movwf	fsr2l,c
 17153  00476C  0E04               	movlw	high (_Channels+4)
 17154  00476E  20F4               	addwfc	prodh,w,c
 17155  004770  6EDA               	movwf	fsr2h,c
 17156  004772  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17157                           
 17158                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17159  004776  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17160  004778  0D0E               	mullw	14
 17161  00477A  0E04               	movlw	low (_Channels+4)
 17162  00477C  24F3               	addwf	prodl,w,c
 17163  00477E  6ED9               	movwf	fsr2l,c
 17164  004780  0E04               	movlw	high (_Channels+4)
 17165  004782  20F4               	addwfc	prodh,w,c
 17166  004784  6EDA               	movwf	fsr2h,c
 17167  004786  50DF               	movf	indf2,w,c
 17168  004788  E10C               	bnz	l12353
 17169                           
 17170                           ; BSR set to: 0
 17171                           ;lorawan_eu.c: 1048: {
 17172                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17173  00478A  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17174  00478C  0D0E               	mullw	14
 17175  00478E  0E08               	movlw	low (_Channels+8)
 17176  004790  24F3               	addwf	prodl,w,c
 17177  004792  6ED9               	movwf	fsr2l,c
 17178  004794  0E04               	movlw	high (_Channels+8)
 17179  004796  20F4               	addwfc	prodh,w,c
 17180  004798  6EDA               	movwf	fsr2h,c
 17181  00479A  6ADE               	clrf	postinc2,c
 17182  00479C  6ADE               	clrf	postinc2,c
 17183  00479E  6ADE               	clrf	postinc2,c
 17184  0047A0  6ADD               	clrf	postdec2,c
 17185  0047A2                     l12353:
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;lorawan_eu.c: 1051: }
 17189                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17190  0047A2  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17191  0047A4  D04E               	goto	l12367
 17192  0047A6                     l12355:
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;lorawan_eu.c: 1054: {
 17196                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17197  0047A6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17198  0047A8  0D0E               	mullw	14
 17199  0047AA  0E05               	movlw	low (_Channels+5)
 17200  0047AC  24F3               	addwf	prodl,w,c
 17201  0047AE  6ED9               	movwf	fsr2l,c
 17202  0047B0  0E04               	movlw	high (_Channels+5)
 17203  0047B2  20F4               	addwfc	prodh,w,c
 17204  0047B4  6EDA               	movwf	fsr2h,c
 17205  0047B6  50DF               	movf	223,w,c
 17206  0047B8  0B0F               	andlw	15
 17207  0047BA  0100               	movlb	0	; () banked
 17208  0047BC  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17209  0047BE  0102               	movlb	2	; () banked
 17210  0047C0  51EB               	movf	(_loRa+235)& (0+255),w,b
 17211  0047C2  0100               	movlb	0	; () banked
 17212  0047C4  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17213  0047C6  E216               	bc	l1215
 17214                           
 17215                           ; BSR set to: 0
 17216  0047C8  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17217  0047CA  0D0E               	mullw	14
 17218  0047CC  0E04               	movlw	low (_Channels+4)
 17219  0047CE  24F3               	addwf	prodl,w,c
 17220  0047D0  6ED9               	movwf	fsr2l,c
 17221  0047D2  0E04               	movlw	high (_Channels+4)
 17222  0047D4  20F4               	addwfc	prodh,w,c
 17223  0047D6  6EDA               	movwf	fsr2h,c
 17224  0047D8  04DE               	decf	postinc2,w,c
 17225  0047DA  E10C               	bnz	l1215
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;lorawan_eu.c: 1056: {
 17229                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17230  0047DC  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17231  0047DE  0D0E               	mullw	14
 17232  0047E0  0E05               	movlw	low (_Channels+5)
 17233  0047E2  24F3               	addwf	prodl,w,c
 17234  0047E4  6ED9               	movwf	fsr2l,c
 17235  0047E6  0E04               	movlw	high (_Channels+5)
 17236  0047E8  20F4               	addwfc	prodh,w,c
 17237  0047EA  6EDA               	movwf	fsr2h,c
 17238  0047EC  50DF               	movf	223,w,c
 17239  0047EE  0B0F               	andlw	15
 17240  0047F0  0102               	movlb	2	; () banked
 17241  0047F2  6FEB               	movwf	(_loRa+235)& (0+255),b
 17242  0047F4                     l1215:
 17243                           
 17244                           ;lorawan_eu.c: 1058: }
 17245                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17246  0047F4  0100               	movlb	0	; () banked
 17247  0047F6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17248  0047F8  0D0E               	mullw	14
 17249  0047FA  0E05               	movlw	low (_Channels+5)
 17250  0047FC  24F3               	addwf	prodl,w,c
 17251  0047FE  6ED9               	movwf	fsr2l,c
 17252  004800  0E04               	movlw	high (_Channels+5)
 17253  004802  20F4               	addwfc	prodh,w,c
 17254  004804  6EDA               	movwf	fsr2h,c
 17255  004806  38DF               	swapf	223,w,c
 17256  004808  0B0F               	andlw	15
 17257  00480A  0102               	movlb	2	; () banked
 17258  00480C  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17259  00480E  D017               	goto	l12365
 17260                           
 17261                           ; BSR set to: 2
 17262  004810  0100               	movlb	0	; () banked
 17263  004812  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17264  004814  0D0E               	mullw	14
 17265  004816  0E04               	movlw	low (_Channels+4)
 17266  004818  24F3               	addwf	prodl,w,c
 17267  00481A  6ED9               	movwf	fsr2l,c
 17268  00481C  0E04               	movlw	high (_Channels+4)
 17269  00481E  20F4               	addwfc	prodh,w,c
 17270  004820  6EDA               	movwf	fsr2h,c
 17271  004822  04DE               	decf	postinc2,w,c
 17272  004824  E10C               	bnz	l12365
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;lorawan_eu.c: 1060: {
 17276                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17277  004826  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17278  004828  0D0E               	mullw	14
 17279  00482A  0E05               	movlw	low (_Channels+5)
 17280  00482C  24F3               	addwf	prodl,w,c
 17281  00482E  6ED9               	movwf	fsr2l,c
 17282  004830  0E04               	movlw	high (_Channels+5)
 17283  004832  20F4               	addwfc	prodh,w,c
 17284  004834  6EDA               	movwf	fsr2h,c
 17285  004836  38DF               	swapf	223,w,c
 17286  004838  0B0F               	andlw	15
 17287  00483A  0102               	movlb	2	; () banked
 17288  00483C  6FEC               	movwf	(_loRa+236)& (0+255),b
 17289  00483E                     l12365:
 17290  00483E  0100               	movlb	0	; () banked
 17291  004840  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17292  004842                     l12367:
 17293                           
 17294                           ; BSR set to: 0
 17295  004842  0102               	movlb	2	; () banked
 17296  004844  51ED               	movf	(_loRa+237)& (0+255),w,b
 17297  004846  0100               	movlb	0	; () banked
 17298  004848  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17299  00484A  E3AD               	bnc	l12355
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;lorawan_eu.c: 1062: }
 17303                           ;lorawan_eu.c: 1063: }
 17304                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17305  00484C  0102               	movlb	2	; () banked
 17306  00484E  51DF               	movf	(_loRa+223)& (0+255),w,b
 17307  004850  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17308  004852  E202               	bc	l12373
 17309                           
 17310                           ; BSR set to: 2
 17311                           ;lorawan_eu.c: 1066: {
 17312                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17313  004854  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17314  004858                     l12373:
 17315                           
 17316                           ; BSR set to: 2
 17317                           ;lorawan_eu.c: 1068: }
 17318                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17319  004858  51EB               	movf	(_loRa+235)& (0+255),w,b
 17320  00485A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17321  00485C  A0D8               	btfss	status,0,c
 17322                           
 17323                           ; BSR set to: 2
 17324                           ;lorawan_eu.c: 1071: {
 17325                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17326  00485E  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17327                           
 17328                           ; BSR set to: 2
 17329  004862  0012               	return		;funcret
 17330  004864                     __end_of_UpdateChannelIdStatus:
 17331                           	opt stack 0
 17332                           tosu	equ	0xFFF
 17333                           tosh	equ	0xFFE
 17334                           tosl	equ	0xFFD
 17335                           pclath	equ	0xFFA
 17336                           tblptru	equ	0xFF8
 17337                           tblptrh	equ	0xFF7
 17338                           tblptrl	equ	0xFF6
 17339                           tablat	equ	0xFF5
 17340                           prodh	equ	0xFF4
 17341                           prodl	equ	0xFF3
 17342                           intcon	equ	0xFF2
 17343                           intcon2	equ	0xFF1
 17344                           intcon3	equ	0xFF0
 17345                           indf0	equ	0xFEF
 17346                           postinc0	equ	0xFEE
 17347                           fsr0h	equ	0xFEA
 17348                           fsr0l	equ	0xFE9
 17349                           wreg	equ	0xFE8
 17350                           postinc1	equ	0xFE6
 17351                           postdec1	equ	0xFE5
 17352                           plusw1	equ	0xFE3
 17353                           fsr1h	equ	0xFE2
 17354                           fsr1l	equ	0xFE1
 17355                           indf2	equ	0xFDF
 17356                           postinc2	equ	0xFDE
 17357                           postdec2	equ	0xFDD
 17358                           plusw2	equ	0xFDB
 17359                           fsr2h	equ	0xFDA
 17360                           fsr2l	equ	0xFD9
 17361                           status	equ	0xFD8
 17362                           
 17363 ;; *************** function _ExecuteDutyCycle *****************
 17364 ;; Defined at:
 17365 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17366 ;; Parameters:    Size  Location     Type
 17367 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17368 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17369 ;; Auto vars:     Size  Location     Type
 17370 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17371 ;; Return value:  Size  Location     Type
 17372 ;;                  2    4[BANK0 ] PTR unsigned char 
 17373 ;; Registers used:
 17374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17375 ;; Tracked objects:
 17376 ;;		On entry : F/0
 17377 ;;		On exit  : D/0
 17378 ;;		Unchanged: 0/0
 17379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17382 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17383 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17384 ;;Total ram usage:        6 bytes
 17385 ;; Hardware stack levels used:    1
 17386 ;; Hardware stack levels required when called:    7
 17387 ;; This function calls:
 17388 ;;		Nothing
 17389 ;; This function is called by:
 17390 ;;		_MacExecuteCommands
 17391 ;; This function uses a non-reentrant model
 17392 ;;
 17393                           
 17394                           	psect	text95
 17395  00694C                     __ptext95:
 17396                           	opt stack 0
 17397  00694C                     _ExecuteDutyCycle:
 17398                           	opt stack 18
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17402                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17403                           
 17404                           ; BSR set to: 2
 17405                           ;incstack = 0
 17406  00694C  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17407  006950  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17408  006954  50DF               	movf	indf2,w,c
 17409  006956  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17410                           
 17411                           ; BSR set to: 0
 17412  006958  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17413  00695A  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17417  00695C  0E0F               	movlw	15
 17418  00695E  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17419  006960  D012               	goto	l1091
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;lorawan_eu.c: 600: {
 17423                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17424  006962  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17425  006966  0E01               	movlw	1
 17426  006968  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17427  00696A  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17428  00696C  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17429  00696E  D003               	goto	u14764
 17430  006970                     u14765:
 17431  006970  90D8               	bcf	status,0,c
 17432  006972  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17433  006974  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17434  006976                     u14764:
 17435  006976  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17436  006978  D7FB               	goto	u14765
 17437  00697A  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17438  00697E  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17439                           
 17440                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17441  006982  0102               	movlb	2	; () banked
 17442  006984  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17443  006986                     l1091:
 17444                           
 17445                           ;lorawan_eu.c: 603: }
 17446                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17447  006986  0100               	movlb	0	; () banked
 17448  006988  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17449  00698A  E102               	bnz	l13453
 17450                           
 17451                           ; BSR set to: 0
 17452                           ;lorawan_eu.c: 606: {
 17453                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17454  00698C  0102               	movlb	2	; () banked
 17455  00698E  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17456  006990                     l13453:
 17457                           
 17458                           ;lorawan_eu.c: 608: }
 17459                           ;lorawan_eu.c: 610: return ptr;
 17460  006990  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17461  006994  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17462  006998  0012               	return		;funcret
 17463  00699A                     __end_of_ExecuteDutyCycle:
 17464                           	opt stack 0
 17465                           tosu	equ	0xFFF
 17466                           tosh	equ	0xFFE
 17467                           tosl	equ	0xFFD
 17468                           pclath	equ	0xFFA
 17469                           tblptru	equ	0xFF8
 17470                           tblptrh	equ	0xFF7
 17471                           tblptrl	equ	0xFF6
 17472                           tablat	equ	0xFF5
 17473                           prodh	equ	0xFF4
 17474                           prodl	equ	0xFF3
 17475                           intcon	equ	0xFF2
 17476                           intcon2	equ	0xFF1
 17477                           intcon3	equ	0xFF0
 17478                           indf0	equ	0xFEF
 17479                           postinc0	equ	0xFEE
 17480                           fsr0h	equ	0xFEA
 17481                           fsr0l	equ	0xFE9
 17482                           wreg	equ	0xFE8
 17483                           postinc1	equ	0xFE6
 17484                           postdec1	equ	0xFE5
 17485                           plusw1	equ	0xFE3
 17486                           fsr1h	equ	0xFE2
 17487                           fsr1l	equ	0xFE1
 17488                           indf2	equ	0xFDF
 17489                           postinc2	equ	0xFDE
 17490                           postdec2	equ	0xFDD
 17491                           plusw2	equ	0xFDB
 17492                           fsr2h	equ	0xFDA
 17493                           fsr2l	equ	0xFD9
 17494                           status	equ	0xFD8
 17495                           
 17496 ;; *************** function _ExecuteDevStatus *****************
 17497 ;; Defined at:
 17498 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17499 ;; Parameters:    Size  Location     Type
 17500 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17501 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17502 ;; Auto vars:     Size  Location     Type
 17503 ;;		None
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  2    4[BANK0 ] PTR unsigned char 
 17506 ;; Registers used:
 17507 ;;		wreg, status,2, status,0
 17508 ;; Tracked objects:
 17509 ;;		On entry : F/0
 17510 ;;		On exit  : F/0
 17511 ;;		Unchanged: F/0
 17512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17516 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17517 ;;Total ram usage:        2 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:    7
 17520 ;; This function calls:
 17521 ;;		Nothing
 17522 ;; This function is called by:
 17523 ;;		_MacExecuteCommands
 17524 ;; This function uses a non-reentrant model
 17525 ;;
 17526                           
 17527                           	psect	text96
 17528  0077DC                     __ptext96:
 17529                           	opt stack 0
 17530  0077DC                     _ExecuteDevStatus:
 17531                           	opt stack 18
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;lorawan_eu.c: 674: return ptr;
 17535                           
 17536                           ;incstack = 0
 17537  0077DC  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17538  0077E0  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17539                           
 17540                           ; BSR set to: 0
 17541  0077E4  0012               	return		;funcret
 17542  0077E6                     __end_of_ExecuteDevStatus:
 17543                           	opt stack 0
 17544                           tosu	equ	0xFFF
 17545                           tosh	equ	0xFFE
 17546                           tosl	equ	0xFFD
 17547                           pclath	equ	0xFFA
 17548                           tblptru	equ	0xFF8
 17549                           tblptrh	equ	0xFF7
 17550                           tblptrl	equ	0xFF6
 17551                           tablat	equ	0xFF5
 17552                           prodh	equ	0xFF4
 17553                           prodl	equ	0xFF3
 17554                           intcon	equ	0xFF2
 17555                           intcon2	equ	0xFF1
 17556                           intcon3	equ	0xFF0
 17557                           indf0	equ	0xFEF
 17558                           postinc0	equ	0xFEE
 17559                           fsr0h	equ	0xFEA
 17560                           fsr0l	equ	0xFE9
 17561                           wreg	equ	0xFE8
 17562                           postinc1	equ	0xFE6
 17563                           postdec1	equ	0xFE5
 17564                           plusw1	equ	0xFE3
 17565                           fsr1h	equ	0xFE2
 17566                           fsr1l	equ	0xFE1
 17567                           indf2	equ	0xFDF
 17568                           postinc2	equ	0xFDE
 17569                           postdec2	equ	0xFDD
 17570                           plusw2	equ	0xFDB
 17571                           fsr2h	equ	0xFDA
 17572                           fsr2l	equ	0xFD9
 17573                           status	equ	0xFD8
 17574                           
 17575 ;; *************** function _LORAWAN_Send *****************
 17576 ;; Defined at:
 17577 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17578 ;; Parameters:    Size  Location     Type
 17579 ;;  confirmed       1    wreg     enum E7984
 17580 ;;  port            1  118[BANK0 ] unsigned char 
 17581 ;;  buffer          2  119[BANK0 ] PTR void 
 17582 ;;		 -> payload(4), NULL(0), 
 17583 ;;  bufferLength    1  121[BANK0 ] unsigned char 
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;  confirmed       1  124[BANK0 ] enum E7984
 17586 ;;  result          1  123[BANK0 ] enum E7957
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  1    wreg      enum E7957
 17589 ;; Registers used:
 17590 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17591 ;; Tracked objects:
 17592 ;;		On entry : F/0
 17593 ;;		On exit  : D/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17599 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17600 ;;Total ram usage:        7 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:   13
 17603 ;; This function calls:
 17604 ;;		_AssemblePacket
 17605 ;;		_LORAWAN_GetMaxPayloadSize
 17606 ;;		_RADIO_ReceiveStop
 17607 ;;		_RADIO_Transmit
 17608 ;;		_SelectChannelForTransmission
 17609 ;; This function is called by:
 17610 ;;		_AutomaticReplyCallback
 17611 ;;		_LORAWAN_RxDone
 17612 ;;		_readAndSend
 17613 ;; This function uses a non-reentrant model
 17614 ;;
 17615                           
 17616                           	psect	text97
 17617  0053FC                     __ptext97:
 17618                           	opt stack 0
 17619  0053FC                     _LORAWAN_Send:
 17620                           	opt stack 16
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;incstack = 0
 17624                           ;LORAWAN_Send@confirmed stored from wreg
 17625  0053FC  6FDC               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17626                           
 17627                           ;lorawan.c: 187: LorawanError_t result;
 17628                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17629  0053FE  0102               	movlb	2	; () banked
 17630  005400  A103               	btfss	(_loRa+3)& (0+255),0,b
 17631                           
 17632                           ; BSR set to: 2
 17633                           ;lorawan.c: 192: }
 17634                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17635  005402  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17636  005404  0012               	return	
 17637                           
 17638                           ; BSR set to: 2
 17639                           ;lorawan.c: 197: }
 17640                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17641  005406  A902               	btfss	(_loRa+2)& (0+255),4,b
 17642  005408  0012               	return	
 17643                           
 17644                           ; BSR set to: 2
 17645                           ;lorawan.c: 202: }
 17646                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17647  00540A  0100               	movlb	0	; () banked
 17648  00540C  51D6               	movf	LORAWAN_Send@port& (0+255),w,b
 17649  00540E  E103               	bnz	l13897
 17650                           
 17651                           ; BSR set to: 0
 17652  005410  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17653  005412  E001               	bz	l13897
 17654  005414  0012               	return	
 17655  005416                     l13897:
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;lorawan.c: 207: }
 17659                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17660  005416  EC42  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17661  00541A  6FDA               	movwf	??_LORAWAN_Send& (0+255),b
 17662  00541C  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17663  00541E  5DDA               	subwf	??_LORAWAN_Send& (0+255),w,b
 17664  005420  E201               	bc	l13901
 17665  005422  0012               	return	
 17666  005424                     l13901:
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;lorawan.c: 213: }
 17670                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17671  005424  0102               	movlb	2	; () banked
 17672  005426  2906               	incf	(_loRa+6)& (0+255),w,b
 17673  005428  E108               	bnz	l13905
 17674  00542A  2907               	incf	(_loRa+7)& (0+255),w,b
 17675  00542C  E106               	bnz	l13905
 17676  00542E  2908               	incf	(_loRa+8)& (0+255),w,b
 17677  005430  E104               	bnz	l13905
 17678  005432  2909               	incf	(_loRa+9)& (0+255),w,b
 17679  005434  E102               	bnz	l13905
 17680                           
 17681                           ; BSR set to: 2
 17682                           ;lorawan.c: 216: {
 17683                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17684  005436  8304               	bsf	(_loRa+4)& (0+255),1,b
 17685                           
 17686                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17687                           ;	Return value of _LORAWAN_Send is never used
 17688  005438  0012               	return	
 17689  00543A                     l13905:
 17690                           
 17691                           ; BSR set to: 2
 17692                           ;lorawan.c: 220: }
 17693                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17694  00543A  5102               	movf	(_loRa+2)& (0+255),w,b
 17695  00543C  0B0F               	andlw	15
 17696  00543E  E003               	bz	l13911
 17697                           
 17698                           ; BSR set to: 2
 17699  005440  5112               	movf	(_loRa+18)& (0+255),w,b
 17700  005442  E101               	bnz	l13911
 17701  005444  0012               	return	
 17702  005446                     l13911:
 17703                           
 17704                           ; BSR set to: 2
 17705                           ;lorawan.c: 225: }
 17706                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17707  005446  0E01               	movlw	1
 17708  005448  EC17  F033         	call	_SelectChannelForTransmission
 17709  00544C  6FDB               	movwf	LORAWAN_Send@result& (0+255),b
 17710                           
 17711                           ; BSR set to: 0
 17712                           ;lorawan.c: 228: if (result != OK)
 17713  00544E  51DB               	movf	LORAWAN_Send@result& (0+255),w,b
 17714  005450  E001               	bz	l13919
 17715  005452  0012               	return	
 17716  005454                     l13919:
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;lorawan.c: 232: else
 17720                           ;lorawan.c: 233: {
 17721                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17722  005454  0E02               	movlw	2
 17723  005456  0102               	movlb	2	; () banked
 17724  005458  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17725  00545A  E102               	bnz	l13923
 17726                           
 17727                           ; BSR set to: 2
 17728                           ;lorawan.c: 235: {
 17729                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17730  00545C  EC1B  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17731  005460                     l13923:
 17732                           
 17733                           ;lorawan.c: 237: }
 17734                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17735  005460  C0D6  F0CA         	movff	LORAWAN_Send@port,AssemblePacket@port
 17736  005464  C0D7  F0CB         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17737  005468  C0D8  F0CC         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17738  00546C  C0D9  F0CD         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17739  005470  0100               	movlb	0	; () banked
 17740  005472  6BCE               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17741  005474  51DC               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17742  005476  EC07  F00F         	call	_AssemblePacket
 17743                           
 17744                           ; BSR set to: 2
 17745                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17746  00547A  0EF0               	movlw	low (_macBuffer+16)
 17747  00547C  0100               	movlb	0	; () banked
 17748  00547E  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 17749  005480  0E04               	movlw	high (_macBuffer+16)
 17750  005482  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17751  005484  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17752  005488  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 17753  00548C  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 17754  00548E  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17755  005490  A4D8               	btfss	status,2,c
 17756  005492  0012               	return	
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;lorawan.c: 242: {
 17760                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17761  005494  0102               	movlb	2	; () banked
 17762  005496  2B06               	incf	(_loRa+6)& (0+255),f,b
 17763  005498  0E00               	movlw	0
 17764  00549A  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17765  00549C  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17766  00549E  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17767                           
 17768                           ;lorawan.c: 245: if (CNF == confirmed)
 17769  0054A0  0100               	movlb	0	; () banked
 17770  0054A2  05DC               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17771  0054A4  E102               	bnz	l1746
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;lorawan.c: 246: {
 17775                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17776  0054A6  0102               	movlb	2	; () banked
 17777  0054A8  8100               	bsf	_loRa& (0+255),0,b
 17778  0054AA                     l1746:
 17779                           
 17780                           ;lorawan.c: 248: }
 17781                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17782  0054AA  0102               	movlb	2	; () banked
 17783  0054AC  8B00               	bsf	_loRa& (0+255),5,b
 17784                           
 17785                           ; BSR set to: 2
 17786                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17787  0054AE  5102               	movf	(_loRa+2)& (0+255),w,b
 17788  0054B0  0BF0               	andlw	-16
 17789  0054B2  0901               	iorlw	1
 17790  0054B4  6F02               	movwf	(_loRa+2)& (0+255),b
 17791                           
 17792                           ;lorawan.c: 251: }
 17793  0054B6  0012               	return		;funcret
 17794  0054B8                     __end_of_LORAWAN_Send:
 17795                           	opt stack 0
 17796                           tosu	equ	0xFFF
 17797                           tosh	equ	0xFFE
 17798                           tosl	equ	0xFFD
 17799                           pclath	equ	0xFFA
 17800                           tblptru	equ	0xFF8
 17801                           tblptrh	equ	0xFF7
 17802                           tblptrl	equ	0xFF6
 17803                           tablat	equ	0xFF5
 17804                           prodh	equ	0xFF4
 17805                           prodl	equ	0xFF3
 17806                           intcon	equ	0xFF2
 17807                           intcon2	equ	0xFF1
 17808                           intcon3	equ	0xFF0
 17809                           indf0	equ	0xFEF
 17810                           postinc0	equ	0xFEE
 17811                           fsr0h	equ	0xFEA
 17812                           fsr0l	equ	0xFE9
 17813                           wreg	equ	0xFE8
 17814                           postinc1	equ	0xFE6
 17815                           postdec1	equ	0xFE5
 17816                           plusw1	equ	0xFE3
 17817                           fsr1h	equ	0xFE2
 17818                           fsr1l	equ	0xFE1
 17819                           indf2	equ	0xFDF
 17820                           postinc2	equ	0xFDE
 17821                           postdec2	equ	0xFDD
 17822                           plusw2	equ	0xFDB
 17823                           fsr2h	equ	0xFDA
 17824                           fsr2l	equ	0xFD9
 17825                           status	equ	0xFD8
 17826                           
 17827 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17828 ;; Defined at:
 17829 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;		None
 17832 ;; Auto vars:     Size  Location     Type
 17833 ;;  result          1   14[BANK0 ] unsigned char 
 17834 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17835 ;; Return value:  Size  Location     Type
 17836 ;;                  1    wreg      unsigned char 
 17837 ;; Registers used:
 17838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17839 ;; Tracked objects:
 17840 ;;		On entry : D/2
 17841 ;;		On exit  : F/0
 17842 ;;		Unchanged: 0/0
 17843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17848 ;;Total ram usage:        3 bytes
 17849 ;; Hardware stack levels used:    1
 17850 ;; Hardware stack levels required when called:    8
 17851 ;; This function calls:
 17852 ;;		_CountfOptsLength
 17853 ;; This function is called by:
 17854 ;;		_LORAWAN_Send
 17855 ;;		_AckRetransmissionCallback
 17856 ;; This function uses a non-reentrant model
 17857 ;;
 17858                           
 17859                           	psect	text98
 17860  006A84                     __ptext98:
 17861                           	opt stack 0
 17862  006A84                     _LORAWAN_GetMaxPayloadSize:
 17863                           	opt stack 20
 17864                           
 17865                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17866                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17867                           
 17868                           ;incstack = 0
 17869  006A84  EC5C  F02A         	call	_CountfOptsLength	;wreg free
 17870  006A88  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17874  006A8A  0102               	movlb	2	; () banked
 17875  006A8C  51A7               	movf	(_loRa+167)& (0+255),w,b
 17876  006A8E  E10D               	bnz	l13615
 17877                           
 17878                           ; BSR set to: 2
 17879                           ;lorawan.c: 1564: {
 17880                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17881  006A90  0E6D               	movlw	low _maxPayloadSize
 17882  006A92  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17883  006A94  6EF6               	movwf	tblptrl,c
 17884  006A96  6AF7               	clrf	tblptrh,c
 17885  006A98  0EFF               	movlw	high _maxPayloadSize
 17886  006A9A  22F7               	addwfc	tblptrh,f,c
 17887  006A9C                     	if	1	;There are 3 active tblptr bytes
 17888  006A9C  6AF8               	clrf	tblptru,c
 17889  006A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 17890  006AA0  22F8               	addwfc	tblptru,f,c
 17891  006AA2                     	endif
 17892  006AA2  0008               	tblrd		*
 17893  006AA4  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17894                           
 17895                           ;lorawan.c: 1566: }
 17896  006AA8  D010               	goto	l13617
 17897  006AAA                     l13615:
 17898                           
 17899                           ; BSR set to: 2
 17900                           ;lorawan.c: 1567: else
 17901                           ;lorawan.c: 1568: {
 17902                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17903  006AAA  0E6D               	movlw	low _maxPayloadSize
 17904  006AAC  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17905  006AAE  6EF6               	movwf	tblptrl,c
 17906  006AB0  6AF7               	clrf	tblptrh,c
 17907  006AB2  0EFF               	movlw	high _maxPayloadSize
 17908  006AB4  22F7               	addwfc	tblptrh,f,c
 17909  006AB6                     	if	1	;There are 3 active tblptr bytes
 17910  006AB6  6AF8               	clrf	tblptru,c
 17911  006AB8  0E00               	movlw	low (__mediumconst shr (0+16))
 17912  006ABA  22F8               	addwfc	tblptru,f,c
 17913  006ABC                     	endif
 17914  006ABC  0008               	tblrd		*
 17915  006ABE  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17916  006AC2  0100               	movlb	0	; () banked
 17917  006AC4  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17918  006AC6  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17919  006AC8  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17920  006ACA                     l13617:
 17921                           
 17922                           ;lorawan.c: 1570: }
 17923                           ;lorawan.c: 1572: return result;
 17924  006ACA  0100               	movlb	0	; () banked
 17925  006ACC  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17926                           
 17927                           ; BSR set to: 0
 17928  006ACE  0012               	return		;funcret
 17929  006AD0                     __end_of_LORAWAN_GetMaxPayloadSize:
 17930                           	opt stack 0
 17931                           tosu	equ	0xFFF
 17932                           tosh	equ	0xFFE
 17933                           tosl	equ	0xFFD
 17934                           pclath	equ	0xFFA
 17935                           tblptru	equ	0xFF8
 17936                           tblptrh	equ	0xFF7
 17937                           tblptrl	equ	0xFF6
 17938                           tablat	equ	0xFF5
 17939                           prodh	equ	0xFF4
 17940                           prodl	equ	0xFF3
 17941                           intcon	equ	0xFF2
 17942                           intcon2	equ	0xFF1
 17943                           intcon3	equ	0xFF0
 17944                           indf0	equ	0xFEF
 17945                           postinc0	equ	0xFEE
 17946                           fsr0h	equ	0xFEA
 17947                           fsr0l	equ	0xFE9
 17948                           wreg	equ	0xFE8
 17949                           postinc1	equ	0xFE6
 17950                           postdec1	equ	0xFE5
 17951                           plusw1	equ	0xFE3
 17952                           fsr1h	equ	0xFE2
 17953                           fsr1l	equ	0xFE1
 17954                           indf2	equ	0xFDF
 17955                           postinc2	equ	0xFDE
 17956                           postdec2	equ	0xFDD
 17957                           plusw2	equ	0xFDB
 17958                           fsr2h	equ	0xFDA
 17959                           fsr2l	equ	0xFD9
 17960                           status	equ	0xFD8
 17961                           
 17962 ;; *************** function _AssemblePacket *****************
 17963 ;; Defined at:
 17964 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17965 ;; Parameters:    Size  Location     Type
 17966 ;;  confirmed       1    wreg     unsigned char 
 17967 ;;  port            1  106[BANK0 ] unsigned char 
 17968 ;;  buffer          2  107[BANK0 ] PTR unsigned char 
 17969 ;;		 -> payload(4), NULL(0), 
 17970 ;;  bufferLength    2  109[BANK0 ] unsigned int 
 17971 ;; Auto vars:     Size  Location     Type
 17972 ;;  confirmed       1  113[BANK0 ] unsigned char 
 17973 ;;  bufferIndex     1  117[BANK0 ] unsigned char 
 17974 ;;  macCmdIdx       1  116[BANK0 ] unsigned char 
 17975 ;;  fCtrl           1  115[BANK0 ] struct .
 17976 ;;  mhdr            1  114[BANK0 ] struct .
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  1    wreg      void 
 17979 ;; Registers used:
 17980 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17981 ;; Tracked objects:
 17982 ;;		On entry : F/0
 17983 ;;		On exit  : F/2
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17986 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17987 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17989 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17990 ;;Total ram usage:       12 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; Hardware stack levels required when called:   12
 17993 ;; This function calls:
 17994 ;;		_AESCmac
 17995 ;;		_AssembleEncryptionBlock
 17996 ;;		_CountfOptsLength
 17997 ;;		_EncryptFRMPayload
 17998 ;;		_FindSmallestDataRate
 17999 ;;		_IncludeMacCommandsResponse
 18000 ;;		_memcpy
 18001 ;;		_memset
 18002 ;; This function is called by:
 18003 ;;		_LORAWAN_Send
 18004 ;; This function uses a non-reentrant model
 18005 ;;
 18006                           
 18007                           	psect	text99
 18008  001E0E                     __ptext99:
 18009                           	opt stack 0
 18010  001E0E                     _AssemblePacket:
 18011                           	opt stack 16
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;incstack = 0
 18015                           ;AssemblePacket@confirmed stored from wreg
 18016  001E0E  6FD1               	movwf	AssemblePacket@confirmed& (0+255),b
 18017                           
 18018                           ;lorawan.c: 1674: Mhdr_t mhdr;
 18019                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18020  001E10  0E10               	movlw	16
 18021  001E12  0100               	movlb	0	; () banked
 18022  001E14  6FD5               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 18026                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18027  001E16  6BD4               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18031  001E18  0ED2               	movlw	low AssemblePacket@mhdr
 18032  001E1A  6F64               	movwf	memset@p1& (0+255),b
 18033  001E1C  6B65               	clrf	(memset@p1+1)& (0+255),b
 18034  001E1E  6B67               	clrf	(memset@c+1)& (0+255),b
 18035  001E20  6B66               	clrf	memset@c& (0+255),b
 18036  001E22  6B69               	clrf	(memset@n+1)& (0+255),b
 18037  001E24  0E01               	movlw	1
 18038  001E26  6F68               	movwf	memset@n& (0+255),b
 18039  001E28  ECDC  F038         	call	_memset	;wreg free
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18043  001E2C  0EE0               	movlw	low _macBuffer
 18044  001E2E  6F64               	movwf	memset@p1& (0+255),b
 18045  001E30  0E04               	movlw	high _macBuffer
 18046  001E32  6F65               	movwf	(memset@p1+1)& (0+255),b
 18047  001E34  6B67               	clrf	(memset@c+1)& (0+255),b
 18048  001E36  6B66               	clrf	memset@c& (0+255),b
 18049  001E38  0E01               	movlw	1
 18050  001E3A  6F69               	movwf	(memset@n+1)& (0+255),b
 18051  001E3C  0E0F               	movlw	15
 18052  001E3E  6F68               	movwf	memset@n& (0+255),b
 18053  001E40  ECDC  F038         	call	_memset	;wreg free
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18057  001E44  0EB4               	movlw	low _aesBuffer
 18058  001E46  6F64               	movwf	memset@p1& (0+255),b
 18059  001E48  0E01               	movlw	high _aesBuffer
 18060  001E4A  6F65               	movwf	(memset@p1+1)& (0+255),b
 18061  001E4C  6B67               	clrf	(memset@c+1)& (0+255),b
 18062  001E4E  6B66               	clrf	memset@c& (0+255),b
 18063  001E50  6B69               	clrf	(memset@n+1)& (0+255),b
 18064  001E52  0E10               	movlw	16
 18065  001E54  6F68               	movwf	memset@n& (0+255),b
 18066  001E56  ECDC  F038         	call	_memset	;wreg free
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;lorawan.c: 1683: if (confirmed == 1)
 18070  001E5A  05D1               	decf	AssemblePacket@confirmed& (0+255),w,b
 18071  001E5C  E107               	bnz	l13637
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;lorawan.c: 1684: {
 18075                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18076  001E5E  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 18077  001E60  0B1F               	andlw	-225
 18078  001E62  0980               	iorlw	128
 18079  001E64  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18083  001E66  0102               	movlb	2	; () banked
 18084  001E68  8100               	bsf	_loRa& (0+255),0,b
 18085                           
 18086                           ;lorawan.c: 1687: }
 18087  001E6A  D004               	goto	l2231
 18088  001E6C                     l13637:
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;lorawan.c: 1688: else
 18092                           ;lorawan.c: 1689: {
 18093                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 18094  001E6C  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 18095  001E6E  0B1F               	andlw	-225
 18096  001E70  0940               	iorlw	64
 18097  001E72  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 18098  001E74                     l2231:
 18099                           
 18100                           ;lorawan.c: 1691: }
 18101                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 18102  001E74  0EFC               	movlw	-4
 18103  001E76  0100               	movlb	0	; () banked
 18104  001E78  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18105                           
 18106                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18107  001E7A  0EE3               	movlw	-29
 18108  001E7C  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18112  001E7E  0EE0               	movlw	low _macBuffer
 18113  001E80  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18114  001E82  6ED9               	movwf	fsr2l,c
 18115  001E84  6ADA               	clrf	fsr2h,c
 18116  001E86  0E04               	movlw	high _macBuffer
 18117  001E88  22DA               	addwfc	fsr2h,f,c
 18118  001E8A  C0D2  FFDF         	movff	AssemblePacket@mhdr,indf2
 18119                           
 18120                           ; BSR set to: 0
 18121  001E8E  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18122                           
 18123                           ; BSR set to: 0
 18124                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18125  001E90  0EE0               	movlw	low _macBuffer
 18126  001E92  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18127  001E94  6F64               	movwf	memcpy@d1& (0+255),b
 18128  001E96  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18129  001E98  0E04               	movlw	high _macBuffer
 18130  001E9A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18131  001E9C  0E1E               	movlw	low (_loRa+30)
 18132  001E9E  6F66               	movwf	memcpy@s1& (0+255),b
 18133  001EA0  0E02               	movlw	high (_loRa+30)
 18134  001EA2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18135  001EA4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18136  001EA6  0E04               	movlw	4
 18137  001EA8  6F68               	movwf	memcpy@n& (0+255),b
 18138  001EAA  ECFF  F033         	call	_memcpy	;wreg free
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18142  001EAE  0E04               	movlw	4
 18143  001EB0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18144                           
 18145                           ; BSR set to: 0
 18146                           ;lorawan.c: 1699: fCtrl.value = 0;
 18147  001EB2  6BD3               	clrf	AssemblePacket@fCtrl& (0+255),b
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18151  001EB4  0102               	movlb	2	; () banked
 18152  001EB6  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18153  001EB8  D030               	goto	l2232
 18154                           
 18155                           ; BSR set to: 2
 18156                           ;lorawan.c: 1702: {
 18157                           ;lorawan.c: 1703: fCtrl.adr = 1;
 18158  001EBA  0100               	movlb	0	; () banked
 18159  001EBC  8FD3               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18163  001EBE  0102               	movlb	2	; () banked
 18164  001EC0  51DF               	movf	(_loRa+223)& (0+255),w,b
 18165  001EC2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 18166  001EC4  E229               	bc	l2233
 18167                           
 18168                           ; BSR set to: 2
 18169                           ;lorawan.c: 1705: {
 18170                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18171  001EC6  0100               	movlb	0	; () banked
 18172  001EC8  8DD3               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18173                           
 18174                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18175  001ECA  0102               	movlb	2	; () banked
 18176  001ECC  8900               	bsf	_loRa& (0+255),4,b
 18177                           
 18178                           ; BSR set to: 2
 18179                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18180  001ECE  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18181  001ED0  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18182                           
 18183                           ; BSR set to: 2
 18184                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18185  001ED2  51A2               	movf	(_loRa+162)& (0+255),w,b
 18186  001ED4  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18187  001ED6  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18188  001ED8  E102               	bnz	l13663
 18189                           
 18190                           ; BSR set to: 2
 18191                           ;lorawan.c: 1711: {
 18192                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18193  001EDA  6BEE               	clrf	(_loRa+238)& (0+255),b
 18194  001EDC  D01A               	goto	L9
 18195  001EDE                     l13663:
 18196                           
 18197                           ; BSR set to: 2
 18198                           ;lorawan.c: 1716: else
 18199                           ;lorawan.c: 1717: {
 18200                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18201  001EDE  51A2               	movf	(_loRa+162)& (0+255),w,b
 18202  001EE0  0100               	movlb	0	; () banked
 18203  001EE2  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18204  001EE4  6BD0               	clrf	(??_AssemblePacket+1)& (0+255),b
 18205  001EE6  0102               	movlb	2	; () banked
 18206  001EE8  51D0               	movf	(_loRa+208)& (0+255),w,b
 18207  001EEA  0100               	movlb	0	; () banked
 18208  001EEC  5DCF               	subwf	??_AssemblePacket& (0+255),w,b
 18209  001EEE  0102               	movlb	2	; () banked
 18210  001EF0  51D1               	movf	(_loRa+209)& (0+255),w,b
 18211  001EF2  0100               	movlb	0	; () banked
 18212  001EF4  59D0               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18213  001EF6  E20E               	bc	l2236
 18214                           
 18215                           ; BSR set to: 0
 18216                           ;lorawan.c: 1719: {
 18217                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18218  001EF8  0102               	movlb	2	; () banked
 18219  001EFA  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18220                           
 18221                           ; BSR set to: 2
 18222                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18223  001EFC  51EE               	movf	(_loRa+238)& (0+255),w,b
 18224  001EFE  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18225  001F00  E20C               	bc	l2232
 18226                           
 18227                           ; BSR set to: 2
 18228                           ;lorawan.c: 1725: {
 18229                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18230  001F02  6BEE               	clrf	(_loRa+238)& (0+255),b
 18231                           
 18232                           ; BSR set to: 2
 18233                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18234  001F04  EC7B  F02C         	call	_FindSmallestDataRate	;wreg free
 18235  001F08  0900               	iorlw	0
 18236  001F0A  E107               	bnz	l2232
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;lorawan.c: 1729: {
 18240                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18241  001F0C  0102               	movlb	2	; () banked
 18242  001F0E  6BD0               	clrf	(_loRa+208)& (0+255),b
 18243  001F10  6BD1               	clrf	(_loRa+209)& (0+255),b
 18244  001F12                     L9:
 18245                           
 18246                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18247  001F12  0100               	movlb	0	; () banked
 18248  001F14                     l2236:
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;lorawan.c: 1737: else
 18252                           ;lorawan.c: 1738: {
 18253                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18254  001F14  9DD3               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18255                           
 18256                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18257  001F16  0102               	movlb	2	; () banked
 18258  001F18                     l2233:
 18259                           
 18260                           ; BSR set to: 2
 18261                           ;lorawan.c: 1744: else
 18262                           ;lorawan.c: 1745: {
 18263                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18264  001F18  9900               	bcf	_loRa& (0+255),4,b
 18265  001F1A                     l2232:
 18266                           
 18267                           ;lorawan.c: 1747: }
 18268                           ;lorawan.c: 1748: }
 18269                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18270  001F1A  0102               	movlb	2	; () banked
 18271  001F1C  A300               	btfss	_loRa& (0+255),1,b
 18272  001F1E  D004               	goto	l2241
 18273                           
 18274                           ; BSR set to: 2
 18275                           ;lorawan.c: 1751: {
 18276                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18277  001F20  0100               	movlb	0	; () banked
 18278  001F22  8BD3               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18279                           
 18280                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18281  001F24  0102               	movlb	2	; () banked
 18282  001F26  9300               	bcf	_loRa& (0+255),1,b
 18283  001F28                     l2241:
 18284                           
 18285                           ; BSR set to: 2
 18286                           ;lorawan.c: 1754: }
 18287                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18288  001F28  0100               	movlb	0	; () banked
 18289  001F2A  99D3               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18290                           
 18291                           ; BSR set to: 0
 18292                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18293  001F2C  0102               	movlb	2	; () banked
 18294  001F2E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18295  001F30  E004               	bz	l13681
 18296                           
 18297                           ; BSR set to: 2
 18298  001F32  0100               	movlb	0	; () banked
 18299  001F34  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18300  001F36  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18301  001F38  E104               	bnz	l13683
 18302  001F3A                     l13681:
 18303                           
 18304                           ;lorawan.c: 1759: {
 18305                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18306  001F3A  0EF0               	movlw	-16
 18307  001F3C  0100               	movlb	0	; () banked
 18308  001F3E  17D3               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18309                           
 18310                           ;lorawan.c: 1761: }
 18311  001F40  D007               	goto	l13685
 18312  001F42                     l13683:
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;lorawan.c: 1763: else
 18316                           ;lorawan.c: 1764: {
 18317                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18318  001F42  EC5C  F02A         	call	_CountfOptsLength	;wreg free
 18319  001F46  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18320  001F48  19D3               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18321  001F4A  0BF0               	andlw	-16
 18322  001F4C  19CF               	xorwf	??_AssemblePacket& (0+255),w,b
 18323  001F4E  6FD3               	movwf	AssemblePacket@fCtrl& (0+255),b
 18324  001F50                     l13685:
 18325                           
 18326                           ; BSR set to: 0
 18327                           ;lorawan.c: 1766: }
 18328                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18329  001F50  0EE0               	movlw	low _macBuffer
 18330  001F52  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18331  001F54  6ED9               	movwf	fsr2l,c
 18332  001F56  6ADA               	clrf	fsr2h,c
 18333  001F58  0E04               	movlw	high _macBuffer
 18334  001F5A  22DA               	addwfc	fsr2h,f,c
 18335  001F5C  C0D3  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18336                           
 18337                           ; BSR set to: 0
 18338  001F60  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18342  001F62  0EE0               	movlw	low _macBuffer
 18343  001F64  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18344  001F66  6F64               	movwf	memcpy@d1& (0+255),b
 18345  001F68  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18346  001F6A  0E04               	movlw	high _macBuffer
 18347  001F6C  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18348  001F6E  0E06               	movlw	low (_loRa+6)
 18349  001F70  6F66               	movwf	memcpy@s1& (0+255),b
 18350  001F72  0E02               	movlw	high (_loRa+6)
 18351  001F74  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18352  001F76  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18353  001F78  0E02               	movlw	2
 18354  001F7A  6F68               	movwf	memcpy@n& (0+255),b
 18355  001F7C  ECFF  F033         	call	_memcpy	;wreg free
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18359  001F80  0E02               	movlw	2
 18360  001F82  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18361                           
 18362                           ; BSR set to: 0
 18363                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18364  001F84  0102               	movlb	2	; () banked
 18365  001F86  51A7               	movf	(_loRa+167)& (0+255),w,b
 18366  001F88  E00E               	bz	l13699
 18367                           
 18368                           ; BSR set to: 2
 18369  001F8A  0100               	movlb	0	; () banked
 18370  001F8C  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18371  001F8E  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18372  001F90  E00A               	bz	l13699
 18373                           
 18374                           ; BSR set to: 0
 18375                           ;lorawan.c: 1774: {
 18376                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18377  001F92  0EE0               	movlw	low _macBuffer
 18378  001F94  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18379  001F96  0E04               	movlw	high _macBuffer
 18380  001F98  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18381  001F9A  0ED5               	movlw	low AssemblePacket@bufferIndex
 18382  001F9C  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18383  001F9E  0E01               	movlw	1
 18384  001FA0  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18385  001FA2  EC8B  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18386  001FA6                     l13699:
 18387                           
 18388                           ;lorawan.c: 1776: }
 18389                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18390  001FA6  0EE0               	movlw	low _macBuffer
 18391  001FA8  0100               	movlb	0	; () banked
 18392  001FAA  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18393  001FAC  6ED9               	movwf	fsr2l,c
 18394  001FAE  6ADA               	clrf	fsr2h,c
 18395  001FB0  0E04               	movlw	high _macBuffer
 18396  001FB2  22DA               	addwfc	fsr2h,f,c
 18397  001FB4  C0CA  FFDF         	movff	AssemblePacket@port,indf2
 18398                           
 18399                           ; BSR set to: 0
 18400  001FB8  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18401                           
 18402                           ; BSR set to: 0
 18403                           ;lorawan.c: 1780: if (bufferLength != 0)
 18404  001FBA  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18405  001FBC  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18406  001FBE  E02E               	bz	l13711
 18407                           
 18408                           ; BSR set to: 0
 18409                           ;lorawan.c: 1781: {
 18410                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18411  001FC0  0EE0               	movlw	low _macBuffer
 18412  001FC2  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18413  001FC4  6F64               	movwf	memcpy@d1& (0+255),b
 18414  001FC6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18415  001FC8  0E04               	movlw	high _macBuffer
 18416  001FCA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18417  001FCC  C0CB  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18418  001FD0  C0CC  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18419  001FD4  C0CD  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18420  001FD8  C0CE  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18421  001FDC  ECFF  F033         	call	_memcpy	;wreg free
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18425  001FE0  C0CB  F094         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18426  001FE4  C0CC  F095         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18427  001FE8  C0CD  F096         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18428  001FEC  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18429  001FEE  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18430  001FF2  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18431  001FF6  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18432  001FFA  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18433  001FFE  0E32               	movlw	low (_loRa+50)
 18434  002000  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18435  002002  0E02               	movlw	high (_loRa+50)
 18436  002004  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18437  002006  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18438  00200A  0EE0               	movlw	low _macBuffer
 18439  00200C  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18440  00200E  0E04               	movlw	high _macBuffer
 18441  002010  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18442  002012  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18443  002014  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18447  002018  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18448  00201A  D02A               	goto	L8
 18449  00201C                     l13711:
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18453  00201C  0102               	movlb	2	; () banked
 18454  00201E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18455  002020  E028               	bz	l13717
 18456                           
 18457                           ; BSR set to: 2
 18458                           ;lorawan.c: 1787: {
 18459                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18460  002022  0EEF               	movlw	low _radioBuffer
 18461  002024  0100               	movlb	0	; () banked
 18462  002026  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18463  002028  0E05               	movlw	high _radioBuffer
 18464  00202A  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18465  00202C  0ED4               	movlw	low AssemblePacket@macCmdIdx
 18466  00202E  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18467  002030  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18468  002032  EC8B  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18469                           
 18470                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18471  002036  0EEF               	movlw	low _radioBuffer
 18472  002038  6F94               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18473  00203A  0E05               	movlw	high _radioBuffer
 18474  00203C  6F95               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18475  00203E  C0D4  F096         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18476  002042  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18477  002044  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18478  002048  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18479  00204C  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18480  002050  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18481  002054  0E22               	movlw	low (_loRa+34)
 18482  002056  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18483  002058  0E02               	movlw	high (_loRa+34)
 18484  00205A  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18485  00205C  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18486  002060  0EE0               	movlw	low _macBuffer
 18487  002062  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18488  002064  0E04               	movlw	high _macBuffer
 18489  002066  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18490  002068  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18491  00206A  EC9B  F020         	call	_EncryptFRMPayload	;wreg free
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18495  00206E  51D4               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18496  002070                     L8:
 18497  002070  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18498  002072                     l13717:
 18499                           
 18500                           ;lorawan.c: 1793: }
 18501                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18502  002072  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18503  002076  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18504  00207A  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18505  00207E  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18506  002082  0100               	movlb	0	; () banked
 18507  002084  51D5               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18508  002086  0FF0               	addlw	240
 18509  002088  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18510  00208A  0E49               	movlw	73
 18511  00208C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18512  00208E  0E00               	movlw	0
 18513  002090  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18514  002092  EC22  F02C         	call	_AssembleEncryptionBlock
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18518  002096  0EE0               	movlw	low _macBuffer
 18519  002098  6F64               	movwf	memcpy@d1& (0+255),b
 18520  00209A  0E04               	movlw	high _macBuffer
 18521  00209C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18522  00209E  0EB4               	movlw	low _aesBuffer
 18523  0020A0  6F66               	movwf	memcpy@s1& (0+255),b
 18524  0020A2  0E01               	movlw	high _aesBuffer
 18525  0020A4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18526  0020A6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18527  0020A8  0E10               	movlw	16
 18528  0020AA  6F68               	movwf	memcpy@n& (0+255),b
 18529  0020AC  ECFF  F033         	call	_memcpy	;wreg free
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18533  0020B0  0E22               	movlw	low (_loRa+34)
 18534  0020B2  6FBC               	movwf	AESCmac@key& (0+255),b
 18535  0020B4  0E02               	movlw	high (_loRa+34)
 18536  0020B6  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 18537  0020B8  0EB4               	movlw	low _aesBuffer
 18538  0020BA  6FBE               	movwf	AESCmac@output& (0+255),b
 18539  0020BC  0E01               	movlw	high _aesBuffer
 18540  0020BE  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 18541  0020C0  0EE0               	movlw	low _macBuffer
 18542  0020C2  6FC0               	movwf	AESCmac@input& (0+255),b
 18543  0020C4  0E04               	movlw	high _macBuffer
 18544  0020C6  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 18545  0020C8  C0D5  F0C2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18546  0020CC  ECFD  F00B         	call	_AESCmac	;wreg free
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18550  0020D0  0EE0               	movlw	low _macBuffer
 18551  0020D2  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18552  0020D4  6F64               	movwf	memcpy@d1& (0+255),b
 18553  0020D6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18554  0020D8  0E04               	movlw	high _macBuffer
 18555  0020DA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18556  0020DC  0EB4               	movlw	low _aesBuffer
 18557  0020DE  6F66               	movwf	memcpy@s1& (0+255),b
 18558  0020E0  0E01               	movlw	high _aesBuffer
 18559  0020E2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18560  0020E4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18561  0020E6  0E04               	movlw	4
 18562  0020E8  6F68               	movwf	memcpy@n& (0+255),b
 18563  0020EA  ECFF  F033         	call	_memcpy	;wreg free
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18567  0020EE  0E04               	movlw	4
 18568  0020F0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18572  0020F2  0EF0               	movlw	240
 18573  0020F4  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18574  0020F6  0102               	movlb	2	; () banked
 18575  0020F8  6FD4               	movwf	(_loRa+212)& (0+255),b
 18576  0020FA  6BD5               	clrf	(_loRa+213)& (0+255),b
 18577  0020FC  0EFF               	movlw	255
 18578  0020FE  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18579                           
 18580                           ; BSR set to: 2
 18581  002100  0CFF               	retlw	255	;funcret
 18582  002102                     __end_of_AssemblePacket:
 18583                           	opt stack 0
 18584                           tosu	equ	0xFFF
 18585                           tosh	equ	0xFFE
 18586                           tosl	equ	0xFFD
 18587                           pclath	equ	0xFFA
 18588                           tblptru	equ	0xFF8
 18589                           tblptrh	equ	0xFF7
 18590                           tblptrl	equ	0xFF6
 18591                           tablat	equ	0xFF5
 18592                           prodh	equ	0xFF4
 18593                           prodl	equ	0xFF3
 18594                           intcon	equ	0xFF2
 18595                           intcon2	equ	0xFF1
 18596                           intcon3	equ	0xFF0
 18597                           indf0	equ	0xFEF
 18598                           postinc0	equ	0xFEE
 18599                           fsr0h	equ	0xFEA
 18600                           fsr0l	equ	0xFE9
 18601                           wreg	equ	0xFE8
 18602                           postinc1	equ	0xFE6
 18603                           postdec1	equ	0xFE5
 18604                           plusw1	equ	0xFE3
 18605                           fsr1h	equ	0xFE2
 18606                           fsr1l	equ	0xFE1
 18607                           indf2	equ	0xFDF
 18608                           postinc2	equ	0xFDE
 18609                           postdec2	equ	0xFDD
 18610                           plusw2	equ	0xFDB
 18611                           fsr2h	equ	0xFDA
 18612                           fsr2l	equ	0xFD9
 18613                           status	equ	0xFD8
 18614                           
 18615 ;; *************** function _IncludeMacCommandsResponse *****************
 18616 ;; Defined at:
 18617 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18620 ;;		 -> macBuffer(271), radioBuffer(271), 
 18621 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18622 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18623 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18626 ;;  i               1   14[BANK0 ] unsigned char 
 18627 ;; Return value:  Size  Location     Type
 18628 ;;                  1    wreg      void 
 18629 ;; Registers used:
 18630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18631 ;; Tracked objects:
 18632 ;;		On entry : F/0
 18633 ;;		On exit  : F/0
 18634 ;;		Unchanged: 0/0
 18635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18638 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18639 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18640 ;;Total ram usage:       12 bytes
 18641 ;; Hardware stack levels used:    1
 18642 ;; Hardware stack levels required when called:    8
 18643 ;; This function calls:
 18644 ;;		_RADIO_GetPacketSnr
 18645 ;; This function is called by:
 18646 ;;		_AssemblePacket
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text100
 18651  001B16                     __ptext100:
 18652                           	opt stack 0
 18653  001B16                     _IncludeMacCommandsResponse:
 18654                           	opt stack 19
 18655                           
 18656                           ; BSR set to: 0
 18657                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18658                           
 18659                           ; BSR set to: 0
 18660                           
 18661                           ; BSR set to: 2
 18662                           ;incstack = 0
 18663  001B16  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18664  001B18  6ED9               	movwf	fsr2l,c
 18665  001B1A  6ADA               	clrf	fsr2h,c
 18666  001B1C  50DF               	movf	indf2,w,c
 18667  001B1E  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18668                           
 18669                           ; BSR set to: 0
 18670                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18671  001B20  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18672  001B22  D169               	goto	l13311
 18673  001B24                     l13215:
 18674                           
 18675                           ; BSR set to: 0
 18676                           ;lorawan.c: 1851: {
 18677                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18678  001B24  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18679  001B26  E101 D14B          	bz	l13307
 18680                           
 18681                           ; BSR set to: 0
 18682  001B2A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18683  001B2C  0D02               	mullw	2
 18684  001B2E  0EA8               	movlw	low (_loRa+168)
 18685  001B30  24F3               	addwf	prodl,w,c
 18686  001B32  6ED9               	movwf	fsr2l,c
 18687  001B34  0E02               	movlw	high (_loRa+168)
 18688  001B36  20F4               	addwfc	prodh,w,c
 18689  001B38  6EDA               	movwf	fsr2h,c
 18690  001B3A  28DE               	incf	postinc2,w,c
 18691  001B3C  E101 D140          	bz	l13307
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;lorawan.c: 1853: {
 18695                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18696  001B40  0EFE               	movlw	254
 18697  001B42  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18698  001B44  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18699  001B46  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18700  001B48  0D02               	mullw	2
 18701  001B4A  0EA8               	movlw	low (_loRa+168)
 18702  001B4C  24F3               	addwf	prodl,w,c
 18703  001B4E  6ED9               	movwf	fsr2l,c
 18704  001B50  0E02               	movlw	high (_loRa+168)
 18705  001B52  20F4               	addwfc	prodh,w,c
 18706  001B54  6EDA               	movwf	fsr2h,c
 18707  001B56  50DF               	movf	indf2,w,c
 18708  001B58  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18709  001B5A  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18710  001B5C  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18711  001B5E  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18712  001B60  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18713  001B62  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18714  001B64  0E94               	movlw	low _macEndDevCmdReplyLen
 18715  001B66  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18716  001B68  6EF6               	movwf	tblptrl,c
 18717  001B6A  0EFF               	movlw	high _macEndDevCmdReplyLen
 18718  001B6C  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18719  001B6E  6EF7               	movwf	tblptrh,c
 18720  001B70                     	if	1	;There are 3 active tblptr bytes
 18721  001B70  6AF8               	clrf	tblptru,c
 18722  001B72  0E00               	movlw	low (__mediumconst shr (0+16))
 18723  001B74  22F8               	addwfc	tblptru,f,c
 18724  001B76                     	endif
 18725  001B76  0008               	tblrd		*
 18726  001B78  50F5               	movf	tablat,w,c
 18727  001B7A  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18728  001B7E  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18729  001B80  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18730  001B82  0E00               	movlw	0
 18731  001B84  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18732  001B86  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18733  001B88  6ED9               	movwf	fsr2l,c
 18734  001B8A  6ADA               	clrf	fsr2h,c
 18735  001B8C  50DF               	movf	indf2,w,c
 18736  001B8E  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18737  001B90  0E00               	movlw	0
 18738  001B92  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18739  001B94  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18740  001B96  D114               	goto	l13307
 18741  001B98  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18742  001B9A  E105               	bnz	u14480
 18743  001B9C  0E10               	movlw	16
 18744  001B9E  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18745  001BA0  E301 D12F          	bc	l13313
 18746  001BA4  D10D               	goto	l13307
 18747  001BA6                     u14480:
 18748  001BA6  D12D               	goto	l13313
 18749  001BA8                     l13223:
 18750                           
 18751                           ; BSR set to: 0
 18752                           ;lorawan.c: 1862: {
 18753                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18754  001BA8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18755  001BAA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18756  001BAC  6ED9               	movwf	fsr2l,c
 18757  001BAE  0E00               	movlw	0
 18758  001BB0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18759  001BB2  6EDA               	movwf	fsr2h,c
 18760  001BB4  0E03               	movlw	3
 18761  001BB6  6EDF               	movwf	indf2,c
 18762                           
 18763                           ; BSR set to: 0
 18764  001BB8  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18768  001BBA  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18769  001BBC  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18770  001BBE  6ED9               	movwf	fsr2l,c
 18771  001BC0  0E00               	movlw	0
 18772  001BC2  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18773  001BC4  6EDA               	movwf	fsr2h,c
 18774  001BC6  6ADF               	clrf	indf2,c
 18775                           
 18776                           ; BSR set to: 0
 18777                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18778  001BC8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18779  001BCA  0D02               	mullw	2
 18780  001BCC  0EA9               	movlw	low (_loRa+169)
 18781  001BCE  24F3               	addwf	prodl,w,c
 18782  001BD0  6ED9               	movwf	fsr2l,c
 18783  001BD2  0E02               	movlw	high (_loRa+169)
 18784  001BD4  20F4               	addwfc	prodh,w,c
 18785  001BD6  6EDA               	movwf	fsr2h,c
 18786  001BD8  A0DF               	btfss	indf2,0,c
 18787  001BDA  D009               	goto	l13233
 18788                           
 18789                           ; BSR set to: 2
 18790                           ;lorawan.c: 1866: {
 18791                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18792  001BDC  0100               	movlb	0	; () banked
 18793  001BDE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18794  001BE0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18795  001BE2  6ED9               	movwf	fsr2l,c
 18796  001BE4  0E00               	movlw	0
 18797  001BE6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18798  001BE8  6EDA               	movwf	fsr2h,c
 18799  001BEA  0E00               	movlw	0
 18800  001BEC  80DB               	bsf	plusw2,0,c
 18801  001BEE                     l13233:
 18802                           
 18803                           ;lorawan.c: 1868: }
 18804                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18805  001BEE  0100               	movlb	0	; () banked
 18806  001BF0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18807  001BF2  0D02               	mullw	2
 18808  001BF4  0EA9               	movlw	low (_loRa+169)
 18809  001BF6  24F3               	addwf	prodl,w,c
 18810  001BF8  6ED9               	movwf	fsr2l,c
 18811  001BFA  0E02               	movlw	high (_loRa+169)
 18812  001BFC  20F4               	addwfc	prodh,w,c
 18813  001BFE  6EDA               	movwf	fsr2h,c
 18814  001C00  A2DF               	btfss	indf2,1,c
 18815  001C02  D008               	goto	l13237
 18816                           
 18817                           ; BSR set to: 2
 18818                           ;lorawan.c: 1871: {
 18819                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18820  001C04  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18821  001C06  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18822  001C08  6ED9               	movwf	fsr2l,c
 18823  001C0A  0E00               	movlw	0
 18824  001C0C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18825  001C0E  6EDA               	movwf	fsr2h,c
 18826  001C10  0E00               	movlw	0
 18827  001C12  82DB               	bsf	plusw2,1,c
 18828  001C14                     l13237:
 18829                           
 18830                           ;lorawan.c: 1873: }
 18831                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18832  001C14  0100               	movlb	0	; () banked
 18833  001C16  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18834  001C18  0D02               	mullw	2
 18835  001C1A  0EA9               	movlw	low (_loRa+169)
 18836  001C1C  24F3               	addwf	prodl,w,c
 18837  001C1E  6ED9               	movwf	fsr2l,c
 18838  001C20  0E02               	movlw	high (_loRa+169)
 18839  001C22  20F4               	addwfc	prodh,w,c
 18840  001C24  6EDA               	movwf	fsr2h,c
 18841  001C26  A4DF               	btfss	indf2,2,c
 18842  001C28  D009               	goto	l13241
 18843  001C2A                     l13239:
 18844                           
 18845                           ; BSR set to: 2
 18846                           ;lorawan.c: 1876: {
 18847                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18848  001C2A  0100               	movlb	0	; () banked
 18849  001C2C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18850  001C2E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18851  001C30  6ED9               	movwf	fsr2l,c
 18852  001C32  0E00               	movlw	0
 18853  001C34  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18854  001C36  6EDA               	movwf	fsr2h,c
 18855  001C38  0E00               	movlw	0
 18856  001C3A  84DB               	bsf	plusw2,2,c
 18857  001C3C                     l13241:
 18858                           
 18859                           ;lorawan.c: 1878: }
 18860                           ;lorawan.c: 1879: bufferIndex ++;
 18861  001C3C  0100               	movlb	0	; () banked
 18862  001C3E  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18863                           
 18864                           ;lorawan.c: 1880: }
 18865                           ;lorawan.c: 1881: break;
 18866  001C40  D0D9               	goto	l13309
 18867  001C42                     l13243:
 18868                           
 18869                           ; BSR set to: 0
 18870                           ;lorawan.c: 1884: {
 18871                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18872  001C42  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18873  001C44  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18874  001C46  6ED9               	movwf	fsr2l,c
 18875  001C48  0E00               	movlw	0
 18876  001C4A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18877  001C4C  6EDA               	movwf	fsr2h,c
 18878  001C4E  0E05               	movlw	5
 18879  001C50  6EDF               	movwf	indf2,c
 18880                           
 18881                           ; BSR set to: 0
 18882  001C52  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18883                           
 18884                           ; BSR set to: 0
 18885                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18886  001C54  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18887  001C56  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18888  001C58  6ED9               	movwf	fsr2l,c
 18889  001C5A  0E00               	movlw	0
 18890  001C5C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18891  001C5E  6EDA               	movwf	fsr2h,c
 18892  001C60  6ADF               	clrf	indf2,c
 18893                           
 18894                           ; BSR set to: 0
 18895                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18896  001C62  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18897  001C64  0D02               	mullw	2
 18898  001C66  0EA9               	movlw	low (_loRa+169)
 18899  001C68  24F3               	addwf	prodl,w,c
 18900  001C6A  6ED9               	movwf	fsr2l,c
 18901  001C6C  0E02               	movlw	high (_loRa+169)
 18902  001C6E  20F4               	addwfc	prodh,w,c
 18903  001C70  6EDA               	movwf	fsr2h,c
 18904  001C72  A6DF               	btfss	indf2,3,c
 18905  001C74  D009               	goto	l13253
 18906                           
 18907                           ; BSR set to: 2
 18908                           ;lorawan.c: 1888: {
 18909                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18910  001C76  0100               	movlb	0	; () banked
 18911  001C78  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18912  001C7A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18913  001C7C  6ED9               	movwf	fsr2l,c
 18914  001C7E  0E00               	movlw	0
 18915  001C80  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18916  001C82  6EDA               	movwf	fsr2h,c
 18917  001C84  0E00               	movlw	0
 18918  001C86  80DB               	bsf	plusw2,0,c
 18919  001C88                     l13253:
 18920                           
 18921                           ;lorawan.c: 1890: }
 18922                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18923  001C88  0100               	movlb	0	; () banked
 18924  001C8A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18925  001C8C  0D02               	mullw	2
 18926  001C8E  0EA9               	movlw	low (_loRa+169)
 18927  001C90  24F3               	addwf	prodl,w,c
 18928  001C92  6ED9               	movwf	fsr2l,c
 18929  001C94  0E02               	movlw	high (_loRa+169)
 18930  001C96  20F4               	addwfc	prodh,w,c
 18931  001C98  6EDA               	movwf	fsr2h,c
 18932  001C9A  A8DF               	btfss	indf2,4,c
 18933  001C9C  D008               	goto	l13257
 18934                           
 18935                           ; BSR set to: 2
 18936                           ;lorawan.c: 1893: {
 18937                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18938  001C9E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18939  001CA0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18940  001CA2  6ED9               	movwf	fsr2l,c
 18941  001CA4  0E00               	movlw	0
 18942  001CA6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18943  001CA8  6EDA               	movwf	fsr2h,c
 18944  001CAA  0E00               	movlw	0
 18945  001CAC  82DB               	bsf	plusw2,1,c
 18946  001CAE                     l13257:
 18947                           
 18948                           ;lorawan.c: 1895: }
 18949                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18950  001CAE  0100               	movlb	0	; () banked
 18951  001CB0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18952  001CB2  0D02               	mullw	2
 18953  001CB4  0EA9               	movlw	low (_loRa+169)
 18954  001CB6  24F3               	addwf	prodl,w,c
 18955  001CB8  6ED9               	movwf	fsr2l,c
 18956  001CBA  0E02               	movlw	high (_loRa+169)
 18957  001CBC  20F4               	addwfc	prodh,w,c
 18958  001CBE  6EDA               	movwf	fsr2h,c
 18959  001CC0  AADF               	btfss	indf2,5,c
 18960  001CC2  D7BC               	goto	l13241
 18961  001CC4  D7B2               	goto	l13239
 18962  001CC6                     l13263:
 18963                           
 18964                           ; BSR set to: 0
 18965                           ;lorawan.c: 1907: {
 18966                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 18967  001CC6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18968  001CC8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18969  001CCA  6ED9               	movwf	fsr2l,c
 18970  001CCC  0E00               	movlw	0
 18971  001CCE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18972  001CD0  6EDA               	movwf	fsr2h,c
 18973  001CD2  0E06               	movlw	6
 18974  001CD4  6EDF               	movwf	indf2,c
 18975                           
 18976                           ; BSR set to: 0
 18977  001CD6  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18978                           
 18979                           ; BSR set to: 0
 18980                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 18981  001CD8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18982  001CDA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18983  001CDC  6ED9               	movwf	fsr2l,c
 18984  001CDE  0E00               	movlw	0
 18985  001CE0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18986  001CE2  6EDA               	movwf	fsr2h,c
 18987  001CE4  C2E0  FFDF         	movff	_loRa+224,indf2
 18988  001CE8  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18989                           
 18990                           ; BSR set to: 0
 18991                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 18992  001CEA  EC38  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18993  001CEE  0A80               	xorlw	128
 18994  001CF0  0FA0               	addlw	160
 18995  001CF2  E305               	bnc	l13273
 18996                           
 18997                           ; BSR set to: 1
 18998  001CF4  EC38  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18999  001CF8  0A80               	xorlw	128
 19000  001CFA  0F60               	addlw	-160
 19001  001CFC  E309               	bnc	l13277
 19002  001CFE                     l13273:
 19003                           
 19004                           ; BSR set to: 1
 19005                           ;lorawan.c: 1911: {
 19006                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 19007  001CFE  0100               	movlb	0	; () banked
 19008  001D00  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19009  001D02  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19010  001D04  6ED9               	movwf	fsr2l,c
 19011  001D06  0E00               	movlw	0
 19012  001D08  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19013  001D0A  6EDA               	movwf	fsr2h,c
 19014  001D0C  0E20               	movlw	32
 19015  001D0E  D00A               	goto	L10
 19016  001D10                     l13277:
 19017                           
 19018                           ; BSR set to: 1
 19019                           ;lorawan.c: 1914: else
 19020                           ;lorawan.c: 1915: {
 19021                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 19022  001D10  0100               	movlb	0	; () banked
 19023  001D12  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19024  001D14  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19025  001D16  6ED9               	movwf	fsr2l,c
 19026  001D18  0E00               	movlw	0
 19027  001D1A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19028  001D1C  6EDA               	movwf	fsr2h,c
 19029  001D1E  EC38  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 19030  001D22  0B3F               	andlw	63
 19031  001D24                     L10:
 19032  001D24  6EDF               	movwf	indf2,c
 19033  001D26  D78A               	goto	l13241
 19034  001D28                     l13281:
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;lorawan.c: 1922: {
 19038                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 19039  001D28  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19040  001D2A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19041  001D2C  6ED9               	movwf	fsr2l,c
 19042  001D2E  0E00               	movlw	0
 19043  001D30  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19044  001D32  6EDA               	movwf	fsr2h,c
 19045  001D34  0E07               	movlw	7
 19046  001D36  6EDF               	movwf	indf2,c
 19047                           
 19048                           ; BSR set to: 0
 19049  001D38  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 19053  001D3A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19054  001D3C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19055  001D3E  6ED9               	movwf	fsr2l,c
 19056  001D40  0E00               	movlw	0
 19057  001D42  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19058  001D44  6EDA               	movwf	fsr2h,c
 19059  001D46  6ADF               	clrf	indf2,c
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 19063  001D48  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19064  001D4A  0D02               	mullw	2
 19065  001D4C  0EA9               	movlw	low (_loRa+169)
 19066  001D4E  24F3               	addwf	prodl,w,c
 19067  001D50  6ED9               	movwf	fsr2l,c
 19068  001D52  0E02               	movlw	high (_loRa+169)
 19069  001D54  20F4               	addwfc	prodh,w,c
 19070  001D56  6EDA               	movwf	fsr2h,c
 19071  001D58  AEDF               	btfss	indf2,7,c
 19072  001D5A  D009               	goto	l13291
 19073                           
 19074                           ; BSR set to: 2
 19075                           ;lorawan.c: 1926: {
 19076                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 19077  001D5C  0100               	movlb	0	; () banked
 19078  001D5E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19079  001D60  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19080  001D62  6ED9               	movwf	fsr2l,c
 19081  001D64  0E00               	movlw	0
 19082  001D66  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19083  001D68  6EDA               	movwf	fsr2h,c
 19084  001D6A  0E00               	movlw	0
 19085  001D6C  80DB               	bsf	plusw2,0,c
 19086  001D6E                     l13291:
 19087                           
 19088                           ;lorawan.c: 1928: }
 19089                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19090  001D6E  0100               	movlb	0	; () banked
 19091  001D70  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19092  001D72  0D02               	mullw	2
 19093  001D74  0EA9               	movlw	low (_loRa+169)
 19094  001D76  24F3               	addwf	prodl,w,c
 19095  001D78  6ED9               	movwf	fsr2l,c
 19096  001D7A  0E02               	movlw	high (_loRa+169)
 19097  001D7C  20F4               	addwfc	prodh,w,c
 19098  001D7E  6EDA               	movwf	fsr2h,c
 19099  001D80  ACDF               	btfss	indf2,6,c
 19100  001D82  D75C               	goto	l13241
 19101                           
 19102                           ; BSR set to: 2
 19103                           ;lorawan.c: 1931: {
 19104                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 19105  001D84  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19106  001D86  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19107  001D88  6ED9               	movwf	fsr2l,c
 19108  001D8A  0E00               	movlw	0
 19109  001D8C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19110  001D8E  6EDA               	movwf	fsr2h,c
 19111  001D90  0E00               	movlw	0
 19112  001D92  82DB               	bsf	plusw2,1,c
 19113  001D94  D753               	goto	l13241
 19114  001D96                     l2283:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;lorawan.c: 1939: {
 19118                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 19119  001D96  0102               	movlb	2	; () banked
 19120  001D98  69DD               	setf	(_loRa+221)& (0+255),b
 19121                           
 19122                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 19123  001D9A  6BDE               	clrf	(_loRa+222)& (0+255),b
 19124  001D9C                     l13297:
 19125                           
 19126                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 19127  001D9C  0100               	movlb	0	; () banked
 19128  001D9E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19129  001DA0  0D02               	mullw	2
 19130  001DA2  0EA8               	movlw	low (_loRa+168)
 19131  001DA4  24F3               	addwf	prodl,w,c
 19132  001DA6  6ED9               	movwf	fsr2l,c
 19133  001DA8  0E02               	movlw	high (_loRa+168)
 19134  001DAA  20F4               	addwfc	prodh,w,c
 19135  001DAC  6EDA               	movwf	fsr2h,c
 19136  001DAE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19137  001DB0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19138  001DB2  6EE9               	movwf	fsr0l,c
 19139  001DB4  0E00               	movlw	0
 19140  001DB6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19141  001DB8  6EEA               	movwf	fsr0h,c
 19142  001DBA  CFDF FFEF          	movff	indf2,indf0
 19143  001DBE  D73E               	goto	l13241
 19144  001DC0                     l13307:
 19145                           
 19146                           ; BSR set to: 0
 19147  001DC0  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19148  001DC2  0D02               	mullw	2
 19149  001DC4  0EA8               	movlw	low (_loRa+168)
 19150  001DC6  24F3               	addwf	prodl,w,c
 19151  001DC8  6ED9               	movwf	fsr2l,c
 19152  001DCA  0E02               	movlw	high (_loRa+168)
 19153  001DCC  20F4               	addwfc	prodh,w,c
 19154  001DCE  6EDA               	movwf	fsr2h,c
 19155  001DD0  50DF               	movf	indf2,w,c
 19156                           
 19157                           ; Switch size 1, requested type "speed"
 19158                           ; Number of cases is 7, Range of values is 2 to 8
 19159                           ; switch strategies available:
 19160                           ; Name         Instructions Cycles
 19161                           ; simple_byte           22    12 (average)
 19162                           ;	Chosen strategy is simple_byte
 19163  001DD2  0A02               	xorlw	2	; case 2
 19164  001DD4  E0E0               	bz	l2283
 19165  001DD6  0A01               	xorlw	1	; case 3
 19166  001DD8  E101 D6E6          	bz	l13223
 19167  001DDC  0A07               	xorlw	7	; case 4
 19168  001DDE  E0DE               	bz	l13297
 19169  001DE0  0A01               	xorlw	1	; case 5
 19170  001DE2  E101 D72E          	bz	l13243
 19171  001DE6  0A03               	xorlw	3	; case 6
 19172  001DE8  E101 D76D          	bz	l13263
 19173  001DEC  0A01               	xorlw	1	; case 7
 19174  001DEE  E09C               	bz	l13281
 19175  001DF0  0A0F               	xorlw	15	; case 8
 19176  001DF2  E0D4               	bz	l13297
 19177  001DF4                     l13309:
 19178                           
 19179                           ; BSR set to: 0
 19180  001DF4  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19181  001DF6                     l13311:
 19182                           
 19183                           ; BSR set to: 0
 19184  001DF6  0102               	movlb	2	; () banked
 19185  001DF8  51A7               	movf	(_loRa+167)& (0+255),w,b
 19186  001DFA  0100               	movlb	0	; () banked
 19187  001DFC  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19188  001DFE  E201 D691          	bnc	l13215
 19189  001E02                     l13313:
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;lorawan.c: 1957: }
 19193                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19194  001E02  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19195  001E04  6ED9               	movwf	fsr2l,c
 19196  001E06  6ADA               	clrf	fsr2h,c
 19197  001E08  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19198                           
 19199                           ; BSR set to: 0
 19200  001E0C  0012               	return		;funcret
 19201  001E0E                     __end_of_IncludeMacCommandsResponse:
 19202                           	opt stack 0
 19203                           tosu	equ	0xFFF
 19204                           tosh	equ	0xFFE
 19205                           tosl	equ	0xFFD
 19206                           pclath	equ	0xFFA
 19207                           tblptru	equ	0xFF8
 19208                           tblptrh	equ	0xFF7
 19209                           tblptrl	equ	0xFF6
 19210                           tablat	equ	0xFF5
 19211                           prodh	equ	0xFF4
 19212                           prodl	equ	0xFF3
 19213                           intcon	equ	0xFF2
 19214                           intcon2	equ	0xFF1
 19215                           intcon3	equ	0xFF0
 19216                           indf0	equ	0xFEF
 19217                           postinc0	equ	0xFEE
 19218                           fsr0h	equ	0xFEA
 19219                           fsr0l	equ	0xFE9
 19220                           wreg	equ	0xFE8
 19221                           postinc1	equ	0xFE6
 19222                           postdec1	equ	0xFE5
 19223                           plusw1	equ	0xFE3
 19224                           fsr1h	equ	0xFE2
 19225                           fsr1l	equ	0xFE1
 19226                           indf2	equ	0xFDF
 19227                           postinc2	equ	0xFDE
 19228                           postdec2	equ	0xFDD
 19229                           plusw2	equ	0xFDB
 19230                           fsr2h	equ	0xFDA
 19231                           fsr2l	equ	0xFD9
 19232                           status	equ	0xFD8
 19233                           
 19234 ;; *************** function _RADIO_GetPacketSnr *****************
 19235 ;; Defined at:
 19236 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19237 ;; Parameters:    Size  Location     Type
 19238 ;;		None
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;		None
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  1    wreg      char 
 19243 ;; Registers used:
 19244 ;;		wreg, status,2
 19245 ;; Tracked objects:
 19246 ;;		On entry : E/0
 19247 ;;		On exit  : F/1
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19254 ;;Total ram usage:        0 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:    7
 19257 ;; This function calls:
 19258 ;;		Nothing
 19259 ;; This function is called by:
 19260 ;;		_IncludeMacCommandsResponse
 19261 ;; This function uses a non-reentrant model
 19262 ;;
 19263                           
 19264                           	psect	text101
 19265  007870                     __ptext101:
 19266                           	opt stack 0
 19267  007870                     _RADIO_GetPacketSnr:
 19268                           	opt stack 19
 19269                           
 19270                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;incstack = 0
 19274  007870  0101               	movlb	1	; () banked
 19275  007872  51B0               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19276                           
 19277                           ; BSR set to: 1
 19278  007874  0012               	return		;funcret
 19279  007876                     __end_of_RADIO_GetPacketSnr:
 19280                           	opt stack 0
 19281                           tosu	equ	0xFFF
 19282                           tosh	equ	0xFFE
 19283                           tosl	equ	0xFFD
 19284                           pclath	equ	0xFFA
 19285                           tblptru	equ	0xFF8
 19286                           tblptrh	equ	0xFF7
 19287                           tblptrl	equ	0xFF6
 19288                           tablat	equ	0xFF5
 19289                           prodh	equ	0xFF4
 19290                           prodl	equ	0xFF3
 19291                           intcon	equ	0xFF2
 19292                           intcon2	equ	0xFF1
 19293                           intcon3	equ	0xFF0
 19294                           indf0	equ	0xFEF
 19295                           postinc0	equ	0xFEE
 19296                           fsr0h	equ	0xFEA
 19297                           fsr0l	equ	0xFE9
 19298                           wreg	equ	0xFE8
 19299                           postinc1	equ	0xFE6
 19300                           postdec1	equ	0xFE5
 19301                           plusw1	equ	0xFE3
 19302                           fsr1h	equ	0xFE2
 19303                           fsr1l	equ	0xFE1
 19304                           indf2	equ	0xFDF
 19305                           postinc2	equ	0xFDE
 19306                           postdec2	equ	0xFDD
 19307                           plusw2	equ	0xFDB
 19308                           fsr2h	equ	0xFDA
 19309                           fsr2l	equ	0xFD9
 19310                           status	equ	0xFD8
 19311                           
 19312 ;; *************** function _FindSmallestDataRate *****************
 19313 ;; Defined at:
 19314 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19315 ;; Parameters:    Size  Location     Type
 19316 ;;		None
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19319 ;;  i               1    6[BANK0 ] unsigned char 
 19320 ;;  found           1    5[BANK0 ] unsigned char 
 19321 ;; Return value:  Size  Location     Type
 19322 ;;                  1    wreg      unsigned char 
 19323 ;; Registers used:
 19324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19325 ;; Tracked objects:
 19326 ;;		On entry : F/2
 19327 ;;		On exit  : F/0
 19328 ;;		Unchanged: 0/0
 19329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19331 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19333 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19334 ;;Total ram usage:        4 bytes
 19335 ;; Hardware stack levels used:    1
 19336 ;; Hardware stack levels required when called:    7
 19337 ;; This function calls:
 19338 ;;		Nothing
 19339 ;; This function is called by:
 19340 ;;		_AckRetransmissionCallback
 19341 ;;		_AssemblePacket
 19342 ;; This function uses a non-reentrant model
 19343 ;;
 19344                           
 19345                           	psect	text102
 19346  0058F6                     __ptext102:
 19347                           	opt stack 0
 19348  0058F6                     _FindSmallestDataRate:
 19349                           	opt stack 20
 19350                           
 19351                           ; BSR set to: 2
 19352                           ;lorawan.c: 1966: bool found = 0;
 19353                           
 19354                           ; BSR set to: 1
 19355                           ;incstack = 0
 19356  0058F6  0100               	movlb	0	; () banked
 19357  0058F8  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19361  0058FA  0102               	movlb	2	; () banked
 19362  0058FC  51DF               	movf	(_loRa+223)& (0+255),w,b
 19363  0058FE  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19364  005900  E24A               	bc	l13141
 19365                           
 19366                           ; BSR set to: 2
 19367                           ;lorawan.c: 1969: {
 19368                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19369  005902  05DF               	decf	(_loRa+223)& (0+255),w,b
 19370  005904  0100               	movlb	0	; () banked
 19371  005906  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19372                           
 19373                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19374  005908  D03A               	goto	l13133
 19375  00590A                     l2292:
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;lorawan.c: 1973: {
 19379                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19380  00590A  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19381  00590C  D02B               	goto	l13125
 19382  00590E                     l13115:
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;lorawan.c: 1975: {
 19386                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19387  00590E  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19388  005910  0D0E               	mullw	14
 19389  005912  0E05               	movlw	low (_Channels+5)
 19390  005914  24F3               	addwf	prodl,w,c
 19391  005916  6ED9               	movwf	fsr2l,c
 19392  005918  0E04               	movlw	high (_Channels+5)
 19393  00591A  20F4               	addwfc	prodh,w,c
 19394  00591C  6EDA               	movwf	fsr2h,c
 19395  00591E  50DF               	movf	223,w,c
 19396  005920  0B0F               	andlw	15
 19397  005922  0100               	movlb	0	; () banked
 19398  005924  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19399  005926  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19400  005928  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19401  00592A  E31B               	bnc	l13123
 19402                           
 19403                           ; BSR set to: 0
 19404  00592C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19405  00592E  0D0E               	mullw	14
 19406  005930  0E05               	movlw	low (_Channels+5)
 19407  005932  24F3               	addwf	prodl,w,c
 19408  005934  6ED9               	movwf	fsr2l,c
 19409  005936  0E04               	movlw	high (_Channels+5)
 19410  005938  20F4               	addwfc	prodh,w,c
 19411  00593A  6EDA               	movwf	fsr2h,c
 19412  00593C  38DF               	swapf	223,w,c
 19413  00593E  0B0F               	andlw	15
 19414  005940  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19415  005942  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19416  005944  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19417  005946  E30D               	bnc	l13123
 19418                           
 19419                           ; BSR set to: 0
 19420  005948  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19421  00594A  0D0E               	mullw	14
 19422  00594C  0E04               	movlw	low (_Channels+4)
 19423  00594E  24F3               	addwf	prodl,w,c
 19424  005950  6ED9               	movwf	fsr2l,c
 19425  005952  0E04               	movlw	high (_Channels+4)
 19426  005954  20F4               	addwfc	prodh,w,c
 19427  005956  6EDA               	movwf	fsr2h,c
 19428  005958  04DE               	decf	postinc2,w,c
 19429  00595A  E103               	bnz	l13123
 19430                           
 19431                           ; BSR set to: 0
 19432                           ;lorawan.c: 1977: {
 19433                           ;lorawan.c: 1978: found = 1;
 19434  00595C  0E01               	movlw	1
 19435  00595E  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19436                           
 19437                           ;lorawan.c: 1979: break;
 19438  005960  D006               	goto	l13127
 19439  005962                     l13123:
 19440                           
 19441                           ; BSR set to: 0
 19442  005962  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19443  005964                     l13125:
 19444                           
 19445                           ; BSR set to: 0
 19446  005964  0102               	movlb	2	; () banked
 19447  005966  51ED               	movf	(_loRa+237)& (0+255),w,b
 19448  005968  0100               	movlb	0	; () banked
 19449  00596A  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19450  00596C  E3D0               	bnc	l13115
 19451  00596E                     l13127:
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;lorawan.c: 1980: }
 19455                           ;lorawan.c: 1981: }
 19456                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19457  00596E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19458  005970  E106               	bnz	l13133
 19459                           
 19460                           ; BSR set to: 0
 19461  005972  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19462  005974  0102               	movlb	2	; () banked
 19463  005976  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19464  005978  E202               	bc	l13133
 19465                           
 19466                           ; BSR set to: 2
 19467                           ;lorawan.c: 1983: {
 19468                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19469  00597A  0100               	movlb	0	; () banked
 19470  00597C  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19471  00597E                     l13133:
 19472  00597E  0100               	movlb	0	; () banked
 19473  005980  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19474  005982  E105               	bnz	l13137
 19475                           
 19476                           ; BSR set to: 0
 19477  005984  0102               	movlb	2	; () banked
 19478  005986  51EB               	movf	(_loRa+235)& (0+255),w,b
 19479  005988  0100               	movlb	0	; () banked
 19480  00598A  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19481  00598C  E2BE               	bc	l2292
 19482  00598E                     l13137:
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;lorawan.c: 1985: }
 19486                           ;lorawan.c: 1986: }
 19487                           ;lorawan.c: 1988: if (found == 1)
 19488  00598E  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19489  005990  E102               	bnz	l13141
 19490                           
 19491                           ; BSR set to: 0
 19492                           ;lorawan.c: 1989: {
 19493                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19494  005992  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19495  005996                     l13141:
 19496                           
 19497                           ;lorawan.c: 1991: }
 19498                           ;lorawan.c: 1992: }
 19499                           ;lorawan.c: 1994: return found;
 19500  005996  0100               	movlb	0	; () banked
 19501  005998  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19502                           
 19503                           ; BSR set to: 0
 19504  00599A  0012               	return		;funcret
 19505  00599C                     __end_of_FindSmallestDataRate:
 19506                           	opt stack 0
 19507                           tosu	equ	0xFFF
 19508                           tosh	equ	0xFFE
 19509                           tosl	equ	0xFFD
 19510                           pclath	equ	0xFFA
 19511                           tblptru	equ	0xFF8
 19512                           tblptrh	equ	0xFF7
 19513                           tblptrl	equ	0xFF6
 19514                           tablat	equ	0xFF5
 19515                           prodh	equ	0xFF4
 19516                           prodl	equ	0xFF3
 19517                           intcon	equ	0xFF2
 19518                           intcon2	equ	0xFF1
 19519                           intcon3	equ	0xFF0
 19520                           indf0	equ	0xFEF
 19521                           postinc0	equ	0xFEE
 19522                           fsr0h	equ	0xFEA
 19523                           fsr0l	equ	0xFE9
 19524                           wreg	equ	0xFE8
 19525                           postinc1	equ	0xFE6
 19526                           postdec1	equ	0xFE5
 19527                           plusw1	equ	0xFE3
 19528                           fsr1h	equ	0xFE2
 19529                           fsr1l	equ	0xFE1
 19530                           indf2	equ	0xFDF
 19531                           postinc2	equ	0xFDE
 19532                           postdec2	equ	0xFDD
 19533                           plusw2	equ	0xFDB
 19534                           fsr2h	equ	0xFDA
 19535                           fsr2l	equ	0xFD9
 19536                           status	equ	0xFD8
 19537                           
 19538 ;; *************** function _EncryptFRMPayload *****************
 19539 ;; Defined at:
 19540 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19541 ;; Parameters:    Size  Location     Type
 19542 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 19543 ;;		 -> payload(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19544 ;;  bufferLength    1   54[BANK0 ] unsigned char 
 19545 ;;  dir             1   55[BANK0 ] unsigned char 
 19546 ;;  frameCounter    4   56[BANK0 ] unsigned long 
 19547 ;;  key             2   60[BANK0 ] PTR unsigned char 
 19548 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19549 ;;  macBufferInd    1   62[BANK0 ] unsigned char 
 19550 ;;  bufferToBeEn    2   63[BANK0 ] PTR unsigned char 
 19551 ;;		 -> macBuffer(271), radioBuffer(271), 
 19552 ;;  multicastSta    1   65[BANK0 ] unsigned char 
 19553 ;; Auto vars:     Size  Location     Type
 19554 ;;  j               1   73[BANK0 ] unsigned char 
 19555 ;;  i               1   72[BANK0 ] unsigned char 
 19556 ;;  k               1   71[BANK0 ] unsigned char 
 19557 ;; Return value:  Size  Location     Type
 19558 ;;                  1    wreg      void 
 19559 ;; Registers used:
 19560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19561 ;; Tracked objects:
 19562 ;;		On entry : F/0
 19563 ;;		On exit  : F/0
 19564 ;;		Unchanged: 0/0
 19565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19566 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19568 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19569 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19570 ;;Total ram usage:       22 bytes
 19571 ;; Hardware stack levels used:    1
 19572 ;; Hardware stack levels required when called:   10
 19573 ;; This function calls:
 19574 ;;		_AESEncodeLoRa
 19575 ;;		_AssembleEncryptionBlock
 19576 ;; This function is called by:
 19577 ;;		_LORAWAN_RxDone
 19578 ;;		_AssemblePacket
 19579 ;; This function uses a non-reentrant model
 19580 ;;
 19581                           
 19582                           	psect	text103
 19583  004136                     __ptext103:
 19584                           	opt stack 0
 19585  004136                     _EncryptFRMPayload:
 19586                           	opt stack 17
 19587                           
 19588                           ; BSR set to: 0
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;incstack = 0
 19592  004136  6BA8               	clrf	EncryptFRMPayload@i& (0+255),b
 19593  004138  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19594                           
 19595                           ; BSR set to: 0
 19596                           ;lorawan.c: 2209: k = bufferLength / 16;
 19597  00413A  3996               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19598  00413C  0B0F               	andlw	15
 19599  00413E  6FA7               	movwf	EncryptFRMPayload@k& (0+255),b
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19603  004140  0E01               	movlw	1
 19604  004142  6FA8               	movwf	EncryptFRMPayload@i& (0+255),b
 19605  004144  D051               	goto	l13177
 19606  004146                     l13159:
 19607                           
 19608                           ; BSR set to: 0
 19609                           ;lorawan.c: 2211: {
 19610                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19611  004146  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19612  00414A  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19613  00414E  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19614  004152  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19615  004156  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19616  00415A  0E01               	movlw	1
 19617  00415C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19618  00415E  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19619  004162  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19620  004164  EC22  F02C         	call	_AssembleEncryptionBlock
 19621                           
 19622                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19623  004168  0EB4               	movlw	low _aesBuffer
 19624  00416A  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19625  00416C  0E01               	movlw	high _aesBuffer
 19626  00416E  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19627  004170  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19628  004174  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19629  004178  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19633  00417C  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19634  00417E                     l13167:
 19635                           
 19636                           ; BSR set to: 0
 19637                           ;lorawan.c: 2216: {
 19638                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19639  00417E  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19640  004180  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19641  004182  6ED9               	movwf	fsr2l,c
 19642  004184  0E00               	movlw	0
 19643  004186  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19644  004188  6EDA               	movwf	fsr2h,c
 19645  00418A  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19646  00418C  6FA2               	movwf	??_EncryptFRMPayload& (0+255),b
 19647  00418E  6BA3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19648  004190  3BA2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19649  004192  3BA3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19650  004194  0EF0               	movlw	240
 19651  004196  17A3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19652  004198  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19653  00419A  0B0F               	andlw	15
 19654  00419C  13A3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19655  00419E  0EF0               	movlw	240
 19656  0041A0  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19657  0041A2  C094  F0A4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19658  0041A6  C095  F0A5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19659  0041AA  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19660  0041AC  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19661  0041AE  51A3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19662  0041B0  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19663  0041B2  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19664  0041B4  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19665  0041B6  0E00               	movlw	0
 19666  0041B8  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19667  0041BA  0EF0               	movlw	240
 19668  0041BC  25A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19669  0041BE  6EE9               	movwf	fsr0l,c
 19670  0041C0  0EFF               	movlw	255
 19671  0041C2  21A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19672  0041C4  6EEA               	movwf	fsr0h,c
 19673  0041C6  50EF               	movf	indf0,w,c
 19674  0041C8  6FA6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19675  0041CA  0EB4               	movlw	low _aesBuffer
 19676  0041CC  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19677  0041CE  6EE9               	movwf	fsr0l,c
 19678  0041D0  6AEA               	clrf	fsr0h,c
 19679  0041D2  0E01               	movlw	high _aesBuffer
 19680  0041D4  22EA               	addwfc	fsr0h,f,c
 19681  0041D6  50EF               	movf	indf0,w,c
 19682  0041D8  19A6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19683  0041DA  6EDF               	movwf	indf2,c
 19684                           
 19685                           ; BSR set to: 0
 19686  0041DC  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19687                           
 19688                           ; BSR set to: 0
 19689  0041DE  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19690                           
 19691                           ; BSR set to: 0
 19692  0041E0  0E0F               	movlw	15
 19693  0041E2  65A9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19694  0041E4  D7CC               	goto	l13167
 19695                           
 19696                           ; BSR set to: 0
 19697  0041E6  2BA8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19698  0041E8                     l13177:
 19699                           
 19700                           ; BSR set to: 0
 19701  0041E8  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19702  0041EA  5DA7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19703  0041EC  E2AC               	bc	l13159
 19704                           
 19705                           ; BSR set to: 0
 19706                           ;lorawan.c: 2218: }
 19707                           ;lorawan.c: 2219: }
 19708                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19709  0041EE  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19710  0041F2  0E0F               	movlw	15
 19711  0041F4  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19712  0041F6  B4D8               	btfsc	status,2,c
 19713  0041F8  0C0F               	retlw	15
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;lorawan.c: 2222: {
 19717                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19718  0041FA  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19719  0041FE  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19720  004202  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19721  004206  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19722  00420A  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19723  00420E  0E01               	movlw	1
 19724  004210  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19725  004212  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19726  004216  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19727  004218  EC22  F02C         	call	_AssembleEncryptionBlock
 19728                           
 19729                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19730  00421C  0EB4               	movlw	low _aesBuffer
 19731  00421E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19732  004220  0E01               	movlw	high _aesBuffer
 19733  004222  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19734  004224  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19735  004228  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19736  00422C  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19740  004230  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19741  004232  D023               	goto	l13191
 19742  004234                     l13185:
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;lorawan.c: 2227: {
 19746                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19747  004234  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19748  004236  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19749  004238  6ED9               	movwf	fsr2l,c
 19750  00423A  0E00               	movlw	0
 19751  00423C  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19752  00423E  6EDA               	movwf	fsr2h,c
 19753  004240  51A7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19754  004242  0D10               	mullw	16
 19755  004244  C094  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19756  004248  C095  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19757  00424C  50F3               	movf	prodl,w,c
 19758  00424E  27A2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19759  004250  50F4               	movf	prodh,w,c
 19760  004252  23A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19761  004254  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19762  004256  25A2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19763  004258  6EE9               	movwf	fsr0l,c
 19764  00425A  0E00               	movlw	0
 19765  00425C  21A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19766  00425E  6EEA               	movwf	fsr0h,c
 19767  004260  50EF               	movf	indf0,w,c
 19768  004262  6FA4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19769  004264  0EB4               	movlw	low _aesBuffer
 19770  004266  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19771  004268  6EE9               	movwf	fsr0l,c
 19772  00426A  6AEA               	clrf	fsr0h,c
 19773  00426C  0E01               	movlw	high _aesBuffer
 19774  00426E  22EA               	addwfc	fsr0h,f,c
 19775  004270  50EF               	movf	indf0,w,c
 19776  004272  19A4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19777  004274  6EDF               	movwf	indf2,c
 19778                           
 19779                           ; BSR set to: 0
 19780  004276  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19781                           
 19782                           ; BSR set to: 0
 19783  004278  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19784  00427A                     l13191:
 19785                           
 19786                           ; BSR set to: 0
 19787  00427A  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19788  00427E  0E0F               	movlw	15
 19789  004280  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19790  004282  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19791  004284  5DA9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19792  004286  E3D6               	bnc	l13185
 19793                           
 19794                           ; BSR set to: 0
 19795  004288  0012               	return		;funcret
 19796  00428A                     __end_of_EncryptFRMPayload:
 19797                           	opt stack 0
 19798                           tosu	equ	0xFFF
 19799                           tosh	equ	0xFFE
 19800                           tosl	equ	0xFFD
 19801                           pclath	equ	0xFFA
 19802                           tblptru	equ	0xFF8
 19803                           tblptrh	equ	0xFF7
 19804                           tblptrl	equ	0xFF6
 19805                           tablat	equ	0xFF5
 19806                           prodh	equ	0xFF4
 19807                           prodl	equ	0xFF3
 19808                           intcon	equ	0xFF2
 19809                           intcon2	equ	0xFF1
 19810                           intcon3	equ	0xFF0
 19811                           indf0	equ	0xFEF
 19812                           postinc0	equ	0xFEE
 19813                           fsr0h	equ	0xFEA
 19814                           fsr0l	equ	0xFE9
 19815                           wreg	equ	0xFE8
 19816                           postinc1	equ	0xFE6
 19817                           postdec1	equ	0xFE5
 19818                           plusw1	equ	0xFE3
 19819                           fsr1h	equ	0xFE2
 19820                           fsr1l	equ	0xFE1
 19821                           indf2	equ	0xFDF
 19822                           postinc2	equ	0xFDE
 19823                           postdec2	equ	0xFDD
 19824                           plusw2	equ	0xFDB
 19825                           fsr2h	equ	0xFDA
 19826                           fsr2l	equ	0xFD9
 19827                           status	equ	0xFD8
 19828                           
 19829 ;; *************** function _AssembleEncryptionBlock *****************
 19830 ;; Defined at:
 19831 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19832 ;; Parameters:    Size  Location     Type
 19833 ;;  dir             1    wreg     unsigned char 
 19834 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19835 ;;  blockId         1   18[BANK0 ] unsigned char 
 19836 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19837 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19838 ;; Auto vars:     Size  Location     Type
 19839 ;;  dir             1   21[BANK0 ] unsigned char 
 19840 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19841 ;; Return value:  Size  Location     Type
 19842 ;;                  1    wreg      void 
 19843 ;; Registers used:
 19844 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19845 ;; Tracked objects:
 19846 ;;		On entry : F/0
 19847 ;;		On exit  : F/0
 19848 ;;		Unchanged: 0/0
 19849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19850 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19853 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;Total ram usage:        9 bytes
 19855 ;; Hardware stack levels used:    1
 19856 ;; Hardware stack levels required when called:    8
 19857 ;; This function calls:
 19858 ;;		_memcpy
 19859 ;;		_memset
 19860 ;; This function is called by:
 19861 ;;		_LORAWAN_RxDone
 19862 ;;		_AssemblePacket
 19863 ;;		_EncryptFRMPayload
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text104
 19868  005844                     __ptext104:
 19869                           	opt stack 0
 19870  005844                     _AssembleEncryptionBlock:
 19871                           	opt stack 18
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;incstack = 0
 19875                           ;AssembleEncryptionBlock@dir stored from wreg
 19876  005844  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19877                           
 19878                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19879  005846  0100               	movlb	0	; () banked
 19880  005848  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19881                           
 19882                           ; BSR set to: 0
 19883                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19884  00584A  0EB4               	movlw	low _aesBuffer
 19885  00584C  6F64               	movwf	memset@p1& (0+255),b
 19886  00584E  0E01               	movlw	high _aesBuffer
 19887  005850  6F65               	movwf	(memset@p1+1)& (0+255),b
 19888  005852  6B67               	clrf	(memset@c+1)& (0+255),b
 19889  005854  6B66               	clrf	memset@c& (0+255),b
 19890  005856  6B69               	clrf	(memset@n+1)& (0+255),b
 19891  005858  0E10               	movlw	16
 19892  00585A  6F68               	movwf	memset@n& (0+255),b
 19893  00585C  ECDC  F038         	call	_memset	;wreg free
 19894                           
 19895                           ; BSR set to: 0
 19896                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19897  005860  C073  F1B4         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19898                           
 19899                           ; BSR set to: 0
 19900                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19901  005864  0E05               	movlw	5
 19902  005866  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19906  005868  0EB4               	movlw	low _aesBuffer
 19907  00586A  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19908  00586C  6ED9               	movwf	fsr2l,c
 19909  00586E  6ADA               	clrf	fsr2h,c
 19910  005870  0E01               	movlw	high _aesBuffer
 19911  005872  22DA               	addwfc	fsr2h,f,c
 19912  005874  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19913                           
 19914                           ; BSR set to: 0
 19915  005878  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19916                           
 19917                           ; BSR set to: 0
 19918                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19919  00587A  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19920  00587C  E112               	bnz	l12719
 19921                           
 19922                           ; BSR set to: 0
 19923                           ;lorawan.c: 2169: {
 19924                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19925  00587E  0EB4               	movlw	low _aesBuffer
 19926  005880  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19927  005882  6F64               	movwf	memcpy@d1& (0+255),b
 19928  005884  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19929  005886  0E01               	movlw	high _aesBuffer
 19930  005888  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19931  00588A  0E1E               	movlw	low (_loRa+30)
 19932  00588C  6F66               	movwf	memcpy@s1& (0+255),b
 19933  00588E  0E02               	movlw	high (_loRa+30)
 19934  005890  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19935  005892  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19936  005894  0E04               	movlw	4
 19937  005896  6F68               	movwf	memcpy@n& (0+255),b
 19938  005898  ECFF  F033         	call	_memcpy	;wreg free
 19939  00589C                     l12717:
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19943  00589C  0E04               	movlw	4
 19944  00589E  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19945                           
 19946                           ;lorawan.c: 2172: }
 19947  0058A0  D010               	goto	l12723
 19948  0058A2                     l12719:
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;lorawan.c: 2173: else
 19952                           ;lorawan.c: 2174: {
 19953                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19954  0058A2  0EB4               	movlw	low _aesBuffer
 19955  0058A4  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19956  0058A6  6F64               	movwf	memcpy@d1& (0+255),b
 19957  0058A8  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19958  0058AA  0E01               	movlw	high _aesBuffer
 19959  0058AC  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19960  0058AE  0E62               	movlw	low (_loRa+98)
 19961  0058B0  6F66               	movwf	memcpy@s1& (0+255),b
 19962  0058B2  0E02               	movlw	high (_loRa+98)
 19963  0058B4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19964  0058B6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19965  0058B8  0E04               	movlw	4
 19966  0058BA  6F68               	movwf	memcpy@n& (0+255),b
 19967  0058BC  ECFF  F033         	call	_memcpy	;wreg free
 19968  0058C0  D7ED               	goto	l12717
 19969  0058C2                     l12723:
 19970                           
 19971                           ; BSR set to: 0
 19972                           ;lorawan.c: 2177: }
 19973                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 19974  0058C2  0EB4               	movlw	low _aesBuffer
 19975  0058C4  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19976  0058C6  6F64               	movwf	memcpy@d1& (0+255),b
 19977  0058C8  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19978  0058CA  0E01               	movlw	high _aesBuffer
 19979  0058CC  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19980  0058CE  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 19981  0058D0  6F66               	movwf	memcpy@s1& (0+255),b
 19982  0058D2  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 19983  0058D4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19984  0058D6  0E04               	movlw	4
 19985  0058D8  6F68               	movwf	memcpy@n& (0+255),b
 19986  0058DA  ECFF  F033         	call	_memcpy	;wreg free
 19987                           
 19988                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 19989  0058DE  0E04               	movlw	4
 19990  0058E0  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;lorawan.c: 2182: bufferIndex ++;
 19994  0058E2  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19995                           
 19996                           ; BSR set to: 0
 19997                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 19998  0058E4  0EB4               	movlw	low _aesBuffer
 19999  0058E6  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20000  0058E8  6ED9               	movwf	fsr2l,c
 20001  0058EA  6ADA               	clrf	fsr2h,c
 20002  0058EC  0E01               	movlw	high _aesBuffer
 20003  0058EE  22DA               	addwfc	fsr2h,f,c
 20004  0058F0  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 20005                           
 20006                           ; BSR set to: 0
 20007  0058F4  0012               	return		;funcret
 20008  0058F6                     __end_of_AssembleEncryptionBlock:
 20009                           	opt stack 0
 20010                           tosu	equ	0xFFF
 20011                           tosh	equ	0xFFE
 20012                           tosl	equ	0xFFD
 20013                           pclath	equ	0xFFA
 20014                           tblptru	equ	0xFF8
 20015                           tblptrh	equ	0xFF7
 20016                           tblptrl	equ	0xFF6
 20017                           tablat	equ	0xFF5
 20018                           prodh	equ	0xFF4
 20019                           prodl	equ	0xFF3
 20020                           intcon	equ	0xFF2
 20021                           intcon2	equ	0xFF1
 20022                           intcon3	equ	0xFF0
 20023                           indf0	equ	0xFEF
 20024                           postinc0	equ	0xFEE
 20025                           fsr0h	equ	0xFEA
 20026                           fsr0l	equ	0xFE9
 20027                           wreg	equ	0xFE8
 20028                           postinc1	equ	0xFE6
 20029                           postdec1	equ	0xFE5
 20030                           plusw1	equ	0xFE3
 20031                           fsr1h	equ	0xFE2
 20032                           fsr1l	equ	0xFE1
 20033                           indf2	equ	0xFDF
 20034                           postinc2	equ	0xFDE
 20035                           postdec2	equ	0xFDD
 20036                           plusw2	equ	0xFDB
 20037                           fsr2h	equ	0xFDA
 20038                           fsr2l	equ	0xFD9
 20039                           status	equ	0xFD8
 20040                           
 20041 ;; *************** function _CountfOptsLength *****************
 20042 ;; Defined at:
 20043 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;		None
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;  i               1   11[BANK0 ] unsigned char 
 20048 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 20049 ;; Return value:  Size  Location     Type
 20050 ;;                  1    wreg      unsigned char 
 20051 ;; Registers used:
 20052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20053 ;; Tracked objects:
 20054 ;;		On entry : D/2
 20055 ;;		On exit  : F/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20060 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20061 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20062 ;;Total ram usage:        8 bytes
 20063 ;; Hardware stack levels used:    1
 20064 ;; Hardware stack levels required when called:    7
 20065 ;; This function calls:
 20066 ;;		Nothing
 20067 ;; This function is called by:
 20068 ;;		_LORAWAN_GetMaxPayloadSize
 20069 ;;		_AssemblePacket
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           	psect	text105
 20074  0054B8                     __ptext105:
 20075                           	opt stack 0
 20076  0054B8                     _CountfOptsLength:
 20077                           	opt stack 20
 20078                           
 20079                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;incstack = 0
 20083  0054B8  0100               	movlb	0	; () banked
 20084  0054BA  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 20085                           
 20086                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 20087  0054BC  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 20088  0054BE  D053               	goto	l13203
 20089  0054C0                     l13195:
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;lorawan.c: 2139: {
 20093                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 20094  0054C0  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20095  0054C2  0D02               	mullw	2
 20096  0054C4  0EA8               	movlw	low (_loRa+168)
 20097  0054C6  24F3               	addwf	prodl,w,c
 20098  0054C8  6ED9               	movwf	fsr2l,c
 20099  0054CA  0E02               	movlw	high (_loRa+168)
 20100  0054CC  20F4               	addwfc	prodh,w,c
 20101  0054CE  6EDA               	movwf	fsr2h,c
 20102  0054D0  28DE               	incf	postinc2,w,c
 20103  0054D2  E048               	bz	l13201
 20104                           
 20105                           ; BSR set to: 0
 20106                           ;lorawan.c: 2141: {
 20107                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 20108  0054D4  0EFE               	movlw	254
 20109  0054D6  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20110  0054D8  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20111  0054DA  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20112  0054DC  0D02               	mullw	2
 20113  0054DE  0EA8               	movlw	low (_loRa+168)
 20114  0054E0  24F3               	addwf	prodl,w,c
 20115  0054E2  6ED9               	movwf	fsr2l,c
 20116  0054E4  0E02               	movlw	high (_loRa+168)
 20117  0054E6  20F4               	addwfc	prodh,w,c
 20118  0054E8  6EDA               	movwf	fsr2h,c
 20119  0054EA  50DF               	movf	indf2,w,c
 20120  0054EC  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20121  0054EE  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20122  0054F0  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20123  0054F2  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20124  0054F4  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20125  0054F6  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20126  0054F8  0E94               	movlw	low _macEndDevCmdReplyLen
 20127  0054FA  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20128  0054FC  6EF6               	movwf	tblptrl,c
 20129  0054FE  0EFF               	movlw	high _macEndDevCmdReplyLen
 20130  005500  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20131  005502  6EF7               	movwf	tblptrh,c
 20132  005504                     	if	1	;There are 3 active tblptr bytes
 20133  005504  6AF8               	clrf	tblptru,c
 20134  005506  0E00               	movlw	low (__mediumconst shr (0+16))
 20135  005508  22F8               	addwfc	tblptru,f,c
 20136  00550A                     	endif
 20137  00550A  0008               	tblrd		*
 20138  00550C  50F5               	movf	tablat,w,c
 20139  00550E  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 20140  005512  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 20141  005514  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 20142  005516  0E00               	movlw	0
 20143  005518  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 20144  00551A  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 20145  00551C  D005               	goto	l13199
 20146  00551E  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 20147  005520  E127               	bnz	l13205
 20148  005522  0E10               	movlw	16
 20149  005524  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 20150  005526  E224               	bc	l13205
 20151  005528                     l13199:
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;lorawan.c: 2143: {
 20155                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 20156  005528  0EFE               	movlw	254
 20157  00552A  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20158  00552C  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20159  00552E  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20160  005530  0D02               	mullw	2
 20161  005532  0EA8               	movlw	low (_loRa+168)
 20162  005534  24F3               	addwf	prodl,w,c
 20163  005536  6ED9               	movwf	fsr2l,c
 20164  005538  0E02               	movlw	high (_loRa+168)
 20165  00553A  20F4               	addwfc	prodh,w,c
 20166  00553C  6EDA               	movwf	fsr2h,c
 20167  00553E  50DF               	movf	indf2,w,c
 20168  005540  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20169  005542  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20170  005544  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20171  005546  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20172  005548  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20173  00554A  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20174  00554C  0E94               	movlw	low _macEndDevCmdReplyLen
 20175  00554E  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20176  005550  6EF6               	movwf	tblptrl,c
 20177  005552  0EFF               	movlw	high _macEndDevCmdReplyLen
 20178  005554  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20179  005556  6EF7               	movwf	tblptrh,c
 20180  005558                     	if	1	;There are 3 active tblptr bytes
 20181  005558  6AF8               	clrf	tblptru,c
 20182  00555A  0E00               	movlw	low (__mediumconst shr (0+16))
 20183  00555C  22F8               	addwfc	tblptru,f,c
 20184  00555E                     	endif
 20185  00555E  0008               	tblrd		*
 20186  005560  50F5               	movf	tablat,w,c
 20187  005562  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20188  005564                     l13201:
 20189                           
 20190                           ; BSR set to: 0
 20191  005564  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20192  005566                     l13203:
 20193                           
 20194                           ; BSR set to: 0
 20195  005566  0102               	movlb	2	; () banked
 20196  005568  51A7               	movf	(_loRa+167)& (0+255),w,b
 20197  00556A  0100               	movlb	0	; () banked
 20198  00556C  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20199  00556E  E3A8               	bnc	l13195
 20200  005570                     l13205:
 20201                           
 20202                           ; BSR set to: 0
 20203                           ;lorawan.c: 2149: }
 20204                           ;lorawan.c: 2150: }
 20205                           ;lorawan.c: 2151: }
 20206                           ;lorawan.c: 2153: return macCommandLength;
 20207  005570  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20208                           
 20209                           ; BSR set to: 0
 20210  005572  0012               	return		;funcret
 20211  005574                     __end_of_CountfOptsLength:
 20212                           	opt stack 0
 20213                           tosu	equ	0xFFF
 20214                           tosh	equ	0xFFE
 20215                           tosl	equ	0xFFD
 20216                           pclath	equ	0xFFA
 20217                           tblptru	equ	0xFF8
 20218                           tblptrh	equ	0xFF7
 20219                           tblptrl	equ	0xFF6
 20220                           tablat	equ	0xFF5
 20221                           prodh	equ	0xFF4
 20222                           prodl	equ	0xFF3
 20223                           intcon	equ	0xFF2
 20224                           intcon2	equ	0xFF1
 20225                           intcon3	equ	0xFF0
 20226                           indf0	equ	0xFEF
 20227                           postinc0	equ	0xFEE
 20228                           fsr0h	equ	0xFEA
 20229                           fsr0l	equ	0xFE9
 20230                           wreg	equ	0xFE8
 20231                           postinc1	equ	0xFE6
 20232                           postdec1	equ	0xFE5
 20233                           plusw1	equ	0xFE3
 20234                           fsr1h	equ	0xFE2
 20235                           fsr1l	equ	0xFE1
 20236                           indf2	equ	0xFDF
 20237                           postinc2	equ	0xFDE
 20238                           postdec2	equ	0xFDD
 20239                           plusw2	equ	0xFDB
 20240                           fsr2h	equ	0xFDA
 20241                           fsr2l	equ	0xFD9
 20242                           status	equ	0xFD8
 20243                           
 20244 ;; *************** function _ExtractMic *****************
 20245 ;; Defined at:
 20246 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20249 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20250 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20251 ;; Auto vars:     Size  Location     Type
 20252 ;;  mic             4   20[BANK0 ] unsigned long 
 20253 ;; Return value:  Size  Location     Type
 20254 ;;                  4   14[BANK0 ] unsigned long 
 20255 ;; Registers used:
 20256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20257 ;; Tracked objects:
 20258 ;;		On entry : F/0
 20259 ;;		On exit  : F/0
 20260 ;;		Unchanged: 0/0
 20261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20265 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20266 ;;Total ram usage:       10 bytes
 20267 ;; Hardware stack levels used:    1
 20268 ;; Hardware stack levels required when called:    8
 20269 ;; This function calls:
 20270 ;;		_memcpy
 20271 ;; This function is called by:
 20272 ;;		_LORAWAN_RxDone
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276                           	psect	text106
 20277  006C7E                     __ptext106:
 20278                           	opt stack 0
 20279  006C7E                     _ExtractMic:
 20280                           	opt stack 18
 20281                           
 20282                           ; BSR set to: 0
 20283                           ;lorawan.c: 2189: uint32_t mic = 0;
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;incstack = 0
 20287  006C7E  6B74               	clrf	ExtractMic@mic& (0+255),b
 20288  006C80  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20289  006C82  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20290  006C84  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20294  006C86  0E74               	movlw	low ExtractMic@mic
 20295  006C88  6F64               	movwf	memcpy@d1& (0+255),b
 20296  006C8A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20297  006C8C  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20298  006C8E  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20299  006C90  6F72               	movwf	??_ExtractMic& (0+255),b
 20300  006C92  0E00               	movlw	0
 20301  006C94  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20302  006C96  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20303  006C98  0EFC               	movlw	252
 20304  006C9A  2572               	addwf	??_ExtractMic& (0+255),w,b
 20305  006C9C  6F66               	movwf	memcpy@s1& (0+255),b
 20306  006C9E  0EFF               	movlw	255
 20307  006CA0  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20308  006CA2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20309  006CA4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20310  006CA6  0E04               	movlw	4
 20311  006CA8  6F68               	movwf	memcpy@n& (0+255),b
 20312  006CAA  ECFF  F033         	call	_memcpy	;wreg free
 20313                           
 20314                           ; BSR set to: 0
 20315                           ;lorawan.c: 2191: return mic;
 20316  006CAE  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20317  006CB2  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20318  006CB6  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20319  006CBA  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20320                           
 20321                           ; BSR set to: 0
 20322  006CBE  0012               	return		;funcret
 20323  006CC0                     __end_of_ExtractMic:
 20324                           	opt stack 0
 20325                           tosu	equ	0xFFF
 20326                           tosh	equ	0xFFE
 20327                           tosl	equ	0xFFD
 20328                           pclath	equ	0xFFA
 20329                           tblptru	equ	0xFF8
 20330                           tblptrh	equ	0xFF7
 20331                           tblptrl	equ	0xFF6
 20332                           tablat	equ	0xFF5
 20333                           prodh	equ	0xFF4
 20334                           prodl	equ	0xFF3
 20335                           intcon	equ	0xFF2
 20336                           intcon2	equ	0xFF1
 20337                           intcon3	equ	0xFF0
 20338                           indf0	equ	0xFEF
 20339                           postinc0	equ	0xFEE
 20340                           fsr0h	equ	0xFEA
 20341                           fsr0l	equ	0xFE9
 20342                           wreg	equ	0xFE8
 20343                           postinc1	equ	0xFE6
 20344                           postdec1	equ	0xFE5
 20345                           plusw1	equ	0xFE3
 20346                           fsr1h	equ	0xFE2
 20347                           fsr1l	equ	0xFE1
 20348                           indf2	equ	0xFDF
 20349                           postinc2	equ	0xFDE
 20350                           postdec2	equ	0xFDD
 20351                           plusw2	equ	0xFDB
 20352                           fsr2h	equ	0xFDA
 20353                           fsr2l	equ	0xFD9
 20354                           status	equ	0xFD8
 20355                           
 20356 ;; *************** function _ComputeSessionKeys *****************
 20357 ;; Defined at:
 20358 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20359 ;; Parameters:    Size  Location     Type
 20360 ;;  joinAcceptBu    2   52[BANK0 ] PTR struct .
 20361 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20362 ;; Auto vars:     Size  Location     Type
 20363 ;;		None
 20364 ;; Return value:  Size  Location     Type
 20365 ;;                  1    wreg      void 
 20366 ;; Registers used:
 20367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20368 ;; Tracked objects:
 20369 ;;		On entry : D/0
 20370 ;;		On exit  : F/0
 20371 ;;		Unchanged: 0/0
 20372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20373 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20377 ;;Total ram usage:        2 bytes
 20378 ;; Hardware stack levels used:    1
 20379 ;; Hardware stack levels required when called:   10
 20380 ;; This function calls:
 20381 ;;		_AESEncodeLoRa
 20382 ;;		_PrepareSessionKeys
 20383 ;; This function is called by:
 20384 ;;		_LORAWAN_RxDone
 20385 ;; This function uses a non-reentrant model
 20386 ;;
 20387                           
 20388                           	psect	text107
 20389  005E22                     __ptext107:
 20390                           	opt stack 0
 20391  005E22                     _ComputeSessionKeys:
 20392                           	opt stack 16
 20393                           
 20394                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;incstack = 0
 20398  005E22  0E32               	movlw	low (_loRa+50)
 20399  005E24  0100               	movlb	0	; () banked
 20400  005E26  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20401  005E28  0E02               	movlw	high (_loRa+50)
 20402  005E2A  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20403  005E2C  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20404  005E2E  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20405  005E30  0E00               	movlw	0
 20406  005E32  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20407  005E34  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20408  005E36  0E04               	movlw	4
 20409  005E38  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20410  005E3A  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20411  005E3C  0E00               	movlw	0
 20412  005E3E  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20413  005E40  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20414  005E42  EC8F  F02F         	call	_PrepareSessionKeys	;wreg free
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20418  005E46  0E02               	movlw	2
 20419  005E48  0102               	movlb	2	; () banked
 20420  005E4A  6F32               	movwf	(_loRa+50)& (0+255),b
 20421                           
 20422                           ; BSR set to: 2
 20423                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20424  005E4C  0E32               	movlw	low (_loRa+50)
 20425  005E4E  0100               	movlb	0	; () banked
 20426  005E50  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20427  005E52  0E02               	movlw	high (_loRa+50)
 20428  005E54  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20429  005E56  0E42               	movlw	low (_loRa+66)
 20430  005E58  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20431  005E5A  0E02               	movlw	high (_loRa+66)
 20432  005E5C  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20433  005E5E  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20437  005E62  0E22               	movlw	low (_loRa+34)
 20438  005E64  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20439  005E66  0E02               	movlw	high (_loRa+34)
 20440  005E68  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20441  005E6A  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20442  005E6C  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20443  005E6E  0E00               	movlw	0
 20444  005E70  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20445  005E72  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20446  005E74  0E04               	movlw	4
 20447  005E76  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20448  005E78  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20449  005E7A  0E00               	movlw	0
 20450  005E7C  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20451  005E7E  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20452  005E80  EC8F  F02F         	call	_PrepareSessionKeys	;wreg free
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20456  005E84  0E01               	movlw	1
 20457  005E86  0102               	movlb	2	; () banked
 20458  005E88  6F22               	movwf	(_loRa+34)& (0+255),b
 20459                           
 20460                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20461  005E8A  0E22               	movlw	low (_loRa+34)
 20462  005E8C  0100               	movlb	0	; () banked
 20463  005E8E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20464  005E90  0E02               	movlw	high (_loRa+34)
 20465  005E92  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20466  005E94  0E42               	movlw	low (_loRa+66)
 20467  005E96  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20468  005E98  0E02               	movlw	high (_loRa+66)
 20469  005E9A  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20470  005E9C  EF19  F039         	goto	_AESEncodeLoRa	;wreg free
 20471  005EA0                     __end_of_ComputeSessionKeys:
 20472                           	opt stack 0
 20473                           tosu	equ	0xFFF
 20474                           tosh	equ	0xFFE
 20475                           tosl	equ	0xFFD
 20476                           pclath	equ	0xFFA
 20477                           tblptru	equ	0xFF8
 20478                           tblptrh	equ	0xFF7
 20479                           tblptrl	equ	0xFF6
 20480                           tablat	equ	0xFF5
 20481                           prodh	equ	0xFF4
 20482                           prodl	equ	0xFF3
 20483                           intcon	equ	0xFF2
 20484                           intcon2	equ	0xFF1
 20485                           intcon3	equ	0xFF0
 20486                           indf0	equ	0xFEF
 20487                           postinc0	equ	0xFEE
 20488                           fsr0h	equ	0xFEA
 20489                           fsr0l	equ	0xFE9
 20490                           wreg	equ	0xFE8
 20491                           postinc1	equ	0xFE6
 20492                           postdec1	equ	0xFE5
 20493                           plusw1	equ	0xFE3
 20494                           fsr1h	equ	0xFE2
 20495                           fsr1l	equ	0xFE1
 20496                           indf2	equ	0xFDF
 20497                           postinc2	equ	0xFDE
 20498                           postdec2	equ	0xFDD
 20499                           plusw2	equ	0xFDB
 20500                           fsr2h	equ	0xFDA
 20501                           fsr2l	equ	0xFD9
 20502                           status	equ	0xFD8
 20503                           
 20504 ;; *************** function _PrepareSessionKeys *****************
 20505 ;; Defined at:
 20506 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20507 ;; Parameters:    Size  Location     Type
 20508 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20509 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20510 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20511 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20512 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20513 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20514 ;; Auto vars:     Size  Location     Type
 20515 ;;  index           1   20[BANK0 ] unsigned char 
 20516 ;; Return value:  Size  Location     Type
 20517 ;;                  1    wreg      void 
 20518 ;; Registers used:
 20519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20520 ;; Tracked objects:
 20521 ;;		On entry : F/0
 20522 ;;		On exit  : F/0
 20523 ;;		Unchanged: 0/0
 20524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20525 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20528 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20529 ;;Total ram usage:        7 bytes
 20530 ;; Hardware stack levels used:    1
 20531 ;; Hardware stack levels required when called:    8
 20532 ;; This function calls:
 20533 ;;		_memcpy
 20534 ;;		_memset
 20535 ;; This function is called by:
 20536 ;;		_ComputeSessionKeys
 20537 ;; This function uses a non-reentrant model
 20538 ;;
 20539                           
 20540                           	psect	text108
 20541  005F1E                     __ptext108:
 20542                           	opt stack 0
 20543  005F1E                     _PrepareSessionKeys:
 20544                           	opt stack 17
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;lorawan.c: 2047: uint8_t index = 0;
 20548                           
 20549                           ; BSR set to: 0
 20550                           ;incstack = 0
 20551  005F1E  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20555  005F20  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20556  005F24  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20557  005F28  6B67               	clrf	(memset@c+1)& (0+255),b
 20558  005F2A  6B66               	clrf	memset@c& (0+255),b
 20559  005F2C  6B69               	clrf	(memset@n+1)& (0+255),b
 20560  005F2E  0E10               	movlw	16
 20561  005F30  6F68               	movwf	memset@n& (0+255),b
 20562  005F32  ECDC  F038         	call	_memset	;wreg free
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;lorawan.c: 2050: index ++;
 20566  005F36  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20567                           
 20568                           ; BSR set to: 0
 20569                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20570  005F38  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20571  005F3A  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20572  005F3C  6F64               	movwf	memcpy@d1& (0+255),b
 20573  005F3E  0E00               	movlw	0
 20574  005F40  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20575  005F42  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20576  005F44  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20577  005F48  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20578  005F4C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20579  005F4E  0E03               	movlw	3
 20580  005F50  6F68               	movwf	memcpy@n& (0+255),b
 20581  005F52  ECFF  F033         	call	_memcpy	;wreg free
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;lorawan.c: 2053: index = index + 3;
 20585  005F56  0E03               	movlw	3
 20586  005F58  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20590  005F5A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20591  005F5C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20592  005F5E  6F64               	movwf	memcpy@d1& (0+255),b
 20593  005F60  0E00               	movlw	0
 20594  005F62  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20595  005F64  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20596  005F66  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20597  005F6A  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20598  005F6E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20599  005F70  0E03               	movlw	3
 20600  005F72  6F68               	movwf	memcpy@n& (0+255),b
 20601  005F74  ECFF  F033         	call	_memcpy	;wreg free
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;lorawan.c: 2056: index = index + 3;
 20605  005F78  0E03               	movlw	3
 20606  005F7A  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20607                           
 20608                           ; BSR set to: 0
 20609                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20610  005F7C  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20611  005F7E  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20612  005F80  6F64               	movwf	memcpy@d1& (0+255),b
 20613  005F82  0E00               	movlw	0
 20614  005F84  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20615  005F86  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20616  005F88  0ED2               	movlw	low (_loRa+210)
 20617  005F8A  6F66               	movwf	memcpy@s1& (0+255),b
 20618  005F8C  0E02               	movlw	high (_loRa+210)
 20619  005F8E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20620  005F90  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20621  005F92  0E02               	movlw	2
 20622  005F94  6F68               	movwf	memcpy@n& (0+255),b
 20623  005F96  EFFF  F033         	goto	_memcpy	;wreg free
 20624  005F9A                     __end_of_PrepareSessionKeys:
 20625                           	opt stack 0
 20626                           tosu	equ	0xFFF
 20627                           tosh	equ	0xFFE
 20628                           tosl	equ	0xFFD
 20629                           pclath	equ	0xFFA
 20630                           tblptru	equ	0xFF8
 20631                           tblptrh	equ	0xFF7
 20632                           tblptrl	equ	0xFF6
 20633                           tablat	equ	0xFF5
 20634                           prodh	equ	0xFF4
 20635                           prodl	equ	0xFF3
 20636                           intcon	equ	0xFF2
 20637                           intcon2	equ	0xFF1
 20638                           intcon3	equ	0xFF0
 20639                           indf0	equ	0xFEF
 20640                           postinc0	equ	0xFEE
 20641                           fsr0h	equ	0xFEA
 20642                           fsr0l	equ	0xFE9
 20643                           wreg	equ	0xFE8
 20644                           postinc1	equ	0xFE6
 20645                           postdec1	equ	0xFE5
 20646                           plusw1	equ	0xFE3
 20647                           fsr1h	equ	0xFE2
 20648                           fsr1l	equ	0xFE1
 20649                           indf2	equ	0xFDF
 20650                           postinc2	equ	0xFDE
 20651                           postdec2	equ	0xFDD
 20652                           plusw2	equ	0xFDB
 20653                           fsr2h	equ	0xFDA
 20654                           fsr2l	equ	0xFD9
 20655                           status	equ	0xFD8
 20656                           
 20657 ;; *************** function _CheckMcastFlags *****************
 20658 ;; Defined at:
 20659 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20660 ;; Parameters:    Size  Location     Type
 20661 ;;  hdr             2    4[BANK0 ] PTR struct .
 20662 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20663 ;; Auto vars:     Size  Location     Type
 20664 ;;		None
 20665 ;; Return value:  Size  Location     Type
 20666 ;;                  1    wreg      unsigned char 
 20667 ;; Registers used:
 20668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20669 ;; Tracked objects:
 20670 ;;		On entry : F/2
 20671 ;;		On exit  : D/0
 20672 ;;		Unchanged: 0/0
 20673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20678 ;;Total ram usage:        2 bytes
 20679 ;; Hardware stack levels used:    1
 20680 ;; Hardware stack levels required when called:    7
 20681 ;; This function calls:
 20682 ;;		Nothing
 20683 ;; This function is called by:
 20684 ;;		_LORAWAN_RxDone
 20685 ;; This function uses a non-reentrant model
 20686 ;;
 20687                           
 20688                           	psect	text109
 20689  00608C                     __ptext109:
 20690                           	opt stack 0
 20691  00608C                     _CheckMcastFlags:
 20692                           	opt stack 19
 20693                           
 20694                           ; BSR set to: 2
 20695                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20696                           
 20697                           ; BSR set to: 0
 20698                           ;incstack = 0
 20699  00608C  0100               	movlb	0	; () banked
 20700  00608E  EE20 F005          	lfsr	2,5
 20701  006092  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20702  006094  26D9               	addwf	fsr2l,f,c
 20703  006096  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20704  006098  22DA               	addwfc	fsr2h,f,c
 20705  00609A  BADF               	btfsc	indf2,5,c
 20706  00609C  0C00               	retlw	0
 20707                           
 20708                           ; BSR set to: 0
 20709  00609E  EE20 F005          	lfsr	2,5
 20710  0060A2  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20711  0060A4  26D9               	addwf	fsr2l,f,c
 20712  0060A6  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20713  0060A8  22DA               	addwfc	fsr2h,f,c
 20714  0060AA  BCDF               	btfsc	indf2,6,c
 20715  0060AC  0C00               	retlw	0
 20716                           
 20717                           ; BSR set to: 0
 20718  0060AE  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20719  0060B2  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20720  0060B6  38DF               	swapf	223,w,c
 20721  0060B8  32E8               	rrcf	wreg,f,c
 20722  0060BA  0B07               	andlw	7
 20723  0060BC  0A03               	xorlw	3
 20724  0060BE  E001               	bz	l14001
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;lorawan.c: 2110: {
 20728                           ;lorawan.c: 2111: return 0;
 20729  0060C0  0C00               	retlw	0
 20730  0060C2                     l14001:
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;lorawan.c: 2112: }
 20734                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20735  0060C2  EE20 F005          	lfsr	2,5
 20736  0060C6  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20737  0060C8  26D9               	addwf	fsr2l,f,c
 20738  0060CA  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20739  0060CC  22DA               	addwfc	fsr2h,f,c
 20740  0060CE  50DF               	movf	223,w,c
 20741  0060D0  0B0F               	andlw	15
 20742  0060D2  E001               	bz	l14009
 20743  0060D4  0C00               	retlw	0
 20744  0060D6                     l14009:
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;lorawan.c: 2118: else
 20748                           ;lorawan.c: 2119: {
 20749                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20750  0060D6  EE20 F008          	lfsr	2,8
 20751  0060DA  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20752  0060DC  26D9               	addwf	fsr2l,f,c
 20753  0060DE  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20754  0060E0  22DA               	addwfc	fsr2h,f,c
 20755  0060E2  50DF               	movf	indf2,w,c
 20756  0060E4  E101               	bnz	l14015
 20757  0060E6  0C00               	retlw	0
 20758  0060E8                     l14015:
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;lorawan.c: 2123: }
 20762                           ;lorawan.c: 2124: }
 20763                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20764  0060E8  EE20 F005          	lfsr	2,5
 20765  0060EC  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20766  0060EE  26D9               	addwf	fsr2l,f,c
 20767  0060F0  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20768  0060F2  22DA               	addwfc	fsr2h,f,c
 20769  0060F4  A8DF               	btfss	indf2,4,c
 20770  0060F6  0C01               	retlw	1
 20771                           
 20772                           ; BSR set to: 0
 20773                           ;lorawan.c: 2127: {
 20774                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20775  0060F8  0102               	movlb	2	; () banked
 20776  0060FA  8700               	bsf	_loRa& (0+255),3,b
 20777                           
 20778                           ;lorawan.c: 2129: }
 20779                           ;lorawan.c: 2131: return 1;
 20780  0060FC  0C01               	retlw	1	;funcret
 20781  0060FE                     __end_of_CheckMcastFlags:
 20782                           	opt stack 0
 20783                           tosu	equ	0xFFF
 20784                           tosh	equ	0xFFE
 20785                           tosl	equ	0xFFD
 20786                           pclath	equ	0xFFA
 20787                           tblptru	equ	0xFF8
 20788                           tblptrh	equ	0xFF7
 20789                           tblptrl	equ	0xFF6
 20790                           tablat	equ	0xFF5
 20791                           prodh	equ	0xFF4
 20792                           prodl	equ	0xFF3
 20793                           intcon	equ	0xFF2
 20794                           intcon2	equ	0xFF1
 20795                           intcon3	equ	0xFF0
 20796                           indf0	equ	0xFEF
 20797                           postinc0	equ	0xFEE
 20798                           fsr0h	equ	0xFEA
 20799                           fsr0l	equ	0xFE9
 20800                           wreg	equ	0xFE8
 20801                           postinc1	equ	0xFE6
 20802                           postdec1	equ	0xFE5
 20803                           plusw1	equ	0xFE3
 20804                           fsr1h	equ	0xFE2
 20805                           fsr1l	equ	0xFE1
 20806                           indf2	equ	0xFDF
 20807                           postinc2	equ	0xFDE
 20808                           postdec2	equ	0xFDD
 20809                           plusw2	equ	0xFDB
 20810                           fsr2h	equ	0xFDA
 20811                           fsr2l	equ	0xFD9
 20812                           status	equ	0xFD8
 20813                           
 20814 ;; *************** function _CheckFlags *****************
 20815 ;; Defined at:
 20816 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20817 ;; Parameters:    Size  Location     Type
 20818 ;;  hdr             2    4[BANK0 ] PTR struct .
 20819 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20820 ;; Auto vars:     Size  Location     Type
 20821 ;;		None
 20822 ;; Return value:  Size  Location     Type
 20823 ;;                  1    wreg      void 
 20824 ;; Registers used:
 20825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20826 ;; Tracked objects:
 20827 ;;		On entry : F/2
 20828 ;;		On exit  : D/0
 20829 ;;		Unchanged: 0/0
 20830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20835 ;;Total ram usage:        2 bytes
 20836 ;; Hardware stack levels used:    1
 20837 ;; Hardware stack levels required when called:    7
 20838 ;; This function calls:
 20839 ;;		Nothing
 20840 ;; This function is called by:
 20841 ;;		_LORAWAN_RxDone
 20842 ;; This function uses a non-reentrant model
 20843 ;;
 20844                           
 20845                           	psect	text110
 20846  00668E                     __ptext110:
 20847                           	opt stack 0
 20848  00668E                     _CheckFlags:
 20849                           	opt stack 19
 20850                           
 20851                           ; BSR set to: 2
 20852                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20853                           
 20854                           ;incstack = 0
 20855  00668E  0100               	movlb	0	; () banked
 20856  006690  EE20 F005          	lfsr	2,5
 20857  006694  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20858  006696  26D9               	addwf	fsr2l,f,c
 20859  006698  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20860  00669A  22DA               	addwfc	fsr2h,f,c
 20861  00669C  AEDF               	btfss	indf2,7,c
 20862  00669E  D002               	goto	l14049
 20863                           
 20864                           ; BSR set to: 0
 20865                           ;lorawan.c: 2077: {
 20866                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20867  0066A0  0102               	movlb	2	; () banked
 20868  0066A2  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20869  0066A4                     l14049:
 20870                           
 20871                           ;lorawan.c: 2079: }
 20872                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20873  0066A4  0100               	movlb	0	; () banked
 20874  0066A6  EE20 F005          	lfsr	2,5
 20875  0066AA  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20876  0066AC  26D9               	addwf	fsr2l,f,c
 20877  0066AE  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20878  0066B0  22DA               	addwfc	fsr2h,f,c
 20879  0066B2  A8DF               	btfss	indf2,4,c
 20880  0066B4  D002               	goto	l14053
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;lorawan.c: 2082: {
 20884                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20885  0066B6  0102               	movlb	2	; () banked
 20886  0066B8  8700               	bsf	_loRa& (0+255),3,b
 20887  0066BA                     l14053:
 20888                           
 20889                           ;lorawan.c: 2084: }
 20890                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20891  0066BA  0100               	movlb	0	; () banked
 20892  0066BC  EE20 F005          	lfsr	2,5
 20893  0066C0  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20894  0066C2  26D9               	addwf	fsr2l,f,c
 20895  0066C4  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20896  0066C6  22DA               	addwfc	fsr2h,f,c
 20897  0066C8  ACDF               	btfss	indf2,6,c
 20898  0066CA  D002               	goto	l14057
 20899                           
 20900                           ; BSR set to: 0
 20901                           ;lorawan.c: 2087: {
 20902                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20903  0066CC  0102               	movlb	2	; () banked
 20904  0066CE  8900               	bsf	_loRa& (0+255),4,b
 20905  0066D0                     l14057:
 20906                           
 20907                           ;lorawan.c: 2089: }
 20908                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20909  0066D0  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20910  0066D4  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20911  0066D8  0100               	movlb	0	; () banked
 20912  0066DA  38DF               	swapf	223,w,c
 20913  0066DC  32E8               	rrcf	wreg,f,c
 20914  0066DE  0B07               	andlw	7
 20915  0066E0  0A05               	xorlw	5
 20916  0066E2  A4D8               	btfss	status,2,c
 20917  0066E4  0012               	return	
 20918                           
 20919                           ; BSR set to: 0
 20920                           ;lorawan.c: 2092: {
 20921                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20922  0066E6  0102               	movlb	2	; () banked
 20923  0066E8  8300               	bsf	_loRa& (0+255),1,b
 20924  0066EA  0012               	return		;funcret
 20925  0066EC                     __end_of_CheckFlags:
 20926                           	opt stack 0
 20927                           tosu	equ	0xFFF
 20928                           tosh	equ	0xFFE
 20929                           tosl	equ	0xFFD
 20930                           pclath	equ	0xFFA
 20931                           tblptru	equ	0xFF8
 20932                           tblptrh	equ	0xFF7
 20933                           tblptrl	equ	0xFF6
 20934                           tablat	equ	0xFF5
 20935                           prodh	equ	0xFF4
 20936                           prodl	equ	0xFF3
 20937                           intcon	equ	0xFF2
 20938                           intcon2	equ	0xFF1
 20939                           intcon3	equ	0xFF0
 20940                           indf0	equ	0xFEF
 20941                           postinc0	equ	0xFEE
 20942                           fsr0h	equ	0xFEA
 20943                           fsr0l	equ	0xFE9
 20944                           wreg	equ	0xFE8
 20945                           postinc1	equ	0xFE6
 20946                           postdec1	equ	0xFE5
 20947                           plusw1	equ	0xFE3
 20948                           fsr1h	equ	0xFE2
 20949                           fsr1l	equ	0xFE1
 20950                           indf2	equ	0xFDF
 20951                           postinc2	equ	0xFDE
 20952                           postdec2	equ	0xFDD
 20953                           plusw2	equ	0xFDB
 20954                           fsr2h	equ	0xFDA
 20955                           fsr2l	equ	0xFD9
 20956                           status	equ	0xFD8
 20957                           
 20958 ;; *************** function _RADIO_FSKPacketSent *****************
 20959 ;; Defined at:
 20960 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20961 ;; Parameters:    Size  Location     Type
 20962 ;;		None
 20963 ;; Auto vars:     Size  Location     Type
 20964 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 20965 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  1    wreg      void 
 20968 ;; Registers used:
 20969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20970 ;; Tracked objects:
 20971 ;;		On entry : F/0
 20972 ;;		On exit  : C/0
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20976 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20978 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20979 ;;Total ram usage:       13 bytes
 20980 ;; Hardware stack levels used:    1
 20981 ;; Hardware stack levels required when called:   15
 20982 ;; This function calls:
 20983 ;;		_LORAWAN_TxDone
 20984 ;;		_RADIO_RegisterRead
 20985 ;;		_RADIO_WriteMode
 20986 ;;		_SwTimerReadValue
 20987 ;;		_SwTimerStop
 20988 ;; This function is called by:
 20989 ;;		_RADIO_DIO0
 20990 ;; This function uses a non-reentrant model
 20991 ;;
 20992                           
 20993                           	psect	text111
 20994  003A02                     __ptext111:
 20995                           	opt stack 0
 20996  003A02                     _RADIO_FSKPacketSent:
 20997                           	opt stack 13
 20998                           
 20999                           ; BSR set to: 0
 21000                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 21001                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 21002                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 21003                           
 21004                           ;incstack = 0
 21005  003A02  0E3F               	movlw	63
 21006  003A04  EC53  F039         	call	_RADIO_RegisterRead
 21007  003A08  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 21011  003A0A  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 21012  003A0C  0012               	return	
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;radio_driver_SX1276.c: 1100: {
 21016                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 21017  003A0E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 21018  003A12  0E00               	movlw	0
 21019  003A14  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 21020  003A16  EC5F  F028         	call	_RADIO_WriteMode
 21021                           
 21022                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 21023  003A1A  0101               	movlb	1	; () banked
 21024  003A1C  91A1               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 21025                           
 21026                           ; BSR set to: 1
 21027                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 21028  003A1E  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 21029  003A20  EC57  F03A         	call	_SwTimerStop
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 21033  003A24  0101               	movlb	1	; () banked
 21034  003A26  B9A1               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 21035  003A28  0012               	return	
 21036                           
 21037                           ; BSR set to: 1
 21038                           ;radio_driver_SX1276.c: 1107: {
 21039                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 21040  003A2A  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21041  003A2C  EC81  F036         	call	_SwTimerReadValue
 21042  003A30  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 21043  003A32  E107               	bnz	u17240
 21044  003A34  0E1F               	movlw	31
 21045  003A36  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 21046  003A38  0EAC               	movlw	172
 21047  003A3A  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 21048  003A3C  0EDF               	movlw	223
 21049  003A3E  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 21050  003A40  E346               	bnc	l14875
 21051  003A42                     u17240:
 21052                           
 21053                           ; BSR set to: 0
 21054  003A42  0101               	movlb	1	; () banked
 21055  003A44  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21056  003A46  EC81  F036         	call	_SwTimerReadValue
 21057  003A4A  0E0D               	movlw	13
 21058  003A4C  D005               	goto	u17250
 21059  003A4E                     u17255:
 21060  003A4E  90D8               	bcf	status,0,c
 21061  003A50  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 21062  003A52  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 21063  003A54  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 21064  003A56  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 21065  003A58                     u17250:
 21066  003A58  2EE8               	decfsz	wreg,f,c
 21067  003A5A  D7F9               	goto	u17255
 21068  003A5C  0E7D               	movlw	125
 21069  003A5E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21070  003A60  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 21071  003A64  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 21072  003A68  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21073  003A6A  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21074  003A6C  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21075  003A6E  50F3               	movf	prodl,w,c
 21076  003A70  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21077  003A72  50F4               	movf	prodh,w,c
 21078  003A74  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21079  003A76  0E00               	movlw	0
 21080  003A78  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21081  003A7A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21082  003A7C  50F3               	movf	prodl,w,c
 21083  003A7E  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21084  003A80  50F4               	movf	prodh,w,c
 21085  003A82  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21086  003A84  0E00               	movlw	0
 21087  003A86  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21088  003A88  0E7D               	movlw	125
 21089  003A8A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21090  003A8C  50F3               	movf	prodl,w,c
 21091  003A8E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21092  003A90  50F4               	movf	prodh,w,c
 21093  003A92  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21094  003A94  0E00               	movlw	0
 21095  003A96  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21096  003A98  50F3               	movf	prodl,w,c
 21097  003A9A  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21098  003A9C  50F4               	movf	prodh,w,c
 21099  003A9E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21100  003AA0  0E00               	movlw	0
 21101  003AA2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21102  003AA4  50F3               	movf	prodl,w,c
 21103  003AA6  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21104  003AA8  50F4               	movf	prodh,w,c
 21105  003AAA  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21106  003AAC  0E7D               	movlw	125
 21107  003AAE  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21108  003AB0  50F3               	movf	prodl,w,c
 21109  003AB2  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21110  003AB4  0E00               	movlw	0
 21111  003AB6  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21112  003AB8  50F3               	movf	prodl,w,c
 21113  003ABA  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21114  003ABC  0E00               	movlw	0
 21115  003ABE  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21116  003AC0  50F3               	movf	prodl,w,c
 21117  003AC2  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21118  003AC4  0E00               	movlw	0
 21119  003AC6  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21120  003AC8  50F3               	movf	prodl,w,c
 21121  003ACA  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21122  003ACC  D045               	goto	L11
 21123  003ACE                     l14875:
 21124                           
 21125                           ; BSR set to: 0
 21126  003ACE  0101               	movlb	1	; () banked
 21127  003AD0  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21128  003AD2  EC81  F036         	call	_SwTimerReadValue
 21129  003AD6  0E7D               	movlw	125
 21130  003AD8  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21131  003ADA  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 21132  003ADE  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 21133  003AE2  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21134  003AE4  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21135  003AE6  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21136  003AE8  50F3               	movf	prodl,w,c
 21137  003AEA  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21138  003AEC  50F4               	movf	prodh,w,c
 21139  003AEE  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21140  003AF0  0E00               	movlw	0
 21141  003AF2  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21142  003AF4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21143  003AF6  50F3               	movf	prodl,w,c
 21144  003AF8  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21145  003AFA  50F4               	movf	prodh,w,c
 21146  003AFC  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21147  003AFE  0E00               	movlw	0
 21148  003B00  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21149  003B02  0E7D               	movlw	125
 21150  003B04  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21151  003B06  50F3               	movf	prodl,w,c
 21152  003B08  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21153  003B0A  50F4               	movf	prodh,w,c
 21154  003B0C  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21155  003B0E  0E00               	movlw	0
 21156  003B10  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21157  003B12  50F3               	movf	prodl,w,c
 21158  003B14  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21159  003B16  50F4               	movf	prodh,w,c
 21160  003B18  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21161  003B1A  0E00               	movlw	0
 21162  003B1C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21163  003B1E  50F3               	movf	prodl,w,c
 21164  003B20  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21165  003B22  50F4               	movf	prodh,w,c
 21166  003B24  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21167  003B26  0E7D               	movlw	125
 21168  003B28  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21169  003B2A  50F3               	movf	prodl,w,c
 21170  003B2C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21171  003B2E  0E00               	movlw	0
 21172  003B30  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21173  003B32  50F3               	movf	prodl,w,c
 21174  003B34  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21175  003B36  0E00               	movlw	0
 21176  003B38  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21177  003B3A  50F3               	movf	prodl,w,c
 21178  003B3C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21179  003B3E  0E00               	movlw	0
 21180  003B40  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21181  003B42  50F3               	movf	prodl,w,c
 21182  003B44  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21183  003B46  0E0D               	movlw	13
 21184  003B48  D005               	goto	u17260
 21185  003B4A                     u17265:
 21186  003B4A  90D8               	bcf	status,0,c
 21187  003B4C  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21188  003B4E  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21189  003B50  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21190  003B52  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21191  003B54                     u17260:
 21192  003B54  2EE8               	decfsz	wreg,f,c
 21193  003B56  D7F9               	goto	u17265
 21194  003B58                     L11:
 21195  003B58  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1215
 21196  003B5C  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1215+1
 21197  003B60  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1215+2
 21198  003B64  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1215+3
 21199                           
 21200                           ; BSR set to: 0
 21201  003B68  51DA               	movf	_RADIO_FSKPacketSent$1215& (0+255),w,b
 21202  003B6A  0820               	sublw	32
 21203  003B6C  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21204  003B6E  0E4E               	movlw	78
 21205  003B70  55DB               	subfwb	(_RADIO_FSKPacketSent$1215+1)& (0+255),w,b
 21206  003B72  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21207  003B74  0E00               	movlw	0
 21208  003B76  55DC               	subfwb	(_RADIO_FSKPacketSent$1215+2)& (0+255),w,b
 21209  003B78  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21210  003B7A  0E00               	movlw	0
 21211  003B7C  55DD               	subfwb	(_RADIO_FSKPacketSent$1215+3)& (0+255),w,b
 21212  003B7E  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21213                           
 21214                           ; BSR set to: 0
 21215                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21216  003B80  0101               	movlb	1	; () banked
 21217  003B82  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21218  003B84  EC57  F03A         	call	_SwTimerStop
 21219                           
 21220                           ; BSR set to: 0
 21221                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21222  003B88  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21223  003B8C  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21224  003B90  EF7D  F005         	goto	_LORAWAN_TxDone	;wreg free
 21225  003B94                     __end_of_RADIO_FSKPacketSent:
 21226                           	opt stack 0
 21227                           tosu	equ	0xFFF
 21228                           tosh	equ	0xFFE
 21229                           tosl	equ	0xFFD
 21230                           pclath	equ	0xFFA
 21231                           tblptru	equ	0xFF8
 21232                           tblptrh	equ	0xFF7
 21233                           tblptrl	equ	0xFF6
 21234                           tablat	equ	0xFF5
 21235                           prodh	equ	0xFF4
 21236                           prodl	equ	0xFF3
 21237                           intcon	equ	0xFF2
 21238                           intcon2	equ	0xFF1
 21239                           intcon3	equ	0xFF0
 21240                           indf0	equ	0xFEF
 21241                           postinc0	equ	0xFEE
 21242                           fsr0h	equ	0xFEA
 21243                           fsr0l	equ	0xFE9
 21244                           wreg	equ	0xFE8
 21245                           postinc1	equ	0xFE6
 21246                           postdec1	equ	0xFE5
 21247                           plusw1	equ	0xFE3
 21248                           fsr1h	equ	0xFE2
 21249                           fsr1l	equ	0xFE1
 21250                           indf2	equ	0xFDF
 21251                           postinc2	equ	0xFDE
 21252                           postdec2	equ	0xFDD
 21253                           plusw2	equ	0xFDB
 21254                           fsr2h	equ	0xFDA
 21255                           fsr2l	equ	0xFD9
 21256                           status	equ	0xFD8
 21257                           
 21258 ;; *************** function _LORAWAN_TxDone *****************
 21259 ;; Defined at:
 21260 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21261 ;; Parameters:    Size  Location     Type
 21262 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 21263 ;; Auto vars:     Size  Location     Type
 21264 ;;  minim           4  109[BANK0 ] unsigned long 
 21265 ;;  ticks           4  105[BANK0 ] unsigned long 
 21266 ;;  delta           4  101[BANK0 ] unsigned long 
 21267 ;;  i               1  113[BANK0 ] unsigned char 
 21268 ;;  found           1  100[BANK0 ] unsigned char 
 21269 ;; Return value:  Size  Location     Type
 21270 ;;                  1    wreg      void 
 21271 ;; Registers used:
 21272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21273 ;; Tracked objects:
 21274 ;;		On entry : E/1
 21275 ;;		On exit  : D/0
 21276 ;;		Unchanged: 0/0
 21277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21279 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21280 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21281 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21282 ;;Total ram usage:       50 bytes
 21283 ;; Hardware stack levels used:    1
 21284 ;; Hardware stack levels required when called:   14
 21285 ;; This function calls:
 21286 ;;		_LORAWAN_EnterContinuousReceive
 21287 ;;		_RADIO_GetStatus
 21288 ;;		_RxDataDone
 21289 ;;		_SwTimerIsRunning
 21290 ;;		_SwTimerReadValue
 21291 ;;		_SwTimerSetTimeout
 21292 ;;		_SwTimerStart
 21293 ;;		_SwTimerStop
 21294 ;;		___lldiv
 21295 ;; This function is called by:
 21296 ;;		_RADIO_TxDone
 21297 ;;		_RADIO_FSKPacketSent
 21298 ;;		_RADIO_WatchdogTimeout
 21299 ;; This function uses a non-reentrant model
 21300 ;;
 21301                           
 21302                           	psect	text112
 21303  000AFA                     __ptext112:
 21304                           	opt stack 0
 21305  000AFA                     _LORAWAN_TxDone:
 21306                           	opt stack 13
 21307                           
 21308                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21309                           
 21310                           ;incstack = 0
 21311  000AFA  0102               	movlb	2	; () banked
 21312  000AFC  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21313  000AFE  EF9B  F009         	goto	l14683
 21314                           
 21315                           ; BSR set to: 2
 21316                           ;lorawan_eu.c: 368: {
 21317                           ;lorawan_eu.c: 369: bool found = 0;
 21318  000B02  0100               	movlb	0	; () banked
 21319  000B04  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 21320                           
 21321                           ;lorawan_eu.c: 370: uint8_t i;
 21322                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21323  000B06  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21324  000B08  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21325  000B0A  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21326  000B0C  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21327  000B0E  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 21328  000B10  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21329  000B12  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21330  000B14  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21331                           
 21332                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21333  000B16  0102               	movlb	2	; () banked
 21334  000B18  6BF1               	clrf	(_loRa+241)& (0+255),b
 21335                           
 21336                           ; BSR set to: 2
 21337                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21338  000B1A  5102               	movf	(_loRa+2)& (0+255),w,b
 21339  000B1C  0BF0               	andlw	-16
 21340  000B1E  0902               	iorlw	2
 21341  000B20  6F02               	movwf	(_loRa+2)& (0+255),b
 21342                           
 21343                           ; BSR set to: 2
 21344                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21345  000B22  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 21346                           
 21347                           ; BSR set to: 2
 21348                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21349  000B26  A500               	btfss	_loRa& (0+255),2,b
 21350  000B28  D110               	goto	l14613
 21351                           
 21352                           ; BSR set to: 2
 21353                           ;lorawan_eu.c: 382: {
 21354                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21355  000B2A  0E7D               	movlw	low _rxWindowOffset
 21356  000B2C  2517               	addwf	(_loRa+23)& (0+255),w,b
 21357  000B2E  6EF6               	movwf	tblptrl,c
 21358  000B30  6AF7               	clrf	tblptrh,c
 21359  000B32  0EFF               	movlw	high _rxWindowOffset
 21360  000B34  22F7               	addwfc	tblptrh,f,c
 21361  000B36                     	if	1	;There are 3 active tblptr bytes
 21362  000B36  6AF8               	clrf	tblptru,c
 21363  000B38  0E00               	movlw	low (__mediumconst shr (0+16))
 21364  000B3A  22F8               	addwfc	tblptru,f,c
 21365  000B3C                     	endif
 21366  000B3C  0008               	tblrd		*
 21367  000B3E  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21368  000B42  5198               	movf	(_loRa+152)& (0+255),w,b
 21369  000B44  0100               	movlb	0	; () banked
 21370  000B46  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21371  000B48  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21372  000B4A  0E00               	movlw	0
 21373  000B4C  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21374  000B4E  0EFF               	movlw	255
 21375  000B50  0102               	movlb	2	; () banked
 21376  000B52  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21377  000B54  0100               	movlb	0	; () banked
 21378  000B56  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21379  000B58  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21380  000B5A  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21381  000B5C  0E0C               	movlw	12
 21382  000B5E                     u16815:
 21383  000B5E  90D8               	bcf	status,0,c
 21384  000B60  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21385  000B62  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21386  000B64  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21387  000B66  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21388  000B68  2EE8               	decfsz	wreg,f,c
 21389  000B6A  D7F9               	goto	u16815
 21390  000B6C  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21391  000B70  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21392  000B74  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21393  000B78  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21394  000B7C  0E7D               	movlw	125
 21395  000B7E  6F68               	movwf	___lldiv@divisor& (0+255),b
 21396  000B80  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21397  000B82  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21398  000B84  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21399  000B86  EC0B  F030         	call	___lldiv	;wreg free
 21400  000B8A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21401  000B8E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21402  000B92  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21403  000B96  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21404  000B9A  0102               	movlb	2	; () banked
 21405  000B9C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21406  000B9E  EC60  F036         	call	_SwTimerSetTimeout
 21407                           
 21408                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21409  000BA2  0E7D               	movlw	low _rxWindowOffset
 21410  000BA4  0102               	movlb	2	; () banked
 21411  000BA6  251C               	addwf	(_loRa+28)& (0+255),w,b
 21412  000BA8  6EF6               	movwf	tblptrl,c
 21413  000BAA  6AF7               	clrf	tblptrh,c
 21414  000BAC  0EFF               	movlw	high _rxWindowOffset
 21415  000BAE  22F7               	addwfc	tblptrh,f,c
 21416  000BB0                     	if	1	;There are 3 active tblptr bytes
 21417  000BB0  6AF8               	clrf	tblptru,c
 21418  000BB2  0E00               	movlw	low (__mediumconst shr (0+16))
 21419  000BB4  22F8               	addwfc	tblptru,f,c
 21420  000BB6                     	endif
 21421  000BB6  0008               	tblrd		*
 21422  000BB8  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21423  000BBC  519A               	movf	(_loRa+154)& (0+255),w,b
 21424  000BBE  0100               	movlb	0	; () banked
 21425  000BC0  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21426  000BC2  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21427  000BC4  0E00               	movlw	0
 21428  000BC6  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21429  000BC8  0EFF               	movlw	255
 21430  000BCA  0102               	movlb	2	; () banked
 21431  000BCC  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21432  000BCE  0100               	movlb	0	; () banked
 21433  000BD0  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21434  000BD2  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21435  000BD4  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21436  000BD6  0E0C               	movlw	12
 21437  000BD8                     u16825:
 21438  000BD8  90D8               	bcf	status,0,c
 21439  000BDA  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21440  000BDC  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21441  000BDE  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21442  000BE0  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21443  000BE2  2EE8               	decfsz	wreg,f,c
 21444  000BE4  D7F9               	goto	u16825
 21445  000BE6  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21446  000BEA  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21447  000BEE  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21448  000BF2  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21449  000BF6  0E7D               	movlw	125
 21450  000BF8  6F68               	movwf	___lldiv@divisor& (0+255),b
 21451  000BFA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21452  000BFC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21453  000BFE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21454  000C00  EC0B  F030         	call	___lldiv	;wreg free
 21455  000C04  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21456  000C08  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21457  000C0C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21458  000C10  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21459  000C14  0102               	movlb	2	; () banked
 21460  000C16  51E3               	movf	(_loRa+227)& (0+255),w,b
 21461  000C18  EC60  F036         	call	_SwTimerSetTimeout
 21462                           
 21463                           ; BSR set to: 0
 21464                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21465  000C1C  0102               	movlb	2	; () banked
 21466  000C1E  51E2               	movf	(_loRa+226)& (0+255),w,b
 21467  000C20  EC49  F02E         	call	_SwTimerStart
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21471  000C24  0102               	movlb	2	; () banked
 21472  000C26  51E3               	movf	(_loRa+227)& (0+255),w,b
 21473  000C28  EC49  F02E         	call	_SwTimerStart
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21477  000C2C  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21478  000C30  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21479  000C34  0102               	movlb	2	; () banked
 21480  000C36  51DB               	movf	(_loRa+219)& (0+255),w,b
 21481  000C38  0100               	movlb	0	; () banked
 21482  000C3A  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21483  000C3C  0102               	movlb	2	; () banked
 21484  000C3E  51DC               	movf	(_loRa+220)& (0+255),w,b
 21485  000C40  0100               	movlb	0	; () banked
 21486  000C42  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21487  000C44  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21488  000C46  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21489  000C48  0ED6               	movlw	214
 21490  000C4A  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21491  000C4C  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 21492  000C50  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 21493  000C54  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21494  000C56  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21495  000C58  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21496  000C5A  50F3               	movf	prodl,w,c
 21497  000C5C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21498  000C5E  50F4               	movf	prodh,w,c
 21499  000C60  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21500  000C62  0E00               	movlw	0
 21501  000C64  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21502  000C66  0E0B               	movlw	11
 21503  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21504  000C6A  50F3               	movf	prodl,w,c
 21505  000C6C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21506  000C6E  50F4               	movf	prodh,w,c
 21507  000C70  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21508  000C72  0E00               	movlw	0
 21509  000C74  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21510  000C76  0ED6               	movlw	214
 21511  000C78  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21512  000C7A  50F3               	movf	prodl,w,c
 21513  000C7C  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21514  000C7E  50F4               	movf	prodh,w,c
 21515  000C80  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21516  000C82  0E0B               	movlw	11
 21517  000C84  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21518  000C86  50F3               	movf	prodl,w,c
 21519  000C88  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21520  000C8A  50F4               	movf	prodh,w,c
 21521  000C8C  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21522  000C8E  0E00               	movlw	0
 21523  000C90  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21524  000C92  50F3               	movf	prodl,w,c
 21525  000C94  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21526  000C96  50F4               	movf	prodh,w,c
 21527  000C98  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21528  000C9A  0ED6               	movlw	214
 21529  000C9C  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21530  000C9E  50F3               	movf	prodl,w,c
 21531  000CA0  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21532  000CA2  0E0B               	movlw	11
 21533  000CA4  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21534  000CA6  50F3               	movf	prodl,w,c
 21535  000CA8  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21536  000CAA  0E00               	movlw	0
 21537  000CAC  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21538  000CAE  50F3               	movf	prodl,w,c
 21539  000CB0  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21540  000CB2  0E00               	movlw	0
 21541  000CB4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21542  000CB6  50F3               	movf	prodl,w,c
 21543  000CB8  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21544  000CBA  0EFF               	movlw	255
 21545  000CBC  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21546  000CBE  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21547  000CC0  0EFF               	movlw	255
 21548  000CC2  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21549  000CC4  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21550  000CC6  0EFF               	movlw	255
 21551  000CC8  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21552  000CCA  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21553  000CCC  0EFF               	movlw	255
 21554  000CCE  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21555  000CD0  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21556  000CD2  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21557  000CD4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21558  000CD6  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21559  000CDA  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21560  000CDE  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21561  000CE0  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21562  000CE2  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21563  000CE4  50F3               	movf	prodl,w,c
 21564  000CE6  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21565  000CE8  50F4               	movf	prodh,w,c
 21566  000CEA  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21567  000CEC  0E00               	movlw	0
 21568  000CEE  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21569  000CF0  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21570  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21571  000CF4  50F3               	movf	prodl,w,c
 21572  000CF6  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21573  000CF8  50F4               	movf	prodh,w,c
 21574  000CFA  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21575  000CFC  0E00               	movlw	0
 21576  000CFE  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21577  000D00  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21578  000D02  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21579  000D04  50F3               	movf	prodl,w,c
 21580  000D06  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21581  000D08  50F4               	movf	prodh,w,c
 21582  000D0A  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21583  000D0C  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21584  000D0E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21585  000D10  50F3               	movf	prodl,w,c
 21586  000D12  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21587  000D14  50F4               	movf	prodh,w,c
 21588  000D16  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21589  000D18  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21590  000D1A  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21591  000D1C  50F3               	movf	prodl,w,c
 21592  000D1E  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21593  000D20  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21594  000D22  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21595  000D24  50F3               	movf	prodl,w,c
 21596  000D26  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21597  000D28  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21598  000D2A  0D0E               	mullw	14
 21599  000D2C  0E08               	movlw	low (_Channels+8)
 21600  000D2E  24F3               	addwf	prodl,w,c
 21601  000D30  6ED9               	movwf	fsr2l,c
 21602  000D32  0E04               	movlw	high (_Channels+8)
 21603  000D34  20F4               	addwfc	prodh,w,c
 21604  000D36  6EDA               	movwf	fsr2h,c
 21605  000D38  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21606  000D3C  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21607  000D40  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21608  000D44  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21609                           
 21610                           ;lorawan_eu.c: 389: }
 21611  000D48  D11D               	goto	l14623
 21612  000D4A                     l14613:
 21613                           
 21614                           ; BSR set to: 2
 21615                           ;lorawan_eu.c: 390: else
 21616                           ;lorawan_eu.c: 391: {
 21617                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21618  000D4A  0E7D               	movlw	low _rxWindowOffset
 21619  000D4C  2517               	addwf	(_loRa+23)& (0+255),w,b
 21620  000D4E  6EF6               	movwf	tblptrl,c
 21621  000D50  6AF7               	clrf	tblptrh,c
 21622  000D52  0EFF               	movlw	high _rxWindowOffset
 21623  000D54  22F7               	addwfc	tblptrh,f,c
 21624  000D56                     	if	1	;There are 3 active tblptr bytes
 21625  000D56  6AF8               	clrf	tblptru,c
 21626  000D58  0E00               	movlw	low (__mediumconst shr (0+16))
 21627  000D5A  22F8               	addwfc	tblptru,f,c
 21628  000D5C                     	endif
 21629  000D5C  0008               	tblrd		*
 21630  000D5E  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21631  000D62  5194               	movf	(_loRa+148)& (0+255),w,b
 21632  000D64  0100               	movlb	0	; () banked
 21633  000D66  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21634  000D68  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21635  000D6A  0E00               	movlw	0
 21636  000D6C  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21637  000D6E  0EFF               	movlw	255
 21638  000D70  0102               	movlb	2	; () banked
 21639  000D72  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21640  000D74  0100               	movlb	0	; () banked
 21641  000D76  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21642  000D78  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21643  000D7A  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21644  000D7C  0E0C               	movlw	12
 21645  000D7E                     u16835:
 21646  000D7E  90D8               	bcf	status,0,c
 21647  000D80  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21648  000D82  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21649  000D84  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21650  000D86  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21651  000D88  2EE8               	decfsz	wreg,f,c
 21652  000D8A  D7F9               	goto	u16835
 21653  000D8C  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21654  000D90  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21655  000D94  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21656  000D98  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21657  000D9C  0E7D               	movlw	125
 21658  000D9E  6F68               	movwf	___lldiv@divisor& (0+255),b
 21659  000DA0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21660  000DA2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21661  000DA4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21662  000DA6  EC0B  F030         	call	___lldiv	;wreg free
 21663  000DAA  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21664  000DAE  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21665  000DB2  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21666  000DB6  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21667  000DBA  0102               	movlb	2	; () banked
 21668  000DBC  51E4               	movf	(_loRa+228)& (0+255),w,b
 21669  000DBE  EC60  F036         	call	_SwTimerSetTimeout
 21670                           
 21671                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21672  000DC2  0E7D               	movlw	low _rxWindowOffset
 21673  000DC4  0102               	movlb	2	; () banked
 21674  000DC6  251C               	addwf	(_loRa+28)& (0+255),w,b
 21675  000DC8  6EF6               	movwf	tblptrl,c
 21676  000DCA  6AF7               	clrf	tblptrh,c
 21677  000DCC  0EFF               	movlw	high _rxWindowOffset
 21678  000DCE  22F7               	addwfc	tblptrh,f,c
 21679  000DD0                     	if	1	;There are 3 active tblptr bytes
 21680  000DD0  6AF8               	clrf	tblptru,c
 21681  000DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 21682  000DD4  22F8               	addwfc	tblptru,f,c
 21683  000DD6                     	endif
 21684  000DD6  0008               	tblrd		*
 21685  000DD8  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21686  000DDC  5196               	movf	(_loRa+150)& (0+255),w,b
 21687  000DDE  0100               	movlb	0	; () banked
 21688  000DE0  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21689  000DE2  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21690  000DE4  0E00               	movlw	0
 21691  000DE6  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21692  000DE8  0EFF               	movlw	255
 21693  000DEA  0102               	movlb	2	; () banked
 21694  000DEC  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21695  000DEE  0100               	movlb	0	; () banked
 21696  000DF0  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21697  000DF2  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21698  000DF4  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21699  000DF6  0E0C               	movlw	12
 21700  000DF8                     u16845:
 21701  000DF8  90D8               	bcf	status,0,c
 21702  000DFA  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21703  000DFC  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21704  000DFE  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21705  000E00  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21706  000E02  2EE8               	decfsz	wreg,f,c
 21707  000E04  D7F9               	goto	u16845
 21708  000E06  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21709  000E0A  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21710  000E0E  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21711  000E12  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21712  000E16  0E7D               	movlw	125
 21713  000E18  6F68               	movwf	___lldiv@divisor& (0+255),b
 21714  000E1A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21715  000E1C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21716  000E1E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21717  000E20  EC0B  F030         	call	___lldiv	;wreg free
 21718  000E24  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21719  000E28  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21720  000E2C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21721  000E30  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21722  000E34  0102               	movlb	2	; () banked
 21723  000E36  51E5               	movf	(_loRa+229)& (0+255),w,b
 21724  000E38  EC60  F036         	call	_SwTimerSetTimeout
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21728  000E3C  0102               	movlb	2	; () banked
 21729  000E3E  51E4               	movf	(_loRa+228)& (0+255),w,b
 21730  000E40  EC49  F02E         	call	_SwTimerStart
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21734  000E44  0102               	movlb	2	; () banked
 21735  000E46  5112               	movf	(_loRa+18)& (0+255),w,b
 21736  000E48  E103               	bnz	l14621
 21737                           
 21738                           ; BSR set to: 2
 21739                           ;lorawan_eu.c: 396: {
 21740                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21741  000E4A  51E5               	movf	(_loRa+229)& (0+255),w,b
 21742  000E4C  EC49  F02E         	call	_SwTimerStart
 21743  000E50                     l14621:
 21744                           
 21745                           ;lorawan_eu.c: 398: }
 21746                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21747  000E50  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21748  000E54  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21749  000E58  EE22  F0DB         	lfsr	2,_loRa+219
 21750  000E5C  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21751  000E60  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 21752  000E64  0100               	movlb	0	; () banked
 21753  000E66  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21754  000E68  0D0E               	mullw	14
 21755  000E6A  0E06               	movlw	low (_Channels+6)
 21756  000E6C  24F3               	addwf	prodl,w,c
 21757  000E6E  6ED9               	movwf	fsr2l,c
 21758  000E70  0E04               	movlw	high (_Channels+6)
 21759  000E72  20F4               	addwfc	prodh,w,c
 21760  000E74  6EDA               	movwf	fsr2h,c
 21761  000E76  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 21762  000E7A  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 21763  000E7E  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21764  000E80  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21765  000E82  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21766  000E84  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21767  000E86  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21768  000E88  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21769  000E8A  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21770  000E8C  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21771  000E8E  0E00               	movlw	0
 21772  000E90  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21773  000E92  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21774  000E94  0E00               	movlw	0
 21775  000E96  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21776  000E98  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21777  000E9A  0E00               	movlw	0
 21778  000E9C  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21779  000E9E  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21780  000EA0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21781  000EA2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21782  000EA4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21783  000EA8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21784  000EAC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21785  000EAE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21786  000EB0  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21787  000EB2  50F3               	movf	prodl,w,c
 21788  000EB4  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21789  000EB6  50F4               	movf	prodh,w,c
 21790  000EB8  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21791  000EBA  0E00               	movlw	0
 21792  000EBC  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21793  000EBE  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21794  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21795  000EC2  50F3               	movf	prodl,w,c
 21796  000EC4  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21797  000EC6  50F4               	movf	prodh,w,c
 21798  000EC8  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21799  000ECA  0E00               	movlw	0
 21800  000ECC  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21801  000ECE  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21802  000ED0  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21803  000ED2  50F3               	movf	prodl,w,c
 21804  000ED4  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21805  000ED6  50F4               	movf	prodh,w,c
 21806  000ED8  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21807  000EDA  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21808  000EDC  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21809  000EDE  50F3               	movf	prodl,w,c
 21810  000EE0  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21811  000EE2  50F4               	movf	prodh,w,c
 21812  000EE4  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21813  000EE6  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21814  000EE8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21815  000EEA  50F3               	movf	prodl,w,c
 21816  000EEC  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21817  000EEE  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21818  000EF0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21819  000EF2  50F3               	movf	prodl,w,c
 21820  000EF4  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21821  000EF6  0EFF               	movlw	255
 21822  000EF8  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21823  000EFA  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21824  000EFC  0EFF               	movlw	255
 21825  000EFE  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21826  000F00  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21827  000F02  0EFF               	movlw	255
 21828  000F04  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21829  000F06  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21830  000F08  0EFF               	movlw	255
 21831  000F0A  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21832  000F0C  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21833  000F0E  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21834  000F10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21835  000F12  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 21836  000F16  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 21837  000F1A  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21838  000F1C  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21839  000F1E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21840  000F20  50F3               	movf	prodl,w,c
 21841  000F22  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21842  000F24  50F4               	movf	prodh,w,c
 21843  000F26  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21844  000F28  0E00               	movlw	0
 21845  000F2A  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21846  000F2C  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21847  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21848  000F30  50F3               	movf	prodl,w,c
 21849  000F32  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21850  000F34  50F4               	movf	prodh,w,c
 21851  000F36  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21852  000F38  0E00               	movlw	0
 21853  000F3A  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21854  000F3C  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21855  000F3E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21856  000F40  50F3               	movf	prodl,w,c
 21857  000F42  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21858  000F44  50F4               	movf	prodh,w,c
 21859  000F46  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21860  000F48  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21861  000F4A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21862  000F4C  50F3               	movf	prodl,w,c
 21863  000F4E  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21864  000F50  50F4               	movf	prodh,w,c
 21865  000F52  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21866  000F54  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21867  000F56  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21868  000F58  50F3               	movf	prodl,w,c
 21869  000F5A  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21870  000F5C  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21871  000F5E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21872  000F60  50F3               	movf	prodl,w,c
 21873  000F62  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21874  000F64  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21875  000F66  0D0E               	mullw	14
 21876  000F68  0E08               	movlw	low (_Channels+8)
 21877  000F6A  24F3               	addwf	prodl,w,c
 21878  000F6C  6ED9               	movwf	fsr2l,c
 21879  000F6E  0E04               	movlw	high (_Channels+8)
 21880  000F70  20F4               	addwfc	prodh,w,c
 21881  000F72  6EDA               	movwf	fsr2h,c
 21882  000F74  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21883  000F78  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21884  000F7C  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21885  000F80  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21886  000F84                     l14623:
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;lorawan_eu.c: 401: }
 21890                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21891  000F84  0102               	movlb	2	; () banked
 21892  000F86  51E9               	movf	(_loRa+233)& (0+255),w,b
 21893  000F88  ECED  F039         	call	_SwTimerIsRunning
 21894  000F8C  0900               	iorlw	0
 21895  000F8E  E101 D0C8          	bz	l14635
 21896                           
 21897                           ; BSR set to: 0
 21898                           ;lorawan_eu.c: 404: {
 21899                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21900  000F92  0102               	movlb	2	; () banked
 21901  000F94  51E9               	movf	(_loRa+233)& (0+255),w,b
 21902  000F96  EC57  F03A         	call	_SwTimerStop
 21903                           
 21904                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21905  000F9A  0102               	movlb	2	; () banked
 21906  000F9C  51E9               	movf	(_loRa+233)& (0+255),w,b
 21907  000F9E  EC81  F036         	call	_SwTimerReadValue
 21908  000FA2  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21909  000FA6  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21910  000FAA  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21911  000FAE  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21912                           
 21913                           ; BSR set to: 0
 21914                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21915  000FB2  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21916  000FB4  E107               	bnz	u16870
 21917  000FB6  0E1F               	movlw	31
 21918  000FB8  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21919  000FBA  0EAC               	movlw	172
 21920  000FBC  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21921  000FBE  0EDF               	movlw	223
 21922  000FC0  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21923  000FC2  E34A               	bnc	l14631
 21924  000FC4                     u16870:
 21925                           
 21926                           ; BSR set to: 0
 21927  000FC4  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21928  000FC8  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21929  000FCC  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21930  000FD0  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21931  000FD4  0E0D               	movlw	13
 21932  000FD6  D005               	goto	u16880
 21933  000FD8                     u16885:
 21934  000FD8  90D8               	bcf	status,0,c
 21935  000FDA  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21936  000FDC  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21937  000FDE  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21938  000FE0  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21939  000FE2                     u16880:
 21940  000FE2  2EE8               	decfsz	wreg,f,c
 21941  000FE4  D7F9               	goto	u16885
 21942  000FE6  0E7D               	movlw	125
 21943  000FE8  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21944  000FEA  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21945  000FEE  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21946  000FF2  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21947  000FF4  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21948  000FF6  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21949  000FF8  50F3               	movf	prodl,w,c
 21950  000FFA  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21951  000FFC  50F4               	movf	prodh,w,c
 21952  000FFE  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21953  001000  0E00               	movlw	0
 21954  001002  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21955  001004  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21956  001006  50F3               	movf	prodl,w,c
 21957  001008  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21958  00100A  50F4               	movf	prodh,w,c
 21959  00100C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21960  00100E  0E00               	movlw	0
 21961  001010  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21962  001012  0E7D               	movlw	125
 21963  001014  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21964  001016  50F3               	movf	prodl,w,c
 21965  001018  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21966  00101A  50F4               	movf	prodh,w,c
 21967  00101C  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21968  00101E  0E00               	movlw	0
 21969  001020  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21970  001022  50F3               	movf	prodl,w,c
 21971  001024  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21972  001026  50F4               	movf	prodh,w,c
 21973  001028  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21974  00102A  0E00               	movlw	0
 21975  00102C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21976  00102E  50F3               	movf	prodl,w,c
 21977  001030  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21978  001032  50F4               	movf	prodh,w,c
 21979  001034  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21980  001036  0E7D               	movlw	125
 21981  001038  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21982  00103A  50F3               	movf	prodl,w,c
 21983  00103C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21984  00103E  0E00               	movlw	0
 21985  001040  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21986  001042  50F3               	movf	prodl,w,c
 21987  001044  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21988  001046  0E00               	movlw	0
 21989  001048  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21990  00104A  50F3               	movf	prodl,w,c
 21991  00104C  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21992  00104E  0E00               	movlw	0
 21993  001050  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21994  001052  50F3               	movf	prodl,w,c
 21995  001054  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21996  001056  D049               	goto	L12
 21997  001058                     l14631:
 21998                           
 21999                           ; BSR set to: 0
 22000  001058  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22001  00105C  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22002  001060  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22003  001064  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22004  001068  0E7D               	movlw	125
 22005  00106A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22006  00106C  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 22007  001070  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 22008  001074  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 22009  001076  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 22010  001078  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22011  00107A  50F3               	movf	prodl,w,c
 22012  00107C  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22013  00107E  50F4               	movf	prodh,w,c
 22014  001080  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22015  001082  0E00               	movlw	0
 22016  001084  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22017  001086  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22018  001088  50F3               	movf	prodl,w,c
 22019  00108A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22020  00108C  50F4               	movf	prodh,w,c
 22021  00108E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22022  001090  0E00               	movlw	0
 22023  001092  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22024  001094  0E7D               	movlw	125
 22025  001096  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22026  001098  50F3               	movf	prodl,w,c
 22027  00109A  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22028  00109C  50F4               	movf	prodh,w,c
 22029  00109E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22030  0010A0  0E00               	movlw	0
 22031  0010A2  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22032  0010A4  50F3               	movf	prodl,w,c
 22033  0010A6  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22034  0010A8  50F4               	movf	prodh,w,c
 22035  0010AA  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22036  0010AC  0E00               	movlw	0
 22037  0010AE  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22038  0010B0  50F3               	movf	prodl,w,c
 22039  0010B2  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22040  0010B4  50F4               	movf	prodh,w,c
 22041  0010B6  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22042  0010B8  0E7D               	movlw	125
 22043  0010BA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22044  0010BC  50F3               	movf	prodl,w,c
 22045  0010BE  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22046  0010C0  0E00               	movlw	0
 22047  0010C2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22048  0010C4  50F3               	movf	prodl,w,c
 22049  0010C6  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22050  0010C8  0E00               	movlw	0
 22051  0010CA  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22052  0010CC  50F3               	movf	prodl,w,c
 22053  0010CE  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22054  0010D0  0E00               	movlw	0
 22055  0010D2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22056  0010D4  50F3               	movf	prodl,w,c
 22057  0010D6  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22058  0010D8  0E0D               	movlw	13
 22059  0010DA  D005               	goto	u16890
 22060  0010DC                     u16895:
 22061  0010DC  90D8               	bcf	status,0,c
 22062  0010DE  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22063  0010E0  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22064  0010E2  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22065  0010E4  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22066  0010E6                     u16890:
 22067  0010E6  2EE8               	decfsz	wreg,f,c
 22068  0010E8  D7F9               	goto	u16895
 22069  0010EA                     L12:
 22070  0010EA  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2092
 22071  0010EE  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2092+1
 22072  0010F2  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2092+2
 22073  0010F6  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2092+3
 22074                           
 22075                           ; BSR set to: 0
 22076  0010FA  51BC               	movf	_LORAWAN_TxDone$2092& (0+255),w,b
 22077  0010FC  0102               	movlb	2	; () banked
 22078  0010FE  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 22079  001100  0100               	movlb	0	; () banked
 22080  001102  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22081  001104  51BD               	movf	(_LORAWAN_TxDone$2092+1)& (0+255),w,b
 22082  001106  0102               	movlb	2	; () banked
 22083  001108  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 22084  00110A  0100               	movlb	0	; () banked
 22085  00110C  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22086  00110E  51BE               	movf	(_LORAWAN_TxDone$2092+2)& (0+255),w,b
 22087  001110  0102               	movlb	2	; () banked
 22088  001112  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 22089  001114  0100               	movlb	0	; () banked
 22090  001116  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22091  001118  51BF               	movf	(_LORAWAN_TxDone$2092+3)& (0+255),w,b
 22092  00111A  0102               	movlb	2	; () banked
 22093  00111C  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 22094  00111E  0100               	movlb	0	; () banked
 22095  001120  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22096  001122                     l14635:
 22097                           
 22098                           ; BSR set to: 0
 22099                           ;lorawan_eu.c: 409: }
 22100                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 22101  001122  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 22102  001124                     l14641:
 22103                           
 22104                           ; BSR set to: 0
 22105                           ;lorawan_eu.c: 412: {
 22106                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 22107  001124  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22108  001126  0D0E               	mullw	14
 22109  001128  0E04               	movlw	low (_Channels+4)
 22110  00112A  24F3               	addwf	prodl,w,c
 22111  00112C  6ED9               	movwf	fsr2l,c
 22112  00112E  0E04               	movlw	high (_Channels+4)
 22113  001130  20F4               	addwfc	prodh,w,c
 22114  001132  6EDA               	movwf	fsr2h,c
 22115  001134  04DE               	decf	postinc2,w,c
 22116  001136  E001 D08E          	bnz	l14659
 22117                           
 22118                           ; BSR set to: 0
 22119  00113A  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22120  00113C  0D0E               	mullw	14
 22121  00113E  0E08               	movlw	low (_Channels+8)
 22122  001140  24F3               	addwf	prodl,w,c
 22123  001142  6ED9               	movwf	fsr2l,c
 22124  001144  0E04               	movlw	high (_Channels+8)
 22125  001146  20F4               	addwfc	prodh,w,c
 22126  001148  6EDA               	movwf	fsr2h,c
 22127  00114A  50DE               	movf	postinc2,w,c
 22128  00114C  10DE               	iorwf	postinc2,w,c
 22129  00114E  10DE               	iorwf	postinc2,w,c
 22130  001150  10DE               	iorwf	postinc2,w,c
 22131  001152  E101 D080          	bz	l14659
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;lorawan_eu.c: 414: {
 22135                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 22136  001156  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22137  001158  0102               	movlb	2	; () banked
 22138  00115A  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 22139  00115C  E04B               	bz	l1031
 22140                           
 22141                           ; BSR set to: 2
 22142                           ;lorawan_eu.c: 416: {
 22143                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 22144  00115E  0100               	movlb	0	; () banked
 22145  001160  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22146  001162  0D0E               	mullw	14
 22147  001164  0E08               	movlw	low (_Channels+8)
 22148  001166  24F3               	addwf	prodl,w,c
 22149  001168  6ED9               	movwf	fsr2l,c
 22150  00116A  0E04               	movlw	high (_Channels+8)
 22151  00116C  20F4               	addwfc	prodh,w,c
 22152  00116E  6EDA               	movwf	fsr2h,c
 22153  001170  50DE               	movf	postinc2,w,c
 22154  001172  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22155  001174  50DE               	movf	postinc2,w,c
 22156  001176  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22157  001178  50DE               	movf	postinc2,w,c
 22158  00117A  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22159  00117C  50DE               	movf	postinc2,w,c
 22160  00117E  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22161  001180  E22D               	bc	l14651
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;lorawan_eu.c: 418: {
 22165                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 22166  001182  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22167  001184  0D0E               	mullw	14
 22168  001186  0E08               	movlw	low (_Channels+8)
 22169  001188  24F3               	addwf	prodl,w,c
 22170  00118A  6ED9               	movwf	fsr2l,c
 22171  00118C  0E04               	movlw	high (_Channels+8)
 22172  00118E  20F4               	addwfc	prodh,w,c
 22173  001190  6EDA               	movwf	fsr2h,c
 22174  001192  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 22175  001196  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 22176  00119A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 22177  00119E  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 22178  0011A2  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22179  0011A4  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22180  0011A6  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22181  0011A8  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22182  0011AA  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22183  0011AC  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22184  0011AE  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22185  0011B0  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22186  0011B2  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22187  0011B4  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22188  0011B6  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22189  0011B8  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22190  0011BA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22191  0011BC  0D0E               	mullw	14
 22192  0011BE  0E08               	movlw	low (_Channels+8)
 22193  0011C0  24F3               	addwf	prodl,w,c
 22194  0011C2  6ED9               	movwf	fsr2l,c
 22195  0011C4  0E04               	movlw	high (_Channels+8)
 22196  0011C6  20F4               	addwfc	prodh,w,c
 22197  0011C8  6EDA               	movwf	fsr2h,c
 22198  0011CA  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22199  0011CE  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22200  0011D2  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22201  0011D6  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22202                           
 22203                           ;lorawan_eu.c: 420: }
 22204  0011DA  D00C               	goto	l1031
 22205  0011DC                     l14651:
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;lorawan_eu.c: 421: else
 22209                           ;lorawan_eu.c: 422: {
 22210                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22211  0011DC  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22212  0011DE  0D0E               	mullw	14
 22213  0011E0  0E08               	movlw	low (_Channels+8)
 22214  0011E2  24F3               	addwf	prodl,w,c
 22215  0011E4  6ED9               	movwf	fsr2l,c
 22216  0011E6  0E04               	movlw	high (_Channels+8)
 22217  0011E8  20F4               	addwfc	prodh,w,c
 22218  0011EA  6EDA               	movwf	fsr2h,c
 22219  0011EC  6ADE               	clrf	postinc2,c
 22220  0011EE  6ADE               	clrf	postinc2,c
 22221  0011F0  6ADE               	clrf	postinc2,c
 22222  0011F2  6ADD               	clrf	postdec2,c
 22223  0011F4                     l1031:
 22224                           
 22225                           ;lorawan_eu.c: 424: }
 22226                           ;lorawan_eu.c: 425: }
 22227                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22228  0011F4  0100               	movlb	0	; () banked
 22229  0011F6  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22230  0011F8  0D0E               	mullw	14
 22231  0011FA  0E08               	movlw	low (_Channels+8)
 22232  0011FC  24F3               	addwf	prodl,w,c
 22233  0011FE  6ED9               	movwf	fsr2l,c
 22234  001200  0E04               	movlw	high (_Channels+8)
 22235  001202  20F4               	addwfc	prodh,w,c
 22236  001204  6EDA               	movwf	fsr2h,c
 22237  001206  50DE               	movf	postinc2,w,c
 22238  001208  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22239  00120A  50DE               	movf	postinc2,w,c
 22240  00120C  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22241  00120E  50DE               	movf	postinc2,w,c
 22242  001210  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22243  001212  50DE               	movf	postinc2,w,c
 22244  001214  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22245  001216  E31F               	bnc	l14659
 22246                           
 22247                           ; BSR set to: 0
 22248  001218  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22249  00121A  0D0E               	mullw	14
 22250  00121C  0E08               	movlw	low (_Channels+8)
 22251  00121E  24F3               	addwf	prodl,w,c
 22252  001220  6ED9               	movwf	fsr2l,c
 22253  001222  0E04               	movlw	high (_Channels+8)
 22254  001224  20F4               	addwfc	prodh,w,c
 22255  001226  6EDA               	movwf	fsr2h,c
 22256  001228  50DE               	movf	postinc2,w,c
 22257  00122A  10DE               	iorwf	postinc2,w,c
 22258  00122C  10DE               	iorwf	postinc2,w,c
 22259  00122E  10DE               	iorwf	postinc2,w,c
 22260  001230  E012               	bz	l14659
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;lorawan_eu.c: 427: {
 22264                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22265  001232  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22266  001234  0D0E               	mullw	14
 22267  001236  0E08               	movlw	low (_Channels+8)
 22268  001238  24F3               	addwf	prodl,w,c
 22269  00123A  6ED9               	movwf	fsr2l,c
 22270  00123C  0E04               	movlw	high (_Channels+8)
 22271  00123E  20F4               	addwfc	prodh,w,c
 22272  001240  6EDA               	movwf	fsr2h,c
 22273  001242  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 22274  001246  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 22275  00124A  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 22276  00124E  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 22277                           
 22278                           ; BSR set to: 0
 22279                           ;lorawan_eu.c: 429: found = 1;
 22280  001252  0E01               	movlw	1
 22281  001254  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 22282  001256                     l14659:
 22283                           
 22284                           ; BSR set to: 0
 22285  001256  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22286                           
 22287                           ; BSR set to: 0
 22288  001258  0E0F               	movlw	15
 22289  00125A  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22290  00125C  D763               	goto	l14641
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;lorawan_eu.c: 430: }
 22294                           ;lorawan_eu.c: 431: }
 22295                           ;lorawan_eu.c: 432: }
 22296                           ;lorawan_eu.c: 433: if (found == 1)
 22297  00125E  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22298  001260  E15F               	bnz	l14677
 22299                           
 22300                           ; BSR set to: 0
 22301                           ;lorawan_eu.c: 434: {
 22302                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22303  001262  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22304  001266  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22305  00126A  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22306  00126E  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22307                           
 22308                           ; BSR set to: 0
 22309                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22310  001272  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22311  001274  E106               	bnz	u16980
 22312  001276  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22313  001278  0EFF               	movlw	255
 22314  00127A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22315  00127C  0E0F               	movlw	15
 22316  00127E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22317  001280  E318               	bnc	l14671
 22318  001282                     u16980:
 22319                           
 22320                           ; BSR set to: 0
 22321  001282  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22322  001286  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22323  00128A  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22324  00128E  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22325  001292  0E7D               	movlw	125
 22326  001294  6F68               	movwf	___lldiv@divisor& (0+255),b
 22327  001296  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22328  001298  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22329  00129A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22330  00129C  EC0B  F030         	call	___lldiv	;wreg free
 22331  0012A0  0E0C               	movlw	12
 22332  0012A2                     u16995:
 22333  0012A2  90D8               	bcf	status,0,c
 22334  0012A4  3764               	rlcf	?___lldiv& (0+255),f,b
 22335  0012A6  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22336  0012A8  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22337  0012AA  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22338  0012AC  2EE8               	decfsz	wreg,f,c
 22339  0012AE  D7F9               	goto	u16995
 22340  0012B0  D01F               	goto	L13
 22341  0012B2                     l14671:
 22342                           
 22343                           ; BSR set to: 0
 22344  0012B2  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22345  0012B6  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22346  0012BA  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22347  0012BE  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22348  0012C2  0E0C               	movlw	12
 22349  0012C4                     u17005:
 22350  0012C4  90D8               	bcf	status,0,c
 22351  0012C6  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22352  0012C8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22353  0012CA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22354  0012CC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22355  0012CE  2EE8               	decfsz	wreg,f,c
 22356  0012D0  D7F9               	goto	u17005
 22357  0012D2  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22358  0012D6  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22359  0012DA  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22360  0012DE  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22361  0012E2  0E7D               	movlw	125
 22362  0012E4  6F68               	movwf	___lldiv@divisor& (0+255),b
 22363  0012E6  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22364  0012E8  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22365  0012EA  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22366  0012EC  EC0B  F030         	call	___lldiv	;wreg free
 22367  0012F0                     L13:
 22368  0012F0  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2093
 22369  0012F4  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2093+1
 22370  0012F8  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2093+2
 22371  0012FC  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2093+3
 22372                           
 22373                           ; BSR set to: 0
 22374  001300  C0C0  F071         	movff	_LORAWAN_TxDone$2093,SwTimerSetTimeout@timeout
 22375  001304  C0C1  F072         	movff	_LORAWAN_TxDone$2093+1,SwTimerSetTimeout@timeout+1
 22376  001308  C0C2  F073         	movff	_LORAWAN_TxDone$2093+2,SwTimerSetTimeout@timeout+2
 22377  00130C  C0C3  F074         	movff	_LORAWAN_TxDone$2093+3,SwTimerSetTimeout@timeout+3
 22378  001310  0102               	movlb	2	; () banked
 22379  001312  51E9               	movf	(_loRa+233)& (0+255),w,b
 22380  001314  EC60  F036         	call	_SwTimerSetTimeout
 22381                           
 22382                           ; BSR set to: 0
 22383                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22384  001318  0102               	movlb	2	; () banked
 22385  00131A  51E9               	movf	(_loRa+233)& (0+255),w,b
 22386  00131C  EC49  F02E         	call	_SwTimerStart
 22387  001320                     l14677:
 22388                           
 22389                           ; BSR set to: 0
 22390                           ;lorawan_eu.c: 438: }
 22391                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22392  001320  0E02               	movlw	2
 22393  001322  0102               	movlb	2	; () banked
 22394  001324  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22395  001326  A4D8               	btfss	status,2,c
 22396  001328  0012               	return	
 22397                           
 22398                           ; BSR set to: 2
 22399                           ;lorawan_eu.c: 440: {
 22400                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22401  00132A  5102               	movf	(_loRa+2)& (0+255),w,b
 22402  00132C  0BF0               	andlw	-16
 22403  00132E  0908               	iorlw	8
 22404  001330  6F02               	movwf	(_loRa+2)& (0+255),b
 22405                           
 22406                           ; BSR set to: 2
 22407                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22408  001332  EF84  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22409  001336                     l14683:
 22410                           
 22411                           ; BSR set to: 2
 22412                           ;lorawan_eu.c: 445: else
 22413                           ;lorawan_eu.c: 446: {
 22414                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22415  001336  EC3B  F03C         	call	_RADIO_GetStatus	;wreg free
 22416  00133A  0100               	movlb	0	; () banked
 22417  00133C  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 22418  00133E  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22419  001340  D00E               	goto	l14687
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;lorawan_eu.c: 448: {
 22423                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22424  001342  6B64               	clrf	RxDataDone@pData& (0+255),b
 22425  001344  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22426  001346  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22427  001348  0E02               	movlw	2
 22428  00134A  6F67               	movwf	RxDataDone@status& (0+255),b
 22429  00134C  0005               	push	
 22430  00134E  6EFA               	movwf	pclath,c
 22431  001350  51E8               	movf	_rxPayload& (0+255),w,b
 22432  001352  6EFD               	movwf	tosl,c
 22433  001354  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22434  001356  6EFE               	movwf	tosh,c
 22435  001358  6AFF               	clrf	tosu,c
 22436  00135A  50FA               	movf	pclath,w,c
 22437  00135C  0012               	return		;indir
 22438  00135E                     l14687:
 22439                           
 22440                           ; BSR set to: 0
 22441                           ;lorawan_eu.c: 452: else
 22442                           ;lorawan_eu.c: 453: {
 22443                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22444  00135E  51E8               	movf	_rxPayload& (0+255),w,b
 22445  001360  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22446  001362  B4D8               	btfsc	status,2,c
 22447  001364  0012               	return	
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;lorawan_eu.c: 456: {
 22451                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22452  001366  6B64               	clrf	RxDataDone@pData& (0+255),b
 22453  001368  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22454  00136A  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22455  00136C  0E03               	movlw	3
 22456  00136E  6F67               	movwf	RxDataDone@status& (0+255),b
 22457  001370  0005               	push	
 22458  001372  6EFA               	movwf	pclath,c
 22459  001374  51E8               	movf	_rxPayload& (0+255),w,b
 22460  001376  6EFD               	movwf	tosl,c
 22461  001378  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22462  00137A  6EFE               	movwf	tosh,c
 22463  00137C  6AFF               	clrf	tosu,c
 22464  00137E  50FA               	movf	pclath,w,c
 22465  001380  0012               	return		;indir
 22466  001382                     __end_of_LORAWAN_TxDone:
 22467                           	opt stack 0
 22468                           tosu	equ	0xFFF
 22469                           tosh	equ	0xFFE
 22470                           tosl	equ	0xFFD
 22471                           pclath	equ	0xFFA
 22472                           tblptru	equ	0xFF8
 22473                           tblptrh	equ	0xFF7
 22474                           tblptrl	equ	0xFF6
 22475                           tablat	equ	0xFF5
 22476                           prodh	equ	0xFF4
 22477                           prodl	equ	0xFF3
 22478                           intcon	equ	0xFF2
 22479                           intcon2	equ	0xFF1
 22480                           intcon3	equ	0xFF0
 22481                           indf0	equ	0xFEF
 22482                           postinc0	equ	0xFEE
 22483                           fsr0h	equ	0xFEA
 22484                           fsr0l	equ	0xFE9
 22485                           wreg	equ	0xFE8
 22486                           postinc1	equ	0xFE6
 22487                           postdec1	equ	0xFE5
 22488                           plusw1	equ	0xFE3
 22489                           fsr1h	equ	0xFE2
 22490                           fsr1l	equ	0xFE1
 22491                           indf2	equ	0xFDF
 22492                           postinc2	equ	0xFDE
 22493                           postdec2	equ	0xFDD
 22494                           plusw2	equ	0xFDB
 22495                           fsr2h	equ	0xFDA
 22496                           fsr2l	equ	0xFD9
 22497                           status	equ	0xFD8
 22498                           
 22499 ;; *************** function _SwTimerReadValue *****************
 22500 ;; Defined at:
 22501 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22502 ;; Parameters:    Size  Location     Type
 22503 ;;  timerId         1    wreg     unsigned char 
 22504 ;; Auto vars:     Size  Location     Type
 22505 ;;  timerId         1   53[BANK0 ] unsigned char 
 22506 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 22507 ;; Return value:  Size  Location     Type
 22508 ;;                  4   45[BANK0 ] unsigned long 
 22509 ;; Registers used:
 22510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22511 ;; Tracked objects:
 22512 ;;		On entry : C/1
 22513 ;;		On exit  : F/0
 22514 ;;		Unchanged: 0/0
 22515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22517 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22519 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22520 ;;Total ram usage:        9 bytes
 22521 ;; Hardware stack levels used:    1
 22522 ;; Hardware stack levels required when called:   10
 22523 ;; This function calls:
 22524 ;;		_SwTimersInterrupt
 22525 ;; This function is called by:
 22526 ;;		_RADIO_TxDone
 22527 ;;		_RADIO_FSKPacketSent
 22528 ;;		_LORAWAN_TxDone
 22529 ;; This function uses a non-reentrant model
 22530 ;;
 22531                           
 22532                           	psect	text113
 22533  006D02                     __ptext113:
 22534                           	opt stack 0
 22535  006D02                     _SwTimerReadValue:
 22536                           	opt stack 16
 22537                           
 22538                           ;incstack = 0
 22539                           ;SwTimerReadValue@timerId stored from wreg
 22540  006D02  0100               	movlb	0	; () banked
 22541  006D04  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 22542                           
 22543                           ;sw_timer.c: 195: uint32_t ticksCount;
 22544                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22545  006D06  9EF2               	bcf	intcon,7,c	;volatile
 22546                           
 22547                           ;sw_timer.c: 200: SwTimersInterrupt();
 22548  006D08  ECA7  F025         	call	_SwTimersInterrupt	;wreg free
 22549                           
 22550                           ; BSR set to: 0
 22551                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22552  006D0C  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22553  006D0E  0D08               	mullw	8
 22554  006D10  0E00               	movlw	low _swTimers
 22555  006D12  24F3               	addwf	prodl,w,c
 22556  006D14  6ED9               	movwf	fsr2l,c
 22557  006D16  0E03               	movlw	high _swTimers
 22558  006D18  20F4               	addwfc	prodh,w,c
 22559  006D1A  6EDA               	movwf	fsr2h,c
 22560  006D1C  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 22561  006D20  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22562  006D24  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22563  006D28  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22567  006D2C  8EF2               	bsf	intcon,7,c	;volatile
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;sw_timer.c: 204: return ticksCount;
 22571  006D2E  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22572  006D32  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22573  006D36  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22574  006D3A  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22575                           
 22576                           ; BSR set to: 0
 22577  006D3E  0012               	return		;funcret
 22578  006D40                     __end_of_SwTimerReadValue:
 22579                           	opt stack 0
 22580                           tosu	equ	0xFFF
 22581                           tosh	equ	0xFFE
 22582                           tosl	equ	0xFFD
 22583                           pclath	equ	0xFFA
 22584                           tblptru	equ	0xFF8
 22585                           tblptrh	equ	0xFF7
 22586                           tblptrl	equ	0xFF6
 22587                           tablat	equ	0xFF5
 22588                           prodh	equ	0xFF4
 22589                           prodl	equ	0xFF3
 22590                           intcon	equ	0xFF2
 22591                           intcon2	equ	0xFF1
 22592                           intcon3	equ	0xFF0
 22593                           indf0	equ	0xFEF
 22594                           postinc0	equ	0xFEE
 22595                           fsr0h	equ	0xFEA
 22596                           fsr0l	equ	0xFE9
 22597                           wreg	equ	0xFE8
 22598                           postinc1	equ	0xFE6
 22599                           postdec1	equ	0xFE5
 22600                           plusw1	equ	0xFE3
 22601                           fsr1h	equ	0xFE2
 22602                           fsr1l	equ	0xFE1
 22603                           indf2	equ	0xFDF
 22604                           postinc2	equ	0xFDE
 22605                           postdec2	equ	0xFDD
 22606                           plusw2	equ	0xFDB
 22607                           fsr2h	equ	0xFDA
 22608                           fsr2l	equ	0xFD9
 22609                           status	equ	0xFD8
 22610                           
 22611 ;; *************** function _SwTimerIsRunning *****************
 22612 ;; Defined at:
 22613 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22614 ;; Parameters:    Size  Location     Type
 22615 ;;  timerId         1    wreg     unsigned char 
 22616 ;; Auto vars:     Size  Location     Type
 22617 ;;  timerId         1    4[BANK0 ] unsigned char 
 22618 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22619 ;; Return value:  Size  Location     Type
 22620 ;;                  1    wreg      unsigned char 
 22621 ;; Registers used:
 22622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22623 ;; Tracked objects:
 22624 ;;		On entry : F/2
 22625 ;;		On exit  : F/0
 22626 ;;		Unchanged: 0/0
 22627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22632 ;;Total ram usage:        2 bytes
 22633 ;; Hardware stack levels used:    1
 22634 ;; Hardware stack levels required when called:    7
 22635 ;; This function calls:
 22636 ;;		Nothing
 22637 ;; This function is called by:
 22638 ;;		_LORAWAN_TxDone
 22639 ;; This function uses a non-reentrant model
 22640 ;;
 22641                           
 22642                           	psect	text114
 22643  0073DA                     __ptext114:
 22644                           	opt stack 0
 22645  0073DA                     _SwTimerIsRunning:
 22646                           	opt stack 19
 22647                           
 22648                           ; BSR set to: 0
 22649                           ;incstack = 0
 22650                           ;SwTimerIsRunning@timerId stored from wreg
 22651  0073DA  0100               	movlb	0	; () banked
 22652  0073DC  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22653                           
 22654                           ;sw_timer.c: 209: uint8_t isRunning;
 22655                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22656  0073DE  9EF2               	bcf	intcon,7,c	;volatile
 22657                           
 22658                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22659  0073E0  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22660  0073E2  0D08               	mullw	8
 22661  0073E4  0E04               	movlw	low (_swTimers+4)
 22662  0073E6  24F3               	addwf	prodl,w,c
 22663  0073E8  6ED9               	movwf	fsr2l,c
 22664  0073EA  0E03               	movlw	high (_swTimers+4)
 22665  0073EC  20F4               	addwfc	prodh,w,c
 22666  0073EE  6EDA               	movwf	fsr2h,c
 22667  0073F0  50DF               	movf	indf2,w,c
 22668  0073F2  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22669                           
 22670                           ; BSR set to: 0
 22671                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22672  0073F4  8EF2               	bsf	intcon,7,c	;volatile
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;sw_timer.c: 215: return isRunning;
 22676  0073F6  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22677                           
 22678                           ; BSR set to: 0
 22679  0073F8  0012               	return		;funcret
 22680  0073FA                     __end_of_SwTimerIsRunning:
 22681                           	opt stack 0
 22682                           tosu	equ	0xFFF
 22683                           tosh	equ	0xFFE
 22684                           tosl	equ	0xFFD
 22685                           pclath	equ	0xFFA
 22686                           tblptru	equ	0xFF8
 22687                           tblptrh	equ	0xFF7
 22688                           tblptrl	equ	0xFF6
 22689                           tablat	equ	0xFF5
 22690                           prodh	equ	0xFF4
 22691                           prodl	equ	0xFF3
 22692                           intcon	equ	0xFF2
 22693                           intcon2	equ	0xFF1
 22694                           intcon3	equ	0xFF0
 22695                           indf0	equ	0xFEF
 22696                           postinc0	equ	0xFEE
 22697                           fsr0h	equ	0xFEA
 22698                           fsr0l	equ	0xFE9
 22699                           wreg	equ	0xFE8
 22700                           postinc1	equ	0xFE6
 22701                           postdec1	equ	0xFE5
 22702                           plusw1	equ	0xFE3
 22703                           fsr1h	equ	0xFE2
 22704                           fsr1l	equ	0xFE1
 22705                           indf2	equ	0xFDF
 22706                           postinc2	equ	0xFDE
 22707                           postdec2	equ	0xFDD
 22708                           plusw2	equ	0xFDB
 22709                           fsr2h	equ	0xFDA
 22710                           fsr2l	equ	0xFD9
 22711                           status	equ	0xFD8
 22712                           
 22713 ;; *************** function _RADIO_GetStatus *****************
 22714 ;; Defined at:
 22715 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22716 ;; Parameters:    Size  Location     Type
 22717 ;;		None
 22718 ;; Auto vars:     Size  Location     Type
 22719 ;;		None
 22720 ;; Return value:  Size  Location     Type
 22721 ;;                  1    wreg      unsigned char 
 22722 ;; Registers used:
 22723 ;;		wreg, status,2
 22724 ;; Tracked objects:
 22725 ;;		On entry : D/2
 22726 ;;		On exit  : F/1
 22727 ;;		Unchanged: 0/0
 22728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22733 ;;Total ram usage:        0 bytes
 22734 ;; Hardware stack levels used:    1
 22735 ;; Hardware stack levels required when called:    7
 22736 ;; This function calls:
 22737 ;;		Nothing
 22738 ;; This function is called by:
 22739 ;;		_LORAWAN_TxDone
 22740 ;;		_LORAWAN_ReceiveWindow2Callback
 22741 ;;		_LORAWAN_RxDone
 22742 ;; This function uses a non-reentrant model
 22743 ;;
 22744                           
 22745                           	psect	text115
 22746  007876                     __ptext115:
 22747                           	opt stack 0
 22748  007876                     _RADIO_GetStatus:
 22749                           	opt stack 19
 22750                           
 22751                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;incstack = 0
 22755  007876  0101               	movlb	1	; () banked
 22756  007878  51A1               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22757                           
 22758                           ; BSR set to: 1
 22759  00787A  0012               	return		;funcret
 22760  00787C                     __end_of_RADIO_GetStatus:
 22761                           	opt stack 0
 22762                           tosu	equ	0xFFF
 22763                           tosh	equ	0xFFE
 22764                           tosl	equ	0xFFD
 22765                           pclath	equ	0xFFA
 22766                           tblptru	equ	0xFF8
 22767                           tblptrh	equ	0xFF7
 22768                           tblptrl	equ	0xFF6
 22769                           tablat	equ	0xFF5
 22770                           prodh	equ	0xFF4
 22771                           prodl	equ	0xFF3
 22772                           intcon	equ	0xFF2
 22773                           intcon2	equ	0xFF1
 22774                           intcon3	equ	0xFF0
 22775                           indf0	equ	0xFEF
 22776                           postinc0	equ	0xFEE
 22777                           fsr0h	equ	0xFEA
 22778                           fsr0l	equ	0xFE9
 22779                           wreg	equ	0xFE8
 22780                           postinc1	equ	0xFE6
 22781                           postdec1	equ	0xFE5
 22782                           plusw1	equ	0xFE3
 22783                           fsr1h	equ	0xFE2
 22784                           fsr1l	equ	0xFE1
 22785                           indf2	equ	0xFDF
 22786                           postinc2	equ	0xFDE
 22787                           postdec2	equ	0xFDD
 22788                           plusw2	equ	0xFDB
 22789                           fsr2h	equ	0xFDA
 22790                           fsr2l	equ	0xFD9
 22791                           status	equ	0xFD8
 22792                           
 22793 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22794 ;; Defined at:
 22795 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22796 ;; Parameters:    Size  Location     Type
 22797 ;;		None
 22798 ;; Auto vars:     Size  Location     Type
 22799 ;;		None
 22800 ;; Return value:  Size  Location     Type
 22801 ;;                  1    wreg      void 
 22802 ;; Registers used:
 22803 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22804 ;; Tracked objects:
 22805 ;;		On entry : F/2
 22806 ;;		On exit  : F/0
 22807 ;;		Unchanged: 0/0
 22808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22813 ;;Total ram usage:        0 bytes
 22814 ;; Hardware stack levels used:    1
 22815 ;; Hardware stack levels required when called:   13
 22816 ;; This function calls:
 22817 ;;		_ConfigureRadioRx
 22818 ;;		_RADIO_ReceiveStart
 22819 ;;		_RADIO_ReceiveStop
 22820 ;;		_RADIO_ReleaseData
 22821 ;;		_ResetParametersForConfirmedTransmission
 22822 ;;		_ResetParametersForUnconfirmedTransmission
 22823 ;;		_RxDataDone
 22824 ;; This function is called by:
 22825 ;;		_LORAWAN_TxDone
 22826 ;;		_LORAWAN_ReceiveWindow2Callback
 22827 ;;		_LORAWAN_RxDone
 22828 ;;		_SetReceptionNotOkState
 22829 ;; This function uses a non-reentrant model
 22830 ;;
 22831                           
 22832                           	psect	text116
 22833  006508                     __ptext116:
 22834                           	opt stack 0
 22835  006508                     _LORAWAN_EnterContinuousReceive:
 22836                           	opt stack 13
 22837                           
 22838                           ; BSR set to: 2
 22839                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22840                           
 22841                           ; BSR set to: 1
 22842                           ;incstack = 0
 22843  006508  EC1B  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22844                           
 22845                           ; BSR set to: 1
 22846                           ;lorawan.c: 918: RADIO_ReleaseData();
 22847  00650C  EC3E  F03C         	call	_RADIO_ReleaseData	;wreg free
 22848                           
 22849                           ; BSR set to: 1
 22850                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22851  006510  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22852  006514  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22853  006518  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22854  00651C  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22855  006520  0102               	movlb	2	; () banked
 22856  006522  511C               	movf	(_loRa+28)& (0+255),w,b
 22857  006524  EC40  F039         	call	_ConfigureRadioRx
 22858                           
 22859                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22860  006528  0100               	movlb	0	; () banked
 22861  00652A  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22862  00652C  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22863  00652E  ECDB  F015         	call	_RADIO_ReceiveStart	;wreg free
 22864  006532  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22865  006534  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22866  006536  B4D8               	btfsc	status,2,c
 22867  006538  0012               	return	
 22868                           
 22869                           ; BSR set to: 0
 22870                           ;lorawan.c: 923: {
 22871                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22872  00653A  EC87  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22873                           
 22874                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22875  00653E  EC80  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22876                           
 22877                           ; BSR set to: 2
 22878                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22879  006542  0EF0               	movlw	-16
 22880  006544  1702               	andwf	(_loRa+2)& (0+255),f,b
 22881                           
 22882                           ; BSR set to: 2
 22883                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22884  006546  0100               	movlb	0	; () banked
 22885  006548  51E8               	movf	_rxPayload& (0+255),w,b
 22886  00654A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22887  00654C  B4D8               	btfsc	status,2,c
 22888  00654E  0012               	return	
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;lorawan.c: 928: {
 22892                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22893  006550  6B64               	clrf	RxDataDone@pData& (0+255),b
 22894  006552  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 22895  006554  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 22896  006556  6B67               	clrf	RxDataDone@status& (0+255),b
 22897  006558  0005               	push	
 22898  00655A  6AFA               	clrf	pclath,c
 22899  00655C  51E8               	movf	_rxPayload& (0+255),w,b
 22900  00655E  6EFD               	movwf	tosl,c
 22901  006560  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22902  006562  6EFE               	movwf	tosh,c
 22903  006564  6AFF               	clrf	tosu,c
 22904  006566  50FA               	movf	pclath,w,c
 22905  006568  0012               	return		;indir
 22906  00656A                     __end_of_LORAWAN_EnterContinuousReceive:
 22907                           	opt stack 0
 22908                           tosu	equ	0xFFF
 22909                           tosh	equ	0xFFE
 22910                           tosl	equ	0xFFD
 22911                           pclath	equ	0xFFA
 22912                           tblptru	equ	0xFF8
 22913                           tblptrh	equ	0xFF7
 22914                           tblptrl	equ	0xFF6
 22915                           tablat	equ	0xFF5
 22916                           prodh	equ	0xFF4
 22917                           prodl	equ	0xFF3
 22918                           intcon	equ	0xFF2
 22919                           intcon2	equ	0xFF1
 22920                           intcon3	equ	0xFF0
 22921                           indf0	equ	0xFEF
 22922                           postinc0	equ	0xFEE
 22923                           fsr0h	equ	0xFEA
 22924                           fsr0l	equ	0xFE9
 22925                           wreg	equ	0xFE8
 22926                           postinc1	equ	0xFE6
 22927                           postdec1	equ	0xFE5
 22928                           plusw1	equ	0xFE3
 22929                           fsr1h	equ	0xFE2
 22930                           fsr1l	equ	0xFE1
 22931                           indf2	equ	0xFDF
 22932                           postinc2	equ	0xFDE
 22933                           postdec2	equ	0xFDD
 22934                           plusw2	equ	0xFDB
 22935                           fsr2h	equ	0xFDA
 22936                           fsr2l	equ	0xFD9
 22937                           status	equ	0xFD8
 22938                           
 22939 ;; *************** function _RxDataDone *****************
 22940 ;; Defined at:
 22941 ;;		line 103 in file "main.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  pData           2    4[BANK0 ] PTR unsigned char 
 22944 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22945 ;;  dataLength      1    6[BANK0 ] unsigned char 
 22946 ;;  status          1    7[BANK0 ] enum E8000
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;		None
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1    wreg      void 
 22951 ;; Registers used:
 22952 ;;		None
 22953 ;; Tracked objects:
 22954 ;;		On entry : F/0
 22955 ;;		On exit  : F/0
 22956 ;;		Unchanged: F/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22958 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22961 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22962 ;;Total ram usage:        4 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:    7
 22965 ;; This function calls:
 22966 ;;		Nothing
 22967 ;; This function is called by:
 22968 ;;		_main
 22969 ;;		_LORAWAN_EnterContinuousReceive
 22970 ;;		_LORAWAN_ReceiveWindow2Callback
 22971 ;;		_SetReceptionNotOkState
 22972 ;;		_LORAWAN_RxDone
 22973 ;;		_LORAWAN_RxTimeout
 22974 ;;		_LORAWAN_TxDone
 22975 ;;		_AckRetransmissionCallback
 22976 ;;		_UnconfirmedTransmissionCallback
 22977 ;; This function uses a non-reentrant model
 22978 ;;
 22979                           
 22980                           	psect	text117
 22981  0078D0                     __ptext117:
 22982                           	opt stack 0
 22983  0078D0                     _RxDataDone:
 22984                           	opt stack 20
 22985                           
 22986                           ; BSR set to: 0
 22987                           
 22988                           ; BSR set to: 0
 22989                           ;incstack = 0
 22990  0078D0  0012               	return		;funcret
 22991  0078D2                     __end_of_RxDataDone:
 22992                           	opt stack 0
 22993                           tosu	equ	0xFFF
 22994                           tosh	equ	0xFFE
 22995                           tosl	equ	0xFFD
 22996                           pclath	equ	0xFFA
 22997                           tblptru	equ	0xFF8
 22998                           tblptrh	equ	0xFF7
 22999                           tblptrl	equ	0xFF6
 23000                           tablat	equ	0xFF5
 23001                           prodh	equ	0xFF4
 23002                           prodl	equ	0xFF3
 23003                           intcon	equ	0xFF2
 23004                           intcon2	equ	0xFF1
 23005                           intcon3	equ	0xFF0
 23006                           indf0	equ	0xFEF
 23007                           postinc0	equ	0xFEE
 23008                           fsr0h	equ	0xFEA
 23009                           fsr0l	equ	0xFE9
 23010                           wreg	equ	0xFE8
 23011                           postinc1	equ	0xFE6
 23012                           postdec1	equ	0xFE5
 23013                           plusw1	equ	0xFE3
 23014                           fsr1h	equ	0xFE2
 23015                           fsr1l	equ	0xFE1
 23016                           indf2	equ	0xFDF
 23017                           postinc2	equ	0xFDE
 23018                           postdec2	equ	0xFDD
 23019                           plusw2	equ	0xFDB
 23020                           fsr2h	equ	0xFDA
 23021                           fsr2l	equ	0xFD9
 23022                           status	equ	0xFD8
 23023                           
 23024 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23025 ;; Defined at:
 23026 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23027 ;; Parameters:    Size  Location     Type
 23028 ;;		None
 23029 ;; Auto vars:     Size  Location     Type
 23030 ;;		None
 23031 ;; Return value:  Size  Location     Type
 23032 ;;                  1    wreg      void 
 23033 ;; Registers used:
 23034 ;;		wreg, status,2
 23035 ;; Tracked objects:
 23036 ;;		On entry : D/0
 23037 ;;		On exit  : F/2
 23038 ;;		Unchanged: 0/0
 23039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23044 ;;Total ram usage:        0 bytes
 23045 ;; Hardware stack levels used:    1
 23046 ;; Hardware stack levels required when called:    7
 23047 ;; This function calls:
 23048 ;;		Nothing
 23049 ;; This function is called by:
 23050 ;;		_LORAWAN_RxTimeout
 23051 ;;		_LORAWAN_ReceiveWindow2Callback
 23052 ;;		_LORAWAN_EnterContinuousReceive
 23053 ;;		_UnconfirmedTransmissionCallback
 23054 ;; This function uses a non-reentrant model
 23055 ;;
 23056                           
 23057                           	psect	text118
 23058  007700                     __ptext118:
 23059                           	opt stack 0
 23060  007700                     _ResetParametersForUnconfirmedTransmission:
 23061                           	opt stack 20
 23062                           
 23063                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23064                           
 23065                           ; BSR set to: 0
 23066                           ;incstack = 0
 23067  007700  0EF0               	movlw	-16
 23068  007702  0102               	movlb	2	; () banked
 23069  007704  1702               	andwf	(_loRa+2)& (0+255),f,b
 23070                           
 23071                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23072  007706  0E01               	movlw	1
 23073  007708  6FD8               	movwf	(_loRa+216)& (0+255),b
 23074                           
 23075                           ; BSR set to: 2
 23076                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23077  00770A  6BA7               	clrf	(_loRa+167)& (0+255),b
 23078                           
 23079                           ; BSR set to: 2
 23080  00770C  0012               	return		;funcret
 23081  00770E                     __end_of_ResetParametersForUnconfirmedTransmission:
 23082                           	opt stack 0
 23083                           tosu	equ	0xFFF
 23084                           tosh	equ	0xFFE
 23085                           tosl	equ	0xFFD
 23086                           pclath	equ	0xFFA
 23087                           tblptru	equ	0xFF8
 23088                           tblptrh	equ	0xFF7
 23089                           tblptrl	equ	0xFF6
 23090                           tablat	equ	0xFF5
 23091                           prodh	equ	0xFF4
 23092                           prodl	equ	0xFF3
 23093                           intcon	equ	0xFF2
 23094                           intcon2	equ	0xFF1
 23095                           intcon3	equ	0xFF0
 23096                           indf0	equ	0xFEF
 23097                           postinc0	equ	0xFEE
 23098                           fsr0h	equ	0xFEA
 23099                           fsr0l	equ	0xFE9
 23100                           wreg	equ	0xFE8
 23101                           postinc1	equ	0xFE6
 23102                           postdec1	equ	0xFE5
 23103                           plusw1	equ	0xFE3
 23104                           fsr1h	equ	0xFE2
 23105                           fsr1l	equ	0xFE1
 23106                           indf2	equ	0xFDF
 23107                           postinc2	equ	0xFDE
 23108                           postdec2	equ	0xFDD
 23109                           plusw2	equ	0xFDB
 23110                           fsr2h	equ	0xFDA
 23111                           fsr2l	equ	0xFD9
 23112                           status	equ	0xFD8
 23113                           
 23114 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23115 ;; Defined at:
 23116 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23117 ;; Parameters:    Size  Location     Type
 23118 ;;		None
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;		None
 23121 ;; Return value:  Size  Location     Type
 23122 ;;                  1    wreg      void 
 23123 ;; Registers used:
 23124 ;;		wreg, status,2
 23125 ;; Tracked objects:
 23126 ;;		On entry : D/2
 23127 ;;		On exit  : F/2
 23128 ;;		Unchanged: 0/0
 23129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23134 ;;Total ram usage:        0 bytes
 23135 ;; Hardware stack levels used:    1
 23136 ;; Hardware stack levels required when called:    7
 23137 ;; This function calls:
 23138 ;;		Nothing
 23139 ;; This function is called by:
 23140 ;;		_LORAWAN_RxTimeout
 23141 ;;		_LORAWAN_ReceiveWindow2Callback
 23142 ;;		_LORAWAN_EnterContinuousReceive
 23143 ;;		_AckRetransmissionCallback
 23144 ;; This function uses a non-reentrant model
 23145 ;;
 23146                           
 23147                           	psect	text119
 23148  00770E                     __ptext119:
 23149                           	opt stack 0
 23150  00770E                     _ResetParametersForConfirmedTransmission:
 23151                           	opt stack 18
 23152                           
 23153                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23154                           
 23155                           ; BSR set to: 2
 23156                           ;incstack = 0
 23157  00770E  0EF0               	movlw	-16
 23158  007710  0102               	movlb	2	; () banked
 23159  007712  1702               	andwf	(_loRa+2)& (0+255),f,b
 23160                           
 23161                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23162  007714  0E01               	movlw	1
 23163  007716  6FD9               	movwf	(_loRa+217)& (0+255),b
 23164                           
 23165                           ; BSR set to: 2
 23166                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23167  007718  9100               	bcf	_loRa& (0+255),0,b
 23168                           
 23169                           ; BSR set to: 2
 23170  00771A  0C01               	retlw	1	;funcret
 23171  00771C                     __end_of_ResetParametersForConfirmedTransmission:
 23172                           	opt stack 0
 23173                           tosu	equ	0xFFF
 23174                           tosh	equ	0xFFE
 23175                           tosl	equ	0xFFD
 23176                           pclath	equ	0xFFA
 23177                           tblptru	equ	0xFF8
 23178                           tblptrh	equ	0xFF7
 23179                           tblptrl	equ	0xFF6
 23180                           tablat	equ	0xFF5
 23181                           prodh	equ	0xFF4
 23182                           prodl	equ	0xFF3
 23183                           intcon	equ	0xFF2
 23184                           intcon2	equ	0xFF1
 23185                           intcon3	equ	0xFF0
 23186                           indf0	equ	0xFEF
 23187                           postinc0	equ	0xFEE
 23188                           fsr0h	equ	0xFEA
 23189                           fsr0l	equ	0xFE9
 23190                           wreg	equ	0xFE8
 23191                           postinc1	equ	0xFE6
 23192                           postdec1	equ	0xFE5
 23193                           plusw1	equ	0xFE3
 23194                           fsr1h	equ	0xFE2
 23195                           fsr1l	equ	0xFE1
 23196                           indf2	equ	0xFDF
 23197                           postinc2	equ	0xFDE
 23198                           postdec2	equ	0xFDD
 23199                           plusw2	equ	0xFDB
 23200                           fsr2h	equ	0xFDA
 23201                           fsr2l	equ	0xFD9
 23202                           status	equ	0xFD8
 23203                           
 23204 ;; *************** function _RADIO_ReleaseData *****************
 23205 ;; Defined at:
 23206 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23207 ;; Parameters:    Size  Location     Type
 23208 ;;		None
 23209 ;; Auto vars:     Size  Location     Type
 23210 ;;		None
 23211 ;; Return value:  Size  Location     Type
 23212 ;;                  1    wreg      void 
 23213 ;; Registers used:
 23214 ;;		status,2, status,0
 23215 ;; Tracked objects:
 23216 ;;		On entry : C/2
 23217 ;;		On exit  : F/1
 23218 ;;		Unchanged: 0/0
 23219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23224 ;;Total ram usage:        0 bytes
 23225 ;; Hardware stack levels used:    1
 23226 ;; Hardware stack levels required when called:    7
 23227 ;; This function calls:
 23228 ;;		Nothing
 23229 ;; This function is called by:
 23230 ;;		_LORAWAN_ReceiveWindow1Callback
 23231 ;;		_LORAWAN_ReceiveWindow2Callback
 23232 ;;		_LORAWAN_EnterContinuousReceive
 23233 ;;		_LORAWAN_RxDone
 23234 ;; This function uses a non-reentrant model
 23235 ;;
 23236                           
 23237                           	psect	text120
 23238  00787C                     __ptext120:
 23239                           	opt stack 0
 23240  00787C                     _RADIO_ReleaseData:
 23241                           	opt stack 18
 23242                           
 23243                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23244                           
 23245                           ; BSR set to: 2
 23246                           ;incstack = 0
 23247  00787C  0101               	movlb	1	; () banked
 23248  00787E  95A1               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23249                           
 23250                           ; BSR set to: 1
 23251  007880  0012               	return		;funcret
 23252  007882                     __end_of_RADIO_ReleaseData:
 23253                           	opt stack 0
 23254                           tosu	equ	0xFFF
 23255                           tosh	equ	0xFFE
 23256                           tosl	equ	0xFFD
 23257                           pclath	equ	0xFFA
 23258                           tblptru	equ	0xFF8
 23259                           tblptrh	equ	0xFF7
 23260                           tblptrl	equ	0xFF6
 23261                           tablat	equ	0xFF5
 23262                           prodh	equ	0xFF4
 23263                           prodl	equ	0xFF3
 23264                           intcon	equ	0xFF2
 23265                           intcon2	equ	0xFF1
 23266                           intcon3	equ	0xFF0
 23267                           indf0	equ	0xFEF
 23268                           postinc0	equ	0xFEE
 23269                           fsr0h	equ	0xFEA
 23270                           fsr0l	equ	0xFE9
 23271                           wreg	equ	0xFE8
 23272                           postinc1	equ	0xFE6
 23273                           postdec1	equ	0xFE5
 23274                           plusw1	equ	0xFE3
 23275                           fsr1h	equ	0xFE2
 23276                           fsr1l	equ	0xFE1
 23277                           indf2	equ	0xFDF
 23278                           postinc2	equ	0xFDE
 23279                           postdec2	equ	0xFDD
 23280                           plusw2	equ	0xFDB
 23281                           fsr2h	equ	0xFDA
 23282                           fsr2l	equ	0xFD9
 23283                           status	equ	0xFD8
 23284                           
 23285 ;; *************** function _RADIO_ReceiveStop *****************
 23286 ;; Defined at:
 23287 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23288 ;; Parameters:    Size  Location     Type
 23289 ;;		None
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;		None
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1    wreg      void 
 23294 ;; Registers used:
 23295 ;;		wreg, status,2, status,0, cstack
 23296 ;; Tracked objects:
 23297 ;;		On entry : F/2
 23298 ;;		On exit  : F/1
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23305 ;;Total ram usage:        0 bytes
 23306 ;; Hardware stack levels used:    1
 23307 ;; Hardware stack levels required when called:   11
 23308 ;; This function calls:
 23309 ;;		_RADIO_WriteMode
 23310 ;; This function is called by:
 23311 ;;		_LORAWAN_Send
 23312 ;;		_LORAWAN_ReceiveWindow1Callback
 23313 ;;		_LORAWAN_ReceiveWindow2Callback
 23314 ;;		_LORAWAN_EnterContinuousReceive
 23315 ;; This function uses a non-reentrant model
 23316 ;;
 23317                           
 23318                           	psect	text121
 23319  007436                     __ptext121:
 23320                           	opt stack 0
 23321  007436                     _RADIO_ReceiveStop:
 23322                           	opt stack 17
 23323                           
 23324                           ; BSR set to: 2
 23325                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23326                           
 23327                           ; BSR set to: 1
 23328                           ;incstack = 0
 23329  007436  0E02               	movlw	2
 23330  007438  0101               	movlb	1	; () banked
 23331  00743A  19A1               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23332  00743C  A4D8               	btfss	status,2,c
 23333  00743E  0012               	return	
 23334                           
 23335                           ; BSR set to: 1
 23336                           ;radio_driver_SX1276.c: 954: {
 23337                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23338  007440  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23339  007444  0E00               	movlw	0
 23340  007446  0100               	movlb	0	; () banked
 23341  007448  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23342  00744A  EC5F  F028         	call	_RADIO_WriteMode
 23343                           
 23344                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23345  00744E  0101               	movlb	1	; () banked
 23346  007450  93A1               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23347                           
 23348                           ; BSR set to: 1
 23349  007452  0012               	return		;funcret
 23350  007454                     __end_of_RADIO_ReceiveStop:
 23351                           	opt stack 0
 23352                           tosu	equ	0xFFF
 23353                           tosh	equ	0xFFE
 23354                           tosl	equ	0xFFD
 23355                           pclath	equ	0xFFA
 23356                           tblptru	equ	0xFF8
 23357                           tblptrh	equ	0xFF7
 23358                           tblptrl	equ	0xFF6
 23359                           tablat	equ	0xFF5
 23360                           prodh	equ	0xFF4
 23361                           prodl	equ	0xFF3
 23362                           intcon	equ	0xFF2
 23363                           intcon2	equ	0xFF1
 23364                           intcon3	equ	0xFF0
 23365                           indf0	equ	0xFEF
 23366                           postinc0	equ	0xFEE
 23367                           fsr0h	equ	0xFEA
 23368                           fsr0l	equ	0xFE9
 23369                           wreg	equ	0xFE8
 23370                           postinc1	equ	0xFE6
 23371                           postdec1	equ	0xFE5
 23372                           plusw1	equ	0xFE3
 23373                           fsr1h	equ	0xFE2
 23374                           fsr1l	equ	0xFE1
 23375                           indf2	equ	0xFDF
 23376                           postinc2	equ	0xFDE
 23377                           postdec2	equ	0xFDD
 23378                           plusw2	equ	0xFDB
 23379                           fsr2h	equ	0xFDA
 23380                           fsr2l	equ	0xFD9
 23381                           status	equ	0xFD8
 23382                           
 23383 ;; *************** function _RADIO_ReceiveStart *****************
 23384 ;; Defined at:
 23385 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23386 ;; Parameters:    Size  Location     Type
 23387 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 23388 ;; Auto vars:     Size  Location     Type
 23389 ;;		None
 23390 ;; Return value:  Size  Location     Type
 23391 ;;                  2   54[BANK0 ] enum E7805
 23392 ;; Registers used:
 23393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23394 ;; Tracked objects:
 23395 ;;		On entry : F/0
 23396 ;;		On exit  : F/0
 23397 ;;		Unchanged: 0/0
 23398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23400 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23402 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23403 ;;Total ram usage:       10 bytes
 23404 ;; Hardware stack levels used:    1
 23405 ;; Hardware stack levels required when called:   12
 23406 ;; This function calls:
 23407 ;;		_RADIO_RegisterWrite
 23408 ;;		_RADIO_WriteConfiguration
 23409 ;;		_RADIO_WriteMode
 23410 ;;		_SwTimerSetTimeout
 23411 ;;		_SwTimerStart
 23412 ;;		___lldiv
 23413 ;; This function is called by:
 23414 ;;		_LORAWAN_ReceiveWindow1Callback
 23415 ;;		_LORAWAN_ReceiveWindow2Callback
 23416 ;;		_LORAWAN_EnterContinuousReceive
 23417 ;; This function uses a non-reentrant model
 23418 ;;
 23419                           
 23420                           	psect	text122
 23421  002BB6                     __ptext122:
 23422                           	opt stack 0
 23423  002BB6                     _RADIO_ReceiveStart:
 23424                           	opt stack 13
 23425                           
 23426                           ; BSR set to: 0
 23427                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23428                           
 23429                           ; BSR set to: 1
 23430                           ;incstack = 0
 23431  002BB6  0101               	movlb	1	; () banked
 23432  002BB8  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23433  002BBA  D006               	goto	l12741
 23434                           
 23435                           ; BSR set to: 1
 23436                           ;radio_driver_SX1276.c: 878: {
 23437                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23438  002BBC  0E80               	movlw	128
 23439  002BBE  0100               	movlb	0	; () banked
 23440  002BC0  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23441  002BC2  0E03               	movlw	3
 23442  002BC4  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23443  002BC6  0C03               	retlw	3
 23444  002BC8                     l12741:
 23445                           
 23446                           ; BSR set to: 1
 23447                           ;radio_driver_SX1276.c: 880: }
 23448                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23449  002BC8  C1A1  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23450  002BCC  0E03               	movlw	3
 23451  002BCE  0100               	movlb	0	; () banked
 23452  002BD0  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23453  002BD2  E005               	bz	l12747
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;radio_driver_SX1276.c: 883: {
 23457                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23458  002BD4  0E80               	movlw	128
 23459  002BD6  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23460  002BD8  0E04               	movlw	4
 23461  002BDA  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23462  002BDC  0C04               	retlw	4
 23463  002BDE                     l12747:
 23464                           
 23465                           ; BSR set to: 0
 23466                           ;radio_driver_SX1276.c: 885: }
 23467                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23468  002BDE  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23469  002BE0  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23470  002BE2  E107               	bnz	l12751
 23471                           
 23472                           ; BSR set to: 0
 23473                           ;radio_driver_SX1276.c: 888: {
 23474                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23475  002BE4  0E00               	movlw	0
 23476  002BE6  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23477  002BE8  0E04               	movlw	4
 23478  002BEA  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23479  002BEC  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23480                           
 23481                           ;radio_driver_SX1276.c: 890: }
 23482  002BF0  D006               	goto	l12753
 23483  002BF2                     l12751:
 23484                           
 23485                           ; BSR set to: 0
 23486                           ;radio_driver_SX1276.c: 891: else
 23487                           ;radio_driver_SX1276.c: 892: {
 23488                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23489  002BF2  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23490  002BF6  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23491  002BFA  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23492  002BFE                     l12753:
 23493                           
 23494                           ;radio_driver_SX1276.c: 894: }
 23495                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23496  002BFE  0101               	movlb	1	; () banked
 23497  002C00  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23498  002C02  E111               	bnz	l12757
 23499                           
 23500                           ; BSR set to: 1
 23501                           ;radio_driver_SX1276.c: 897: {
 23502                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23503  002C04  0E01               	movlw	1
 23504  002C06  0100               	movlb	0	; () banked
 23505  002C08  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23506  002C0A  0E22               	movlw	34
 23507  002C0C  EC2A  F03A         	call	_RADIO_RegisterWrite
 23508                           
 23509                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23510  002C10  0100               	movlb	0	; () banked
 23511  002C12  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23512  002C14  0E40               	movlw	64
 23513  002C16  EC2A  F03A         	call	_RADIO_RegisterWrite
 23514                           
 23515                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23516  002C1A  0100               	movlb	0	; () banked
 23517  002C1C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23518  002C1E  0E41               	movlw	65
 23519  002C20  EC2A  F03A         	call	_RADIO_RegisterWrite
 23520                           
 23521                           ;radio_driver_SX1276.c: 908: }
 23522  002C24  D014               	goto	l12759
 23523  002C26                     l12757:
 23524                           
 23525                           ; BSR set to: 1
 23526                           ;radio_driver_SX1276.c: 909: else
 23527                           ;radio_driver_SX1276.c: 910: {
 23528                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23529  002C26  C1B2  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23530  002C2A  0E12               	movlw	18
 23531  002C2C  EC2A  F03A         	call	_RADIO_RegisterWrite
 23532                           
 23533                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23534  002C30  C1B3  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23535  002C34  0E13               	movlw	19
 23536  002C36  EC2A  F03A         	call	_RADIO_RegisterWrite
 23537                           
 23538                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23539  002C3A  0100               	movlb	0	; () banked
 23540  002C3C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23541  002C3E  0E40               	movlw	64
 23542  002C40  EC2A  F03A         	call	_RADIO_RegisterWrite
 23543                           
 23544                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23545  002C44  0100               	movlb	0	; () banked
 23546  002C46  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23547  002C48  0E41               	movlw	65
 23548  002C4A  EC2A  F03A         	call	_RADIO_RegisterWrite
 23549  002C4E                     l12759:
 23550                           
 23551                           ;radio_driver_SX1276.c: 917: }
 23552                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23553  002C4E  0101               	movlb	1	; () banked
 23554  002C50  83A1               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23555                           
 23556                           ; BSR set to: 1
 23557                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23558  002C52  0EE7               	movlw	231
 23559  002C54  17A1               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23560                           
 23561                           ; BSR set to: 1
 23562                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23563  002C56  0100               	movlb	0	; () banked
 23564  002C58  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23565  002C5A  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23566  002C5C  E108               	bnz	l12767
 23567                           
 23568                           ; BSR set to: 0
 23569                           ;radio_driver_SX1276.c: 925: {
 23570                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23571  002C5E  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23572  002C62  0E00               	movlw	0
 23573  002C64  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23574  002C66  0E05               	movlw	5
 23575  002C68  EC5F  F028         	call	_RADIO_WriteMode
 23576                           
 23577                           ;radio_driver_SX1276.c: 927: }
 23578  002C6C  D041               	goto	l12777
 23579  002C6E                     l12767:
 23580                           
 23581                           ; BSR set to: 0
 23582                           ;radio_driver_SX1276.c: 928: else
 23583                           ;radio_driver_SX1276.c: 929: {
 23584                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23585  002C6E  0101               	movlb	1	; () banked
 23586  002C70  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23587  002C72  E109               	bnz	l12771
 23588                           
 23589                           ; BSR set to: 1
 23590                           ;radio_driver_SX1276.c: 931: {
 23591                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23592  002C74  0E01               	movlw	1
 23593  002C76  0100               	movlb	0	; () banked
 23594  002C78  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23595  002C7A  0E00               	movlw	0
 23596  002C7C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23597  002C7E  0E06               	movlw	6
 23598  002C80  EC5F  F028         	call	_RADIO_WriteMode
 23599                           
 23600                           ;radio_driver_SX1276.c: 933: }
 23601  002C84  D035               	goto	l12777
 23602  002C86                     l12771:
 23603                           
 23604                           ; BSR set to: 1
 23605                           ;radio_driver_SX1276.c: 934: else
 23606                           ;radio_driver_SX1276.c: 935: {
 23607                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23608  002C86  0E00               	movlw	0
 23609  002C88  0100               	movlb	0	; () banked
 23610  002C8A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23611  002C8C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23612  002C8E  0E05               	movlw	5
 23613  002C90  EC5F  F028         	call	_RADIO_WriteMode
 23614                           
 23615                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23616  002C94  0100               	movlb	0	; () banked
 23617  002C96  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23618  002C98  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23619  002C9A  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23620  002C9C  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23621  002C9E  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23622  002CA0  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23623  002CA2  0E0C               	movlw	12
 23624  002CA4                     u13715:
 23625  002CA4  90D8               	bcf	status,0,c
 23626  002CA6  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23627  002CA8  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23628  002CAA  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23629  002CAC  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23630  002CAE  2EE8               	decfsz	wreg,f,c
 23631  002CB0  D7F9               	goto	u13715
 23632  002CB2  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23633  002CB6  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23634  002CBA  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23635  002CBE  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23636  002CC2  0E7D               	movlw	125
 23637  002CC4  6F68               	movwf	___lldiv@divisor& (0+255),b
 23638  002CC6  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23639  002CC8  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23640  002CCA  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23641  002CCC  EC0B  F030         	call	___lldiv	;wreg free
 23642  002CD0  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23643  002CD4  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23644  002CD8  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23645  002CDC  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23646  002CE0  0101               	movlb	1	; () banked
 23647  002CE2  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23648  002CE4  EC60  F036         	call	_SwTimerSetTimeout
 23649                           
 23650                           ; BSR set to: 0
 23651                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23652  002CE8  0101               	movlb	1	; () banked
 23653  002CEA  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23654  002CEC  EC49  F02E         	call	_SwTimerStart
 23655  002CF0                     l12777:
 23656                           
 23657                           ;radio_driver_SX1276.c: 939: }
 23658                           ;radio_driver_SX1276.c: 940: }
 23659                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23660  002CF0  0101               	movlb	1	; () banked
 23661  002CF2  51A8               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23662  002CF4  11A9               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23663  002CF6  11AA               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23664  002CF8  11AB               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23665  002CFA  E059               	bz	l12789
 23666                           
 23667                           ; BSR set to: 1
 23668                           ;radio_driver_SX1276.c: 943: {
 23669                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23670  002CFC  51AB               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23671  002CFE  E106               	bnz	u13730
 23672  002D00  29A8               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23673  002D02  0EFF               	movlw	255
 23674  002D04  59A9               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23675  002D06  0E0F               	movlw	15
 23676  002D08  59AA               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23677  002D0A  E319               	bnc	l12783
 23678  002D0C                     u13730:
 23679                           
 23680                           ; BSR set to: 1
 23681  002D0C  C1A8  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23682  002D10  C1A9  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23683  002D14  C1AA  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23684  002D18  C1AB  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23685  002D1C  0E7D               	movlw	125
 23686  002D1E  0100               	movlb	0	; () banked
 23687  002D20  6F68               	movwf	___lldiv@divisor& (0+255),b
 23688  002D22  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23689  002D24  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23690  002D26  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23691  002D28  EC0B  F030         	call	___lldiv	;wreg free
 23692  002D2C  0E0C               	movlw	12
 23693  002D2E                     u13745:
 23694  002D2E  90D8               	bcf	status,0,c
 23695  002D30  3764               	rlcf	?___lldiv& (0+255),f,b
 23696  002D32  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23697  002D34  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23698  002D36  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23699  002D38  2EE8               	decfsz	wreg,f,c
 23700  002D3A  D7F9               	goto	u13745
 23701  002D3C  D020               	goto	L14
 23702  002D3E                     l12783:
 23703                           
 23704                           ; BSR set to: 1
 23705  002D3E  C1A8  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23706  002D42  C1A9  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23707  002D46  C1AA  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23708  002D4A  C1AB  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23709  002D4E  0E0C               	movlw	12
 23710  002D50                     u13755:
 23711  002D50  90D8               	bcf	status,0,c
 23712  002D52  0100               	movlb	0	; () banked
 23713  002D54  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23714  002D56  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23715  002D58  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23716  002D5A  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23717  002D5C  2EE8               	decfsz	wreg,f,c
 23718  002D5E  D7F8               	goto	u13755
 23719  002D60  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23720  002D64  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23721  002D68  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23722  002D6C  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23723  002D70  0E7D               	movlw	125
 23724  002D72  6F68               	movwf	___lldiv@divisor& (0+255),b
 23725  002D74  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23726  002D76  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23727  002D78  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23728  002D7A  EC0B  F030         	call	___lldiv	;wreg free
 23729  002D7E                     L14:
 23730  002D7E  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1199
 23731  002D82  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1199+1
 23732  002D86  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1199+2
 23733  002D8A  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1199+3
 23734                           
 23735                           ; BSR set to: 0
 23736  002D8E  C09C  F071         	movff	_RADIO_ReceiveStart$1199,SwTimerSetTimeout@timeout
 23737  002D92  C09D  F072         	movff	_RADIO_ReceiveStart$1199+1,SwTimerSetTimeout@timeout+1
 23738  002D96  C09E  F073         	movff	_RADIO_ReceiveStart$1199+2,SwTimerSetTimeout@timeout+2
 23739  002D9A  C09F  F074         	movff	_RADIO_ReceiveStart$1199+3,SwTimerSetTimeout@timeout+3
 23740  002D9E  0101               	movlb	1	; () banked
 23741  002DA0  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23742  002DA2  EC60  F036         	call	_SwTimerSetTimeout
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23746  002DA6  0101               	movlb	1	; () banked
 23747  002DA8  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23748  002DAA  EC49  F02E         	call	_SwTimerStart
 23749  002DAE                     l12789:
 23750                           
 23751                           ;radio_driver_SX1276.c: 946: }
 23752                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23753  002DAE  0100               	movlb	0	; () banked
 23754  002DB0  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23755  002DB2  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23756                           
 23757                           ; BSR set to: 0
 23758  002DB4  0012               	return		;funcret
 23759  002DB6                     __end_of_RADIO_ReceiveStart:
 23760                           	opt stack 0
 23761                           tosu	equ	0xFFF
 23762                           tosh	equ	0xFFE
 23763                           tosl	equ	0xFFD
 23764                           pclath	equ	0xFFA
 23765                           tblptru	equ	0xFF8
 23766                           tblptrh	equ	0xFF7
 23767                           tblptrl	equ	0xFF6
 23768                           tablat	equ	0xFF5
 23769                           prodh	equ	0xFF4
 23770                           prodl	equ	0xFF3
 23771                           intcon	equ	0xFF2
 23772                           intcon2	equ	0xFF1
 23773                           intcon3	equ	0xFF0
 23774                           indf0	equ	0xFEF
 23775                           postinc0	equ	0xFEE
 23776                           fsr0h	equ	0xFEA
 23777                           fsr0l	equ	0xFE9
 23778                           wreg	equ	0xFE8
 23779                           postinc1	equ	0xFE6
 23780                           postdec1	equ	0xFE5
 23781                           plusw1	equ	0xFE3
 23782                           fsr1h	equ	0xFE2
 23783                           fsr1l	equ	0xFE1
 23784                           indf2	equ	0xFDF
 23785                           postinc2	equ	0xFDE
 23786                           postdec2	equ	0xFDD
 23787                           plusw2	equ	0xFDB
 23788                           fsr2h	equ	0xFDA
 23789                           fsr2l	equ	0xFD9
 23790                           status	equ	0xFD8
 23791                           
 23792 ;; *************** function _ConfigureRadioRx *****************
 23793 ;; Defined at:
 23794 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23795 ;; Parameters:    Size  Location     Type
 23796 ;;  dataRate        1    wreg     unsigned char 
 23797 ;;  freq            4   22[BANK0 ] unsigned long 
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;  dataRate        1   26[BANK0 ] unsigned char 
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1    wreg      void 
 23802 ;; Registers used:
 23803 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23804 ;; Tracked objects:
 23805 ;;		On entry : F/2
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23812 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23813 ;;Total ram usage:        5 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:   10
 23816 ;; This function calls:
 23817 ;;		_ConfigureRadio
 23818 ;;		_RADIO_SetCRC
 23819 ;;		_RADIO_SetIQInverted
 23820 ;; This function is called by:
 23821 ;;		_LORAWAN_ReceiveWindow1Callback
 23822 ;;		_LORAWAN_ReceiveWindow2Callback
 23823 ;;		_LORAWAN_EnterContinuousReceive
 23824 ;; This function uses a non-reentrant model
 23825 ;;
 23826                           
 23827                           	psect	text123
 23828  007280                     __ptext123:
 23829                           	opt stack 0
 23830  007280                     _ConfigureRadioRx:
 23831                           	opt stack 15
 23832                           
 23833                           ; BSR set to: 0
 23834                           ;incstack = 0
 23835                           ;ConfigureRadioRx@dataRate stored from wreg
 23836  007280  0100               	movlb	0	; () banked
 23837  007282  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23838                           
 23839                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23840  007284  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23841  007288  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23842  00728C  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23843  007290  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23844  007294  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23845  007296  ECBC  F02D         	call	_ConfigureRadio
 23846                           
 23847                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23848  00729A  0E00               	movlw	0
 23849  00729C  ECF8  F03B         	call	_RADIO_SetCRC
 23850                           
 23851                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23852  0072A0  0E01               	movlw	1
 23853  0072A2  EFF3  F03B         	goto	_RADIO_SetIQInverted
 23854  0072A6                     __end_of_ConfigureRadioRx:
 23855                           	opt stack 0
 23856                           tosu	equ	0xFFF
 23857                           tosh	equ	0xFFE
 23858                           tosl	equ	0xFFD
 23859                           pclath	equ	0xFFA
 23860                           tblptru	equ	0xFF8
 23861                           tblptrh	equ	0xFF7
 23862                           tblptrl	equ	0xFF6
 23863                           tablat	equ	0xFF5
 23864                           prodh	equ	0xFF4
 23865                           prodl	equ	0xFF3
 23866                           intcon	equ	0xFF2
 23867                           intcon2	equ	0xFF1
 23868                           intcon3	equ	0xFF0
 23869                           indf0	equ	0xFEF
 23870                           postinc0	equ	0xFEE
 23871                           fsr0h	equ	0xFEA
 23872                           fsr0l	equ	0xFE9
 23873                           wreg	equ	0xFE8
 23874                           postinc1	equ	0xFE6
 23875                           postdec1	equ	0xFE5
 23876                           plusw1	equ	0xFE3
 23877                           fsr1h	equ	0xFE2
 23878                           fsr1l	equ	0xFE1
 23879                           indf2	equ	0xFDF
 23880                           postinc2	equ	0xFDE
 23881                           postdec2	equ	0xFDD
 23882                           plusw2	equ	0xFDB
 23883                           fsr2h	equ	0xFDA
 23884                           fsr2l	equ	0xFD9
 23885                           status	equ	0xFD8
 23886                           
 23887 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23888 ;; Defined at:
 23889 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23890 ;; Parameters:    Size  Location     Type
 23891 ;;		None
 23892 ;; Auto vars:     Size  Location     Type
 23893 ;;  a               1    4[BANK0 ] unsigned char 
 23894 ;; Return value:  Size  Location     Type
 23895 ;;                  1    wreg      unsigned char 
 23896 ;; Registers used:
 23897 ;;		wreg, status,2
 23898 ;; Tracked objects:
 23899 ;;		On entry : F/0
 23900 ;;		On exit  : F/0
 23901 ;;		Unchanged: 0/0
 23902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23907 ;;Total ram usage:        1 bytes
 23908 ;; Hardware stack levels used:    1
 23909 ;; Hardware stack levels required when called:    7
 23910 ;; This function calls:
 23911 ;;		Nothing
 23912 ;; This function is called by:
 23913 ;;		_LORAWAN_Mainloop
 23914 ;; This function uses a non-reentrant model
 23915 ;;
 23916                           
 23917                           	psect	text124
 23918  00771C                     __ptext124:
 23919                           	opt stack 0
 23920  00771C                     _INTERRUPT_GetDioStatus:
 23921                           	opt stack 22
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 23925                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 23926                           
 23927                           ;incstack = 0
 23928  00771C  9EF2               	bcf	intcon,7,c	;volatile
 23929                           
 23930                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23931  00771E  C0F0  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23932                           
 23933                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23934  007722  6BF0               	clrf	_dioStatus& (0+255),b	;volatile
 23935                           
 23936                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23937  007724  8EF2               	bsf	intcon,7,c	;volatile
 23938                           
 23939                           ; BSR set to: 0
 23940                           ;interrupt_manager_lora_addons.c: 55: return a;
 23941  007726  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23942                           
 23943                           ; BSR set to: 0
 23944  007728  0012               	return		;funcret
 23945  00772A                     __end_of_INTERRUPT_GetDioStatus:
 23946                           	opt stack 0
 23947                           tosu	equ	0xFFF
 23948                           tosh	equ	0xFFE
 23949                           tosl	equ	0xFFD
 23950                           pclath	equ	0xFFA
 23951                           tblptru	equ	0xFF8
 23952                           tblptrh	equ	0xFF7
 23953                           tblptrl	equ	0xFF6
 23954                           tablat	equ	0xFF5
 23955                           prodh	equ	0xFF4
 23956                           prodl	equ	0xFF3
 23957                           intcon	equ	0xFF2
 23958                           intcon2	equ	0xFF1
 23959                           intcon3	equ	0xFF0
 23960                           indf0	equ	0xFEF
 23961                           postinc0	equ	0xFEE
 23962                           fsr0h	equ	0xFEA
 23963                           fsr0l	equ	0xFE9
 23964                           wreg	equ	0xFE8
 23965                           postinc1	equ	0xFE6
 23966                           postdec1	equ	0xFE5
 23967                           plusw1	equ	0xFE3
 23968                           fsr1h	equ	0xFE2
 23969                           fsr1l	equ	0xFE1
 23970                           indf2	equ	0xFDF
 23971                           postinc2	equ	0xFDE
 23972                           postdec2	equ	0xFDD
 23973                           plusw2	equ	0xFDB
 23974                           fsr2h	equ	0xFDA
 23975                           fsr2l	equ	0xFD9
 23976                           status	equ	0xFD8
 23977                           
 23978 ;; *************** function _LORAWAN_Join *****************
 23979 ;; Defined at:
 23980 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23981 ;; Parameters:    Size  Location     Type
 23982 ;;  activationTy    1    wreg     enum E7980
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;  activationTy    1  126[BANK0 ] enum E7980
 23985 ;;  result          1  125[BANK0 ] enum E7957
 23986 ;;  bufferIndex     1  124[BANK0 ] unsigned char 
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  1    wreg      enum E7957
 23989 ;; Registers used:
 23990 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23991 ;; Tracked objects:
 23992 ;;		On entry : F/2
 23993 ;;		On exit  : D/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23997 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24000 ;;Total ram usage:        3 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:   14
 24003 ;; This function calls:
 24004 ;;		_PrepareJoinRequestFrame
 24005 ;;		_RADIO_Transmit
 24006 ;;		_SelectChannelForTransmission
 24007 ;;		_SwTimerSetTimeout
 24008 ;;		_SwTimerStart
 24009 ;;		_UpdateJoinInProgress
 24010 ;; This function is called by:
 24011 ;;		_main
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text125
 24016  005C06                     __ptext125:
 24017                           	opt stack 0
 24018  005C06                     _LORAWAN_Join:
 24019                           	opt stack 16
 24020                           
 24021                           ; BSR set to: 0
 24022                           ;incstack = 0
 24023                           ;LORAWAN_Join@activationTypeNew stored from wreg
 24024  005C06  0100               	movlb	0	; () banked
 24025  005C08  6FDE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 24026                           
 24027                           ;lorawan.c: 117: uint8_t bufferIndex;
 24028                           ;lorawan.c: 118: LorawanError_t result;
 24029                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 24030  005C0A  0102               	movlb	2	; () banked
 24031  005C0C  A103               	btfss	(_loRa+3)& (0+255),0,b
 24032                           
 24033                           ; BSR set to: 2
 24034                           ;lorawan.c: 123: }
 24035                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 24036  005C0E  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 24037  005C10  0012               	return	
 24038                           
 24039                           ; BSR set to: 2
 24040                           ;lorawan.c: 128: }
 24041                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 24042  005C12  5102               	movf	(_loRa+2)& (0+255),w,b
 24043  005C14  0B0F               	andlw	15
 24044  005C16  E001               	bz	l1717
 24045  005C18  0012               	return	
 24046  005C1A                     l1717:
 24047                           
 24048                           ; BSR set to: 2
 24049                           ;lorawan.c: 133: }
 24050                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 24051  005C1A  C0DE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 24052                           
 24053                           ; BSR set to: 2
 24054                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 24055  005C1E  0100               	movlb	0	; () banked
 24056  005C20  51DE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 24057  005C22  E11F               	bnz	l1718
 24058                           
 24059                           ; BSR set to: 0
 24060                           ;lorawan.c: 138: {
 24061                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 24062  005C24  0102               	movlb	2	; () banked
 24063  005C26  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 24064                           
 24065                           ; BSR set to: 2
 24066  005C28  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 24067  005C2A  0012               	return	
 24068                           
 24069                           ; BSR set to: 2
 24070  005C2C  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 24071  005C2E  0012               	return	
 24072                           
 24073                           ; BSR set to: 2
 24074                           ;lorawan.c: 144: else
 24075                           ;lorawan.c: 145: {
 24076                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 24077  005C30  EC19  F023         	call	_PrepareJoinRequestFrame	;wreg free
 24078  005C34  6FDC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 24079                           
 24080                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 24081  005C36  0E00               	movlw	0
 24082  005C38  EC17  F033         	call	_SelectChannelForTransmission
 24083  005C3C  6FDD               	movwf	LORAWAN_Join@result& (0+255),b
 24084                           
 24085                           ; BSR set to: 0
 24086                           ;lorawan.c: 149: if (result == OK)
 24087  005C3E  51DD               	movf	LORAWAN_Join@result& (0+255),w,b
 24088  005C40  A4D8               	btfss	status,2,c
 24089  005C42  0012               	return	
 24090                           
 24091                           ; BSR set to: 0
 24092                           ;lorawan.c: 150: {
 24093                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 24094  005C44  0EE0               	movlw	low _macBuffer
 24095  005C46  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 24096  005C48  0E04               	movlw	high _macBuffer
 24097  005C4A  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24098  005C4C  C0DC  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 24099  005C50  ECD3  F017         	call	_RADIO_Transmit	;wreg free
 24100  005C54  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 24101  005C56  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 24102  005C58  A4D8               	btfss	status,2,c
 24103  005C5A  0012               	return	
 24104                           
 24105                           ; BSR set to: 0
 24106                           ;lorawan.c: 152: {
 24107                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 24108  005C5C  0E01               	movlw	1
 24109  005C5E  EFC6  F03A         	goto	_UpdateJoinInProgress
 24110  005C62                     l1718:
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;lorawan.c: 167: else
 24114                           ;lorawan.c: 168: {
 24115                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 24116  005C62  0102               	movlb	2	; () banked
 24117  005C64  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 24118                           
 24119                           ; BSR set to: 2
 24120  005C66  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 24121  005C68  0012               	return	
 24122                           
 24123                           ; BSR set to: 2
 24124  005C6A  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 24125  005C6C  0012               	return	
 24126                           
 24127                           ; BSR set to: 2
 24128                           ;lorawan.c: 174: else
 24129                           ;lorawan.c: 175: {
 24130                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 24131  005C6E  0E07               	movlw	7
 24132  005C70  ECC6  F03A         	call	_UpdateJoinInProgress
 24133                           
 24134                           ; BSR set to: 2
 24135                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 24136  005C74  0E8F               	movlw	143
 24137  005C76  0100               	movlb	0	; () banked
 24138  005C78  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24139  005C7A  0E02               	movlw	2
 24140  005C7C  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24141  005C7E  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24142  005C80  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24143  005C82  0102               	movlb	2	; () banked
 24144  005C84  51F3               	movf	(_loRa+243)& (0+255),w,b
 24145  005C86  EC60  F036         	call	_SwTimerSetTimeout
 24146                           
 24147                           ; BSR set to: 0
 24148                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24149  005C8A  0102               	movlb	2	; () banked
 24150  005C8C  51F3               	movf	(_loRa+243)& (0+255),w,b
 24151  005C8E  EF49  F02E         	goto	_SwTimerStart
 24152  005C92                     __end_of_LORAWAN_Join:
 24153                           	opt stack 0
 24154                           tosu	equ	0xFFF
 24155                           tosh	equ	0xFFE
 24156                           tosl	equ	0xFFD
 24157                           pclath	equ	0xFFA
 24158                           tblptru	equ	0xFF8
 24159                           tblptrh	equ	0xFF7
 24160                           tblptrl	equ	0xFF6
 24161                           tablat	equ	0xFF5
 24162                           prodh	equ	0xFF4
 24163                           prodl	equ	0xFF3
 24164                           intcon	equ	0xFF2
 24165                           intcon2	equ	0xFF1
 24166                           intcon3	equ	0xFF0
 24167                           indf0	equ	0xFEF
 24168                           postinc0	equ	0xFEE
 24169                           fsr0h	equ	0xFEA
 24170                           fsr0l	equ	0xFE9
 24171                           wreg	equ	0xFE8
 24172                           postinc1	equ	0xFE6
 24173                           postdec1	equ	0xFE5
 24174                           plusw1	equ	0xFE3
 24175                           fsr1h	equ	0xFE2
 24176                           fsr1l	equ	0xFE1
 24177                           indf2	equ	0xFDF
 24178                           postinc2	equ	0xFDE
 24179                           postdec2	equ	0xFDD
 24180                           plusw2	equ	0xFDB
 24181                           fsr2h	equ	0xFDA
 24182                           fsr2l	equ	0xFD9
 24183                           status	equ	0xFD8
 24184                           
 24185 ;; *************** function _UpdateJoinInProgress *****************
 24186 ;; Defined at:
 24187 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24188 ;; Parameters:    Size  Location     Type
 24189 ;;  state           1    wreg     unsigned char 
 24190 ;; Auto vars:     Size  Location     Type
 24191 ;;  state           1    4[BANK0 ] unsigned char 
 24192 ;; Return value:  Size  Location     Type
 24193 ;;                  1    wreg      void 
 24194 ;; Registers used:
 24195 ;;		wreg, status,2, status,0
 24196 ;; Tracked objects:
 24197 ;;		On entry : D/0
 24198 ;;		On exit  : F/2
 24199 ;;		Unchanged: 0/0
 24200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24205 ;;Total ram usage:        1 bytes
 24206 ;; Hardware stack levels used:    1
 24207 ;; Hardware stack levels required when called:    7
 24208 ;; This function calls:
 24209 ;;		Nothing
 24210 ;; This function is called by:
 24211 ;;		_LORAWAN_Join
 24212 ;; This function uses a non-reentrant model
 24213 ;;
 24214                           
 24215                           	psect	text126
 24216  00758C                     __ptext126:
 24217                           	opt stack 0
 24218  00758C                     _UpdateJoinInProgress:
 24219                           	opt stack 22
 24220                           
 24221                           ;incstack = 0
 24222                           ;UpdateJoinInProgress@state stored from wreg
 24223  00758C  0100               	movlb	0	; () banked
 24224  00758E  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24225                           
 24226                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24227  007590  0102               	movlb	2	; () banked
 24228  007592  9902               	bcf	(_loRa+2)& (0+255),4,b
 24229                           
 24230                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24231  007594  8500               	bsf	_loRa& (0+255),2,b
 24232                           
 24233                           ; BSR set to: 2
 24234                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24235  007596  5102               	movf	(_loRa+2)& (0+255),w,b
 24236  007598  0100               	movlb	0	; () banked
 24237  00759A  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24238  00759C  0BF0               	andlw	-16
 24239  00759E  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24240  0075A0  0102               	movlb	2	; () banked
 24241  0075A2  6F02               	movwf	(_loRa+2)& (0+255),b
 24242                           
 24243                           ; BSR set to: 2
 24244  0075A4  0012               	return		;funcret
 24245  0075A6                     __end_of_UpdateJoinInProgress:
 24246                           	opt stack 0
 24247                           tosu	equ	0xFFF
 24248                           tosh	equ	0xFFE
 24249                           tosl	equ	0xFFD
 24250                           pclath	equ	0xFFA
 24251                           tblptru	equ	0xFF8
 24252                           tblptrh	equ	0xFF7
 24253                           tblptrl	equ	0xFF6
 24254                           tablat	equ	0xFF5
 24255                           prodh	equ	0xFF4
 24256                           prodl	equ	0xFF3
 24257                           intcon	equ	0xFF2
 24258                           intcon2	equ	0xFF1
 24259                           intcon3	equ	0xFF0
 24260                           indf0	equ	0xFEF
 24261                           postinc0	equ	0xFEE
 24262                           fsr0h	equ	0xFEA
 24263                           fsr0l	equ	0xFE9
 24264                           wreg	equ	0xFE8
 24265                           postinc1	equ	0xFE6
 24266                           postdec1	equ	0xFE5
 24267                           plusw1	equ	0xFE3
 24268                           fsr1h	equ	0xFE2
 24269                           fsr1l	equ	0xFE1
 24270                           indf2	equ	0xFDF
 24271                           postinc2	equ	0xFDE
 24272                           postdec2	equ	0xFDD
 24273                           plusw2	equ	0xFDB
 24274                           fsr2h	equ	0xFDA
 24275                           fsr2l	equ	0xFD9
 24276                           status	equ	0xFD8
 24277                           
 24278 ;; *************** function _SelectChannelForTransmission *****************
 24279 ;; Defined at:
 24280 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24281 ;; Parameters:    Size  Location     Type
 24282 ;;  transmission    1    wreg     unsigned char 
 24283 ;; Auto vars:     Size  Location     Type
 24284 ;;  transmission    1   37[BANK0 ] unsigned char 
 24285 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24286 ;;  result          1   38[BANK0 ] enum E8016
 24287 ;; Return value:  Size  Location     Type
 24288 ;;                  1    wreg      enum E8016
 24289 ;; Registers used:
 24290 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24291 ;; Tracked objects:
 24292 ;;		On entry : 0/0
 24293 ;;		On exit  : F/0
 24294 ;;		Unchanged: 0/0
 24295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24297 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24299 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24300 ;;Total ram usage:        3 bytes
 24301 ;; Hardware stack levels used:    1
 24302 ;; Hardware stack levels required when called:   11
 24303 ;; This function calls:
 24304 ;;		_ConfigureRadioTx
 24305 ;;		_SearchAvailableChannel
 24306 ;; This function is called by:
 24307 ;;		_LORAWAN_RxTimeout
 24308 ;;		_LORAWAN_Join
 24309 ;;		_LORAWAN_Send
 24310 ;;		_AckRetransmissionCallback
 24311 ;;		_UnconfirmedTransmissionCallback
 24312 ;; This function uses a non-reentrant model
 24313 ;;
 24314                           
 24315                           	psect	text127
 24316  00662E                     __ptext127:
 24317                           	opt stack 0
 24318  00662E                     _SelectChannelForTransmission:
 24319                           	opt stack 17
 24320                           
 24321                           ; BSR set to: 2
 24322                           ;incstack = 0
 24323                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24324  00662E  0100               	movlb	0	; () banked
 24325  006630  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24326                           
 24327                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24328                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24329  006632  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24330  006636  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24331  006638  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24332  00663A  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24333  00663C  0E10               	movlw	16
 24334  00663E  EC81  F027         	call	_SearchAvailableChannel
 24335  006642  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24336                           
 24337                           ; BSR set to: 0
 24338                           ;lorawan_eu.c: 926: if (result == OK)
 24339  006644  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24340  006646  E120               	bnz	l13437
 24341                           
 24342                           ; BSR set to: 0
 24343                           ;lorawan_eu.c: 927: {
 24344                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24345  006648  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24346                           
 24347                           ; BSR set to: 0
 24348                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24349  00664C  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24350  00664E  0D0E               	mullw	14
 24351  006650  0E00               	movlw	low _Channels
 24352  006652  24F3               	addwf	prodl,w,c
 24353  006654  6ED9               	movwf	fsr2l,c
 24354  006656  0E04               	movlw	high _Channels
 24355  006658  20F4               	addwfc	prodh,w,c
 24356  00665A  6EDA               	movwf	fsr2h,c
 24357  00665C  CFDE F213          	movff	postinc2,_loRa+19
 24358  006660  CFDE F214          	movff	postinc2,_loRa+20
 24359  006664  CFDE F215          	movff	postinc2,_loRa+21
 24360  006668  CFDE F216          	movff	postinc2,_loRa+22
 24361                           
 24362                           ; BSR set to: 0
 24363                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24364  00666C  C2DF  F217         	movff	_loRa+223,_loRa+23
 24365                           
 24366                           ; BSR set to: 0
 24367                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24368  006670  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24369  006674  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24370  006678  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24371  00667C  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24372  006680  0102               	movlb	2	; () banked
 24373  006682  5117               	movf	(_loRa+23)& (0+255),w,b
 24374  006684  ECFA  F035         	call	_ConfigureRadioTx
 24375  006688                     l13437:
 24376                           
 24377                           ;lorawan_eu.c: 933: }
 24378                           ;lorawan_eu.c: 934: return result;
 24379  006688  0100               	movlb	0	; () banked
 24380  00668A  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24381                           
 24382                           ; BSR set to: 0
 24383  00668C  0012               	return		;funcret
 24384  00668E                     __end_of_SelectChannelForTransmission:
 24385                           	opt stack 0
 24386                           tosu	equ	0xFFF
 24387                           tosh	equ	0xFFE
 24388                           tosl	equ	0xFFD
 24389                           pclath	equ	0xFFA
 24390                           tblptru	equ	0xFF8
 24391                           tblptrh	equ	0xFF7
 24392                           tblptrl	equ	0xFF6
 24393                           tablat	equ	0xFF5
 24394                           prodh	equ	0xFF4
 24395                           prodl	equ	0xFF3
 24396                           intcon	equ	0xFF2
 24397                           intcon2	equ	0xFF1
 24398                           intcon3	equ	0xFF0
 24399                           indf0	equ	0xFEF
 24400                           postinc0	equ	0xFEE
 24401                           fsr0h	equ	0xFEA
 24402                           fsr0l	equ	0xFE9
 24403                           wreg	equ	0xFE8
 24404                           postinc1	equ	0xFE6
 24405                           postdec1	equ	0xFE5
 24406                           plusw1	equ	0xFE3
 24407                           fsr1h	equ	0xFE2
 24408                           fsr1l	equ	0xFE1
 24409                           indf2	equ	0xFDF
 24410                           postinc2	equ	0xFDE
 24411                           postdec2	equ	0xFDD
 24412                           plusw2	equ	0xFDB
 24413                           fsr2h	equ	0xFDA
 24414                           fsr2l	equ	0xFD9
 24415                           status	equ	0xFD8
 24416                           
 24417 ;; *************** function _SearchAvailableChannel *****************
 24418 ;; Defined at:
 24419 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24420 ;; Parameters:    Size  Location     Type
 24421 ;;  maxChannels     1    wreg     unsigned char 
 24422 ;;  transmission    1   25[BANK0 ] unsigned char 
 24423 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24424 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24425 ;; Auto vars:     Size  Location     Type
 24426 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24427 ;;  i               1   36[BANK0 ] unsigned char 
 24428 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24429 ;;  result          1   33[BANK0 ] enum E8016
 24430 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24431 ;; Return value:  Size  Location     Type
 24432 ;;                  1    wreg      enum E8016
 24433 ;; Registers used:
 24434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24435 ;; Tracked objects:
 24436 ;;		On entry : D/2
 24437 ;;		On exit  : F/0
 24438 ;;		Unchanged: 0/0
 24439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24440 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24441 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24442 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24443 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24444 ;;Total ram usage:       12 bytes
 24445 ;; Hardware stack levels used:    1
 24446 ;; Hardware stack levels required when called:   10
 24447 ;; This function calls:
 24448 ;;		_Random
 24449 ;; This function is called by:
 24450 ;;		_SelectChannelForTransmission
 24451 ;;		_LORAWAN_RxDone
 24452 ;; This function uses a non-reentrant model
 24453 ;;
 24454                           
 24455                           	psect	text128
 24456  004F02                     __ptext128:
 24457                           	opt stack 0
 24458  004F02                     _SearchAvailableChannel:
 24459                           	opt stack 17
 24460                           
 24461                           ; BSR set to: 0
 24462                           ;incstack = 0
 24463                           ;SearchAvailableChannel@maxChannels stored from wreg
 24464  004F02  0100               	movlb	0	; () banked
 24465  004F04  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24466                           
 24467                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24468                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24469  004F06  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24470                           
 24471                           ; BSR set to: 0
 24472                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24473  004F08  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24474  004F0C  6B78               	clrf	(Random@max+1)& (0+255),b
 24475  004F0E  ECAC  F039         	call	_Random	;wreg free
 24476  004F12  2977               	incf	?_Random& (0+255),w,b
 24477  004F14  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24478                           
 24479                           ; BSR set to: 0
 24480                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24481  004F16  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24482                           
 24483                           ;lorawan_eu.c: 786: while (randomNumber)
 24484  004F1A  D054               	goto	l12991
 24485  004F1C                     l1133:
 24486                           
 24487                           ; BSR set to: 0
 24488                           ;lorawan_eu.c: 787: {
 24489                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24490  004F1C  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24491  004F1E  D047               	goto	l12983
 24492  004F20                     l12967:
 24493                           
 24494                           ; BSR set to: 0
 24495                           ;lorawan_eu.c: 789: {
 24496                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24497  004F20  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24498  004F22  0D0E               	mullw	14
 24499  004F24  0E04               	movlw	low (_Channels+4)
 24500  004F26  24F3               	addwf	prodl,w,c
 24501  004F28  6ED9               	movwf	fsr2l,c
 24502  004F2A  0E04               	movlw	high (_Channels+4)
 24503  004F2C  20F4               	addwfc	prodh,w,c
 24504  004F2E  6EDA               	movwf	fsr2h,c
 24505  004F30  04DE               	decf	postinc2,w,c
 24506  004F32  E13B               	bnz	l1136
 24507                           
 24508                           ; BSR set to: 0
 24509  004F34  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24510  004F36  0D0E               	mullw	14
 24511  004F38  0E08               	movlw	low (_Channels+8)
 24512  004F3A  24F3               	addwf	prodl,w,c
 24513  004F3C  6ED9               	movwf	fsr2l,c
 24514  004F3E  0E04               	movlw	high (_Channels+8)
 24515  004F40  20F4               	addwfc	prodh,w,c
 24516  004F42  6EDA               	movwf	fsr2h,c
 24517  004F44  50DE               	movf	postinc2,w,c
 24518  004F46  10DE               	iorwf	postinc2,w,c
 24519  004F48  10DE               	iorwf	postinc2,w,c
 24520  004F4A  10DE               	iorwf	postinc2,w,c
 24521  004F4C  E12E               	bnz	l1136
 24522                           
 24523                           ; BSR set to: 0
 24524  004F4E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24525  004F50  0D0E               	mullw	14
 24526  004F52  0E05               	movlw	low (_Channels+5)
 24527  004F54  24F3               	addwf	prodl,w,c
 24528  004F56  6ED9               	movwf	fsr2l,c
 24529  004F58  0E04               	movlw	high (_Channels+5)
 24530  004F5A  20F4               	addwfc	prodh,w,c
 24531  004F5C  6EDA               	movwf	fsr2h,c
 24532  004F5E  50DF               	movf	223,w,c
 24533  004F60  0B0F               	andlw	15
 24534  004F62  0100               	movlb	0	; () banked
 24535  004F64  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24536  004F66  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24537  004F68  0102               	movlb	2	; () banked
 24538  004F6A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24539  004F6C  E31E               	bnc	l1136
 24540                           
 24541                           ; BSR set to: 2
 24542  004F6E  0100               	movlb	0	; () banked
 24543  004F70  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24544  004F72  0D0E               	mullw	14
 24545  004F74  0E05               	movlw	low (_Channels+5)
 24546  004F76  24F3               	addwf	prodl,w,c
 24547  004F78  6ED9               	movwf	fsr2l,c
 24548  004F7A  0E04               	movlw	high (_Channels+5)
 24549  004F7C  20F4               	addwfc	prodh,w,c
 24550  004F7E  6EDA               	movwf	fsr2h,c
 24551  004F80  38DF               	swapf	223,w,c
 24552  004F82  0B0F               	andlw	15
 24553  004F84  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24554  004F86  0102               	movlb	2	; () banked
 24555  004F88  51DF               	movf	(_loRa+223)& (0+255),w,b
 24556  004F8A  0100               	movlb	0	; () banked
 24557  004F8C  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24558  004F8E  E30D               	bnc	l1136
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;lorawan_eu.c: 791: {
 24562                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24563  004F90  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24564  004F92  E10A               	bnz	l12979
 24565                           
 24566                           ; BSR set to: 0
 24567                           ;lorawan_eu.c: 793: {
 24568                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24569  004F94  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24570  004F96  0D0E               	mullw	14
 24571  004F98  0E0C               	movlw	low (_Channels+12)
 24572  004F9A  24F3               	addwf	prodl,w,c
 24573  004F9C  6ED9               	movwf	fsr2l,c
 24574  004F9E  0E04               	movlw	high (_Channels+12)
 24575  004FA0  20F4               	addwfc	prodh,w,c
 24576  004FA2  6EDA               	movwf	fsr2h,c
 24577  004FA4  04DE               	decf	postinc2,w,c
 24578  004FA6  E101               	bnz	l1136
 24579  004FA8                     l12979:
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;lorawan_eu.c: 795: {
 24583                           ;lorawan_eu.c: 796: randomNumber --;
 24584  004FA8  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24585  004FAA                     l1136:
 24586  004FAA  0100               	movlb	0	; () banked
 24587  004FAC  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24588  004FAE                     l12983:
 24589                           
 24590                           ; BSR set to: 0
 24591  004FAE  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24592  004FB0  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24593  004FB2  E202               	bc	l12987
 24594                           
 24595                           ; BSR set to: 0
 24596  004FB4  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24597  004FB6  E1B4               	bnz	l12967
 24598  004FB8                     l12987:
 24599                           
 24600                           ; BSR set to: 0
 24601                           ;lorawan_eu.c: 802: }
 24602                           ;lorawan_eu.c: 803: }
 24603                           ;lorawan_eu.c: 804: }
 24604                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24605  004FB8  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24606  004FBA  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24607  004FBC  E103               	bnz	l12991
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;lorawan_eu.c: 807: {
 24611                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24612  004FBE  0E09               	movlw	9
 24613  004FC0  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24614                           
 24615                           ;lorawan_eu.c: 809: break;
 24616  004FC2  D002               	goto	l12993
 24617  004FC4                     l12991:
 24618                           
 24619                           ; BSR set to: 0
 24620  004FC4  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24621  004FC6  E1AA               	bnz	l1133
 24622  004FC8                     l12993:
 24623                           
 24624                           ; BSR set to: 0
 24625                           ;lorawan_eu.c: 810: }
 24626                           ;lorawan_eu.c: 811: }
 24627                           ;lorawan_eu.c: 813: if ( i != 0)
 24628  004FC8  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24629  004FCA  E007               	bz	l12997
 24630                           
 24631                           ; BSR set to: 0
 24632                           ;lorawan_eu.c: 814: {
 24633                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24634  004FCC  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24635  004FCE  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24636  004FD2  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24637  004FD6  6EDF               	movwf	indf2,c
 24638                           
 24639                           ;lorawan_eu.c: 816: }
 24640  004FD8  D002               	goto	l1146
 24641  004FDA                     l12997:
 24642                           
 24643                           ; BSR set to: 0
 24644                           ;lorawan_eu.c: 817: else
 24645                           ;lorawan_eu.c: 818: {
 24646                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24647  004FDA  0E09               	movlw	9
 24648  004FDC  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24649  004FDE                     l1146:
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;lorawan_eu.c: 820: }
 24653                           ;lorawan_eu.c: 821: return result;
 24654  004FDE  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24655                           
 24656                           ; BSR set to: 0
 24657  004FE0  0012               	return		;funcret
 24658  004FE2                     __end_of_SearchAvailableChannel:
 24659                           	opt stack 0
 24660                           tosu	equ	0xFFF
 24661                           tosh	equ	0xFFE
 24662                           tosl	equ	0xFFD
 24663                           pclath	equ	0xFFA
 24664                           tblptru	equ	0xFF8
 24665                           tblptrh	equ	0xFF7
 24666                           tblptrl	equ	0xFF6
 24667                           tablat	equ	0xFF5
 24668                           prodh	equ	0xFF4
 24669                           prodl	equ	0xFF3
 24670                           intcon	equ	0xFF2
 24671                           intcon2	equ	0xFF1
 24672                           intcon3	equ	0xFF0
 24673                           indf0	equ	0xFEF
 24674                           postinc0	equ	0xFEE
 24675                           fsr0h	equ	0xFEA
 24676                           fsr0l	equ	0xFE9
 24677                           wreg	equ	0xFE8
 24678                           postinc1	equ	0xFE6
 24679                           postdec1	equ	0xFE5
 24680                           plusw1	equ	0xFE3
 24681                           fsr1h	equ	0xFE2
 24682                           fsr1l	equ	0xFE1
 24683                           indf2	equ	0xFDF
 24684                           postinc2	equ	0xFDE
 24685                           postdec2	equ	0xFDD
 24686                           plusw2	equ	0xFDB
 24687                           fsr2h	equ	0xFDA
 24688                           fsr2l	equ	0xFD9
 24689                           status	equ	0xFD8
 24690                           
 24691 ;; *************** function _ConfigureRadioTx *****************
 24692 ;; Defined at:
 24693 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24694 ;; Parameters:    Size  Location     Type
 24695 ;;  dataRate        1    wreg     unsigned char 
 24696 ;;  freq            4   22[BANK0 ] unsigned long 
 24697 ;; Auto vars:     Size  Location     Type
 24698 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24699 ;;  txPower         1   27[BANK0 ] char 
 24700 ;; Return value:  Size  Location     Type
 24701 ;;                  1    wreg      void 
 24702 ;; Registers used:
 24703 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24704 ;; Tracked objects:
 24705 ;;		On entry : F/2
 24706 ;;		On exit  : 0/0
 24707 ;;		Unchanged: 0/0
 24708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24713 ;;Total ram usage:        6 bytes
 24714 ;; Hardware stack levels used:    1
 24715 ;; Hardware stack levels required when called:   10
 24716 ;; This function calls:
 24717 ;;		_ConfigureRadio
 24718 ;;		_RADIO_SetCRC
 24719 ;;		_RADIO_SetIQInverted
 24720 ;;		_RADIO_SetOutputPower
 24721 ;; This function is called by:
 24722 ;;		_SelectChannelForTransmission
 24723 ;; This function uses a non-reentrant model
 24724 ;;
 24725                           
 24726                           	psect	text129
 24727  006BF4                     __ptext129:
 24728                           	opt stack 0
 24729  006BF4                     _ConfigureRadioTx:
 24730                           	opt stack 17
 24731                           
 24732                           ; BSR set to: 0
 24733                           ;incstack = 0
 24734                           ;ConfigureRadioTx@dataRate stored from wreg
 24735  006BF4  0100               	movlb	0	; () banked
 24736  006BF6  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24737                           
 24738                           ;lorawan_eu.c: 1257: int8_t txPower;
 24739                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24740  006BF8  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24741  006BFC  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24742  006C00  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24743  006C04  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24744  006C08  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24745  006C0A  ECBC  F02D         	call	_ConfigureRadio
 24746                           
 24747                           ;lorawan_eu.c: 1262: {
 24748                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24749  006C0E  0EA2               	movlw	low _txPower868
 24750  006C10  0102               	movlb	2	; () banked
 24751  006C12  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24752  006C14  6EF6               	movwf	tblptrl,c
 24753  006C16  6AF7               	clrf	tblptrh,c
 24754  006C18  0EFF               	movlw	high _txPower868
 24755  006C1A  22F7               	addwfc	tblptrh,f,c
 24756  006C1C                     	if	1	;There are 3 active tblptr bytes
 24757  006C1C  6AF8               	clrf	tblptru,c
 24758  006C1E  0E00               	movlw	low (__mediumconst shr (0+16))
 24759  006C20  22F8               	addwfc	tblptru,f,c
 24760  006C22                     	endif
 24761  006C22  0008               	tblrd		*
 24762  006C24  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24763                           
 24764                           ; BSR set to: 2
 24765                           ;lorawan_eu.c: 1268: }
 24766                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24767                           
 24768                           ;lorawan_eu.c: 1264: }
 24769  006C28  0100               	movlb	0	; () banked
 24770  006C2A  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24771  006C2C  EC21  F03C         	call	_RADIO_SetOutputPower
 24772                           
 24773                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24774  006C30  0E01               	movlw	1
 24775  006C32  ECF8  F03B         	call	_RADIO_SetCRC
 24776                           
 24777                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24778  006C36  0E00               	movlw	0
 24779  006C38  EFF3  F03B         	goto	_RADIO_SetIQInverted
 24780  006C3C                     __end_of_ConfigureRadioTx:
 24781                           	opt stack 0
 24782                           tosu	equ	0xFFF
 24783                           tosh	equ	0xFFE
 24784                           tosl	equ	0xFFD
 24785                           pclath	equ	0xFFA
 24786                           tblptru	equ	0xFF8
 24787                           tblptrh	equ	0xFF7
 24788                           tblptrl	equ	0xFF6
 24789                           tablat	equ	0xFF5
 24790                           prodh	equ	0xFF4
 24791                           prodl	equ	0xFF3
 24792                           intcon	equ	0xFF2
 24793                           intcon2	equ	0xFF1
 24794                           intcon3	equ	0xFF0
 24795                           indf0	equ	0xFEF
 24796                           postinc0	equ	0xFEE
 24797                           fsr0h	equ	0xFEA
 24798                           fsr0l	equ	0xFE9
 24799                           wreg	equ	0xFE8
 24800                           postinc1	equ	0xFE6
 24801                           postdec1	equ	0xFE5
 24802                           plusw1	equ	0xFE3
 24803                           fsr1h	equ	0xFE2
 24804                           fsr1l	equ	0xFE1
 24805                           indf2	equ	0xFDF
 24806                           postinc2	equ	0xFDE
 24807                           postdec2	equ	0xFDD
 24808                           plusw2	equ	0xFDB
 24809                           fsr2h	equ	0xFDA
 24810                           fsr2l	equ	0xFD9
 24811                           status	equ	0xFD8
 24812                           
 24813 ;; *************** function _RADIO_SetOutputPower *****************
 24814 ;; Defined at:
 24815 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24816 ;; Parameters:    Size  Location     Type
 24817 ;;  power           1    wreg     char 
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;  power           1    4[BANK0 ] char 
 24820 ;; Return value:  Size  Location     Type
 24821 ;;                  1    wreg      void 
 24822 ;; Registers used:
 24823 ;;		wreg
 24824 ;; Tracked objects:
 24825 ;;		On entry : F/0
 24826 ;;		On exit  : 0/0
 24827 ;;		Unchanged: 0/0
 24828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24832 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24833 ;;Total ram usage:        1 bytes
 24834 ;; Hardware stack levels used:    1
 24835 ;; Hardware stack levels required when called:    7
 24836 ;; This function calls:
 24837 ;;		Nothing
 24838 ;; This function is called by:
 24839 ;;		_ConfigureRadioTx
 24840 ;; This function uses a non-reentrant model
 24841 ;;
 24842                           
 24843                           	psect	text130
 24844  007842                     __ptext130:
 24845                           	opt stack 0
 24846  007842                     _RADIO_SetOutputPower:
 24847                           	opt stack 19
 24848                           
 24849                           ;incstack = 0
 24850                           ;RADIO_SetOutputPower@power stored from wreg
 24851  007842  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 24852                           
 24853                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 24854  007844  C064  F199         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 24855  007848  0012               	return		;funcret
 24856  00784A                     __end_of_RADIO_SetOutputPower:
 24857                           	opt stack 0
 24858                           tosu	equ	0xFFF
 24859                           tosh	equ	0xFFE
 24860                           tosl	equ	0xFFD
 24861                           pclath	equ	0xFFA
 24862                           tblptru	equ	0xFF8
 24863                           tblptrh	equ	0xFF7
 24864                           tblptrl	equ	0xFF6
 24865                           tablat	equ	0xFF5
 24866                           prodh	equ	0xFF4
 24867                           prodl	equ	0xFF3
 24868                           intcon	equ	0xFF2
 24869                           intcon2	equ	0xFF1
 24870                           intcon3	equ	0xFF0
 24871                           indf0	equ	0xFEF
 24872                           postinc0	equ	0xFEE
 24873                           fsr0h	equ	0xFEA
 24874                           fsr0l	equ	0xFE9
 24875                           wreg	equ	0xFE8
 24876                           postinc1	equ	0xFE6
 24877                           postdec1	equ	0xFE5
 24878                           plusw1	equ	0xFE3
 24879                           fsr1h	equ	0xFE2
 24880                           fsr1l	equ	0xFE1
 24881                           indf2	equ	0xFDF
 24882                           postinc2	equ	0xFDE
 24883                           postdec2	equ	0xFDD
 24884                           plusw2	equ	0xFDB
 24885                           fsr2h	equ	0xFDA
 24886                           fsr2l	equ	0xFD9
 24887                           status	equ	0xFD8
 24888                           
 24889 ;; *************** function _RADIO_SetIQInverted *****************
 24890 ;; Defined at:
 24891 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24892 ;; Parameters:    Size  Location     Type
 24893 ;;  iqInverted      1    wreg     unsigned char 
 24894 ;; Auto vars:     Size  Location     Type
 24895 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 24896 ;; Return value:  Size  Location     Type
 24897 ;;                  1    wreg      void 
 24898 ;; Registers used:
 24899 ;;		wreg
 24900 ;; Tracked objects:
 24901 ;;		On entry : 0/0
 24902 ;;		On exit  : 0/0
 24903 ;;		Unchanged: 0/0
 24904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24909 ;;Total ram usage:        1 bytes
 24910 ;; Hardware stack levels used:    1
 24911 ;; Hardware stack levels required when called:    7
 24912 ;; This function calls:
 24913 ;;		Nothing
 24914 ;; This function is called by:
 24915 ;;		_ConfigureRadioTx
 24916 ;;		_ConfigureRadioRx
 24917 ;; This function uses a non-reentrant model
 24918 ;;
 24919                           
 24920                           	psect	text131
 24921  0077E6                     __ptext131:
 24922                           	opt stack 0
 24923  0077E6                     _RADIO_SetIQInverted:
 24924                           	opt stack 19
 24925                           
 24926                           ;incstack = 0
 24927                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 24928  0077E6  0100               	movlb	0	; () banked
 24929  0077E8  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 24930                           
 24931                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 24932  0077EA  C064  F19E         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 24933  0077EE  0012               	return		;funcret
 24934  0077F0                     __end_of_RADIO_SetIQInverted:
 24935                           	opt stack 0
 24936                           tosu	equ	0xFFF
 24937                           tosh	equ	0xFFE
 24938                           tosl	equ	0xFFD
 24939                           pclath	equ	0xFFA
 24940                           tblptru	equ	0xFF8
 24941                           tblptrh	equ	0xFF7
 24942                           tblptrl	equ	0xFF6
 24943                           tablat	equ	0xFF5
 24944                           prodh	equ	0xFF4
 24945                           prodl	equ	0xFF3
 24946                           intcon	equ	0xFF2
 24947                           intcon2	equ	0xFF1
 24948                           intcon3	equ	0xFF0
 24949                           indf0	equ	0xFEF
 24950                           postinc0	equ	0xFEE
 24951                           fsr0h	equ	0xFEA
 24952                           fsr0l	equ	0xFE9
 24953                           wreg	equ	0xFE8
 24954                           postinc1	equ	0xFE6
 24955                           postdec1	equ	0xFE5
 24956                           plusw1	equ	0xFE3
 24957                           fsr1h	equ	0xFE2
 24958                           fsr1l	equ	0xFE1
 24959                           indf2	equ	0xFDF
 24960                           postinc2	equ	0xFDE
 24961                           postdec2	equ	0xFDD
 24962                           plusw2	equ	0xFDB
 24963                           fsr2h	equ	0xFDA
 24964                           fsr2l	equ	0xFD9
 24965                           status	equ	0xFD8
 24966                           
 24967 ;; *************** function _RADIO_SetCRC *****************
 24968 ;; Defined at:
 24969 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24970 ;; Parameters:    Size  Location     Type
 24971 ;;  crc             1    wreg     unsigned char 
 24972 ;; Auto vars:     Size  Location     Type
 24973 ;;  crc             1    4[BANK0 ] unsigned char 
 24974 ;; Return value:  Size  Location     Type
 24975 ;;                  1    wreg      void 
 24976 ;; Registers used:
 24977 ;;		wreg
 24978 ;; Tracked objects:
 24979 ;;		On entry : 0/0
 24980 ;;		On exit  : 0/0
 24981 ;;		Unchanged: 0/0
 24982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24986 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24987 ;;Total ram usage:        1 bytes
 24988 ;; Hardware stack levels used:    1
 24989 ;; Hardware stack levels required when called:    7
 24990 ;; This function calls:
 24991 ;;		Nothing
 24992 ;; This function is called by:
 24993 ;;		_ConfigureRadioTx
 24994 ;;		_ConfigureRadioRx
 24995 ;; This function uses a non-reentrant model
 24996 ;;
 24997                           
 24998                           	psect	text132
 24999  0077F0                     __ptext132:
 25000                           	opt stack 0
 25001  0077F0                     _RADIO_SetCRC:
 25002                           	opt stack 19
 25003                           
 25004                           ;incstack = 0
 25005                           ;RADIO_SetCRC@crc stored from wreg
 25006  0077F0  0100               	movlb	0	; () banked
 25007  0077F2  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 25008                           
 25009                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 25010  0077F4  C064  F19A         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25011  0077F8  0012               	return		;funcret
 25012  0077FA                     __end_of_RADIO_SetCRC:
 25013                           	opt stack 0
 25014                           tosu	equ	0xFFF
 25015                           tosh	equ	0xFFE
 25016                           tosl	equ	0xFFD
 25017                           pclath	equ	0xFFA
 25018                           tblptru	equ	0xFF8
 25019                           tblptrh	equ	0xFF7
 25020                           tblptrl	equ	0xFF6
 25021                           tablat	equ	0xFF5
 25022                           prodh	equ	0xFF4
 25023                           prodl	equ	0xFF3
 25024                           intcon	equ	0xFF2
 25025                           intcon2	equ	0xFF1
 25026                           intcon3	equ	0xFF0
 25027                           indf0	equ	0xFEF
 25028                           postinc0	equ	0xFEE
 25029                           fsr0h	equ	0xFEA
 25030                           fsr0l	equ	0xFE9
 25031                           wreg	equ	0xFE8
 25032                           postinc1	equ	0xFE6
 25033                           postdec1	equ	0xFE5
 25034                           plusw1	equ	0xFE3
 25035                           fsr1h	equ	0xFE2
 25036                           fsr1l	equ	0xFE1
 25037                           indf2	equ	0xFDF
 25038                           postinc2	equ	0xFDE
 25039                           postdec2	equ	0xFDD
 25040                           plusw2	equ	0xFDB
 25041                           fsr2h	equ	0xFDA
 25042                           fsr2l	equ	0xFD9
 25043                           status	equ	0xFD8
 25044                           
 25045 ;; *************** function _ConfigureRadio *****************
 25046 ;; Defined at:
 25047 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;  dataRate        1    wreg     unsigned char 
 25050 ;;  freq            4   17[BANK0 ] unsigned long 
 25051 ;; Auto vars:     Size  Location     Type
 25052 ;;  dataRate        1   21[BANK0 ] unsigned char 
 25053 ;; Return value:  Size  Location     Type
 25054 ;;                  1    wreg      void 
 25055 ;; Registers used:
 25056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25057 ;; Tracked objects:
 25058 ;;		On entry : F/0
 25059 ;;		On exit  : 0/0
 25060 ;;		Unchanged: 0/0
 25061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25065 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25066 ;;Total ram usage:        5 bytes
 25067 ;; Hardware stack levels used:    1
 25068 ;; Hardware stack levels required when called:    9
 25069 ;; This function calls:
 25070 ;;		_RADIO_SetBandwidth
 25071 ;;		_RADIO_SetChannelFrequency
 25072 ;;		_RADIO_SetFSKSyncWord
 25073 ;;		_RADIO_SetFrequencyHopPeriod
 25074 ;;		_RADIO_SetLoRaSyncWord
 25075 ;;		_RADIO_SetModulation
 25076 ;;		_RADIO_SetSpreadingFactor
 25077 ;; This function is called by:
 25078 ;;		_ConfigureRadioTx
 25079 ;;		_ConfigureRadioRx
 25080 ;; This function uses a non-reentrant model
 25081 ;;
 25082                           
 25083                           	psect	text133
 25084  005B78                     __ptext133:
 25085                           	opt stack 0
 25086  005B78                     _ConfigureRadio:
 25087                           	opt stack 17
 25088                           
 25089                           ;incstack = 0
 25090                           ;ConfigureRadio@dataRate stored from wreg
 25091  005B78  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 25092                           
 25093                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 25094  005B7A  0E75               	movlw	low _modulation
 25095  005B7C  0100               	movlb	0	; () banked
 25096  005B7E  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25097  005B80  6EF6               	movwf	tblptrl,c
 25098  005B82  6AF7               	clrf	tblptrh,c
 25099  005B84  0EFF               	movlw	high _modulation
 25100  005B86  22F7               	addwfc	tblptrh,f,c
 25101  005B88                     	if	1	;There are 3 active tblptr bytes
 25102  005B88  6AF8               	clrf	tblptru,c
 25103  005B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 25104  005B8C  22F8               	addwfc	tblptru,f,c
 25105  005B8E                     	endif
 25106  005B8E  0008               	tblrd		*
 25107  005B90  50F5               	movf	tablat,w,c
 25108  005B92  EC29  F03C         	call	_RADIO_SetModulation
 25109                           
 25110                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 25111  005B96  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 25112  005B9A  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 25113  005B9E  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 25114  005BA2  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 25115  005BA6  ECD0  F02E         	call	_RADIO_SetChannelFrequency	;wreg free
 25116                           
 25117                           ; BSR set to: 0
 25118                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 25119  005BAA  0E00               	movlw	0
 25120  005BAC  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 25121  005BAE  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 25122  005BB0  ECFD  F03B         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 25123                           
 25124                           ; BSR set to: 0
 25125                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 25126  005BB4  0E07               	movlw	7
 25127  005BB6  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 25128  005BB8  D01F               	goto	l12631
 25129                           
 25130                           ; BSR set to: 0
 25131                           ;lorawan_eu.c: 870: {
 25132                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 25133  005BBA  0E9B               	movlw	low _spreadingFactor
 25134  005BBC  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25135  005BBE  6EF6               	movwf	tblptrl,c
 25136  005BC0  6AF7               	clrf	tblptrh,c
 25137  005BC2  0EFF               	movlw	high _spreadingFactor
 25138  005BC4  22F7               	addwfc	tblptrh,f,c
 25139  005BC6                     	if	1	;There are 3 active tblptr bytes
 25140  005BC6  6AF8               	clrf	tblptru,c
 25141  005BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 25142  005BCA  22F8               	addwfc	tblptru,f,c
 25143  005BCC                     	endif
 25144  005BCC  0008               	tblrd		*
 25145  005BCE  50F5               	movf	tablat,w,c
 25146  005BD0  EC25  F03C         	call	_RADIO_SetSpreadingFactor
 25147                           
 25148                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 25149  005BD4  0E8D               	movlw	low _bandwidth
 25150  005BD6  0100               	movlb	0	; () banked
 25151  005BD8  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25152  005BDA  6EF6               	movwf	tblptrl,c
 25153  005BDC  6AF7               	clrf	tblptrh,c
 25154  005BDE  0EFF               	movlw	high _bandwidth
 25155  005BE0  22F7               	addwfc	tblptrh,f,c
 25156  005BE2                     	if	1	;There are 3 active tblptr bytes
 25157  005BE2  6AF8               	clrf	tblptru,c
 25158  005BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 25159  005BE6  22F8               	addwfc	tblptru,f,c
 25160  005BE8                     	endif
 25161  005BE8  0008               	tblrd		*
 25162  005BEA  50F5               	movf	tablat,w,c
 25163  005BEC  EC2D  F03C         	call	_RADIO_SetBandwidth
 25164                           
 25165                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25166  005BF0  0102               	movlb	2	; () banked
 25167  005BF2  51F4               	movf	(_loRa+244)& (0+255),w,b
 25168  005BF4  EF02  F03C         	goto	_RADIO_SetLoRaSyncWord
 25169  005BF8                     l12631:
 25170                           
 25171                           ; BSR set to: 0
 25172                           ;lorawan_eu.c: 876: else
 25173                           ;lorawan_eu.c: 877: {
 25174                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25175  005BF8  0EFC               	movlw	low _FskSyncWordBuff
 25176  005BFA  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25177  005BFC  0EFF               	movlw	high _FskSyncWordBuff
 25178  005BFE  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25179  005C00  0E03               	movlw	3
 25180  005C02  EF87  F038         	goto	_RADIO_SetFSKSyncWord
 25181  005C06                     __end_of_ConfigureRadio:
 25182                           	opt stack 0
 25183                           tosu	equ	0xFFF
 25184                           tosh	equ	0xFFE
 25185                           tosl	equ	0xFFD
 25186                           pclath	equ	0xFFA
 25187                           tblptru	equ	0xFF8
 25188                           tblptrh	equ	0xFF7
 25189                           tblptrl	equ	0xFF6
 25190                           tablat	equ	0xFF5
 25191                           prodh	equ	0xFF4
 25192                           prodl	equ	0xFF3
 25193                           intcon	equ	0xFF2
 25194                           intcon2	equ	0xFF1
 25195                           intcon3	equ	0xFF0
 25196                           indf0	equ	0xFEF
 25197                           postinc0	equ	0xFEE
 25198                           fsr0h	equ	0xFEA
 25199                           fsr0l	equ	0xFE9
 25200                           wreg	equ	0xFE8
 25201                           postinc1	equ	0xFE6
 25202                           postdec1	equ	0xFE5
 25203                           plusw1	equ	0xFE3
 25204                           fsr1h	equ	0xFE2
 25205                           fsr1l	equ	0xFE1
 25206                           indf2	equ	0xFDF
 25207                           postinc2	equ	0xFDE
 25208                           postdec2	equ	0xFDD
 25209                           plusw2	equ	0xFDB
 25210                           fsr2h	equ	0xFDA
 25211                           fsr2l	equ	0xFD9
 25212                           status	equ	0xFD8
 25213                           
 25214 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25215 ;; Defined at:
 25216 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25217 ;; Parameters:    Size  Location     Type
 25218 ;;  spreadingFac    1    wreg     enum E7761
 25219 ;; Auto vars:     Size  Location     Type
 25220 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 25221 ;; Return value:  Size  Location     Type
 25222 ;;                  1    wreg      void 
 25223 ;; Registers used:
 25224 ;;		wreg
 25225 ;; Tracked objects:
 25226 ;;		On entry : F/0
 25227 ;;		On exit  : 0/0
 25228 ;;		Unchanged: 0/0
 25229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25233 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25234 ;;Total ram usage:        1 bytes
 25235 ;; Hardware stack levels used:    1
 25236 ;; Hardware stack levels required when called:    7
 25237 ;; This function calls:
 25238 ;;		Nothing
 25239 ;; This function is called by:
 25240 ;;		_ConfigureRadio
 25241 ;; This function uses a non-reentrant model
 25242 ;;
 25243                           
 25244                           	psect	text134
 25245  00784A                     __ptext134:
 25246                           	opt stack 0
 25247  00784A                     _RADIO_SetSpreadingFactor:
 25248                           	opt stack 18
 25249                           
 25250                           ;incstack = 0
 25251                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25252  00784A  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25253                           
 25254                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25255  00784C  C064  F197         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25256  007850  0012               	return		;funcret
 25257  007852                     __end_of_RADIO_SetSpreadingFactor:
 25258                           	opt stack 0
 25259                           tosu	equ	0xFFF
 25260                           tosh	equ	0xFFE
 25261                           tosl	equ	0xFFD
 25262                           pclath	equ	0xFFA
 25263                           tblptru	equ	0xFF8
 25264                           tblptrh	equ	0xFF7
 25265                           tblptrl	equ	0xFF6
 25266                           tablat	equ	0xFF5
 25267                           prodh	equ	0xFF4
 25268                           prodl	equ	0xFF3
 25269                           intcon	equ	0xFF2
 25270                           intcon2	equ	0xFF1
 25271                           intcon3	equ	0xFF0
 25272                           indf0	equ	0xFEF
 25273                           postinc0	equ	0xFEE
 25274                           fsr0h	equ	0xFEA
 25275                           fsr0l	equ	0xFE9
 25276                           wreg	equ	0xFE8
 25277                           postinc1	equ	0xFE6
 25278                           postdec1	equ	0xFE5
 25279                           plusw1	equ	0xFE3
 25280                           fsr1h	equ	0xFE2
 25281                           fsr1l	equ	0xFE1
 25282                           indf2	equ	0xFDF
 25283                           postinc2	equ	0xFDE
 25284                           postdec2	equ	0xFDD
 25285                           plusw2	equ	0xFDB
 25286                           fsr2h	equ	0xFDA
 25287                           fsr2l	equ	0xFD9
 25288                           status	equ	0xFD8
 25289                           
 25290 ;; *************** function _RADIO_SetModulation *****************
 25291 ;; Defined at:
 25292 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25293 ;; Parameters:    Size  Location     Type
 25294 ;;  modulation      1    wreg     enum E7751
 25295 ;; Auto vars:     Size  Location     Type
 25296 ;;  modulation      1    4[BANK0 ] enum E7751
 25297 ;; Return value:  Size  Location     Type
 25298 ;;                  1    wreg      void 
 25299 ;; Registers used:
 25300 ;;		wreg
 25301 ;; Tracked objects:
 25302 ;;		On entry : F/0
 25303 ;;		On exit  : 0/0
 25304 ;;		Unchanged: 0/0
 25305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25310 ;;Total ram usage:        1 bytes
 25311 ;; Hardware stack levels used:    1
 25312 ;; Hardware stack levels required when called:    7
 25313 ;; This function calls:
 25314 ;;		Nothing
 25315 ;; This function is called by:
 25316 ;;		_ConfigureRadio
 25317 ;; This function uses a non-reentrant model
 25318 ;;
 25319                           
 25320                           	psect	text135
 25321  007852                     __ptext135:
 25322                           	opt stack 0
 25323  007852                     _RADIO_SetModulation:
 25324                           	opt stack 18
 25325                           
 25326                           ;incstack = 0
 25327                           ;RADIO_SetModulation@modulation stored from wreg
 25328  007852  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25329                           
 25330                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25331  007854  C064  F196         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25332  007858  0012               	return		;funcret
 25333  00785A                     __end_of_RADIO_SetModulation:
 25334                           	opt stack 0
 25335                           tosu	equ	0xFFF
 25336                           tosh	equ	0xFFE
 25337                           tosl	equ	0xFFD
 25338                           pclath	equ	0xFFA
 25339                           tblptru	equ	0xFF8
 25340                           tblptrh	equ	0xFF7
 25341                           tblptrl	equ	0xFF6
 25342                           tablat	equ	0xFF5
 25343                           prodh	equ	0xFF4
 25344                           prodl	equ	0xFF3
 25345                           intcon	equ	0xFF2
 25346                           intcon2	equ	0xFF1
 25347                           intcon3	equ	0xFF0
 25348                           indf0	equ	0xFEF
 25349                           postinc0	equ	0xFEE
 25350                           fsr0h	equ	0xFEA
 25351                           fsr0l	equ	0xFE9
 25352                           wreg	equ	0xFE8
 25353                           postinc1	equ	0xFE6
 25354                           postdec1	equ	0xFE5
 25355                           plusw1	equ	0xFE3
 25356                           fsr1h	equ	0xFE2
 25357                           fsr1l	equ	0xFE1
 25358                           indf2	equ	0xFDF
 25359                           postinc2	equ	0xFDE
 25360                           postdec2	equ	0xFDD
 25361                           plusw2	equ	0xFDB
 25362                           fsr2h	equ	0xFDA
 25363                           fsr2l	equ	0xFD9
 25364                           status	equ	0xFD8
 25365                           
 25366 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25367 ;; Defined at:
 25368 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25369 ;; Parameters:    Size  Location     Type
 25370 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25371 ;; Auto vars:     Size  Location     Type
 25372 ;;		None
 25373 ;; Return value:  Size  Location     Type
 25374 ;;                  1    wreg      void 
 25375 ;; Registers used:
 25376 ;;		None
 25377 ;; Tracked objects:
 25378 ;;		On entry : F/0
 25379 ;;		On exit  : F/0
 25380 ;;		Unchanged: F/0
 25381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25386 ;;Total ram usage:        2 bytes
 25387 ;; Hardware stack levels used:    1
 25388 ;; Hardware stack levels required when called:    7
 25389 ;; This function calls:
 25390 ;;		Nothing
 25391 ;; This function is called by:
 25392 ;;		_ConfigureRadio
 25393 ;; This function uses a non-reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text136
 25397  0077FA                     __ptext136:
 25398                           	opt stack 0
 25399  0077FA                     _RADIO_SetFrequencyHopPeriod:
 25400                           	opt stack 18
 25401                           
 25402                           ; BSR set to: 0
 25403                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25404                           
 25405                           ;incstack = 0
 25406  0077FA  C064  F19C         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25407  0077FE  C065  F19D         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25408                           
 25409                           ; BSR set to: 0
 25410  007802  0012               	return		;funcret
 25411  007804                     __end_of_RADIO_SetFrequencyHopPeriod:
 25412                           	opt stack 0
 25413                           tosu	equ	0xFFF
 25414                           tosh	equ	0xFFE
 25415                           tosl	equ	0xFFD
 25416                           pclath	equ	0xFFA
 25417                           tblptru	equ	0xFF8
 25418                           tblptrh	equ	0xFF7
 25419                           tblptrl	equ	0xFF6
 25420                           tablat	equ	0xFF5
 25421                           prodh	equ	0xFF4
 25422                           prodl	equ	0xFF3
 25423                           intcon	equ	0xFF2
 25424                           intcon2	equ	0xFF1
 25425                           intcon3	equ	0xFF0
 25426                           indf0	equ	0xFEF
 25427                           postinc0	equ	0xFEE
 25428                           fsr0h	equ	0xFEA
 25429                           fsr0l	equ	0xFE9
 25430                           wreg	equ	0xFE8
 25431                           postinc1	equ	0xFE6
 25432                           postdec1	equ	0xFE5
 25433                           plusw1	equ	0xFE3
 25434                           fsr1h	equ	0xFE2
 25435                           fsr1l	equ	0xFE1
 25436                           indf2	equ	0xFDF
 25437                           postinc2	equ	0xFDE
 25438                           postdec2	equ	0xFDD
 25439                           plusw2	equ	0xFDB
 25440                           fsr2h	equ	0xFDA
 25441                           fsr2l	equ	0xFD9
 25442                           status	equ	0xFD8
 25443                           
 25444 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25445 ;; Defined at:
 25446 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25447 ;; Parameters:    Size  Location     Type
 25448 ;;  syncWordLen     1    wreg     unsigned char 
 25449 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25450 ;;		 -> FskSyncWordBuff(3), 
 25451 ;; Auto vars:     Size  Location     Type
 25452 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25453 ;; Return value:  Size  Location     Type
 25454 ;;                  1    wreg      void 
 25455 ;; Registers used:
 25456 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25457 ;; Tracked objects:
 25458 ;;		On entry : F/0
 25459 ;;		On exit  : F/0
 25460 ;;		Unchanged: 0/0
 25461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25465 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25466 ;;Total ram usage:        3 bytes
 25467 ;; Hardware stack levels used:    1
 25468 ;; Hardware stack levels required when called:    8
 25469 ;; This function calls:
 25470 ;;		_memcpy
 25471 ;; This function is called by:
 25472 ;;		_ConfigureRadio
 25473 ;; This function uses a non-reentrant model
 25474 ;;
 25475                           
 25476                           	psect	text137
 25477  00710E                     __ptext137:
 25478                           	opt stack 0
 25479  00710E                     _RADIO_SetFSKSyncWord:
 25480                           	opt stack 17
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;incstack = 0
 25484                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25485  00710E  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25486                           
 25487                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25488  007110  0E08               	movlw	8
 25489  007112  0100               	movlb	0	; () banked
 25490  007114  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25491  007116  D001               	goto	l12337
 25492                           
 25493                           ; BSR set to: 0
 25494                           ;radio_driver_SX1276.c: 1627: {
 25495                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25496  007118  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25497  00711A                     l12337:
 25498                           
 25499                           ; BSR set to: 0
 25500                           ;radio_driver_SX1276.c: 1629: }
 25501                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25502  00711A  0E8D               	movlw	low (_RadioConfiguration+15)
 25503  00711C  6F64               	movwf	memcpy@d1& (0+255),b
 25504  00711E  0E01               	movlw	high (_RadioConfiguration+15)
 25505  007120  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25506  007122  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25507  007126  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25508  00712A  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25509  00712E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25510  007130  ECFF  F033         	call	_memcpy	;wreg free
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25514  007134  C070  F195         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25515                           
 25516                           ; BSR set to: 0
 25517  007138  0012               	return		;funcret
 25518  00713A                     __end_of_RADIO_SetFSKSyncWord:
 25519                           	opt stack 0
 25520                           tosu	equ	0xFFF
 25521                           tosh	equ	0xFFE
 25522                           tosl	equ	0xFFD
 25523                           pclath	equ	0xFFA
 25524                           tblptru	equ	0xFF8
 25525                           tblptrh	equ	0xFF7
 25526                           tblptrl	equ	0xFF6
 25527                           tablat	equ	0xFF5
 25528                           prodh	equ	0xFF4
 25529                           prodl	equ	0xFF3
 25530                           intcon	equ	0xFF2
 25531                           intcon2	equ	0xFF1
 25532                           intcon3	equ	0xFF0
 25533                           indf0	equ	0xFEF
 25534                           postinc0	equ	0xFEE
 25535                           fsr0h	equ	0xFEA
 25536                           fsr0l	equ	0xFE9
 25537                           wreg	equ	0xFE8
 25538                           postinc1	equ	0xFE6
 25539                           postdec1	equ	0xFE5
 25540                           plusw1	equ	0xFE3
 25541                           fsr1h	equ	0xFE2
 25542                           fsr1l	equ	0xFE1
 25543                           indf2	equ	0xFDF
 25544                           postinc2	equ	0xFDE
 25545                           postdec2	equ	0xFDD
 25546                           plusw2	equ	0xFDB
 25547                           fsr2h	equ	0xFDA
 25548                           fsr2l	equ	0xFD9
 25549                           status	equ	0xFD8
 25550                           
 25551 ;; *************** function _RADIO_SetChannelFrequency *****************
 25552 ;; Defined at:
 25553 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25554 ;; Parameters:    Size  Location     Type
 25555 ;;  frequency       4    4[BANK0 ] unsigned long 
 25556 ;; Auto vars:     Size  Location     Type
 25557 ;;		None
 25558 ;; Return value:  Size  Location     Type
 25559 ;;                  2    4[BANK0 ] enum E7805
 25560 ;; Registers used:
 25561 ;;		wreg, status,2, status,0
 25562 ;; Tracked objects:
 25563 ;;		On entry : 0/0
 25564 ;;		On exit  : F/0
 25565 ;;		Unchanged: 0/0
 25566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25571 ;;Total ram usage:        4 bytes
 25572 ;; Hardware stack levels used:    1
 25573 ;; Hardware stack levels required when called:    7
 25574 ;; This function calls:
 25575 ;;		Nothing
 25576 ;; This function is called by:
 25577 ;;		_ConfigureRadio
 25578 ;; This function uses a non-reentrant model
 25579 ;;
 25580                           
 25581                           	psect	text138
 25582  005DA0                     __ptext138:
 25583                           	opt stack 0
 25584  005DA0                     _RADIO_SetChannelFrequency:
 25585                           	opt stack 18
 25586                           
 25587                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25588                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25589                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25590                           
 25591                           ; BSR set to: 0
 25592                           ;incstack = 0
 25593  005DA0  0E40               	movlw	64
 25594  005DA2  0100               	movlb	0	; () banked
 25595  005DA4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25596  005DA6  0E74               	movlw	116
 25597  005DA8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25598  005DAA  0E2A               	movlw	42
 25599  005DAC  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25600  005DAE  0E08               	movlw	8
 25601  005DB0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25602  005DB2  E309               	bnc	l12317
 25603                           
 25604                           ; BSR set to: 0
 25605  005DB4  0EC1               	movlw	193
 25606  005DB6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25607  005DB8  0E49               	movlw	73
 25608  005DBA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25609  005DBC  0E6E               	movlw	110
 25610  005DBE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25611  005DC0  0E0A               	movlw	10
 25612  005DC2  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25613  005DC4  E325               	bnc	l690
 25614  005DC6                     l12317:
 25615                           
 25616                           ; BSR set to: 0
 25617  005DC6  0E80               	movlw	128
 25618  005DC8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25619  005DCA  0E1A               	movlw	26
 25620  005DCC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25621  005DCE  0E70               	movlw	112
 25622  005DD0  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25623  005DD2  0E18               	movlw	24
 25624  005DD4  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25625  005DD6  E309               	bnc	l12321
 25626                           
 25627                           ; BSR set to: 0
 25628  005DD8  0E41               	movlw	65
 25629  005DDA  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25630  005DDC  0EDD               	movlw	221
 25631  005DDE  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25632  005DE0  0E4A               	movlw	74
 25633  005DE2  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25634  005DE4  0E1F               	movlw	31
 25635  005DE6  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25636  005DE8  E313               	bnc	l690
 25637  005DEA                     l12321:
 25638                           
 25639                           ; BSR set to: 0
 25640  005DEA  0E80               	movlw	128
 25641  005DEC  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25642  005DEE  0E13               	movlw	19
 25643  005DF0  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25644  005DF2  0E61               	movlw	97
 25645  005DF4  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25646  005DF6  0E33               	movlw	51
 25647  005DF8  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25648  005DFA  A0D8               	btfss	status,0,c
 25649  005DFC  0012               	return	
 25650                           
 25651                           ; BSR set to: 0
 25652  005DFE  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25653  005E00  0EF7               	movlw	247
 25654  005E02  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25655  005E04  0ECB               	movlw	203
 25656  005E06  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25657  005E08  0E3C               	movlw	60
 25658  005E0A  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25659  005E0C  B0D8               	btfsc	status,0,c
 25660  005E0E  0012               	return	
 25661  005E10                     l690:
 25662                           
 25663                           ; BSR set to: 0
 25664                           ;radio_driver_SX1276.c: 1449: {
 25665                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25666  005E10  C064  F17E         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25667  005E14  C065  F17F         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25668  005E18  C066  F180         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25669  005E1C  C067  F181         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25670                           
 25671                           ; BSR set to: 0
 25672                           
 25673                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25674                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25675  005E20  0012               	return		;funcret
 25676  005E22                     __end_of_RADIO_SetChannelFrequency:
 25677                           	opt stack 0
 25678                           tosu	equ	0xFFF
 25679                           tosh	equ	0xFFE
 25680                           tosl	equ	0xFFD
 25681                           pclath	equ	0xFFA
 25682                           tblptru	equ	0xFF8
 25683                           tblptrh	equ	0xFF7
 25684                           tblptrl	equ	0xFF6
 25685                           tablat	equ	0xFF5
 25686                           prodh	equ	0xFF4
 25687                           prodl	equ	0xFF3
 25688                           intcon	equ	0xFF2
 25689                           intcon2	equ	0xFF1
 25690                           intcon3	equ	0xFF0
 25691                           indf0	equ	0xFEF
 25692                           postinc0	equ	0xFEE
 25693                           fsr0h	equ	0xFEA
 25694                           fsr0l	equ	0xFE9
 25695                           wreg	equ	0xFE8
 25696                           postinc1	equ	0xFE6
 25697                           postdec1	equ	0xFE5
 25698                           plusw1	equ	0xFE3
 25699                           fsr1h	equ	0xFE2
 25700                           fsr1l	equ	0xFE1
 25701                           indf2	equ	0xFDF
 25702                           postinc2	equ	0xFDE
 25703                           postdec2	equ	0xFDD
 25704                           plusw2	equ	0xFDB
 25705                           fsr2h	equ	0xFDA
 25706                           fsr2l	equ	0xFD9
 25707                           status	equ	0xFD8
 25708                           
 25709 ;; *************** function _RADIO_SetBandwidth *****************
 25710 ;; Defined at:
 25711 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25712 ;; Parameters:    Size  Location     Type
 25713 ;;  bandwidth       1    wreg     enum E7769
 25714 ;; Auto vars:     Size  Location     Type
 25715 ;;  bandwidth       1    4[BANK0 ] enum E7769
 25716 ;; Return value:  Size  Location     Type
 25717 ;;                  1    wreg      void 
 25718 ;; Registers used:
 25719 ;;		wreg
 25720 ;; Tracked objects:
 25721 ;;		On entry : F/0
 25722 ;;		On exit  : 0/0
 25723 ;;		Unchanged: 0/0
 25724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25728 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25729 ;;Total ram usage:        1 bytes
 25730 ;; Hardware stack levels used:    1
 25731 ;; Hardware stack levels required when called:    7
 25732 ;; This function calls:
 25733 ;;		Nothing
 25734 ;; This function is called by:
 25735 ;;		_ConfigureRadio
 25736 ;; This function uses a non-reentrant model
 25737 ;;
 25738                           
 25739                           	psect	text139
 25740  00785A                     __ptext139:
 25741                           	opt stack 0
 25742  00785A                     _RADIO_SetBandwidth:
 25743                           	opt stack 18
 25744                           
 25745                           ; BSR set to: 0
 25746                           ;incstack = 0
 25747                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25748  00785A  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25749                           
 25750                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25751  00785C  C064  F198         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25752  007860  0012               	return		;funcret
 25753  007862                     __end_of_RADIO_SetBandwidth:
 25754                           	opt stack 0
 25755                           tosu	equ	0xFFF
 25756                           tosh	equ	0xFFE
 25757                           tosl	equ	0xFFD
 25758                           pclath	equ	0xFFA
 25759                           tblptru	equ	0xFF8
 25760                           tblptrh	equ	0xFF7
 25761                           tblptrl	equ	0xFF6
 25762                           tablat	equ	0xFF5
 25763                           prodh	equ	0xFF4
 25764                           prodl	equ	0xFF3
 25765                           intcon	equ	0xFF2
 25766                           intcon2	equ	0xFF1
 25767                           intcon3	equ	0xFF0
 25768                           indf0	equ	0xFEF
 25769                           postinc0	equ	0xFEE
 25770                           fsr0h	equ	0xFEA
 25771                           fsr0l	equ	0xFE9
 25772                           wreg	equ	0xFE8
 25773                           postinc1	equ	0xFE6
 25774                           postdec1	equ	0xFE5
 25775                           plusw1	equ	0xFE3
 25776                           fsr1h	equ	0xFE2
 25777                           fsr1l	equ	0xFE1
 25778                           indf2	equ	0xFDF
 25779                           postinc2	equ	0xFDE
 25780                           postdec2	equ	0xFDD
 25781                           plusw2	equ	0xFDB
 25782                           fsr2h	equ	0xFDA
 25783                           fsr2l	equ	0xFD9
 25784                           status	equ	0xFD8
 25785                           
 25786 ;; *************** function _RADIO_Transmit *****************
 25787 ;; Defined at:
 25788 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25789 ;; Parameters:    Size  Location     Type
 25790 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 25791 ;;		 -> macBuffer(271), 
 25792 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 25793 ;; Auto vars:     Size  Location     Type
 25794 ;;  i               1   70[BANK0 ] unsigned char 
 25795 ;;  regValue        1   69[BANK0 ] unsigned char 
 25796 ;; Return value:  Size  Location     Type
 25797 ;;                  2   54[BANK0 ] enum E7805
 25798 ;; Registers used:
 25799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25800 ;; Tracked objects:
 25801 ;;		On entry : F/0
 25802 ;;		On exit  : F/0
 25803 ;;		Unchanged: 0/0
 25804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25805 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25806 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25808 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25809 ;;Total ram usage:       17 bytes
 25810 ;; Hardware stack levels used:    1
 25811 ;; Hardware stack levels required when called:   12
 25812 ;; This function calls:
 25813 ;;		_HALSPICSAssert
 25814 ;;		_HALSPICSDeassert
 25815 ;;		_HALSPISend
 25816 ;;		_RADIO_RegisterRead
 25817 ;;		_RADIO_RegisterWrite
 25818 ;;		_RADIO_WriteConfiguration
 25819 ;;		_RADIO_WriteMode
 25820 ;;		_SwTimerSetTimeout
 25821 ;;		_SwTimerStart
 25822 ;;		_SwTimerStop
 25823 ;;		___lldiv
 25824 ;; This function is called by:
 25825 ;;		_LORAWAN_RxTimeout
 25826 ;;		_LORAWAN_Join
 25827 ;;		_LORAWAN_Send
 25828 ;;		_AckRetransmissionCallback
 25829 ;;		_UnconfirmedTransmissionCallback
 25830 ;; This function uses a non-reentrant model
 25831 ;;
 25832                           
 25833                           	psect	text140
 25834  002FA6                     __ptext140:
 25835                           	opt stack 0
 25836  002FA6                     _RADIO_Transmit:
 25837                           	opt stack 16
 25838                           
 25839                           ; BSR set to: 0
 25840                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 25841                           ;radio_driver_SX1276.c: 789: uint8_t i;
 25842                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25843                           
 25844                           ;incstack = 0
 25845  002FA6  0101               	movlb	1	; () banked
 25846  002FA8  A5A1               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25847  002FAA  D006               	goto	l13321
 25848                           
 25849                           ; BSR set to: 1
 25850                           ;radio_driver_SX1276.c: 792: {
 25851                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 25852  002FAC  0E80               	movlw	128
 25853  002FAE  0100               	movlb	0	; () banked
 25854  002FB0  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25855  002FB2  0E03               	movlw	3
 25856  002FB4  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25857  002FB6  0C03               	retlw	3
 25858  002FB8                     l13321:
 25859                           
 25860                           ; BSR set to: 1
 25861                           ;radio_driver_SX1276.c: 794: }
 25862                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25863  002FB8  C1A1  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 25864  002FBC  0E03               	movlw	3
 25865  002FBE  0100               	movlb	0	; () banked
 25866  002FC0  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 25867  002FC2  E005               	bz	l13327
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;radio_driver_SX1276.c: 797: {
 25871                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 25872  002FC4  0E80               	movlw	128
 25873  002FC6  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25874  002FC8  0E04               	movlw	4
 25875  002FCA  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25876  002FCC  0C04               	retlw	4
 25877  002FCE                     l13327:
 25878                           
 25879                           ; BSR set to: 0
 25880                           ;radio_driver_SX1276.c: 799: }
 25881                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 25882  002FCE  0101               	movlb	1	; () banked
 25883  002FD0  5196               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25884  002FD2  E109               	bnz	l13335
 25885                           
 25886                           ; BSR set to: 1
 25887  002FD4  0E40               	movlw	64
 25888  002FD6  0100               	movlb	0	; () banked
 25889  002FD8  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 25890  002FDA  D005               	goto	l13335
 25891                           
 25892                           ; BSR set to: 0
 25893                           ;radio_driver_SX1276.c: 802: {
 25894                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 25895  002FDC  0E80               	movlw	128
 25896  002FDE  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25897  002FE0  0E02               	movlw	2
 25898  002FE2  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 25899  002FE4  0C02               	retlw	2
 25900  002FE6                     l13335:
 25901                           
 25902                           ;radio_driver_SX1276.c: 804: }
 25903                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25904  002FE6  0101               	movlb	1	; () banked
 25905  002FE8  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25906  002FEA  EC57  F03A         	call	_SwTimerStop
 25907                           
 25908                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 25909  002FEE  0E00               	movlw	0
 25910  002FF0  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25911  002FF2  0E04               	movlw	4
 25912  002FF4  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25913  002FF6  ECC1  F009         	call	_RADIO_WriteConfiguration	;wreg free
 25914                           
 25915                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 25916  002FFA  0101               	movlb	1	; () banked
 25917  002FFC  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25918  002FFE  E123               	bnz	l13353
 25919                           
 25920                           ; BSR set to: 1
 25921                           ;radio_driver_SX1276.c: 813: {
 25922                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 25923  003000  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25924  003004  0E22               	movlw	34
 25925  003006  EC2A  F03A         	call	_RADIO_RegisterWrite
 25926                           
 25927                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 25928  00300A  0E0A               	movlw	10
 25929  00300C  EC53  F039         	call	_RADIO_RegisterRead
 25930  003010  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 25931                           
 25932                           ; BSR set to: 0
 25933                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 25934  003012  0EF0               	movlw	240
 25935  003014  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 25936                           
 25937                           ; BSR set to: 0
 25938                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 25939  003016  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 25940                           
 25941                           ; BSR set to: 0
 25942                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 25943  003018  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 25944  00301C  0E0A               	movlw	10
 25945  00301E  EC2A  F03A         	call	_RADIO_RegisterWrite
 25946                           
 25947                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 25948  003022  0E40               	movlw	64
 25949  003024  0100               	movlb	0	; () banked
 25950  003026  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25951  003028  EC2A  F03A         	call	_RADIO_RegisterWrite
 25952                           
 25953                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 25954  00302C  0100               	movlb	0	; () banked
 25955  00302E  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25956  003030  0E41               	movlw	65
 25957  003032  EC2A  F03A         	call	_RADIO_RegisterWrite
 25958                           
 25959                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 25960  003036  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25961  00303A  0E01               	movlw	1
 25962  00303C  0100               	movlb	0	; () banked
 25963  00303E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25964  003040  EC5F  F028         	call	_RADIO_WriteMode
 25965                           
 25966                           ;radio_driver_SX1276.c: 828: }
 25967  003044  D00A               	goto	l13355
 25968  003046                     l13353:
 25969                           
 25970                           ; BSR set to: 1
 25971                           ;radio_driver_SX1276.c: 829: else
 25972                           ;radio_driver_SX1276.c: 830: {
 25973                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 25974  003046  0100               	movlb	0	; () banked
 25975  003048  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25976  00304A  0E40               	movlw	64
 25977  00304C  EC2A  F03A         	call	_RADIO_RegisterWrite
 25978                           
 25979                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 25980  003050  0100               	movlb	0	; () banked
 25981  003052  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25982  003054  0E41               	movlw	65
 25983  003056  EC2A  F03A         	call	_RADIO_RegisterWrite
 25984  00305A                     l13355:
 25985                           
 25986                           ;radio_driver_SX1276.c: 834: }
 25987                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 25988  00305A  0101               	movlb	1	; () banked
 25989  00305C  5196               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25990  00305E  E105               	bnz	l13359
 25991                           
 25992                           ; BSR set to: 1
 25993                           ;radio_driver_SX1276.c: 837: {
 25994                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 25995  003060  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25996  003064  0E00               	movlw	0
 25997  003066  EC2A  F03A         	call	_RADIO_RegisterWrite
 25998  00306A                     l13359:
 25999                           
 26000                           ;radio_driver_SX1276.c: 840: }
 26001                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 26002  00306A  EC5F  F03C         	call	_HALSPICSAssert	;wreg free
 26003                           
 26004                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 26005  00306E  0E80               	movlw	128
 26006  003070  EC07  F03C         	call	_HALSPISend
 26007                           
 26008                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 26009  003074  0100               	movlb	0	; () banked
 26010  003076  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 26011  003078  D00B               	goto	l13369
 26012  00307A                     l13365:
 26013                           
 26014                           ; BSR set to: 0
 26015                           ;radio_driver_SX1276.c: 846: {
 26016                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 26017  00307A  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 26018  00307C  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 26019  00307E  6ED9               	movwf	fsr2l,c
 26020  003080  0E00               	movlw	0
 26021  003082  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 26022  003084  6EDA               	movwf	fsr2h,c
 26023  003086  50DF               	movf	indf2,w,c
 26024  003088  EC07  F03C         	call	_HALSPISend
 26025  00308C  0100               	movlb	0	; () banked
 26026  00308E  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 26027  003090                     l13369:
 26028                           
 26029                           ; BSR set to: 0
 26030  003090  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 26031  003092  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 26032  003094  E3F2               	bnc	l13365
 26033                           
 26034                           ; BSR set to: 0
 26035                           ;radio_driver_SX1276.c: 848: }
 26036                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 26037  003096  EC5D  F03C         	call	_HALSPICSDeassert	;wreg free
 26038                           
 26039                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 26040  00309A  0101               	movlb	1	; () banked
 26041  00309C  81A1               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 26042                           
 26043                           ; BSR set to: 1
 26044                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 26045  00309E  0EE7               	movlw	231
 26046  0030A0  17A1               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 26047                           
 26048                           ; BSR set to: 1
 26049                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 26050  0030A2  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26051  0030A6  0E00               	movlw	0
 26052  0030A8  0100               	movlb	0	; () banked
 26053  0030AA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26054  0030AC  0E03               	movlw	3
 26055  0030AE  EC5F  F028         	call	_RADIO_WriteMode
 26056                           
 26057                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 26058  0030B2  0100               	movlb	0	; () banked
 26059  0030B4  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 26060  0030B6  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26061  0030B8  0E0A               	movlw	10
 26062  0030BA  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26063  0030BC  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26064  0030BE  0101               	movlb	1	; () banked
 26065  0030C0  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26066  0030C2  EC60  F036         	call	_SwTimerSetTimeout
 26067                           
 26068                           ; BSR set to: 0
 26069                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 26070  0030C6  0101               	movlb	1	; () banked
 26071  0030C8  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26072  0030CA  EC49  F02E         	call	_SwTimerStart
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26076  0030CE  0101               	movlb	1	; () banked
 26077  0030D0  51A8               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26078  0030D2  11A9               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26079  0030D4  11AA               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26080  0030D6  11AB               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26081  0030D8  E059               	bz	l13399
 26082                           
 26083                           ; BSR set to: 1
 26084                           ;radio_driver_SX1276.c: 866: {
 26085                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26086  0030DA  51AB               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26087  0030DC  E106               	bnz	u14680
 26088  0030DE  29A8               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26089  0030E0  0EFF               	movlw	255
 26090  0030E2  59A9               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26091  0030E4  0E0F               	movlw	15
 26092  0030E6  59AA               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26093  0030E8  E319               	bnc	l13393
 26094  0030EA                     u14680:
 26095                           
 26096                           ; BSR set to: 1
 26097  0030EA  C1A8  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 26098  0030EE  C1A9  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26099  0030F2  C1AA  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26100  0030F6  C1AB  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26101  0030FA  0E7D               	movlw	125
 26102  0030FC  0100               	movlb	0	; () banked
 26103  0030FE  6F68               	movwf	___lldiv@divisor& (0+255),b
 26104  003100  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26105  003102  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26106  003104  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26107  003106  EC0B  F030         	call	___lldiv	;wreg free
 26108  00310A  0E0C               	movlw	12
 26109  00310C                     u14695:
 26110  00310C  90D8               	bcf	status,0,c
 26111  00310E  3764               	rlcf	?___lldiv& (0+255),f,b
 26112  003110  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 26113  003112  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 26114  003114  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 26115  003116  2EE8               	decfsz	wreg,f,c
 26116  003118  D7F9               	goto	u14695
 26117  00311A  D020               	goto	L15
 26118  00311C                     l13393:
 26119                           
 26120                           ; BSR set to: 1
 26121  00311C  C1A8  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26122  003120  C1A9  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26123  003124  C1AA  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26124  003128  C1AB  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26125  00312C  0E0C               	movlw	12
 26126  00312E                     u14705:
 26127  00312E  90D8               	bcf	status,0,c
 26128  003130  0100               	movlb	0	; () banked
 26129  003132  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26130  003134  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26131  003136  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26132  003138  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26133  00313A  2EE8               	decfsz	wreg,f,c
 26134  00313C  D7F8               	goto	u14705
 26135  00313E  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 26136  003142  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26137  003146  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26138  00314A  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26139  00314E  0E7D               	movlw	125
 26140  003150  6F68               	movwf	___lldiv@divisor& (0+255),b
 26141  003152  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26142  003154  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26143  003156  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26144  003158  EC0B  F030         	call	___lldiv	;wreg free
 26145  00315C                     L15:
 26146  00315C  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1196
 26147  003160  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1196+1
 26148  003164  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1196+2
 26149  003168  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1196+3
 26150                           
 26151                           ; BSR set to: 0
 26152  00316C  C0A1  F071         	movff	_RADIO_Transmit$1196,SwTimerSetTimeout@timeout
 26153  003170  C0A2  F072         	movff	_RADIO_Transmit$1196+1,SwTimerSetTimeout@timeout+1
 26154  003174  C0A3  F073         	movff	_RADIO_Transmit$1196+2,SwTimerSetTimeout@timeout+2
 26155  003178  C0A4  F074         	movff	_RADIO_Transmit$1196+3,SwTimerSetTimeout@timeout+3
 26156  00317C  0101               	movlb	1	; () banked
 26157  00317E  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26158  003180  EC60  F036         	call	_SwTimerSetTimeout
 26159                           
 26160                           ; BSR set to: 0
 26161                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26162  003184  0101               	movlb	1	; () banked
 26163  003186  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26164  003188  EC49  F02E         	call	_SwTimerStart
 26165  00318C                     l13399:
 26166                           
 26167                           ;radio_driver_SX1276.c: 869: }
 26168                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 26169  00318C  0100               	movlb	0	; () banked
 26170  00318E  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 26171  003190  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 26172                           
 26173                           ; BSR set to: 0
 26174  003192  0012               	return		;funcret
 26175  003194                     __end_of_RADIO_Transmit:
 26176                           	opt stack 0
 26177                           tosu	equ	0xFFF
 26178                           tosh	equ	0xFFE
 26179                           tosl	equ	0xFFD
 26180                           pclath	equ	0xFFA
 26181                           tblptru	equ	0xFF8
 26182                           tblptrh	equ	0xFF7
 26183                           tblptrl	equ	0xFF6
 26184                           tablat	equ	0xFF5
 26185                           prodh	equ	0xFF4
 26186                           prodl	equ	0xFF3
 26187                           intcon	equ	0xFF2
 26188                           intcon2	equ	0xFF1
 26189                           intcon3	equ	0xFF0
 26190                           indf0	equ	0xFEF
 26191                           postinc0	equ	0xFEE
 26192                           fsr0h	equ	0xFEA
 26193                           fsr0l	equ	0xFE9
 26194                           wreg	equ	0xFE8
 26195                           postinc1	equ	0xFE6
 26196                           postdec1	equ	0xFE5
 26197                           plusw1	equ	0xFE3
 26198                           fsr1h	equ	0xFE2
 26199                           fsr1l	equ	0xFE1
 26200                           indf2	equ	0xFDF
 26201                           postinc2	equ	0xFDE
 26202                           postdec2	equ	0xFDD
 26203                           plusw2	equ	0xFDB
 26204                           fsr2h	equ	0xFDA
 26205                           fsr2l	equ	0xFD9
 26206                           status	equ	0xFD8
 26207                           
 26208 ;; *************** function _RADIO_WriteConfiguration *****************
 26209 ;; Defined at:
 26210 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26211 ;; Parameters:    Size  Location     Type
 26212 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26213 ;; Auto vars:     Size  Location     Type
 26214 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26215 ;;  regValue        1   38[BANK0 ] unsigned char 
 26216 ;;  i               1   33[BANK0 ] unsigned char 
 26217 ;; Return value:  Size  Location     Type
 26218 ;;                  1    wreg      void 
 26219 ;; Registers used:
 26220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26221 ;; Tracked objects:
 26222 ;;		On entry : F/0
 26223 ;;		On exit  : 0/0
 26224 ;;		Unchanged: 0/0
 26225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26227 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26229 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26230 ;;Total ram usage:       10 bytes
 26231 ;; Hardware stack levels used:    1
 26232 ;; Hardware stack levels required when called:   11
 26233 ;; This function calls:
 26234 ;;		_RADIO_RegisterRead
 26235 ;;		_RADIO_RegisterWrite
 26236 ;;		_RADIO_WriteFSKBitRate
 26237 ;;		_RADIO_WriteFSKFrequencyDeviation
 26238 ;;		_RADIO_WriteFrequency
 26239 ;;		_RADIO_WriteMode
 26240 ;;		_RADIO_WritePower
 26241 ;;		___lmul
 26242 ;; This function is called by:
 26243 ;;		_RADIO_Transmit
 26244 ;;		_RADIO_ReceiveStart
 26245 ;; This function uses a non-reentrant model
 26246 ;;
 26247                           
 26248                           	psect	text141
 26249  001382                     __ptext141:
 26250                           	opt stack 0
 26251  001382                     _RADIO_WriteConfiguration:
 26252                           	opt stack 16
 26253                           
 26254                           ; BSR set to: 0
 26255                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26256                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26257                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26258                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26259                           
 26260                           ; BSR set to: 0
 26261                           ;incstack = 0
 26262  001382  C196  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26263  001386  0E00               	movlw	0
 26264  001388  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26265  00138A  EC5F  F028         	call	_RADIO_WriteMode
 26266                           
 26267                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26268  00138E  C17E  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26269  001392  C17F  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26270  001396  C180  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26271  00139A  C181  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26272  00139E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
 26273                           
 26274                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26275  0013A2  0101               	movlb	1	; () banked
 26276  0013A4  5199               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26277  0013A6  EC33  F029         	call	_RADIO_WritePower
 26278                           
 26279                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26280  0013AA  0101               	movlb	1	; () banked
 26281  0013AC  0596               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26282  0013AE  E001 D1B6          	bnz	l12557
 26283                           
 26284                           ; BSR set to: 1
 26285                           ;radio_driver_SX1276.c: 545: {
 26286                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26287  0013B2  C18C  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26288  0013B6  0E39               	movlw	57
 26289  0013B8  EC2A  F03A         	call	_RADIO_RegisterWrite
 26290                           
 26291                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26292                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26293                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26294                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26295  0013BC  C1A0  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26296  0013C0  0E01               	movlw	1
 26297  0013C2  0100               	movlb	0	; () banked
 26298  0013C4  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26299  0013C6  0101               	movlb	1	; () banked
 26300  0013C8  90D8               	bcf	status,0,c
 26301  0013CA  359F               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26302  0013CC  0100               	movlb	0	; () banked
 26303  0013CE  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26304  0013D0  0101               	movlb	1	; () banked
 26305  0013D2  3998               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26306  0013D4  0BF0               	andlw	240
 26307  0013D6  0100               	movlb	0	; () banked
 26308  0013D8  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26309  0013DA  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26310  0013DC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26311  0013DE  0E1D               	movlw	29
 26312  0013E0  EC2A  F03A         	call	_RADIO_RegisterWrite
 26313                           
 26314                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26315                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26316                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26317                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26318  0013E4  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26319  0013E8  0E03               	movlw	3
 26320  0013EA  0100               	movlb	0	; () banked
 26321  0013EC  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26322  0013EE  C19A  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26323  0013F2  0E01               	movlw	1
 26324  0013F4  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26325  0013F6  90D8               	bcf	status,0,c
 26326  0013F8  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26327  0013FA  90D8               	bcf	status,0,c
 26328  0013FC  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26329  0013FE  0101               	movlb	1	; () banked
 26330  001400  3997               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26331  001402  0BF0               	andlw	240
 26332  001404  0100               	movlb	0	; () banked
 26333  001406  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26334  001408  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26335  00140A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26336  00140C  0E1E               	movlw	30
 26337  00140E  EC2A  F03A         	call	_RADIO_RegisterWrite
 26338                           
 26339                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26340  001412  0101               	movlb	1	; () banked
 26341  001414  519C               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26342  001416  119D               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26343  001418  E060               	bz	l447
 26344                           
 26345                           ; BSR set to: 1
 26346                           ;radio_driver_SX1276.c: 561: {
 26347                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26348  00141A  C19C  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26349  00141E  C19D  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26350  001422  0100               	movlb	0	; () banked
 26351  001424  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26352  001426  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26353                           
 26354                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26355  001428  D042               	goto	l12449
 26356  00142A                     l12441:
 26357                           
 26358                           ; BSR set to: 1
 26359                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26360  00142A  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26361  00142E  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26362  001432  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26363  001436  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26364  00143A  0E7D               	movlw	125
 26365  00143C  0100               	movlb	0	; () banked
 26366  00143E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26367  001440  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26368  001442  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26369  001444  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26370  001446  EC8D  F02E         	call	___lmul	;wreg free
 26371  00144A  D022               	goto	L17
 26372  00144C                     l12443:
 26373                           
 26374                           ; BSR set to: 1
 26375                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26376  00144C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26377  001450  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26378  001454  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26379  001458  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26380  00145C  0EFA               	movlw	250
 26381  00145E  0100               	movlb	0	; () banked
 26382  001460  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26383  001462  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26384  001464  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26385  001466  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26386  001468  EC8D  F02E         	call	___lmul	;wreg free
 26387  00146C  D011               	goto	L17
 26388  00146E                     l12445:
 26389                           
 26390                           ; BSR set to: 1
 26391                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26392  00146E  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26393  001472  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26394  001476  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26395  00147A  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26396  00147E  0EF4               	movlw	244
 26397  001480  0100               	movlb	0	; () banked
 26398  001482  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26399  001484  0E01               	movlw	1
 26400  001486  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26401  001488  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26402  00148A  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26403  00148C  EC8D  F02E         	call	___lmul	;wreg free
 26404  001490                     L17:
 26405  001490  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26406  001494  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26407  001498  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26408  00149C  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26409                           
 26410                           ;radio_driver_SX1276.c: 574: break;
 26411  0014A0  D00F               	goto	l12451
 26412  0014A2                     l453:
 26413                           
 26414                           ; BSR set to: 1
 26415                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26416  0014A2  0100               	movlb	0	; () banked
 26417  0014A4  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26418  0014A6  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26419  0014A8  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26420  0014AA  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26421                           
 26422                           ;radio_driver_SX1276.c: 578: break;
 26423  0014AC  D009               	goto	l12451
 26424  0014AE                     l12449:
 26425                           
 26426                           ; BSR set to: 0
 26427  0014AE  0101               	movlb	1	; () banked
 26428  0014B0  5198               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26429                           
 26430                           ; Switch size 1, requested type "speed"
 26431                           ; Number of cases is 3, Range of values is 7 to 9
 26432                           ; switch strategies available:
 26433                           ; Name         Instructions Cycles
 26434                           ; simple_byte           10     6 (average)
 26435                           ;	Chosen strategy is simple_byte
 26436  0014B2  0A07               	xorlw	7	; case 7
 26437  0014B4  E0BA               	bz	l12441
 26438  0014B6  0A0F               	xorlw	15	; case 8
 26439  0014B8  E0C9               	bz	l12443
 26440  0014BA  0A01               	xorlw	1	; case 9
 26441  0014BC  E0D8               	bz	l12445
 26442  0014BE  D7F1               	goto	l453
 26443  0014C0                     l12451:
 26444                           
 26445                           ; BSR set to: 0
 26446                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26447  0014C0  0101               	movlb	1	; () banked
 26448  0014C2  2997               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26449  0014C4  0100               	movlb	0	; () banked
 26450  0014C6  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26451  0014C8  D005               	goto	u13260
 26452  0014CA                     u13265:
 26453  0014CA  90D8               	bcf	status,0,c
 26454  0014CC  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26455  0014CE  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26456  0014D0  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26457  0014D2  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26458  0014D4                     u13260:
 26459  0014D4  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26460  0014D6  D7F9               	goto	u13265
 26461                           
 26462                           ;radio_driver_SX1276.c: 582: }
 26463  0014D8  D005               	goto	l12453
 26464  0014DA                     l447:
 26465                           
 26466                           ; BSR set to: 1
 26467                           ;radio_driver_SX1276.c: 583: else
 26468                           ;radio_driver_SX1276.c: 584: {
 26469                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26470  0014DA  0100               	movlb	0	; () banked
 26471  0014DC  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26472  0014DE  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26473  0014E0  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26474  0014E2  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26475  0014E4                     l12453:
 26476                           
 26477                           ;radio_driver_SX1276.c: 586: }
 26478                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26479  0014E4  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26480  0014E8  0E24               	movlw	36
 26481  0014EA  EC2A  F03A         	call	_RADIO_RegisterWrite
 26482                           
 26483                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26484  0014EE  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26485  0014F2  0E1F               	movlw	31
 26486  0014F4  EC2A  F03A         	call	_RADIO_RegisterWrite
 26487                           
 26488                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26489  0014F8  0E26               	movlw	38
 26490  0014FA  EC53  F039         	call	_RADIO_RegisterRead
 26491  0014FE  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;radio_driver_SX1276.c: 596: if (
 26495                           ;radio_driver_SX1276.c: 597: (
 26496                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26497                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26498                           ;radio_driver_SX1276.c: 600: ) ||
 26499                           ;radio_driver_SX1276.c: 601: (
 26500                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26501                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26502                           ;radio_driver_SX1276.c: 604: )
 26503                           ;radio_driver_SX1276.c: 605: )
 26504  001500  0E0C               	movlw	12
 26505  001502  0101               	movlb	1	; () banked
 26506  001504  1997               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26507  001506  E106               	bnz	l12461
 26508                           
 26509                           ; BSR set to: 1
 26510  001508  0E07               	movlw	7
 26511  00150A  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26512  00150C  E009               	bz	l12465
 26513                           
 26514                           ; BSR set to: 1
 26515  00150E  0E08               	movlw	8
 26516  001510  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26517  001512  E006               	bz	l12465
 26518  001514                     l12461:
 26519                           
 26520                           ; BSR set to: 1
 26521  001514  0E0B               	movlw	11
 26522  001516  1997               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26523  001518  E106               	bnz	l12467
 26524                           
 26525                           ; BSR set to: 1
 26526  00151A  0E07               	movlw	7
 26527  00151C  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26528  00151E  E103               	bnz	l12467
 26529  001520                     l12465:
 26530                           
 26531                           ; BSR set to: 1
 26532                           ;radio_driver_SX1276.c: 606: {
 26533                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26534  001520  0100               	movlb	0	; () banked
 26535  001522  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26536                           
 26537                           ;radio_driver_SX1276.c: 608: }
 26538  001524  D002               	goto	l460
 26539  001526                     l12467:
 26540                           
 26541                           ; BSR set to: 1
 26542                           ;radio_driver_SX1276.c: 609: else
 26543                           ;radio_driver_SX1276.c: 610: {
 26544                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26545  001526  0100               	movlb	0	; () banked
 26546  001528  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26547  00152A                     l460:
 26548                           
 26549                           ; BSR set to: 0
 26550                           ;radio_driver_SX1276.c: 612: }
 26551                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26552  00152A  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26553                           
 26554                           ; BSR set to: 0
 26555                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26556  00152C  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26557  001530  0E26               	movlw	38
 26558  001532  EC2A  F03A         	call	_RADIO_RegisterWrite
 26559                           
 26560                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26561  001536  0E31               	movlw	49
 26562  001538  EC53  F039         	call	_RADIO_RegisterRead
 26563  00153C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26564                           
 26565                           ; BSR set to: 0
 26566                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26567  00153E  0EF8               	movlw	248
 26568  001540  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26572  001542  0E03               	movlw	3
 26573  001544  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26574                           
 26575                           ; BSR set to: 0
 26576                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26577  001546  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26578  00154A  0E31               	movlw	49
 26579  00154C  EC2A  F03A         	call	_RADIO_RegisterWrite
 26580                           
 26581                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26582  001550  0E0A               	movlw	10
 26583  001552  0100               	movlb	0	; () banked
 26584  001554  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26585  001556  0E37               	movlw	55
 26586  001558  EC2A  F03A         	call	_RADIO_RegisterWrite
 26587                           
 26588                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26589  00155C  0E12               	movlw	18
 26590  00155E  0101               	movlb	1	; () banked
 26591  001560  19AF               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26592  001562  E129               	bnz	l12505
 26593                           
 26594                           ; BSR set to: 1
 26595                           ;radio_driver_SX1276.c: 626: {
 26596                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26597                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26598  001564  0E07               	movlw	7
 26599  001566  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26600  001568  E003               	bz	l12487
 26601                           
 26602                           ; BSR set to: 1
 26603  00156A  0E08               	movlw	8
 26604  00156C  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26605  00156E  E115               	bnz	l12497
 26606  001570                     l12487:
 26607                           
 26608                           ; BSR set to: 1
 26609                           ;radio_driver_SX1276.c: 631: {
 26610                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26611  001570  0E31               	movlw	49
 26612  001572  EC53  F039         	call	_RADIO_RegisterRead
 26613  001576  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26614                           
 26615                           ; BSR set to: 0
 26616                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26617  001578  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26618                           
 26619                           ; BSR set to: 0
 26620                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26621  00157A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26622  00157E  0E31               	movlw	49
 26623  001580  EC2A  F03A         	call	_RADIO_RegisterWrite
 26624                           
 26625                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26626  001584  0E40               	movlw	64
 26627  001586  0100               	movlb	0	; () banked
 26628  001588  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26629  00158A  0E2F               	movlw	47
 26630  00158C  EC2A  F03A         	call	_RADIO_RegisterWrite
 26631                           
 26632                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26633  001590  0100               	movlb	0	; () banked
 26634  001592  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26635  001594  0E30               	movlw	48
 26636  001596  EC2A  F03A         	call	_RADIO_RegisterWrite
 26637  00159A                     l12497:
 26638                           
 26639                           ;radio_driver_SX1276.c: 637: }
 26640                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26641  00159A  0E09               	movlw	9
 26642  00159C  0101               	movlb	1	; () banked
 26643  00159E  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26644  0015A0  E10A               	bnz	l12505
 26645                           
 26646                           ; BSR set to: 1
 26647                           ;radio_driver_SX1276.c: 640: {
 26648                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26649  0015A2  0E31               	movlw	49
 26650  0015A4  EC53  F039         	call	_RADIO_RegisterRead
 26651  0015A8  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26652                           
 26653                           ; BSR set to: 0
 26654                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26655  0015AA  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26656                           
 26657                           ; BSR set to: 0
 26658                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26659  0015AC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26660  0015B0  0E31               	movlw	49
 26661  0015B2  EC2A  F03A         	call	_RADIO_RegisterWrite
 26662  0015B6                     l12505:
 26663                           
 26664                           ;radio_driver_SX1276.c: 644: }
 26665                           ;radio_driver_SX1276.c: 645: }
 26666                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26667  0015B6  0E33               	movlw	51
 26668  0015B8  EC53  F039         	call	_RADIO_RegisterRead
 26669  0015BC  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26670                           
 26671                           ; BSR set to: 0
 26672                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26673  0015BE  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26674                           
 26675                           ; BSR set to: 0
 26676                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26677  0015C0  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26678                           
 26679                           ; BSR set to: 0
 26680                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26681  0015C2  C19E  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26682  0015C6  0E01               	movlw	1
 26683  0015C8  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26684  0015CA  0E06               	movlw	6
 26685  0015CC  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26686  0015CE                     u13365:
 26687  0015CE  90D8               	bcf	status,0,c
 26688  0015D0  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26689  0015D2  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26690  0015D4  D7FC               	goto	u13365
 26691  0015D6  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26692  0015D8  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26696  0015DA  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26697  0015DE  0E33               	movlw	51
 26698  0015E0  EC2A  F03A         	call	_RADIO_RegisterWrite
 26699                           
 26700                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26701  0015E4  C19E  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26702  0015E8  0E01               	movlw	1
 26703  0015EA  0100               	movlb	0	; () banked
 26704  0015EC  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26705  0015EE  90D8               	bcf	status,0,c
 26706  0015F0  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26707  0015F2  90D8               	bcf	status,0,c
 26708  0015F4  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26709  0015F6  0AFF               	xorlw	255
 26710  0015F8  0B1D               	andlw	29
 26711  0015FA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26712                           
 26713                           ; BSR set to: 0
 26714                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26715  0015FC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26716  001600  0E3B               	movlw	59
 26717  001602  EC2A  F03A         	call	_RADIO_RegisterWrite
 26718                           
 26719                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26720  001606  0101               	movlb	1	; () banked
 26721  001608  518B               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26722  00160A  0100               	movlb	0	; () banked
 26723  00160C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26724  00160E  0E20               	movlw	32
 26725  001610  EC2A  F03A         	call	_RADIO_RegisterWrite
 26726                           
 26727                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26728  001614  C18A  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26729  001618  0E21               	movlw	33
 26730  00161A  EC2A  F03A         	call	_RADIO_RegisterWrite
 26731                           
 26732                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26733  00161E  0100               	movlb	0	; () banked
 26734  001620  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26735  001622  0E0D               	movlw	13
 26736  001624  EC2A  F03A         	call	_RADIO_RegisterWrite
 26737                           
 26738                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26739  001628  0100               	movlb	0	; () banked
 26740  00162A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26741  00162C  0E0E               	movlw	14
 26742  00162E  EC2A  F03A         	call	_RADIO_RegisterWrite
 26743                           
 26744                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26745  001632  0100               	movlb	0	; () banked
 26746  001634  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26747  001636  0E0F               	movlw	15
 26748  001638  EC2A  F03A         	call	_RADIO_RegisterWrite
 26749                           
 26750                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26751  00163C  0E12               	movlw	18
 26752  00163E  0101               	movlb	1	; () banked
 26753  001640  19AF               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26754  001642  E168               	bnz	l466
 26755                           
 26756                           ; BSR set to: 1
 26757                           ;radio_driver_SX1276.c: 665: {
 26758                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26759                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26760                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26761                           ;radio_driver_SX1276.c: 669: )
 26762  001644  0E09               	movlw	9
 26763  001646  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26764  001648  E11E               	bnz	l12539
 26765                           
 26766                           ; BSR set to: 1
 26767  00164A  0E80               	movlw	128
 26768  00164C  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26769  00164E  0E13               	movlw	19
 26770  001650  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26771  001652  0E61               	movlw	97
 26772  001654  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26773  001656  0E33               	movlw	51
 26774  001658  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26775  00165A  E315               	bnc	l12539
 26776                           
 26777                           ; BSR set to: 1
 26778  00165C  057E               	decf	_RadioConfiguration& (0+255),w,b
 26779  00165E  0EF7               	movlw	247
 26780  001660  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26781  001662  0ECB               	movlw	203
 26782  001664  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26783  001666  0E3C               	movlw	60
 26784  001668  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26785  00166A  E20D               	bc	l12539
 26786                           
 26787                           ; BSR set to: 1
 26788                           ;radio_driver_SX1276.c: 670: {
 26789                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26790  00166C  0E02               	movlw	2
 26791  00166E  0100               	movlb	0	; () banked
 26792  001670  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26793  001672  0E36               	movlw	54
 26794  001674  EC2A  F03A         	call	_RADIO_RegisterWrite
 26795                           
 26796                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26797  001678  0E64               	movlw	100
 26798  00167A  0100               	movlb	0	; () banked
 26799  00167C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26800  00167E  0E3A               	movlw	58
 26801  001680  EC2A  F03A         	call	_RADIO_RegisterWrite
 26802                           
 26803                           ;radio_driver_SX1276.c: 673: }
 26804  001684  D028               	goto	l12549
 26805  001686                     l12539:
 26806                           
 26807                           ; BSR set to: 1
 26808                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26809                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 26810                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 26811                           ;radio_driver_SX1276.c: 677: )
 26812  001686  0E09               	movlw	9
 26813  001688  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26814  00168A  E11F               	bnz	l12547
 26815                           
 26816                           ; BSR set to: 1
 26817  00168C  0E80               	movlw	128
 26818  00168E  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26819  001690  0E1A               	movlw	26
 26820  001692  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26821  001694  0E70               	movlw	112
 26822  001696  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26823  001698  0E18               	movlw	24
 26824  00169A  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26825  00169C  E316               	bnc	l12547
 26826                           
 26827                           ; BSR set to: 1
 26828  00169E  0E41               	movlw	65
 26829  0016A0  5D7E               	subwf	_RadioConfiguration& (0+255),w,b
 26830  0016A2  0EDD               	movlw	221
 26831  0016A4  597F               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26832  0016A6  0E4A               	movlw	74
 26833  0016A8  5980               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26834  0016AA  0E1F               	movlw	31
 26835  0016AC  5981               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26836  0016AE  E20D               	bc	l12547
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;radio_driver_SX1276.c: 678: {
 26840                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 26841  0016B0  0E02               	movlw	2
 26842  0016B2  0100               	movlb	0	; () banked
 26843  0016B4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26844  0016B6  0E36               	movlw	54
 26845  0016B8  EC2A  F03A         	call	_RADIO_RegisterWrite
 26846                           
 26847                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 26848  0016BC  0E7F               	movlw	127
 26849  0016BE  0100               	movlb	0	; () banked
 26850  0016C0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26851  0016C2  0E3A               	movlw	58
 26852  0016C4  EC2A  F03A         	call	_RADIO_RegisterWrite
 26853                           
 26854                           ;radio_driver_SX1276.c: 681: }
 26855  0016C8  D006               	goto	l12549
 26856  0016CA                     l12547:
 26857                           
 26858                           ; BSR set to: 1
 26859                           ;radio_driver_SX1276.c: 682: else
 26860                           ;radio_driver_SX1276.c: 683: {
 26861                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 26862  0016CA  0E03               	movlw	3
 26863  0016CC  0100               	movlb	0	; () banked
 26864  0016CE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26865  0016D0  0E36               	movlw	54
 26866  0016D2  EC2A  F03A         	call	_RADIO_RegisterWrite
 26867  0016D6                     l12549:
 26868                           
 26869                           ;radio_driver_SX1276.c: 685: }
 26870                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 26871  0016D6  0E09               	movlw	9
 26872  0016D8  0101               	movlb	1	; () banked
 26873  0016DA  1998               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26874  0016DC  E10F               	bnz	l12555
 26875                           
 26876                           ; BSR set to: 1
 26877  0016DE  059E               	decf	(_RadioConfiguration+32)& (0+255),w,b
 26878  0016E0  E10D               	bnz	l12555
 26879                           
 26880                           ; BSR set to: 1
 26881                           ;radio_driver_SX1276.c: 689: {
 26882                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 26883  0016E2  0E65               	movlw	101
 26884  0016E4  0100               	movlb	0	; () banked
 26885  0016E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26886  0016E8  0E3A               	movlw	58
 26887  0016EA  EC2A  F03A         	call	_RADIO_RegisterWrite
 26888                           
 26889                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 26890  0016EE  0E19               	movlw	25
 26891  0016F0  0100               	movlb	0	; () banked
 26892  0016F2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26893  0016F4  0E3B               	movlw	59
 26894  0016F6  EC2A  F03A         	call	_RADIO_RegisterWrite
 26895                           
 26896                           ;radio_driver_SX1276.c: 692: }
 26897  0016FA  D00C               	goto	l466
 26898  0016FC                     l12555:
 26899                           
 26900                           ; BSR set to: 1
 26901                           ;radio_driver_SX1276.c: 693: else
 26902                           ;radio_driver_SX1276.c: 694: {
 26903                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 26904  0016FC  0E65               	movlw	101
 26905  0016FE  0100               	movlb	0	; () banked
 26906  001700  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26907  001702  0E3A               	movlw	58
 26908  001704  EC2A  F03A         	call	_RADIO_RegisterWrite
 26909                           
 26910                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 26911  001708  0E1D               	movlw	29
 26912  00170A  0100               	movlb	0	; () banked
 26913  00170C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26914  00170E  0E3B               	movlw	59
 26915  001710  EC2A  F03A         	call	_RADIO_RegisterWrite
 26916  001714                     l466:
 26917                           
 26918                           ;radio_driver_SX1276.c: 697: }
 26919                           ;radio_driver_SX1276.c: 698: }
 26920                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 26921  001714  0100               	movlb	0	; () banked
 26922  001716  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 26923  001718  0E12               	movlw	18
 26924  00171A  EF2A  F03A         	goto	_RADIO_RegisterWrite
 26925  00171E                     l12557:
 26926                           
 26927                           ; BSR set to: 1
 26928                           ;radio_driver_SX1276.c: 703: else
 26929                           ;radio_driver_SX1276.c: 704: {
 26930                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 26931  00171E  C182  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 26932  001722  C183  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 26933  001726  C184  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 26934  00172A  C185  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 26935  00172E  EC52  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 26936                           
 26937                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 26938  001732  C186  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 26939  001736  C187  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 26940  00173A  C188  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 26941  00173E  C189  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 26942  001742  ECB5  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 26943                           
 26944                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 26945  001746  0101               	movlb	1	; () banked
 26946  001748  518B               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26947  00174A  0100               	movlb	0	; () banked
 26948  00174C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26949  00174E  0E25               	movlw	37
 26950  001750  EC2A  F03A         	call	_RADIO_RegisterWrite
 26951                           
 26952                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26953  001754  C18A  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26954  001758  0E26               	movlw	38
 26955  00175A  EC2A  F03A         	call	_RADIO_RegisterWrite
 26956                           
 26957                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 26958  00175E  0E0A               	movlw	10
 26959  001760  EC53  F039         	call	_RADIO_RegisterRead
 26960  001764  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26961                           
 26962                           ; BSR set to: 0
 26963                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 26964  001766  0E9F               	movlw	159
 26965  001768  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26966                           
 26967                           ; BSR set to: 0
 26968                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 26969  00176A  0101               	movlb	1	; () banked
 26970  00176C  39B1               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 26971  00176E  46E8               	rlncf	wreg,f,c
 26972  001770  0BE0               	andlw	224
 26973  001772  0100               	movlb	0	; () banked
 26974  001774  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26975                           
 26976                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 26977  001776  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26978  00177A  0E0A               	movlw	10
 26979  00177C  EC2A  F03A         	call	_RADIO_RegisterWrite
 26980                           
 26981                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 26982  001780  0EC8               	movlw	200
 26983  001782  0100               	movlb	0	; () banked
 26984  001784  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26985                           
 26986                           ; BSR set to: 0
 26987                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 26988  001786  0101               	movlb	1	; () banked
 26989  001788  519A               	movf	(_RadioConfiguration+28)& (0+255),w,b
 26990  00178A  E002               	bz	l12569
 26991                           
 26992                           ; BSR set to: 1
 26993                           ;radio_driver_SX1276.c: 722: {
 26994                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 26995  00178C  0100               	movlb	0	; () banked
 26996  00178E  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 26997  001790                     l12569:
 26998                           
 26999                           ;radio_driver_SX1276.c: 724: }
 27000                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 27001  001790  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27002  001794  0E30               	movlw	48
 27003  001796  EC2A  F03A         	call	_RADIO_RegisterWrite
 27004                           
 27005                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 27006  00179A  0100               	movlb	0	; () banked
 27007  00179C  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 27008  00179E  D00E               	goto	l12577
 27009  0017A0                     l12573:
 27010                           
 27011                           ; BSR set to: 0
 27012                           ;radio_driver_SX1276.c: 729: {
 27013                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27014  0017A0  0E8D               	movlw	low (_RadioConfiguration+15)
 27015  0017A2  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27016  0017A4  6ED9               	movwf	fsr2l,c
 27017  0017A6  6ADA               	clrf	fsr2h,c
 27018  0017A8  0E01               	movlw	high (_RadioConfiguration+15)
 27019  0017AA  22DA               	addwfc	fsr2h,f,c
 27020  0017AC  50DF               	movf	indf2,w,c
 27021  0017AE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27022  0017B0  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27023  0017B2  0F28               	addlw	40
 27024  0017B4  EC2A  F03A         	call	_RADIO_RegisterWrite
 27025  0017B8  0100               	movlb	0	; () banked
 27026  0017BA  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27027  0017BC                     l12577:
 27028                           
 27029                           ; BSR set to: 0
 27030  0017BC  0101               	movlb	1	; () banked
 27031  0017BE  5195               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27032  0017C0  0100               	movlb	0	; () banked
 27033  0017C2  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27034  0017C4  E3ED               	bnc	l12573
 27035                           
 27036                           ; BSR set to: 0
 27037                           ;radio_driver_SX1276.c: 733: }
 27038                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 27039  0017C6  0101               	movlb	1	; () banked
 27040  0017C8  5195               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27041  0017CA  E008               	bz	l12583
 27042                           
 27043                           ; BSR set to: 1
 27044                           ;radio_driver_SX1276.c: 737: {
 27045                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27046  0017CC  0595               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27047  0017CE  0910               	iorlw	16
 27048  0017D0  0100               	movlb	0	; () banked
 27049  0017D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27050  0017D4  0E27               	movlw	39
 27051  0017D6  EC2A  F03A         	call	_RADIO_RegisterWrite
 27052                           
 27053                           ;radio_driver_SX1276.c: 739: }
 27054  0017DA  D005               	goto	l479
 27055  0017DC                     l12583:
 27056                           
 27057                           ; BSR set to: 1
 27058                           ;radio_driver_SX1276.c: 740: else
 27059                           ;radio_driver_SX1276.c: 741: {
 27060                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 27061  0017DC  0100               	movlb	0	; () banked
 27062  0017DE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27063  0017E0  0E27               	movlw	39
 27064  0017E2  EC2A  F03A         	call	_RADIO_RegisterWrite
 27065  0017E6                     l479:
 27066                           
 27067                           ;radio_driver_SX1276.c: 743: }
 27068                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 27069  0017E6  0100               	movlb	0	; () banked
 27070  0017E8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27071  0017EA  0E3E               	movlw	62
 27072  0017EC  EC2A  F03A         	call	_RADIO_RegisterWrite
 27073                           
 27074                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 27075  0017F0  0100               	movlb	0	; () banked
 27076  0017F2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27077  0017F4  0E3F               	movlw	63
 27078  0017F6  EF2A  F03A         	goto	_RADIO_RegisterWrite
 27079  0017FA                     __end_of_RADIO_WriteConfiguration:
 27080                           	opt stack 0
 27081                           tosu	equ	0xFFF
 27082                           tosh	equ	0xFFE
 27083                           tosl	equ	0xFFD
 27084                           pclath	equ	0xFFA
 27085                           tblptru	equ	0xFF8
 27086                           tblptrh	equ	0xFF7
 27087                           tblptrl	equ	0xFF6
 27088                           tablat	equ	0xFF5
 27089                           prodh	equ	0xFF4
 27090                           prodl	equ	0xFF3
 27091                           intcon	equ	0xFF2
 27092                           intcon2	equ	0xFF1
 27093                           intcon3	equ	0xFF0
 27094                           indf0	equ	0xFEF
 27095                           postinc0	equ	0xFEE
 27096                           fsr0h	equ	0xFEA
 27097                           fsr0l	equ	0xFE9
 27098                           wreg	equ	0xFE8
 27099                           postinc1	equ	0xFE6
 27100                           postdec1	equ	0xFE5
 27101                           plusw1	equ	0xFE3
 27102                           fsr1h	equ	0xFE2
 27103                           fsr1l	equ	0xFE1
 27104                           indf2	equ	0xFDF
 27105                           postinc2	equ	0xFDE
 27106                           postdec2	equ	0xFDD
 27107                           plusw2	equ	0xFDB
 27108                           fsr2h	equ	0xFDA
 27109                           fsr2l	equ	0xFD9
 27110                           status	equ	0xFD8
 27111                           
 27112 ;; *************** function _RADIO_WritePower *****************
 27113 ;; Defined at:
 27114 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27115 ;; Parameters:    Size  Location     Type
 27116 ;;  power           1    wreg     char 
 27117 ;; Auto vars:     Size  Location     Type
 27118 ;;  power           1   10[BANK0 ] char 
 27119 ;;  paDac           1    9[BANK0 ] unsigned char 
 27120 ;;  ocp             1    8[BANK0 ] unsigned char 
 27121 ;; Return value:  Size  Location     Type
 27122 ;;                  1    wreg      void 
 27123 ;; Registers used:
 27124 ;;		wreg, status,2, status,0, cstack
 27125 ;; Tracked objects:
 27126 ;;		On entry : F/1
 27127 ;;		On exit  : 0/0
 27128 ;;		Unchanged: 0/0
 27129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27133 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27134 ;;Total ram usage:        3 bytes
 27135 ;; Hardware stack levels used:    1
 27136 ;; Hardware stack levels required when called:   10
 27137 ;; This function calls:
 27138 ;;		_RADIO_RegisterRead
 27139 ;;		_RADIO_RegisterWrite
 27140 ;; This function is called by:
 27141 ;;		_RADIO_WriteConfiguration
 27142 ;; This function uses a non-reentrant model
 27143 ;;
 27144                           
 27145                           	psect	text142
 27146  005266                     __ptext142:
 27147                           	opt stack 0
 27148  005266                     _RADIO_WritePower:
 27149                           	opt stack 16
 27150                           
 27151                           ;incstack = 0
 27152                           ;RADIO_WritePower@power stored from wreg
 27153  005266  0100               	movlb	0	; () banked
 27154  005268  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27155                           
 27156                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27157                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27158                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27159  00526A  0101               	movlb	1	; () banked
 27160  00526C  519B               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27161  00526E  E127               	bnz	l12271
 27162                           
 27163                           ; BSR set to: 1
 27164                           ;radio_driver_SX1276.c: 348: {
 27165                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27166  005270  0100               	movlb	0	; () banked
 27167  005272  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27168  005274  0A80               	xorlw	128
 27169  005276  0F83               	addlw	131
 27170  005278  E202               	bc	l12251
 27171                           
 27172                           ; BSR set to: 0
 27173                           ;radio_driver_SX1276.c: 351: {
 27174                           ;radio_driver_SX1276.c: 352: power = -3;
 27175  00527A  0EFD               	movlw	253
 27176  00527C  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27177  00527E                     l12251:
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;radio_driver_SX1276.c: 353: }
 27181                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27182  00527E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27183  005280  0A80               	xorlw	128
 27184  005282  0F70               	addlw	-144
 27185  005284  E302               	bnc	l12255
 27186                           
 27187                           ; BSR set to: 0
 27188                           ;radio_driver_SX1276.c: 355: {
 27189                           ;radio_driver_SX1276.c: 356: power = 15;
 27190  005286  0E0F               	movlw	15
 27191  005288  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27192  00528A                     l12255:
 27193                           
 27194                           ; BSR set to: 0
 27195                           ;radio_driver_SX1276.c: 357: }
 27196                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27197  00528A  0E4D               	movlw	77
 27198  00528C  EC53  F039         	call	_RADIO_RegisterRead
 27199  005290  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27200                           
 27201                           ; BSR set to: 0
 27202                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27203  005292  0EF8               	movlw	248
 27204  005294  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27205                           
 27206                           ; BSR set to: 0
 27207                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27208  005296  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27209                           
 27210                           ; BSR set to: 0
 27211                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27212  005298  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27213  00529C  0E4D               	movlw	77
 27214  00529E  EC2A  F03A         	call	_RADIO_RegisterWrite
 27215                           
 27216                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27217  0052A2  0100               	movlb	0	; () banked
 27218  0052A4  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27219  0052A6  D005               	goto	l12269
 27220                           
 27221                           ; BSR set to: 0
 27222                           ;radio_driver_SX1276.c: 365: {
 27223                           ;radio_driver_SX1276.c: 369: power += 3;
 27224  0052A8  0E03               	movlw	3
 27225  0052AA  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27226                           
 27227                           ; BSR set to: 0
 27228                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27229  0052AC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27230  0052AE  0920               	iorlw	32
 27231  0052B0  D002               	goto	L19
 27232  0052B2                     l12269:
 27233                           
 27234                           ; BSR set to: 0
 27235                           ;radio_driver_SX1276.c: 372: else
 27236                           ;radio_driver_SX1276.c: 373: {
 27237                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27238  0052B2  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27239  0052B4  0970               	iorlw	112
 27240  0052B6                     L19:
 27241  0052B6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27242  0052B8  0E09               	movlw	9
 27243  0052BA  EF2A  F03A         	goto	_RADIO_RegisterWrite
 27244  0052BE                     l12271:
 27245                           
 27246                           ; BSR set to: 1
 27247                           ;radio_driver_SX1276.c: 380: else
 27248                           ;radio_driver_SX1276.c: 381: {
 27249                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27250  0052BE  0100               	movlb	0	; () banked
 27251  0052C0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27252  0052C2  0A80               	xorlw	128
 27253  0052C4  0F7E               	addlw	-130
 27254  0052C6  E202               	bc	l12275
 27255                           
 27256                           ; BSR set to: 0
 27257                           ;radio_driver_SX1276.c: 386: {
 27258                           ;radio_driver_SX1276.c: 387: power = 2;
 27259  0052C8  0E02               	movlw	2
 27260  0052CA  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27261  0052CC                     l12275:
 27262                           
 27263                           ; BSR set to: 0
 27264                           ;radio_driver_SX1276.c: 388: }
 27265                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27266  0052CC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27267  0052CE  0A80               	xorlw	128
 27268  0052D0  0F6C               	addlw	-148
 27269  0052D2  E302               	bnc	l12279
 27270                           
 27271                           ; BSR set to: 0
 27272                           ;radio_driver_SX1276.c: 392: {
 27273                           ;radio_driver_SX1276.c: 393: power = 20;
 27274  0052D4  0E14               	movlw	20
 27275  0052D6  D005               	goto	L18
 27276  0052D8                     l12279:
 27277                           
 27278                           ; BSR set to: 0
 27279                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27280  0052D8  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27281  0052DA  0A80               	xorlw	128
 27282  0052DC  0F6E               	addlw	-146
 27283  0052DE  E302               	bnc	l12283
 27284                           
 27285                           ; BSR set to: 0
 27286                           ;radio_driver_SX1276.c: 396: {
 27287                           ;radio_driver_SX1276.c: 397: power = 17;
 27288  0052E0  0E11               	movlw	17
 27289  0052E2                     L18:
 27290  0052E2  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27291  0052E4                     l12283:
 27292                           
 27293                           ; BSR set to: 0
 27294                           ;radio_driver_SX1276.c: 398: }
 27295                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27296  0052E4  0E0B               	movlw	11
 27297  0052E6  EC53  F039         	call	_RADIO_RegisterRead
 27298  0052EA  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27299                           
 27300                           ; BSR set to: 0
 27301                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27302  0052EC  0E4D               	movlw	77
 27303  0052EE  EC53  F039         	call	_RADIO_RegisterRead
 27304  0052F2  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27305                           
 27306                           ; BSR set to: 0
 27307                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27308  0052F4  0EF8               	movlw	248
 27309  0052F6  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27310                           
 27311                           ; BSR set to: 0
 27312                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27313  0052F8  0E14               	movlw	20
 27314  0052FA  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27315  0052FC  E106               	bnz	l12297
 27316                           
 27317                           ; BSR set to: 0
 27318                           ;radio_driver_SX1276.c: 404: {
 27319                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27320  0052FE  0E07               	movlw	7
 27321  005300  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27322                           
 27323                           ; BSR set to: 0
 27324                           ;radio_driver_SX1276.c: 406: power = 15;
 27325  005302  0E0F               	movlw	15
 27326  005304  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27327                           
 27328                           ; BSR set to: 0
 27329                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27330  005306  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27331                           
 27332                           ;radio_driver_SX1276.c: 408: }
 27333  005308  D004               	goto	l12303
 27334  00530A                     l12297:
 27335                           
 27336                           ; BSR set to: 0
 27337                           ;radio_driver_SX1276.c: 409: else
 27338                           ;radio_driver_SX1276.c: 410: {
 27339                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27340  00530A  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27341                           
 27342                           ; BSR set to: 0
 27343                           ;radio_driver_SX1276.c: 412: power -= 2;
 27344  00530C  0EFE               	movlw	254
 27345  00530E  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27346                           
 27347                           ; BSR set to: 0
 27348                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27349  005310  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27350  005312                     l12303:
 27351                           
 27352                           ; BSR set to: 0
 27353                           ;radio_driver_SX1276.c: 414: }
 27354                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27355  005312  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27356  005316  0E4D               	movlw	77
 27357  005318  EC2A  F03A         	call	_RADIO_RegisterWrite
 27358                           
 27359                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27360  00531C  0100               	movlb	0	; () banked
 27361  00531E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27362  005320  0980               	iorlw	128
 27363  005322  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27364  005324  0E09               	movlw	9
 27365  005326  EC2A  F03A         	call	_RADIO_RegisterWrite
 27366                           
 27367                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27368  00532A  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27369  00532E  0E0B               	movlw	11
 27370  005330  EF2A  F03A         	goto	_RADIO_RegisterWrite
 27371  005334                     __end_of_RADIO_WritePower:
 27372                           	opt stack 0
 27373                           tosu	equ	0xFFF
 27374                           tosh	equ	0xFFE
 27375                           tosl	equ	0xFFD
 27376                           pclath	equ	0xFFA
 27377                           tblptru	equ	0xFF8
 27378                           tblptrh	equ	0xFF7
 27379                           tblptrl	equ	0xFF6
 27380                           tablat	equ	0xFF5
 27381                           prodh	equ	0xFF4
 27382                           prodl	equ	0xFF3
 27383                           intcon	equ	0xFF2
 27384                           intcon2	equ	0xFF1
 27385                           intcon3	equ	0xFF0
 27386                           indf0	equ	0xFEF
 27387                           postinc0	equ	0xFEE
 27388                           fsr0h	equ	0xFEA
 27389                           fsr0l	equ	0xFE9
 27390                           wreg	equ	0xFE8
 27391                           postinc1	equ	0xFE6
 27392                           postdec1	equ	0xFE5
 27393                           plusw1	equ	0xFE3
 27394                           fsr1h	equ	0xFE2
 27395                           fsr1l	equ	0xFE1
 27396                           indf2	equ	0xFDF
 27397                           postinc2	equ	0xFDE
 27398                           postdec2	equ	0xFDD
 27399                           plusw2	equ	0xFDB
 27400                           fsr2h	equ	0xFDA
 27401                           fsr2l	equ	0xFD9
 27402                           status	equ	0xFD8
 27403                           
 27404 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27405 ;; Defined at:
 27406 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27407 ;; Parameters:    Size  Location     Type
 27408 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27409 ;; Auto vars:     Size  Location     Type
 27410 ;;  num             4   21[BANK0 ] unsigned long 
 27411 ;; Return value:  Size  Location     Type
 27412 ;;                  1    wreg      void 
 27413 ;; Registers used:
 27414 ;;		wreg, status,2, status,0, cstack
 27415 ;; Tracked objects:
 27416 ;;		On entry : F/1
 27417 ;;		On exit  : 0/0
 27418 ;;		Unchanged: 0/0
 27419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27421 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27424 ;;Total ram usage:        8 bytes
 27425 ;; Hardware stack levels used:    1
 27426 ;; Hardware stack levels required when called:   10
 27427 ;; This function calls:
 27428 ;;		_RADIO_RegisterWrite
 27429 ;;		___lldiv
 27430 ;; This function is called by:
 27431 ;;		_RADIO_WriteConfiguration
 27432 ;; This function uses a non-reentrant model
 27433 ;;
 27434                           
 27435                           	psect	text143
 27436  0064A4                     __ptext143:
 27437                           	opt stack 0
 27438  0064A4                     _RADIO_WriteFSKFrequencyDeviation:
 27439                           	opt stack 16
 27440                           
 27441                           ; BSR set to: 1
 27442                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27443                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27444                           
 27445                           ;incstack = 0
 27446  0064A4  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27447  0064A8  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27448  0064AC  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27449  0064B0  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27450                           
 27451                           ; BSR set to: 1
 27452                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27453  0064B4  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27454  0064B8  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27455  0064BC  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27456  0064C0  0100               	movlb	0	; () banked
 27457  0064C2  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27458                           
 27459                           ; BSR set to: 0
 27460                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27461  0064C4  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27462  0064C8  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27463  0064CC  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27464  0064D0  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27465  0064D4  0E09               	movlw	9
 27466  0064D6  6F68               	movwf	___lldiv@divisor& (0+255),b
 27467  0064D8  0E3D               	movlw	61
 27468  0064DA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27469  0064DC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27470  0064DE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27471  0064E0  EC0B  F030         	call	___lldiv	;wreg free
 27472  0064E4  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27473  0064E8  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27474  0064EC  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27475  0064F0  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27476                           
 27477                           ; BSR set to: 0
 27478                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27479  0064F4  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27480  0064F8  0E04               	movlw	4
 27481  0064FA  EC2A  F03A         	call	_RADIO_RegisterWrite
 27482                           
 27483                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27484  0064FE  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27485  006502  0E05               	movlw	5
 27486  006504  EF2A  F03A         	goto	_RADIO_RegisterWrite
 27487  006508                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27488                           	opt stack 0
 27489                           tosu	equ	0xFFF
 27490                           tosh	equ	0xFFE
 27491                           tosl	equ	0xFFD
 27492                           pclath	equ	0xFFA
 27493                           tblptru	equ	0xFF8
 27494                           tblptrh	equ	0xFF7
 27495                           tblptrl	equ	0xFF6
 27496                           tablat	equ	0xFF5
 27497                           prodh	equ	0xFF4
 27498                           prodl	equ	0xFF3
 27499                           intcon	equ	0xFF2
 27500                           intcon2	equ	0xFF1
 27501                           intcon3	equ	0xFF0
 27502                           indf0	equ	0xFEF
 27503                           postinc0	equ	0xFEE
 27504                           fsr0h	equ	0xFEA
 27505                           fsr0l	equ	0xFE9
 27506                           wreg	equ	0xFE8
 27507                           postinc1	equ	0xFE6
 27508                           postdec1	equ	0xFE5
 27509                           plusw1	equ	0xFE3
 27510                           fsr1h	equ	0xFE2
 27511                           fsr1l	equ	0xFE1
 27512                           indf2	equ	0xFDF
 27513                           postinc2	equ	0xFDE
 27514                           postdec2	equ	0xFDD
 27515                           plusw2	equ	0xFDB
 27516                           fsr2h	equ	0xFDA
 27517                           fsr2l	equ	0xFD9
 27518                           status	equ	0xFD8
 27519                           
 27520 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27521 ;; Defined at:
 27522 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27523 ;; Parameters:    Size  Location     Type
 27524 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27525 ;; Auto vars:     Size  Location     Type
 27526 ;;  num             4   21[BANK0 ] unsigned long 
 27527 ;; Return value:  Size  Location     Type
 27528 ;;                  1    wreg      void 
 27529 ;; Registers used:
 27530 ;;		wreg, status,2, status,0, cstack
 27531 ;; Tracked objects:
 27532 ;;		On entry : 0/1
 27533 ;;		On exit  : 0/0
 27534 ;;		Unchanged: 0/0
 27535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27537 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27540 ;;Total ram usage:        8 bytes
 27541 ;; Hardware stack levels used:    1
 27542 ;; Hardware stack levels required when called:   10
 27543 ;; This function calls:
 27544 ;;		_RADIO_RegisterWrite
 27545 ;;		___lldiv
 27546 ;; This function is called by:
 27547 ;;		_RADIO_WriteConfiguration
 27548 ;; This function uses a non-reentrant model
 27549 ;;
 27550                           
 27551                           	psect	text144
 27552  00656A                     __ptext144:
 27553                           	opt stack 0
 27554  00656A                     _RADIO_WriteFSKBitRate:
 27555                           	opt stack 16
 27556                           
 27557                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27558                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27559                           
 27560                           ;incstack = 0
 27561  00656A  0100               	movlb	0	; () banked
 27562  00656C  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27563  00656E  0E48               	movlw	72
 27564  006570  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27565  006572  0EE8               	movlw	232
 27566  006574  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27567  006576  0E01               	movlw	1
 27568  006578  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27569                           
 27570                           ; BSR set to: 0
 27571                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27572  00657A  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27573  00657E  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27574  006582  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27575  006586  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27576  00658A  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27577  00658E  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27578  006592  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27579  006596  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27580  00659A  EC0B  F030         	call	___lldiv	;wreg free
 27581  00659E  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27582  0065A2  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27583  0065A6  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27584  0065AA  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27585                           
 27586                           ; BSR set to: 0
 27587                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27588  0065AE  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27589  0065B2  0E02               	movlw	2
 27590  0065B4  EC2A  F03A         	call	_RADIO_RegisterWrite
 27591                           
 27592                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27593  0065B8  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27594  0065BC  0E03               	movlw	3
 27595  0065BE  EC2A  F03A         	call	_RADIO_RegisterWrite
 27596                           
 27597                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27598  0065C2  0100               	movlb	0	; () banked
 27599  0065C4  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27600  0065C6  0E5D               	movlw	93
 27601  0065C8  EF2A  F03A         	goto	_RADIO_RegisterWrite
 27602  0065CC                     __end_of_RADIO_WriteFSKBitRate:
 27603                           	opt stack 0
 27604                           tosu	equ	0xFFF
 27605                           tosh	equ	0xFFE
 27606                           tosl	equ	0xFFD
 27607                           pclath	equ	0xFFA
 27608                           tblptru	equ	0xFF8
 27609                           tblptrh	equ	0xFF7
 27610                           tblptrl	equ	0xFF6
 27611                           tablat	equ	0xFF5
 27612                           prodh	equ	0xFF4
 27613                           prodl	equ	0xFF3
 27614                           intcon	equ	0xFF2
 27615                           intcon2	equ	0xFF1
 27616                           intcon3	equ	0xFF0
 27617                           indf0	equ	0xFEF
 27618                           postinc0	equ	0xFEE
 27619                           fsr0h	equ	0xFEA
 27620                           fsr0l	equ	0xFE9
 27621                           wreg	equ	0xFE8
 27622                           postinc1	equ	0xFE6
 27623                           postdec1	equ	0xFE5
 27624                           plusw1	equ	0xFE3
 27625                           fsr1h	equ	0xFE2
 27626                           fsr1l	equ	0xFE1
 27627                           indf2	equ	0xFDF
 27628                           postinc2	equ	0xFDE
 27629                           postdec2	equ	0xFDD
 27630                           plusw2	equ	0xFDB
 27631                           fsr2h	equ	0xFDA
 27632                           fsr2l	equ	0xFD9
 27633                           status	equ	0xFD8
 27634                           
 27635 ;; *************** function _PrepareJoinRequestFrame *****************
 27636 ;; Defined at:
 27637 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27638 ;; Parameters:    Size  Location     Type
 27639 ;;		None
 27640 ;; Auto vars:     Size  Location     Type
 27641 ;;  mic             4  117[BANK0 ] unsigned long 
 27642 ;;  iCtr            1  123[BANK0 ] unsigned char 
 27643 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27644 ;;  mhdr            1  121[BANK0 ] struct .
 27645 ;; Return value:  Size  Location     Type
 27646 ;;                  1    wreg      unsigned char 
 27647 ;; Registers used:
 27648 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27649 ;; Tracked objects:
 27650 ;;		On entry : F/2
 27651 ;;		On exit  : F/0
 27652 ;;		Unchanged: 0/0
 27653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27655 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27657 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27658 ;;Total ram usage:        9 bytes
 27659 ;; Hardware stack levels used:    1
 27660 ;; Hardware stack levels required when called:   13
 27661 ;; This function calls:
 27662 ;;		_ComputeMic
 27663 ;;		_Random
 27664 ;;		_memcpy
 27665 ;;		_memset
 27666 ;; This function is called by:
 27667 ;;		_LORAWAN_Join
 27668 ;; This function uses a non-reentrant model
 27669 ;;
 27670                           
 27671                           	psect	text145
 27672  004632                     __ptext145:
 27673                           	opt stack 0
 27674  004632                     _PrepareJoinRequestFrame:
 27675                           	opt stack 16
 27676                           
 27677                           ; BSR set to: 2
 27678                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27679                           
 27680                           ;incstack = 0
 27681  004632  0100               	movlb	0	; () banked
 27682  004634  6BDA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27683                           
 27684                           ; BSR set to: 0
 27685                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27686                           ;lorawan.c: 1810: uint32_t mic;
 27687                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27688  004636  0EE0               	movlw	low _macBuffer
 27689  004638  6F64               	movwf	memset@p1& (0+255),b
 27690  00463A  0E04               	movlw	high _macBuffer
 27691  00463C  6F65               	movwf	(memset@p1+1)& (0+255),b
 27692  00463E  6B67               	clrf	(memset@c+1)& (0+255),b
 27693  004640  6B66               	clrf	memset@c& (0+255),b
 27694  004642  0E01               	movlw	1
 27695  004644  6F69               	movwf	(memset@n+1)& (0+255),b
 27696  004646  0E0F               	movlw	15
 27697  004648  6F68               	movwf	memset@n& (0+255),b
 27698  00464A  ECDC  F038         	call	_memset	;wreg free
 27699                           
 27700                           ; BSR set to: 0
 27701                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27702  00464E  0E1F               	movlw	-225
 27703  004650  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27704                           
 27705                           ; BSR set to: 0
 27706                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27707  004652  0EFC               	movlw	-4
 27708  004654  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27709                           
 27710                           ; BSR set to: 0
 27711                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27712  004656  0EE3               	movlw	-29
 27713  004658  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27714                           
 27715                           ; BSR set to: 0
 27716                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27717  00465A  EE24  F0E0         	lfsr	2,_macBuffer
 27718  00465E  C0D9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27719                           
 27720                           ; BSR set to: 0
 27721  004662  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27722                           
 27723                           ; BSR set to: 0
 27724                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27725  004664  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27726  004666                     l15429:
 27727                           
 27728                           ; BSR set to: 0
 27729                           ;lorawan.c: 1821: {
 27730                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27731  004666  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27732  004668  0859               	sublw	low (_loRa+89)
 27733  00466A  6ED9               	movwf	fsr2l,c
 27734  00466C  0E00               	movlw	0
 27735  00466E  A0D8               	btfss	status,0,c
 27736  004670  2AE8               	incf	wreg,f,c
 27737  004672  0802               	sublw	high (_loRa+89)
 27738  004674  6EDA               	movwf	fsr2h,c
 27739  004676  0EE0               	movlw	low _macBuffer
 27740  004678  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27741  00467A  0E04               	movlw	high _macBuffer
 27742  00467C  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27743  00467E  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27744  004680  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27745  004682  0E00               	movlw	0
 27746  004684  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27747  004686  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27748  004688  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27749  00468A  6EE9               	movwf	fsr0l,c
 27750  00468C  0E00               	movlw	0
 27751  00468E  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27752  004690  6EEA               	movwf	fsr0h,c
 27753  004692  CFDF FFEF          	movff	indf2,indf0
 27754                           
 27755                           ; BSR set to: 0
 27756  004696  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27757                           
 27758                           ; BSR set to: 0
 27759  004698  0E07               	movlw	7
 27760  00469A  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27761  00469C  D7E4               	goto	l15429
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;lorawan.c: 1823: }
 27765                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27766  00469E  0E08               	movlw	8
 27767  0046A0  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27768                           
 27769                           ; BSR set to: 0
 27770                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27771  0046A2  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27772  0046A4                     l15441:
 27773                           
 27774                           ; BSR set to: 0
 27775                           ;lorawan.c: 1828: {
 27776                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27777  0046A4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27778  0046A6  0861               	sublw	low (_loRa+97)
 27779  0046A8  6ED9               	movwf	fsr2l,c
 27780  0046AA  0E00               	movlw	0
 27781  0046AC  A0D8               	btfss	status,0,c
 27782  0046AE  2AE8               	incf	wreg,f,c
 27783  0046B0  0802               	sublw	high (_loRa+97)
 27784  0046B2  6EDA               	movwf	fsr2h,c
 27785  0046B4  0EE0               	movlw	low _macBuffer
 27786  0046B6  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27787  0046B8  0E04               	movlw	high _macBuffer
 27788  0046BA  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27789  0046BC  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27790  0046BE  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27791  0046C0  0E00               	movlw	0
 27792  0046C2  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27793  0046C4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27794  0046C6  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27795  0046C8  6EE9               	movwf	fsr0l,c
 27796  0046CA  0E00               	movlw	0
 27797  0046CC  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27798  0046CE  6EEA               	movwf	fsr0h,c
 27799  0046D0  CFDF FFEF          	movff	indf2,indf0
 27800                           
 27801                           ; BSR set to: 0
 27802  0046D4  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27803                           
 27804                           ; BSR set to: 0
 27805  0046D6  0E07               	movlw	7
 27806  0046D8  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27807  0046DA  D7E4               	goto	l15441
 27808                           
 27809                           ; BSR set to: 0
 27810                           ;lorawan.c: 1830: }
 27811                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27812  0046DC  0E08               	movlw	8
 27813  0046DE  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27814                           
 27815                           ; BSR set to: 0
 27816                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27817  0046E0  6978               	setf	(Random@max+1)& (0+255),b
 27818  0046E2  6977               	setf	Random@max& (0+255),b
 27819  0046E4  ECAC  F039         	call	_Random	;wreg free
 27820  0046E8  C077  F2D2         	movff	?_Random,_loRa+210
 27821  0046EC  C078  F2D3         	movff	?_Random+1,_loRa+211
 27822                           
 27823                           ; BSR set to: 0
 27824                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27825  0046F0  0EE0               	movlw	low _macBuffer
 27826  0046F2  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27827  0046F4  6F64               	movwf	memcpy@d1& (0+255),b
 27828  0046F6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27829  0046F8  0E04               	movlw	high _macBuffer
 27830  0046FA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27831  0046FC  0ED2               	movlw	low (_loRa+210)
 27832  0046FE  6F66               	movwf	memcpy@s1& (0+255),b
 27833  004700  0E02               	movlw	high (_loRa+210)
 27834  004702  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 27835  004704  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27836  004706  0E02               	movlw	2
 27837  004708  6F68               	movwf	memcpy@n& (0+255),b
 27838  00470A  ECFF  F033         	call	_memcpy	;wreg free
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 27842  00470E  0E02               	movlw	2
 27843  004710  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27844                           
 27845                           ; BSR set to: 0
 27846                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 27847  004712  0E42               	movlw	low (_loRa+66)
 27848  004714  6FCA               	movwf	ComputeMic@key& (0+255),b
 27849  004716  0E02               	movlw	high (_loRa+66)
 27850  004718  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 27851  00471A  0EE0               	movlw	low _macBuffer
 27852  00471C  6FCC               	movwf	ComputeMic@buffer& (0+255),b
 27853  00471E  0E04               	movlw	high _macBuffer
 27854  004720  6FCD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 27855  004722  C0DA  F0CE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 27856  004726  EC54  F034         	call	_ComputeMic	;wreg free
 27857  00472A  C0CA  F0D5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 27858  00472E  C0CB  F0D6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 27859  004732  C0CC  F0D7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 27860  004736  C0CD  F0D8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 27861                           
 27862                           ; BSR set to: 0
 27863                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 27864  00473A  0EE0               	movlw	low _macBuffer
 27865  00473C  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27866  00473E  6F64               	movwf	memcpy@d1& (0+255),b
 27867  004740  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27868  004742  0E04               	movlw	high _macBuffer
 27869  004744  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27870  004746  0ED5               	movlw	low PrepareJoinRequestFrame@mic
 27871  004748  6F66               	movwf	memcpy@s1& (0+255),b
 27872  00474A  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 27873  00474C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27874  00474E  0E04               	movlw	4
 27875  004750  6F68               	movwf	memcpy@n& (0+255),b
 27876  004752  ECFF  F033         	call	_memcpy	;wreg free
 27877                           
 27878                           ; BSR set to: 0
 27879                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 27880  004756  0E04               	movlw	4
 27881  004758  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27882                           
 27883                           ; BSR set to: 0
 27884                           ;lorawan.c: 1842: return bufferIndex;
 27885  00475A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27886                           
 27887                           ; BSR set to: 0
 27888  00475C  0012               	return		;funcret
 27889  00475E                     __end_of_PrepareJoinRequestFrame:
 27890                           	opt stack 0
 27891                           tosu	equ	0xFFF
 27892                           tosh	equ	0xFFE
 27893                           tosl	equ	0xFFD
 27894                           pclath	equ	0xFFA
 27895                           tblptru	equ	0xFF8
 27896                           tblptrh	equ	0xFF7
 27897                           tblptrl	equ	0xFF6
 27898                           tablat	equ	0xFF5
 27899                           prodh	equ	0xFF4
 27900                           prodl	equ	0xFF3
 27901                           intcon	equ	0xFF2
 27902                           intcon2	equ	0xFF1
 27903                           intcon3	equ	0xFF0
 27904                           indf0	equ	0xFEF
 27905                           postinc0	equ	0xFEE
 27906                           fsr0h	equ	0xFEA
 27907                           fsr0l	equ	0xFE9
 27908                           wreg	equ	0xFE8
 27909                           postinc1	equ	0xFE6
 27910                           postdec1	equ	0xFE5
 27911                           plusw1	equ	0xFE3
 27912                           fsr1h	equ	0xFE2
 27913                           fsr1l	equ	0xFE1
 27914                           indf2	equ	0xFDF
 27915                           postinc2	equ	0xFDE
 27916                           postdec2	equ	0xFDD
 27917                           plusw2	equ	0xFDB
 27918                           fsr2h	equ	0xFDA
 27919                           fsr2l	equ	0xFD9
 27920                           status	equ	0xFD8
 27921                           
 27922 ;; *************** function _Random *****************
 27923 ;; Defined at:
 27924 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27925 ;; Parameters:    Size  Location     Type
 27926 ;;  max             2   23[BANK0 ] unsigned int 
 27927 ;; Auto vars:     Size  Location     Type
 27928 ;;		None
 27929 ;; Return value:  Size  Location     Type
 27930 ;;                  2   23[BANK0 ] unsigned int 
 27931 ;; Registers used:
 27932 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27933 ;; Tracked objects:
 27934 ;;		On entry : F/0
 27935 ;;		On exit  : F/0
 27936 ;;		Unchanged: 0/0
 27937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27941 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27942 ;;Total ram usage:        2 bytes
 27943 ;; Hardware stack levels used:    1
 27944 ;; Hardware stack levels required when called:    9
 27945 ;; This function calls:
 27946 ;;		___lwmod
 27947 ;;		_rand
 27948 ;; This function is called by:
 27949 ;;		_SearchAvailableChannel
 27950 ;;		_PrepareJoinRequestFrame
 27951 ;; This function uses a non-reentrant model
 27952 ;;
 27953                           
 27954                           	psect	text146
 27955  007358                     __ptext146:
 27956                           	opt stack 0
 27957  007358                     _Random:
 27958                           	opt stack 17
 27959                           
 27960                           ; BSR set to: 0
 27961                           ;lorawan.c: 1118: return (rand () % max);
 27962                           
 27963                           ; BSR set to: 0
 27964                           ;incstack = 0
 27965  007358  ECCD  F034         	call	_rand	;wreg free
 27966  00735C  C070  F072         	movff	?_rand,___lwmod@dividend
 27967  007360  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 27968  007364  C077  F074         	movff	Random@max,___lwmod@divisor
 27969  007368  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 27970  00736C  ECA0  F036         	call	___lwmod	;wreg free
 27971  007370  C072  F077         	movff	?___lwmod,?_Random
 27972  007374  C073  F078         	movff	?___lwmod+1,?_Random+1
 27973                           
 27974                           ; BSR set to: 0
 27975  007378  0012               	return		;funcret
 27976  00737A                     __end_of_Random:
 27977                           	opt stack 0
 27978                           tosu	equ	0xFFF
 27979                           tosh	equ	0xFFE
 27980                           tosl	equ	0xFFD
 27981                           pclath	equ	0xFFA
 27982                           tblptru	equ	0xFF8
 27983                           tblptrh	equ	0xFF7
 27984                           tblptrl	equ	0xFF6
 27985                           tablat	equ	0xFF5
 27986                           prodh	equ	0xFF4
 27987                           prodl	equ	0xFF3
 27988                           intcon	equ	0xFF2
 27989                           intcon2	equ	0xFF1
 27990                           intcon3	equ	0xFF0
 27991                           indf0	equ	0xFEF
 27992                           postinc0	equ	0xFEE
 27993                           fsr0h	equ	0xFEA
 27994                           fsr0l	equ	0xFE9
 27995                           wreg	equ	0xFE8
 27996                           postinc1	equ	0xFE6
 27997                           postdec1	equ	0xFE5
 27998                           plusw1	equ	0xFE3
 27999                           fsr1h	equ	0xFE2
 28000                           fsr1l	equ	0xFE1
 28001                           indf2	equ	0xFDF
 28002                           postinc2	equ	0xFDE
 28003                           postdec2	equ	0xFDD
 28004                           plusw2	equ	0xFDB
 28005                           fsr2h	equ	0xFDA
 28006                           fsr2l	equ	0xFD9
 28007                           status	equ	0xFD8
 28008                           
 28009 ;; *************** function _rand *****************
 28010 ;; Defined at:
 28011 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 28012 ;; Parameters:    Size  Location     Type
 28013 ;;		None
 28014 ;; Auto vars:     Size  Location     Type
 28015 ;;		None
 28016 ;; Return value:  Size  Location     Type
 28017 ;;                  2   16[BANK0 ] int 
 28018 ;; Registers used:
 28019 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28020 ;; Tracked objects:
 28021 ;;		On entry : F/0
 28022 ;;		On exit  : F/0
 28023 ;;		Unchanged: 0/0
 28024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28029 ;;Total ram usage:        2 bytes
 28030 ;; Hardware stack levels used:    1
 28031 ;; Hardware stack levels required when called:    8
 28032 ;; This function calls:
 28033 ;;		___lmul
 28034 ;; This function is called by:
 28035 ;;		_Random
 28036 ;; This function uses a non-reentrant model
 28037 ;;
 28038                           
 28039                           	psect	text147
 28040  00699A                     __ptext147:
 28041                           	opt stack 0
 28042  00699A                     _rand:
 28043                           	opt stack 17
 28044                           
 28045                           ; BSR set to: 0
 28046                           
 28047                           ; BSR set to: 0
 28048                           ;incstack = 0
 28049  00699A  C052  F064         	movff	_randx,___lmul@multiplier
 28050  00699E  C053  F065         	movff	_randx+1,___lmul@multiplier+1
 28051  0069A2  C054  F066         	movff	_randx+2,___lmul@multiplier+2
 28052  0069A6  C055  F067         	movff	_randx+3,___lmul@multiplier+3
 28053  0069AA  0E6D               	movlw	109
 28054  0069AC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 28055  0069AE  0E4E               	movlw	78
 28056  0069B0  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28057  0069B2  0EC6               	movlw	198
 28058  0069B4  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28059  0069B6  0E41               	movlw	65
 28060  0069B8  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28061  0069BA  EC8D  F02E         	call	___lmul	;wreg free
 28062  0069BE  C064  F052         	movff	?___lmul,_randx
 28063  0069C2  C065  F053         	movff	?___lmul+1,_randx+1
 28064  0069C6  C066  F054         	movff	?___lmul+2,_randx+2
 28065  0069CA  C067  F055         	movff	?___lmul+3,_randx+3
 28066                           
 28067                           ; BSR set to: 0
 28068  0069CE  0E39               	movlw	57
 28069  0069D0  2652               	addwf	_randx,f,c
 28070  0069D2  0E30               	movlw	48
 28071  0069D4  2253               	addwfc	_randx+1,f,c
 28072  0069D6  0E00               	movlw	0
 28073  0069D8  2254               	addwfc	_randx+2,f,c
 28074  0069DA  2255               	addwfc	_randx+3,f,c
 28075                           
 28076                           ; BSR set to: 0
 28077  0069DC  5054               	movf	_randx+2,w,c
 28078  0069DE  6F70               	movwf	?_rand& (0+255),b
 28079  0069E0  0E7F               	movlw	127
 28080  0069E2  1455               	andwf	_randx+3,w,c
 28081  0069E4  6F71               	movwf	(?_rand+1)& (0+255),b
 28082                           
 28083                           ; BSR set to: 0
 28084  0069E6  0012               	return		;funcret
 28085  0069E8                     __end_of_rand:
 28086                           	opt stack 0
 28087                           tosu	equ	0xFFF
 28088                           tosh	equ	0xFFE
 28089                           tosl	equ	0xFFD
 28090                           pclath	equ	0xFFA
 28091                           tblptru	equ	0xFF8
 28092                           tblptrh	equ	0xFF7
 28093                           tblptrl	equ	0xFF6
 28094                           tablat	equ	0xFF5
 28095                           prodh	equ	0xFF4
 28096                           prodl	equ	0xFF3
 28097                           intcon	equ	0xFF2
 28098                           intcon2	equ	0xFF1
 28099                           intcon3	equ	0xFF0
 28100                           indf0	equ	0xFEF
 28101                           postinc0	equ	0xFEE
 28102                           fsr0h	equ	0xFEA
 28103                           fsr0l	equ	0xFE9
 28104                           wreg	equ	0xFE8
 28105                           postinc1	equ	0xFE6
 28106                           postdec1	equ	0xFE5
 28107                           plusw1	equ	0xFE3
 28108                           fsr1h	equ	0xFE2
 28109                           fsr1l	equ	0xFE1
 28110                           indf2	equ	0xFDF
 28111                           postinc2	equ	0xFDE
 28112                           postdec2	equ	0xFDD
 28113                           plusw2	equ	0xFDB
 28114                           fsr2h	equ	0xFDA
 28115                           fsr2l	equ	0xFD9
 28116                           status	equ	0xFD8
 28117                           
 28118 ;; *************** function ___lmul *****************
 28119 ;; Defined at:
 28120 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 28121 ;; Parameters:    Size  Location     Type
 28122 ;;  multiplier      4    4[BANK0 ] unsigned long 
 28123 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 28124 ;; Auto vars:     Size  Location     Type
 28125 ;;  product         4   12[BANK0 ] unsigned long 
 28126 ;; Return value:  Size  Location     Type
 28127 ;;                  4    4[BANK0 ] unsigned long 
 28128 ;; Registers used:
 28129 ;;		wreg, status,2, status,0, prodl, prodh
 28130 ;; Tracked objects:
 28131 ;;		On entry : F/0
 28132 ;;		On exit  : F/0
 28133 ;;		Unchanged: 0/0
 28134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28135 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28136 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28138 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28139 ;;Total ram usage:       12 bytes
 28140 ;; Hardware stack levels used:    1
 28141 ;; Hardware stack levels required when called:    7
 28142 ;; This function calls:
 28143 ;;		Nothing
 28144 ;; This function is called by:
 28145 ;;		_RADIO_WriteConfiguration
 28146 ;;		_ExecuteNewChannel
 28147 ;;		_ExecuteRxParamSetupReq
 28148 ;;		_UpdateCfList
 28149 ;;		_rand
 28150 ;; This function uses a non-reentrant model
 28151 ;;
 28152                           
 28153                           	psect	text148
 28154  005D1A                     __ptext148:
 28155                           	opt stack 0
 28156  005D1A                     ___lmul:
 28157                           	opt stack 17
 28158                           
 28159                           ; BSR set to: 0
 28160                           
 28161                           ; BSR set to: 0
 28162                           ;incstack = 0
 28163  005D1A  5164               	movf	___lmul@multiplier& (0+255),w,b
 28164  005D1C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28165  005D1E  CFF3 F06C          	movff	prodl,___lmul@product
 28166  005D22  CFF4 F06D          	movff	prodh,___lmul@product+1
 28167  005D26  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 28168  005D28  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 28169  005D2A  5164               	movf	___lmul@multiplier& (0+255),w,b
 28170  005D2C  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28171  005D2E  50F3               	movf	prodl,w,c
 28172  005D30  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28173  005D32  50F4               	movf	prodh,w,c
 28174  005D34  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28175  005D36  0E00               	movlw	0
 28176  005D38  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28177  005D3A  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28178  005D3C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28179  005D3E  50F3               	movf	prodl,w,c
 28180  005D40  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28181  005D42  50F4               	movf	prodh,w,c
 28182  005D44  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28183  005D46  0E00               	movlw	0
 28184  005D48  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28185  005D4A  5164               	movf	___lmul@multiplier& (0+255),w,b
 28186  005D4C  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28187  005D4E  50F3               	movf	prodl,w,c
 28188  005D50  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28189  005D52  50F4               	movf	prodh,w,c
 28190  005D54  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28191  005D56  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28192  005D58  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28193  005D5A  50F3               	movf	prodl,w,c
 28194  005D5C  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28195  005D5E  50F4               	movf	prodh,w,c
 28196  005D60  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28197  005D62  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28198  005D64  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28199  005D66  50F3               	movf	prodl,w,c
 28200  005D68  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28201  005D6A  50F4               	movf	prodh,w,c
 28202  005D6C  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28203  005D6E  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28204  005D70  0364               	mulwf	___lmul@multiplier& (0+255),b
 28205  005D72  50F3               	movf	prodl,w,c
 28206  005D74  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28207  005D76  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28208  005D78  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28209  005D7A  50F3               	movf	prodl,w,c
 28210  005D7C  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28211  005D7E  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28212  005D80  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28213  005D82  50F3               	movf	prodl,w,c
 28214  005D84  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28215  005D86  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28216  005D88  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28217  005D8A  50F3               	movf	prodl,w,c
 28218  005D8C  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28219                           
 28220                           ; BSR set to: 0
 28221  005D8E  C06C  F064         	movff	___lmul@product,?___lmul
 28222  005D92  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28223  005D96  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28224  005D9A  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28225                           
 28226                           ; BSR set to: 0
 28227  005D9E  0012               	return		;funcret
 28228  005DA0                     __end_of___lmul:
 28229                           	opt stack 0
 28230                           tosu	equ	0xFFF
 28231                           tosh	equ	0xFFE
 28232                           tosl	equ	0xFFD
 28233                           pclath	equ	0xFFA
 28234                           tblptru	equ	0xFF8
 28235                           tblptrh	equ	0xFF7
 28236                           tblptrl	equ	0xFF6
 28237                           tablat	equ	0xFF5
 28238                           prodh	equ	0xFF4
 28239                           prodl	equ	0xFF3
 28240                           intcon	equ	0xFF2
 28241                           intcon2	equ	0xFF1
 28242                           intcon3	equ	0xFF0
 28243                           indf0	equ	0xFEF
 28244                           postinc0	equ	0xFEE
 28245                           fsr0h	equ	0xFEA
 28246                           fsr0l	equ	0xFE9
 28247                           wreg	equ	0xFE8
 28248                           postinc1	equ	0xFE6
 28249                           postdec1	equ	0xFE5
 28250                           plusw1	equ	0xFE3
 28251                           fsr1h	equ	0xFE2
 28252                           fsr1l	equ	0xFE1
 28253                           indf2	equ	0xFDF
 28254                           postinc2	equ	0xFDE
 28255                           postdec2	equ	0xFDD
 28256                           plusw2	equ	0xFDB
 28257                           fsr2h	equ	0xFDA
 28258                           fsr2l	equ	0xFD9
 28259                           status	equ	0xFD8
 28260                           
 28261 ;; *************** function ___lwmod *****************
 28262 ;; Defined at:
 28263 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28264 ;; Parameters:    Size  Location     Type
 28265 ;;  dividend        2   18[BANK0 ] unsigned int 
 28266 ;;  divisor         2   20[BANK0 ] unsigned int 
 28267 ;; Auto vars:     Size  Location     Type
 28268 ;;  counter         1   22[BANK0 ] unsigned char 
 28269 ;; Return value:  Size  Location     Type
 28270 ;;                  2   18[BANK0 ] unsigned int 
 28271 ;; Registers used:
 28272 ;;		wreg, status,2, status,0
 28273 ;; Tracked objects:
 28274 ;;		On entry : F/0
 28275 ;;		On exit  : F/0
 28276 ;;		Unchanged: 0/0
 28277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28281 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28282 ;;Total ram usage:        5 bytes
 28283 ;; Hardware stack levels used:    1
 28284 ;; Hardware stack levels required when called:    7
 28285 ;; This function calls:
 28286 ;;		Nothing
 28287 ;; This function is called by:
 28288 ;;		_Random
 28289 ;; This function uses a non-reentrant model
 28290 ;;
 28291                           
 28292                           	psect	text149
 28293  006D40                     __ptext149:
 28294                           	opt stack 0
 28295  006D40                     ___lwmod:
 28296                           	opt stack 18
 28297                           
 28298                           ; BSR set to: 0
 28299                           
 28300                           ; BSR set to: 0
 28301                           ;incstack = 0
 28302  006D40  5174               	movf	___lwmod@divisor& (0+255),w,b
 28303  006D42  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28304  006D44  E017               	bz	l3166
 28305                           
 28306                           ; BSR set to: 0
 28307  006D46  0E01               	movlw	1
 28308  006D48  6F76               	movwf	___lwmod@counter& (0+255),b
 28309  006D4A  D004               	goto	l12401
 28310  006D4C                     l12399:
 28311                           
 28312                           ; BSR set to: 0
 28313  006D4C  90D8               	bcf	status,0,c
 28314  006D4E  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28315  006D50  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28316  006D52  2B76               	incf	___lwmod@counter& (0+255),f,b
 28317  006D54                     l12401:
 28318                           
 28319                           ; BSR set to: 0
 28320  006D54  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28321  006D56  D7FA               	goto	l12399
 28322  006D58                     l12403:
 28323                           
 28324                           ; BSR set to: 0
 28325  006D58  5174               	movf	___lwmod@divisor& (0+255),w,b
 28326  006D5A  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28327  006D5C  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28328  006D5E  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28329  006D60  E304               	bnc	l12407
 28330                           
 28331                           ; BSR set to: 0
 28332  006D62  5174               	movf	___lwmod@divisor& (0+255),w,b
 28333  006D64  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28334  006D66  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28335  006D68  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28336  006D6A                     l12407:
 28337                           
 28338                           ; BSR set to: 0
 28339  006D6A  90D8               	bcf	status,0,c
 28340  006D6C  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28341  006D6E  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28342                           
 28343                           ; BSR set to: 0
 28344  006D70  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28345  006D72  D7F2               	goto	l12403
 28346  006D74                     l3166:
 28347                           
 28348                           ; BSR set to: 0
 28349  006D74  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28350  006D78  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28351                           
 28352                           ; BSR set to: 0
 28353  006D7C  0012               	return		;funcret
 28354  006D7E                     __end_of___lwmod:
 28355                           	opt stack 0
 28356                           tosu	equ	0xFFF
 28357                           tosh	equ	0xFFE
 28358                           tosl	equ	0xFFD
 28359                           pclath	equ	0xFFA
 28360                           tblptru	equ	0xFF8
 28361                           tblptrh	equ	0xFF7
 28362                           tblptrl	equ	0xFF6
 28363                           tablat	equ	0xFF5
 28364                           prodh	equ	0xFF4
 28365                           prodl	equ	0xFF3
 28366                           intcon	equ	0xFF2
 28367                           intcon2	equ	0xFF1
 28368                           intcon3	equ	0xFF0
 28369                           indf0	equ	0xFEF
 28370                           postinc0	equ	0xFEE
 28371                           fsr0h	equ	0xFEA
 28372                           fsr0l	equ	0xFE9
 28373                           wreg	equ	0xFE8
 28374                           postinc1	equ	0xFE6
 28375                           postdec1	equ	0xFE5
 28376                           plusw1	equ	0xFE3
 28377                           fsr1h	equ	0xFE2
 28378                           fsr1l	equ	0xFE1
 28379                           indf2	equ	0xFDF
 28380                           postinc2	equ	0xFDE
 28381                           postdec2	equ	0xFDD
 28382                           plusw2	equ	0xFDB
 28383                           fsr2h	equ	0xFDA
 28384                           fsr2l	equ	0xFD9
 28385                           status	equ	0xFD8
 28386                           
 28387 ;; *************** function _ComputeMic *****************
 28388 ;; Defined at:
 28389 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28390 ;; Parameters:    Size  Location     Type
 28391 ;;  key             2  106[BANK0 ] PTR unsigned char 
 28392 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28393 ;;  buffer          2  108[BANK0 ] PTR unsigned char 
 28394 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28395 ;;  bufferLength    1  110[BANK0 ] unsigned char 
 28396 ;; Auto vars:     Size  Location     Type
 28397 ;;  mic             4  111[BANK0 ] unsigned long 
 28398 ;; Return value:  Size  Location     Type
 28399 ;;                  4  106[BANK0 ] unsigned long 
 28400 ;; Registers used:
 28401 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28402 ;; Tracked objects:
 28403 ;;		On entry : F/0
 28404 ;;		On exit  : F/0
 28405 ;;		Unchanged: 0/0
 28406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28407 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28408 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28410 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28411 ;;Total ram usage:        9 bytes
 28412 ;; Hardware stack levels used:    1
 28413 ;; Hardware stack levels required when called:   12
 28414 ;; This function calls:
 28415 ;;		_AESCmac
 28416 ;;		_memcpy
 28417 ;; This function is called by:
 28418 ;;		_LORAWAN_RxDone
 28419 ;;		_PrepareJoinRequestFrame
 28420 ;; This function uses a non-reentrant model
 28421 ;;
 28422                           
 28423                           	psect	text150
 28424  0068A8                     __ptext150:
 28425                           	opt stack 0
 28426  0068A8                     _ComputeMic:
 28427                           	opt stack 14
 28428                           
 28429                           ; BSR set to: 0
 28430                           ;lorawan.c: 2196: uint32_t mic = 0;
 28431                           
 28432                           ; BSR set to: 0
 28433                           ;incstack = 0
 28434  0068A8  6BCF               	clrf	ComputeMic@mic& (0+255),b
 28435  0068AA  6BD0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28436  0068AC  6BD1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28437  0068AE  6BD2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28441  0068B0  C0CA  F0BC         	movff	ComputeMic@key,AESCmac@key
 28442  0068B4  C0CB  F0BD         	movff	ComputeMic@key+1,AESCmac@key+1
 28443  0068B8  0EB4               	movlw	low _aesBuffer
 28444  0068BA  6FBE               	movwf	AESCmac@output& (0+255),b
 28445  0068BC  0E01               	movlw	high _aesBuffer
 28446  0068BE  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 28447  0068C0  C0CC  F0C0         	movff	ComputeMic@buffer,AESCmac@input
 28448  0068C4  C0CD  F0C1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28449  0068C8  C0CE  F0C2         	movff	ComputeMic@bufferLength,AESCmac@size
 28450  0068CC  ECFD  F00B         	call	_AESCmac	;wreg free
 28451                           
 28452                           ; BSR set to: 0
 28453                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28454  0068D0  0ECF               	movlw	low ComputeMic@mic
 28455  0068D2  6F64               	movwf	memcpy@d1& (0+255),b
 28456  0068D4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28457  0068D6  0EB4               	movlw	low _aesBuffer
 28458  0068D8  6F66               	movwf	memcpy@s1& (0+255),b
 28459  0068DA  0E01               	movlw	high _aesBuffer
 28460  0068DC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28461  0068DE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28462  0068E0  0E04               	movlw	4
 28463  0068E2  6F68               	movwf	memcpy@n& (0+255),b
 28464  0068E4  ECFF  F033         	call	_memcpy	;wreg free
 28465                           
 28466                           ; BSR set to: 0
 28467                           ;lorawan.c: 2202: return mic;
 28468  0068E8  C0CF  F0CA         	movff	ComputeMic@mic,?_ComputeMic
 28469  0068EC  C0D0  F0CB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28470  0068F0  C0D1  F0CC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28471  0068F4  C0D2  F0CD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28472                           
 28473                           ; BSR set to: 0
 28474  0068F8  0012               	return		;funcret
 28475  0068FA                     __end_of_ComputeMic:
 28476                           	opt stack 0
 28477                           tosu	equ	0xFFF
 28478                           tosh	equ	0xFFE
 28479                           tosl	equ	0xFFD
 28480                           pclath	equ	0xFFA
 28481                           tblptru	equ	0xFF8
 28482                           tblptrh	equ	0xFF7
 28483                           tblptrl	equ	0xFF6
 28484                           tablat	equ	0xFF5
 28485                           prodh	equ	0xFF4
 28486                           prodl	equ	0xFF3
 28487                           intcon	equ	0xFF2
 28488                           intcon2	equ	0xFF1
 28489                           intcon3	equ	0xFF0
 28490                           indf0	equ	0xFEF
 28491                           postinc0	equ	0xFEE
 28492                           fsr0h	equ	0xFEA
 28493                           fsr0l	equ	0xFE9
 28494                           wreg	equ	0xFE8
 28495                           postinc1	equ	0xFE6
 28496                           postdec1	equ	0xFE5
 28497                           plusw1	equ	0xFE3
 28498                           fsr1h	equ	0xFE2
 28499                           fsr1l	equ	0xFE1
 28500                           indf2	equ	0xFDF
 28501                           postinc2	equ	0xFDE
 28502                           postdec2	equ	0xFDD
 28503                           plusw2	equ	0xFDB
 28504                           fsr2h	equ	0xFDA
 28505                           fsr2l	equ	0xFD9
 28506                           status	equ	0xFD8
 28507                           
 28508 ;; *************** function _AESCmac *****************
 28509 ;; Defined at:
 28510 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28511 ;; Parameters:    Size  Location     Type
 28512 ;;  key             2   92[BANK0 ] PTR unsigned char 
 28513 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28514 ;;  output          2   94[BANK0 ] PTR unsigned char 
 28515 ;;		 -> aesBuffer(16), 
 28516 ;;  input           2   96[BANK0 ] PTR unsigned char 
 28517 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28518 ;;  size            1   98[BANK0 ] unsigned char 
 28519 ;; Auto vars:     Size  Location     Type
 28520 ;;  x              16   80[BANK1 ] unsigned char [16]
 28521 ;;  y              16   64[BANK1 ] unsigned char [16]
 28522 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28523 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28524 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28525 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28526 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28527 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28528 ;;  i               1  101[BANK1 ] unsigned char 
 28529 ;;  j               1  100[BANK1 ] unsigned char 
 28530 ;;  n               1   99[BANK1 ] unsigned char 
 28531 ;;  flag            1   98[BANK1 ] unsigned char 
 28532 ;; Return value:  Size  Location     Type
 28533 ;;                  1    wreg      void 
 28534 ;; Registers used:
 28535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28536 ;; Tracked objects:
 28537 ;;		On entry : F/0
 28538 ;;		On exit  : F/0
 28539 ;;		Unchanged: 0/0
 28540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28541 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28542 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28543 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28544 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28545 ;;Total ram usage:      116 bytes
 28546 ;; Hardware stack levels used:    1
 28547 ;; Hardware stack levels required when called:   11
 28548 ;; This function calls:
 28549 ;;		_AESEncodeLoRa
 28550 ;;		_GenerateSubkey
 28551 ;;		_memcpy
 28552 ;;		_memset
 28553 ;; This function is called by:
 28554 ;;		_LORAWAN_RxDone
 28555 ;;		_AssemblePacket
 28556 ;;		_ComputeMic
 28557 ;; This function uses a non-reentrant model
 28558 ;;
 28559                           
 28560                           	psect	text151
 28561  0017FA                     __ptext151:
 28562                           	opt stack 0
 28563  0017FA                     _AESCmac:
 28564                           	opt stack 16
 28565                           
 28566                           ; BSR set to: 0
 28567                           
 28568                           ; BSR set to: 0
 28569                           ;incstack = 0
 28570  0017FA  0101               	movlb	1	; () banked
 28571  0017FC  6B65               	clrf	AESCmac@i& (0+255),b
 28572  0017FE  6B64               	clrf	AESCmac@j& (0+255),b
 28573                           
 28574                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28575  001800  6B62               	clrf	AESCmac@flag& (0+255),b
 28576                           
 28577                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28578                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28579                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28580  001802  6B60               	clrf	AESCmac@ptr& (0+255),b
 28581  001804  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28582                           
 28583                           ; BSR set to: 1
 28584                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28585  001806  C0BC  F094         	movff	AESCmac@key,GenerateSubkey@key
 28586  00180A  C0BD  F095         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28587  00180E  0E10               	movlw	low AESCmac@k1
 28588  001810  0100               	movlb	0	; () banked
 28589  001812  6F96               	movwf	GenerateSubkey@k1& (0+255),b
 28590  001814  0E01               	movlw	high AESCmac@k1
 28591  001816  6F97               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28592  001818  0E00               	movlw	low AESCmac@k2
 28593  00181A  6F98               	movwf	GenerateSubkey@k2& (0+255),b
 28594  00181C  0E01               	movlw	high AESCmac@k2
 28595  00181E  6F99               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28596  001820  EC32  F024         	call	_GenerateSubkey	;wreg free
 28597                           
 28598                           ; BSR set to: 0
 28599                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28600  001824  51C2               	movf	AESCmac@size& (0+255),w,b
 28601  001826  6FC3               	movwf	??_AESCmac& (0+255),b
 28602  001828  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28603  00182A  0E0F               	movlw	15
 28604  00182C  27C3               	addwf	??_AESCmac& (0+255),f,b
 28605  00182E  0E00               	movlw	0
 28606  001830  23C4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28607  001832  0E04               	movlw	4
 28608  001834  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28609  001836                     u14155:
 28610  001836  35C4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28611  001838  33C4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28612  00183A  33C3               	rrcf	??_AESCmac& (0+255),f,b
 28613  00183C  2FC5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28614  00183E  D7FB               	goto	u14155
 28615  001840  51C3               	movf	??_AESCmac& (0+255),w,b
 28616  001842  0101               	movlb	1	; () banked
 28617  001844  6F63               	movwf	AESCmac@n& (0+255),b
 28618                           
 28619                           ; BSR set to: 1
 28620                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28621  001846  5163               	movf	AESCmac@n& (0+255),w,b
 28622  001848  E104               	bnz	l13027
 28623                           
 28624                           ; BSR set to: 1
 28625                           ;lorawan_aes_cmac.c: 53: {
 28626                           ;lorawan_aes_cmac.c: 54: n = 1;
 28627  00184A  0E01               	movlw	1
 28628  00184C  6F63               	movwf	AESCmac@n& (0+255),b
 28629                           
 28630                           ; BSR set to: 1
 28631                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28632  00184E  6B62               	clrf	AESCmac@flag& (0+255),b
 28633                           
 28634                           ;lorawan_aes_cmac.c: 56: }
 28635  001850  D00A               	goto	l1454
 28636  001852                     l13027:
 28637                           
 28638                           ; BSR set to: 1
 28639                           ;lorawan_aes_cmac.c: 57: else
 28640                           ;lorawan_aes_cmac.c: 58: {
 28641                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28642  001852  C0C2  F0C3         	movff	AESCmac@size,??_AESCmac
 28643  001856  0E0F               	movlw	15
 28644  001858  0100               	movlb	0	; () banked
 28645  00185A  17C3               	andwf	??_AESCmac& (0+255),f,b
 28646  00185C  0E01               	movlw	1
 28647  00185E  A4D8               	btfss	status,2,c
 28648  001860  0E00               	movlw	0
 28649  001862  0101               	movlb	1	; () banked
 28650  001864  6F62               	movwf	AESCmac@flag& (0+255),b
 28651  001866                     l1454:
 28652                           
 28653                           ; BSR set to: 1
 28654                           ;lorawan_aes_cmac.c: 60: }
 28655                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28656  001866  0562               	decf	AESCmac@flag& (0+255),w,b
 28657  001868  E141               	bnz	l13041
 28658                           
 28659                           ; BSR set to: 1
 28660                           ;lorawan_aes_cmac.c: 63: {
 28661                           ;lorawan_aes_cmac.c: 64: j = 0;
 28662  00186A  6B64               	clrf	AESCmac@j& (0+255),b
 28663                           
 28664                           ; BSR set to: 1
 28665                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28666  00186C  5163               	movf	AESCmac@n& (0+255),w,b
 28667  00186E  0D10               	mullw	16
 28668  001870  50F3               	movf	prodl,w,c
 28669  001872  0FF0               	addlw	240
 28670  001874  6F65               	movwf	AESCmac@i& (0+255),b
 28671  001876  D01E               	goto	l13039
 28672  001878                     l13033:
 28673                           
 28674                           ; BSR set to: 0
 28675                           ;lorawan_aes_cmac.c: 66: {
 28676                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28677  001878  0E20               	movlw	low AESCmac@mLast
 28678  00187A  0101               	movlb	1	; () banked
 28679  00187C  2564               	addwf	AESCmac@j& (0+255),w,b
 28680  00187E  6ED9               	movwf	fsr2l,c
 28681  001880  6ADA               	clrf	fsr2h,c
 28682  001882  0E01               	movlw	high AESCmac@mLast
 28683  001884  22DA               	addwfc	fsr2h,f,c
 28684  001886  0E10               	movlw	low AESCmac@k1
 28685  001888  2564               	addwf	AESCmac@j& (0+255),w,b
 28686  00188A  6EE9               	movwf	fsr0l,c
 28687  00188C  6AEA               	clrf	fsr0h,c
 28688  00188E  0E01               	movlw	high AESCmac@k1
 28689  001890  22EA               	addwfc	fsr0h,f,c
 28690  001892  50EF               	movf	indf0,w,c
 28691  001894  0100               	movlb	0	; () banked
 28692  001896  6FC3               	movwf	??_AESCmac& (0+255),b
 28693  001898  0101               	movlb	1	; () banked
 28694  00189A  5165               	movf	AESCmac@i& (0+255),w,b
 28695  00189C  0100               	movlb	0	; () banked
 28696  00189E  25C0               	addwf	AESCmac@input& (0+255),w,b
 28697  0018A0  6EE9               	movwf	fsr0l,c
 28698  0018A2  0E00               	movlw	0
 28699  0018A4  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28700  0018A6  6EEA               	movwf	fsr0h,c
 28701  0018A8  50EF               	movf	indf0,w,c
 28702  0018AA  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28703  0018AC  6EDF               	movwf	indf2,c
 28704                           
 28705                           ; BSR set to: 0
 28706                           ;lorawan_aes_cmac.c: 68: j++;
 28707  0018AE  0101               	movlb	1	; () banked
 28708  0018B0  2B64               	incf	AESCmac@j& (0+255),f,b
 28709                           
 28710                           ; BSR set to: 1
 28711  0018B2  2B65               	incf	AESCmac@i& (0+255),f,b
 28712  0018B4                     l13039:
 28713                           
 28714                           ; BSR set to: 1
 28715  0018B4  5163               	movf	AESCmac@n& (0+255),w,b
 28716  0018B6  0100               	movlb	0	; () banked
 28717  0018B8  6FC3               	movwf	??_AESCmac& (0+255),b
 28718  0018BA  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28719  0018BC  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28720  0018BE  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28721  0018C0  0EF0               	movlw	240
 28722  0018C2  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28723  0018C4  51C3               	movf	??_AESCmac& (0+255),w,b
 28724  0018C6  0B0F               	andlw	15
 28725  0018C8  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28726  0018CA  0EF0               	movlw	240
 28727  0018CC  17C3               	andwf	??_AESCmac& (0+255),f,b
 28728  0018CE  0101               	movlb	1	; () banked
 28729  0018D0  5165               	movf	AESCmac@i& (0+255),w,b
 28730  0018D2  0100               	movlb	0	; () banked
 28731  0018D4  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28732  0018D6  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 28733  0018D8  51C3               	movf	??_AESCmac& (0+255),w,b
 28734  0018DA  5DC5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28735  0018DC  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 28736  0018DE  0A80               	xorlw	128
 28737  0018E0  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28738  0018E2  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28739  0018E4  0A80               	xorlw	128
 28740  0018E6  59C7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28741  0018E8  E263               	bc	l13071
 28742  0018EA  D7C6               	goto	l13033
 28743  0018EC                     l13041:
 28744                           
 28745                           ; BSR set to: 1
 28746                           ;lorawan_aes_cmac.c: 71: else
 28747                           ;lorawan_aes_cmac.c: 72: {
 28748                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28749  0018EC  0100               	movlb	0	; () banked
 28750  0018EE  51C2               	movf	AESCmac@size& (0+255),w,b
 28751  0018F0  25C0               	addwf	AESCmac@input& (0+255),w,b
 28752  0018F2  6FC3               	movwf	??_AESCmac& (0+255),b
 28753  0018F4  0E00               	movlw	0
 28754  0018F6  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28755  0018F8  6FC4               	movwf	(??_AESCmac+1)& (0+255),b
 28756  0018FA  51C2               	movf	AESCmac@size& (0+255),w,b
 28757  0018FC  0B0F               	andlw	15
 28758  0018FE  5DC3               	subwf	??_AESCmac& (0+255),w,b
 28759  001900  0101               	movlb	1	; () banked
 28760  001902  6F60               	movwf	AESCmac@ptr& (0+255),b
 28761  001904  0100               	movlb	0	; () banked
 28762  001906  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28763  001908  A0D8               	btfss	status,0,c
 28764  00190A  05C4               	decf	(??_AESCmac+1)& (0+255),w,b
 28765  00190C  0101               	movlb	1	; () banked
 28766  00190E  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28767                           
 28768                           ; BSR set to: 1
 28769                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28770  001910  6B65               	clrf	AESCmac@i& (0+255),b
 28771  001912                     l13047:
 28772                           
 28773                           ; BSR set to: 1
 28774                           ;lorawan_aes_cmac.c: 76: {
 28775                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28776  001912  0100               	movlb	0	; () banked
 28777  001914  51C2               	movf	AESCmac@size& (0+255),w,b
 28778  001916  0B0F               	andlw	15
 28779  001918  0101               	movlb	1	; () banked
 28780  00191A  6165               	cpfslt	AESCmac@i& (0+255),b
 28781  00191C  D00F               	goto	l13051
 28782                           
 28783                           ; BSR set to: 1
 28784                           ;lorawan_aes_cmac.c: 78: {
 28785                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28786  00191E  5165               	movf	AESCmac@i& (0+255),w,b
 28787  001920  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28788  001922  6ED9               	movwf	fsr2l,c
 28789  001924  0E00               	movlw	0
 28790  001926  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28791  001928  6EDA               	movwf	fsr2h,c
 28792  00192A  0E30               	movlw	low AESCmac@padded
 28793  00192C  2565               	addwf	AESCmac@i& (0+255),w,b
 28794  00192E  6EE9               	movwf	fsr0l,c
 28795  001930  6AEA               	clrf	fsr0h,c
 28796  001932  0E01               	movlw	high AESCmac@padded
 28797  001934  22EA               	addwfc	fsr0h,f,c
 28798  001936  CFDF FFEF          	movff	indf2,indf0
 28799                           
 28800                           ;lorawan_aes_cmac.c: 80: }
 28801  00193A  D016               	goto	l13057
 28802  00193C                     l13051:
 28803                           
 28804                           ; BSR set to: 1
 28805                           ;lorawan_aes_cmac.c: 81: else
 28806                           ;lorawan_aes_cmac.c: 82: {
 28807                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28808  00193C  0100               	movlb	0	; () banked
 28809  00193E  51C2               	movf	AESCmac@size& (0+255),w,b
 28810  001940  0B0F               	andlw	15
 28811  001942  0101               	movlb	1	; () banked
 28812  001944  1965               	xorwf	AESCmac@i& (0+255),w,b
 28813  001946  E109               	bnz	l13055
 28814                           
 28815                           ; BSR set to: 1
 28816                           ;lorawan_aes_cmac.c: 84: {
 28817                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28818  001948  0E30               	movlw	low AESCmac@padded
 28819  00194A  2565               	addwf	AESCmac@i& (0+255),w,b
 28820  00194C  6ED9               	movwf	fsr2l,c
 28821  00194E  6ADA               	clrf	fsr2h,c
 28822  001950  0E01               	movlw	high AESCmac@padded
 28823  001952  22DA               	addwfc	fsr2h,f,c
 28824  001954  0E80               	movlw	128
 28825  001956  6EDF               	movwf	indf2,c
 28826                           
 28827                           ;lorawan_aes_cmac.c: 86: }
 28828  001958  D007               	goto	l13057
 28829  00195A                     l13055:
 28830                           
 28831                           ; BSR set to: 1
 28832                           ;lorawan_aes_cmac.c: 87: else
 28833                           ;lorawan_aes_cmac.c: 88: {
 28834                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 28835  00195A  0E30               	movlw	low AESCmac@padded
 28836  00195C  2565               	addwf	AESCmac@i& (0+255),w,b
 28837  00195E  6ED9               	movwf	fsr2l,c
 28838  001960  6ADA               	clrf	fsr2h,c
 28839  001962  0E01               	movlw	high AESCmac@padded
 28840  001964  22DA               	addwfc	fsr2h,f,c
 28841  001966  6ADF               	clrf	indf2,c
 28842  001968                     l13057:
 28843                           
 28844                           ; BSR set to: 1
 28845  001968  2B65               	incf	AESCmac@i& (0+255),f,b
 28846                           
 28847                           ; BSR set to: 1
 28848  00196A  0E0F               	movlw	15
 28849  00196C  6565               	cpfsgt	AESCmac@i& (0+255),b
 28850  00196E  D7D1               	goto	l13047
 28851                           
 28852                           ; BSR set to: 1
 28853                           ;lorawan_aes_cmac.c: 90: }
 28854                           ;lorawan_aes_cmac.c: 91: }
 28855                           ;lorawan_aes_cmac.c: 92: }
 28856                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 28857  001970  6B65               	clrf	AESCmac@i& (0+255),b
 28858  001972                     l13065:
 28859                           
 28860                           ; BSR set to: 1
 28861                           ;lorawan_aes_cmac.c: 96: {
 28862                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 28863  001972  0E20               	movlw	low AESCmac@mLast
 28864  001974  2565               	addwf	AESCmac@i& (0+255),w,b
 28865  001976  6ED9               	movwf	fsr2l,c
 28866  001978  6ADA               	clrf	fsr2h,c
 28867  00197A  0E01               	movlw	high AESCmac@mLast
 28868  00197C  22DA               	addwfc	fsr2h,f,c
 28869  00197E  0E00               	movlw	low AESCmac@k2
 28870  001980  2565               	addwf	AESCmac@i& (0+255),w,b
 28871  001982  6EE9               	movwf	fsr0l,c
 28872  001984  6AEA               	clrf	fsr0h,c
 28873  001986  0E01               	movlw	high AESCmac@k2
 28874  001988  22EA               	addwfc	fsr0h,f,c
 28875  00198A  50EF               	movf	indf0,w,c
 28876  00198C  0100               	movlb	0	; () banked
 28877  00198E  6FC3               	movwf	??_AESCmac& (0+255),b
 28878  001990  0E30               	movlw	low AESCmac@padded
 28879  001992  0101               	movlb	1	; () banked
 28880  001994  2565               	addwf	AESCmac@i& (0+255),w,b
 28881  001996  6EE9               	movwf	fsr0l,c
 28882  001998  6AEA               	clrf	fsr0h,c
 28883  00199A  0E01               	movlw	high AESCmac@padded
 28884  00199C  22EA               	addwfc	fsr0h,f,c
 28885  00199E  50EF               	movf	indf0,w,c
 28886  0019A0  0100               	movlb	0	; () banked
 28887  0019A2  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28888  0019A4  6EDF               	movwf	indf2,c
 28889                           
 28890                           ; BSR set to: 0
 28891  0019A6  0101               	movlb	1	; () banked
 28892  0019A8  2B65               	incf	AESCmac@i& (0+255),f,b
 28893                           
 28894                           ; BSR set to: 1
 28895  0019AA  0E0F               	movlw	15
 28896  0019AC  6565               	cpfsgt	AESCmac@i& (0+255),b
 28897  0019AE  D7E1               	goto	l13065
 28898  0019B0                     l13071:
 28899                           
 28900                           ;lorawan_aes_cmac.c: 98: }
 28901                           ;lorawan_aes_cmac.c: 99: }
 28902                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 28903  0019B0  0E50               	movlw	low AESCmac@x
 28904  0019B2  0100               	movlb	0	; () banked
 28905  0019B4  6F64               	movwf	memset@p1& (0+255),b
 28906  0019B6  0E01               	movlw	high AESCmac@x
 28907  0019B8  6F65               	movwf	(memset@p1+1)& (0+255),b
 28908  0019BA  6B67               	clrf	(memset@c+1)& (0+255),b
 28909  0019BC  6B66               	clrf	memset@c& (0+255),b
 28910  0019BE  6B69               	clrf	(memset@n+1)& (0+255),b
 28911  0019C0  0E10               	movlw	16
 28912  0019C2  6F68               	movwf	memset@n& (0+255),b
 28913  0019C4  ECDC  F038         	call	_memset	;wreg free
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 28917  0019C8  0101               	movlb	1	; () banked
 28918  0019CA  6B65               	clrf	AESCmac@i& (0+255),b
 28919  0019CC  D051               	goto	l13089
 28920  0019CE                     l1469:
 28921                           
 28922                           ; BSR set to: 0
 28923                           ;lorawan_aes_cmac.c: 104: {
 28924                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 28925  0019CE  0101               	movlb	1	; () banked
 28926  0019D0  6B64               	clrf	AESCmac@j& (0+255),b
 28927  0019D2                     l13079:
 28928                           
 28929                           ; BSR set to: 1
 28930                           ;lorawan_aes_cmac.c: 106: {
 28931                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 28932  0019D2  0E40               	movlw	low AESCmac@y
 28933  0019D4  2564               	addwf	AESCmac@j& (0+255),w,b
 28934  0019D6  6ED9               	movwf	fsr2l,c
 28935  0019D8  6ADA               	clrf	fsr2h,c
 28936  0019DA  0E01               	movlw	high AESCmac@y
 28937  0019DC  22DA               	addwfc	fsr2h,f,c
 28938  0019DE  5165               	movf	AESCmac@i& (0+255),w,b
 28939  0019E0  0100               	movlb	0	; () banked
 28940  0019E2  6FC3               	movwf	??_AESCmac& (0+255),b
 28941  0019E4  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28942  0019E6  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28943  0019E8  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28944  0019EA  0EF0               	movlw	240
 28945  0019EC  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28946  0019EE  51C3               	movf	??_AESCmac& (0+255),w,b
 28947  0019F0  0B0F               	andlw	15
 28948  0019F2  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28949  0019F4  0EF0               	movlw	240
 28950  0019F6  17C3               	andwf	??_AESCmac& (0+255),f,b
 28951  0019F8  C0C0  F0C5         	movff	AESCmac@input,??_AESCmac+2
 28952  0019FC  C0C1  F0C6         	movff	AESCmac@input+1,??_AESCmac+3
 28953  001A00  51C3               	movf	??_AESCmac& (0+255),w,b
 28954  001A02  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 28955  001A04  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28956  001A06  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 28957  001A08  0101               	movlb	1	; () banked
 28958  001A0A  5164               	movf	AESCmac@j& (0+255),w,b
 28959  001A0C  0100               	movlb	0	; () banked
 28960  001A0E  25C5               	addwf	(??_AESCmac+2)& (0+255),w,b
 28961  001A10  6EE9               	movwf	fsr0l,c
 28962  001A12  0E00               	movlw	0
 28963  001A14  21C6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 28964  001A16  6EEA               	movwf	fsr0h,c
 28965  001A18  50EF               	movf	indf0,w,c
 28966  001A1A  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28967  001A1C  0E50               	movlw	low AESCmac@x
 28968  001A1E  0101               	movlb	1	; () banked
 28969  001A20  2564               	addwf	AESCmac@j& (0+255),w,b
 28970  001A22  6EE9               	movwf	fsr0l,c
 28971  001A24  6AEA               	clrf	fsr0h,c
 28972  001A26  0E01               	movlw	high AESCmac@x
 28973  001A28  22EA               	addwfc	fsr0h,f,c
 28974  001A2A  50EF               	movf	indf0,w,c
 28975  001A2C  0100               	movlb	0	; () banked
 28976  001A2E  19C7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 28977  001A30  6EDF               	movwf	indf2,c
 28978                           
 28979                           ; BSR set to: 0
 28980  001A32  0101               	movlb	1	; () banked
 28981  001A34  2B64               	incf	AESCmac@j& (0+255),f,b
 28982                           
 28983                           ; BSR set to: 1
 28984  001A36  0E0F               	movlw	15
 28985  001A38  6564               	cpfsgt	AESCmac@j& (0+255),b
 28986  001A3A  D7CB               	goto	l13079
 28987                           
 28988                           ; BSR set to: 1
 28989                           ;lorawan_aes_cmac.c: 108: }
 28990                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 28991  001A3C  0E50               	movlw	low AESCmac@x
 28992  001A3E  0100               	movlb	0	; () banked
 28993  001A40  6F64               	movwf	memcpy@d1& (0+255),b
 28994  001A42  0E01               	movlw	high AESCmac@x
 28995  001A44  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 28996  001A46  0E40               	movlw	low AESCmac@y
 28997  001A48  6F66               	movwf	memcpy@s1& (0+255),b
 28998  001A4A  0E01               	movlw	high AESCmac@y
 28999  001A4C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29000  001A4E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29001  001A50  0E10               	movlw	16
 29002  001A52  6F68               	movwf	memcpy@n& (0+255),b
 29003  001A54  ECFF  F033         	call	_memcpy	;wreg free
 29004                           
 29005                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29006  001A58  0E50               	movlw	low AESCmac@x
 29007  001A5A  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29008  001A5C  0E01               	movlw	high AESCmac@x
 29009  001A5E  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29010  001A60  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29011  001A64  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29012  001A68  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 29013                           
 29014                           ; BSR set to: 0
 29015  001A6C  0101               	movlb	1	; () banked
 29016  001A6E  2B65               	incf	AESCmac@i& (0+255),f,b
 29017  001A70                     l13089:
 29018                           
 29019                           ; BSR set to: 1
 29020  001A70  0100               	movlb	0	; () banked
 29021  001A72  69C3               	setf	??_AESCmac& (0+255),b
 29022  001A74  69C4               	setf	(??_AESCmac+1)& (0+255),b
 29023  001A76  0101               	movlb	1	; () banked
 29024  001A78  5163               	movf	AESCmac@n& (0+255),w,b
 29025  001A7A  0100               	movlb	0	; () banked
 29026  001A7C  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 29027  001A7E  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 29028  001A80  51C3               	movf	??_AESCmac& (0+255),w,b
 29029  001A82  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29030  001A84  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29031  001A86  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29032  001A88  0101               	movlb	1	; () banked
 29033  001A8A  5165               	movf	AESCmac@i& (0+255),w,b
 29034  001A8C  0100               	movlb	0	; () banked
 29035  001A8E  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29036  001A90  6BC8               	clrf	(??_AESCmac+5)& (0+255),b
 29037  001A92  51C5               	movf	(??_AESCmac+2)& (0+255),w,b
 29038  001A94  5DC7               	subwf	(??_AESCmac+4)& (0+255),w,b
 29039  001A96  51C8               	movf	(??_AESCmac+5)& (0+255),w,b
 29040  001A98  0A80               	xorlw	128
 29041  001A9A  6FC9               	movwf	(??_AESCmac+6)& (0+255),b
 29042  001A9C  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 29043  001A9E  0A80               	xorlw	128
 29044  001AA0  59C9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29045  001AA2  E395               	bnc	l1469
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;lorawan_aes_cmac.c: 111: }
 29049                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29050  001AA4  0101               	movlb	1	; () banked
 29051  001AA6  6B65               	clrf	AESCmac@i& (0+255),b
 29052  001AA8                     l13095:
 29053                           
 29054                           ; BSR set to: 1
 29055                           ;lorawan_aes_cmac.c: 114: {
 29056                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29057  001AA8  0E40               	movlw	low AESCmac@y
 29058  001AAA  2565               	addwf	AESCmac@i& (0+255),w,b
 29059  001AAC  6ED9               	movwf	fsr2l,c
 29060  001AAE  6ADA               	clrf	fsr2h,c
 29061  001AB0  0E01               	movlw	high AESCmac@y
 29062  001AB2  22DA               	addwfc	fsr2h,f,c
 29063  001AB4  0E20               	movlw	low AESCmac@mLast
 29064  001AB6  2565               	addwf	AESCmac@i& (0+255),w,b
 29065  001AB8  6EE9               	movwf	fsr0l,c
 29066  001ABA  6AEA               	clrf	fsr0h,c
 29067  001ABC  0E01               	movlw	high AESCmac@mLast
 29068  001ABE  22EA               	addwfc	fsr0h,f,c
 29069  001AC0  50EF               	movf	indf0,w,c
 29070  001AC2  0100               	movlb	0	; () banked
 29071  001AC4  6FC3               	movwf	??_AESCmac& (0+255),b
 29072  001AC6  0E50               	movlw	low AESCmac@x
 29073  001AC8  0101               	movlb	1	; () banked
 29074  001ACA  2565               	addwf	AESCmac@i& (0+255),w,b
 29075  001ACC  6EE9               	movwf	fsr0l,c
 29076  001ACE  6AEA               	clrf	fsr0h,c
 29077  001AD0  0E01               	movlw	high AESCmac@x
 29078  001AD2  22EA               	addwfc	fsr0h,f,c
 29079  001AD4  50EF               	movf	indf0,w,c
 29080  001AD6  0100               	movlb	0	; () banked
 29081  001AD8  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29082  001ADA  6EDF               	movwf	indf2,c
 29083                           
 29084                           ; BSR set to: 0
 29085  001ADC  0101               	movlb	1	; () banked
 29086  001ADE  2B65               	incf	AESCmac@i& (0+255),f,b
 29087                           
 29088                           ; BSR set to: 1
 29089  001AE0  0E0F               	movlw	15
 29090  001AE2  6565               	cpfsgt	AESCmac@i& (0+255),b
 29091  001AE4  D7E1               	goto	l13095
 29092                           
 29093                           ; BSR set to: 1
 29094                           ;lorawan_aes_cmac.c: 116: }
 29095                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29096  001AE6  0E40               	movlw	low AESCmac@y
 29097  001AE8  0100               	movlb	0	; () banked
 29098  001AEA  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29099  001AEC  0E01               	movlw	high AESCmac@y
 29100  001AEE  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29101  001AF0  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29102  001AF4  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29103  001AF8  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 29104                           
 29105                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29106  001AFC  C0BE  F064         	movff	AESCmac@output,memcpy@d1
 29107  001B00  C0BF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 29108  001B04  0E40               	movlw	low AESCmac@y
 29109  001B06  6F66               	movwf	memcpy@s1& (0+255),b
 29110  001B08  0E01               	movlw	high AESCmac@y
 29111  001B0A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29112  001B0C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29113  001B0E  0E10               	movlw	16
 29114  001B10  6F68               	movwf	memcpy@n& (0+255),b
 29115  001B12  EFFF  F033         	goto	_memcpy	;wreg free
 29116  001B16                     __end_of_AESCmac:
 29117                           	opt stack 0
 29118                           tosu	equ	0xFFF
 29119                           tosh	equ	0xFFE
 29120                           tosl	equ	0xFFD
 29121                           pclath	equ	0xFFA
 29122                           tblptru	equ	0xFF8
 29123                           tblptrh	equ	0xFF7
 29124                           tblptrl	equ	0xFF6
 29125                           tablat	equ	0xFF5
 29126                           prodh	equ	0xFF4
 29127                           prodl	equ	0xFF3
 29128                           intcon	equ	0xFF2
 29129                           intcon2	equ	0xFF1
 29130                           intcon3	equ	0xFF0
 29131                           indf0	equ	0xFEF
 29132                           postinc0	equ	0xFEE
 29133                           fsr0h	equ	0xFEA
 29134                           fsr0l	equ	0xFE9
 29135                           wreg	equ	0xFE8
 29136                           postinc1	equ	0xFE6
 29137                           postdec1	equ	0xFE5
 29138                           plusw1	equ	0xFE3
 29139                           fsr1h	equ	0xFE2
 29140                           fsr1l	equ	0xFE1
 29141                           indf2	equ	0xFDF
 29142                           postinc2	equ	0xFDE
 29143                           postdec2	equ	0xFDD
 29144                           plusw2	equ	0xFDB
 29145                           fsr2h	equ	0xFDA
 29146                           fsr2l	equ	0xFD9
 29147                           status	equ	0xFD8
 29148                           
 29149 ;; *************** function _GenerateSubkey *****************
 29150 ;; Defined at:
 29151 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29152 ;; Parameters:    Size  Location     Type
 29153 ;;  key             2   52[BANK0 ] PTR unsigned char 
 29154 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29155 ;;  k1              2   54[BANK0 ] PTR unsigned char 
 29156 ;;		 -> AESCmac@k1(16), 
 29157 ;;  k2              2   56[BANK0 ] PTR unsigned char 
 29158 ;;		 -> AESCmac@k2(16), 
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;  l              16   75[BANK0 ] unsigned char [16]
 29161 ;;  const_Rb       16   59[BANK0 ] unsigned char [16]
 29162 ;;  i               1   91[BANK0 ] unsigned char 
 29163 ;; Return value:  Size  Location     Type
 29164 ;;                  1    wreg      void 
 29165 ;; Registers used:
 29166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29167 ;; Tracked objects:
 29168 ;;		On entry : F/0
 29169 ;;		On exit  : F/0
 29170 ;;		Unchanged: 0/0
 29171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29172 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29173 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29175 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29176 ;;Total ram usage:       40 bytes
 29177 ;; Hardware stack levels used:    1
 29178 ;; Hardware stack levels required when called:   10
 29179 ;; This function calls:
 29180 ;;		_AESEncodeLoRa
 29181 ;;		_FillSubKey
 29182 ;;		_memset
 29183 ;; This function is called by:
 29184 ;;		_AESCmac
 29185 ;; This function uses a non-reentrant model
 29186 ;;
 29187                           
 29188                           	psect	text152
 29189  004864                     __ptext152:
 29190                           	opt stack 0
 29191  004864                     _GenerateSubkey:
 29192                           	opt stack 16
 29193                           
 29194                           ; BSR set to: 0
 29195                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29196                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29197                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29198                           
 29199                           ; BSR set to: 0
 29200                           
 29201                           ; BSR set to: 0
 29202                           ;incstack = 0
 29203  004864  EE21  F0C8         	lfsr	2,GenerateSubkey@F7870
 29204  004868  EE00  F09B         	lfsr	0,GenerateSubkey@const_Rb
 29205  00486C  0E0F               	movlw	15
 29206  00486E                     u13591:
 29207  00486E  CFDB FFEB          	movff	plusw2,plusw0
 29208  004872  06E8               	decf	wreg,f,c
 29209  004874  E2FC               	bc	u13591
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29213  004876  0EAB               	movlw	low GenerateSubkey@l
 29214  004878  6F64               	movwf	memset@p1& (0+255),b
 29215  00487A  6B65               	clrf	(memset@p1+1)& (0+255),b
 29216  00487C  6B67               	clrf	(memset@c+1)& (0+255),b
 29217  00487E  6B66               	clrf	memset@c& (0+255),b
 29218  004880  6B69               	clrf	(memset@n+1)& (0+255),b
 29219  004882  0E10               	movlw	16
 29220  004884  6F68               	movwf	memset@n& (0+255),b
 29221  004886  ECDC  F038         	call	_memset	;wreg free
 29222                           
 29223                           ; BSR set to: 0
 29224                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29225  00488A  0EAB               	movlw	low GenerateSubkey@l
 29226  00488C  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29227  00488E  6B81               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29228  004890  C094  F082         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29229  004894  C095  F083         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29230  004898  EC19  F039         	call	_AESEncodeLoRa	;wreg free
 29231                           
 29232                           ; BSR set to: 0
 29233                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29234  00489C  BFAB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29235  00489E  D00C               	goto	l12669
 29236                           
 29237                           ; BSR set to: 0
 29238                           ;lorawan_aes_cmac.c: 138: {
 29239                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29240  0048A0  0EAB               	movlw	low GenerateSubkey@l
 29241  0048A2  6F64               	movwf	FillSubKey@source& (0+255),b
 29242  0048A4  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29243  0048A6  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29244  0048AA  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29245  0048AE  0E10               	movlw	16
 29246  0048B0  6F68               	movwf	FillSubKey@size& (0+255),b
 29247  0048B2  EC8D  F035         	call	_FillSubKey	;wreg free
 29248                           
 29249                           ;lorawan_aes_cmac.c: 140: }
 29250  0048B6  D01E               	goto	l12683
 29251  0048B8                     l12669:
 29252                           
 29253                           ; BSR set to: 0
 29254                           ;lorawan_aes_cmac.c: 141: else
 29255                           ;lorawan_aes_cmac.c: 142: {
 29256                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29257  0048B8  0EAB               	movlw	low GenerateSubkey@l
 29258  0048BA  6F64               	movwf	FillSubKey@source& (0+255),b
 29259  0048BC  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29260  0048BE  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29261  0048C2  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29262  0048C6  0E10               	movlw	16
 29263  0048C8  6F68               	movwf	FillSubKey@size& (0+255),b
 29264  0048CA  EC8D  F035         	call	_FillSubKey	;wreg free
 29265                           
 29266                           ; BSR set to: 0
 29267                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29268  0048CE  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29269  0048D0                     l12677:
 29270                           
 29271                           ; BSR set to: 0
 29272                           ;lorawan_aes_cmac.c: 146: {
 29273                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29274  0048D0  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29275  0048D2  0F9B               	addlw	low GenerateSubkey@const_Rb
 29276  0048D4  6ED9               	movwf	fsr2l,c
 29277  0048D6  6ADA               	clrf	fsr2h,c
 29278  0048D8  50DF               	movf	indf2,w,c
 29279  0048DA  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29280  0048DC  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29281  0048DE  2596               	addwf	GenerateSubkey@k1& (0+255),w,b
 29282  0048E0  6ED9               	movwf	fsr2l,c
 29283  0048E2  0E00               	movlw	0
 29284  0048E4  2197               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29285  0048E6  6EDA               	movwf	fsr2h,c
 29286  0048E8  519A               	movf	??_GenerateSubkey& (0+255),w,b
 29287  0048EA  1ADF               	xorwf	indf2,f,c
 29288                           
 29289                           ; BSR set to: 0
 29290  0048EC  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29291                           
 29292                           ; BSR set to: 0
 29293  0048EE  0E0F               	movlw	15
 29294  0048F0  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29295  0048F2  D7EE               	goto	l12677
 29296  0048F4                     l12683:
 29297                           
 29298                           ; BSR set to: 0
 29299                           ;lorawan_aes_cmac.c: 148: }
 29300                           ;lorawan_aes_cmac.c: 149: }
 29301                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29302  0048F4  C096  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29303  0048F8  C097  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29304  0048FC  BEDF               	btfsc	indf2,7,c
 29305  0048FE  D00C               	goto	l12687
 29306                           
 29307                           ; BSR set to: 0
 29308                           ;lorawan_aes_cmac.c: 153: {
 29309                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29310  004900  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29311  004904  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29312  004908  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29313  00490C  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29314  004910  0E10               	movlw	16
 29315  004912  6F68               	movwf	FillSubKey@size& (0+255),b
 29316  004914  EF8D  F035         	goto	_FillSubKey	;wreg free
 29317  004918                     l12687:
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;lorawan_aes_cmac.c: 156: else
 29321                           ;lorawan_aes_cmac.c: 157: {
 29322                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29323  004918  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29324  00491C  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29325  004920  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29326  004924  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29327  004928  0E10               	movlw	16
 29328  00492A  6F68               	movwf	FillSubKey@size& (0+255),b
 29329  00492C  EC8D  F035         	call	_FillSubKey	;wreg free
 29330                           
 29331                           ; BSR set to: 0
 29332                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29333  004930  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29334  004932                     l12695:
 29335                           
 29336                           ; BSR set to: 0
 29337                           ;lorawan_aes_cmac.c: 161: {
 29338                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29339  004932  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29340  004934  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29341  004936  6ED9               	movwf	fsr2l,c
 29342  004938  0E00               	movlw	0
 29343  00493A  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29344  00493C  6EDA               	movwf	fsr2h,c
 29345  00493E  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29346  004940  0F9B               	addlw	low GenerateSubkey@const_Rb
 29347  004942  6EE9               	movwf	fsr0l,c
 29348  004944  6AEA               	clrf	fsr0h,c
 29349  004946  50EF               	movf	indf0,w,c
 29350  004948  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29351  00494A  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29352  00494C  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29353  00494E  6EE9               	movwf	fsr0l,c
 29354  004950  0E00               	movlw	0
 29355  004952  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29356  004954  6EEA               	movwf	fsr0h,c
 29357  004956  50EF               	movf	indf0,w,c
 29358  004958  199A               	xorwf	??_GenerateSubkey& (0+255),w,b
 29359  00495A  6EDF               	movwf	indf2,c
 29360                           
 29361                           ; BSR set to: 0
 29362  00495C  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29363                           
 29364                           ; BSR set to: 0
 29365  00495E  0E0F               	movlw	15
 29366  004960  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29367  004962  D7E7               	goto	l12695
 29368  004964  0C0F               	retlw	15
 29369  004966                     __end_of_GenerateSubkey:
 29370                           	opt stack 0
 29371                           tosu	equ	0xFFF
 29372                           tosh	equ	0xFFE
 29373                           tosl	equ	0xFFD
 29374                           pclath	equ	0xFFA
 29375                           tblptru	equ	0xFF8
 29376                           tblptrh	equ	0xFF7
 29377                           tblptrl	equ	0xFF6
 29378                           tablat	equ	0xFF5
 29379                           prodh	equ	0xFF4
 29380                           prodl	equ	0xFF3
 29381                           intcon	equ	0xFF2
 29382                           intcon2	equ	0xFF1
 29383                           intcon3	equ	0xFF0
 29384                           indf0	equ	0xFEF
 29385                           postinc0	equ	0xFEE
 29386                           plusw0	equ	0xFEB
 29387                           fsr0h	equ	0xFEA
 29388                           fsr0l	equ	0xFE9
 29389                           wreg	equ	0xFE8
 29390                           postinc1	equ	0xFE6
 29391                           postdec1	equ	0xFE5
 29392                           plusw1	equ	0xFE3
 29393                           fsr1h	equ	0xFE2
 29394                           fsr1l	equ	0xFE1
 29395                           indf2	equ	0xFDF
 29396                           postinc2	equ	0xFDE
 29397                           postdec2	equ	0xFDD
 29398                           plusw2	equ	0xFDB
 29399                           fsr2h	equ	0xFDA
 29400                           fsr2l	equ	0xFD9
 29401                           status	equ	0xFD8
 29402                           
 29403 ;; *************** function _FillSubKey *****************
 29404 ;; Defined at:
 29405 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29406 ;; Parameters:    Size  Location     Type
 29407 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29408 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29409 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29410 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29411 ;;  size            1    8[BANK0 ] unsigned char 
 29412 ;; Auto vars:     Size  Location     Type
 29413 ;;  i               1   11[BANK0 ] unsigned char 
 29414 ;;  carry           1   10[BANK0 ] unsigned char 
 29415 ;; Return value:  Size  Location     Type
 29416 ;;                  1    wreg      void 
 29417 ;; Registers used:
 29418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29419 ;; Tracked objects:
 29420 ;;		On entry : F/0
 29421 ;;		On exit  : F/0
 29422 ;;		Unchanged: 0/0
 29423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29424 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29426 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29427 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29428 ;;Total ram usage:        8 bytes
 29429 ;; Hardware stack levels used:    1
 29430 ;; Hardware stack levels required when called:    7
 29431 ;; This function calls:
 29432 ;;		Nothing
 29433 ;; This function is called by:
 29434 ;;		_GenerateSubkey
 29435 ;; This function uses a non-reentrant model
 29436 ;;
 29437                           
 29438                           	psect	text153
 29439  006B1A                     __ptext153:
 29440                           	opt stack 0
 29441  006B1A                     _FillSubKey:
 29442                           	opt stack 18
 29443                           
 29444                           ; BSR set to: 0
 29445                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29446                           
 29447                           ; BSR set to: 0
 29448                           ;incstack = 0
 29449  006B1A  6B6B               	clrf	FillSubKey@i& (0+255),b
 29450                           
 29451                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29452  006B1C  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29453                           
 29454                           ;lorawan_aes_cmac.c: 172: i=size;
 29455  006B1E  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29456                           
 29457                           ;lorawan_aes_cmac.c: 174: while(i--)
 29458  006B22  D01C               	goto	l12385
 29459  006B24                     l12381:
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;lorawan_aes_cmac.c: 175: {
 29463                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29464  006B24  516B               	movf	FillSubKey@i& (0+255),w,b
 29465  006B26  2566               	addwf	FillSubKey@key& (0+255),w,b
 29466  006B28  6ED9               	movwf	fsr2l,c
 29467  006B2A  0E00               	movlw	0
 29468  006B2C  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29469  006B2E  6EDA               	movwf	fsr2h,c
 29470  006B30  516B               	movf	FillSubKey@i& (0+255),w,b
 29471  006B32  2564               	addwf	FillSubKey@source& (0+255),w,b
 29472  006B34  6EE9               	movwf	fsr0l,c
 29473  006B36  0E00               	movlw	0
 29474  006B38  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29475  006B3A  6EEA               	movwf	fsr0h,c
 29476  006B3C  50EF               	movf	indf0,w,c
 29477  006B3E  6F69               	movwf	??_FillSubKey& (0+255),b
 29478  006B40  90D8               	bcf	status,0,c
 29479  006B42  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29480  006B44  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29481  006B46  6EDF               	movwf	indf2,c
 29482                           
 29483                           ; BSR set to: 0
 29484                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29485  006B48  516B               	movf	FillSubKey@i& (0+255),w,b
 29486  006B4A  2564               	addwf	FillSubKey@source& (0+255),w,b
 29487  006B4C  6ED9               	movwf	fsr2l,c
 29488  006B4E  0E00               	movlw	0
 29489  006B50  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29490  006B52  6EDA               	movwf	fsr2h,c
 29491  006B54  0E01               	movlw	1
 29492  006B56  AEDF               	btfss	indf2,7,c
 29493  006B58  0E00               	movlw	0
 29494  006B5A  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29495  006B5C                     l12385:
 29496                           
 29497                           ; BSR set to: 0
 29498  006B5C  076B               	decf	FillSubKey@i& (0+255),f,b
 29499  006B5E  296B               	incf	FillSubKey@i& (0+255),w,b
 29500  006B60  E1E1               	bnz	l12381
 29501                           
 29502                           ; BSR set to: 0
 29503  006B62  0012               	return		;funcret
 29504  006B64                     __end_of_FillSubKey:
 29505                           	opt stack 0
 29506                           tosu	equ	0xFFF
 29507                           tosh	equ	0xFFE
 29508                           tosl	equ	0xFFD
 29509                           pclath	equ	0xFFA
 29510                           tblptru	equ	0xFF8
 29511                           tblptrh	equ	0xFF7
 29512                           tblptrl	equ	0xFF6
 29513                           tablat	equ	0xFF5
 29514                           prodh	equ	0xFF4
 29515                           prodl	equ	0xFF3
 29516                           intcon	equ	0xFF2
 29517                           intcon2	equ	0xFF1
 29518                           intcon3	equ	0xFF0
 29519                           indf0	equ	0xFEF
 29520                           postinc0	equ	0xFEE
 29521                           plusw0	equ	0xFEB
 29522                           fsr0h	equ	0xFEA
 29523                           fsr0l	equ	0xFE9
 29524                           wreg	equ	0xFE8
 29525                           postinc1	equ	0xFE6
 29526                           postdec1	equ	0xFE5
 29527                           plusw1	equ	0xFE3
 29528                           fsr1h	equ	0xFE2
 29529                           fsr1l	equ	0xFE1
 29530                           indf2	equ	0xFDF
 29531                           postinc2	equ	0xFDE
 29532                           postdec2	equ	0xFDD
 29533                           plusw2	equ	0xFDB
 29534                           fsr2h	equ	0xFDA
 29535                           fsr2l	equ	0xFD9
 29536                           status	equ	0xFD8
 29537                           
 29538 ;; *************** function _AESEncodeLoRa *****************
 29539 ;; Defined at:
 29540 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29541 ;; Parameters:    Size  Location     Type
 29542 ;;  block           2   32[BANK0 ] PTR unsigned char 
 29543 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29544 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29545 ;;  key             2   34[BANK0 ] PTR unsigned char 
 29546 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29547 ;; Auto vars:     Size  Location     Type
 29548 ;;  useKey         16   36[BANK0 ] unsigned char [16]
 29549 ;; Return value:  Size  Location     Type
 29550 ;;                  1    wreg      void 
 29551 ;; Registers used:
 29552 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29553 ;; Tracked objects:
 29554 ;;		On entry : F/0
 29555 ;;		On exit  : F/0
 29556 ;;		Unchanged: 0/0
 29557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29559 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29561 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29562 ;;Total ram usage:       20 bytes
 29563 ;; Hardware stack levels used:    1
 29564 ;; Hardware stack levels required when called:    9
 29565 ;; This function calls:
 29566 ;;		_AESEncode
 29567 ;;		_memcpy
 29568 ;; This function is called by:
 29569 ;;		_AESCmac
 29570 ;;		_GenerateSubkey
 29571 ;;		_LORAWAN_RxDone
 29572 ;;		_ComputeSessionKeys
 29573 ;;		_EncryptFRMPayload
 29574 ;; This function uses a non-reentrant model
 29575 ;;
 29576                           
 29577                           	psect	text154
 29578  007232                     __ptext154:
 29579                           	opt stack 0
 29580  007232                     _AESEncodeLoRa:
 29581                           	opt stack 17
 29582                           
 29583                           ; BSR set to: 0
 29584                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29585                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29586                           
 29587                           ; BSR set to: 0
 29588                           ;incstack = 0
 29589  007232  0E84               	movlw	low AESEncodeLoRa@useKey
 29590  007234  6F64               	movwf	memcpy@d1& (0+255),b
 29591  007236  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29592  007238  C082  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29593  00723C  C083  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29594  007240  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29595  007242  0E10               	movlw	16
 29596  007244  6F68               	movwf	memcpy@n& (0+255),b
 29597  007246  ECFF  F033         	call	_memcpy	;wreg free
 29598                           
 29599                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29600  00724A  C080  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29601  00724E  C081  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29602  007252  0E84               	movlw	low AESEncodeLoRa@useKey
 29603  007254  6F6C               	movwf	AESEncode@key& (0+255),b
 29604  007256  EFF5  F011         	goto	_AESEncode	;wreg free
 29605  00725A                     __end_of_AESEncodeLoRa:
 29606                           	opt stack 0
 29607                           tosu	equ	0xFFF
 29608                           tosh	equ	0xFFE
 29609                           tosl	equ	0xFFD
 29610                           pclath	equ	0xFFA
 29611                           tblptru	equ	0xFF8
 29612                           tblptrh	equ	0xFF7
 29613                           tblptrl	equ	0xFF6
 29614                           tablat	equ	0xFF5
 29615                           prodh	equ	0xFF4
 29616                           prodl	equ	0xFF3
 29617                           intcon	equ	0xFF2
 29618                           intcon2	equ	0xFF1
 29619                           intcon3	equ	0xFF0
 29620                           indf0	equ	0xFEF
 29621                           postinc0	equ	0xFEE
 29622                           plusw0	equ	0xFEB
 29623                           fsr0h	equ	0xFEA
 29624                           fsr0l	equ	0xFE9
 29625                           wreg	equ	0xFE8
 29626                           postinc1	equ	0xFE6
 29627                           postdec1	equ	0xFE5
 29628                           plusw1	equ	0xFE3
 29629                           fsr1h	equ	0xFE2
 29630                           fsr1l	equ	0xFE1
 29631                           indf2	equ	0xFDF
 29632                           postinc2	equ	0xFDE
 29633                           postdec2	equ	0xFDD
 29634                           plusw2	equ	0xFDB
 29635                           fsr2h	equ	0xFDA
 29636                           fsr2l	equ	0xFD9
 29637                           status	equ	0xFD8
 29638                           
 29639 ;; *************** function _AESEncode *****************
 29640 ;; Defined at:
 29641 ;;		line 217 in file "mcc_generated_files/LoRaWAN/AES.c"
 29642 ;; Parameters:    Size  Location     Type
 29643 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29644 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29645 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29646 ;;  key             1   12[BANK0 ] PTR unsigned char 
 29647 ;;		 -> AESEncodeLoRa@useKey(16), 
 29648 ;; Auto vars:     Size  Location     Type
 29649 ;;  aux3            1   30[BANK0 ] unsigned char 
 29650 ;;  aux1            1   29[BANK0 ] unsigned char 
 29651 ;;  aux2            1   28[BANK0 ] unsigned char 
 29652 ;;  aux             1   27[BANK0 ] unsigned char 
 29653 ;;  i               1   31[BANK0 ] unsigned char 
 29654 ;;  temp            1    0        unsigned char 
 29655 ;; Return value:  Size  Location     Type
 29656 ;;                  1    wreg      void 
 29657 ;; Registers used:
 29658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29659 ;; Tracked objects:
 29660 ;;		On entry : F/0
 29661 ;;		On exit  : F/0
 29662 ;;		Unchanged: 0/0
 29663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29664 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29665 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29666 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29667 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29668 ;;Total ram usage:       22 bytes
 29669 ;; Hardware stack levels used:    1
 29670 ;; Hardware stack levels required when called:    8
 29671 ;; This function calls:
 29672 ;;		_EncKeySchedule
 29673 ;;		_EncodeShiftRow
 29674 ;; This function is called by:
 29675 ;;		_AESEncodeLoRa
 29676 ;; This function uses a non-reentrant model
 29677 ;;
 29678                           
 29679                           	psect	text155
 29680  0023EA                     __ptext155:
 29681                           	opt stack 0
 29682  0023EA                     _AESEncode:
 29683                           	opt stack 17
 29684                           
 29685                           ; BSR set to: 0
 29686                           ;AES.c: 219: unsigned char i;
 29687                           ;AES.c: 220: unsigned char temp;
 29688                           ;AES.c: 223: _roundCounter = 10;
 29689                           
 29690                           ; BSR set to: 0
 29691                           ;incstack = 0
 29692  0023EA  0E0A               	movlw	10
 29693  0023EC  6E44               	movwf	__roundCounter,c
 29694                           
 29695                           ;AES.c: 225: _rcon = 0x01;
 29696  0023EE  0E01               	movlw	1
 29697  0023F0  6FEE               	movwf	__rcon& (0+255),b
 29698                           
 29699                           ; BSR set to: 0
 29700                           ;AES.c: 228: for(i=0;i<16;i++)
 29701  0023F2  6B7F               	clrf	AESEncode@i& (0+255),b
 29702  0023F4                     l11999:
 29703                           
 29704                           ; BSR set to: 0
 29705                           ;AES.c: 229: {
 29706                           ;AES.c: 230: block[i] ^= key[i];
 29707  0023F4  516C               	movf	AESEncode@key& (0+255),w,b
 29708  0023F6  257F               	addwf	AESEncode@i& (0+255),w,b
 29709  0023F8  6ED9               	movwf	fsr2l,c
 29710  0023FA  6ADA               	clrf	fsr2h,c
 29711  0023FC  50DF               	movf	indf2,w,c
 29712  0023FE  6F6D               	movwf	??_AESEncode& (0+255),b
 29713  002400  517F               	movf	AESEncode@i& (0+255),w,b
 29714  002402  256A               	addwf	AESEncode@block& (0+255),w,b
 29715  002404  6ED9               	movwf	fsr2l,c
 29716  002406  0E00               	movlw	0
 29717  002408  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29718  00240A  6EDA               	movwf	fsr2h,c
 29719  00240C  516D               	movf	??_AESEncode& (0+255),w,b
 29720  00240E  1ADF               	xorwf	indf2,f,c
 29721                           
 29722                           ; BSR set to: 0
 29723  002410  2B7F               	incf	AESEncode@i& (0+255),f,b
 29724                           
 29725                           ; BSR set to: 0
 29726  002412  0E0F               	movlw	15
 29727  002414  657F               	cpfsgt	AESEncode@i& (0+255),b
 29728  002416  D7EE               	goto	l11999
 29729  002418                     l2522:
 29730                           
 29731                           ; BSR set to: 0
 29732                           ;AES.c: 234: {
 29733                           ;AES.c: 237: for(i=0;i<16;i++)
 29734  002418  6B7F               	clrf	AESEncode@i& (0+255),b
 29735  00241A                     l12009:
 29736                           
 29737                           ; BSR set to: 0
 29738                           ;AES.c: 238: {
 29739                           ;AES.c: 239: block[i]=STable[block[i]];
 29740  00241A  517F               	movf	AESEncode@i& (0+255),w,b
 29741  00241C  256A               	addwf	AESEncode@block& (0+255),w,b
 29742  00241E  6ED9               	movwf	fsr2l,c
 29743  002420  0E00               	movlw	0
 29744  002422  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29745  002424  6EDA               	movwf	fsr2h,c
 29746  002426  50DF               	movf	indf2,w,c
 29747  002428  6F6D               	movwf	??_AESEncode& (0+255),b
 29748  00242A  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29749  00242C  0E6D               	movlw	low _STable
 29750  00242E  256D               	addwf	??_AESEncode& (0+255),w,b
 29751  002430  6EF6               	movwf	tblptrl,c
 29752  002432  0EFE               	movlw	high _STable
 29753  002434  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29754  002436  6EF7               	movwf	tblptrh,c
 29755  002438                     	if	1	;There are 3 active tblptr bytes
 29756  002438  6AF8               	clrf	tblptru,c
 29757  00243A  0E00               	movlw	low (__mediumconst shr (0+16))
 29758  00243C  22F8               	addwfc	tblptru,f,c
 29759  00243E                     	endif
 29760  00243E  517F               	movf	AESEncode@i& (0+255),w,b
 29761  002440  256A               	addwf	AESEncode@block& (0+255),w,b
 29762  002442  6ED9               	movwf	fsr2l,c
 29763  002444  0E00               	movlw	0
 29764  002446  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29765  002448  6EDA               	movwf	fsr2h,c
 29766  00244A  0008               	tblrd		*
 29767  00244C  CFF5 FFDF          	movff	tablat,indf2
 29768                           
 29769                           ; BSR set to: 0
 29770  002450  2B7F               	incf	AESEncode@i& (0+255),f,b
 29771                           
 29772                           ; BSR set to: 0
 29773  002452  0E0F               	movlw	15
 29774  002454  657F               	cpfsgt	AESEncode@i& (0+255),b
 29775  002456  D7E1               	goto	l12009
 29776                           
 29777                           ; BSR set to: 0
 29778                           ;AES.c: 240: }
 29779                           ;AES.c: 243: EncodeShiftRow(block);
 29780  002458  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29781  00245C  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29782  002460  EC8F  F01E         	call	_EncodeShiftRow	;wreg free
 29783                           
 29784                           ; BSR set to: 0
 29785                           ;AES.c: 246: if(_roundCounter != 1)
 29786  002464  0444               	decf	__roundCounter,w,c
 29787  002466  E101 D111          	bz	l12057
 29788                           
 29789                           ; BSR set to: 0
 29790                           ;AES.c: 247: {
 29791                           ;AES.c: 248: unsigned char aux,aux1,aux2,aux3;
 29792                           ;AES.c: 250: for(i=0;i<16;i+=4)
 29793  00246A  6B7F               	clrf	AESEncode@i& (0+255),b
 29794  00246C                     l12025:
 29795                           
 29796                           ; BSR set to: 0
 29797                           ;AES.c: 251: {
 29798                           ;AES.c: 252: aux1= block[i+0] ^ block[i+1];
 29799  00246C  517F               	movf	AESEncode@i& (0+255),w,b
 29800  00246E  256A               	addwf	AESEncode@block& (0+255),w,b
 29801  002470  6F6D               	movwf	??_AESEncode& (0+255),b
 29802  002472  0E00               	movlw	0
 29803  002474  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29804  002476  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29805  002478  296D               	incf	??_AESEncode& (0+255),w,b
 29806  00247A  6ED9               	movwf	fsr2l,c
 29807  00247C  0E00               	movlw	0
 29808  00247E  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29809  002480  6EDA               	movwf	fsr2h,c
 29810  002482  50DF               	movf	indf2,w,c
 29811  002484  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29812  002486  517F               	movf	AESEncode@i& (0+255),w,b
 29813  002488  256A               	addwf	AESEncode@block& (0+255),w,b
 29814  00248A  6ED9               	movwf	fsr2l,c
 29815  00248C  0E00               	movlw	0
 29816  00248E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29817  002490  6EDA               	movwf	fsr2h,c
 29818  002492  50DF               	movf	indf2,w,c
 29819  002494  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29820  002496  6F7D               	movwf	AESEncode@aux1& (0+255),b
 29821                           
 29822                           ;AES.c: 253: aux3= block[i+2]^block[i+3];
 29823  002498  517F               	movf	AESEncode@i& (0+255),w,b
 29824  00249A  256A               	addwf	AESEncode@block& (0+255),w,b
 29825  00249C  6F6D               	movwf	??_AESEncode& (0+255),b
 29826  00249E  0E00               	movlw	0
 29827  0024A0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29828  0024A2  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29829  0024A4  0E03               	movlw	3
 29830  0024A6  256D               	addwf	??_AESEncode& (0+255),w,b
 29831  0024A8  6ED9               	movwf	fsr2l,c
 29832  0024AA  0E00               	movlw	0
 29833  0024AC  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29834  0024AE  6EDA               	movwf	fsr2h,c
 29835  0024B0  50DF               	movf	indf2,w,c
 29836  0024B2  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29837  0024B4  517F               	movf	AESEncode@i& (0+255),w,b
 29838  0024B6  256A               	addwf	AESEncode@block& (0+255),w,b
 29839  0024B8  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29840  0024BA  0E00               	movlw	0
 29841  0024BC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29842  0024BE  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29843  0024C0  0E02               	movlw	2
 29844  0024C2  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29845  0024C4  6ED9               	movwf	fsr2l,c
 29846  0024C6  0E00               	movlw	0
 29847  0024C8  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29848  0024CA  6EDA               	movwf	fsr2h,c
 29849  0024CC  50DF               	movf	indf2,w,c
 29850  0024CE  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29851  0024D0  6F7E               	movwf	AESEncode@aux3& (0+255),b
 29852                           
 29853                           ; BSR set to: 0
 29854                           ;AES.c: 254: aux = aux1 ^ aux3;
 29855  0024D2  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 29856  0024D4  6F7B               	movwf	AESEncode@aux& (0+255),b
 29857                           
 29858                           ; BSR set to: 0
 29859                           ;AES.c: 255: aux2= block[i+2]^block[i+1];
 29860  0024D6  517F               	movf	AESEncode@i& (0+255),w,b
 29861  0024D8  256A               	addwf	AESEncode@block& (0+255),w,b
 29862  0024DA  6F6D               	movwf	??_AESEncode& (0+255),b
 29863  0024DC  0E00               	movlw	0
 29864  0024DE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29865  0024E0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29866  0024E2  296D               	incf	??_AESEncode& (0+255),w,b
 29867  0024E4  6ED9               	movwf	fsr2l,c
 29868  0024E6  0E00               	movlw	0
 29869  0024E8  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29870  0024EA  6EDA               	movwf	fsr2h,c
 29871  0024EC  50DF               	movf	indf2,w,c
 29872  0024EE  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29873  0024F0  517F               	movf	AESEncode@i& (0+255),w,b
 29874  0024F2  256A               	addwf	AESEncode@block& (0+255),w,b
 29875  0024F4  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29876  0024F6  0E00               	movlw	0
 29877  0024F8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29878  0024FA  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29879  0024FC  0E02               	movlw	2
 29880  0024FE  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29881  002500  6ED9               	movwf	fsr2l,c
 29882  002502  0E00               	movlw	0
 29883  002504  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29884  002506  6EDA               	movwf	fsr2h,c
 29885  002508  50DF               	movf	indf2,w,c
 29886  00250A  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29887  00250C  6F7C               	movwf	AESEncode@aux2& (0+255),b
 29888                           
 29889                           ;AES.c: 257: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 29890  00250E  0E7F               	movlw	127
 29891  002510  657D               	cpfsgt	AESEncode@aux1& (0+255),b
 29892  002512  D00C               	goto	l12033
 29893                           
 29894                           ; BSR set to: 0
 29895  002514  0E1B               	movlw	27
 29896  002516  C07D  F06D         	movff	AESEncode@aux1,??_AESEncode
 29897  00251A  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29898  00251C  90D8               	bcf	status,0,c
 29899  00251E  376D               	rlcf	??_AESEncode& (0+255),f,b
 29900  002520  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29901  002522  196D               	xorwf	??_AESEncode& (0+255),w,b
 29902  002524  6F75               	movwf	_AESEncode$4143& (0+255),b
 29903  002526  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29904  002528  6F76               	movwf	(_AESEncode$4143+1)& (0+255),b
 29905  00252A  D005               	goto	l12035
 29906  00252C                     l12033:
 29907                           
 29908                           ; BSR set to: 0
 29909  00252C  90D8               	bcf	status,0,c
 29910  00252E  357D               	rlcf	AESEncode@aux1& (0+255),w,b
 29911  002530  6F75               	movwf	_AESEncode$4143& (0+255),b
 29912  002532  6B76               	clrf	(_AESEncode$4143+1)& (0+255),b
 29913  002534  3776               	rlcf	(_AESEncode$4143+1)& (0+255),f,b
 29914  002536                     l12035:
 29915                           
 29916                           ; BSR set to: 0
 29917  002536  C075  F07D         	movff	_AESEncode$4143,AESEncode@aux1
 29918                           
 29919                           ;AES.c: 258: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 29920  00253A  0E7F               	movlw	127
 29921  00253C  657C               	cpfsgt	AESEncode@aux2& (0+255),b
 29922  00253E  D00C               	goto	l12039
 29923                           
 29924                           ; BSR set to: 0
 29925  002540  0E1B               	movlw	27
 29926  002542  C07C  F06D         	movff	AESEncode@aux2,??_AESEncode
 29927  002546  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29928  002548  90D8               	bcf	status,0,c
 29929  00254A  376D               	rlcf	??_AESEncode& (0+255),f,b
 29930  00254C  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29931  00254E  196D               	xorwf	??_AESEncode& (0+255),w,b
 29932  002550  6F77               	movwf	_AESEncode$4144& (0+255),b
 29933  002552  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29934  002554  6F78               	movwf	(_AESEncode$4144+1)& (0+255),b
 29935  002556  D005               	goto	l12041
 29936  002558                     l12039:
 29937                           
 29938                           ; BSR set to: 0
 29939  002558  90D8               	bcf	status,0,c
 29940  00255A  357C               	rlcf	AESEncode@aux2& (0+255),w,b
 29941  00255C  6F77               	movwf	_AESEncode$4144& (0+255),b
 29942  00255E  6B78               	clrf	(_AESEncode$4144+1)& (0+255),b
 29943  002560  3778               	rlcf	(_AESEncode$4144+1)& (0+255),f,b
 29944  002562                     l12041:
 29945                           
 29946                           ; BSR set to: 0
 29947  002562  C077  F07C         	movff	_AESEncode$4144,AESEncode@aux2
 29948                           
 29949                           ;AES.c: 259: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 29950  002566  0E7F               	movlw	127
 29951  002568  657E               	cpfsgt	AESEncode@aux3& (0+255),b
 29952  00256A  D00C               	goto	l12045
 29953                           
 29954                           ; BSR set to: 0
 29955  00256C  0E1B               	movlw	27
 29956  00256E  C07E  F06D         	movff	AESEncode@aux3,??_AESEncode
 29957  002572  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29958  002574  90D8               	bcf	status,0,c
 29959  002576  376D               	rlcf	??_AESEncode& (0+255),f,b
 29960  002578  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29961  00257A  196D               	xorwf	??_AESEncode& (0+255),w,b
 29962  00257C  6F79               	movwf	_AESEncode$4145& (0+255),b
 29963  00257E  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29964  002580  6F7A               	movwf	(_AESEncode$4145+1)& (0+255),b
 29965  002582  D005               	goto	l12047
 29966  002584                     l12045:
 29967                           
 29968                           ; BSR set to: 0
 29969  002584  90D8               	bcf	status,0,c
 29970  002586  357E               	rlcf	AESEncode@aux3& (0+255),w,b
 29971  002588  6F79               	movwf	_AESEncode$4145& (0+255),b
 29972  00258A  6B7A               	clrf	(_AESEncode$4145+1)& (0+255),b
 29973  00258C  377A               	rlcf	(_AESEncode$4145+1)& (0+255),f,b
 29974  00258E                     l12047:
 29975                           
 29976                           ; BSR set to: 0
 29977  00258E  C079  F07E         	movff	_AESEncode$4145,AESEncode@aux3
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;AES.c: 261: block[i+0]= aux^aux1^block[i+0];
 29981  002592  517F               	movf	AESEncode@i& (0+255),w,b
 29982  002594  256A               	addwf	AESEncode@block& (0+255),w,b
 29983  002596  6ED9               	movwf	fsr2l,c
 29984  002598  0E00               	movlw	0
 29985  00259A  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29986  00259C  6EDA               	movwf	fsr2h,c
 29987  00259E  517F               	movf	AESEncode@i& (0+255),w,b
 29988  0025A0  256A               	addwf	AESEncode@block& (0+255),w,b
 29989  0025A2  6EE9               	movwf	fsr0l,c
 29990  0025A4  0E00               	movlw	0
 29991  0025A6  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29992  0025A8  6EEA               	movwf	fsr0h,c
 29993  0025AA  50EF               	movf	indf0,w,c
 29994  0025AC  197B               	xorwf	AESEncode@aux& (0+255),w,b
 29995  0025AE  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 29996  0025B0  6EDF               	movwf	indf2,c
 29997                           
 29998                           ; BSR set to: 0
 29999                           ;AES.c: 262: block[i+1]= aux^aux2^block[i+1];
 30000  0025B2  517F               	movf	AESEncode@i& (0+255),w,b
 30001  0025B4  256A               	addwf	AESEncode@block& (0+255),w,b
 30002  0025B6  6F6D               	movwf	??_AESEncode& (0+255),b
 30003  0025B8  0E00               	movlw	0
 30004  0025BA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30005  0025BC  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30006  0025BE  296D               	incf	??_AESEncode& (0+255),w,b
 30007  0025C0  6ED9               	movwf	fsr2l,c
 30008  0025C2  0E00               	movlw	0
 30009  0025C4  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30010  0025C6  6EDA               	movwf	fsr2h,c
 30011  0025C8  517F               	movf	AESEncode@i& (0+255),w,b
 30012  0025CA  256A               	addwf	AESEncode@block& (0+255),w,b
 30013  0025CC  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30014  0025CE  0E00               	movlw	0
 30015  0025D0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30016  0025D2  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30017  0025D4  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 30018  0025D6  6EE9               	movwf	fsr0l,c
 30019  0025D8  0E00               	movlw	0
 30020  0025DA  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30021  0025DC  6EEA               	movwf	fsr0h,c
 30022  0025DE  50EF               	movf	indf0,w,c
 30023  0025E0  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30024  0025E2  197C               	xorwf	AESEncode@aux2& (0+255),w,b
 30025  0025E4  6EDF               	movwf	indf2,c
 30026                           
 30027                           ; BSR set to: 0
 30028                           ;AES.c: 263: block[i+2]= aux^aux3^block[i+2];
 30029  0025E6  517F               	movf	AESEncode@i& (0+255),w,b
 30030  0025E8  256A               	addwf	AESEncode@block& (0+255),w,b
 30031  0025EA  6F6D               	movwf	??_AESEncode& (0+255),b
 30032  0025EC  0E00               	movlw	0
 30033  0025EE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30034  0025F0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30035  0025F2  0E02               	movlw	2
 30036  0025F4  256D               	addwf	??_AESEncode& (0+255),w,b
 30037  0025F6  6ED9               	movwf	fsr2l,c
 30038  0025F8  0E00               	movlw	0
 30039  0025FA  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30040  0025FC  6EDA               	movwf	fsr2h,c
 30041  0025FE  517F               	movf	AESEncode@i& (0+255),w,b
 30042  002600  256A               	addwf	AESEncode@block& (0+255),w,b
 30043  002602  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30044  002604  0E00               	movlw	0
 30045  002606  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30046  002608  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30047  00260A  0E02               	movlw	2
 30048  00260C  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30049  00260E  6EE9               	movwf	fsr0l,c
 30050  002610  0E00               	movlw	0
 30051  002612  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30052  002614  6EEA               	movwf	fsr0h,c
 30053  002616  50EF               	movf	indf0,w,c
 30054  002618  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30055  00261A  197E               	xorwf	AESEncode@aux3& (0+255),w,b
 30056  00261C  6EDF               	movwf	indf2,c
 30057                           
 30058                           ; BSR set to: 0
 30059                           ;AES.c: 264: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30060  00261E  517F               	movf	AESEncode@i& (0+255),w,b
 30061  002620  256A               	addwf	AESEncode@block& (0+255),w,b
 30062  002622  6F6D               	movwf	??_AESEncode& (0+255),b
 30063  002624  0E00               	movlw	0
 30064  002626  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30065  002628  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30066  00262A  0E03               	movlw	3
 30067  00262C  256D               	addwf	??_AESEncode& (0+255),w,b
 30068  00262E  6ED9               	movwf	fsr2l,c
 30069  002630  0E00               	movlw	0
 30070  002632  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30071  002634  6EDA               	movwf	fsr2h,c
 30072  002636  517F               	movf	AESEncode@i& (0+255),w,b
 30073  002638  256A               	addwf	AESEncode@block& (0+255),w,b
 30074  00263A  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30075  00263C  0E00               	movlw	0
 30076  00263E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30077  002640  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30078  002642  0E02               	movlw	2
 30079  002644  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30080  002646  6EE9               	movwf	fsr0l,c
 30081  002648  0E00               	movlw	0
 30082  00264A  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30083  00264C  6EEA               	movwf	fsr0h,c
 30084  00264E  50EF               	movf	indf0,w,c
 30085  002650  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30086  002652  517F               	movf	AESEncode@i& (0+255),w,b
 30087  002654  256A               	addwf	AESEncode@block& (0+255),w,b
 30088  002656  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 30089  002658  0E00               	movlw	0
 30090  00265A  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30091  00265C  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 30092  00265E  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 30093  002660  6EE9               	movwf	fsr0l,c
 30094  002662  0E00               	movlw	0
 30095  002664  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 30096  002666  6EEA               	movwf	fsr0h,c
 30097  002668  50EF               	movf	indf0,w,c
 30098  00266A  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 30099  00266C  517F               	movf	AESEncode@i& (0+255),w,b
 30100  00266E  256A               	addwf	AESEncode@block& (0+255),w,b
 30101  002670  6EE9               	movwf	fsr0l,c
 30102  002672  0E00               	movlw	0
 30103  002674  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30104  002676  6EEA               	movwf	fsr0h,c
 30105  002678  50EF               	movf	indf0,w,c
 30106  00267A  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30107  00267C  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30108  00267E  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30109  002680  6EDF               	movwf	indf2,c
 30110  002682  0E04               	movlw	4
 30111  002684  277F               	addwf	AESEncode@i& (0+255),f,b
 30112  002686  0E0F               	movlw	15
 30113  002688  657F               	cpfsgt	AESEncode@i& (0+255),b
 30114  00268A  D6F0               	goto	l12025
 30115  00268C                     l12057:
 30116                           
 30117                           ; BSR set to: 0
 30118                           ;AES.c: 265: }
 30119                           ;AES.c: 266: }
 30120                           ;AES.c: 268: EncKeySchedule(key);
 30121  00268C  C06C  F064         	movff	AESEncode@key,EncKeySchedule@key
 30122  002690  ECB1  F014         	call	_EncKeySchedule	;wreg free
 30123                           
 30124                           ; BSR set to: 0
 30125                           ;AES.c: 271: for(i=0;i<16;i++)
 30126  002694  6B7F               	clrf	AESEncode@i& (0+255),b
 30127  002696                     l12065:
 30128                           
 30129                           ; BSR set to: 0
 30130                           ;AES.c: 272: {
 30131                           ;AES.c: 273: block[i] ^= key[i];
 30132  002696  516C               	movf	AESEncode@key& (0+255),w,b
 30133  002698  257F               	addwf	AESEncode@i& (0+255),w,b
 30134  00269A  6ED9               	movwf	fsr2l,c
 30135  00269C  6ADA               	clrf	fsr2h,c
 30136  00269E  50DF               	movf	indf2,w,c
 30137  0026A0  6F6D               	movwf	??_AESEncode& (0+255),b
 30138  0026A2  517F               	movf	AESEncode@i& (0+255),w,b
 30139  0026A4  256A               	addwf	AESEncode@block& (0+255),w,b
 30140  0026A6  6ED9               	movwf	fsr2l,c
 30141  0026A8  0E00               	movlw	0
 30142  0026AA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30143  0026AC  6EDA               	movwf	fsr2h,c
 30144  0026AE  516D               	movf	??_AESEncode& (0+255),w,b
 30145  0026B0  1ADF               	xorwf	indf2,f,c
 30146                           
 30147                           ; BSR set to: 0
 30148  0026B2  2B7F               	incf	AESEncode@i& (0+255),f,b
 30149                           
 30150                           ; BSR set to: 0
 30151  0026B4  0E0F               	movlw	15
 30152  0026B6  657F               	cpfsgt	AESEncode@i& (0+255),b
 30153  0026B8  D7EE               	goto	l12065
 30154                           
 30155                           ; BSR set to: 0
 30156                           ;AES.c: 274: }
 30157                           ;AES.c: 276: _roundCounter--;
 30158  0026BA  0644               	decf	__roundCounter,f,c
 30159                           
 30160                           ; BSR set to: 0
 30161                           ;AES.c: 277: }
 30162                           ;AES.c: 278: while(_roundCounter !=0);
 30163  0026BC  5044               	movf	__roundCounter,w,c
 30164  0026BE  E001 D6AB          	bnz	l2522
 30165                           
 30166                           ; BSR set to: 0
 30167  0026C2  0012               	return		;funcret
 30168  0026C4                     __end_of_AESEncode:
 30169                           	opt stack 0
 30170                           tosu	equ	0xFFF
 30171                           tosh	equ	0xFFE
 30172                           tosl	equ	0xFFD
 30173                           pclath	equ	0xFFA
 30174                           tblptru	equ	0xFF8
 30175                           tblptrh	equ	0xFF7
 30176                           tblptrl	equ	0xFF6
 30177                           tablat	equ	0xFF5
 30178                           prodh	equ	0xFF4
 30179                           prodl	equ	0xFF3
 30180                           intcon	equ	0xFF2
 30181                           intcon2	equ	0xFF1
 30182                           intcon3	equ	0xFF0
 30183                           indf0	equ	0xFEF
 30184                           postinc0	equ	0xFEE
 30185                           plusw0	equ	0xFEB
 30186                           fsr0h	equ	0xFEA
 30187                           fsr0l	equ	0xFE9
 30188                           wreg	equ	0xFE8
 30189                           postinc1	equ	0xFE6
 30190                           postdec1	equ	0xFE5
 30191                           plusw1	equ	0xFE3
 30192                           fsr1h	equ	0xFE2
 30193                           fsr1l	equ	0xFE1
 30194                           indf2	equ	0xFDF
 30195                           postinc2	equ	0xFDE
 30196                           postdec2	equ	0xFDD
 30197                           plusw2	equ	0xFDB
 30198                           fsr2h	equ	0xFDA
 30199                           fsr2l	equ	0xFD9
 30200                           status	equ	0xFD8
 30201                           
 30202 ;; *************** function _EncodeShiftRow *****************
 30203 ;; Defined at:
 30204 ;;		line 354 in file "mcc_generated_files/LoRaWAN/AES.c"
 30205 ;; Parameters:    Size  Location     Type
 30206 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30207 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30208 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30209 ;; Auto vars:     Size  Location     Type
 30210 ;;  temp            1    6[BANK0 ] unsigned char 
 30211 ;; Return value:  Size  Location     Type
 30212 ;;                  1    wreg      void 
 30213 ;; Registers used:
 30214 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30215 ;; Tracked objects:
 30216 ;;		On entry : F/0
 30217 ;;		On exit  : F/0
 30218 ;;		Unchanged: 0/0
 30219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30223 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30224 ;;Total ram usage:        3 bytes
 30225 ;; Hardware stack levels used:    1
 30226 ;; Hardware stack levels required when called:    7
 30227 ;; This function calls:
 30228 ;;		Nothing
 30229 ;; This function is called by:
 30230 ;;		_AESEncode
 30231 ;; This function uses a non-reentrant model
 30232 ;;
 30233                           
 30234                           	psect	text156
 30235  003D1E                     __ptext156:
 30236                           	opt stack 0
 30237  003D1E                     _EncodeShiftRow:
 30238                           	opt stack 17
 30239                           
 30240                           ; BSR set to: 0
 30241                           ;AES.c: 356: unsigned char temp;
 30242                           ;AES.c: 361: temp=stateTable[1];
 30243                           
 30244                           ; BSR set to: 0
 30245                           ;incstack = 0
 30246  003D1E  EE20 F001          	lfsr	2,1
 30247  003D22  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30248  003D24  26D9               	addwf	fsr2l,f,c
 30249  003D26  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30250  003D28  22DA               	addwfc	fsr2h,f,c
 30251  003D2A  50DF               	movf	indf2,w,c
 30252  003D2C  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30253                           
 30254                           ; BSR set to: 0
 30255                           ;AES.c: 362: stateTable[1]=stateTable[5];
 30256  003D2E  EE20 F005          	lfsr	2,5
 30257  003D32  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30258  003D34  26D9               	addwf	fsr2l,f,c
 30259  003D36  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30260  003D38  22DA               	addwfc	fsr2h,f,c
 30261  003D3A  EE00 F001          	lfsr	0,1
 30262  003D3E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30263  003D40  26E9               	addwf	fsr0l,f,c
 30264  003D42  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30265  003D44  22EA               	addwfc	fsr0h,f,c
 30266  003D46  CFDF FFEF          	movff	indf2,indf0
 30267                           
 30268                           ; BSR set to: 0
 30269                           ;AES.c: 363: stateTable[5]=stateTable[9];
 30270  003D4A  EE20 F009          	lfsr	2,9
 30271  003D4E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30272  003D50  26D9               	addwf	fsr2l,f,c
 30273  003D52  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30274  003D54  22DA               	addwfc	fsr2h,f,c
 30275  003D56  EE00 F005          	lfsr	0,5
 30276  003D5A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30277  003D5C  26E9               	addwf	fsr0l,f,c
 30278  003D5E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30279  003D60  22EA               	addwfc	fsr0h,f,c
 30280  003D62  CFDF FFEF          	movff	indf2,indf0
 30281                           
 30282                           ; BSR set to: 0
 30283                           ;AES.c: 364: stateTable[9]=stateTable[13];
 30284  003D66  EE20 F00D          	lfsr	2,13
 30285  003D6A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30286  003D6C  26D9               	addwf	fsr2l,f,c
 30287  003D6E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30288  003D70  22DA               	addwfc	fsr2h,f,c
 30289  003D72  EE00 F009          	lfsr	0,9
 30290  003D76  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30291  003D78  26E9               	addwf	fsr0l,f,c
 30292  003D7A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30293  003D7C  22EA               	addwfc	fsr0h,f,c
 30294  003D7E  CFDF FFEF          	movff	indf2,indf0
 30295                           
 30296                           ; BSR set to: 0
 30297                           ;AES.c: 365: stateTable[13]=temp;
 30298  003D82  EE20 F00D          	lfsr	2,13
 30299  003D86  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30300  003D88  26D9               	addwf	fsr2l,f,c
 30301  003D8A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30302  003D8C  22DA               	addwfc	fsr2h,f,c
 30303  003D8E  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30304                           
 30305                           ; BSR set to: 0
 30306                           ;AES.c: 368: temp=stateTable[2];
 30307  003D92  EE20 F002          	lfsr	2,2
 30308  003D96  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30309  003D98  26D9               	addwf	fsr2l,f,c
 30310  003D9A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30311  003D9C  22DA               	addwfc	fsr2h,f,c
 30312  003D9E  50DF               	movf	indf2,w,c
 30313  003DA0  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30314                           
 30315                           ; BSR set to: 0
 30316                           ;AES.c: 369: stateTable[2]=stateTable[10];
 30317  003DA2  EE20 F00A          	lfsr	2,10
 30318  003DA6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30319  003DA8  26D9               	addwf	fsr2l,f,c
 30320  003DAA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30321  003DAC  22DA               	addwfc	fsr2h,f,c
 30322  003DAE  EE00 F002          	lfsr	0,2
 30323  003DB2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30324  003DB4  26E9               	addwf	fsr0l,f,c
 30325  003DB6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30326  003DB8  22EA               	addwfc	fsr0h,f,c
 30327  003DBA  CFDF FFEF          	movff	indf2,indf0
 30328                           
 30329                           ;AES.c: 370: stateTable[10]=temp;
 30330  003DBE  EE20 F00A          	lfsr	2,10
 30331  003DC2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30332  003DC4  26D9               	addwf	fsr2l,f,c
 30333  003DC6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30334  003DC8  22DA               	addwfc	fsr2h,f,c
 30335  003DCA  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30336                           
 30337                           ;AES.c: 371: temp=stateTable[14];
 30338  003DCE  EE20 F00E          	lfsr	2,14
 30339  003DD2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30340  003DD4  26D9               	addwf	fsr2l,f,c
 30341  003DD6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30342  003DD8  22DA               	addwfc	fsr2h,f,c
 30343  003DDA  50DF               	movf	indf2,w,c
 30344  003DDC  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30345                           
 30346                           ; BSR set to: 0
 30347                           ;AES.c: 372: stateTable[14]=stateTable[6];
 30348  003DDE  EE20 F006          	lfsr	2,6
 30349  003DE2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30350  003DE4  26D9               	addwf	fsr2l,f,c
 30351  003DE6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30352  003DE8  22DA               	addwfc	fsr2h,f,c
 30353  003DEA  EE00 F00E          	lfsr	0,14
 30354  003DEE  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30355  003DF0  26E9               	addwf	fsr0l,f,c
 30356  003DF2  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30357  003DF4  22EA               	addwfc	fsr0h,f,c
 30358  003DF6  CFDF FFEF          	movff	indf2,indf0
 30359                           
 30360                           ; BSR set to: 0
 30361                           ;AES.c: 373: stateTable[6]=temp;
 30362  003DFA  EE20 F006          	lfsr	2,6
 30363  003DFE  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30364  003E00  26D9               	addwf	fsr2l,f,c
 30365  003E02  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30366  003E04  22DA               	addwfc	fsr2h,f,c
 30367  003E06  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30368                           
 30369                           ; BSR set to: 0
 30370                           ;AES.c: 376: temp=stateTable[3];
 30371  003E0A  EE20 F003          	lfsr	2,3
 30372  003E0E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30373  003E10  26D9               	addwf	fsr2l,f,c
 30374  003E12  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30375  003E14  22DA               	addwfc	fsr2h,f,c
 30376  003E16  50DF               	movf	indf2,w,c
 30377  003E18  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30378                           
 30379                           ; BSR set to: 0
 30380                           ;AES.c: 377: stateTable[3]=stateTable[15];
 30381  003E1A  EE20 F00F          	lfsr	2,15
 30382  003E1E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30383  003E20  26D9               	addwf	fsr2l,f,c
 30384  003E22  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30385  003E24  22DA               	addwfc	fsr2h,f,c
 30386  003E26  EE00 F003          	lfsr	0,3
 30387  003E2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30388  003E2C  26E9               	addwf	fsr0l,f,c
 30389  003E2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30390  003E30  22EA               	addwfc	fsr0h,f,c
 30391  003E32  CFDF FFEF          	movff	indf2,indf0
 30392                           
 30393                           ; BSR set to: 0
 30394                           ;AES.c: 378: stateTable[15]=stateTable[11];
 30395  003E36  EE20 F00B          	lfsr	2,11
 30396  003E3A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30397  003E3C  26D9               	addwf	fsr2l,f,c
 30398  003E3E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30399  003E40  22DA               	addwfc	fsr2h,f,c
 30400  003E42  EE00 F00F          	lfsr	0,15
 30401  003E46  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30402  003E48  26E9               	addwf	fsr0l,f,c
 30403  003E4A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30404  003E4C  22EA               	addwfc	fsr0h,f,c
 30405  003E4E  CFDF FFEF          	movff	indf2,indf0
 30406                           
 30407                           ; BSR set to: 0
 30408                           ;AES.c: 379: stateTable[11]=stateTable[7];
 30409  003E52  EE20 F007          	lfsr	2,7
 30410  003E56  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30411  003E58  26D9               	addwf	fsr2l,f,c
 30412  003E5A  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30413  003E5C  22DA               	addwfc	fsr2h,f,c
 30414  003E5E  EE00 F00B          	lfsr	0,11
 30415  003E62  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30416  003E64  26E9               	addwf	fsr0l,f,c
 30417  003E66  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30418  003E68  22EA               	addwfc	fsr0h,f,c
 30419  003E6A  CFDF FFEF          	movff	indf2,indf0
 30420                           
 30421                           ;AES.c: 380: stateTable[7]=temp;
 30422  003E6E  EE20 F007          	lfsr	2,7
 30423  003E72  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30424  003E74  26D9               	addwf	fsr2l,f,c
 30425  003E76  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30426  003E78  22DA               	addwfc	fsr2h,f,c
 30427  003E7A  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30428                           
 30429                           ; BSR set to: 0
 30430  003E7E  0012               	return		;funcret
 30431  003E80                     __end_of_EncodeShiftRow:
 30432                           	opt stack 0
 30433                           tosu	equ	0xFFF
 30434                           tosh	equ	0xFFE
 30435                           tosl	equ	0xFFD
 30436                           pclath	equ	0xFFA
 30437                           tblptru	equ	0xFF8
 30438                           tblptrh	equ	0xFF7
 30439                           tblptrl	equ	0xFF6
 30440                           tablat	equ	0xFF5
 30441                           prodh	equ	0xFF4
 30442                           prodl	equ	0xFF3
 30443                           intcon	equ	0xFF2
 30444                           intcon2	equ	0xFF1
 30445                           intcon3	equ	0xFF0
 30446                           indf0	equ	0xFEF
 30447                           postinc0	equ	0xFEE
 30448                           plusw0	equ	0xFEB
 30449                           fsr0h	equ	0xFEA
 30450                           fsr0l	equ	0xFE9
 30451                           wreg	equ	0xFE8
 30452                           postinc1	equ	0xFE6
 30453                           postdec1	equ	0xFE5
 30454                           plusw1	equ	0xFE3
 30455                           fsr1h	equ	0xFE2
 30456                           fsr1l	equ	0xFE1
 30457                           indf2	equ	0xFDF
 30458                           postinc2	equ	0xFDE
 30459                           postdec2	equ	0xFDD
 30460                           plusw2	equ	0xFDB
 30461                           fsr2h	equ	0xFDA
 30462                           fsr2l	equ	0xFD9
 30463                           status	equ	0xFD8
 30464                           
 30465 ;; *************** function _EncKeySchedule *****************
 30466 ;; Defined at:
 30467 ;;		line 306 in file "mcc_generated_files/LoRaWAN/AES.c"
 30468 ;; Parameters:    Size  Location     Type
 30469 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30470 ;;		 -> AESEncodeLoRa@useKey(16), 
 30471 ;; Auto vars:     Size  Location     Type
 30472 ;;		None
 30473 ;; Return value:  Size  Location     Type
 30474 ;;                  1    wreg      void 
 30475 ;; Registers used:
 30476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30477 ;; Tracked objects:
 30478 ;;		On entry : F/0
 30479 ;;		On exit  : F/0
 30480 ;;		Unchanged: 0/0
 30481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30482 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30483 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30484 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30485 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30486 ;;Total ram usage:        6 bytes
 30487 ;; Hardware stack levels used:    1
 30488 ;; Hardware stack levels required when called:    7
 30489 ;; This function calls:
 30490 ;;		Nothing
 30491 ;; This function is called by:
 30492 ;;		_AESEncode
 30493 ;; This function uses a non-reentrant model
 30494 ;;
 30495                           
 30496                           	psect	text157
 30497  002962                     __ptext157:
 30498                           	opt stack 0
 30499  002962                     _EncKeySchedule:
 30500                           	opt stack 17
 30501                           
 30502                           ; BSR set to: 0
 30503                           ;AES.c: 309: key[0]^=STable[key[13]];
 30504                           
 30505                           ; BSR set to: 0
 30506                           ;incstack = 0
 30507  002962  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30508  002964  6ED9               	movwf	fsr2l,c
 30509  002966  6ADA               	clrf	fsr2h,c
 30510  002968  0E0D               	movlw	13
 30511  00296A  26D9               	addwf	fsr2l,f,c
 30512  00296C  50DF               	movf	indf2,w,c
 30513  00296E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30514  002970  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30515  002972  0E6D               	movlw	low _STable
 30516  002974  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30517  002976  6EF6               	movwf	tblptrl,c
 30518  002978  0EFE               	movlw	high _STable
 30519  00297A  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30520  00297C  6EF7               	movwf	tblptrh,c
 30521  00297E                     	if	1	;There are 3 active tblptr bytes
 30522  00297E  6AF8               	clrf	tblptru,c
 30523  002980  0E00               	movlw	low (__mediumconst shr (0+16))
 30524  002982  22F8               	addwfc	tblptru,f,c
 30525  002984                     	endif
 30526  002984  0008               	tblrd		*
 30527  002986  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30528  00298A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30529  00298C  6ED9               	movwf	fsr2l,c
 30530  00298E  6ADA               	clrf	fsr2h,c
 30531  002990  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30532  002992  1ADF               	xorwf	indf2,f,c
 30533                           
 30534                           ;AES.c: 310: key[1]^=STable[key[14]];
 30535  002994  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30536  002996  6ED9               	movwf	fsr2l,c
 30537  002998  6ADA               	clrf	fsr2h,c
 30538  00299A  0E0E               	movlw	14
 30539  00299C  26D9               	addwf	fsr2l,f,c
 30540  00299E  50DF               	movf	indf2,w,c
 30541  0029A0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30542  0029A2  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30543  0029A4  0E6D               	movlw	low _STable
 30544  0029A6  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30545  0029A8  6EF6               	movwf	tblptrl,c
 30546  0029AA  0EFE               	movlw	high _STable
 30547  0029AC  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30548  0029AE  6EF7               	movwf	tblptrh,c
 30549  0029B0                     	if	1	;There are 3 active tblptr bytes
 30550  0029B0  6AF8               	clrf	tblptru,c
 30551  0029B2  0E00               	movlw	low (__mediumconst shr (0+16))
 30552  0029B4  22F8               	addwfc	tblptru,f,c
 30553  0029B6                     	endif
 30554  0029B6  0008               	tblrd		*
 30555  0029B8  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30556  0029BC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30557  0029BE  6ED9               	movwf	fsr2l,c
 30558  0029C0  6ADA               	clrf	fsr2h,c
 30559  0029C2  2AD9               	incf	fsr2l,f,c
 30560  0029C4  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30561  0029C6  1ADF               	xorwf	indf2,f,c
 30562                           
 30563                           ;AES.c: 311: key[2]^=STable[key[15]];
 30564  0029C8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30565  0029CA  6ED9               	movwf	fsr2l,c
 30566  0029CC  6ADA               	clrf	fsr2h,c
 30567  0029CE  0E0F               	movlw	15
 30568  0029D0  26D9               	addwf	fsr2l,f,c
 30569  0029D2  50DF               	movf	indf2,w,c
 30570  0029D4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30571  0029D6  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30572  0029D8  0E6D               	movlw	low _STable
 30573  0029DA  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30574  0029DC  6EF6               	movwf	tblptrl,c
 30575  0029DE  0EFE               	movlw	high _STable
 30576  0029E0  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30577  0029E2  6EF7               	movwf	tblptrh,c
 30578  0029E4                     	if	1	;There are 3 active tblptr bytes
 30579  0029E4  6AF8               	clrf	tblptru,c
 30580  0029E6  0E00               	movlw	low (__mediumconst shr (0+16))
 30581  0029E8  22F8               	addwfc	tblptru,f,c
 30582  0029EA                     	endif
 30583  0029EA  0008               	tblrd		*
 30584  0029EC  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30585  0029F0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30586  0029F2  6ED9               	movwf	fsr2l,c
 30587  0029F4  6ADA               	clrf	fsr2h,c
 30588  0029F6  0E02               	movlw	2
 30589  0029F8  26D9               	addwf	fsr2l,f,c
 30590  0029FA  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30591  0029FC  1ADF               	xorwf	indf2,f,c
 30592                           
 30593                           ;AES.c: 312: key[3]^=STable[key[12]];
 30594  0029FE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30595  002A00  6ED9               	movwf	fsr2l,c
 30596  002A02  6ADA               	clrf	fsr2h,c
 30597  002A04  0E0C               	movlw	12
 30598  002A06  26D9               	addwf	fsr2l,f,c
 30599  002A08  50DF               	movf	indf2,w,c
 30600  002A0A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30601  002A0C  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30602  002A0E  0E6D               	movlw	low _STable
 30603  002A10  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30604  002A12  6EF6               	movwf	tblptrl,c
 30605  002A14  0EFE               	movlw	high _STable
 30606  002A16  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30607  002A18  6EF7               	movwf	tblptrh,c
 30608  002A1A                     	if	1	;There are 3 active tblptr bytes
 30609  002A1A  6AF8               	clrf	tblptru,c
 30610  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 30611  002A1E  22F8               	addwfc	tblptru,f,c
 30612  002A20                     	endif
 30613  002A20  0008               	tblrd		*
 30614  002A22  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30615  002A26  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30616  002A28  6ED9               	movwf	fsr2l,c
 30617  002A2A  6ADA               	clrf	fsr2h,c
 30618  002A2C  0E03               	movlw	3
 30619  002A2E  26D9               	addwf	fsr2l,f,c
 30620  002A30  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30621  002A32  1ADF               	xorwf	indf2,f,c
 30622                           
 30623                           ; BSR set to: 0
 30624                           ;AES.c: 314: key[0]^=_rcon;
 30625  002A34  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30626  002A36  6ED9               	movwf	fsr2l,c
 30627  002A38  6ADA               	clrf	fsr2h,c
 30628  002A3A  51EE               	movf	__rcon& (0+255),w,b
 30629  002A3C  1ADF               	xorwf	indf2,f,c
 30630                           
 30631                           ; BSR set to: 0
 30632                           ;AES.c: 315: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30633  002A3E  0E7F               	movlw	127
 30634  002A40  65EE               	cpfsgt	__rcon& (0+255),b
 30635  002A42  D00C               	goto	l11885
 30636                           
 30637                           ; BSR set to: 0
 30638  002A44  0E1B               	movlw	27
 30639  002A46  C0EE  F065         	movff	__rcon,??_EncKeySchedule
 30640  002A4A  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30641  002A4C  90D8               	bcf	status,0,c
 30642  002A4E  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30643  002A50  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30644  002A52  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30645  002A54  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30646  002A56  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30647  002A58  6F69               	movwf	(_EncKeySchedule$4148+1)& (0+255),b
 30648  002A5A  D005               	goto	l11887
 30649  002A5C                     l11885:
 30650                           
 30651                           ; BSR set to: 0
 30652  002A5C  90D8               	bcf	status,0,c
 30653  002A5E  35EE               	rlcf	__rcon& (0+255),w,b
 30654  002A60  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30655  002A62  6B69               	clrf	(_EncKeySchedule$4148+1)& (0+255),b
 30656  002A64  3769               	rlcf	(_EncKeySchedule$4148+1)& (0+255),f,b
 30657  002A66                     l11887:
 30658                           
 30659                           ; BSR set to: 0
 30660  002A66  C068  F0EE         	movff	_EncKeySchedule$4148,__rcon
 30661                           
 30662                           ; BSR set to: 0
 30663                           ;AES.c: 318: key[4]^=key[0];
 30664  002A6A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30665  002A6C  6ED9               	movwf	fsr2l,c
 30666  002A6E  6ADA               	clrf	fsr2h,c
 30667  002A70  50DF               	movf	indf2,w,c
 30668  002A72  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30669  002A74  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30670  002A76  6ED9               	movwf	fsr2l,c
 30671  002A78  6ADA               	clrf	fsr2h,c
 30672  002A7A  0E04               	movlw	4
 30673  002A7C  26D9               	addwf	fsr2l,f,c
 30674  002A7E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30675  002A80  1ADF               	xorwf	indf2,f,c
 30676                           
 30677                           ; BSR set to: 0
 30678                           ;AES.c: 319: key[5]^=key[1];
 30679  002A82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30680  002A84  6ED9               	movwf	fsr2l,c
 30681  002A86  6ADA               	clrf	fsr2h,c
 30682  002A88  2AD9               	incf	fsr2l,f,c
 30683  002A8A  50DF               	movf	indf2,w,c
 30684  002A8C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30685  002A8E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30686  002A90  6ED9               	movwf	fsr2l,c
 30687  002A92  6ADA               	clrf	fsr2h,c
 30688  002A94  0E05               	movlw	5
 30689  002A96  26D9               	addwf	fsr2l,f,c
 30690  002A98  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30691  002A9A  1ADF               	xorwf	indf2,f,c
 30692                           
 30693                           ; BSR set to: 0
 30694                           ;AES.c: 320: key[6]^=key[2];
 30695  002A9C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30696  002A9E  6ED9               	movwf	fsr2l,c
 30697  002AA0  6ADA               	clrf	fsr2h,c
 30698  002AA2  0E02               	movlw	2
 30699  002AA4  26D9               	addwf	fsr2l,f,c
 30700  002AA6  50DF               	movf	indf2,w,c
 30701  002AA8  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30702  002AAA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30703  002AAC  6ED9               	movwf	fsr2l,c
 30704  002AAE  6ADA               	clrf	fsr2h,c
 30705  002AB0  0E06               	movlw	6
 30706  002AB2  26D9               	addwf	fsr2l,f,c
 30707  002AB4  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30708  002AB6  1ADF               	xorwf	indf2,f,c
 30709                           
 30710                           ; BSR set to: 0
 30711                           ;AES.c: 321: key[7]^=key[3];
 30712  002AB8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30713  002ABA  6ED9               	movwf	fsr2l,c
 30714  002ABC  6ADA               	clrf	fsr2h,c
 30715  002ABE  0E03               	movlw	3
 30716  002AC0  26D9               	addwf	fsr2l,f,c
 30717  002AC2  50DF               	movf	indf2,w,c
 30718  002AC4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30719  002AC6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30720  002AC8  6ED9               	movwf	fsr2l,c
 30721  002ACA  6ADA               	clrf	fsr2h,c
 30722  002ACC  0E07               	movlw	7
 30723  002ACE  26D9               	addwf	fsr2l,f,c
 30724  002AD0  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30725  002AD2  1ADF               	xorwf	indf2,f,c
 30726                           
 30727                           ; BSR set to: 0
 30728                           ;AES.c: 324: key[8]^=key[4];
 30729  002AD4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30730  002AD6  6ED9               	movwf	fsr2l,c
 30731  002AD8  6ADA               	clrf	fsr2h,c
 30732  002ADA  0E04               	movlw	4
 30733  002ADC  26D9               	addwf	fsr2l,f,c
 30734  002ADE  50DF               	movf	indf2,w,c
 30735  002AE0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30736  002AE2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30737  002AE4  6ED9               	movwf	fsr2l,c
 30738  002AE6  6ADA               	clrf	fsr2h,c
 30739  002AE8  0E08               	movlw	8
 30740  002AEA  26D9               	addwf	fsr2l,f,c
 30741  002AEC  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30742  002AEE  1ADF               	xorwf	indf2,f,c
 30743                           
 30744                           ; BSR set to: 0
 30745                           ;AES.c: 325: key[9]^=key[5];
 30746  002AF0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30747  002AF2  6ED9               	movwf	fsr2l,c
 30748  002AF4  6ADA               	clrf	fsr2h,c
 30749  002AF6  0E05               	movlw	5
 30750  002AF8  26D9               	addwf	fsr2l,f,c
 30751  002AFA  50DF               	movf	indf2,w,c
 30752  002AFC  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30753  002AFE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30754  002B00  6ED9               	movwf	fsr2l,c
 30755  002B02  6ADA               	clrf	fsr2h,c
 30756  002B04  0E09               	movlw	9
 30757  002B06  26D9               	addwf	fsr2l,f,c
 30758  002B08  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30759  002B0A  1ADF               	xorwf	indf2,f,c
 30760                           
 30761                           ; BSR set to: 0
 30762                           ;AES.c: 326: key[10]^=key[6];
 30763  002B0C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30764  002B0E  6ED9               	movwf	fsr2l,c
 30765  002B10  6ADA               	clrf	fsr2h,c
 30766  002B12  0E06               	movlw	6
 30767  002B14  26D9               	addwf	fsr2l,f,c
 30768  002B16  50DF               	movf	indf2,w,c
 30769  002B18  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30770  002B1A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30771  002B1C  6ED9               	movwf	fsr2l,c
 30772  002B1E  6ADA               	clrf	fsr2h,c
 30773  002B20  0E0A               	movlw	10
 30774  002B22  26D9               	addwf	fsr2l,f,c
 30775  002B24  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30776  002B26  1ADF               	xorwf	indf2,f,c
 30777                           
 30778                           ; BSR set to: 0
 30779                           ;AES.c: 327: key[11]^=key[7];
 30780  002B28  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30781  002B2A  6ED9               	movwf	fsr2l,c
 30782  002B2C  6ADA               	clrf	fsr2h,c
 30783  002B2E  0E07               	movlw	7
 30784  002B30  26D9               	addwf	fsr2l,f,c
 30785  002B32  50DF               	movf	indf2,w,c
 30786  002B34  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30787  002B36  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30788  002B38  6ED9               	movwf	fsr2l,c
 30789  002B3A  6ADA               	clrf	fsr2h,c
 30790  002B3C  0E0B               	movlw	11
 30791  002B3E  26D9               	addwf	fsr2l,f,c
 30792  002B40  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30793  002B42  1ADF               	xorwf	indf2,f,c
 30794                           
 30795                           ; BSR set to: 0
 30796                           ;AES.c: 330: key[12]^=key[8];
 30797  002B44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30798  002B46  6ED9               	movwf	fsr2l,c
 30799  002B48  6ADA               	clrf	fsr2h,c
 30800  002B4A  0E08               	movlw	8
 30801  002B4C  26D9               	addwf	fsr2l,f,c
 30802  002B4E  50DF               	movf	indf2,w,c
 30803  002B50  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30804  002B52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30805  002B54  6ED9               	movwf	fsr2l,c
 30806  002B56  6ADA               	clrf	fsr2h,c
 30807  002B58  0E0C               	movlw	12
 30808  002B5A  26D9               	addwf	fsr2l,f,c
 30809  002B5C  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30810  002B5E  1ADF               	xorwf	indf2,f,c
 30811                           
 30812                           ; BSR set to: 0
 30813                           ;AES.c: 331: key[13]^=key[9];
 30814  002B60  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30815  002B62  6ED9               	movwf	fsr2l,c
 30816  002B64  6ADA               	clrf	fsr2h,c
 30817  002B66  0E09               	movlw	9
 30818  002B68  26D9               	addwf	fsr2l,f,c
 30819  002B6A  50DF               	movf	indf2,w,c
 30820  002B6C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30821  002B6E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30822  002B70  6ED9               	movwf	fsr2l,c
 30823  002B72  6ADA               	clrf	fsr2h,c
 30824  002B74  0E0D               	movlw	13
 30825  002B76  26D9               	addwf	fsr2l,f,c
 30826  002B78  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30827  002B7A  1ADF               	xorwf	indf2,f,c
 30828                           
 30829                           ; BSR set to: 0
 30830                           ;AES.c: 332: key[14]^=key[10];
 30831  002B7C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30832  002B7E  6ED9               	movwf	fsr2l,c
 30833  002B80  6ADA               	clrf	fsr2h,c
 30834  002B82  0E0A               	movlw	10
 30835  002B84  26D9               	addwf	fsr2l,f,c
 30836  002B86  50DF               	movf	indf2,w,c
 30837  002B88  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30838  002B8A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30839  002B8C  6ED9               	movwf	fsr2l,c
 30840  002B8E  6ADA               	clrf	fsr2h,c
 30841  002B90  0E0E               	movlw	14
 30842  002B92  26D9               	addwf	fsr2l,f,c
 30843  002B94  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30844  002B96  1ADF               	xorwf	indf2,f,c
 30845                           
 30846                           ; BSR set to: 0
 30847                           ;AES.c: 333: key[15]^=key[11];
 30848  002B98  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30849  002B9A  6ED9               	movwf	fsr2l,c
 30850  002B9C  6ADA               	clrf	fsr2h,c
 30851  002B9E  0E0B               	movlw	11
 30852  002BA0  26D9               	addwf	fsr2l,f,c
 30853  002BA2  50DF               	movf	indf2,w,c
 30854  002BA4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30855  002BA6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30856  002BA8  6ED9               	movwf	fsr2l,c
 30857  002BAA  6ADA               	clrf	fsr2h,c
 30858  002BAC  0E0F               	movlw	15
 30859  002BAE  26D9               	addwf	fsr2l,f,c
 30860  002BB0  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30861  002BB2  1ADF               	xorwf	indf2,f,c
 30862                           
 30863                           ; BSR set to: 0
 30864  002BB4  0012               	return		;funcret
 30865  002BB6                     __end_of_EncKeySchedule:
 30866                           	opt stack 0
 30867                           tosu	equ	0xFFF
 30868                           tosh	equ	0xFFE
 30869                           tosl	equ	0xFFD
 30870                           pclath	equ	0xFFA
 30871                           tblptru	equ	0xFF8
 30872                           tblptrh	equ	0xFF7
 30873                           tblptrl	equ	0xFF6
 30874                           tablat	equ	0xFF5
 30875                           prodh	equ	0xFF4
 30876                           prodl	equ	0xFF3
 30877                           intcon	equ	0xFF2
 30878                           intcon2	equ	0xFF1
 30879                           intcon3	equ	0xFF0
 30880                           indf0	equ	0xFEF
 30881                           postinc0	equ	0xFEE
 30882                           plusw0	equ	0xFEB
 30883                           fsr0h	equ	0xFEA
 30884                           fsr0l	equ	0xFE9
 30885                           wreg	equ	0xFE8
 30886                           postinc1	equ	0xFE6
 30887                           postdec1	equ	0xFE5
 30888                           plusw1	equ	0xFE3
 30889                           fsr1h	equ	0xFE2
 30890                           fsr1l	equ	0xFE1
 30891                           indf2	equ	0xFDF
 30892                           postinc2	equ	0xFDE
 30893                           postdec2	equ	0xFDD
 30894                           plusw2	equ	0xFDB
 30895                           fsr2h	equ	0xFDA
 30896                           fsr2l	equ	0xFD9
 30897                           status	equ	0xFD8
 30898                           
 30899 ;; *************** function _LORAWAN_Init *****************
 30900 ;; Defined at:
 30901 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 30902 ;; Parameters:    Size  Location     Type
 30903 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 30904 ;;		 -> RxDataDone(1), 
 30905 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 30906 ;;		 -> RxJoinResponse(1), 
 30907 ;; Auto vars:     Size  Location     Type
 30908 ;;		None
 30909 ;; Return value:  Size  Location     Type
 30910 ;;                  1    wreg      void 
 30911 ;; Registers used:
 30912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30913 ;; Tracked objects:
 30914 ;;		On entry : F/0
 30915 ;;		On exit  : D/0
 30916 ;;		Unchanged: 0/0
 30917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30921 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30922 ;;Total ram usage:        4 bytes
 30923 ;; Hardware stack levels used:    1
 30924 ;; Hardware stack levels required when called:   13
 30925 ;; This function calls:
 30926 ;;		_CreateAllSoftwareTimers
 30927 ;;		_LORAWAN_Reset
 30928 ;;		_RADIO_Init
 30929 ;;		_RADIO_ReadRandom
 30930 ;;		_SetCallbackSoftwareTimers
 30931 ;;		_StopAllSoftwareTimers
 30932 ;;		_srand
 30933 ;; This function is called by:
 30934 ;;		_main
 30935 ;; This function uses a non-reentrant model
 30936 ;;
 30937                           
 30938                           	psect	text158
 30939  0066EC                     __ptext158:
 30940                           	opt stack 0
 30941  0066EC                     _LORAWAN_Init:
 30942                           	opt stack 17
 30943                           
 30944                           ; BSR set to: 0
 30945                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 30946                           
 30947                           ; BSR set to: 0
 30948                           ;incstack = 0
 30949  0066EC  0102               	movlb	2	; () banked
 30950  0066EE  51F0               	movf	(_loRa+240)& (0+255),w,b
 30951  0066F0  E108               	bnz	l15479
 30952                           
 30953                           ; BSR set to: 2
 30954                           ;lorawan_eu.c: 127: {
 30955                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 30956  0066F2  EC7D  F034         	call	_CreateAllSoftwareTimers	;wreg free
 30957                           
 30958                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 30959  0066F6  ECBA  F02A         	call	_SetCallbackSoftwareTimers	;wreg free
 30960                           
 30961                           ; BSR set to: 0
 30962                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 30963  0066FA  0E01               	movlw	1
 30964  0066FC  0102               	movlb	2	; () banked
 30965  0066FE  6FF0               	movwf	(_loRa+240)& (0+255),b
 30966                           
 30967                           ;lorawan_eu.c: 131: }
 30968  006700  D002               	goto	l15481
 30969  006702                     l15479:
 30970                           
 30971                           ; BSR set to: 2
 30972                           ;lorawan_eu.c: 132: else
 30973                           ;lorawan_eu.c: 133: {
 30974                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 30975  006702  ECF4  F034         	call	_StopAllSoftwareTimers	;wreg free
 30976  006706                     l15481:
 30977                           
 30978                           ;lorawan_eu.c: 135: }
 30979                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 30980  006706  C0A6  F0E8         	movff	LORAWAN_Init@RxPayload,_rxPayload
 30981  00670A  C0A7  F0E9         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 30982                           
 30983                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 30984  00670E  C0A8  F0EA         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 30985  006712  C0A9  F0EB         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 30986                           
 30987                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 30988  006716  0EFF               	movlw	low (_radioBuffer+16)
 30989  006718  0100               	movlb	0	; () banked
 30990  00671A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 30991  00671C  0E05               	movlw	high (_radioBuffer+16)
 30992  00671E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 30993  006720  0EA0               	movlw	160
 30994  006722  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 30995  006724  0E27               	movlw	39
 30996  006726  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 30997  006728  0EBE               	movlw	190
 30998  00672A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 30999  00672C  0E33               	movlw	51
 31000  00672E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31001  006730  EC36  F01C         	call	_RADIO_Init	;wreg free
 31002                           
 31003                           ; BSR set to: 1
 31004                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 31005  006734  EC50  F02F         	call	_RADIO_ReadRandom	;wreg free
 31006  006738  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 31007  00673C  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31008  006740  EC95  F03B         	call	_srand	;wreg free
 31009                           
 31010                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 31011  006744  0E00               	movlw	0
 31012  006746  EF40  F01F         	goto	_LORAWAN_Reset
 31013  00674A                     __end_of_LORAWAN_Init:
 31014                           	opt stack 0
 31015                           tosu	equ	0xFFF
 31016                           tosh	equ	0xFFE
 31017                           tosl	equ	0xFFD
 31018                           pclath	equ	0xFFA
 31019                           tblptru	equ	0xFF8
 31020                           tblptrh	equ	0xFF7
 31021                           tblptrl	equ	0xFF6
 31022                           tablat	equ	0xFF5
 31023                           prodh	equ	0xFF4
 31024                           prodl	equ	0xFF3
 31025                           intcon	equ	0xFF2
 31026                           intcon2	equ	0xFF1
 31027                           intcon3	equ	0xFF0
 31028                           indf0	equ	0xFEF
 31029                           postinc0	equ	0xFEE
 31030                           plusw0	equ	0xFEB
 31031                           fsr0h	equ	0xFEA
 31032                           fsr0l	equ	0xFE9
 31033                           wreg	equ	0xFE8
 31034                           postinc1	equ	0xFE6
 31035                           postdec1	equ	0xFE5
 31036                           plusw1	equ	0xFE3
 31037                           fsr1h	equ	0xFE2
 31038                           fsr1l	equ	0xFE1
 31039                           indf2	equ	0xFDF
 31040                           postinc2	equ	0xFDE
 31041                           postdec2	equ	0xFDD
 31042                           plusw2	equ	0xFDB
 31043                           fsr2h	equ	0xFDA
 31044                           fsr2l	equ	0xFD9
 31045                           status	equ	0xFD8
 31046                           
 31047 ;; *************** function _srand *****************
 31048 ;; Defined at:
 31049 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 31050 ;; Parameters:    Size  Location     Type
 31051 ;;  x               2   21[BANK0 ] unsigned int 
 31052 ;; Auto vars:     Size  Location     Type
 31053 ;;		None
 31054 ;; Return value:  Size  Location     Type
 31055 ;;                  1    wreg      void 
 31056 ;; Registers used:
 31057 ;;		status,2
 31058 ;; Tracked objects:
 31059 ;;		On entry : 0/1
 31060 ;;		On exit  : 0/0
 31061 ;;		Unchanged: 0/0
 31062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31067 ;;Total ram usage:        2 bytes
 31068 ;; Hardware stack levels used:    1
 31069 ;; Hardware stack levels required when called:    7
 31070 ;; This function calls:
 31071 ;;		Nothing
 31072 ;; This function is called by:
 31073 ;;		_LORAWAN_Init
 31074 ;; This function uses a non-reentrant model
 31075 ;;
 31076                           
 31077                           	psect	text159
 31078  00772A                     __ptext159:
 31079                           	opt stack 0
 31080  00772A                     _srand:
 31081                           	opt stack 22
 31082                           
 31083                           ;incstack = 0
 31084  00772A  C075  F052         	movff	srand@x,_randx
 31085  00772E  C076  F053         	movff	srand@x+1,_randx+1
 31086  007732  6A54               	clrf	_randx+2,c
 31087  007734  6A55               	clrf	_randx+3,c
 31088  007736  0012               	return		;funcret
 31089  007738                     __end_of_srand:
 31090                           	opt stack 0
 31091                           tosu	equ	0xFFF
 31092                           tosh	equ	0xFFE
 31093                           tosl	equ	0xFFD
 31094                           pclath	equ	0xFFA
 31095                           tblptru	equ	0xFF8
 31096                           tblptrh	equ	0xFF7
 31097                           tblptrl	equ	0xFF6
 31098                           tablat	equ	0xFF5
 31099                           prodh	equ	0xFF4
 31100                           prodl	equ	0xFF3
 31101                           intcon	equ	0xFF2
 31102                           intcon2	equ	0xFF1
 31103                           intcon3	equ	0xFF0
 31104                           indf0	equ	0xFEF
 31105                           postinc0	equ	0xFEE
 31106                           plusw0	equ	0xFEB
 31107                           fsr0h	equ	0xFEA
 31108                           fsr0l	equ	0xFE9
 31109                           wreg	equ	0xFE8
 31110                           postinc1	equ	0xFE6
 31111                           postdec1	equ	0xFE5
 31112                           plusw1	equ	0xFE3
 31113                           fsr1h	equ	0xFE2
 31114                           fsr1l	equ	0xFE1
 31115                           indf2	equ	0xFDF
 31116                           postinc2	equ	0xFDE
 31117                           postdec2	equ	0xFDD
 31118                           plusw2	equ	0xFDB
 31119                           fsr2h	equ	0xFDA
 31120                           fsr2l	equ	0xFD9
 31121                           status	equ	0xFD8
 31122                           
 31123 ;; *************** function _SetCallbackSoftwareTimers *****************
 31124 ;; Defined at:
 31125 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31126 ;; Parameters:    Size  Location     Type
 31127 ;;		None
 31128 ;; Auto vars:     Size  Location     Type
 31129 ;;		None
 31130 ;; Return value:  Size  Location     Type
 31131 ;;                  1    wreg      void 
 31132 ;; Registers used:
 31133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31134 ;; Tracked objects:
 31135 ;;		On entry : F/2
 31136 ;;		On exit  : F/0
 31137 ;;		Unchanged: 0/0
 31138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31143 ;;Total ram usage:        0 bytes
 31144 ;; Hardware stack levels used:    1
 31145 ;; Hardware stack levels required when called:    8
 31146 ;; This function calls:
 31147 ;;		_SwTimerSetCallback
 31148 ;; This function is called by:
 31149 ;;		_LORAWAN_Init
 31150 ;; This function uses a non-reentrant model
 31151 ;;
 31152                           
 31153                           	psect	text160
 31154  005574                     __ptext160:
 31155                           	opt stack 0
 31156  005574                     _SetCallbackSoftwareTimers:
 31157                           	opt stack 21
 31158                           
 31159                           ; BSR set to: 2
 31160                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31161                           
 31162                           ;incstack = 0
 31163  005574  0E2A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31164  005576  0100               	movlb	0	; () banked
 31165  005578  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31166  00557A  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31167  00557C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31168  00557E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31169  005580  0102               	movlb	2	; () banked
 31170  005582  51E2               	movf	(_loRa+226)& (0+255),w,b
 31171  005584  EC28  F038         	call	_SwTimerSetCallback
 31172                           
 31173                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31174  005588  0E34               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31175  00558A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31176  00558C  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31177  00558E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31178  005590  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31179  005592  0102               	movlb	2	; () banked
 31180  005594  51E3               	movf	(_loRa+227)& (0+255),w,b
 31181  005596  EC28  F038         	call	_SwTimerSetCallback
 31182                           
 31183                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31184  00559A  0EDE               	movlw	low _LORAWAN_LinkCheckCallback
 31185  00559C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31186  00559E  0E3F               	movlw	high _LORAWAN_LinkCheckCallback
 31187  0055A0  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31188  0055A2  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31189  0055A4  0102               	movlb	2	; () banked
 31190  0055A6  51E7               	movf	(_loRa+231)& (0+255),w,b
 31191  0055A8  EC28  F038         	call	_SwTimerSetCallback
 31192                           
 31193                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31194  0055AC  0E2A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31195  0055AE  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31196  0055B0  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31197  0055B2  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31198  0055B4  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31199  0055B6  0102               	movlb	2	; () banked
 31200  0055B8  51E4               	movf	(_loRa+228)& (0+255),w,b
 31201  0055BA  EC28  F038         	call	_SwTimerSetCallback
 31202                           
 31203                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31204  0055BE  0E34               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31205  0055C0  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31206  0055C2  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31207  0055C4  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31208  0055C6  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31209  0055C8  0102               	movlb	2	; () banked
 31210  0055CA  51E5               	movf	(_loRa+229)& (0+255),w,b
 31211  0055CC  EC28  F038         	call	_SwTimerSetCallback
 31212                           
 31213                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31214  0055D0  0E5C               	movlw	low _AckRetransmissionCallback
 31215  0055D2  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31216  0055D4  0E4A               	movlw	high _AckRetransmissionCallback
 31217  0055D6  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31218  0055D8  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31219  0055DA  0102               	movlb	2	; () banked
 31220  0055DC  51E8               	movf	(_loRa+232)& (0+255),w,b
 31221  0055DE  EC28  F038         	call	_SwTimerSetCallback
 31222                           
 31223                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31224  0055E2  0EFA               	movlw	low _AutomaticReplyCallback
 31225  0055E4  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31226  0055E6  0E73               	movlw	high _AutomaticReplyCallback
 31227  0055E8  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31228  0055EA  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31229  0055EC  0102               	movlb	2	; () banked
 31230  0055EE  51E6               	movf	(_loRa+230)& (0+255),w,b
 31231  0055F0  EC28  F038         	call	_SwTimerSetCallback
 31232                           
 31233                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31234  0055F4  0EA8               	movlw	low _UnconfirmedTransmissionCallback
 31235  0055F6  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31236  0055F8  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31237  0055FA  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31238  0055FC  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31239  0055FE  0102               	movlb	2	; () banked
 31240  005600  51EA               	movf	(_loRa+234)& (0+255),w,b
 31241  005602  EC28  F038         	call	_SwTimerSetCallback
 31242                           
 31243                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31244  005606  0E06               	movlw	low _UpdateJoinSuccessState
 31245  005608  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31246  00560A  0E45               	movlw	high _UpdateJoinSuccessState
 31247  00560C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31248  00560E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31249  005610  0102               	movlb	2	; () banked
 31250  005612  51F3               	movf	(_loRa+243)& (0+255),w,b
 31251  005614  EC28  F038         	call	_SwTimerSetCallback
 31252                           
 31253                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31254  005618  0E02               	movlw	low _DutyCycleCallback
 31255  00561A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31256  00561C  0E21               	movlw	high _DutyCycleCallback
 31257  00561E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31258  005620  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31259  005622  0102               	movlb	2	; () banked
 31260  005624  51E9               	movf	(_loRa+233)& (0+255),w,b
 31261  005626  EF28  F038         	goto	_SwTimerSetCallback
 31262  00562A                     __end_of_SetCallbackSoftwareTimers:
 31263                           	opt stack 0
 31264                           tosu	equ	0xFFF
 31265                           tosh	equ	0xFFE
 31266                           tosl	equ	0xFFD
 31267                           pclath	equ	0xFFA
 31268                           tblptru	equ	0xFF8
 31269                           tblptrh	equ	0xFF7
 31270                           tblptrl	equ	0xFF6
 31271                           tablat	equ	0xFF5
 31272                           prodh	equ	0xFF4
 31273                           prodl	equ	0xFF3
 31274                           intcon	equ	0xFF2
 31275                           intcon2	equ	0xFF1
 31276                           intcon3	equ	0xFF0
 31277                           indf0	equ	0xFEF
 31278                           postinc0	equ	0xFEE
 31279                           plusw0	equ	0xFEB
 31280                           fsr0h	equ	0xFEA
 31281                           fsr0l	equ	0xFE9
 31282                           wreg	equ	0xFE8
 31283                           postinc1	equ	0xFE6
 31284                           postdec1	equ	0xFE5
 31285                           plusw1	equ	0xFE3
 31286                           fsr1h	equ	0xFE2
 31287                           fsr1l	equ	0xFE1
 31288                           indf2	equ	0xFDF
 31289                           postinc2	equ	0xFDE
 31290                           postdec2	equ	0xFDD
 31291                           plusw2	equ	0xFDB
 31292                           fsr2h	equ	0xFDA
 31293                           fsr2l	equ	0xFD9
 31294                           status	equ	0xFD8
 31295                           
 31296 ;; *************** function _RADIO_ReadRandom *****************
 31297 ;; Defined at:
 31298 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;		None
 31301 ;; Auto vars:     Size  Location     Type
 31302 ;;  retVal          2   18[BANK0 ] unsigned int 
 31303 ;;  i               1   20[BANK0 ] unsigned char 
 31304 ;; Return value:  Size  Location     Type
 31305 ;;                  2   16[BANK0 ] unsigned int 
 31306 ;; Registers used:
 31307 ;;		wreg, status,2, status,0, cstack
 31308 ;; Tracked objects:
 31309 ;;		On entry : F/1
 31310 ;;		On exit  : 0/0
 31311 ;;		Unchanged: 0/0
 31312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31314 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31316 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31317 ;;Total ram usage:        5 bytes
 31318 ;; Hardware stack levels used:    1
 31319 ;; Hardware stack levels required when called:   11
 31320 ;; This function calls:
 31321 ;;		_RADIO_RegisterRead
 31322 ;;		_RADIO_RegisterWrite
 31323 ;;		_RADIO_WriteMode
 31324 ;;		_SystemBlockingWaitMs
 31325 ;; This function is called by:
 31326 ;;		_LORAWAN_Init
 31327 ;; This function uses a non-reentrant model
 31328 ;;
 31329                           
 31330                           	psect	text161
 31331  005EA0                     __ptext161:
 31332                           	opt stack 0
 31333  005EA0                     _RADIO_ReadRandom:
 31334                           	opt stack 18
 31335                           
 31336                           ; BSR set to: 1
 31337                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31338                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31339                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31340                           
 31341                           ; BSR set to: 0
 31342                           ;incstack = 0
 31343  005EA0  0100               	movlb	0	; () banked
 31344  005EA2  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31345  005EA4  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31349  005EA6  0E01               	movlw	1
 31350  005EA8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31351  005EAA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31352  005EAC  0E00               	movlw	0
 31353  005EAE  EC5F  F028         	call	_RADIO_WriteMode
 31354                           
 31355                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31356  005EB2  0100               	movlb	0	; () banked
 31357  005EB4  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31358  005EB6  0E11               	movlw	17
 31359  005EB8  EC2A  F03A         	call	_RADIO_RegisterWrite
 31360                           
 31361                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31362  005EBC  0E01               	movlw	1
 31363  005EBE  0100               	movlb	0	; () banked
 31364  005EC0  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31365  005EC2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31366  005EC4  0E05               	movlw	5
 31367  005EC6  EC5F  F028         	call	_RADIO_WriteMode
 31368                           
 31369                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31370  005ECA  0100               	movlb	0	; () banked
 31371  005ECC  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31372  005ECE                     l15277:
 31373                           
 31374                           ; BSR set to: 0
 31375                           ;radio_driver_SX1276.c: 1377: {
 31376                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31377  005ECE  0E01               	movlw	1
 31378  005ED0  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31379  005ED2  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31380  005ED4  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31381  005ED6  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31382  005ED8  ECC7  F038         	call	_SystemBlockingWaitMs	;wreg free
 31383                           
 31384                           ; BSR set to: 0
 31385                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31386  005EDC  90D8               	bcf	status,0,c
 31387  005EDE  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31388  005EE0  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31389                           
 31390                           ; BSR set to: 0
 31391                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31392  005EE2  0E2C               	movlw	44
 31393  005EE4  EC53  F039         	call	_RADIO_RegisterRead
 31394  005EE8  0B01               	andlw	1
 31395  005EEA  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31396  005EEC  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31397                           
 31398                           ; BSR set to: 0
 31399  005EEE  0E0F               	movlw	15
 31400  005EF0  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31401  005EF2  D7ED               	goto	l15277
 31402                           
 31403                           ; BSR set to: 0
 31404                           ;radio_driver_SX1276.c: 1381: }
 31405                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31406  005EF4  0E01               	movlw	1
 31407  005EF6  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31408  005EF8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31409  005EFA  0E00               	movlw	0
 31410  005EFC  EC5F  F028         	call	_RADIO_WriteMode
 31411                           
 31412                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31413  005F00  0100               	movlb	0	; () banked
 31414  005F02  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31415  005F04  0E12               	movlw	18
 31416  005F06  EC2A  F03A         	call	_RADIO_RegisterWrite
 31417                           
 31418                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31419  005F0A  0100               	movlb	0	; () banked
 31420  005F0C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31421  005F0E  0E11               	movlw	17
 31422  005F10  EC2A  F03A         	call	_RADIO_RegisterWrite
 31423                           
 31424                           ;radio_driver_SX1276.c: 1389: return retVal;
 31425  005F14  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31426  005F18  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31427  005F1C  0012               	return		;funcret
 31428  005F1E                     __end_of_RADIO_ReadRandom:
 31429                           	opt stack 0
 31430                           tosu	equ	0xFFF
 31431                           tosh	equ	0xFFE
 31432                           tosl	equ	0xFFD
 31433                           pclath	equ	0xFFA
 31434                           tblptru	equ	0xFF8
 31435                           tblptrh	equ	0xFF7
 31436                           tblptrl	equ	0xFF6
 31437                           tablat	equ	0xFF5
 31438                           prodh	equ	0xFF4
 31439                           prodl	equ	0xFF3
 31440                           intcon	equ	0xFF2
 31441                           intcon2	equ	0xFF1
 31442                           intcon3	equ	0xFF0
 31443                           indf0	equ	0xFEF
 31444                           postinc0	equ	0xFEE
 31445                           plusw0	equ	0xFEB
 31446                           fsr0h	equ	0xFEA
 31447                           fsr0l	equ	0xFE9
 31448                           wreg	equ	0xFE8
 31449                           postinc1	equ	0xFE6
 31450                           postdec1	equ	0xFE5
 31451                           plusw1	equ	0xFE3
 31452                           fsr1h	equ	0xFE2
 31453                           fsr1l	equ	0xFE1
 31454                           indf2	equ	0xFDF
 31455                           postinc2	equ	0xFDE
 31456                           postdec2	equ	0xFDD
 31457                           plusw2	equ	0xFDB
 31458                           fsr2h	equ	0xFDA
 31459                           fsr2l	equ	0xFD9
 31460                           status	equ	0xFD8
 31461                           
 31462 ;; *************** function _LORAWAN_Reset *****************
 31463 ;; Defined at:
 31464 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31465 ;; Parameters:    Size  Location     Type
 31466 ;;  ismBandNew      1    wreg     enum E8047
 31467 ;; Auto vars:     Size  Location     Type
 31468 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 31469 ;; Return value:  Size  Location     Type
 31470 ;;                  1    wreg      void 
 31471 ;; Registers used:
 31472 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31473 ;; Tracked objects:
 31474 ;;		On entry : 0/1
 31475 ;;		On exit  : D/0
 31476 ;;		Unchanged: 0/0
 31477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31481 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31482 ;;Total ram usage:        1 bytes
 31483 ;; Hardware stack levels used:    1
 31484 ;; Hardware stack levels required when called:   12
 31485 ;; This function calls:
 31486 ;;		_InitDefault433Channels
 31487 ;;		_InitDefault868Channels
 31488 ;;		_LORAWAN_LinkCheckConfigure
 31489 ;;		_RADIO_Init
 31490 ;;		_RADIO_SetLoRaSyncWord
 31491 ;;		_StopAllSoftwareTimers
 31492 ;;		_UpdateMinMaxChDataRate
 31493 ;;		_memset
 31494 ;; This function is called by:
 31495 ;;		_LORAWAN_Init
 31496 ;; This function uses a non-reentrant model
 31497 ;;
 31498                           
 31499                           	psect	text162
 31500  003E80                     __ptext162:
 31501                           	opt stack 0
 31502  003E80                     _LORAWAN_Reset:
 31503                           	opt stack 17
 31504                           
 31505                           ;incstack = 0
 31506                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31507  003E80  0100               	movlb	0	; () banked
 31508  003E82  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31509                           
 31510                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31511  003E84  0102               	movlb	2	; () banked
 31512  003E86  05F0               	decf	(_loRa+240)& (0+255),w,b
 31513  003E88  E102               	bnz	l15297
 31514                           
 31515                           ; BSR set to: 2
 31516                           ;lorawan_eu.c: 151: {
 31517                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31518  003E8A  ECF4  F034         	call	_StopAllSoftwareTimers	;wreg free
 31519  003E8E                     l15297:
 31520                           
 31521                           ;lorawan_eu.c: 153: }
 31522                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31523  003E8E  0E34               	movlw	52
 31524  003E90  0102               	movlb	2	; () banked
 31525  003E92  6FF4               	movwf	(_loRa+244)& (0+255),b
 31526                           
 31527                           ; BSR set to: 2
 31528                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31529  003E94  51F4               	movf	(_loRa+244)& (0+255),w,b
 31530  003E96  EC02  F03C         	call	_RADIO_SetLoRaSyncWord
 31531                           
 31532                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31533  003E9A  0102               	movlb	2	; () banked
 31534  003E9C  6B02               	clrf	(_loRa+2)& (0+255),b
 31535  003E9E  6B03               	clrf	(_loRa+3)& (0+255),b
 31536  003EA0  6B04               	clrf	(_loRa+4)& (0+255),b
 31537  003EA2  6B05               	clrf	(_loRa+5)& (0+255),b
 31538                           
 31539                           ; BSR set to: 2
 31540                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31541  003EA4  69DD               	setf	(_loRa+221)& (0+255),b
 31542                           
 31543                           ; BSR set to: 2
 31544                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31545  003EA6  6BDE               	clrf	(_loRa+222)& (0+255),b
 31546                           
 31547                           ; BSR set to: 2
 31548                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31549  003EA8  6BC8               	clrf	(_loRa+200)& (0+255),b
 31550  003EAA  6BC9               	clrf	(_loRa+201)& (0+255),b
 31551  003EAC  6BCA               	clrf	(_loRa+202)& (0+255),b
 31552  003EAE  6BCB               	clrf	(_loRa+203)& (0+255),b
 31553                           
 31554                           ; BSR set to: 2
 31555                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31556  003EB0  6BD4               	clrf	(_loRa+212)& (0+255),b
 31557  003EB2  6BD5               	clrf	(_loRa+213)& (0+255),b
 31558                           
 31559                           ; BSR set to: 2
 31560                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31561  003EB4  6B0A               	clrf	(_loRa+10)& (0+255),b
 31562  003EB6  6B0B               	clrf	(_loRa+11)& (0+255),b
 31563  003EB8  6B0C               	clrf	(_loRa+12)& (0+255),b
 31564  003EBA  6B0D               	clrf	(_loRa+13)& (0+255),b
 31565                           
 31566                           ; BSR set to: 2
 31567                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31568  003EBC  6B06               	clrf	(_loRa+6)& (0+255),b
 31569  003EBE  6B07               	clrf	(_loRa+7)& (0+255),b
 31570  003EC0  6B08               	clrf	(_loRa+8)& (0+255),b
 31571  003EC2  6B09               	clrf	(_loRa+9)& (0+255),b
 31572                           
 31573                           ; BSR set to: 2
 31574                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31575  003EC4  6BD2               	clrf	(_loRa+210)& (0+255),b
 31576  003EC6  6BD3               	clrf	(_loRa+211)& (0+255),b
 31577                           
 31578                           ; BSR set to: 2
 31579                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31580  003EC8  6BDC               	clrf	(_loRa+220)& (0+255),b
 31581  003ECA  0E01               	movlw	1
 31582  003ECC  6FDB               	movwf	(_loRa+219)& (0+255),b
 31583                           
 31584                           ; BSR set to: 2
 31585                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31586  003ECE  6BD0               	clrf	(_loRa+208)& (0+255),b
 31587  003ED0  6BD1               	clrf	(_loRa+209)& (0+255),b
 31588                           
 31589                           ; BSR set to: 2
 31590                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31591  003ED2  6BEE               	clrf	(_loRa+238)& (0+255),b
 31592                           
 31593                           ; BSR set to: 2
 31594                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31595  003ED4  6BEF               	clrf	(_loRa+239)& (0+255),b
 31596                           
 31597                           ; BSR set to: 2
 31598                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31599  003ED6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31600  003ED8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31601  003EDA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31602  003EDC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31603                           
 31604                           ; BSR set to: 2
 31605                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31606  003EDE  9503               	bcf	(_loRa+3)& (0+255),2,b
 31607                           
 31608                           ; BSR set to: 2
 31609                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31610  003EE0  6B02               	clrf	(_loRa+2)& (0+255),b
 31611  003EE2  6B03               	clrf	(_loRa+3)& (0+255),b
 31612  003EE4  6B04               	clrf	(_loRa+4)& (0+255),b
 31613  003EE6  6B05               	clrf	(_loRa+5)& (0+255),b
 31614                           
 31615                           ; BSR set to: 2
 31616                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31617  003EE8  6B00               	clrf	_loRa& (0+255),b
 31618  003EEA  6B01               	clrf	(_loRa+1)& (0+255),b
 31619                           
 31620                           ; BSR set to: 2
 31621                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31622  003EEC  0E07               	movlw	7
 31623  003EEE  6FD7               	movwf	(_loRa+215)& (0+255),b
 31624                           
 31625                           ; BSR set to: 2
 31626                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31627  003EF0  6BD6               	clrf	(_loRa+214)& (0+255),b
 31628                           
 31629                           ; BSR set to: 2
 31630                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31631  003EF2  0E01               	movlw	1
 31632  003EF4  6FD9               	movwf	(_loRa+217)& (0+255),b
 31633                           
 31634                           ; BSR set to: 2
 31635                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31636  003EF6  6FD8               	movwf	(_loRa+216)& (0+255),b
 31637                           
 31638                           ; BSR set to: 2
 31639                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31640  003EF8  69E0               	setf	(_loRa+224)& (0+255),b
 31641                           
 31642                           ; BSR set to: 2
 31643                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31644  003EFA  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31645                           
 31646                           ; BSR set to: 2
 31647                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31648  003EFE  6B12               	clrf	(_loRa+18)& (0+255),b
 31649                           
 31650                           ; BSR set to: 2
 31651                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31652  003F00  0E10               	movlw	16
 31653  003F02  6FED               	movwf	(_loRa+237)& (0+255),b
 31654                           
 31655                           ; BSR set to: 2
 31656                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31657  003F04  0100               	movlb	0	; () banked
 31658  003F06  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31659  003F08  E11A               	bnz	l15359
 31660                           
 31661                           ; BSR set to: 0
 31662                           ;lorawan_eu.c: 193: {
 31663                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31664  003F0A  0EFF               	movlw	low (_radioBuffer+16)
 31665  003F0C  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31666  003F0E  0E05               	movlw	high (_radioBuffer+16)
 31667  003F10  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31668  003F12  0EA0               	movlw	160
 31669  003F14  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31670  003F16  0E27               	movlw	39
 31671  003F18  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31672  003F1A  0EBE               	movlw	190
 31673  003F1C  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31674  003F1E  0E33               	movlw	51
 31675  003F20  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31676  003F22  EC36  F01C         	call	_RADIO_Init	;wreg free
 31677                           
 31678                           ; BSR set to: 1
 31679                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31680  003F26  ECBA  F031         	call	_InitDefault868Channels	;wreg free
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31684  003F2A  0102               	movlb	2	; () banked
 31685  003F2C  6B1C               	clrf	(_loRa+28)& (0+255),b
 31686                           
 31687                           ; BSR set to: 2
 31688                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31689  003F2E  0E08               	movlw	8
 31690  003F30  6F18               	movwf	(_loRa+24)& (0+255),b
 31691  003F32  0EE6               	movlw	230
 31692  003F34  6F19               	movwf	(_loRa+25)& (0+255),b
 31693  003F36  0ED3               	movlw	211
 31694  003F38  6F1A               	movwf	(_loRa+26)& (0+255),b
 31695  003F3A  0E33               	movlw	51
 31696  003F3C  D019               	goto	L20
 31697  003F3E                     l15359:
 31698                           
 31699                           ; BSR set to: 0
 31700                           ;lorawan_eu.c: 201: else
 31701                           ;lorawan_eu.c: 202: {
 31702                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31703  003F3E  0EFF               	movlw	low (_radioBuffer+16)
 31704  003F40  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31705  003F42  0E05               	movlw	high (_radioBuffer+16)
 31706  003F44  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31707  003F46  0E20               	movlw	32
 31708  003F48  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31709  003F4A  0EA2               	movlw	162
 31710  003F4C  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31711  003F4E  0ED3               	movlw	211
 31712  003F50  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31713  003F52  0E19               	movlw	25
 31714  003F54  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31715  003F56  EC36  F01C         	call	_RADIO_Init	;wreg free
 31716                           
 31717                           ; BSR set to: 1
 31718                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31719  003F5A  ECED  F031         	call	_InitDefault433Channels	;wreg free
 31720                           
 31721                           ; BSR set to: 0
 31722                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31723  003F5E  0102               	movlb	2	; () banked
 31724  003F60  6B1C               	clrf	(_loRa+28)& (0+255),b
 31725                           
 31726                           ; BSR set to: 2
 31727                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31728  003F62  0E28               	movlw	40
 31729  003F64  6F18               	movwf	(_loRa+24)& (0+255),b
 31730  003F66  0E76               	movlw	118
 31731  003F68  6F19               	movwf	(_loRa+25)& (0+255),b
 31732  003F6A  0EE8               	movlw	232
 31733  003F6C  6F1A               	movwf	(_loRa+26)& (0+255),b
 31734  003F6E  0E19               	movlw	25
 31735  003F70                     L20:
 31736  003F70  6F1B               	movwf	(_loRa+27)& (0+255),b
 31737                           
 31738                           ; BSR set to: 2
 31739                           ;lorawan_eu.c: 209: }
 31740                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31741  003F72  0E01               	movlw	1
 31742  003F74  6FE1               	movwf	(_loRa+225)& (0+255),b
 31743                           
 31744                           ; BSR set to: 2
 31745                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31746  003F76  6BDF               	clrf	(_loRa+223)& (0+255),b
 31747                           
 31748                           ; BSR set to: 2
 31749                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31750  003F78  EC6F  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31751                           
 31752                           ; BSR set to: 0
 31753                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31754  003F7C  0102               	movlb	2	; () banked
 31755  003F7E  6BA5               	clrf	(_loRa+165)& (0+255),b
 31756  003F80  6BA6               	clrf	(_loRa+166)& (0+255),b
 31757                           
 31758                           ; BSR set to: 2
 31759                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31760  003F82  0E1D               	movlw	low (_loRa+29)
 31761  003F84  0100               	movlb	0	; () banked
 31762  003F86  6F64               	movwf	memset@p1& (0+255),b
 31763  003F88  0E02               	movlw	high (_loRa+29)
 31764  003F8A  6F65               	movwf	(memset@p1+1)& (0+255),b
 31765  003F8C  6B67               	clrf	(memset@c+1)& (0+255),b
 31766  003F8E  6B66               	clrf	memset@c& (0+255),b
 31767  003F90  6B69               	clrf	(memset@n+1)& (0+255),b
 31768  003F92  0E69               	movlw	105
 31769  003F94  6F68               	movwf	memset@n& (0+255),b
 31770  003F96  ECDC  F038         	call	_memset	;wreg free
 31771                           
 31772                           ; BSR set to: 0
 31773                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31774  003F9A  0E03               	movlw	3
 31775  003F9C  0102               	movlb	2	; () banked
 31776  003F9E  6F95               	movwf	(_loRa+149)& (0+255),b
 31777  003FA0  0EE8               	movlw	232
 31778  003FA2  6F94               	movwf	(_loRa+148)& (0+255),b
 31779                           
 31780                           ; BSR set to: 2
 31781                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31782  003FA4  0E07               	movlw	7
 31783  003FA6  6F97               	movwf	(_loRa+151)& (0+255),b
 31784  003FA8  0ED0               	movlw	208
 31785  003FAA  6F96               	movwf	(_loRa+150)& (0+255),b
 31786                           
 31787                           ; BSR set to: 2
 31788                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31789  003FAC  0E13               	movlw	19
 31790  003FAE  6F99               	movwf	(_loRa+153)& (0+255),b
 31791  003FB0  0E88               	movlw	136
 31792  003FB2  6F98               	movwf	(_loRa+152)& (0+255),b
 31793                           
 31794                           ; BSR set to: 2
 31795                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31796  003FB4  0E17               	movlw	23
 31797  003FB6  6F9B               	movwf	(_loRa+155)& (0+255),b
 31798  003FB8  0E70               	movlw	112
 31799  003FBA  6F9A               	movwf	(_loRa+154)& (0+255),b
 31800                           
 31801                           ; BSR set to: 2
 31802                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 31803  003FBC  0E07               	movlw	7
 31804  003FBE  6FA1               	movwf	(_loRa+161)& (0+255),b
 31805  003FC0  0ED0               	movlw	208
 31806  003FC2  6FA0               	movwf	(_loRa+160)& (0+255),b
 31807                           
 31808                           ; BSR set to: 2
 31809                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 31810  003FC4  0E20               	movlw	32
 31811  003FC6  6FA3               	movwf	(_loRa+163)& (0+255),b
 31812                           
 31813                           ; BSR set to: 2
 31814                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 31815  003FC8  0E40               	movlw	64
 31816  003FCA  6FA2               	movwf	(_loRa+162)& (0+255),b
 31817                           
 31818                           ; BSR set to: 2
 31819                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 31820  003FCC  6F9D               	movwf	(_loRa+157)& (0+255),b
 31821  003FCE  6B9C               	clrf	(_loRa+156)& (0+255),b
 31822                           
 31823                           ; BSR set to: 2
 31824                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 31825  003FD0  6F9F               	movwf	(_loRa+159)& (0+255),b
 31826  003FD2  6B9E               	clrf	(_loRa+158)& (0+255),b
 31827                           
 31828                           ; BSR set to: 2
 31829                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 31830  003FD4  0100               	movlb	0	; () banked
 31831  003FD6  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 31832  003FD8  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 31833  003FDA  EF68  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 31834  003FDE                     __end_of_LORAWAN_Reset:
 31835                           	opt stack 0
 31836                           tosu	equ	0xFFF
 31837                           tosh	equ	0xFFE
 31838                           tosl	equ	0xFFD
 31839                           pclath	equ	0xFFA
 31840                           tblptru	equ	0xFF8
 31841                           tblptrh	equ	0xFF7
 31842                           tblptrl	equ	0xFF6
 31843                           tablat	equ	0xFF5
 31844                           prodh	equ	0xFF4
 31845                           prodl	equ	0xFF3
 31846                           intcon	equ	0xFF2
 31847                           intcon2	equ	0xFF1
 31848                           intcon3	equ	0xFF0
 31849                           indf0	equ	0xFEF
 31850                           postinc0	equ	0xFEE
 31851                           plusw0	equ	0xFEB
 31852                           fsr0h	equ	0xFEA
 31853                           fsr0l	equ	0xFE9
 31854                           wreg	equ	0xFE8
 31855                           postinc1	equ	0xFE6
 31856                           postdec1	equ	0xFE5
 31857                           plusw1	equ	0xFE3
 31858                           fsr1h	equ	0xFE2
 31859                           fsr1l	equ	0xFE1
 31860                           indf2	equ	0xFDF
 31861                           postinc2	equ	0xFDE
 31862                           postdec2	equ	0xFDD
 31863                           plusw2	equ	0xFDB
 31864                           fsr2h	equ	0xFDA
 31865                           fsr2l	equ	0xFD9
 31866                           status	equ	0xFD8
 31867                           
 31868 ;; *************** function _UpdateMinMaxChDataRate *****************
 31869 ;; Defined at:
 31870 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31871 ;; Parameters:    Size  Location     Type
 31872 ;;		None
 31873 ;; Auto vars:     Size  Location     Type
 31874 ;;  i               1    5[BANK0 ] unsigned char 
 31875 ;; Return value:  Size  Location     Type
 31876 ;;                  1    wreg      void 
 31877 ;; Registers used:
 31878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31879 ;; Tracked objects:
 31880 ;;		On entry : F/2
 31881 ;;		On exit  : F/0
 31882 ;;		Unchanged: 0/0
 31883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31888 ;;Total ram usage:        2 bytes
 31889 ;; Hardware stack levels used:    1
 31890 ;; Hardware stack levels required when called:    7
 31891 ;; This function calls:
 31892 ;;		Nothing
 31893 ;; This function is called by:
 31894 ;;		_LORAWAN_Reset
 31895 ;; This function uses a non-reentrant model
 31896 ;;
 31897                           
 31898                           	psect	text163
 31899  0056DE                     __ptext163:
 31900                           	opt stack 0
 31901  0056DE                     _UpdateMinMaxChDataRate:
 31902                           	opt stack 21
 31903                           
 31904                           ; BSR set to: 2
 31905                           ;lorawan.c: 1065: uint8_t i;
 31906                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 31907                           
 31908                           ;incstack = 0
 31909  0056DE  0E07               	movlw	7
 31910  0056E0  6FEB               	movwf	(_loRa+235)& (0+255),b
 31911                           
 31912                           ; BSR set to: 2
 31913                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 31914  0056E2  6BEC               	clrf	(_loRa+236)& (0+255),b
 31915                           
 31916                           ; BSR set to: 2
 31917                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 31918  0056E4  0100               	movlb	0	; () banked
 31919  0056E6  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 31920  0056E8  D04E               	goto	l10925
 31921  0056EA                     l10913:
 31922                           
 31923                           ; BSR set to: 0
 31924                           ;lorawan.c: 1072: {
 31925                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 31926  0056EA  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31927  0056EC  0D0E               	mullw	14
 31928  0056EE  0E05               	movlw	low (_Channels+5)
 31929  0056F0  24F3               	addwf	prodl,w,c
 31930  0056F2  6ED9               	movwf	fsr2l,c
 31931  0056F4  0E04               	movlw	high (_Channels+5)
 31932  0056F6  20F4               	addwfc	prodh,w,c
 31933  0056F8  6EDA               	movwf	fsr2h,c
 31934  0056FA  50DF               	movf	223,w,c
 31935  0056FC  0B0F               	andlw	15
 31936  0056FE  0100               	movlb	0	; () banked
 31937  005700  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 31938  005702  0102               	movlb	2	; () banked
 31939  005704  51EB               	movf	(_loRa+235)& (0+255),w,b
 31940  005706  0100               	movlb	0	; () banked
 31941  005708  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 31942  00570A  E216               	bc	l2095
 31943                           
 31944                           ; BSR set to: 0
 31945  00570C  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31946  00570E  0D0E               	mullw	14
 31947  005710  0E04               	movlw	low (_Channels+4)
 31948  005712  24F3               	addwf	prodl,w,c
 31949  005714  6ED9               	movwf	fsr2l,c
 31950  005716  0E04               	movlw	high (_Channels+4)
 31951  005718  20F4               	addwfc	prodh,w,c
 31952  00571A  6EDA               	movwf	fsr2h,c
 31953  00571C  04DE               	decf	postinc2,w,c
 31954  00571E  E10C               	bnz	l2095
 31955                           
 31956                           ; BSR set to: 0
 31957                           ;lorawan.c: 1074: {
 31958                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 31959  005720  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31960  005722  0D0E               	mullw	14
 31961  005724  0E05               	movlw	low (_Channels+5)
 31962  005726  24F3               	addwf	prodl,w,c
 31963  005728  6ED9               	movwf	fsr2l,c
 31964  00572A  0E04               	movlw	high (_Channels+5)
 31965  00572C  20F4               	addwfc	prodh,w,c
 31966  00572E  6EDA               	movwf	fsr2h,c
 31967  005730  50DF               	movf	223,w,c
 31968  005732  0B0F               	andlw	15
 31969  005734  0102               	movlb	2	; () banked
 31970  005736  6FEB               	movwf	(_loRa+235)& (0+255),b
 31971  005738                     l2095:
 31972                           
 31973                           ;lorawan.c: 1076: }
 31974                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 31975  005738  0100               	movlb	0	; () banked
 31976  00573A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31977  00573C  0D0E               	mullw	14
 31978  00573E  0E05               	movlw	low (_Channels+5)
 31979  005740  24F3               	addwf	prodl,w,c
 31980  005742  6ED9               	movwf	fsr2l,c
 31981  005744  0E04               	movlw	high (_Channels+5)
 31982  005746  20F4               	addwfc	prodh,w,c
 31983  005748  6EDA               	movwf	fsr2h,c
 31984  00574A  38DF               	swapf	223,w,c
 31985  00574C  0B0F               	andlw	15
 31986  00574E  0102               	movlb	2	; () banked
 31987  005750  61EC               	cpfslt	(_loRa+236)& (0+255),b
 31988  005752  D017               	goto	l10923
 31989                           
 31990                           ; BSR set to: 2
 31991  005754  0100               	movlb	0	; () banked
 31992  005756  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31993  005758  0D0E               	mullw	14
 31994  00575A  0E04               	movlw	low (_Channels+4)
 31995  00575C  24F3               	addwf	prodl,w,c
 31996  00575E  6ED9               	movwf	fsr2l,c
 31997  005760  0E04               	movlw	high (_Channels+4)
 31998  005762  20F4               	addwfc	prodh,w,c
 31999  005764  6EDA               	movwf	fsr2h,c
 32000  005766  04DE               	decf	postinc2,w,c
 32001  005768  E10C               	bnz	l10923
 32002                           
 32003                           ; BSR set to: 0
 32004                           ;lorawan.c: 1078: {
 32005                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32006  00576A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32007  00576C  0D0E               	mullw	14
 32008  00576E  0E05               	movlw	low (_Channels+5)
 32009  005770  24F3               	addwf	prodl,w,c
 32010  005772  6ED9               	movwf	fsr2l,c
 32011  005774  0E04               	movlw	high (_Channels+5)
 32012  005776  20F4               	addwfc	prodh,w,c
 32013  005778  6EDA               	movwf	fsr2h,c
 32014  00577A  38DF               	swapf	223,w,c
 32015  00577C  0B0F               	andlw	15
 32016  00577E  0102               	movlb	2	; () banked
 32017  005780  6FEC               	movwf	(_loRa+236)& (0+255),b
 32018  005782                     l10923:
 32019  005782  0100               	movlb	0	; () banked
 32020  005784  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32021  005786                     l10925:
 32022                           
 32023                           ; BSR set to: 0
 32024  005786  0102               	movlb	2	; () banked
 32025  005788  51ED               	movf	(_loRa+237)& (0+255),w,b
 32026  00578A  0100               	movlb	0	; () banked
 32027  00578C  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32028  00578E  E3AD               	bnc	l10913
 32029                           
 32030                           ; BSR set to: 0
 32031  005790  0012               	return		;funcret
 32032  005792                     __end_of_UpdateMinMaxChDataRate:
 32033                           	opt stack 0
 32034                           tosu	equ	0xFFF
 32035                           tosh	equ	0xFFE
 32036                           tosl	equ	0xFFD
 32037                           pclath	equ	0xFFA
 32038                           tblptru	equ	0xFF8
 32039                           tblptrh	equ	0xFF7
 32040                           tblptrl	equ	0xFF6
 32041                           tablat	equ	0xFF5
 32042                           prodh	equ	0xFF4
 32043                           prodl	equ	0xFF3
 32044                           intcon	equ	0xFF2
 32045                           intcon2	equ	0xFF1
 32046                           intcon3	equ	0xFF0
 32047                           indf0	equ	0xFEF
 32048                           postinc0	equ	0xFEE
 32049                           plusw0	equ	0xFEB
 32050                           fsr0h	equ	0xFEA
 32051                           fsr0l	equ	0xFE9
 32052                           wreg	equ	0xFE8
 32053                           postinc1	equ	0xFE6
 32054                           postdec1	equ	0xFE5
 32055                           plusw1	equ	0xFE3
 32056                           fsr1h	equ	0xFE2
 32057                           fsr1l	equ	0xFE1
 32058                           indf2	equ	0xFDF
 32059                           postinc2	equ	0xFDE
 32060                           postdec2	equ	0xFDD
 32061                           plusw2	equ	0xFDB
 32062                           fsr2h	equ	0xFDA
 32063                           fsr2l	equ	0xFD9
 32064                           status	equ	0xFD8
 32065                           
 32066 ;; *************** function _StopAllSoftwareTimers *****************
 32067 ;; Defined at:
 32068 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32069 ;; Parameters:    Size  Location     Type
 32070 ;;		None
 32071 ;; Auto vars:     Size  Location     Type
 32072 ;;		None
 32073 ;; Return value:  Size  Location     Type
 32074 ;;                  1    wreg      void 
 32075 ;; Registers used:
 32076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32077 ;; Tracked objects:
 32078 ;;		On entry : F/2
 32079 ;;		On exit  : F/0
 32080 ;;		Unchanged: 0/0
 32081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32086 ;;Total ram usage:        0 bytes
 32087 ;; Hardware stack levels used:    1
 32088 ;; Hardware stack levels required when called:    8
 32089 ;; This function calls:
 32090 ;;		_SwTimerStop
 32091 ;; This function is called by:
 32092 ;;		_LORAWAN_Init
 32093 ;;		_LORAWAN_Reset
 32094 ;; This function uses a non-reentrant model
 32095 ;;
 32096                           
 32097                           	psect	text164
 32098  0069E8                     __ptext164:
 32099                           	opt stack 0
 32100  0069E8                     _StopAllSoftwareTimers:
 32101                           	opt stack 21
 32102                           
 32103                           ; BSR set to: 2
 32104                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 32105                           
 32106                           ; BSR set to: 0
 32107                           ;incstack = 0
 32108  0069E8  51E2               	movf	(_loRa+226)& (0+255),w,b
 32109  0069EA  EC57  F03A         	call	_SwTimerStop
 32110                           
 32111                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 32112  0069EE  0102               	movlb	2	; () banked
 32113  0069F0  51E3               	movf	(_loRa+227)& (0+255),w,b
 32114  0069F2  EC57  F03A         	call	_SwTimerStop
 32115                           
 32116                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 32117  0069F6  0102               	movlb	2	; () banked
 32118  0069F8  51E7               	movf	(_loRa+231)& (0+255),w,b
 32119  0069FA  EC57  F03A         	call	_SwTimerStop
 32120                           
 32121                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 32122  0069FE  0102               	movlb	2	; () banked
 32123  006A00  51E4               	movf	(_loRa+228)& (0+255),w,b
 32124  006A02  EC57  F03A         	call	_SwTimerStop
 32125                           
 32126                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 32127  006A06  0102               	movlb	2	; () banked
 32128  006A08  51E5               	movf	(_loRa+229)& (0+255),w,b
 32129  006A0A  EC57  F03A         	call	_SwTimerStop
 32130                           
 32131                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 32132  006A0E  0102               	movlb	2	; () banked
 32133  006A10  51E8               	movf	(_loRa+232)& (0+255),w,b
 32134  006A12  EC57  F03A         	call	_SwTimerStop
 32135                           
 32136                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 32137  006A16  0102               	movlb	2	; () banked
 32138  006A18  51E6               	movf	(_loRa+230)& (0+255),w,b
 32139  006A1A  EC57  F03A         	call	_SwTimerStop
 32140                           
 32141                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32142  006A1E  0102               	movlb	2	; () banked
 32143  006A20  51EA               	movf	(_loRa+234)& (0+255),w,b
 32144  006A22  EC57  F03A         	call	_SwTimerStop
 32145                           
 32146                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 32147  006A26  0102               	movlb	2	; () banked
 32148  006A28  51F3               	movf	(_loRa+243)& (0+255),w,b
 32149  006A2A  EC57  F03A         	call	_SwTimerStop
 32150                           
 32151                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 32152  006A2E  0102               	movlb	2	; () banked
 32153  006A30  51E9               	movf	(_loRa+233)& (0+255),w,b
 32154  006A32  EF57  F03A         	goto	_SwTimerStop
 32155  006A36                     __end_of_StopAllSoftwareTimers:
 32156                           	opt stack 0
 32157                           tosu	equ	0xFFF
 32158                           tosh	equ	0xFFE
 32159                           tosl	equ	0xFFD
 32160                           pclath	equ	0xFFA
 32161                           tblptru	equ	0xFF8
 32162                           tblptrh	equ	0xFF7
 32163                           tblptrl	equ	0xFF6
 32164                           tablat	equ	0xFF5
 32165                           prodh	equ	0xFF4
 32166                           prodl	equ	0xFF3
 32167                           intcon	equ	0xFF2
 32168                           intcon2	equ	0xFF1
 32169                           intcon3	equ	0xFF0
 32170                           indf0	equ	0xFEF
 32171                           postinc0	equ	0xFEE
 32172                           plusw0	equ	0xFEB
 32173                           fsr0h	equ	0xFEA
 32174                           fsr0l	equ	0xFE9
 32175                           wreg	equ	0xFE8
 32176                           postinc1	equ	0xFE6
 32177                           postdec1	equ	0xFE5
 32178                           plusw1	equ	0xFE3
 32179                           fsr1h	equ	0xFE2
 32180                           fsr1l	equ	0xFE1
 32181                           indf2	equ	0xFDF
 32182                           postinc2	equ	0xFDE
 32183                           postdec2	equ	0xFDD
 32184                           plusw2	equ	0xFDB
 32185                           fsr2h	equ	0xFDA
 32186                           fsr2l	equ	0xFD9
 32187                           status	equ	0xFD8
 32188                           
 32189 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32190 ;; Defined at:
 32191 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32192 ;; Parameters:    Size  Location     Type
 32193 ;;  syncWord        1    wreg     unsigned char 
 32194 ;; Auto vars:     Size  Location     Type
 32195 ;;  syncWord        1    4[BANK0 ] unsigned char 
 32196 ;; Return value:  Size  Location     Type
 32197 ;;                  1    wreg      void 
 32198 ;; Registers used:
 32199 ;;		wreg
 32200 ;; Tracked objects:
 32201 ;;		On entry : F/2
 32202 ;;		On exit  : 0/0
 32203 ;;		Unchanged: 0/0
 32204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32208 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32209 ;;Total ram usage:        1 bytes
 32210 ;; Hardware stack levels used:    1
 32211 ;; Hardware stack levels required when called:    7
 32212 ;; This function calls:
 32213 ;;		Nothing
 32214 ;; This function is called by:
 32215 ;;		_LORAWAN_Reset
 32216 ;;		_ConfigureRadio
 32217 ;; This function uses a non-reentrant model
 32218 ;;
 32219                           
 32220                           	psect	text165
 32221  007804                     __ptext165:
 32222                           	opt stack 0
 32223  007804                     _RADIO_SetLoRaSyncWord:
 32224                           	opt stack 18
 32225                           
 32226                           ; BSR set to: 0
 32227                           ;incstack = 0
 32228                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32229  007804  0100               	movlb	0	; () banked
 32230  007806  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32231                           
 32232                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32233  007808  C064  F18C         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32234  00780C  0012               	return		;funcret
 32235  00780E                     __end_of_RADIO_SetLoRaSyncWord:
 32236                           	opt stack 0
 32237                           tosu	equ	0xFFF
 32238                           tosh	equ	0xFFE
 32239                           tosl	equ	0xFFD
 32240                           pclath	equ	0xFFA
 32241                           tblptru	equ	0xFF8
 32242                           tblptrh	equ	0xFF7
 32243                           tblptrl	equ	0xFF6
 32244                           tablat	equ	0xFF5
 32245                           prodh	equ	0xFF4
 32246                           prodl	equ	0xFF3
 32247                           intcon	equ	0xFF2
 32248                           intcon2	equ	0xFF1
 32249                           intcon3	equ	0xFF0
 32250                           indf0	equ	0xFEF
 32251                           postinc0	equ	0xFEE
 32252                           plusw0	equ	0xFEB
 32253                           fsr0h	equ	0xFEA
 32254                           fsr0l	equ	0xFE9
 32255                           wreg	equ	0xFE8
 32256                           postinc1	equ	0xFE6
 32257                           postdec1	equ	0xFE5
 32258                           plusw1	equ	0xFE3
 32259                           fsr1h	equ	0xFE2
 32260                           fsr1l	equ	0xFE1
 32261                           indf2	equ	0xFDF
 32262                           postinc2	equ	0xFDE
 32263                           postdec2	equ	0xFDD
 32264                           plusw2	equ	0xFDB
 32265                           fsr2h	equ	0xFDA
 32266                           fsr2l	equ	0xFD9
 32267                           status	equ	0xFD8
 32268                           
 32269 ;; *************** function _RADIO_Init *****************
 32270 ;; Defined at:
 32271 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32272 ;; Parameters:    Size  Location     Type
 32273 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32274 ;;		 -> radioBuffer(271), 
 32275 ;;  frequency       4   31[BANK0 ] unsigned long 
 32276 ;; Auto vars:     Size  Location     Type
 32277 ;;		None
 32278 ;; Return value:  Size  Location     Type
 32279 ;;                  1    wreg      void 
 32280 ;; Registers used:
 32281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32282 ;; Tracked objects:
 32283 ;;		On entry : F/0
 32284 ;;		On exit  : F/1
 32285 ;;		Unchanged: 0/0
 32286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32287 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32290 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32291 ;;Total ram usage:        7 bytes
 32292 ;; Hardware stack levels used:    1
 32293 ;; Hardware stack levels required when called:   11
 32294 ;; This function calls:
 32295 ;;		_RADIO_RegisterRead
 32296 ;;		_RADIO_RegisterWrite
 32297 ;;		_RADIO_Reset
 32298 ;;		_RADIO_WriteFrequency
 32299 ;;		_RADIO_WriteMode
 32300 ;;		_SwTimerCreate
 32301 ;;		_SwTimerSetCallback
 32302 ;;		_SwTimerStop
 32303 ;; This function is called by:
 32304 ;;		_LORAWAN_Init
 32305 ;;		_LORAWAN_Reset
 32306 ;; This function uses a non-reentrant model
 32307 ;;
 32308                           
 32309                           	psect	text166
 32310  00386C                     __ptext166:
 32311                           	opt stack 0
 32312  00386C                     _RADIO_Init:
 32313                           	opt stack 18
 32314                           
 32315                           ; BSR set to: 0
 32316                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32317                           
 32318                           ;incstack = 0
 32319  00386C  C07F  F17E         	movff	RADIO_Init@frequency,_RadioConfiguration
 32320  003870  C080  F17F         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32321  003874  C081  F180         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32322  003878  C082  F181         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32323                           
 32324                           ; BSR set to: 0
 32325                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32326  00387C  0EA8               	movlw	168
 32327  00387E  0101               	movlb	1	; () banked
 32328  003880  6F82               	movwf	(_RadioConfiguration+4)& (0+255),b
 32329  003882  0E61               	movlw	97
 32330  003884  6F83               	movwf	(_RadioConfiguration+5)& (0+255),b
 32331  003886  6B84               	clrf	(_RadioConfiguration+6)& (0+255),b
 32332  003888  6B85               	clrf	(_RadioConfiguration+7)& (0+255),b
 32333                           
 32334                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32335  00388A  0E50               	movlw	80
 32336  00388C  6F86               	movwf	(_RadioConfiguration+8)& (0+255),b
 32337  00388E  0EC3               	movlw	195
 32338  003890  6F87               	movwf	(_RadioConfiguration+9)& (0+255),b
 32339  003892  6B88               	clrf	(_RadioConfiguration+10)& (0+255),b
 32340  003894  6B89               	clrf	(_RadioConfiguration+11)& (0+255),b
 32341                           
 32342                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32343  003896  0E01               	movlw	1
 32344  003898  6F96               	movwf	(_RadioConfiguration+24)& (0+255),b
 32345                           
 32346                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32347  00389A  0E07               	movlw	7
 32348  00389C  6F98               	movwf	(_RadioConfiguration+26)& (0+255),b
 32349                           
 32350                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32351  00389E  0E01               	movlw	1
 32352  0038A0  6F99               	movwf	(_RadioConfiguration+27)& (0+255),b
 32353                           
 32354                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32355  0038A2  6F9F               	movwf	(_RadioConfiguration+33)& (0+255),b
 32356                           
 32357                           ; BSR set to: 1
 32358                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32359  0038A4  6BA0               	clrf	(_RadioConfiguration+34)& (0+255),b
 32360                           
 32361                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32362  0038A6  6B8B               	clrf	(_RadioConfiguration+13)& (0+255),b
 32363  0038A8  0E08               	movlw	8
 32364  0038AA  6F8A               	movwf	(_RadioConfiguration+12)& (0+255),b
 32365                           
 32366                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32367  0038AC  0E0C               	movlw	12
 32368  0038AE  6F97               	movwf	(_RadioConfiguration+25)& (0+255),b
 32369                           
 32370                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32371  0038B0  0E01               	movlw	1
 32372  0038B2  6F9A               	movwf	(_RadioConfiguration+28)& (0+255),b
 32373                           
 32374                           ; BSR set to: 1
 32375                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32376  0038B4  6B9B               	clrf	(_RadioConfiguration+29)& (0+255),b
 32377                           
 32378                           ; BSR set to: 1
 32379                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32380  0038B6  6B9E               	clrf	(_RadioConfiguration+32)& (0+255),b
 32381                           
 32382                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32383  0038B8  0EC1               	movlw	193
 32384  0038BA  6F8D               	movwf	(_RadioConfiguration+15)& (0+255),b
 32385                           
 32386                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32387  0038BC  0E94               	movlw	148
 32388  0038BE  6F8E               	movwf	(_RadioConfiguration+16)& (0+255),b
 32389                           
 32390                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32391  0038C0  0EC1               	movlw	193
 32392  0038C2  6F8F               	movwf	(_RadioConfiguration+17)& (0+255),b
 32393                           
 32394                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32395  0038C4  0E03               	movlw	3
 32396  0038C6  6F95               	movwf	(_RadioConfiguration+23)& (0+255),b
 32397                           
 32398                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32399  0038C8  0E34               	movlw	52
 32400  0038CA  6F8C               	movwf	(_RadioConfiguration+14)& (0+255),b
 32401                           
 32402                           ; BSR set to: 1
 32403                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32404  0038CC  6BA1               	clrf	(_RadioConfiguration+35)& (0+255),b
 32405                           
 32406                           ; BSR set to: 1
 32407                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32408  0038CE  6BA2               	clrf	(_RadioConfiguration+36)& (0+255),b
 32409                           
 32410                           ; BSR set to: 1
 32411                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32412  0038D0  C07D  F1A3         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32413  0038D4  C07E  F1A4         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32414                           
 32415                           ; BSR set to: 1
 32416                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32417  0038D8  6B9C               	clrf	(_RadioConfiguration+30)& (0+255),b
 32418  0038DA  6B9D               	clrf	(_RadioConfiguration+31)& (0+255),b
 32419                           
 32420                           ; BSR set to: 1
 32421                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32422  0038DC  0E80               	movlw	128
 32423  0038DE  6FB0               	movwf	(_RadioConfiguration+50)& (0+255),b
 32424                           
 32425                           ; BSR set to: 1
 32426                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32427  0038E0  0E98               	movlw	152
 32428  0038E2  6FA8               	movwf	(_RadioConfiguration+42)& (0+255),b
 32429  0038E4  0E3A               	movlw	58
 32430  0038E6  6FA9               	movwf	(_RadioConfiguration+43)& (0+255),b
 32431  0038E8  6BAA               	clrf	(_RadioConfiguration+44)& (0+255),b
 32432  0038EA  6BAB               	clrf	(_RadioConfiguration+45)& (0+255),b
 32433                           
 32434                           ; BSR set to: 1
 32435                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32436  0038EC  0E02               	movlw	2
 32437  0038EE  6FB1               	movwf	(_RadioConfiguration+51)& (0+255),b
 32438                           
 32439                           ; BSR set to: 1
 32440                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32441  0038F0  0E0B               	movlw	11
 32442  0038F2  6FB2               	movwf	(_RadioConfiguration+52)& (0+255),b
 32443                           
 32444                           ; BSR set to: 1
 32445                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32446  0038F4  0E12               	movlw	18
 32447  0038F6  6FB3               	movwf	(_RadioConfiguration+53)& (0+255),b
 32448                           
 32449                           ; BSR set to: 1
 32450                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32451  0038F8  6BAD               	clrf	(_RadioConfiguration+47)& (0+255),b
 32452  0038FA  6BAE               	clrf	(_RadioConfiguration+48)& (0+255),b
 32453                           
 32454                           ; BSR set to: 1
 32455                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32456  0038FC  51AC               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32457  0038FE  E123               	bnz	l14727
 32458                           
 32459                           ; BSR set to: 1
 32460                           ;radio_driver_SX1276.c: 457: {
 32461                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32462  003900  ECEC  F030         	call	_SwTimerCreate	;wreg free
 32463  003904  0101               	movlb	1	; () banked
 32464  003906  6FA5               	movwf	(_RadioConfiguration+39)& (0+255),b
 32465                           
 32466                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32467  003908  ECEC  F030         	call	_SwTimerCreate	;wreg free
 32468  00390C  0101               	movlb	1	; () banked
 32469  00390E  6FA6               	movwf	(_RadioConfiguration+40)& (0+255),b
 32470                           
 32471                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32472  003910  ECEC  F030         	call	_SwTimerCreate	;wreg free
 32473  003914  0101               	movlb	1	; () banked
 32474  003916  6FA7               	movwf	(_RadioConfiguration+41)& (0+255),b
 32475                           
 32476                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32477  003918  0E4E               	movlw	low _RADIO_RxFSKTimeout
 32478  00391A  0100               	movlb	0	; () banked
 32479  00391C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32480  00391E  0E6F               	movlw	high _RADIO_RxFSKTimeout
 32481  003920  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32482  003922  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32483  003924  0101               	movlb	1	; () banked
 32484  003926  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32485  003928  EC28  F038         	call	_SwTimerSetCallback
 32486                           
 32487                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32488  00392C  0E3C               	movlw	low _RADIO_WatchdogTimeout
 32489  00392E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32490  003930  0E6C               	movlw	high _RADIO_WatchdogTimeout
 32491  003932  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32492  003934  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32493  003936  0101               	movlb	1	; () banked
 32494  003938  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32495  00393A  EC28  F038         	call	_SwTimerSetCallback
 32496                           
 32497                           ; BSR set to: 0
 32498                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32499  00393E  0E01               	movlw	1
 32500  003940  0101               	movlb	1	; () banked
 32501  003942  6FAC               	movwf	(_RadioConfiguration+46)& (0+255),b
 32502                           
 32503                           ;radio_driver_SX1276.c: 466: }
 32504  003944  D00B               	goto	l14729
 32505  003946                     l14727:
 32506                           
 32507                           ; BSR set to: 1
 32508                           ;radio_driver_SX1276.c: 467: else
 32509                           ;radio_driver_SX1276.c: 468: {
 32510                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32511  003946  51A5               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32512  003948  EC57  F03A         	call	_SwTimerStop
 32513                           
 32514                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32515  00394C  0101               	movlb	1	; () banked
 32516  00394E  51A6               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32517  003950  EC57  F03A         	call	_SwTimerStop
 32518                           
 32519                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32520  003954  0101               	movlb	1	; () banked
 32521  003956  51A7               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32522  003958  EC57  F03A         	call	_SwTimerStop
 32523  00395C                     l14729:
 32524                           
 32525                           ;radio_driver_SX1276.c: 472: }
 32526                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32527  00395C  ECDC  F037         	call	_RADIO_Reset	;wreg free
 32528                           
 32529                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32530  003960  0E00               	movlw	0
 32531  003962  0100               	movlb	0	; () banked
 32532  003964  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32533  003966  0E01               	movlw	1
 32534  003968  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32535  00396A  EC5F  F028         	call	_RADIO_WriteMode
 32536                           
 32537                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32538  00396E  C17E  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32539  003972  C17F  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32540  003976  C180  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32541  00397A  C181  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32542  00397E  ECF1  F027         	call	_RADIO_WriteFrequency	;wreg free
 32543                           
 32544                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32545  003982  0E42               	movlw	66
 32546  003984  0100               	movlb	0	; () banked
 32547  003986  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32548  003988  0E3B               	movlw	59
 32549  00398A  EC2A  F03A         	call	_RADIO_RegisterWrite
 32550  00398E                     l14737:
 32551  00398E  0E3B               	movlw	59
 32552  003990  EC53  F039         	call	_RADIO_RegisterRead
 32553  003994  6F83               	movwf	??_RADIO_Init& (0+255),b
 32554  003996  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32555  003998  D7FA               	goto	l14737
 32556                           
 32557                           ; BSR set to: 0
 32558                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32559  00399A  0E23               	movlw	35
 32560  00399C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32561  00399E  0E0C               	movlw	12
 32562  0039A0  EC2A  F03A         	call	_RADIO_RegisterWrite
 32563                           
 32564                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32565  0039A4  0E1E               	movlw	30
 32566  0039A6  0100               	movlb	0	; () banked
 32567  0039A8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32568  0039AA  0E0D               	movlw	13
 32569  0039AC  EC2A  F03A         	call	_RADIO_RegisterWrite
 32570                           
 32571                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32572  0039B0  0EAA               	movlw	170
 32573  0039B2  0100               	movlb	0	; () banked
 32574  0039B4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32575  0039B6  0E1F               	movlw	31
 32576  0039B8  EC2A  F03A         	call	_RADIO_RegisterWrite
 32577                           
 32578                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32579  0039BC  0E8F               	movlw	143
 32580  0039BE  0100               	movlb	0	; () banked
 32581  0039C0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32582  0039C2  0E35               	movlw	53
 32583  0039C4  EC2A  F03A         	call	_RADIO_RegisterWrite
 32584                           
 32585                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32586  0039C8  0100               	movlb	0	; () banked
 32587  0039CA  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32588  0039CC  0E32               	movlw	50
 32589  0039CE  EC2A  F03A         	call	_RADIO_RegisterWrite
 32590                           
 32591                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32592  0039D2  0E40               	movlw	64
 32593  0039D4  0100               	movlb	0	; () banked
 32594  0039D6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32595  0039D8  0E31               	movlw	49
 32596  0039DA  EC2A  F03A         	call	_RADIO_RegisterWrite
 32597                           
 32598                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32599  0039DE  0E01               	movlw	1
 32600  0039E0  0100               	movlb	0	; () banked
 32601  0039E2  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32602  0039E4  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32603  0039E6  0E00               	movlw	0
 32604  0039E8  EC5F  F028         	call	_RADIO_WriteMode
 32605                           
 32606                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32607  0039EC  0100               	movlb	0	; () banked
 32608  0039EE  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32609  0039F0  0E23               	movlw	35
 32610  0039F2  EC2A  F03A         	call	_RADIO_RegisterWrite
 32611                           
 32612                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32613  0039F6  0E42               	movlw	66
 32614  0039F8  EC53  F039         	call	_RADIO_RegisterRead
 32615  0039FC  0101               	movlb	1	; () banked
 32616  0039FE  6FAF               	movwf	(_RadioConfiguration+49)& (0+255),b
 32617                           
 32618                           ; BSR set to: 1
 32619  003A00  0012               	return		;funcret
 32620  003A02                     __end_of_RADIO_Init:
 32621                           	opt stack 0
 32622                           tosu	equ	0xFFF
 32623                           tosh	equ	0xFFE
 32624                           tosl	equ	0xFFD
 32625                           pclath	equ	0xFFA
 32626                           tblptru	equ	0xFF8
 32627                           tblptrh	equ	0xFF7
 32628                           tblptrl	equ	0xFF6
 32629                           tablat	equ	0xFF5
 32630                           prodh	equ	0xFF4
 32631                           prodl	equ	0xFF3
 32632                           intcon	equ	0xFF2
 32633                           intcon2	equ	0xFF1
 32634                           intcon3	equ	0xFF0
 32635                           indf0	equ	0xFEF
 32636                           postinc0	equ	0xFEE
 32637                           plusw0	equ	0xFEB
 32638                           fsr0h	equ	0xFEA
 32639                           fsr0l	equ	0xFE9
 32640                           wreg	equ	0xFE8
 32641                           postinc1	equ	0xFE6
 32642                           postdec1	equ	0xFE5
 32643                           plusw1	equ	0xFE3
 32644                           fsr1h	equ	0xFE2
 32645                           fsr1l	equ	0xFE1
 32646                           indf2	equ	0xFDF
 32647                           postinc2	equ	0xFDE
 32648                           postdec2	equ	0xFDD
 32649                           plusw2	equ	0xFDB
 32650                           fsr2h	equ	0xFDA
 32651                           fsr2l	equ	0xFD9
 32652                           status	equ	0xFD8
 32653                           
 32654 ;; *************** function _SwTimerSetCallback *****************
 32655 ;; Defined at:
 32656 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32657 ;; Parameters:    Size  Location     Type
 32658 ;;  timerId         1    wreg     unsigned char 
 32659 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32660 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32661 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32662 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32663 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32664 ;; Auto vars:     Size  Location     Type
 32665 ;;  timerId         1    7[BANK0 ] unsigned char 
 32666 ;; Return value:  Size  Location     Type
 32667 ;;                  1    wreg      void 
 32668 ;; Registers used:
 32669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32670 ;; Tracked objects:
 32671 ;;		On entry : C/2
 32672 ;;		On exit  : F/0
 32673 ;;		Unchanged: 0/0
 32674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32675 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32679 ;;Total ram usage:        4 bytes
 32680 ;; Hardware stack levels used:    1
 32681 ;; Hardware stack levels required when called:    7
 32682 ;; This function calls:
 32683 ;;		Nothing
 32684 ;; This function is called by:
 32685 ;;		_RADIO_Init
 32686 ;;		_SetCallbackSoftwareTimers
 32687 ;; This function uses a non-reentrant model
 32688 ;;
 32689                           
 32690                           	psect	text167
 32691  007050                     __ptext167:
 32692                           	opt stack 0
 32693  007050                     _SwTimerSetCallback:
 32694                           	opt stack 21
 32695                           
 32696                           ; BSR set to: 1
 32697                           ;incstack = 0
 32698                           ;SwTimerSetCallback@timerId stored from wreg
 32699  007050  0100               	movlb	0	; () banked
 32700  007052  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32701                           
 32702                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32703  007054  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32704  007056  0D08               	mullw	8
 32705  007058  0E06               	movlw	low (_swTimers+6)
 32706  00705A  24F3               	addwf	prodl,w,c
 32707  00705C  6ED9               	movwf	fsr2l,c
 32708  00705E  0E03               	movlw	high (_swTimers+6)
 32709  007060  20F4               	addwfc	prodh,w,c
 32710  007062  6EDA               	movwf	fsr2h,c
 32711  007064  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32712  007068  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32713                           
 32714                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32715  00706C  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32716  00706E  0D08               	mullw	8
 32717  007070  0E05               	movlw	low (_swTimers+5)
 32718  007072  24F3               	addwf	prodl,w,c
 32719  007074  6ED9               	movwf	fsr2l,c
 32720  007076  0E03               	movlw	high (_swTimers+5)
 32721  007078  20F4               	addwfc	prodh,w,c
 32722  00707A  6EDA               	movwf	fsr2h,c
 32723  00707C  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32724                           
 32725                           ; BSR set to: 0
 32726  007080  0012               	return		;funcret
 32727  007082                     __end_of_SwTimerSetCallback:
 32728                           	opt stack 0
 32729                           tosu	equ	0xFFF
 32730                           tosh	equ	0xFFE
 32731                           tosl	equ	0xFFD
 32732                           pclath	equ	0xFFA
 32733                           tblptru	equ	0xFF8
 32734                           tblptrh	equ	0xFF7
 32735                           tblptrl	equ	0xFF6
 32736                           tablat	equ	0xFF5
 32737                           prodh	equ	0xFF4
 32738                           prodl	equ	0xFF3
 32739                           intcon	equ	0xFF2
 32740                           intcon2	equ	0xFF1
 32741                           intcon3	equ	0xFF0
 32742                           indf0	equ	0xFEF
 32743                           postinc0	equ	0xFEE
 32744                           plusw0	equ	0xFEB
 32745                           fsr0h	equ	0xFEA
 32746                           fsr0l	equ	0xFE9
 32747                           wreg	equ	0xFE8
 32748                           postinc1	equ	0xFE6
 32749                           postdec1	equ	0xFE5
 32750                           plusw1	equ	0xFE3
 32751                           fsr1h	equ	0xFE2
 32752                           fsr1l	equ	0xFE1
 32753                           indf2	equ	0xFDF
 32754                           postinc2	equ	0xFDE
 32755                           postdec2	equ	0xFDD
 32756                           plusw2	equ	0xFDB
 32757                           fsr2h	equ	0xFDA
 32758                           fsr2l	equ	0xFD9
 32759                           status	equ	0xFD8
 32760                           
 32761 ;; *************** function _RADIO_WriteMode *****************
 32762 ;; Defined at:
 32763 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32764 ;; Parameters:    Size  Location     Type
 32765 ;;  newMode         1    wreg     enum E8483
 32766 ;;  newModulatio    1    9[BANK0 ] enum E7751
 32767 ;;  blocking        1   10[BANK0 ] unsigned char 
 32768 ;; Auto vars:     Size  Location     Type
 32769 ;;  newMode         1   14[BANK0 ] enum E8483
 32770 ;;  opMode          1   15[BANK0 ] unsigned char 
 32771 ;;  currentMode     1   13[BANK0 ] enum E8483
 32772 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32773 ;;  currentModul    1   11[BANK0 ] enum E7751
 32774 ;; Return value:  Size  Location     Type
 32775 ;;                  1    wreg      void 
 32776 ;; Registers used:
 32777 ;;		wreg, status,2, status,0, cstack
 32778 ;; Tracked objects:
 32779 ;;		On entry : F/0
 32780 ;;		On exit  : 0/0
 32781 ;;		Unchanged: 0/0
 32782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32786 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32787 ;;Total ram usage:        7 bytes
 32788 ;; Hardware stack levels used:    1
 32789 ;; Hardware stack levels required when called:   10
 32790 ;; This function calls:
 32791 ;;		_HALDIO5PinValue
 32792 ;;		_RADIO_RegisterRead
 32793 ;;		_RADIO_RegisterWrite
 32794 ;;		_SystemBlockingWaitMs
 32795 ;; This function is called by:
 32796 ;;		_RADIO_Init
 32797 ;;		_RADIO_WriteConfiguration
 32798 ;;		_RADIO_Transmit
 32799 ;;		_RADIO_ReceiveStart
 32800 ;;		_RADIO_ReceiveStop
 32801 ;;		_RADIO_RxDone
 32802 ;;		_RADIO_FSKPayloadReady
 32803 ;;		_RADIO_RxTimeout
 32804 ;;		_RADIO_TxDone
 32805 ;;		_RADIO_FSKPacketSent
 32806 ;;		_RADIO_ReadRandom
 32807 ;;		_RADIO_RxFSKTimeout
 32808 ;;		_RADIO_WatchdogTimeout
 32809 ;; This function uses a non-reentrant model
 32810 ;;
 32811                           
 32812                           	psect	text168
 32813  0050BE                     __ptext168:
 32814                           	opt stack 0
 32815  0050BE                     _RADIO_WriteMode:
 32816                           	opt stack 17
 32817                           
 32818                           ; BSR set to: 0
 32819                           ;incstack = 0
 32820                           ;RADIO_WriteMode@newMode stored from wreg
 32821  0050BE  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 32822                           
 32823                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 32824                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 32825                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 32826                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 32827                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 32828                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 32829  0050C0  0100               	movlb	0	; () banked
 32830  0050C2  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32831  0050C4  E108               	bnz	l12157
 32832                           
 32833                           ; BSR set to: 0
 32834  0050C6  0E06               	movlw	6
 32835  0050C8  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32836  0050CA  B4D8               	btfsc	status,2,c
 32837  0050CC  0012               	return	
 32838                           
 32839                           ; BSR set to: 0
 32840  0050CE  0E07               	movlw	7
 32841  0050D0  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32842  0050D2  E101               	bnz	l12157
 32843  0050D4  0012               	return	
 32844  0050D6                     l12157:
 32845                           
 32846                           ; BSR set to: 0
 32847                           ;radio_driver_SX1276.c: 159: }
 32848                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 32849  0050D6  0E07               	movlw	7
 32850  0050D8  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 32851                           
 32852                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 32853  0050DA  0E01               	movlw	1
 32854  0050DC  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 32855                           
 32856                           ; BSR set to: 0
 32857                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 32858  0050DE  EC53  F039         	call	_RADIO_RegisterRead
 32859  0050E2  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32860                           
 32861                           ; BSR set to: 0
 32862                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 32863  0050E4  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 32864  0050E6  D003               	goto	l382
 32865                           
 32866                           ; BSR set to: 0
 32867                           ;radio_driver_SX1276.c: 168: {
 32868                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 32869  0050E8  0E01               	movlw	1
 32870  0050EA  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 32871                           
 32872                           ;radio_driver_SX1276.c: 170: }
 32873  0050EC  D001               	goto	l12165
 32874  0050EE                     l382:
 32875                           
 32876                           ; BSR set to: 0
 32877                           ;radio_driver_SX1276.c: 171: else
 32878                           ;radio_driver_SX1276.c: 172: {
 32879                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 32880  0050EE  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 32881  0050F0                     l12165:
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;radio_driver_SX1276.c: 174: }
 32885                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 32886  0050F0  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32887  0050F2  0B07               	andlw	7
 32888  0050F4  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 32889                           
 32890                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 32891  0050F6  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 32892  0050F8  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 32893  0050FA  E018               	bz	l12181
 32894                           
 32895                           ; BSR set to: 0
 32896                           ;radio_driver_SX1276.c: 181: {
 32897                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 32898  0050FC  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32899  0050FE  E008               	bz	l12173
 32900                           
 32901                           ; BSR set to: 0
 32902                           ;radio_driver_SX1276.c: 184: {
 32903                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 32904  005100  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32905  005102  0BF8               	andlw	248
 32906  005104  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32907  005106  0E01               	movlw	1
 32908  005108  EC2A  F03A         	call	_RADIO_RegisterWrite
 32909                           
 32910                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 32911  00510C  0100               	movlb	0	; () banked
 32912  00510E  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 32913  005110                     l12173:
 32914                           
 32915                           ; BSR set to: 0
 32916                           ;radio_driver_SX1276.c: 188: }
 32917                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 32918  005110  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32919  005112  E103               	bnz	l12177
 32920                           
 32921                           ; BSR set to: 0
 32922                           ;radio_driver_SX1276.c: 191: {
 32923                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 32924  005114  0E78               	movlw	120
 32925  005116  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 32926                           
 32927                           ;radio_driver_SX1276.c: 194: }
 32928  005118  D004               	goto	l12179
 32929  00511A                     l12177:
 32930                           
 32931                           ; BSR set to: 0
 32932                           ;radio_driver_SX1276.c: 195: else
 32933                           ;radio_driver_SX1276.c: 196: {
 32934                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 32935  00511A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32936  00511C  0B78               	andlw	120
 32937  00511E  0980               	iorlw	128
 32938  005120  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32939  005122                     l12179:
 32940                           
 32941                           ; BSR set to: 0
 32942                           ;radio_driver_SX1276.c: 199: }
 32943                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 32944  005122  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 32945  005126  0E01               	movlw	1
 32946  005128  EC2A  F03A         	call	_RADIO_RegisterWrite
 32947  00512C                     l12181:
 32948                           
 32949                           ;radio_driver_SX1276.c: 201: }
 32950                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 32951  00512C  0100               	movlb	0	; () banked
 32952  00512E  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32953  005130  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32954  005132  B4D8               	btfsc	status,2,c
 32955  005134  0012               	return	
 32956                           
 32957                           ; BSR set to: 0
 32958                           ;radio_driver_SX1276.c: 208: {
 32959                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 32960  005136  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 32961  005138  E012               	bz	l12197
 32962                           
 32963                           ; BSR set to: 0
 32964  00513A  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 32965  00513C  E110               	bnz	l12197
 32966                           
 32967                           ; BSR set to: 0
 32968                           ;radio_driver_SX1276.c: 212: {
 32969                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 32970  00513E  0E41               	movlw	65
 32971  005140  EC53  F039         	call	_RADIO_RegisterRead
 32972  005144  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 32976  005146  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32977  005148  E103               	bnz	l12193
 32978                           
 32979                           ; BSR set to: 0
 32980                           ;radio_driver_SX1276.c: 215: {
 32981                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 32982  00514A  0E30               	movlw	48
 32983  00514C  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 32984                           
 32985                           ;radio_driver_SX1276.c: 218: }
 32986  00514E  D002               	goto	l12195
 32987  005150                     l12193:
 32988                           
 32989                           ; BSR set to: 0
 32990                           ;radio_driver_SX1276.c: 219: else
 32991                           ;radio_driver_SX1276.c: 220: {
 32992                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 32993  005150  0ECF               	movlw	207
 32994  005152  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 32995  005154                     l12195:
 32996                           
 32997                           ; BSR set to: 0
 32998                           ;radio_driver_SX1276.c: 223: }
 32999                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33000  005154  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33001  005158  0E41               	movlw	65
 33002  00515A  EC2A  F03A         	call	_RADIO_RegisterWrite
 33003  00515E                     l12197:
 33004                           
 33005                           ;radio_driver_SX1276.c: 225: }
 33006                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33007  00515E  0EF8               	movlw	248
 33008  005160  0100               	movlb	0	; () banked
 33009  005162  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33010                           
 33011                           ; BSR set to: 0
 33012                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33013  005164  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33014  005166  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33015                           
 33016                           ; BSR set to: 0
 33017                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33018  005168  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33019  00516C  0E01               	movlw	1
 33020  00516E  EC2A  F03A         	call	_RADIO_RegisterWrite
 33021                           
 33022                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33023  005172  0100               	movlb	0	; () banked
 33024  005174  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33025  005176  A4D8               	btfss	status,2,c
 33026  005178  0012               	return	
 33027                           
 33028                           ; BSR set to: 0
 33029                           ;radio_driver_SX1276.c: 234: {
 33030                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33031  00517A  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33032  00517C  E005               	bz	l12209
 33033  00517E                     l12207:
 33034  00517E  EC41  F03C         	call	_HALDIO5PinValue	;wreg free
 33035  005182  0900               	iorlw	0
 33036  005184  E0FC               	bz	l12207
 33037  005186  0012               	return	
 33038  005188                     l12209:
 33039                           
 33040                           ; BSR set to: 0
 33041                           ;radio_driver_SX1276.c: 240: else
 33042                           ;radio_driver_SX1276.c: 241: {
 33043                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33044  005188  0E01               	movlw	1
 33045  00518A  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33046  00518C  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33047  00518E  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33048  005190  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33049  005192  EFC7  F038         	goto	_SystemBlockingWaitMs	;wreg free
 33050  005196                     __end_of_RADIO_WriteMode:
 33051                           	opt stack 0
 33052                           tosu	equ	0xFFF
 33053                           tosh	equ	0xFFE
 33054                           tosl	equ	0xFFD
 33055                           pclath	equ	0xFFA
 33056                           tblptru	equ	0xFF8
 33057                           tblptrh	equ	0xFF7
 33058                           tblptrl	equ	0xFF6
 33059                           tablat	equ	0xFF5
 33060                           prodh	equ	0xFF4
 33061                           prodl	equ	0xFF3
 33062                           intcon	equ	0xFF2
 33063                           intcon2	equ	0xFF1
 33064                           intcon3	equ	0xFF0
 33065                           indf0	equ	0xFEF
 33066                           postinc0	equ	0xFEE
 33067                           plusw0	equ	0xFEB
 33068                           fsr0h	equ	0xFEA
 33069                           fsr0l	equ	0xFE9
 33070                           wreg	equ	0xFE8
 33071                           postinc1	equ	0xFE6
 33072                           postdec1	equ	0xFE5
 33073                           plusw1	equ	0xFE3
 33074                           fsr1h	equ	0xFE2
 33075                           fsr1l	equ	0xFE1
 33076                           indf2	equ	0xFDF
 33077                           postinc2	equ	0xFDE
 33078                           postdec2	equ	0xFDD
 33079                           plusw2	equ	0xFDB
 33080                           fsr2h	equ	0xFDA
 33081                           fsr2l	equ	0xFD9
 33082                           status	equ	0xFD8
 33083                           
 33084 ;; *************** function _RADIO_RegisterRead *****************
 33085 ;; Defined at:
 33086 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33087 ;; Parameters:    Size  Location     Type
 33088 ;;  reg             1    wreg     unsigned char 
 33089 ;; Auto vars:     Size  Location     Type
 33090 ;;  reg             1    6[BANK0 ] unsigned char 
 33091 ;;  readValue       1    7[BANK0 ] unsigned char 
 33092 ;; Return value:  Size  Location     Type
 33093 ;;                  1    wreg      unsigned char 
 33094 ;; Registers used:
 33095 ;;		wreg, status,2, status,0, cstack
 33096 ;; Tracked objects:
 33097 ;;		On entry : 0/0
 33098 ;;		On exit  : F/0
 33099 ;;		Unchanged: 0/0
 33100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33104 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33105 ;;Total ram usage:        2 bytes
 33106 ;; Hardware stack levels used:    1
 33107 ;; Hardware stack levels required when called:    9
 33108 ;; This function calls:
 33109 ;;		_HALSPICSAssert
 33110 ;;		_HALSPICSDeassert
 33111 ;;		_HALSPISend
 33112 ;; This function is called by:
 33113 ;;		_RADIO_WriteMode
 33114 ;;		_RADIO_WritePower
 33115 ;;		_RADIO_Init
 33116 ;;		_RADIO_WriteConfiguration
 33117 ;;		_RADIO_Transmit
 33118 ;;		_RADIO_RxDone
 33119 ;;		_RADIO_FSKPayloadReady
 33120 ;;		_RADIO_FSKPacketSent
 33121 ;;		_RADIO_FHSSChangeChannel
 33122 ;;		_RADIO_DIO0
 33123 ;;		_RADIO_DIO1
 33124 ;;		_RADIO_DIO2
 33125 ;;		_RADIO_DIO3
 33126 ;;		_RADIO_DIO4
 33127 ;;		_RADIO_DIO5
 33128 ;;		_RADIO_ReadRandom
 33129 ;;		_RADIO_RxFSKTimeout
 33130 ;; This function uses a non-reentrant model
 33131 ;;
 33132                           
 33133                           	psect	text169
 33134  0072A6                     __ptext169:
 33135                           	opt stack 0
 33136  0072A6                     _RADIO_RegisterRead:
 33137                           	opt stack 17
 33138                           
 33139                           ;incstack = 0
 33140                           ;RADIO_RegisterRead@reg stored from wreg
 33141  0072A6  0100               	movlb	0	; () banked
 33142  0072A8  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33143                           
 33144                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33145                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33146  0072AA  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33147                           
 33148                           ; BSR set to: 0
 33149                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33150  0072AC  EC5F  F03C         	call	_HALSPICSAssert	;wreg free
 33151                           
 33152                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33153  0072B0  0100               	movlb	0	; () banked
 33154  0072B2  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33155  0072B4  EC07  F03C         	call	_HALSPISend
 33156                           
 33157                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33158  0072B8  0EFF               	movlw	255
 33159  0072BA  EC07  F03C         	call	_HALSPISend
 33160  0072BE  0100               	movlb	0	; () banked
 33161  0072C0  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33162                           
 33163                           ; BSR set to: 0
 33164                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33165  0072C2  EC5D  F03C         	call	_HALSPICSDeassert	;wreg free
 33166                           
 33167                           ;radio_driver_SX1276.c: 142: return readValue;
 33168  0072C6  0100               	movlb	0	; () banked
 33169  0072C8  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33170                           
 33171                           ; BSR set to: 0
 33172  0072CA  0012               	return		;funcret
 33173  0072CC                     __end_of_RADIO_RegisterRead:
 33174                           	opt stack 0
 33175                           tosu	equ	0xFFF
 33176                           tosh	equ	0xFFE
 33177                           tosl	equ	0xFFD
 33178                           pclath	equ	0xFFA
 33179                           tblptru	equ	0xFF8
 33180                           tblptrh	equ	0xFF7
 33181                           tblptrl	equ	0xFF6
 33182                           tablat	equ	0xFF5
 33183                           prodh	equ	0xFF4
 33184                           prodl	equ	0xFF3
 33185                           intcon	equ	0xFF2
 33186                           intcon2	equ	0xFF1
 33187                           intcon3	equ	0xFF0
 33188                           indf0	equ	0xFEF
 33189                           postinc0	equ	0xFEE
 33190                           plusw0	equ	0xFEB
 33191                           fsr0h	equ	0xFEA
 33192                           fsr0l	equ	0xFE9
 33193                           wreg	equ	0xFE8
 33194                           postinc1	equ	0xFE6
 33195                           postdec1	equ	0xFE5
 33196                           plusw1	equ	0xFE3
 33197                           fsr1h	equ	0xFE2
 33198                           fsr1l	equ	0xFE1
 33199                           indf2	equ	0xFDF
 33200                           postinc2	equ	0xFDE
 33201                           postdec2	equ	0xFDD
 33202                           plusw2	equ	0xFDB
 33203                           fsr2h	equ	0xFDA
 33204                           fsr2l	equ	0xFD9
 33205                           status	equ	0xFD8
 33206                           
 33207 ;; *************** function _HALDIO5PinValue *****************
 33208 ;; Defined at:
 33209 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33210 ;; Parameters:    Size  Location     Type
 33211 ;;		None
 33212 ;; Auto vars:     Size  Location     Type
 33213 ;;		None
 33214 ;; Return value:  Size  Location     Type
 33215 ;;                  1    wreg      unsigned char 
 33216 ;; Registers used:
 33217 ;;		wreg
 33218 ;; Tracked objects:
 33219 ;;		On entry : 0/0
 33220 ;;		On exit  : 0/0
 33221 ;;		Unchanged: 0/0
 33222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33227 ;;Total ram usage:        0 bytes
 33228 ;; Hardware stack levels used:    1
 33229 ;; Hardware stack levels required when called:    7
 33230 ;; This function calls:
 33231 ;;		Nothing
 33232 ;; This function is called by:
 33233 ;;		_RADIO_WriteMode
 33234 ;; This function uses a non-reentrant model
 33235 ;;
 33236                           
 33237                           	psect	text170
 33238  007882                     __ptext170:
 33239                           	opt stack 0
 33240  007882                     _HALDIO5PinValue:
 33241                           	opt stack 19
 33242                           
 33243                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33244                           
 33245                           ; BSR set to: 0
 33246                           ;incstack = 0
 33247  007882  B081               	btfsc	3969,0,c	;volatile
 33248  007884  0C01               	retlw	1
 33249  007886  0C00               	retlw	0	;funcret
 33250  007888                     __end_of_HALDIO5PinValue:
 33251                           	opt stack 0
 33252                           tosu	equ	0xFFF
 33253                           tosh	equ	0xFFE
 33254                           tosl	equ	0xFFD
 33255                           pclath	equ	0xFFA
 33256                           tblptru	equ	0xFF8
 33257                           tblptrh	equ	0xFF7
 33258                           tblptrl	equ	0xFF6
 33259                           tablat	equ	0xFF5
 33260                           prodh	equ	0xFF4
 33261                           prodl	equ	0xFF3
 33262                           intcon	equ	0xFF2
 33263                           intcon2	equ	0xFF1
 33264                           intcon3	equ	0xFF0
 33265                           indf0	equ	0xFEF
 33266                           postinc0	equ	0xFEE
 33267                           plusw0	equ	0xFEB
 33268                           fsr0h	equ	0xFEA
 33269                           fsr0l	equ	0xFE9
 33270                           wreg	equ	0xFE8
 33271                           postinc1	equ	0xFE6
 33272                           postdec1	equ	0xFE5
 33273                           plusw1	equ	0xFE3
 33274                           fsr1h	equ	0xFE2
 33275                           fsr1l	equ	0xFE1
 33276                           indf2	equ	0xFDF
 33277                           postinc2	equ	0xFDE
 33278                           postdec2	equ	0xFDD
 33279                           plusw2	equ	0xFDB
 33280                           fsr2h	equ	0xFDA
 33281                           fsr2l	equ	0xFD9
 33282                           status	equ	0xFD8
 33283                           
 33284 ;; *************** function _RADIO_WriteFrequency *****************
 33285 ;; Defined at:
 33286 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33287 ;; Parameters:    Size  Location     Type
 33288 ;;  frequency       4   17[BANK0 ] unsigned long 
 33289 ;; Auto vars:     Size  Location     Type
 33290 ;;  num             4   25[BANK0 ] unsigned long 
 33291 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33292 ;; Return value:  Size  Location     Type
 33293 ;;                  1    wreg      void 
 33294 ;; Registers used:
 33295 ;;		wreg, status,2, status,0, cstack
 33296 ;; Tracked objects:
 33297 ;;		On entry : 0/0
 33298 ;;		On exit  : 0/0
 33299 ;;		Unchanged: 0/0
 33300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33302 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33304 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33305 ;;Total ram usage:       12 bytes
 33306 ;; Hardware stack levels used:    1
 33307 ;; Hardware stack levels required when called:   10
 33308 ;; This function calls:
 33309 ;;		_RADIO_RegisterWrite
 33310 ;;		___lldiv
 33311 ;;		___llmod
 33312 ;; This function is called by:
 33313 ;;		_RADIO_Init
 33314 ;;		_RADIO_WriteConfiguration
 33315 ;;		_RADIO_FHSSChangeChannel
 33316 ;; This function uses a non-reentrant model
 33317 ;;
 33318                           
 33319                           	psect	text171
 33320  004FE2                     __ptext171:
 33321                           	opt stack 0
 33322  004FE2                     _RADIO_WriteFrequency:
 33323                           	opt stack 16
 33324                           
 33325                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33326                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33327                           
 33328                           ;incstack = 0
 33329  004FE2  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33330  004FE6  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33331  004FEA  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33332  004FEE  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33333  004FF2  0E09               	movlw	9
 33334  004FF4  0100               	movlb	0	; () banked
 33335  004FF6  6F68               	movwf	___lldiv@divisor& (0+255),b
 33336  004FF8  0E3D               	movlw	61
 33337  004FFA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33338  004FFC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33339  004FFE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33340  005000  EC0B  F030         	call	___lldiv	;wreg free
 33341  005004  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33342  005008  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33343  00500C  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33344  005010  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33345                           
 33346                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33347  005014  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33348  005018  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33349  00501C  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33350  005020  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33351  005024  0E09               	movlw	9
 33352  005026  6F68               	movwf	___llmod@divisor& (0+255),b
 33353  005028  0E3D               	movlw	61
 33354  00502A  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33355  00502C  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33356  00502E  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33357  005030  ECE6  F032         	call	___llmod	;wreg free
 33358  005034  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33359  005038  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33360  00503C  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33361  005040  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33365  005044  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33366  005048  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33367  00504C  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33368  005050  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33372  005052  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33373  005056  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33374  00505A  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33375  00505E  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33376                           
 33377                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33378  005060  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33379  005064  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33380  005068  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33381  00506C  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33382  005070  0E09               	movlw	9
 33383  005072  6F68               	movwf	___lldiv@divisor& (0+255),b
 33384  005074  0E3D               	movlw	61
 33385  005076  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33386  005078  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33387  00507A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33388  00507C  EC0B  F030         	call	___lldiv	;wreg free
 33389  005080  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33390  005084  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33391  005088  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33392  00508C  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33393                           
 33394                           ; BSR set to: 0
 33395                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33396  005090  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33397  005092  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33398  005094  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33399  005096  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33400  005098  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33401  00509A  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33402  00509C  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33403  00509E  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33404                           
 33405                           ; BSR set to: 0
 33406                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33407  0050A0  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33408  0050A4  0E06               	movlw	6
 33409  0050A6  EC2A  F03A         	call	_RADIO_RegisterWrite
 33410                           
 33411                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33412  0050AA  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33413  0050AE  0E07               	movlw	7
 33414  0050B0  EC2A  F03A         	call	_RADIO_RegisterWrite
 33415                           
 33416                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33417  0050B4  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33418  0050B8  0E08               	movlw	8
 33419  0050BA  EF2A  F03A         	goto	_RADIO_RegisterWrite
 33420  0050BE                     __end_of_RADIO_WriteFrequency:
 33421                           	opt stack 0
 33422                           tosu	equ	0xFFF
 33423                           tosh	equ	0xFFE
 33424                           tosl	equ	0xFFD
 33425                           pclath	equ	0xFFA
 33426                           tblptru	equ	0xFF8
 33427                           tblptrh	equ	0xFF7
 33428                           tblptrl	equ	0xFF6
 33429                           tablat	equ	0xFF5
 33430                           prodh	equ	0xFF4
 33431                           prodl	equ	0xFF3
 33432                           intcon	equ	0xFF2
 33433                           intcon2	equ	0xFF1
 33434                           intcon3	equ	0xFF0
 33435                           indf0	equ	0xFEF
 33436                           postinc0	equ	0xFEE
 33437                           plusw0	equ	0xFEB
 33438                           fsr0h	equ	0xFEA
 33439                           fsr0l	equ	0xFE9
 33440                           wreg	equ	0xFE8
 33441                           postinc1	equ	0xFE6
 33442                           postdec1	equ	0xFE5
 33443                           plusw1	equ	0xFE3
 33444                           fsr1h	equ	0xFE2
 33445                           fsr1l	equ	0xFE1
 33446                           indf2	equ	0xFDF
 33447                           postinc2	equ	0xFDE
 33448                           postdec2	equ	0xFDD
 33449                           plusw2	equ	0xFDB
 33450                           fsr2h	equ	0xFDA
 33451                           fsr2l	equ	0xFD9
 33452                           status	equ	0xFD8
 33453                           
 33454 ;; *************** function ___llmod *****************
 33455 ;; Defined at:
 33456 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33457 ;; Parameters:    Size  Location     Type
 33458 ;;  dividend        4    4[BANK0 ] unsigned long 
 33459 ;;  divisor         4    8[BANK0 ] unsigned long 
 33460 ;; Auto vars:     Size  Location     Type
 33461 ;;  counter         1   12[BANK0 ] unsigned char 
 33462 ;; Return value:  Size  Location     Type
 33463 ;;                  4    4[BANK0 ] unsigned long 
 33464 ;; Registers used:
 33465 ;;		wreg, status,2, status,0
 33466 ;; Tracked objects:
 33467 ;;		On entry : F/0
 33468 ;;		On exit  : F/0
 33469 ;;		Unchanged: 0/0
 33470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33474 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33475 ;;Total ram usage:        9 bytes
 33476 ;; Hardware stack levels used:    1
 33477 ;; Hardware stack levels required when called:    7
 33478 ;; This function calls:
 33479 ;;		Nothing
 33480 ;; This function is called by:
 33481 ;;		_RADIO_WriteFrequency
 33482 ;; This function uses a non-reentrant model
 33483 ;;
 33484                           
 33485                           	psect	text172
 33486  0065CC                     __ptext172:
 33487                           	opt stack 0
 33488  0065CC                     ___llmod:
 33489                           	opt stack 18
 33490                           
 33491                           ; BSR set to: 0
 33492                           
 33493                           ;incstack = 0
 33494  0065CC  5168               	movf	___llmod@divisor& (0+255),w,b
 33495  0065CE  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33496  0065D0  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33497  0065D2  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33498  0065D4  E023               	bz	l3113
 33499                           
 33500                           ; BSR set to: 0
 33501  0065D6  0E01               	movlw	1
 33502  0065D8  6F6C               	movwf	___llmod@counter& (0+255),b
 33503  0065DA  D006               	goto	l12109
 33504  0065DC                     l12107:
 33505                           
 33506                           ; BSR set to: 0
 33507  0065DC  90D8               	bcf	status,0,c
 33508  0065DE  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33509  0065E0  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33510  0065E2  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33511  0065E4  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33512  0065E6  2B6C               	incf	___llmod@counter& (0+255),f,b
 33513  0065E8                     l12109:
 33514                           
 33515                           ; BSR set to: 0
 33516  0065E8  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33517  0065EA  D7F8               	goto	l12107
 33518  0065EC                     l12111:
 33519                           
 33520                           ; BSR set to: 0
 33521  0065EC  5168               	movf	___llmod@divisor& (0+255),w,b
 33522  0065EE  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33523  0065F0  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33524  0065F2  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33525  0065F4  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33526  0065F6  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33527  0065F8  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33528  0065FA  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33529  0065FC  E308               	bnc	l12115
 33530                           
 33531                           ; BSR set to: 0
 33532  0065FE  5168               	movf	___llmod@divisor& (0+255),w,b
 33533  006600  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33534  006602  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33535  006604  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33536  006606  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33537  006608  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33538  00660A  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33539  00660C  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33540  00660E                     l12115:
 33541                           
 33542                           ; BSR set to: 0
 33543  00660E  90D8               	bcf	status,0,c
 33544  006610  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33545  006612  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33546  006614  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33547  006616  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33548                           
 33549                           ; BSR set to: 0
 33550  006618  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33551  00661A  D7E8               	goto	l12111
 33552  00661C                     l3113:
 33553                           
 33554                           ; BSR set to: 0
 33555  00661C  C064  F064         	movff	___llmod@dividend,?___llmod
 33556  006620  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33557  006624  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33558  006628  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33559                           
 33560                           ; BSR set to: 0
 33561  00662C  0012               	return		;funcret
 33562  00662E                     __end_of___llmod:
 33563                           	opt stack 0
 33564                           tosu	equ	0xFFF
 33565                           tosh	equ	0xFFE
 33566                           tosl	equ	0xFFD
 33567                           pclath	equ	0xFFA
 33568                           tblptru	equ	0xFF8
 33569                           tblptrh	equ	0xFF7
 33570                           tblptrl	equ	0xFF6
 33571                           tablat	equ	0xFF5
 33572                           prodh	equ	0xFF4
 33573                           prodl	equ	0xFF3
 33574                           intcon	equ	0xFF2
 33575                           intcon2	equ	0xFF1
 33576                           intcon3	equ	0xFF0
 33577                           indf0	equ	0xFEF
 33578                           postinc0	equ	0xFEE
 33579                           plusw0	equ	0xFEB
 33580                           fsr0h	equ	0xFEA
 33581                           fsr0l	equ	0xFE9
 33582                           wreg	equ	0xFE8
 33583                           postinc1	equ	0xFE6
 33584                           postdec1	equ	0xFE5
 33585                           plusw1	equ	0xFE3
 33586                           fsr1h	equ	0xFE2
 33587                           fsr1l	equ	0xFE1
 33588                           indf2	equ	0xFDF
 33589                           postinc2	equ	0xFDE
 33590                           postdec2	equ	0xFDD
 33591                           plusw2	equ	0xFDB
 33592                           fsr2h	equ	0xFDA
 33593                           fsr2l	equ	0xFD9
 33594                           status	equ	0xFD8
 33595                           
 33596 ;; *************** function _RADIO_RegisterWrite *****************
 33597 ;; Defined at:
 33598 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33599 ;; Parameters:    Size  Location     Type
 33600 ;;  reg             1    wreg     unsigned char 
 33601 ;;  value           1    6[BANK0 ] unsigned char 
 33602 ;; Auto vars:     Size  Location     Type
 33603 ;;  reg             1    7[BANK0 ] unsigned char 
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  1    wreg      void 
 33606 ;; Registers used:
 33607 ;;		wreg, status,2, status,0, cstack
 33608 ;; Tracked objects:
 33609 ;;		On entry : 0/0
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33613 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33617 ;;Total ram usage:        2 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; Hardware stack levels required when called:    9
 33620 ;; This function calls:
 33621 ;;		_HALSPICSAssert
 33622 ;;		_HALSPICSDeassert
 33623 ;;		_HALSPISend
 33624 ;; This function is called by:
 33625 ;;		_RADIO_WriteMode
 33626 ;;		_RADIO_WriteFrequency
 33627 ;;		_RADIO_WriteFSKFrequencyDeviation
 33628 ;;		_RADIO_WriteFSKBitRate
 33629 ;;		_RADIO_WritePower
 33630 ;;		_RADIO_Init
 33631 ;;		_RADIO_WriteConfiguration
 33632 ;;		_RADIO_Transmit
 33633 ;;		_RADIO_ReceiveStart
 33634 ;;		_RADIO_RxDone
 33635 ;;		_RADIO_RxTimeout
 33636 ;;		_RADIO_TxDone
 33637 ;;		_RADIO_UnhandledInterrupt
 33638 ;;		_RADIO_FHSSChangeChannel
 33639 ;;		_RADIO_ReadRandom
 33640 ;; This function uses a non-reentrant model
 33641 ;;
 33642                           
 33643                           	psect	text173
 33644  007454                     __ptext173:
 33645                           	opt stack 0
 33646  007454                     _RADIO_RegisterWrite:
 33647                           	opt stack 17
 33648                           
 33649                           ; BSR set to: 0
 33650                           ;incstack = 0
 33651                           ;RADIO_RegisterWrite@reg stored from wreg
 33652  007454  0100               	movlb	0	; () banked
 33653  007456  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33654                           
 33655                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33656  007458  EC5F  F03C         	call	_HALSPICSAssert	;wreg free
 33657                           
 33658                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33659  00745C  0100               	movlb	0	; () banked
 33660  00745E  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33661  007460  0980               	iorlw	128
 33662  007462  EC07  F03C         	call	_HALSPISend
 33663                           
 33664                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33665  007466  0100               	movlb	0	; () banked
 33666  007468  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33667  00746A  EC07  F03C         	call	_HALSPISend
 33668                           
 33669                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33670  00746E  EF5D  F03C         	goto	_HALSPICSDeassert	;wreg free
 33671  007472                     __end_of_RADIO_RegisterWrite:
 33672                           	opt stack 0
 33673                           tosu	equ	0xFFF
 33674                           tosh	equ	0xFFE
 33675                           tosl	equ	0xFFD
 33676                           pclath	equ	0xFFA
 33677                           tblptru	equ	0xFF8
 33678                           tblptrh	equ	0xFF7
 33679                           tblptrl	equ	0xFF6
 33680                           tablat	equ	0xFF5
 33681                           prodh	equ	0xFF4
 33682                           prodl	equ	0xFF3
 33683                           intcon	equ	0xFF2
 33684                           intcon2	equ	0xFF1
 33685                           intcon3	equ	0xFF0
 33686                           indf0	equ	0xFEF
 33687                           postinc0	equ	0xFEE
 33688                           plusw0	equ	0xFEB
 33689                           fsr0h	equ	0xFEA
 33690                           fsr0l	equ	0xFE9
 33691                           wreg	equ	0xFE8
 33692                           postinc1	equ	0xFE6
 33693                           postdec1	equ	0xFE5
 33694                           plusw1	equ	0xFE3
 33695                           fsr1h	equ	0xFE2
 33696                           fsr1l	equ	0xFE1
 33697                           indf2	equ	0xFDF
 33698                           postinc2	equ	0xFDE
 33699                           postdec2	equ	0xFDD
 33700                           plusw2	equ	0xFDB
 33701                           fsr2h	equ	0xFDA
 33702                           fsr2l	equ	0xFD9
 33703                           status	equ	0xFD8
 33704                           
 33705 ;; *************** function _HALSPISend *****************
 33706 ;; Defined at:
 33707 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33708 ;; Parameters:    Size  Location     Type
 33709 ;;  data            1    wreg     unsigned char 
 33710 ;; Auto vars:     Size  Location     Type
 33711 ;;  data            1    5[BANK0 ] unsigned char 
 33712 ;; Return value:  Size  Location     Type
 33713 ;;                  1    wreg      unsigned char 
 33714 ;; Registers used:
 33715 ;;		wreg, status,2, cstack
 33716 ;; Tracked objects:
 33717 ;;		On entry : 0/1
 33718 ;;		On exit  : 0/0
 33719 ;;		Unchanged: 0/0
 33720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33725 ;;Total ram usage:        1 bytes
 33726 ;; Hardware stack levels used:    1
 33727 ;; Hardware stack levels required when called:    8
 33728 ;; This function calls:
 33729 ;;		_SPI2_Exchange8bit
 33730 ;; This function is called by:
 33731 ;;		_RADIO_RegisterWrite
 33732 ;;		_RADIO_RegisterRead
 33733 ;;		_RADIO_Transmit
 33734 ;;		_RADIO_RxDone
 33735 ;;		_RADIO_FSKPayloadReady
 33736 ;; This function uses a non-reentrant model
 33737 ;;
 33738                           
 33739                           	psect	text174
 33740  00780E                     __ptext174:
 33741                           	opt stack 0
 33742  00780E                     _HALSPISend:
 33743                           	opt stack 17
 33744                           
 33745                           ;incstack = 0
 33746                           ;HALSPISend@data stored from wreg
 33747  00780E  0100               	movlb	0	; () banked
 33748  007810  6F65               	movwf	HALSPISend@data& (0+255),b
 33749                           
 33750                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33751  007812  5165               	movf	HALSPISend@data& (0+255),w,b
 33752  007814  EF78  F03B         	goto	_SPI2_Exchange8bit
 33753  007818                     __end_of_HALSPISend:
 33754                           	opt stack 0
 33755                           tosu	equ	0xFFF
 33756                           tosh	equ	0xFFE
 33757                           tosl	equ	0xFFD
 33758                           pclath	equ	0xFFA
 33759                           tblptru	equ	0xFF8
 33760                           tblptrh	equ	0xFF7
 33761                           tblptrl	equ	0xFF6
 33762                           tablat	equ	0xFF5
 33763                           prodh	equ	0xFF4
 33764                           prodl	equ	0xFF3
 33765                           intcon	equ	0xFF2
 33766                           intcon2	equ	0xFF1
 33767                           intcon3	equ	0xFF0
 33768                           indf0	equ	0xFEF
 33769                           postinc0	equ	0xFEE
 33770                           plusw0	equ	0xFEB
 33771                           fsr0h	equ	0xFEA
 33772                           fsr0l	equ	0xFE9
 33773                           wreg	equ	0xFE8
 33774                           postinc1	equ	0xFE6
 33775                           postdec1	equ	0xFE5
 33776                           plusw1	equ	0xFE3
 33777                           fsr1h	equ	0xFE2
 33778                           fsr1l	equ	0xFE1
 33779                           indf2	equ	0xFDF
 33780                           postinc2	equ	0xFDE
 33781                           postdec2	equ	0xFDD
 33782                           plusw2	equ	0xFDB
 33783                           fsr2h	equ	0xFDA
 33784                           fsr2l	equ	0xFD9
 33785                           status	equ	0xFD8
 33786                           
 33787 ;; *************** function _SPI2_Exchange8bit *****************
 33788 ;; Defined at:
 33789 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33790 ;; Parameters:    Size  Location     Type
 33791 ;;  data            1    wreg     unsigned char 
 33792 ;; Auto vars:     Size  Location     Type
 33793 ;;  data            1    4[BANK0 ] unsigned char 
 33794 ;; Return value:  Size  Location     Type
 33795 ;;                  1    wreg      unsigned char 
 33796 ;; Registers used:
 33797 ;;		wreg, status,2
 33798 ;; Tracked objects:
 33799 ;;		On entry : F/0
 33800 ;;		On exit  : 0/0
 33801 ;;		Unchanged: 0/0
 33802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33806 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33807 ;;Total ram usage:        1 bytes
 33808 ;; Hardware stack levels used:    1
 33809 ;; Hardware stack levels required when called:    7
 33810 ;; This function calls:
 33811 ;;		Nothing
 33812 ;; This function is called by:
 33813 ;;		_HALSPISend
 33814 ;; This function uses a non-reentrant model
 33815 ;;
 33816                           
 33817                           	psect	text175
 33818  0076F0                     __ptext175:
 33819                           	opt stack 0
 33820  0076F0                     _SPI2_Exchange8bit:
 33821                           	opt stack 17
 33822                           
 33823                           ;incstack = 0
 33824                           ;SPI2_Exchange8bit@data stored from wreg
 33825  0076F0  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 33826                           
 33827                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 33828  0076F2  9E6C               	bcf	3948,7,c	;volatile
 33829                           
 33830                           ;spi2.c: 82: SSP2BUF = data;
 33831  0076F4  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 33832  0076F8                     l192:
 33833  0076F8  A06D               	btfss	3949,0,c	;volatile
 33834  0076FA  D7FE               	goto	l192
 33835                           
 33836                           ;spi2.c: 86: }
 33837                           ;spi2.c: 88: return (SSP2BUF);
 33838  0076FC  506F               	movf	3951,w,c	;volatile
 33839  0076FE  0012               	return		;funcret
 33840  007700                     __end_of_SPI2_Exchange8bit:
 33841                           	opt stack 0
 33842                           tosu	equ	0xFFF
 33843                           tosh	equ	0xFFE
 33844                           tosl	equ	0xFFD
 33845                           pclath	equ	0xFFA
 33846                           tblptru	equ	0xFF8
 33847                           tblptrh	equ	0xFF7
 33848                           tblptrl	equ	0xFF6
 33849                           tablat	equ	0xFF5
 33850                           prodh	equ	0xFF4
 33851                           prodl	equ	0xFF3
 33852                           intcon	equ	0xFF2
 33853                           intcon2	equ	0xFF1
 33854                           intcon3	equ	0xFF0
 33855                           indf0	equ	0xFEF
 33856                           postinc0	equ	0xFEE
 33857                           plusw0	equ	0xFEB
 33858                           fsr0h	equ	0xFEA
 33859                           fsr0l	equ	0xFE9
 33860                           wreg	equ	0xFE8
 33861                           postinc1	equ	0xFE6
 33862                           postdec1	equ	0xFE5
 33863                           plusw1	equ	0xFE3
 33864                           fsr1h	equ	0xFE2
 33865                           fsr1l	equ	0xFE1
 33866                           indf2	equ	0xFDF
 33867                           postinc2	equ	0xFDE
 33868                           postdec2	equ	0xFDD
 33869                           plusw2	equ	0xFDB
 33870                           fsr2h	equ	0xFDA
 33871                           fsr2l	equ	0xFD9
 33872                           status	equ	0xFD8
 33873                           
 33874 ;; *************** function _HALSPICSDeassert *****************
 33875 ;; Defined at:
 33876 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33877 ;; Parameters:    Size  Location     Type
 33878 ;;		None
 33879 ;; Auto vars:     Size  Location     Type
 33880 ;;		None
 33881 ;; Return value:  Size  Location     Type
 33882 ;;                  1    wreg      void 
 33883 ;; Registers used:
 33884 ;;		None
 33885 ;; Tracked objects:
 33886 ;;		On entry : 0/0
 33887 ;;		On exit  : 0/0
 33888 ;;		Unchanged: 0/0
 33889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33894 ;;Total ram usage:        0 bytes
 33895 ;; Hardware stack levels used:    1
 33896 ;; Hardware stack levels required when called:    7
 33897 ;; This function calls:
 33898 ;;		Nothing
 33899 ;; This function is called by:
 33900 ;;		_RADIO_RegisterWrite
 33901 ;;		_RADIO_RegisterRead
 33902 ;;		_RADIO_Transmit
 33903 ;;		_RADIO_RxDone
 33904 ;;		_RADIO_FSKPayloadReady
 33905 ;; This function uses a non-reentrant model
 33906 ;;
 33907                           
 33908                           	psect	text176
 33909  0078BA                     __ptext176:
 33910                           	opt stack 0
 33911  0078BA                     _HALSPICSDeassert:
 33912                           	opt stack 18
 33913                           
 33914                           ;incstack = 0
 33915                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 33916  0078BA  868C               	bsf	3980,3,c	;volatile
 33917  0078BC  0012               	return		;funcret
 33918  0078BE                     __end_of_HALSPICSDeassert:
 33919                           	opt stack 0
 33920                           tosu	equ	0xFFF
 33921                           tosh	equ	0xFFE
 33922                           tosl	equ	0xFFD
 33923                           pclath	equ	0xFFA
 33924                           tblptru	equ	0xFF8
 33925                           tblptrh	equ	0xFF7
 33926                           tblptrl	equ	0xFF6
 33927                           tablat	equ	0xFF5
 33928                           prodh	equ	0xFF4
 33929                           prodl	equ	0xFF3
 33930                           intcon	equ	0xFF2
 33931                           intcon2	equ	0xFF1
 33932                           intcon3	equ	0xFF0
 33933                           indf0	equ	0xFEF
 33934                           postinc0	equ	0xFEE
 33935                           plusw0	equ	0xFEB
 33936                           fsr0h	equ	0xFEA
 33937                           fsr0l	equ	0xFE9
 33938                           wreg	equ	0xFE8
 33939                           postinc1	equ	0xFE6
 33940                           postdec1	equ	0xFE5
 33941                           plusw1	equ	0xFE3
 33942                           fsr1h	equ	0xFE2
 33943                           fsr1l	equ	0xFE1
 33944                           indf2	equ	0xFDF
 33945                           postinc2	equ	0xFDE
 33946                           postdec2	equ	0xFDD
 33947                           plusw2	equ	0xFDB
 33948                           fsr2h	equ	0xFDA
 33949                           fsr2l	equ	0xFD9
 33950                           status	equ	0xFD8
 33951                           
 33952 ;; *************** function _HALSPICSAssert *****************
 33953 ;; Defined at:
 33954 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33955 ;; Parameters:    Size  Location     Type
 33956 ;;		None
 33957 ;; Auto vars:     Size  Location     Type
 33958 ;;		None
 33959 ;; Return value:  Size  Location     Type
 33960 ;;                  1    wreg      void 
 33961 ;; Registers used:
 33962 ;;		None
 33963 ;; Tracked objects:
 33964 ;;		On entry : 0/1
 33965 ;;		On exit  : 0/0
 33966 ;;		Unchanged: 0/0
 33967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33972 ;;Total ram usage:        0 bytes
 33973 ;; Hardware stack levels used:    1
 33974 ;; Hardware stack levels required when called:    7
 33975 ;; This function calls:
 33976 ;;		Nothing
 33977 ;; This function is called by:
 33978 ;;		_RADIO_RegisterWrite
 33979 ;;		_RADIO_RegisterRead
 33980 ;;		_RADIO_Transmit
 33981 ;;		_RADIO_RxDone
 33982 ;;		_RADIO_FSKPayloadReady
 33983 ;; This function uses a non-reentrant model
 33984 ;;
 33985                           
 33986                           	psect	text177
 33987  0078BE                     __ptext177:
 33988                           	opt stack 0
 33989  0078BE                     _HALSPICSAssert:
 33990                           	opt stack 18
 33991                           
 33992                           ;incstack = 0
 33993                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 33994  0078BE  968C               	bcf	3980,3,c	;volatile
 33995  0078C0  0012               	return		;funcret
 33996  0078C2                     __end_of_HALSPICSAssert:
 33997                           	opt stack 0
 33998                           tosu	equ	0xFFF
 33999                           tosh	equ	0xFFE
 34000                           tosl	equ	0xFFD
 34001                           pclath	equ	0xFFA
 34002                           tblptru	equ	0xFF8
 34003                           tblptrh	equ	0xFF7
 34004                           tblptrl	equ	0xFF6
 34005                           tablat	equ	0xFF5
 34006                           prodh	equ	0xFF4
 34007                           prodl	equ	0xFF3
 34008                           intcon	equ	0xFF2
 34009                           intcon2	equ	0xFF1
 34010                           intcon3	equ	0xFF0
 34011                           indf0	equ	0xFEF
 34012                           postinc0	equ	0xFEE
 34013                           plusw0	equ	0xFEB
 34014                           fsr0h	equ	0xFEA
 34015                           fsr0l	equ	0xFE9
 34016                           wreg	equ	0xFE8
 34017                           postinc1	equ	0xFE6
 34018                           postdec1	equ	0xFE5
 34019                           plusw1	equ	0xFE3
 34020                           fsr1h	equ	0xFE2
 34021                           fsr1l	equ	0xFE1
 34022                           indf2	equ	0xFDF
 34023                           postinc2	equ	0xFDE
 34024                           postdec2	equ	0xFDD
 34025                           plusw2	equ	0xFDB
 34026                           fsr2h	equ	0xFDA
 34027                           fsr2l	equ	0xFD9
 34028                           status	equ	0xFD8
 34029                           
 34030 ;; *************** function _RADIO_Reset *****************
 34031 ;; Defined at:
 34032 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34033 ;; Parameters:    Size  Location     Type
 34034 ;;		None
 34035 ;; Auto vars:     Size  Location     Type
 34036 ;;		None
 34037 ;; Return value:  Size  Location     Type
 34038 ;;                  1    wreg      void 
 34039 ;; Registers used:
 34040 ;;		wreg, status,2, status,0, cstack
 34041 ;; Tracked objects:
 34042 ;;		On entry : E/1
 34043 ;;		On exit  : E/0
 34044 ;;		Unchanged: 0/0
 34045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34050 ;;Total ram usage:        0 bytes
 34051 ;; Hardware stack levels used:    1
 34052 ;; Hardware stack levels required when called:    8
 34053 ;; This function calls:
 34054 ;;		_HALResetPinMakeInput
 34055 ;;		_HALResetPinMakeOutput
 34056 ;;		_HALResetPinOutputValue
 34057 ;;		_SystemBlockingWaitMs
 34058 ;; This function is called by:
 34059 ;;		_RADIO_Init
 34060 ;; This function uses a non-reentrant model
 34061 ;;
 34062                           
 34063                           	psect	text178
 34064  006FB8                     __ptext178:
 34065                           	opt stack 0
 34066  006FB8                     _RADIO_Reset:
 34067                           	opt stack 20
 34068                           
 34069                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34070                           
 34071                           ;incstack = 0
 34072  006FB8  EC61  F03C         	call	_HALResetPinMakeOutput	;wreg free
 34073                           
 34074                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34075  006FBC  0E00               	movlw	0
 34076  006FBE  EC52  F03B         	call	_HALResetPinOutputValue
 34077                           
 34078                           ; BSR set to: 0
 34079                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34080  006FC2  0E01               	movlw	1
 34081  006FC4  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34082  006FC6  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34083  006FC8  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34084  006FCA  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34085  006FCC  ECC7  F038         	call	_SystemBlockingWaitMs	;wreg free
 34086                           
 34087                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34088  006FD0  EC63  F03C         	call	_HALResetPinMakeInput	;wreg free
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34092  006FD4  0E0A               	movlw	10
 34093  006FD6  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34094  006FD8  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34095  006FDA  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34096  006FDC  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34097  006FDE  ECC7  F038         	call	_SystemBlockingWaitMs	;wreg free
 34098                           
 34099                           ; BSR set to: 0
 34100                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34101  006FE2  0E01               	movlw	1
 34102  006FE4  EC52  F03B         	call	_HALResetPinOutputValue
 34103                           
 34104                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34105  006FE8  EF61  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 34106  006FEC                     __end_of_RADIO_Reset:
 34107                           	opt stack 0
 34108                           tosu	equ	0xFFF
 34109                           tosh	equ	0xFFE
 34110                           tosl	equ	0xFFD
 34111                           pclath	equ	0xFFA
 34112                           tblptru	equ	0xFF8
 34113                           tblptrh	equ	0xFF7
 34114                           tblptrl	equ	0xFF6
 34115                           tablat	equ	0xFF5
 34116                           prodh	equ	0xFF4
 34117                           prodl	equ	0xFF3
 34118                           intcon	equ	0xFF2
 34119                           intcon2	equ	0xFF1
 34120                           intcon3	equ	0xFF0
 34121                           indf0	equ	0xFEF
 34122                           postinc0	equ	0xFEE
 34123                           plusw0	equ	0xFEB
 34124                           fsr0h	equ	0xFEA
 34125                           fsr0l	equ	0xFE9
 34126                           wreg	equ	0xFE8
 34127                           postinc1	equ	0xFE6
 34128                           postdec1	equ	0xFE5
 34129                           plusw1	equ	0xFE3
 34130                           fsr1h	equ	0xFE2
 34131                           fsr1l	equ	0xFE1
 34132                           indf2	equ	0xFDF
 34133                           postinc2	equ	0xFDE
 34134                           postdec2	equ	0xFDD
 34135                           plusw2	equ	0xFDB
 34136                           fsr2h	equ	0xFDA
 34137                           fsr2l	equ	0xFD9
 34138                           status	equ	0xFD8
 34139                           
 34140 ;; *************** function _SystemBlockingWaitMs *****************
 34141 ;; Defined at:
 34142 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34143 ;; Parameters:    Size  Location     Type
 34144 ;;  ms              4    4[BANK0 ] unsigned long 
 34145 ;; Auto vars:     Size  Location     Type
 34146 ;;		None
 34147 ;; Return value:  Size  Location     Type
 34148 ;;                  1    wreg      void 
 34149 ;; Registers used:
 34150 ;;		wreg, status,2, status,0
 34151 ;; Tracked objects:
 34152 ;;		On entry : F/0
 34153 ;;		On exit  : F/0
 34154 ;;		Unchanged: 0/0
 34155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34156 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34159 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34160 ;;Total ram usage:        5 bytes
 34161 ;; Hardware stack levels used:    1
 34162 ;; Hardware stack levels required when called:    7
 34163 ;; This function calls:
 34164 ;;		Nothing
 34165 ;; This function is called by:
 34166 ;;		_RADIO_WriteMode
 34167 ;;		_RADIO_Reset
 34168 ;;		_RADIO_ReadRandom
 34169 ;; This function uses a non-reentrant model
 34170 ;;
 34171                           
 34172                           	psect	text179
 34173  00718E                     __ptext179:
 34174                           	opt stack 0
 34175  00718E                     _SystemBlockingWaitMs:
 34176                           	opt stack 19
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;sw_timer.c: 147: while (ms > 0)
 34180                           
 34181                           ;incstack = 0
 34182  00718E  D00E               	goto	l11953
 34183  007190                     l11949:
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;sw_timer.c: 148: {
 34187                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34188  007190  0E06               	movlw	6
 34189  007192  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34190  007194  0E30               	movlw	48
 34191  007196                     u19587:
 34192  007196  2EE8               	decfsz	wreg,f,c
 34193  007198  D7FE               	goto	u19587
 34194  00719A  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34195  00719C  D7FC               	goto	u19587
 34196  00719E  D000               	nop2	
 34197                           
 34198                           ;sw_timer.c: 150: ms--;
 34199  0071A0  0100               	movlb	0	; () banked
 34200  0071A2  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34201  0071A4  0E00               	movlw	0
 34202  0071A6  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34203  0071A8  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34204  0071AA  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34205  0071AC                     l11953:
 34206                           
 34207                           ; BSR set to: 0
 34208  0071AC  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34209  0071AE  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34210  0071B0  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34211  0071B2  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34212  0071B4  E1ED               	bnz	l11949
 34213                           
 34214                           ; BSR set to: 0
 34215  0071B6  0012               	return		;funcret
 34216  0071B8                     __end_of_SystemBlockingWaitMs:
 34217                           	opt stack 0
 34218                           tosu	equ	0xFFF
 34219                           tosh	equ	0xFFE
 34220                           tosl	equ	0xFFD
 34221                           pclath	equ	0xFFA
 34222                           tblptru	equ	0xFF8
 34223                           tblptrh	equ	0xFF7
 34224                           tblptrl	equ	0xFF6
 34225                           tablat	equ	0xFF5
 34226                           prodh	equ	0xFF4
 34227                           prodl	equ	0xFF3
 34228                           intcon	equ	0xFF2
 34229                           intcon2	equ	0xFF1
 34230                           intcon3	equ	0xFF0
 34231                           indf0	equ	0xFEF
 34232                           postinc0	equ	0xFEE
 34233                           plusw0	equ	0xFEB
 34234                           fsr0h	equ	0xFEA
 34235                           fsr0l	equ	0xFE9
 34236                           wreg	equ	0xFE8
 34237                           postinc1	equ	0xFE6
 34238                           postdec1	equ	0xFE5
 34239                           plusw1	equ	0xFE3
 34240                           fsr1h	equ	0xFE2
 34241                           fsr1l	equ	0xFE1
 34242                           indf2	equ	0xFDF
 34243                           postinc2	equ	0xFDE
 34244                           postdec2	equ	0xFDD
 34245                           plusw2	equ	0xFDB
 34246                           fsr2h	equ	0xFDA
 34247                           fsr2l	equ	0xFD9
 34248                           status	equ	0xFD8
 34249                           
 34250 ;; *************** function _HALResetPinOutputValue *****************
 34251 ;; Defined at:
 34252 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34253 ;; Parameters:    Size  Location     Type
 34254 ;;  value           1    wreg     unsigned char 
 34255 ;; Auto vars:     Size  Location     Type
 34256 ;;  value           1    4[BANK0 ] unsigned char 
 34257 ;; Return value:  Size  Location     Type
 34258 ;;                  1    wreg      void 
 34259 ;; Registers used:
 34260 ;;		wreg, status,2, status,0
 34261 ;; Tracked objects:
 34262 ;;		On entry : E/1
 34263 ;;		On exit  : F/0
 34264 ;;		Unchanged: 0/0
 34265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34270 ;;Total ram usage:        1 bytes
 34271 ;; Hardware stack levels used:    1
 34272 ;; Hardware stack levels required when called:    7
 34273 ;; This function calls:
 34274 ;;		Nothing
 34275 ;; This function is called by:
 34276 ;;		_RADIO_Reset
 34277 ;; This function uses a non-reentrant model
 34278 ;;
 34279                           
 34280                           	psect	text180
 34281  0076A4                     __ptext180:
 34282                           	opt stack 0
 34283  0076A4                     _HALResetPinOutputValue:
 34284                           	opt stack 20
 34285                           
 34286                           ; BSR set to: 0
 34287                           ;incstack = 0
 34288                           ;HALResetPinOutputValue@value stored from wreg
 34289  0076A4  0100               	movlb	0	; () banked
 34290  0076A6  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34291                           
 34292                           ;radio_driver_hal.c: 57: if (value == 0)
 34293  0076A8  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34294  0076AA  E102               	bnz	l9587
 34295                           
 34296                           ; BSR set to: 0
 34297                           
 34298                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34299  0076AC  948B               	bcf	3979,2,c	;volatile
 34300  0076AE  0012               	return	
 34301  0076B0                     l9587:
 34302                           
 34303                           ; BSR set to: 0
 34304                           ;radio_driver_hal.c: 59: else if (value == 1)
 34305  0076B0  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34306  0076B2  B4D8               	btfsc	status,2,c
 34307                           
 34308                           ; BSR set to: 0
 34309                           
 34310                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34311  0076B4  848B               	bsf	3979,2,c	;volatile
 34312                           
 34313                           ; BSR set to: 0
 34314  0076B6  0012               	return		;funcret
 34315  0076B8                     __end_of_HALResetPinOutputValue:
 34316                           	opt stack 0
 34317                           tosu	equ	0xFFF
 34318                           tosh	equ	0xFFE
 34319                           tosl	equ	0xFFD
 34320                           pclath	equ	0xFFA
 34321                           tblptru	equ	0xFF8
 34322                           tblptrh	equ	0xFF7
 34323                           tblptrl	equ	0xFF6
 34324                           tablat	equ	0xFF5
 34325                           prodh	equ	0xFF4
 34326                           prodl	equ	0xFF3
 34327                           intcon	equ	0xFF2
 34328                           intcon2	equ	0xFF1
 34329                           intcon3	equ	0xFF0
 34330                           indf0	equ	0xFEF
 34331                           postinc0	equ	0xFEE
 34332                           plusw0	equ	0xFEB
 34333                           fsr0h	equ	0xFEA
 34334                           fsr0l	equ	0xFE9
 34335                           wreg	equ	0xFE8
 34336                           postinc1	equ	0xFE6
 34337                           postdec1	equ	0xFE5
 34338                           plusw1	equ	0xFE3
 34339                           fsr1h	equ	0xFE2
 34340                           fsr1l	equ	0xFE1
 34341                           indf2	equ	0xFDF
 34342                           postinc2	equ	0xFDE
 34343                           postdec2	equ	0xFDD
 34344                           plusw2	equ	0xFDB
 34345                           fsr2h	equ	0xFDA
 34346                           fsr2l	equ	0xFD9
 34347                           status	equ	0xFD8
 34348                           
 34349 ;; *************** function _HALResetPinMakeOutput *****************
 34350 ;; Defined at:
 34351 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34352 ;; Parameters:    Size  Location     Type
 34353 ;;		None
 34354 ;; Auto vars:     Size  Location     Type
 34355 ;;		None
 34356 ;; Return value:  Size  Location     Type
 34357 ;;                  1    wreg      void 
 34358 ;; Registers used:
 34359 ;;		None
 34360 ;; Tracked objects:
 34361 ;;		On entry : E/1
 34362 ;;		On exit  : E/0
 34363 ;;		Unchanged: E/0
 34364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34369 ;;Total ram usage:        0 bytes
 34370 ;; Hardware stack levels used:    1
 34371 ;; Hardware stack levels required when called:    7
 34372 ;; This function calls:
 34373 ;;		Nothing
 34374 ;; This function is called by:
 34375 ;;		_RADIO_Reset
 34376 ;; This function uses a non-reentrant model
 34377 ;;
 34378                           
 34379                           	psect	text181
 34380  0078C2                     __ptext181:
 34381                           	opt stack 0
 34382  0078C2                     _HALResetPinMakeOutput:
 34383                           	opt stack 20
 34384                           
 34385                           ; BSR set to: 0
 34386                           ;incstack = 0
 34387                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34388  0078C2  9494               	bcf	3988,2,c	;volatile
 34389  0078C4  0012               	return		;funcret
 34390  0078C6                     __end_of_HALResetPinMakeOutput:
 34391                           	opt stack 0
 34392                           tosu	equ	0xFFF
 34393                           tosh	equ	0xFFE
 34394                           tosl	equ	0xFFD
 34395                           pclath	equ	0xFFA
 34396                           tblptru	equ	0xFF8
 34397                           tblptrh	equ	0xFF7
 34398                           tblptrl	equ	0xFF6
 34399                           tablat	equ	0xFF5
 34400                           prodh	equ	0xFF4
 34401                           prodl	equ	0xFF3
 34402                           intcon	equ	0xFF2
 34403                           intcon2	equ	0xFF1
 34404                           intcon3	equ	0xFF0
 34405                           indf0	equ	0xFEF
 34406                           postinc0	equ	0xFEE
 34407                           plusw0	equ	0xFEB
 34408                           fsr0h	equ	0xFEA
 34409                           fsr0l	equ	0xFE9
 34410                           wreg	equ	0xFE8
 34411                           postinc1	equ	0xFE6
 34412                           postdec1	equ	0xFE5
 34413                           plusw1	equ	0xFE3
 34414                           fsr1h	equ	0xFE2
 34415                           fsr1l	equ	0xFE1
 34416                           indf2	equ	0xFDF
 34417                           postinc2	equ	0xFDE
 34418                           postdec2	equ	0xFDD
 34419                           plusw2	equ	0xFDB
 34420                           fsr2h	equ	0xFDA
 34421                           fsr2l	equ	0xFD9
 34422                           status	equ	0xFD8
 34423                           
 34424 ;; *************** function _HALResetPinMakeInput *****************
 34425 ;; Defined at:
 34426 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34427 ;; Parameters:    Size  Location     Type
 34428 ;;		None
 34429 ;; Auto vars:     Size  Location     Type
 34430 ;;		None
 34431 ;; Return value:  Size  Location     Type
 34432 ;;                  1    wreg      void 
 34433 ;; Registers used:
 34434 ;;		None
 34435 ;; Tracked objects:
 34436 ;;		On entry : F/0
 34437 ;;		On exit  : F/0
 34438 ;;		Unchanged: F/0
 34439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34444 ;;Total ram usage:        0 bytes
 34445 ;; Hardware stack levels used:    1
 34446 ;; Hardware stack levels required when called:    7
 34447 ;; This function calls:
 34448 ;;		Nothing
 34449 ;; This function is called by:
 34450 ;;		_RADIO_Reset
 34451 ;; This function uses a non-reentrant model
 34452 ;;
 34453                           
 34454                           	psect	text182
 34455  0078C6                     __ptext182:
 34456                           	opt stack 0
 34457  0078C6                     _HALResetPinMakeInput:
 34458                           	opt stack 20
 34459                           
 34460                           ; BSR set to: 0
 34461                           
 34462                           ;incstack = 0
 34463                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 34464  0078C6  8494               	bsf	3988,2,c	;volatile
 34465                           
 34466                           ; BSR set to: 0
 34467  0078C8  0012               	return		;funcret
 34468  0078CA                     __end_of_HALResetPinMakeInput:
 34469                           	opt stack 0
 34470                           tosu	equ	0xFFF
 34471                           tosh	equ	0xFFE
 34472                           tosl	equ	0xFFD
 34473                           pclath	equ	0xFFA
 34474                           tblptru	equ	0xFF8
 34475                           tblptrh	equ	0xFF7
 34476                           tblptrl	equ	0xFF6
 34477                           tablat	equ	0xFF5
 34478                           prodh	equ	0xFF4
 34479                           prodl	equ	0xFF3
 34480                           intcon	equ	0xFF2
 34481                           intcon2	equ	0xFF1
 34482                           intcon3	equ	0xFF0
 34483                           indf0	equ	0xFEF
 34484                           postinc0	equ	0xFEE
 34485                           plusw0	equ	0xFEB
 34486                           fsr0h	equ	0xFEA
 34487                           fsr0l	equ	0xFE9
 34488                           wreg	equ	0xFE8
 34489                           postinc1	equ	0xFE6
 34490                           postdec1	equ	0xFE5
 34491                           plusw1	equ	0xFE3
 34492                           fsr1h	equ	0xFE2
 34493                           fsr1l	equ	0xFE1
 34494                           indf2	equ	0xFDF
 34495                           postinc2	equ	0xFDE
 34496                           postdec2	equ	0xFDD
 34497                           plusw2	equ	0xFDB
 34498                           fsr2h	equ	0xFDA
 34499                           fsr2l	equ	0xFD9
 34500                           status	equ	0xFD8
 34501                           
 34502 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34503 ;; Defined at:
 34504 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34505 ;; Parameters:    Size  Location     Type
 34506 ;;  period          2   54[BANK0 ] unsigned int 
 34507 ;; Auto vars:     Size  Location     Type
 34508 ;;  iCtr            1   68[BANK0 ] unsigned char 
 34509 ;; Return value:  Size  Location     Type
 34510 ;;                  1    wreg      void 
 34511 ;; Registers used:
 34512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34513 ;; Tracked objects:
 34514 ;;		On entry : F/0
 34515 ;;		On exit  : D/0
 34516 ;;		Unchanged: 0/0
 34517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34519 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34520 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34521 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34522 ;;Total ram usage:       15 bytes
 34523 ;; Hardware stack levels used:    1
 34524 ;; Hardware stack levels required when called:   11
 34525 ;; This function calls:
 34526 ;;		_SwTimerSetTimeout
 34527 ;;		_SwTimerStart
 34528 ;;		_SwTimerStop
 34529 ;;		___lldiv
 34530 ;; This function is called by:
 34531 ;;		_LORAWAN_Reset
 34532 ;; This function uses a non-reentrant model
 34533 ;;
 34534                           
 34535                           	psect	text183
 34536  0036D0                     __ptext183:
 34537                           	opt stack 0
 34538  0036D0                     _LORAWAN_LinkCheckConfigure:
 34539                           	opt stack 17
 34540                           
 34541                           ; BSR set to: 0
 34542                           ;lorawan.c: 757: uint8_t iCtr;
 34543                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34544                           
 34545                           ; BSR set to: 0
 34546                           ;incstack = 0
 34547  0036D0  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34548  0036D2  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34549  0036D4  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34550  0036D6  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34551  0036D8  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34552  0036DA  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34553  0036DC  0EE8               	movlw	232
 34554  0036DE  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34555  0036E0  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34556  0036E4  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34557  0036E8  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34558  0036EA  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34559  0036EC  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34560  0036EE  50F3               	movf	prodl,w,c
 34561  0036F0  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34562  0036F2  50F4               	movf	prodh,w,c
 34563  0036F4  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34564  0036F6  0E00               	movlw	0
 34565  0036F8  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34566  0036FA  0E03               	movlw	3
 34567  0036FC  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34568  0036FE  50F3               	movf	prodl,w,c
 34569  003700  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34570  003702  50F4               	movf	prodh,w,c
 34571  003704  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34572  003706  0E00               	movlw	0
 34573  003708  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34574  00370A  0EE8               	movlw	232
 34575  00370C  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34576  00370E  50F3               	movf	prodl,w,c
 34577  003710  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34578  003712  50F4               	movf	prodh,w,c
 34579  003714  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34580  003716  0E03               	movlw	3
 34581  003718  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34582  00371A  50F3               	movf	prodl,w,c
 34583  00371C  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34584  00371E  50F4               	movf	prodh,w,c
 34585  003720  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34586  003722  0E00               	movlw	0
 34587  003724  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34588  003726  50F3               	movf	prodl,w,c
 34589  003728  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34590  00372A  50F4               	movf	prodh,w,c
 34591  00372C  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34592  00372E  0EE8               	movlw	232
 34593  003730  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34594  003732  50F3               	movf	prodl,w,c
 34595  003734  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34596  003736  0E03               	movlw	3
 34597  003738  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34598  00373A  50F3               	movf	prodl,w,c
 34599  00373C  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34600  00373E  0E00               	movlw	0
 34601  003740  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34602  003742  50F3               	movf	prodl,w,c
 34603  003744  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34604  003746  0E00               	movlw	0
 34605  003748  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34606  00374A  50F3               	movf	prodl,w,c
 34607  00374C  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34608  00374E  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34609  003752  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34610  003756  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34611  00375A  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34612                           
 34613                           ; BSR set to: 0
 34614                           ;lorawan.c: 761: if (period == 0)
 34615  00375E  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34616  003760  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34617  003762  E127               	bnz	l1993
 34618                           
 34619                           ; BSR set to: 0
 34620                           ;lorawan.c: 762: {
 34621                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34622  003764  0102               	movlb	2	; () banked
 34623  003766  51E7               	movf	(_loRa+231)& (0+255),w,b
 34624  003768  EC57  F03A         	call	_SwTimerStop
 34625                           
 34626                           ; BSR set to: 0
 34627                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34628  00376C  0102               	movlb	2	; () banked
 34629  00376E  9503               	bcf	(_loRa+3)& (0+255),2,b
 34630                           
 34631                           ; BSR set to: 2
 34632                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34633  003770  0100               	movlb	0	; () banked
 34634  003772  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34635  003774  D018               	goto	l14975
 34636  003776                     l14967:
 34637                           
 34638                           ; BSR set to: 0
 34639                           ;lorawan.c: 766: {
 34640                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34641  003776  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34642  003778  0D02               	mullw	2
 34643  00377A  0EA8               	movlw	low (_loRa+168)
 34644  00377C  24F3               	addwf	prodl,w,c
 34645  00377E  6ED9               	movwf	fsr2l,c
 34646  003780  0E02               	movlw	high (_loRa+168)
 34647  003782  20F4               	addwfc	prodh,w,c
 34648  003784  6EDA               	movwf	fsr2h,c
 34649  003786  0E02               	movlw	2
 34650  003788  18DE               	xorwf	postinc2,w,c
 34651  00378A  E10B               	bnz	l14973
 34652                           
 34653                           ; BSR set to: 0
 34654                           ;lorawan.c: 768: {
 34655                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34656  00378C  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34657  00378E  0D02               	mullw	2
 34658  003790  0EA8               	movlw	low (_loRa+168)
 34659  003792  24F3               	addwf	prodl,w,c
 34660  003794  6ED9               	movwf	fsr2l,c
 34661  003796  0E02               	movlw	high (_loRa+168)
 34662  003798  20F4               	addwfc	prodh,w,c
 34663  00379A  6EDA               	movwf	fsr2h,c
 34664  00379C  68DF               	setf	indf2,c
 34665                           
 34666                           ; BSR set to: 0
 34667                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34668  00379E  0102               	movlb	2	; () banked
 34669  0037A0  07A7               	decf	(_loRa+167)& (0+255),f,b
 34670  0037A2                     l14973:
 34671  0037A2  0100               	movlb	0	; () banked
 34672  0037A4  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34673  0037A6                     l14975:
 34674                           
 34675                           ; BSR set to: 0
 34676  0037A6  0102               	movlb	2	; () banked
 34677  0037A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 34678  0037AA  0100               	movlb	0	; () banked
 34679  0037AC  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34680  0037AE  E3E3               	bnc	l14967
 34681  0037B0  0012               	return	
 34682  0037B2                     l1993:
 34683                           
 34684                           ; BSR set to: 0
 34685                           ;lorawan.c: 776: else
 34686                           ;lorawan.c: 777: {
 34687                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34688  0037B2  0102               	movlb	2	; () banked
 34689  0037B4  8503               	bsf	(_loRa+3)& (0+255),2,b
 34690                           
 34691                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34692  0037B6  A902               	btfss	(_loRa+2)& (0+255),4,b
 34693  0037B8  0012               	return	
 34694                           
 34695                           ; BSR set to: 2
 34696                           ;lorawan.c: 782: {
 34697                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34698  0037BA  51CF               	movf	(_loRa+207)& (0+255),w,b
 34699  0037BC  E106               	bnz	u17390
 34700  0037BE  29CC               	incf	(_loRa+204)& (0+255),w,b
 34701  0037C0  0EFF               	movlw	255
 34702  0037C2  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34703  0037C4  0E0F               	movlw	15
 34704  0037C6  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34705  0037C8  E319               	bnc	l14981
 34706  0037CA                     u17390:
 34707                           
 34708                           ; BSR set to: 2
 34709  0037CA  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34710  0037CE  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34711  0037D2  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34712  0037D6  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34713  0037DA  0E7D               	movlw	125
 34714  0037DC  0100               	movlb	0	; () banked
 34715  0037DE  6F68               	movwf	___lldiv@divisor& (0+255),b
 34716  0037E0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34717  0037E2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34718  0037E4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34719  0037E6  EC0B  F030         	call	___lldiv	;wreg free
 34720  0037EA  0E0C               	movlw	12
 34721  0037EC                     u17405:
 34722  0037EC  90D8               	bcf	status,0,c
 34723  0037EE  3764               	rlcf	?___lldiv& (0+255),f,b
 34724  0037F0  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34725  0037F2  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34726  0037F4  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34727  0037F6  2EE8               	decfsz	wreg,f,c
 34728  0037F8  D7F9               	goto	u17405
 34729  0037FA  D020               	goto	L21
 34730  0037FC                     l14981:
 34731                           
 34732                           ; BSR set to: 2
 34733  0037FC  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34734  003800  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34735  003804  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34736  003808  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34737  00380C  0E0C               	movlw	12
 34738  00380E                     u17415:
 34739  00380E  90D8               	bcf	status,0,c
 34740  003810  0100               	movlb	0	; () banked
 34741  003812  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34742  003814  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34743  003816  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34744  003818  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34745  00381A  2EE8               	decfsz	wreg,f,c
 34746  00381C  D7F8               	goto	u17415
 34747  00381E  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34748  003822  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34749  003826  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34750  00382A  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34751  00382E  0E7D               	movlw	125
 34752  003830  6F68               	movwf	___lldiv@divisor& (0+255),b
 34753  003832  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34754  003834  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34755  003836  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34756  003838  EC0B  F030         	call	___lldiv	;wreg free
 34757  00383C                     L21:
 34758  00383C  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3502
 34759  003840  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3502+1
 34760  003844  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3502+2
 34761  003848  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3502+3
 34762                           
 34763                           ; BSR set to: 0
 34764  00384C  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3502,SwTimerSetTimeout@timeout
 34765  003850  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3502+1,SwTimerSetTimeout@timeout+1
 34766  003854  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3502+2,SwTimerSetTimeout@timeout+2
 34767  003858  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3502+3,SwTimerSetTimeout@timeout+3
 34768  00385C  0102               	movlb	2	; () banked
 34769  00385E  51E7               	movf	(_loRa+231)& (0+255),w,b
 34770  003860  EC60  F036         	call	_SwTimerSetTimeout
 34771                           
 34772                           ; BSR set to: 0
 34773                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34774  003864  0102               	movlb	2	; () banked
 34775  003866  51E7               	movf	(_loRa+231)& (0+255),w,b
 34776  003868  EF49  F02E         	goto	_SwTimerStart
 34777  00386C                     __end_of_LORAWAN_LinkCheckConfigure:
 34778                           	opt stack 0
 34779                           tosu	equ	0xFFF
 34780                           tosh	equ	0xFFE
 34781                           tosl	equ	0xFFD
 34782                           pclath	equ	0xFFA
 34783                           tblptru	equ	0xFF8
 34784                           tblptrh	equ	0xFF7
 34785                           tblptrl	equ	0xFF6
 34786                           tablat	equ	0xFF5
 34787                           prodh	equ	0xFF4
 34788                           prodl	equ	0xFF3
 34789                           intcon	equ	0xFF2
 34790                           intcon2	equ	0xFF1
 34791                           intcon3	equ	0xFF0
 34792                           indf0	equ	0xFEF
 34793                           postinc0	equ	0xFEE
 34794                           plusw0	equ	0xFEB
 34795                           fsr0h	equ	0xFEA
 34796                           fsr0l	equ	0xFE9
 34797                           wreg	equ	0xFE8
 34798                           postinc1	equ	0xFE6
 34799                           postdec1	equ	0xFE5
 34800                           plusw1	equ	0xFE3
 34801                           fsr1h	equ	0xFE2
 34802                           fsr1l	equ	0xFE1
 34803                           indf2	equ	0xFDF
 34804                           postinc2	equ	0xFDE
 34805                           postdec2	equ	0xFDD
 34806                           plusw2	equ	0xFDB
 34807                           fsr2h	equ	0xFDA
 34808                           fsr2l	equ	0xFD9
 34809                           status	equ	0xFD8
 34810                           
 34811 ;; *************** function ___lldiv *****************
 34812 ;; Defined at:
 34813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 34814 ;; Parameters:    Size  Location     Type
 34815 ;;  dividend        4    4[BANK0 ] unsigned long 
 34816 ;;  divisor         4    8[BANK0 ] unsigned long 
 34817 ;; Auto vars:     Size  Location     Type
 34818 ;;  quotient        4   12[BANK0 ] unsigned long 
 34819 ;;  counter         1   16[BANK0 ] unsigned char 
 34820 ;; Return value:  Size  Location     Type
 34821 ;;                  4    4[BANK0 ] unsigned long 
 34822 ;; Registers used:
 34823 ;;		wreg, status,2, status,0
 34824 ;; Tracked objects:
 34825 ;;		On entry : F/0
 34826 ;;		On exit  : F/0
 34827 ;;		Unchanged: 0/0
 34828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34829 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34830 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34832 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34833 ;;Total ram usage:       13 bytes
 34834 ;; Hardware stack levels used:    1
 34835 ;; Hardware stack levels required when called:    7
 34836 ;; This function calls:
 34837 ;;		Nothing
 34838 ;; This function is called by:
 34839 ;;		_RADIO_WriteFrequency
 34840 ;;		_RADIO_WriteFSKFrequencyDeviation
 34841 ;;		_RADIO_WriteFSKBitRate
 34842 ;;		_RADIO_Transmit
 34843 ;;		_RADIO_ReceiveStart
 34844 ;;		_LORAWAN_TxDone
 34845 ;;		_LORAWAN_RxTimeout
 34846 ;;		_StartReTxTimer
 34847 ;;		_DutyCycleCallback
 34848 ;;		_LORAWAN_LinkCheckConfigure
 34849 ;;		_LORAWAN_LinkCheckCallback
 34850 ;;		_UpdateRetransmissionAckTimeoutState
 34851 ;;		_UpdateJoinSuccessState
 34852 ;; This function uses a non-reentrant model
 34853 ;;
 34854                           
 34855                           	psect	text184
 34856  006016                     __ptext184:
 34857                           	opt stack 0
 34858  006016                     ___lldiv:
 34859                           	opt stack 20
 34860                           
 34861                           ; BSR set to: 0
 34862                           
 34863                           ;incstack = 0
 34864  006016  6B6C               	clrf	___lldiv@quotient& (0+255),b
 34865  006018  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 34866  00601A  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 34867  00601C  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 34868                           
 34869                           ; BSR set to: 0
 34870  00601E  5168               	movf	___lldiv@divisor& (0+255),w,b
 34871  006020  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34872  006022  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34873  006024  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34874  006026  E029               	bz	l3103
 34875                           
 34876                           ; BSR set to: 0
 34877  006028  0E01               	movlw	1
 34878  00602A  6F70               	movwf	___lldiv@counter& (0+255),b
 34879  00602C  D006               	goto	l12089
 34880  00602E                     l12087:
 34881                           
 34882                           ; BSR set to: 0
 34883  00602E  90D8               	bcf	status,0,c
 34884  006030  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 34885  006032  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34886  006034  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34887  006036  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34888  006038  2B70               	incf	___lldiv@counter& (0+255),f,b
 34889  00603A                     l12089:
 34890                           
 34891                           ; BSR set to: 0
 34892  00603A  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34893  00603C  D7F8               	goto	l12087
 34894  00603E                     l12091:
 34895                           
 34896                           ; BSR set to: 0
 34897  00603E  90D8               	bcf	status,0,c
 34898  006040  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 34899  006042  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34900  006044  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34901  006046  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34902                           
 34903                           ; BSR set to: 0
 34904  006048  5168               	movf	___lldiv@divisor& (0+255),w,b
 34905  00604A  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 34906  00604C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34907  00604E  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34908  006050  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34909  006052  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34910  006054  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34911  006056  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34912  006058  E309               	bnc	l12099
 34913                           
 34914                           ; BSR set to: 0
 34915  00605A  5168               	movf	___lldiv@divisor& (0+255),w,b
 34916  00605C  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 34917  00605E  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34918  006060  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34919  006062  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34920  006064  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34921  006066  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34922  006068  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34923                           
 34924                           ; BSR set to: 0
 34925  00606A  816C               	bsf	___lldiv@quotient& (0+255),0,b
 34926  00606C                     l12099:
 34927                           
 34928                           ; BSR set to: 0
 34929  00606C  90D8               	bcf	status,0,c
 34930  00606E  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34931  006070  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34932  006072  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34933  006074  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 34934                           
 34935                           ; BSR set to: 0
 34936  006076  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 34937  006078  D7E2               	goto	l12091
 34938  00607A                     l3103:
 34939                           
 34940                           ; BSR set to: 0
 34941  00607A  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 34942  00607E  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 34943  006082  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 34944  006086  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 34945                           
 34946                           ; BSR set to: 0
 34947  00608A  0012               	return		;funcret
 34948  00608C                     __end_of___lldiv:
 34949                           	opt stack 0
 34950                           tosu	equ	0xFFF
 34951                           tosh	equ	0xFFE
 34952                           tosl	equ	0xFFD
 34953                           pclath	equ	0xFFA
 34954                           tblptru	equ	0xFF8
 34955                           tblptrh	equ	0xFF7
 34956                           tblptrl	equ	0xFF6
 34957                           tablat	equ	0xFF5
 34958                           prodh	equ	0xFF4
 34959                           prodl	equ	0xFF3
 34960                           intcon	equ	0xFF2
 34961                           intcon2	equ	0xFF1
 34962                           intcon3	equ	0xFF0
 34963                           indf0	equ	0xFEF
 34964                           postinc0	equ	0xFEE
 34965                           plusw0	equ	0xFEB
 34966                           fsr0h	equ	0xFEA
 34967                           fsr0l	equ	0xFE9
 34968                           wreg	equ	0xFE8
 34969                           postinc1	equ	0xFE6
 34970                           postdec1	equ	0xFE5
 34971                           plusw1	equ	0xFE3
 34972                           fsr1h	equ	0xFE2
 34973                           fsr1l	equ	0xFE1
 34974                           indf2	equ	0xFDF
 34975                           postinc2	equ	0xFDE
 34976                           postdec2	equ	0xFDD
 34977                           plusw2	equ	0xFDB
 34978                           fsr2h	equ	0xFDA
 34979                           fsr2l	equ	0xFD9
 34980                           status	equ	0xFD8
 34981                           
 34982 ;; *************** function _SwTimerStop *****************
 34983 ;; Defined at:
 34984 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34985 ;; Parameters:    Size  Location     Type
 34986 ;;  timerId         1    wreg     unsigned char 
 34987 ;; Auto vars:     Size  Location     Type
 34988 ;;  timerId         1    4[BANK0 ] unsigned char 
 34989 ;; Return value:  Size  Location     Type
 34990 ;;                  1    wreg      void 
 34991 ;; Registers used:
 34992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34993 ;; Tracked objects:
 34994 ;;		On entry : C/1
 34995 ;;		On exit  : F/0
 34996 ;;		Unchanged: 0/0
 34997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35002 ;;Total ram usage:        1 bytes
 35003 ;; Hardware stack levels used:    1
 35004 ;; Hardware stack levels required when called:    7
 35005 ;; This function calls:
 35006 ;;		Nothing
 35007 ;; This function is called by:
 35008 ;;		_RADIO_Init
 35009 ;;		_RADIO_Transmit
 35010 ;;		_RADIO_RxDone
 35011 ;;		_RADIO_FSKPayloadReady
 35012 ;;		_RADIO_RxTimeout
 35013 ;;		_RADIO_TxDone
 35014 ;;		_RADIO_FSKPacketSent
 35015 ;;		_RADIO_RxFSKTimeout
 35016 ;;		_LORAWAN_TxDone
 35017 ;;		_StopAllSoftwareTimers
 35018 ;;		_LORAWAN_LinkCheckConfigure
 35019 ;;		_LORAWAN_RxDone
 35020 ;; This function uses a non-reentrant model
 35021 ;;
 35022                           
 35023                           	psect	text185
 35024  0074AE                     __ptext185:
 35025                           	opt stack 0
 35026  0074AE                     _SwTimerStop:
 35027                           	opt stack 20
 35028                           
 35029                           ; BSR set to: 0
 35030                           ;incstack = 0
 35031                           ;SwTimerStop@timerId stored from wreg
 35032  0074AE  0100               	movlb	0	; () banked
 35033  0074B0  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 35034                           
 35035                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35036  0074B2  9EF2               	bcf	intcon,7,c	;volatile
 35037                           
 35038                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35039  0074B4  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 35040  0074B6  0D08               	mullw	8
 35041  0074B8  0E04               	movlw	low (_swTimers+4)
 35042  0074BA  24F3               	addwf	prodl,w,c
 35043  0074BC  6ED9               	movwf	fsr2l,c
 35044  0074BE  0E03               	movlw	high (_swTimers+4)
 35045  0074C0  20F4               	addwfc	prodh,w,c
 35046  0074C2  6EDA               	movwf	fsr2h,c
 35047  0074C4  6ADF               	clrf	indf2,c
 35048                           
 35049                           ; BSR set to: 0
 35050                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35051  0074C6  8EF2               	bsf	intcon,7,c	;volatile
 35052                           
 35053                           ; BSR set to: 0
 35054  0074C8  0C00               	retlw	0	;funcret
 35055  0074CA                     __end_of_SwTimerStop:
 35056                           	opt stack 0
 35057                           tosu	equ	0xFFF
 35058                           tosh	equ	0xFFE
 35059                           tosl	equ	0xFFD
 35060                           pclath	equ	0xFFA
 35061                           tblptru	equ	0xFF8
 35062                           tblptrh	equ	0xFF7
 35063                           tblptrl	equ	0xFF6
 35064                           tablat	equ	0xFF5
 35065                           prodh	equ	0xFF4
 35066                           prodl	equ	0xFF3
 35067                           intcon	equ	0xFF2
 35068                           intcon2	equ	0xFF1
 35069                           intcon3	equ	0xFF0
 35070                           indf0	equ	0xFEF
 35071                           postinc0	equ	0xFEE
 35072                           plusw0	equ	0xFEB
 35073                           fsr0h	equ	0xFEA
 35074                           fsr0l	equ	0xFE9
 35075                           wreg	equ	0xFE8
 35076                           postinc1	equ	0xFE6
 35077                           postdec1	equ	0xFE5
 35078                           plusw1	equ	0xFE3
 35079                           fsr1h	equ	0xFE2
 35080                           fsr1l	equ	0xFE1
 35081                           indf2	equ	0xFDF
 35082                           postinc2	equ	0xFDE
 35083                           postdec2	equ	0xFDD
 35084                           plusw2	equ	0xFDB
 35085                           fsr2h	equ	0xFDA
 35086                           fsr2l	equ	0xFD9
 35087                           status	equ	0xFD8
 35088                           
 35089 ;; *************** function _SwTimerStart *****************
 35090 ;; Defined at:
 35091 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35092 ;; Parameters:    Size  Location     Type
 35093 ;;  timerId         1    wreg     unsigned char 
 35094 ;; Auto vars:     Size  Location     Type
 35095 ;;  timerId         1   53[BANK0 ] unsigned char 
 35096 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 35097 ;; Return value:  Size  Location     Type
 35098 ;;                  1    wreg      void 
 35099 ;; Registers used:
 35100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35101 ;; Tracked objects:
 35102 ;;		On entry : C/2
 35103 ;;		On exit  : F/0
 35104 ;;		Unchanged: 0/0
 35105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35107 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35109 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35110 ;;Total ram usage:        9 bytes
 35111 ;; Hardware stack levels used:    1
 35112 ;; Hardware stack levels required when called:   10
 35113 ;; This function calls:
 35114 ;;		_SwTimersInterrupt
 35115 ;;		_TMR_OverrideRemaining
 35116 ;; This function is called by:
 35117 ;;		_RADIO_Transmit
 35118 ;;		_RADIO_ReceiveStart
 35119 ;;		_LORAWAN_TxDone
 35120 ;;		_LORAWAN_RxTimeout
 35121 ;;		_StartReTxTimer
 35122 ;;		_DutyCycleCallback
 35123 ;;		_LORAWAN_Join
 35124 ;;		_LORAWAN_LinkCheckConfigure
 35125 ;;		_LORAWAN_LinkCheckCallback
 35126 ;;		_UpdateRetransmissionAckTimeoutState
 35127 ;;		_UpdateJoinSuccessState
 35128 ;; This function uses a non-reentrant model
 35129 ;;
 35130                           
 35131                           	psect	text186
 35132  005C92                     __ptext186:
 35133                           	opt stack 0
 35134  005C92                     _SwTimerStart:
 35135                           	opt stack 17
 35136                           
 35137                           ; BSR set to: 0
 35138                           ;incstack = 0
 35139                           ;SwTimerStart@timerId stored from wreg
 35140  005C92  0100               	movlb	0	; () banked
 35141  005C94  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 35142                           
 35143                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35144                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35145  005C96  9EF2               	bcf	intcon,7,c	;volatile
 35146                           
 35147                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35148  005C98  ECA7  F025         	call	_SwTimersInterrupt	;wreg free
 35149  005C9C  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35150  005CA0  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35151  005CA4  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35152  005CA8  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35153                           
 35154                           ; BSR set to: 0
 35155                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35156  005CAC  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35157  005CAE  0D08               	mullw	8
 35158  005CB0  0E00               	movlw	low _swTimers
 35159  005CB2  24F3               	addwf	prodl,w,c
 35160  005CB4  6ED9               	movwf	fsr2l,c
 35161  005CB6  0E03               	movlw	high _swTimers
 35162  005CB8  20F4               	addwfc	prodh,w,c
 35163  005CBA  6EDA               	movwf	fsr2h,c
 35164  005CBC  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35165  005CBE  5CDE               	subwf	postinc2,w,c
 35166  005CC0  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35167  005CC2  58DE               	subwfb	postinc2,w,c
 35168  005CC4  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35169  005CC6  58DE               	subwfb	postinc2,w,c
 35170  005CC8  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35171  005CCA  58DE               	subwfb	postinc2,w,c
 35172  005CCC  E210               	bc	l12425
 35173                           
 35174                           ; BSR set to: 0
 35175                           ;sw_timer.c: 225: {
 35176                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35177  005CCE  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35178  005CD0  0D08               	mullw	8
 35179  005CD2  0E00               	movlw	low _swTimers
 35180  005CD4  24F3               	addwf	prodl,w,c
 35181  005CD6  6ED9               	movwf	fsr2l,c
 35182  005CD8  0E03               	movlw	high _swTimers
 35183  005CDA  20F4               	addwfc	prodh,w,c
 35184  005CDC  6EDA               	movwf	fsr2h,c
 35185  005CDE  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 35186  005CE2  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35187  005CE6  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35188  005CEA  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35189  005CEE                     l12425:
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;sw_timer.c: 227: }
 35193                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35194  005CEE  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35195  005CF2  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35196  005CF6  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35197  005CFA  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35198  005CFE  ECCD  F02F         	call	_TMR_OverrideRemaining	;wreg free
 35199                           
 35200                           ; BSR set to: 0
 35201                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35202  005D02  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35203  005D04  0D08               	mullw	8
 35204  005D06  0E04               	movlw	low (_swTimers+4)
 35205  005D08  24F3               	addwf	prodl,w,c
 35206  005D0A  6ED9               	movwf	fsr2l,c
 35207  005D0C  0E03               	movlw	high (_swTimers+4)
 35208  005D0E  20F4               	addwfc	prodh,w,c
 35209  005D10  6EDA               	movwf	fsr2h,c
 35210  005D12  0E01               	movlw	1
 35211  005D14  6EDF               	movwf	indf2,c
 35212                           
 35213                           ; BSR set to: 0
 35214                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35215  005D16  8EF2               	bsf	intcon,7,c	;volatile
 35216                           
 35217                           ; BSR set to: 0
 35218  005D18  0C01               	retlw	1	;funcret
 35219  005D1A                     __end_of_SwTimerStart:
 35220                           	opt stack 0
 35221                           tosu	equ	0xFFF
 35222                           tosh	equ	0xFFE
 35223                           tosl	equ	0xFFD
 35224                           pclath	equ	0xFFA
 35225                           tblptru	equ	0xFF8
 35226                           tblptrh	equ	0xFF7
 35227                           tblptrl	equ	0xFF6
 35228                           tablat	equ	0xFF5
 35229                           prodh	equ	0xFF4
 35230                           prodl	equ	0xFF3
 35231                           intcon	equ	0xFF2
 35232                           intcon2	equ	0xFF1
 35233                           intcon3	equ	0xFF0
 35234                           indf0	equ	0xFEF
 35235                           postinc0	equ	0xFEE
 35236                           plusw0	equ	0xFEB
 35237                           fsr0h	equ	0xFEA
 35238                           fsr0l	equ	0xFE9
 35239                           wreg	equ	0xFE8
 35240                           postinc1	equ	0xFE6
 35241                           postdec1	equ	0xFE5
 35242                           plusw1	equ	0xFE3
 35243                           fsr1h	equ	0xFE2
 35244                           fsr1l	equ	0xFE1
 35245                           indf2	equ	0xFDF
 35246                           postinc2	equ	0xFDE
 35247                           postdec2	equ	0xFDD
 35248                           plusw2	equ	0xFDB
 35249                           fsr2h	equ	0xFDA
 35250                           fsr2l	equ	0xFD9
 35251                           status	equ	0xFD8
 35252                           
 35253 ;; *************** function _TMR_OverrideRemaining *****************
 35254 ;; Defined at:
 35255 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35256 ;; Parameters:    Size  Location     Type
 35257 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 35258 ;; Auto vars:     Size  Location     Type
 35259 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 35260 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 35261 ;; Return value:  Size  Location     Type
 35262 ;;                  1    wreg      void 
 35263 ;; Registers used:
 35264 ;;		wreg, status,2, status,0, cstack
 35265 ;; Tracked objects:
 35266 ;;		On entry : F/0
 35267 ;;		On exit  : F/0
 35268 ;;		Unchanged: 0/0
 35269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35272 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35273 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35274 ;;Total ram usage:       10 bytes
 35275 ;; Hardware stack levels used:    1
 35276 ;; Hardware stack levels required when called:    9
 35277 ;; This function calls:
 35278 ;;		_TMR_SwapTimer
 35279 ;; This function is called by:
 35280 ;;		_SwTimerStart
 35281 ;; This function uses a non-reentrant model
 35282 ;;
 35283                           
 35284                           	psect	text187
 35285  005F9A                     __ptext187:
 35286                           	opt stack 0
 35287  005F9A                     _TMR_OverrideRemaining:
 35288                           	opt stack 17
 35289                           
 35290                           ; BSR set to: 0
 35291                           ;sw_timer.c: 67: uint16_t tmrVal;
 35292                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35293                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;incstack = 0
 35297  005F9A  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35298  005F9C  1058               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35299  005F9E  1057               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35300  005FA0  E104               	bnz	u12730
 35301  005FA2  0E0B               	movlw	11
 35302  005FA4  5C56               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35303  005FA6  A0D8               	btfss	status,0,c
 35304  005FA8  0012               	return	
 35305  005FAA                     u12730:
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;sw_timer.c: 72: {
 35309                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35310  005FAA  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35311  005FAC  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35312  005FAE  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35313  005FB0  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35314  005FB2  5058               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35315  005FB4  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35316  005FB6  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35317  005FB8  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35318  005FBA  B0D8               	btfsc	status,0,c
 35319  005FBC  0012               	return	
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;sw_timer.c: 74: {
 35323                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35324  005FBE  C06E  F056         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35325  005FC2  C06F  F057         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35326  005FC6  C070  F058         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35327  005FCA  C071  F059         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35328                           
 35329                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35330  005FCE  C0EC  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35331  005FD2  C0ED  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35332                           
 35333                           ; BSR set to: 0
 35334                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35335  005FD6  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35336  005FD8  0800               	sublw	0
 35337  005FDA  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 35338  005FDC  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35339  005FDE  A0D8               	btfss	status,0,c
 35340  005FE0  2AE8               	incf	wreg,f,c
 35341  005FE2  0800               	sublw	0
 35342  005FE4  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 35343                           
 35344                           ; BSR set to: 0
 35345                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35346  005FE6  C0EC  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35347  005FEA  C0ED  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35348  005FEE  ECBF  F036         	call	_TMR_SwapTimer	;wreg free
 35349  005FF2  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35350  005FF6  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35351                           
 35352                           ; BSR set to: 0
 35353                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35354  005FFA  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35355  005FFC  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35356  005FFE  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35357  006000  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35358  006002  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35359  006004  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35360  006006  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35361  006008  263A               	addwf	_ticksAdded,f,c	;volatile
 35362  00600A  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35363  00600C  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 35364  00600E  0E00               	movlw	0
 35365  006010  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 35366  006012  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 35367                           
 35368                           ; BSR set to: 0
 35369  006014  0C00               	retlw	0	;funcret
 35370  006016                     __end_of_TMR_OverrideRemaining:
 35371                           	opt stack 0
 35372                           tosu	equ	0xFFF
 35373                           tosh	equ	0xFFE
 35374                           tosl	equ	0xFFD
 35375                           pclath	equ	0xFFA
 35376                           tblptru	equ	0xFF8
 35377                           tblptrh	equ	0xFF7
 35378                           tblptrl	equ	0xFF6
 35379                           tablat	equ	0xFF5
 35380                           prodh	equ	0xFF4
 35381                           prodl	equ	0xFF3
 35382                           intcon	equ	0xFF2
 35383                           intcon2	equ	0xFF1
 35384                           intcon3	equ	0xFF0
 35385                           indf0	equ	0xFEF
 35386                           postinc0	equ	0xFEE
 35387                           plusw0	equ	0xFEB
 35388                           fsr0h	equ	0xFEA
 35389                           fsr0l	equ	0xFE9
 35390                           wreg	equ	0xFE8
 35391                           postinc1	equ	0xFE6
 35392                           postdec1	equ	0xFE5
 35393                           plusw1	equ	0xFE3
 35394                           fsr1h	equ	0xFE2
 35395                           fsr1l	equ	0xFE1
 35396                           indf2	equ	0xFDF
 35397                           postinc2	equ	0xFDE
 35398                           postdec2	equ	0xFDD
 35399                           plusw2	equ	0xFDB
 35400                           fsr2h	equ	0xFDA
 35401                           fsr2l	equ	0xFD9
 35402                           status	equ	0xFD8
 35403                           
 35404 ;; *************** function _TMR_SwapTimer *****************
 35405 ;; Defined at:
 35406 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35407 ;; Parameters:    Size  Location     Type
 35408 ;;  timerVal        2   12[BANK0 ] unsigned int 
 35409 ;; Auto vars:     Size  Location     Type
 35410 ;;		None
 35411 ;; Return value:  Size  Location     Type
 35412 ;;                  2   12[BANK0 ] unsigned int 
 35413 ;; Registers used:
 35414 ;;		wreg, status,2, status,0, cstack
 35415 ;; Tracked objects:
 35416 ;;		On entry : F/0
 35417 ;;		On exit  : F/0
 35418 ;;		Unchanged: 0/0
 35419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35424 ;;Total ram usage:        2 bytes
 35425 ;; Hardware stack levels used:    1
 35426 ;; Hardware stack levels required when called:    8
 35427 ;; This function calls:
 35428 ;;		_TMR1_ReadTimer
 35429 ;;		_TMR1_WriteTimer
 35430 ;; This function is called by:
 35431 ;;		_TMR_OverrideRemaining
 35432 ;; This function uses a non-reentrant model
 35433 ;;
 35434                           
 35435                           	psect	text188
 35436  006D7E                     __ptext188:
 35437                           	opt stack 0
 35438  006D7E                     _TMR_SwapTimer:
 35439                           	opt stack 17
 35440                           
 35441                           ; BSR set to: 0
 35442                           ;sw_timer.c: 114: static uint16_t oldVal;
 35443                           ;sw_timer.c: 115: static uint16_t retVal;
 35444                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35445                           
 35446                           ; BSR set to: 0
 35447                           ;incstack = 0
 35448  006D7E  EC39  F03A         	call	_TMR1_ReadTimer	;wreg free
 35449  006D82  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35450  006D86  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35451  006D8A                     l11915:
 35452                           
 35453                           ; BSR set to: 0
 35454  006D8A  EC39  F03A         	call	_TMR1_ReadTimer	;wreg free
 35455  006D8E  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35456  006D90  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35457  006D92  E103               	bnz	u12520
 35458  006D94  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35459  006D96  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35460  006D98  E0F8               	bz	l11915
 35461  006D9A                     u12520:
 35462                           
 35463                           ; BSR set to: 0
 35464                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35465  006D9A  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35466  006D9E  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35467  006DA2  EC65  F03A         	call	_TMR1_WriteTimer	;wreg free
 35468                           
 35469                           ; BSR set to: 0
 35470                           ;sw_timer.c: 128: oldVal++;
 35471  006DA6  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35472  006DA8  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35473                           
 35474                           ; BSR set to: 0
 35475                           ;sw_timer.c: 130: retVal = oldVal;
 35476  006DAA  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35477  006DAE  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35478                           
 35479                           ; BSR set to: 0
 35480                           ;sw_timer.c: 132: return retVal;
 35481  006DB2  C042  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35482  006DB6  C043  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35483                           
 35484                           ; BSR set to: 0
 35485  006DBA  0012               	return		;funcret
 35486  006DBC                     __end_of_TMR_SwapTimer:
 35487                           	opt stack 0
 35488                           tosu	equ	0xFFF
 35489                           tosh	equ	0xFFE
 35490                           tosl	equ	0xFFD
 35491                           pclath	equ	0xFFA
 35492                           tblptru	equ	0xFF8
 35493                           tblptrh	equ	0xFF7
 35494                           tblptrl	equ	0xFF6
 35495                           tablat	equ	0xFF5
 35496                           prodh	equ	0xFF4
 35497                           prodl	equ	0xFF3
 35498                           intcon	equ	0xFF2
 35499                           intcon2	equ	0xFF1
 35500                           intcon3	equ	0xFF0
 35501                           indf0	equ	0xFEF
 35502                           postinc0	equ	0xFEE
 35503                           plusw0	equ	0xFEB
 35504                           fsr0h	equ	0xFEA
 35505                           fsr0l	equ	0xFE9
 35506                           wreg	equ	0xFE8
 35507                           postinc1	equ	0xFE6
 35508                           postdec1	equ	0xFE5
 35509                           plusw1	equ	0xFE3
 35510                           fsr1h	equ	0xFE2
 35511                           fsr1l	equ	0xFE1
 35512                           indf2	equ	0xFDF
 35513                           postinc2	equ	0xFDE
 35514                           postdec2	equ	0xFDD
 35515                           plusw2	equ	0xFDB
 35516                           fsr2h	equ	0xFDA
 35517                           fsr2l	equ	0xFD9
 35518                           status	equ	0xFD8
 35519                           
 35520 ;; *************** function _TMR1_WriteTimer *****************
 35521 ;; Defined at:
 35522 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 35523 ;; Parameters:    Size  Location     Type
 35524 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35525 ;; Auto vars:     Size  Location     Type
 35526 ;;		None
 35527 ;; Return value:  Size  Location     Type
 35528 ;;                  1    wreg      void 
 35529 ;; Registers used:
 35530 ;;		None
 35531 ;; Tracked objects:
 35532 ;;		On entry : F/0
 35533 ;;		On exit  : F/0
 35534 ;;		Unchanged: F/0
 35535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35539 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35540 ;;Total ram usage:        2 bytes
 35541 ;; Hardware stack levels used:    1
 35542 ;; Hardware stack levels required when called:    7
 35543 ;; This function calls:
 35544 ;;		Nothing
 35545 ;; This function is called by:
 35546 ;;		_TMR_SwapTimer
 35547 ;; This function uses a non-reentrant model
 35548 ;;
 35549                           
 35550                           	psect	text189
 35551  0074CA                     __ptext189:
 35552                           	opt stack 0
 35553  0074CA                     _TMR1_WriteTimer:
 35554                           	opt stack 17
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 35558                           
 35559                           ; BSR set to: 0
 35560                           ;incstack = 0
 35561  0074CA  A4CD               	btfss	4045,2,c	;volatile
 35562  0074CC  D007               	goto	l1347
 35563                           
 35564                           ; BSR set to: 0
 35565                           ;tmr1.c: 123: {
 35566                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 35567  0074CE  90CD               	bcf	4045,0,c	;volatile
 35568                           
 35569                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 35570  0074D0  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35571                           
 35572                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 35573  0074D4  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35574                           
 35575                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 35576  0074D8  80CD               	bsf	4045,0,c	;volatile
 35577                           
 35578                           ;tmr1.c: 133: }
 35579  0074DA  0012               	return	
 35580  0074DC                     l1347:
 35581                           
 35582                           ; BSR set to: 0
 35583                           ;tmr1.c: 134: else
 35584                           ;tmr1.c: 135: {
 35585                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 35586  0074DC  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35587                           
 35588                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 35589  0074E0  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35590                           
 35591                           ; BSR set to: 0
 35592  0074E4  0012               	return		;funcret
 35593  0074E6                     __end_of_TMR1_WriteTimer:
 35594                           	opt stack 0
 35595                           tosu	equ	0xFFF
 35596                           tosh	equ	0xFFE
 35597                           tosl	equ	0xFFD
 35598                           pclath	equ	0xFFA
 35599                           tblptru	equ	0xFF8
 35600                           tblptrh	equ	0xFF7
 35601                           tblptrl	equ	0xFF6
 35602                           tablat	equ	0xFF5
 35603                           prodh	equ	0xFF4
 35604                           prodl	equ	0xFF3
 35605                           intcon	equ	0xFF2
 35606                           intcon2	equ	0xFF1
 35607                           intcon3	equ	0xFF0
 35608                           indf0	equ	0xFEF
 35609                           postinc0	equ	0xFEE
 35610                           plusw0	equ	0xFEB
 35611                           fsr0h	equ	0xFEA
 35612                           fsr0l	equ	0xFE9
 35613                           wreg	equ	0xFE8
 35614                           postinc1	equ	0xFE6
 35615                           postdec1	equ	0xFE5
 35616                           plusw1	equ	0xFE3
 35617                           fsr1h	equ	0xFE2
 35618                           fsr1l	equ	0xFE1
 35619                           indf2	equ	0xFDF
 35620                           postinc2	equ	0xFDE
 35621                           postdec2	equ	0xFDD
 35622                           plusw2	equ	0xFDB
 35623                           fsr2h	equ	0xFDA
 35624                           fsr2l	equ	0xFD9
 35625                           status	equ	0xFD8
 35626                           
 35627 ;; *************** function _SwTimersInterrupt *****************
 35628 ;; Defined at:
 35629 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35630 ;; Parameters:    Size  Location     Type
 35631 ;;		None
 35632 ;; Auto vars:     Size  Location     Type
 35633 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 35634 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 35635 ;;  i               1   44[BANK0 ] unsigned char 
 35636 ;; Return value:  Size  Location     Type
 35637 ;;                  4   28[BANK0 ] unsigned long 
 35638 ;; Registers used:
 35639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35640 ;; Tracked objects:
 35641 ;;		On entry : 0/0
 35642 ;;		On exit  : F/0
 35643 ;;		Unchanged: 0/0
 35644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35646 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35648 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35649 ;;Total ram usage:       17 bytes
 35650 ;; Hardware stack levels used:    1
 35651 ;; Hardware stack levels required when called:    9
 35652 ;; This function calls:
 35653 ;;		_TMR_GetDeltaTime
 35654 ;; This function is called by:
 35655 ;;		_SwTimerReadValue
 35656 ;;		_SwTimerStart
 35657 ;; This function uses a non-reentrant model
 35658 ;;
 35659                           
 35660                           	psect	text190
 35661  004B4E                     __ptext190:
 35662                           	opt stack 0
 35663  004B4E                     _SwTimersInterrupt:
 35664                           	opt stack 17
 35665                           
 35666                           ;sw_timer.c: 289: uint8_t i;
 35667                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35668                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35669                           
 35670                           ; BSR set to: 0
 35671                           ;incstack = 0
 35672  004B4E  0100               	movlb	0	; () banked
 35673  004B50  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35674  004B52  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35675  004B54  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35676  004B56  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35677                           
 35678                           ; BSR set to: 0
 35679                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35680  004B58  EC95  F026         	call	_TMR_GetDeltaTime	;wreg free
 35681  004B5C  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35682  004B60  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35683  004B64  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35684  004B68  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35685                           
 35686                           ; BSR set to: 0
 35687                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35688  004B6C  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 35689  004B6E  D05A               	goto	l12149
 35690  004B70                     l12137:
 35691                           
 35692                           ; BSR set to: 0
 35693                           ;sw_timer.c: 298: {
 35694                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35695  004B70  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35696  004B72  0D08               	mullw	8
 35697  004B74  0E04               	movlw	low (_swTimers+4)
 35698  004B76  24F3               	addwf	prodl,w,c
 35699  004B78  6ED9               	movwf	fsr2l,c
 35700  004B7A  0E03               	movlw	high (_swTimers+4)
 35701  004B7C  20F4               	addwfc	prodh,w,c
 35702  004B7E  6EDA               	movwf	fsr2h,c
 35703  004B80  04DE               	decf	postinc2,w,c
 35704  004B82  E14F               	bnz	l12147
 35705                           
 35706                           ; BSR set to: 0
 35707                           ;sw_timer.c: 302: {
 35708                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35709  004B84  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35710  004B86  0D08               	mullw	8
 35711  004B88  0E00               	movlw	low _swTimers
 35712  004B8A  24F3               	addwf	prodl,w,c
 35713  004B8C  6ED9               	movwf	fsr2l,c
 35714  004B8E  0E03               	movlw	high _swTimers
 35715  004B90  20F4               	addwfc	prodh,w,c
 35716  004B92  6EDA               	movwf	fsr2h,c
 35717  004B94  50DE               	movf	postinc2,w,c
 35718  004B96  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35719  004B98  50DE               	movf	postinc2,w,c
 35720  004B9A  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35721  004B9C  50DE               	movf	postinc2,w,c
 35722  004B9E  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35723  004BA0  50DE               	movf	postinc2,w,c
 35724  004BA2  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35725  004BA4  E30D               	bnc	l12143
 35726                           
 35727                           ; BSR set to: 0
 35728                           ;sw_timer.c: 304: {
 35729                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35730  004BA6  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35731  004BA8  0D08               	mullw	8
 35732  004BAA  0E00               	movlw	low _swTimers
 35733  004BAC  24F3               	addwf	prodl,w,c
 35734  004BAE  6ED9               	movwf	fsr2l,c
 35735  004BB0  0E03               	movlw	high _swTimers
 35736  004BB2  20F4               	addwfc	prodh,w,c
 35737  004BB4  6EDA               	movwf	fsr2h,c
 35738  004BB6  6ADE               	clrf	postinc2,c
 35739  004BB8  6ADE               	clrf	postinc2,c
 35740  004BBA  6ADE               	clrf	postinc2,c
 35741  004BBC  6ADD               	clrf	postdec2,c
 35742                           
 35743                           ;sw_timer.c: 306: }
 35744  004BBE  D031               	goto	l12147
 35745  004BC0                     l12143:
 35746                           
 35747                           ; BSR set to: 0
 35748                           ;sw_timer.c: 307: else
 35749                           ;sw_timer.c: 308: {
 35750                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35751  004BC0  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35752  004BC2  0D08               	mullw	8
 35753  004BC4  0E00               	movlw	low _swTimers
 35754  004BC6  24F3               	addwf	prodl,w,c
 35755  004BC8  6ED9               	movwf	fsr2l,c
 35756  004BCA  0E03               	movlw	high _swTimers
 35757  004BCC  20F4               	addwfc	prodh,w,c
 35758  004BCE  6EDA               	movwf	fsr2h,c
 35759  004BD0  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35760  004BD2  5EDE               	subwf	postinc2,f,c
 35761  004BD4  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35762  004BD6  5ADE               	subwfb	postinc2,f,c
 35763  004BD8  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35764  004BDA  5ADE               	subwfb	postinc2,f,c
 35765  004BDC  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35766  004BDE  5ADE               	subwfb	postinc2,f,c
 35767                           
 35768                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35769  004BE0  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35770  004BE2  0D08               	mullw	8
 35771  004BE4  0E00               	movlw	low _swTimers
 35772  004BE6  24F3               	addwf	prodl,w,c
 35773  004BE8  6ED9               	movwf	fsr2l,c
 35774  004BEA  0E03               	movlw	high _swTimers
 35775  004BEC  20F4               	addwfc	prodh,w,c
 35776  004BEE  6EDA               	movwf	fsr2h,c
 35777  004BF0  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35778  004BF2  5CDE               	subwf	postinc2,w,c
 35779  004BF4  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35780  004BF6  58DE               	subwfb	postinc2,w,c
 35781  004BF8  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35782  004BFA  58DE               	subwfb	postinc2,w,c
 35783  004BFC  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35784  004BFE  58DE               	subwfb	postinc2,w,c
 35785  004C00  E210               	bc	l12147
 35786                           
 35787                           ; BSR set to: 0
 35788                           ;sw_timer.c: 313: {
 35789                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35790  004C02  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35791  004C04  0D08               	mullw	8
 35792  004C06  0E00               	movlw	low _swTimers
 35793  004C08  24F3               	addwf	prodl,w,c
 35794  004C0A  6ED9               	movwf	fsr2l,c
 35795  004C0C  0E03               	movlw	high _swTimers
 35796  004C0E  20F4               	addwfc	prodh,w,c
 35797  004C10  6EDA               	movwf	fsr2h,c
 35798  004C12  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 35799  004C16  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 35800  004C1A  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 35801  004C1E  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 35802  004C22                     l12147:
 35803                           
 35804                           ; BSR set to: 0
 35805  004C22  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 35806  004C24                     l12149:
 35807                           
 35808                           ; BSR set to: 0
 35809  004C24  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 35810  004C26  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 35811  004C28  E3A3               	bnc	l12137
 35812                           
 35813                           ; BSR set to: 0
 35814                           ;sw_timer.c: 315: }
 35815                           ;sw_timer.c: 316: }
 35816                           ;sw_timer.c: 317: }
 35817                           ;sw_timer.c: 318: }
 35818                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 35819  004C2A  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 35820  004C2E  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 35821  004C32  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 35822  004C36  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 35823                           
 35824                           ; BSR set to: 0
 35825  004C3A  0012               	return		;funcret
 35826  004C3C                     __end_of_SwTimersInterrupt:
 35827                           	opt stack 0
 35828                           tosu	equ	0xFFF
 35829                           tosh	equ	0xFFE
 35830                           tosl	equ	0xFFD
 35831                           pclath	equ	0xFFA
 35832                           tblptru	equ	0xFF8
 35833                           tblptrh	equ	0xFF7
 35834                           tblptrl	equ	0xFF6
 35835                           tablat	equ	0xFF5
 35836                           prodh	equ	0xFF4
 35837                           prodl	equ	0xFF3
 35838                           intcon	equ	0xFF2
 35839                           intcon2	equ	0xFF1
 35840                           intcon3	equ	0xFF0
 35841                           indf0	equ	0xFEF
 35842                           postinc0	equ	0xFEE
 35843                           plusw0	equ	0xFEB
 35844                           fsr0h	equ	0xFEA
 35845                           fsr0l	equ	0xFE9
 35846                           wreg	equ	0xFE8
 35847                           postinc1	equ	0xFE6
 35848                           postdec1	equ	0xFE5
 35849                           plusw1	equ	0xFE3
 35850                           fsr1h	equ	0xFE2
 35851                           fsr1l	equ	0xFE1
 35852                           indf2	equ	0xFDF
 35853                           postinc2	equ	0xFDE
 35854                           postdec2	equ	0xFDD
 35855                           plusw2	equ	0xFDB
 35856                           fsr2h	equ	0xFDA
 35857                           fsr2l	equ	0xFD9
 35858                           status	equ	0xFD8
 35859                           
 35860 ;; *************** function _TMR_GetDeltaTime *****************
 35861 ;; Defined at:
 35862 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35863 ;; Parameters:    Size  Location     Type
 35864 ;;		None
 35865 ;; Auto vars:     Size  Location     Type
 35866 ;;		None
 35867 ;; Return value:  Size  Location     Type
 35868 ;;                  4   12[BANK0 ] unsigned long 
 35869 ;; Registers used:
 35870 ;;		wreg, status,2, status,0, cstack
 35871 ;; Tracked objects:
 35872 ;;		On entry : F/0
 35873 ;;		On exit  : F/0
 35874 ;;		Unchanged: 0/0
 35875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35878 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35879 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35880 ;;Total ram usage:       16 bytes
 35881 ;; Hardware stack levels used:    1
 35882 ;; Hardware stack levels required when called:    8
 35883 ;; This function calls:
 35884 ;;		_TMR1_ReadTimer
 35885 ;; This function is called by:
 35886 ;;		_SwTimersInterrupt
 35887 ;; This function uses a non-reentrant model
 35888 ;;
 35889                           
 35890                           	psect	text191
 35891  004D2A                     __ptext191:
 35892                           	opt stack 0
 35893  004D2A                     _TMR_GetDeltaTime:
 35894                           	opt stack 17
 35895                           
 35896                           ; BSR set to: 0
 35897                           ;sw_timer.c: 90: static uint32_t retVal;
 35898                           ;sw_timer.c: 91: static uint16_t tmrVal;
 35899                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 35900                           
 35901                           ; BSR set to: 0
 35902                           ;incstack = 0
 35903  004D2A  EC39  F03A         	call	_TMR1_ReadTimer	;wreg free
 35904  004D2E  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 35905  004D32  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 35906                           
 35907                           ; BSR set to: 0
 35908                           ;sw_timer.c: 95: if (timerOverflow == 1)
 35909  004D36  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 35910  004D38  E13D               	bnz	l11941
 35911                           
 35912                           ; BSR set to: 0
 35913                           ;sw_timer.c: 96: {
 35914                           ;sw_timer.c: 97: timerOverflow = 0;
 35915  004D3A  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 35916                           
 35917                           ; BSR set to: 0
 35918                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 35919  004D3C  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 35920  004D3E  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 35921  004D40  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 35922  004D42  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 35923  004D44  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 35924  004D46  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 35925  004D48  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 35926  004D4A  A0D8               	btfss	status,0,c
 35927  004D4C  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 35928  004D4E  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35929  004D50  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 35930  004D52  5036               	movf	_ticksAccounted,w,c	;volatile
 35931  004D54  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 35932  004D56  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 35933  004D58  5037               	movf	_ticksAccounted+1,w,c	;volatile
 35934  004D5A  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 35935  004D5C  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 35936  004D5E  5038               	movf	_ticksAccounted+2,w,c	;volatile
 35937  004D60  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35938  004D62  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 35939  004D64  5039               	movf	_ticksAccounted+3,w,c	;volatile
 35940  004D66  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 35941  004D68  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 35942  004D6A  503A               	movf	_ticksAdded,w,c	;volatile
 35943  004D6C  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 35944  004D6E  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 35945  004D70  503B               	movf	_ticksAdded+1,w,c	;volatile
 35946  004D72  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 35947  004D74  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 35948  004D76  503C               	movf	_ticksAdded+2,w,c	;volatile
 35949  004D78  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 35950  004D7A  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 35951  004D7C  503D               	movf	_ticksAdded+3,w,c	;volatile
 35952  004D7E  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 35953  004D80  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 35954  004D82  0E00               	movlw	0
 35955  004D84  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 35956  004D86  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 35957  004D88  0E00               	movlw	0
 35958  004D8A  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 35959  004D8C  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 35960  004D8E  0E01               	movlw	1
 35961  004D90  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 35962  004D92  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 35963  004D94  0E00               	movlw	0
 35964  004D96  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 35965  004D98  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 35966                           
 35967                           ; BSR set to: 0
 35968                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 35969  004D9A  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 35970  004D9E  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 35971  004DA2  6A38               	clrf	_ticksAccounted+2,c	;volatile
 35972  004DA4  6A39               	clrf	_ticksAccounted+3,c	;volatile
 35973                           
 35974                           ; BSR set to: 0
 35975                           ;sw_timer.c: 100: ticksAdded = 0;
 35976  004DA6  6A3A               	clrf	_ticksAdded,c	;volatile
 35977  004DA8  6A3B               	clrf	_ticksAdded+1,c	;volatile
 35978  004DAA  6A3C               	clrf	_ticksAdded+2,c	;volatile
 35979  004DAC  6A3D               	clrf	_ticksAdded+3,c	;volatile
 35980                           
 35981                           ; BSR set to: 0
 35982                           ;sw_timer.c: 101: reloadVal = 0;
 35983  004DAE  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 35984  004DB0  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 35985                           
 35986                           ;sw_timer.c: 102: }
 35987  004DB2  D028               	goto	l11943
 35988  004DB4                     l11941:
 35989                           
 35990                           ; BSR set to: 0
 35991                           ;sw_timer.c: 103: else
 35992                           ;sw_timer.c: 104: {
 35993                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 35994  004DB4  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 35995  004DB6  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 35996  004DB8  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 35997  004DBA  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 35998  004DBC  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 35999  004DBE  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36000  004DC0  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36001  004DC2  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36002  004DC4  5036               	movf	_ticksAccounted,w,c	;volatile
 36003  004DC6  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36004  004DC8  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36005  004DCA  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36006  004DCC  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36007  004DCE  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36008  004DD0  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36009  004DD2  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36010  004DD4  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36011  004DD6  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36012  004DD8  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36013  004DDA  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36014  004DDC  503A               	movf	_ticksAdded,w,c	;volatile
 36015  004DDE  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36016  004DE0  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36017  004DE2  503B               	movf	_ticksAdded+1,w,c	;volatile
 36018  004DE4  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36019  004DE6  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36020  004DE8  503C               	movf	_ticksAdded+2,w,c	;volatile
 36021  004DEA  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36022  004DEC  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36023  004DEE  503D               	movf	_ticksAdded+3,w,c	;volatile
 36024  004DF0  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36025  004DF2  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36026                           
 36027                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36028  004DF4  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 36029  004DF6  2636               	addwf	_ticksAccounted,f,c	;volatile
 36030  004DF8  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 36031  004DFA  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 36032  004DFC  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 36033  004DFE  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 36034  004E00  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 36035  004E02  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 36036  004E04                     l11943:
 36037                           
 36038                           ; BSR set to: 0
 36039                           ;sw_timer.c: 107: }
 36040                           ;sw_timer.c: 109: return retVal;
 36041  004E04  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36042  004E08  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36043  004E0C  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36044  004E10  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36045                           
 36046                           ; BSR set to: 0
 36047  004E14  0012               	return		;funcret
 36048  004E16                     __end_of_TMR_GetDeltaTime:
 36049                           	opt stack 0
 36050                           tosu	equ	0xFFF
 36051                           tosh	equ	0xFFE
 36052                           tosl	equ	0xFFD
 36053                           pclath	equ	0xFFA
 36054                           tblptru	equ	0xFF8
 36055                           tblptrh	equ	0xFF7
 36056                           tblptrl	equ	0xFF6
 36057                           tablat	equ	0xFF5
 36058                           prodh	equ	0xFF4
 36059                           prodl	equ	0xFF3
 36060                           intcon	equ	0xFF2
 36061                           intcon2	equ	0xFF1
 36062                           intcon3	equ	0xFF0
 36063                           indf0	equ	0xFEF
 36064                           postinc0	equ	0xFEE
 36065                           plusw0	equ	0xFEB
 36066                           fsr0h	equ	0xFEA
 36067                           fsr0l	equ	0xFE9
 36068                           wreg	equ	0xFE8
 36069                           postinc1	equ	0xFE6
 36070                           postdec1	equ	0xFE5
 36071                           plusw1	equ	0xFE3
 36072                           fsr1h	equ	0xFE2
 36073                           fsr1l	equ	0xFE1
 36074                           indf2	equ	0xFDF
 36075                           postinc2	equ	0xFDE
 36076                           postdec2	equ	0xFDD
 36077                           plusw2	equ	0xFDB
 36078                           fsr2h	equ	0xFDA
 36079                           fsr2l	equ	0xFD9
 36080                           status	equ	0xFD8
 36081                           
 36082 ;; *************** function _TMR1_ReadTimer *****************
 36083 ;; Defined at:
 36084 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 36085 ;; Parameters:    Size  Location     Type
 36086 ;;		None
 36087 ;; Auto vars:     Size  Location     Type
 36088 ;;  readVal         2    8[BANK0 ] unsigned int 
 36089 ;;  readValLow      1   11[BANK0 ] unsigned char 
 36090 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 36091 ;; Return value:  Size  Location     Type
 36092 ;;                  2    4[BANK0 ] unsigned int 
 36093 ;; Registers used:
 36094 ;;		wreg, status,2
 36095 ;; Tracked objects:
 36096 ;;		On entry : F/0
 36097 ;;		On exit  : F/0
 36098 ;;		Unchanged: 0/0
 36099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36101 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36102 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36103 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36104 ;;Total ram usage:        8 bytes
 36105 ;; Hardware stack levels used:    1
 36106 ;; Hardware stack levels required when called:    7
 36107 ;; This function calls:
 36108 ;;		Nothing
 36109 ;; This function is called by:
 36110 ;;		_TMR_GetDeltaTime
 36111 ;;		_TMR_SwapTimer
 36112 ;; This function uses a non-reentrant model
 36113 ;;
 36114                           
 36115                           	psect	text192
 36116  007472                     __ptext192:
 36117                           	opt stack 0
 36118  007472                     _TMR1_ReadTimer:
 36119                           	opt stack 17
 36120                           
 36121                           ; BSR set to: 0
 36122                           ;tmr1.c: 108: uint16_t readVal;
 36123                           ;tmr1.c: 109: uint8_t readValHigh;
 36124                           ;tmr1.c: 110: uint8_t readValLow;
 36125                           ;tmr1.c: 112: readValLow = TMR1L;
 36126                           
 36127                           ; BSR set to: 0
 36128                           ;incstack = 0
 36129  007472  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36130                           
 36131                           ;tmr1.c: 113: readValHigh = TMR1H;
 36132  007476  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36133                           
 36134                           ; BSR set to: 0
 36135                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36136  00747A  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36137  00747C  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 36138  00747E  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36139  007480  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36140  007482  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36141                           
 36142                           ; BSR set to: 0
 36143                           ;tmr1.c: 117: return readVal;
 36144  007486  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36145  00748A  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36146                           
 36147                           ; BSR set to: 0
 36148  00748E  0012               	return		;funcret
 36149  007490                     __end_of_TMR1_ReadTimer:
 36150                           	opt stack 0
 36151                           tosu	equ	0xFFF
 36152                           tosh	equ	0xFFE
 36153                           tosl	equ	0xFFD
 36154                           pclath	equ	0xFFA
 36155                           tblptru	equ	0xFF8
 36156                           tblptrh	equ	0xFF7
 36157                           tblptrl	equ	0xFF6
 36158                           tablat	equ	0xFF5
 36159                           prodh	equ	0xFF4
 36160                           prodl	equ	0xFF3
 36161                           intcon	equ	0xFF2
 36162                           intcon2	equ	0xFF1
 36163                           intcon3	equ	0xFF0
 36164                           indf0	equ	0xFEF
 36165                           postinc0	equ	0xFEE
 36166                           plusw0	equ	0xFEB
 36167                           fsr0h	equ	0xFEA
 36168                           fsr0l	equ	0xFE9
 36169                           wreg	equ	0xFE8
 36170                           postinc1	equ	0xFE6
 36171                           postdec1	equ	0xFE5
 36172                           plusw1	equ	0xFE3
 36173                           fsr1h	equ	0xFE2
 36174                           fsr1l	equ	0xFE1
 36175                           indf2	equ	0xFDF
 36176                           postinc2	equ	0xFDE
 36177                           postdec2	equ	0xFDD
 36178                           plusw2	equ	0xFDB
 36179                           fsr2h	equ	0xFDA
 36180                           fsr2l	equ	0xFD9
 36181                           status	equ	0xFD8
 36182                           
 36183 ;; *************** function _SwTimerSetTimeout *****************
 36184 ;; Defined at:
 36185 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36186 ;; Parameters:    Size  Location     Type
 36187 ;;  timerId         1    wreg     unsigned char 
 36188 ;;  timeout         4   17[BANK0 ] unsigned long 
 36189 ;; Auto vars:     Size  Location     Type
 36190 ;;  timerId         1   25[BANK0 ] unsigned char 
 36191 ;; Return value:  Size  Location     Type
 36192 ;;                  1    wreg      void 
 36193 ;; Registers used:
 36194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36195 ;; Tracked objects:
 36196 ;;		On entry : C/2
 36197 ;;		On exit  : F/0
 36198 ;;		Unchanged: 0/0
 36199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36200 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36202 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36203 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36204 ;;Total ram usage:        9 bytes
 36205 ;; Hardware stack levels used:    1
 36206 ;; Hardware stack levels required when called:    7
 36207 ;; This function calls:
 36208 ;;		Nothing
 36209 ;; This function is called by:
 36210 ;;		_RADIO_Transmit
 36211 ;;		_RADIO_ReceiveStart
 36212 ;;		_LORAWAN_TxDone
 36213 ;;		_LORAWAN_RxTimeout
 36214 ;;		_StartReTxTimer
 36215 ;;		_DutyCycleCallback
 36216 ;;		_LORAWAN_Join
 36217 ;;		_LORAWAN_LinkCheckConfigure
 36218 ;;		_LORAWAN_LinkCheckCallback
 36219 ;;		_UpdateRetransmissionAckTimeoutState
 36220 ;;		_UpdateJoinSuccessState
 36221 ;; This function uses a non-reentrant model
 36222 ;;
 36223                           
 36224                           	psect	text193
 36225  006CC0                     __ptext193:
 36226                           	opt stack 0
 36227  006CC0                     _SwTimerSetTimeout:
 36228                           	opt stack 20
 36229                           
 36230                           ; BSR set to: 0
 36231                           ;incstack = 0
 36232                           ;SwTimerSetTimeout@timerId stored from wreg
 36233  006CC0  0100               	movlb	0	; () banked
 36234  006CC2  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 36235                           
 36236                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 36237  006CC4  9EF2               	bcf	intcon,7,c	;volatile
 36238                           
 36239                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 36240  006CC6  0EE0               	movlw	224
 36241  006CC8  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 36242  006CCA  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 36243  006CCC  0EFF               	movlw	255
 36244  006CCE  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 36245  006CD0  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 36246  006CD2  0EFF               	movlw	255
 36247  006CD4  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 36248  006CD6  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 36249  006CD8  0EFF               	movlw	255
 36250  006CDA  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 36251  006CDC  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 36252  006CDE  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 36253  006CE0  0D08               	mullw	8
 36254  006CE2  0E00               	movlw	low _swTimers
 36255  006CE4  24F3               	addwf	prodl,w,c
 36256  006CE6  6ED9               	movwf	fsr2l,c
 36257  006CE8  0E03               	movlw	high _swTimers
 36258  006CEA  20F4               	addwfc	prodh,w,c
 36259  006CEC  6EDA               	movwf	fsr2h,c
 36260  006CEE  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 36261  006CF2  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36262  006CF6  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36263  006CFA  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36264                           
 36265                           ; BSR set to: 0
 36266                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36267  006CFE  8EF2               	bsf	intcon,7,c	;volatile
 36268                           
 36269                           ; BSR set to: 0
 36270  006D00  0012               	return		;funcret
 36271  006D02                     __end_of_SwTimerSetTimeout:
 36272                           	opt stack 0
 36273                           tosu	equ	0xFFF
 36274                           tosh	equ	0xFFE
 36275                           tosl	equ	0xFFD
 36276                           pclath	equ	0xFFA
 36277                           tblptru	equ	0xFF8
 36278                           tblptrh	equ	0xFF7
 36279                           tblptrl	equ	0xFF6
 36280                           tablat	equ	0xFF5
 36281                           prodh	equ	0xFF4
 36282                           prodl	equ	0xFF3
 36283                           intcon	equ	0xFF2
 36284                           intcon2	equ	0xFF1
 36285                           intcon3	equ	0xFF0
 36286                           indf0	equ	0xFEF
 36287                           postinc0	equ	0xFEE
 36288                           plusw0	equ	0xFEB
 36289                           fsr0h	equ	0xFEA
 36290                           fsr0l	equ	0xFE9
 36291                           wreg	equ	0xFE8
 36292                           postinc1	equ	0xFE6
 36293                           postdec1	equ	0xFE5
 36294                           plusw1	equ	0xFE3
 36295                           fsr1h	equ	0xFE2
 36296                           fsr1l	equ	0xFE1
 36297                           indf2	equ	0xFDF
 36298                           postinc2	equ	0xFDE
 36299                           postdec2	equ	0xFDD
 36300                           plusw2	equ	0xFDB
 36301                           fsr2h	equ	0xFDA
 36302                           fsr2l	equ	0xFD9
 36303                           status	equ	0xFD8
 36304                           
 36305 ;; *************** function _InitDefault868Channels *****************
 36306 ;; Defined at:
 36307 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36308 ;; Parameters:    Size  Location     Type
 36309 ;;		None
 36310 ;; Auto vars:     Size  Location     Type
 36311 ;;  i               1   14[BANK0 ] unsigned char 
 36312 ;; Return value:  Size  Location     Type
 36313 ;;                  1    wreg      void 
 36314 ;; Registers used:
 36315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36316 ;; Tracked objects:
 36317 ;;		On entry : F/1
 36318 ;;		On exit  : F/0
 36319 ;;		Unchanged: 0/0
 36320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36325 ;;Total ram usage:        1 bytes
 36326 ;; Hardware stack levels used:    1
 36327 ;; Hardware stack levels required when called:    8
 36328 ;; This function calls:
 36329 ;;		_memcpy
 36330 ;;		_memset
 36331 ;; This function is called by:
 36332 ;;		_LORAWAN_Reset
 36333 ;; This function uses a non-reentrant model
 36334 ;;
 36335                           
 36336                           	psect	text194
 36337  006374                     __ptext194:
 36338                           	opt stack 0
 36339  006374                     _InitDefault868Channels:
 36340                           	opt stack 20
 36341                           
 36342                           ; BSR set to: 1
 36343                           ;lorawan_eu.c: 981: uint8_t i;
 36344                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36345                           
 36346                           ; BSR set to: 0
 36347                           ;incstack = 0
 36348  006374  0E00               	movlw	low _Channels
 36349  006376  0100               	movlb	0	; () banked
 36350  006378  6F64               	movwf	memset@p1& (0+255),b
 36351  00637A  0E04               	movlw	high _Channels
 36352  00637C  6F65               	movwf	(memset@p1+1)& (0+255),b
 36353  00637E  6B67               	clrf	(memset@c+1)& (0+255),b
 36354  006380  6B66               	clrf	memset@c& (0+255),b
 36355  006382  6B69               	clrf	(memset@n+1)& (0+255),b
 36356  006384  0EE0               	movlw	224
 36357  006386  6F68               	movwf	memset@n& (0+255),b
 36358  006388  ECDC  F038         	call	_memset	;wreg free
 36359                           
 36360                           ; BSR set to: 0
 36361                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36362  00638C  0E00               	movlw	low _Channels
 36363  00638E  6F64               	movwf	memcpy@d1& (0+255),b
 36364  006390  0E04               	movlw	high _Channels
 36365  006392  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36366  006394  0ED2               	movlw	low _DefaultChannels868
 36367  006396  6F66               	movwf	memcpy@s1& (0+255),b
 36368  006398  0EFF               	movlw	high _DefaultChannels868
 36369  00639A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36370  00639C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36371  00639E  0E2A               	movlw	42
 36372  0063A0  6F68               	movwf	memcpy@n& (0+255),b
 36373  0063A2  ECFF  F033         	call	_memcpy	;wreg free
 36374                           
 36375                           ; BSR set to: 0
 36376                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36377  0063A6  0E03               	movlw	3
 36378  0063A8  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36379  0063AA                     l14935:
 36380                           
 36381                           ; BSR set to: 0
 36382                           ;lorawan_eu.c: 986: {
 36383                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36384  0063AA  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36385  0063AC  0D0E               	mullw	14
 36386  0063AE  0E06               	movlw	low (_Channels+6)
 36387  0063B0  24F3               	addwf	prodl,w,c
 36388  0063B2  6ED9               	movwf	fsr2l,c
 36389  0063B4  0E04               	movlw	high (_Channels+6)
 36390  0063B6  20F4               	addwfc	prodh,w,c
 36391  0063B8  6EDA               	movwf	fsr2h,c
 36392  0063BA  68DE               	setf	postinc2,c
 36393  0063BC  68DD               	setf	postdec2,c
 36394                           
 36395                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36396  0063BE  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36397  0063C0  0D0E               	mullw	14
 36398  0063C2  0E05               	movlw	low (_Channels+5)
 36399  0063C4  24F3               	addwf	prodl,w,c
 36400  0063C6  6ED9               	movwf	fsr2l,c
 36401  0063C8  0E04               	movlw	high (_Channels+5)
 36402  0063CA  20F4               	addwfc	prodh,w,c
 36403  0063CC  6EDA               	movwf	fsr2h,c
 36404  0063CE  68DF               	setf	indf2,c
 36405                           
 36406                           ; BSR set to: 0
 36407  0063D0  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36408                           
 36409                           ; BSR set to: 0
 36410  0063D2  0E0F               	movlw	15
 36411  0063D4  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36412  0063D6  D7E9               	goto	l14935
 36413  0063D8  0C0F               	retlw	15
 36414  0063DA                     __end_of_InitDefault868Channels:
 36415                           	opt stack 0
 36416                           tosu	equ	0xFFF
 36417                           tosh	equ	0xFFE
 36418                           tosl	equ	0xFFD
 36419                           pclath	equ	0xFFA
 36420                           tblptru	equ	0xFF8
 36421                           tblptrh	equ	0xFF7
 36422                           tblptrl	equ	0xFF6
 36423                           tablat	equ	0xFF5
 36424                           prodh	equ	0xFF4
 36425                           prodl	equ	0xFF3
 36426                           intcon	equ	0xFF2
 36427                           intcon2	equ	0xFF1
 36428                           intcon3	equ	0xFF0
 36429                           indf0	equ	0xFEF
 36430                           postinc0	equ	0xFEE
 36431                           plusw0	equ	0xFEB
 36432                           fsr0h	equ	0xFEA
 36433                           fsr0l	equ	0xFE9
 36434                           wreg	equ	0xFE8
 36435                           postinc1	equ	0xFE6
 36436                           postdec1	equ	0xFE5
 36437                           plusw1	equ	0xFE3
 36438                           fsr1h	equ	0xFE2
 36439                           fsr1l	equ	0xFE1
 36440                           indf2	equ	0xFDF
 36441                           postinc2	equ	0xFDE
 36442                           postdec2	equ	0xFDD
 36443                           plusw2	equ	0xFDB
 36444                           fsr2h	equ	0xFDA
 36445                           fsr2l	equ	0xFD9
 36446                           status	equ	0xFD8
 36447                           
 36448 ;; *************** function _InitDefault433Channels *****************
 36449 ;; Defined at:
 36450 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36451 ;; Parameters:    Size  Location     Type
 36452 ;;		None
 36453 ;; Auto vars:     Size  Location     Type
 36454 ;;  i               1   14[BANK0 ] unsigned char 
 36455 ;; Return value:  Size  Location     Type
 36456 ;;                  1    wreg      void 
 36457 ;; Registers used:
 36458 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36459 ;; Tracked objects:
 36460 ;;		On entry : F/1
 36461 ;;		On exit  : F/0
 36462 ;;		Unchanged: 0/0
 36463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36468 ;;Total ram usage:        1 bytes
 36469 ;; Hardware stack levels used:    1
 36470 ;; Hardware stack levels required when called:    8
 36471 ;; This function calls:
 36472 ;;		_memcpy
 36473 ;;		_memset
 36474 ;; This function is called by:
 36475 ;;		_LORAWAN_Reset
 36476 ;; This function uses a non-reentrant model
 36477 ;;
 36478                           
 36479                           	psect	text195
 36480  0063DA                     __ptext195:
 36481                           	opt stack 0
 36482  0063DA                     _InitDefault433Channels:
 36483                           	opt stack 20
 36484                           
 36485                           ; BSR set to: 1
 36486                           ;lorawan_eu.c: 996: uint8_t i;
 36487                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36488                           
 36489                           ; BSR set to: 0
 36490                           ;incstack = 0
 36491  0063DA  0E00               	movlw	low _Channels
 36492  0063DC  0100               	movlb	0	; () banked
 36493  0063DE  6F64               	movwf	memset@p1& (0+255),b
 36494  0063E0  0E04               	movlw	high _Channels
 36495  0063E2  6F65               	movwf	(memset@p1+1)& (0+255),b
 36496  0063E4  6B67               	clrf	(memset@c+1)& (0+255),b
 36497  0063E6  6B66               	clrf	memset@c& (0+255),b
 36498  0063E8  6B69               	clrf	(memset@n+1)& (0+255),b
 36499  0063EA  0EE0               	movlw	224
 36500  0063EC  6F68               	movwf	memset@n& (0+255),b
 36501  0063EE  ECDC  F038         	call	_memset	;wreg free
 36502                           
 36503                           ; BSR set to: 0
 36504                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36505  0063F2  0E00               	movlw	low _Channels
 36506  0063F4  6F64               	movwf	memcpy@d1& (0+255),b
 36507  0063F6  0E04               	movlw	high _Channels
 36508  0063F8  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36509  0063FA  0EA8               	movlw	low _DefaultChannels433
 36510  0063FC  6F66               	movwf	memcpy@s1& (0+255),b
 36511  0063FE  0EFF               	movlw	high _DefaultChannels433
 36512  006400  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36513  006402  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36514  006404  0E2A               	movlw	42
 36515  006406  6F68               	movwf	memcpy@n& (0+255),b
 36516  006408  ECFF  F033         	call	_memcpy	;wreg free
 36517                           
 36518                           ; BSR set to: 0
 36519                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36520  00640C  0E03               	movlw	3
 36521  00640E  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36522  006410                     l14951:
 36523                           
 36524                           ; BSR set to: 0
 36525                           ;lorawan_eu.c: 1001: {
 36526                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36527  006410  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36528  006412  0D0E               	mullw	14
 36529  006414  0E06               	movlw	low (_Channels+6)
 36530  006416  24F3               	addwf	prodl,w,c
 36531  006418  6ED9               	movwf	fsr2l,c
 36532  00641A  0E04               	movlw	high (_Channels+6)
 36533  00641C  20F4               	addwfc	prodh,w,c
 36534  00641E  6EDA               	movwf	fsr2h,c
 36535  006420  68DE               	setf	postinc2,c
 36536  006422  68DD               	setf	postdec2,c
 36537                           
 36538                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36539  006424  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36540  006426  0D0E               	mullw	14
 36541  006428  0E05               	movlw	low (_Channels+5)
 36542  00642A  24F3               	addwf	prodl,w,c
 36543  00642C  6ED9               	movwf	fsr2l,c
 36544  00642E  0E04               	movlw	high (_Channels+5)
 36545  006430  20F4               	addwfc	prodh,w,c
 36546  006432  6EDA               	movwf	fsr2h,c
 36547  006434  68DF               	setf	indf2,c
 36548                           
 36549                           ; BSR set to: 0
 36550  006436  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36551                           
 36552                           ; BSR set to: 0
 36553  006438  0E0F               	movlw	15
 36554  00643A  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36555  00643C  D7E9               	goto	l14951
 36556  00643E  0C0F               	retlw	15
 36557  006440                     __end_of_InitDefault433Channels:
 36558                           	opt stack 0
 36559                           tosu	equ	0xFFF
 36560                           tosh	equ	0xFFE
 36561                           tosl	equ	0xFFD
 36562                           pclath	equ	0xFFA
 36563                           tblptru	equ	0xFF8
 36564                           tblptrh	equ	0xFF7
 36565                           tblptrl	equ	0xFF6
 36566                           tablat	equ	0xFF5
 36567                           prodh	equ	0xFF4
 36568                           prodl	equ	0xFF3
 36569                           intcon	equ	0xFF2
 36570                           intcon2	equ	0xFF1
 36571                           intcon3	equ	0xFF0
 36572                           indf0	equ	0xFEF
 36573                           postinc0	equ	0xFEE
 36574                           plusw0	equ	0xFEB
 36575                           fsr0h	equ	0xFEA
 36576                           fsr0l	equ	0xFE9
 36577                           wreg	equ	0xFE8
 36578                           postinc1	equ	0xFE6
 36579                           postdec1	equ	0xFE5
 36580                           plusw1	equ	0xFE3
 36581                           fsr1h	equ	0xFE2
 36582                           fsr1l	equ	0xFE1
 36583                           indf2	equ	0xFDF
 36584                           postinc2	equ	0xFDE
 36585                           postdec2	equ	0xFDD
 36586                           plusw2	equ	0xFDB
 36587                           fsr2h	equ	0xFDA
 36588                           fsr2l	equ	0xFD9
 36589                           status	equ	0xFD8
 36590                           
 36591 ;; *************** function _memset *****************
 36592 ;; Defined at:
 36593 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36594 ;; Parameters:    Size  Location     Type
 36595 ;;  p1              2    4[BANK0 ] PTR void 
 36596 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36597 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36598 ;;  c               2    6[BANK0 ] int 
 36599 ;;  n               2    8[BANK0 ] unsigned int 
 36600 ;; Auto vars:     Size  Location     Type
 36601 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36602 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36603 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36604 ;; Return value:  Size  Location     Type
 36605 ;;                  2    4[BANK0 ] PTR void 
 36606 ;; Registers used:
 36607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36608 ;; Tracked objects:
 36609 ;;		On entry : F/0
 36610 ;;		On exit  : F/0
 36611 ;;		Unchanged: 0/0
 36612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36613 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36616 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36617 ;;Total ram usage:        8 bytes
 36618 ;; Hardware stack levels used:    1
 36619 ;; Hardware stack levels required when called:    7
 36620 ;; This function calls:
 36621 ;;		Nothing
 36622 ;; This function is called by:
 36623 ;;		_LORAWAN_Reset
 36624 ;;		_InitDefault868Channels
 36625 ;;		_InitDefault433Channels
 36626 ;;		_AESCmac
 36627 ;;		_GenerateSubkey
 36628 ;;		_AssemblePacket
 36629 ;;		_PrepareJoinRequestFrame
 36630 ;;		_PrepareSessionKeys
 36631 ;;		_AssembleEncryptionBlock
 36632 ;; This function uses a non-reentrant model
 36633 ;;
 36634                           
 36635                           	psect	text196
 36636  0071B8                     __ptext196:
 36637                           	opt stack 0
 36638  0071B8                     _memset:
 36639                           	opt stack 20
 36640                           
 36641                           ; BSR set to: 0
 36642                           
 36643                           ; BSR set to: 0
 36644                           ;incstack = 0
 36645  0071B8  C064  F06A         	movff	memset@p1,memset@p
 36646  0071BC  C065  F06B         	movff	memset@p1+1,memset@p+1
 36647  0071C0  D008               	goto	l12347
 36648  0071C2                     l12343:
 36649                           
 36650                           ; BSR set to: 0
 36651  0071C2  C06A  FFD9         	movff	memset@p,fsr2l
 36652  0071C6  C06B  FFDA         	movff	memset@p+1,fsr2h
 36653  0071CA  C066  FFDF         	movff	memset@c,indf2
 36654                           
 36655                           ; BSR set to: 0
 36656  0071CE  4B6A               	infsnz	memset@p& (0+255),f,b
 36657  0071D0  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36658  0071D2                     l12347:
 36659                           
 36660                           ; BSR set to: 0
 36661  0071D2  0768               	decf	memset@n& (0+255),f,b
 36662  0071D4  A0D8               	btfss	status,0,c
 36663  0071D6  0769               	decf	(memset@n+1)& (0+255),f,b
 36664  0071D8  2968               	incf	memset@n& (0+255),w,b
 36665  0071DA  E1F3               	bnz	l12343
 36666  0071DC  2969               	incf	(memset@n+1)& (0+255),w,b
 36667  0071DE  E1F1               	bnz	l12343
 36668                           
 36669                           ; BSR set to: 0
 36670  0071E0  0012               	return		;funcret
 36671  0071E2                     __end_of_memset:
 36672                           	opt stack 0
 36673                           tosu	equ	0xFFF
 36674                           tosh	equ	0xFFE
 36675                           tosl	equ	0xFFD
 36676                           pclath	equ	0xFFA
 36677                           tblptru	equ	0xFF8
 36678                           tblptrh	equ	0xFF7
 36679                           tblptrl	equ	0xFF6
 36680                           tablat	equ	0xFF5
 36681                           prodh	equ	0xFF4
 36682                           prodl	equ	0xFF3
 36683                           intcon	equ	0xFF2
 36684                           intcon2	equ	0xFF1
 36685                           intcon3	equ	0xFF0
 36686                           indf0	equ	0xFEF
 36687                           postinc0	equ	0xFEE
 36688                           plusw0	equ	0xFEB
 36689                           fsr0h	equ	0xFEA
 36690                           fsr0l	equ	0xFE9
 36691                           wreg	equ	0xFE8
 36692                           postinc1	equ	0xFE6
 36693                           postdec1	equ	0xFE5
 36694                           plusw1	equ	0xFE3
 36695                           fsr1h	equ	0xFE2
 36696                           fsr1l	equ	0xFE1
 36697                           indf2	equ	0xFDF
 36698                           postinc2	equ	0xFDE
 36699                           postdec2	equ	0xFDD
 36700                           plusw2	equ	0xFDB
 36701                           fsr2h	equ	0xFDA
 36702                           fsr2l	equ	0xFD9
 36703                           status	equ	0xFD8
 36704                           
 36705 ;; *************** function _memcpy *****************
 36706 ;; Defined at:
 36707 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36708 ;; Parameters:    Size  Location     Type
 36709 ;;  d1              2    4[BANK0 ] PTR void 
 36710 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36711 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36712 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36713 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36714 ;;  s1              2    6[BANK0 ] PTR const void 
 36715 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36716 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36717 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36718 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36719 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36720 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36721 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36722 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36723 ;;		 -> NULL(0), 
 36724 ;;  n               2    8[BANK0 ] unsigned int 
 36725 ;; Auto vars:     Size  Location     Type
 36726 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36727 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36728 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36729 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36730 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36731 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36732 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36733 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36734 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36735 ;;		 -> NULL(0), 
 36736 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36737 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36738 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36739 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36740 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36741 ;; Return value:  Size  Location     Type
 36742 ;;                  2    4[BANK0 ] PTR void 
 36743 ;; Registers used:
 36744 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36745 ;; Tracked objects:
 36746 ;;		On entry : F/0
 36747 ;;		On exit  : F/0
 36748 ;;		Unchanged: 0/0
 36749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36750 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36751 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36753 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36754 ;;Total ram usage:       10 bytes
 36755 ;; Hardware stack levels used:    1
 36756 ;; Hardware stack levels required when called:    7
 36757 ;; This function calls:
 36758 ;;		Nothing
 36759 ;; This function is called by:
 36760 ;;		_RADIO_SetFSKSyncWord
 36761 ;;		_UpdateCfList
 36762 ;;		_InitDefault868Channels
 36763 ;;		_InitDefault433Channels
 36764 ;;		_AESCmac
 36765 ;;		_LORAWAN_SetNetworkSessionKey
 36766 ;;		_LORAWAN_SetApplicationSessionKey
 36767 ;;		_LORAWAN_RxDone
 36768 ;;		_AssemblePacket
 36769 ;;		_PrepareJoinRequestFrame
 36770 ;;		_PrepareSessionKeys
 36771 ;;		_AssembleEncryptionBlock
 36772 ;;		_ExtractMic
 36773 ;;		_ComputeMic
 36774 ;;		_AESEncodeLoRa
 36775 ;; This function uses a non-reentrant model
 36776 ;;
 36777                           
 36778                           	psect	text197
 36779  0067FE                     __ptext197:
 36780                           	opt stack 0
 36781  0067FE                     _memcpy:
 36782                           	opt stack 17
 36783                           
 36784                           ; BSR set to: 0
 36785                           
 36786                           ; BSR set to: 0
 36787                           ;incstack = 0
 36788  0067FE  C066  F06C         	movff	memcpy@s1,memcpy@s
 36789  006802  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36790  006806  C064  F06A         	movff	memcpy@d1,memcpy@d
 36791  00680A  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36792  00680E  D01B               	goto	l11989
 36793  006810                     l11983:
 36794                           
 36795                           ; BSR set to: 0
 36796  006810  C06C  FFF6         	movff	memcpy@s,tblptrl
 36797  006814  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36798  006818  0E00               	movlw	low (__mediumconst shr (0+16))
 36799  00681A  6EF8               	movwf	tblptru,c
 36800  00681C  C06A  FFD9         	movff	memcpy@d,fsr2l
 36801  006820  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 36802  006824  0E0F               	movlw	(high __ramtop+-1)
 36803  006826  64F7               	cpfsgt	tblptrh,c
 36804  006828  D003               	bra	u12567
 36805  00682A  0008               	tblrd		*
 36806  00682C  50F5               	movf	tablat,w,c
 36807  00682E  D005               	bra	u12560
 36808  006830                     u12567:
 36809  006830  CFF6 FFE9          	movff	tblptrl,fsr0l
 36810  006834  CFF7 FFEA          	movff	tblptrh,fsr0h
 36811  006838  50EF               	movf	indf0,w,c
 36812  00683A                     u12560:
 36813  00683A  6EDF               	movwf	indf2,c
 36814  00683C  0100               	movlb	0	; () banked
 36815  00683E  4B6C               	infsnz	memcpy@s& (0+255),f,b
 36816  006840  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 36817                           
 36818                           ; BSR set to: 0
 36819  006842  4B6A               	infsnz	memcpy@d& (0+255),f,b
 36820  006844  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 36821  006846                     l11989:
 36822                           
 36823                           ; BSR set to: 0
 36824  006846  0768               	decf	memcpy@n& (0+255),f,b
 36825  006848  A0D8               	btfss	status,0,c
 36826  00684A  0769               	decf	(memcpy@n+1)& (0+255),f,b
 36827  00684C  2968               	incf	memcpy@n& (0+255),w,b
 36828  00684E  E1E0               	bnz	l11983
 36829  006850  2969               	incf	(memcpy@n+1)& (0+255),w,b
 36830  006852  E1DE               	bnz	l11983
 36831                           
 36832                           ; BSR set to: 0
 36833  006854  0012               	return		;funcret
 36834  006856                     __end_of_memcpy:
 36835                           	opt stack 0
 36836                           tosu	equ	0xFFF
 36837                           tosh	equ	0xFFE
 36838                           tosl	equ	0xFFD
 36839                           pclath	equ	0xFFA
 36840                           tblptru	equ	0xFF8
 36841                           tblptrh	equ	0xFF7
 36842                           tblptrl	equ	0xFF6
 36843                           tablat	equ	0xFF5
 36844                           prodh	equ	0xFF4
 36845                           prodl	equ	0xFF3
 36846                           intcon	equ	0xFF2
 36847                           intcon2	equ	0xFF1
 36848                           intcon3	equ	0xFF0
 36849                           indf0	equ	0xFEF
 36850                           postinc0	equ	0xFEE
 36851                           plusw0	equ	0xFEB
 36852                           fsr0h	equ	0xFEA
 36853                           fsr0l	equ	0xFE9
 36854                           wreg	equ	0xFE8
 36855                           postinc1	equ	0xFE6
 36856                           postdec1	equ	0xFE5
 36857                           plusw1	equ	0xFE3
 36858                           fsr1h	equ	0xFE2
 36859                           fsr1l	equ	0xFE1
 36860                           indf2	equ	0xFDF
 36861                           postinc2	equ	0xFDE
 36862                           postdec2	equ	0xFDD
 36863                           plusw2	equ	0xFDB
 36864                           fsr2h	equ	0xFDA
 36865                           fsr2l	equ	0xFD9
 36866                           status	equ	0xFD8
 36867                           
 36868 ;; *************** function _CreateAllSoftwareTimers *****************
 36869 ;; Defined at:
 36870 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36871 ;; Parameters:    Size  Location     Type
 36872 ;;		None
 36873 ;; Auto vars:     Size  Location     Type
 36874 ;;		None
 36875 ;; Return value:  Size  Location     Type
 36876 ;;                  1    wreg      void 
 36877 ;; Registers used:
 36878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36879 ;; Tracked objects:
 36880 ;;		On entry : F/2
 36881 ;;		On exit  : F/2
 36882 ;;		Unchanged: 0/0
 36883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36888 ;;Total ram usage:        0 bytes
 36889 ;; Hardware stack levels used:    1
 36890 ;; Hardware stack levels required when called:    8
 36891 ;; This function calls:
 36892 ;;		_SwTimerCreate
 36893 ;; This function is called by:
 36894 ;;		_LORAWAN_Init
 36895 ;; This function uses a non-reentrant model
 36896 ;;
 36897                           
 36898                           	psect	text198
 36899  0068FA                     __ptext198:
 36900                           	opt stack 0
 36901  0068FA                     _CreateAllSoftwareTimers:
 36902                           	opt stack 21
 36903                           
 36904                           ; BSR set to: 2
 36905                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 36906                           
 36907                           ; BSR set to: 0
 36908                           ;incstack = 0
 36909  0068FA  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36910  0068FE  0102               	movlb	2	; () banked
 36911  006900  6FE2               	movwf	(_loRa+226)& (0+255),b
 36912                           
 36913                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 36914  006902  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36915  006906  0102               	movlb	2	; () banked
 36916  006908  6FE3               	movwf	(_loRa+227)& (0+255),b
 36917                           
 36918                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 36919  00690A  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36920  00690E  0102               	movlb	2	; () banked
 36921  006910  6FE4               	movwf	(_loRa+228)& (0+255),b
 36922                           
 36923                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 36924  006912  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36925  006916  0102               	movlb	2	; () banked
 36926  006918  6FE5               	movwf	(_loRa+229)& (0+255),b
 36927                           
 36928                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 36929  00691A  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36930  00691E  0102               	movlb	2	; () banked
 36931  006920  6FE7               	movwf	(_loRa+231)& (0+255),b
 36932                           
 36933                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 36934  006922  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36935  006926  0102               	movlb	2	; () banked
 36936  006928  6FE8               	movwf	(_loRa+232)& (0+255),b
 36937                           
 36938                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 36939  00692A  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36940  00692E  0102               	movlb	2	; () banked
 36941  006930  6FE6               	movwf	(_loRa+230)& (0+255),b
 36942                           
 36943                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 36944  006932  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36945  006936  0102               	movlb	2	; () banked
 36946  006938  6FEA               	movwf	(_loRa+234)& (0+255),b
 36947                           
 36948                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 36949  00693A  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36950  00693E  0102               	movlb	2	; () banked
 36951  006940  6FF3               	movwf	(_loRa+243)& (0+255),b
 36952                           
 36953                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 36954  006942  ECEC  F030         	call	_SwTimerCreate	;wreg free
 36955  006946  0102               	movlb	2	; () banked
 36956  006948  6FE9               	movwf	(_loRa+233)& (0+255),b
 36957                           
 36958                           ; BSR set to: 2
 36959  00694A  0012               	return		;funcret
 36960  00694C                     __end_of_CreateAllSoftwareTimers:
 36961                           	opt stack 0
 36962                           tosu	equ	0xFFF
 36963                           tosh	equ	0xFFE
 36964                           tosl	equ	0xFFD
 36965                           pclath	equ	0xFFA
 36966                           tblptru	equ	0xFF8
 36967                           tblptrh	equ	0xFF7
 36968                           tblptrl	equ	0xFF6
 36969                           tablat	equ	0xFF5
 36970                           prodh	equ	0xFF4
 36971                           prodl	equ	0xFF3
 36972                           intcon	equ	0xFF2
 36973                           intcon2	equ	0xFF1
 36974                           intcon3	equ	0xFF0
 36975                           indf0	equ	0xFEF
 36976                           postinc0	equ	0xFEE
 36977                           plusw0	equ	0xFEB
 36978                           fsr0h	equ	0xFEA
 36979                           fsr0l	equ	0xFE9
 36980                           wreg	equ	0xFE8
 36981                           postinc1	equ	0xFE6
 36982                           postdec1	equ	0xFE5
 36983                           plusw1	equ	0xFE3
 36984                           fsr1h	equ	0xFE2
 36985                           fsr1l	equ	0xFE1
 36986                           indf2	equ	0xFDF
 36987                           postinc2	equ	0xFDE
 36988                           postdec2	equ	0xFDD
 36989                           plusw2	equ	0xFDB
 36990                           fsr2h	equ	0xFDA
 36991                           fsr2l	equ	0xFD9
 36992                           status	equ	0xFD8
 36993                           
 36994 ;; *************** function _SwTimerCreate *****************
 36995 ;; Defined at:
 36996 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36997 ;; Parameters:    Size  Location     Type
 36998 ;;		None
 36999 ;; Auto vars:     Size  Location     Type
 37000 ;;  retVal          1    4[BANK0 ] unsigned char 
 37001 ;; Return value:  Size  Location     Type
 37002 ;;                  1    wreg      unsigned char 
 37003 ;; Registers used:
 37004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37005 ;; Tracked objects:
 37006 ;;		On entry : C/1
 37007 ;;		On exit  : F/0
 37008 ;;		Unchanged: 0/0
 37009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37014 ;;Total ram usage:        1 bytes
 37015 ;; Hardware stack levels used:    1
 37016 ;; Hardware stack levels required when called:    7
 37017 ;; This function calls:
 37018 ;;		Nothing
 37019 ;; This function is called by:
 37020 ;;		_RADIO_Init
 37021 ;;		_CreateAllSoftwareTimers
 37022 ;; This function uses a non-reentrant model
 37023 ;;
 37024                           
 37025                           	psect	text199
 37026  0061D8                     __ptext199:
 37027                           	opt stack 0
 37028  0061D8                     _SwTimerCreate:
 37029                           	opt stack 21
 37030                           
 37031                           ;sw_timer.c: 156: uint8_t retVal;
 37032                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37033                           
 37034                           ; BSR set to: 2
 37035                           ;incstack = 0
 37036  0061D8  0E14               	movlw	20
 37037  0061DA  0100               	movlb	0	; () banked
 37038  0061DC  61EF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37039  0061DE  D02E               	goto	l126
 37040                           
 37041                           ; BSR set to: 0
 37042                           ;sw_timer.c: 158: {
 37043                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37044  0061E0  9EF2               	bcf	intcon,7,c	;volatile
 37045                           
 37046                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37047  0061E2  C0EF  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37048                           
 37049                           ; BSR set to: 0
 37050                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37051  0061E6  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37052  0061E8  0D08               	mullw	8
 37053  0061EA  0E04               	movlw	low (_swTimers+4)
 37054  0061EC  24F3               	addwf	prodl,w,c
 37055  0061EE  6ED9               	movwf	fsr2l,c
 37056  0061F0  0E03               	movlw	high (_swTimers+4)
 37057  0061F2  20F4               	addwfc	prodh,w,c
 37058  0061F4  6EDA               	movwf	fsr2h,c
 37059  0061F6  6ADF               	clrf	indf2,c
 37060                           
 37061                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37062  0061F8  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37063  0061FA  0D08               	mullw	8
 37064  0061FC  0E00               	movlw	low _swTimers
 37065  0061FE  24F3               	addwf	prodl,w,c
 37066  006200  6ED9               	movwf	fsr2l,c
 37067  006202  0E03               	movlw	high _swTimers
 37068  006204  20F4               	addwfc	prodh,w,c
 37069  006206  6EDA               	movwf	fsr2h,c
 37070  006208  6ADE               	clrf	postinc2,c
 37071  00620A  6ADE               	clrf	postinc2,c
 37072  00620C  6ADE               	clrf	postinc2,c
 37073  00620E  6ADD               	clrf	postdec2,c
 37074                           
 37075                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37076  006210  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37077  006212  0D08               	mullw	8
 37078  006214  0E05               	movlw	low (_swTimers+5)
 37079  006216  24F3               	addwf	prodl,w,c
 37080  006218  6ED9               	movwf	fsr2l,c
 37081  00621A  0E03               	movlw	high (_swTimers+5)
 37082  00621C  20F4               	addwfc	prodh,w,c
 37083  00621E  6EDA               	movwf	fsr2h,c
 37084  006220  6ADF               	clrf	indf2,c
 37085                           
 37086                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37087  006222  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37088  006224  0D08               	mullw	8
 37089  006226  0E06               	movlw	low (_swTimers+6)
 37090  006228  24F3               	addwf	prodl,w,c
 37091  00622A  6ED9               	movwf	fsr2l,c
 37092  00622C  0E03               	movlw	high (_swTimers+6)
 37093  00622E  20F4               	addwfc	prodh,w,c
 37094  006230  6EDA               	movwf	fsr2h,c
 37095  006232  6ADE               	clrf	postinc2,c
 37096  006234  6ADD               	clrf	postdec2,c
 37097                           
 37098                           ; BSR set to: 0
 37099                           ;sw_timer.c: 165: allocatedTimers++;
 37100  006236  2BEF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37101                           
 37102                           ; BSR set to: 0
 37103                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37104  006238  8EF2               	bsf	intcon,7,c	;volatile
 37105                           
 37106                           ;sw_timer.c: 167: }
 37107  00623A  D001               	goto	l9955
 37108  00623C                     l126:
 37109  00623C  D7FF               	goto	l126
 37110  00623E                     l9955:
 37111                           
 37112                           ; BSR set to: 0
 37113                           ;sw_timer.c: 175: }
 37114                           ;sw_timer.c: 176: }
 37115                           ;sw_timer.c: 177: return retVal;
 37116  00623E  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37117                           
 37118                           ; BSR set to: 0
 37119  006240  0012               	return		;funcret
 37120  006242                     __end_of_SwTimerCreate:
 37121                           	opt stack 0
 37122                           tosu	equ	0xFFF
 37123                           tosh	equ	0xFFE
 37124                           tosl	equ	0xFFD
 37125                           pclath	equ	0xFFA
 37126                           tblptru	equ	0xFF8
 37127                           tblptrh	equ	0xFF7
 37128                           tblptrl	equ	0xFF6
 37129                           tablat	equ	0xFF5
 37130                           prodh	equ	0xFF4
 37131                           prodl	equ	0xFF3
 37132                           intcon	equ	0xFF2
 37133                           intcon2	equ	0xFF1
 37134                           intcon3	equ	0xFF0
 37135                           indf0	equ	0xFEF
 37136                           postinc0	equ	0xFEE
 37137                           plusw0	equ	0xFEB
 37138                           fsr0h	equ	0xFEA
 37139                           fsr0l	equ	0xFE9
 37140                           wreg	equ	0xFE8
 37141                           postinc1	equ	0xFE6
 37142                           postdec1	equ	0xFE5
 37143                           plusw1	equ	0xFE3
 37144                           fsr1h	equ	0xFE2
 37145                           fsr1l	equ	0xFE1
 37146                           indf2	equ	0xFDF
 37147                           postinc2	equ	0xFDE
 37148                           postdec2	equ	0xFDD
 37149                           plusw2	equ	0xFDB
 37150                           fsr2h	equ	0xFDA
 37151                           fsr2l	equ	0xFD9
 37152                           status	equ	0xFD8
 37153                           
 37154 ;; *************** function _LORAWAN_GetState *****************
 37155 ;; Defined at:
 37156 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37157 ;; Parameters:    Size  Location     Type
 37158 ;;		None
 37159 ;; Auto vars:     Size  Location     Type
 37160 ;;		None
 37161 ;; Return value:  Size  Location     Type
 37162 ;;                  1    wreg      unsigned char 
 37163 ;; Registers used:
 37164 ;;		wreg, status,2, status,0
 37165 ;; Tracked objects:
 37166 ;;		On entry : F/1
 37167 ;;		On exit  : F/2
 37168 ;;		Unchanged: 0/0
 37169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37174 ;;Total ram usage:        0 bytes
 37175 ;; Hardware stack levels used:    1
 37176 ;; Hardware stack levels required when called:    7
 37177 ;; This function calls:
 37178 ;;		Nothing
 37179 ;; This function is called by:
 37180 ;;		_main
 37181 ;; This function uses a non-reentrant model
 37182 ;;
 37183                           
 37184                           	psect	text200
 37185  007862                     __ptext200:
 37186                           	opt stack 0
 37187  007862                     _LORAWAN_GetState:
 37188                           	opt stack 23
 37189                           
 37190                           ; BSR set to: 1
 37191                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 37192                           
 37193                           ; BSR set to: 0
 37194                           ;incstack = 0
 37195  007862  0102               	movlb	2	; () banked
 37196  007864  5102               	movf	(_loRa+2)& (0+255),w,b
 37197  007866  0B0F               	andlw	15
 37198                           
 37199                           ; BSR set to: 2
 37200  007868  0012               	return		;funcret
 37201  00786A                     __end_of_LORAWAN_GetState:
 37202                           	opt stack 0
 37203                           tosu	equ	0xFFF
 37204                           tosh	equ	0xFFE
 37205                           tosl	equ	0xFFD
 37206                           pclath	equ	0xFFA
 37207                           tblptru	equ	0xFF8
 37208                           tblptrh	equ	0xFF7
 37209                           tblptrl	equ	0xFF6
 37210                           tablat	equ	0xFF5
 37211                           prodh	equ	0xFF4
 37212                           prodl	equ	0xFF3
 37213                           intcon	equ	0xFF2
 37214                           intcon2	equ	0xFF1
 37215                           intcon3	equ	0xFF0
 37216                           indf0	equ	0xFEF
 37217                           postinc0	equ	0xFEE
 37218                           plusw0	equ	0xFEB
 37219                           fsr0h	equ	0xFEA
 37220                           fsr0l	equ	0xFE9
 37221                           wreg	equ	0xFE8
 37222                           postinc1	equ	0xFE6
 37223                           postdec1	equ	0xFE5
 37224                           plusw1	equ	0xFE3
 37225                           fsr1h	equ	0xFE2
 37226                           fsr1l	equ	0xFE1
 37227                           indf2	equ	0xFDF
 37228                           postinc2	equ	0xFDE
 37229                           postdec2	equ	0xFDD
 37230                           plusw2	equ	0xFDB
 37231                           fsr2h	equ	0xFDA
 37232                           fsr2l	equ	0xFD9
 37233                           status	equ	0xFD8
 37234                           
 37235 ;; *************** function _IO_pins_init *****************
 37236 ;; Defined at:
 37237 ;;		line 127 in file "main.c"
 37238 ;; Parameters:    Size  Location     Type
 37239 ;;		None
 37240 ;; Auto vars:     Size  Location     Type
 37241 ;;		None
 37242 ;; Return value:  Size  Location     Type
 37243 ;;                  1    wreg      void 
 37244 ;; Registers used:
 37245 ;;		None
 37246 ;; Tracked objects:
 37247 ;;		On entry : F/F
 37248 ;;		On exit  : F/F
 37249 ;;		Unchanged: 0/0
 37250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37255 ;;Total ram usage:        0 bytes
 37256 ;; Hardware stack levels used:    1
 37257 ;; Hardware stack levels required when called:    7
 37258 ;; This function calls:
 37259 ;;		Nothing
 37260 ;; This function is called by:
 37261 ;;		_main
 37262 ;; This function uses a non-reentrant model
 37263 ;;
 37264                           
 37265                           	psect	text201
 37266  0076DE                     __ptext201:
 37267                           	opt stack 0
 37268  0076DE                     _IO_pins_init:
 37269                           	opt stack 23
 37270                           
 37271                           ; BSR set to: 15
 37272                           ;main.c: 129: TRISCbits.TRISC5 = 0;
 37273                           
 37274                           ; BSR set to: 2
 37275                           ;incstack = 0
 37276  0076DE  9A94               	bcf	3988,5,c	;volatile
 37277                           
 37278                           ;main.c: 130: TRISDbits.TRISD5 = 0;
 37279  0076E0  9A95               	bcf	3989,5,c	;volatile
 37280                           
 37281                           ;main.c: 131: TRISDbits.TRISD6 = 1;
 37282  0076E2  8C95               	bsf	3989,6,c	;volatile
 37283                           
 37284                           ;main.c: 132: TRISDbits.TRISD7 = 1;
 37285  0076E4  8E95               	bsf	3989,7,c	;volatile
 37286                           
 37287                           ;main.c: 134: ANSELCbits.ANSC5 = 0;
 37288  0076E6  9B3A               	bcf	58,5,b	;volatile
 37289                           
 37290                           ;main.c: 135: ANSELDbits.ANSD5 = 0;
 37291  0076E8  9B3B               	bcf	59,5,b	;volatile
 37292                           
 37293                           ;main.c: 136: ANSELDbits.ANSD6 = 1;
 37294  0076EA  8D3B               	bsf	59,6,b	;volatile
 37295                           
 37296                           ;main.c: 137: ANSELDbits.ANSD7 = 1;
 37297  0076EC  8F3B               	bsf	59,7,b	;volatile
 37298                           
 37299                           ; BSR set to: 15
 37300  0076EE  0012               	return		;funcret
 37301  0076F0                     __end_of_IO_pins_init:
 37302                           	opt stack 0
 37303                           tosu	equ	0xFFF
 37304                           tosh	equ	0xFFE
 37305                           tosl	equ	0xFFD
 37306                           pclath	equ	0xFFA
 37307                           tblptru	equ	0xFF8
 37308                           tblptrh	equ	0xFF7
 37309                           tblptrl	equ	0xFF6
 37310                           tablat	equ	0xFF5
 37311                           prodh	equ	0xFF4
 37312                           prodl	equ	0xFF3
 37313                           intcon	equ	0xFF2
 37314                           intcon2	equ	0xFF1
 37315                           intcon3	equ	0xFF0
 37316                           indf0	equ	0xFEF
 37317                           postinc0	equ	0xFEE
 37318                           plusw0	equ	0xFEB
 37319                           fsr0h	equ	0xFEA
 37320                           fsr0l	equ	0xFE9
 37321                           wreg	equ	0xFE8
 37322                           postinc1	equ	0xFE6
 37323                           postdec1	equ	0xFE5
 37324                           plusw1	equ	0xFE3
 37325                           fsr1h	equ	0xFE2
 37326                           fsr1l	equ	0xFE1
 37327                           indf2	equ	0xFDF
 37328                           postinc2	equ	0xFDE
 37329                           postdec2	equ	0xFDD
 37330                           plusw2	equ	0xFDB
 37331                           fsr2h	equ	0xFDA
 37332                           fsr2l	equ	0xFD9
 37333                           status	equ	0xFD8
 37334                           
 37335 ;; *************** function _ADC_Init *****************
 37336 ;; Defined at:
 37337 ;;		line 155 in file "main.c"
 37338 ;; Parameters:    Size  Location     Type
 37339 ;;		None
 37340 ;; Auto vars:     Size  Location     Type
 37341 ;;		None
 37342 ;; Return value:  Size  Location     Type
 37343 ;;                  1    wreg      void 
 37344 ;; Registers used:
 37345 ;;		wreg, status,2
 37346 ;; Tracked objects:
 37347 ;;		On entry : F/F
 37348 ;;		On exit  : F/F
 37349 ;;		Unchanged: E/0
 37350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37355 ;;Total ram usage:        0 bytes
 37356 ;; Hardware stack levels used:    1
 37357 ;; Hardware stack levels required when called:    7
 37358 ;; This function calls:
 37359 ;;		Nothing
 37360 ;; This function is called by:
 37361 ;;		_main
 37362 ;; This function uses a non-reentrant model
 37363 ;;
 37364                           
 37365                           	psect	text202
 37366  007738                     __ptext202:
 37367                           	opt stack 0
 37368  007738                     _ADC_Init:
 37369                           	opt stack 23
 37370                           
 37371                           ; BSR set to: 15
 37372                           ;main.c: 156: ADCON0bits.GO = 0;
 37373                           
 37374                           ; BSR set to: 15
 37375                           ;incstack = 0
 37376  007738  92C2               	bcf	4034,1,c	;volatile
 37377                           
 37378                           ;main.c: 157: ADCON2bits.ADFM = 1;
 37379  00773A  8EC0               	bsf	4032,7,c	;volatile
 37380                           
 37381                           ; BSR set to: 15
 37382                           ;main.c: 158: ADCON2bits.ADCS = 3;
 37383  00773C  50C0               	movf	4032,w,c	;volatile
 37384  00773E  0BF8               	andlw	-8
 37385  007740  0903               	iorlw	3
 37386  007742  6EC0               	movwf	4032,c	;volatile
 37387                           
 37388                           ; BSR set to: 15
 37389  007744  0012               	return		;funcret
 37390  007746                     __end_of_ADC_Init:
 37391                           	opt stack 0
 37392                           tosu	equ	0xFFF
 37393                           tosh	equ	0xFFE
 37394                           tosl	equ	0xFFD
 37395                           pclath	equ	0xFFA
 37396                           tblptru	equ	0xFF8
 37397                           tblptrh	equ	0xFF7
 37398                           tblptrl	equ	0xFF6
 37399                           tablat	equ	0xFF5
 37400                           prodh	equ	0xFF4
 37401                           prodl	equ	0xFF3
 37402                           intcon	equ	0xFF2
 37403                           intcon2	equ	0xFF1
 37404                           intcon3	equ	0xFF0
 37405                           indf0	equ	0xFEF
 37406                           postinc0	equ	0xFEE
 37407                           plusw0	equ	0xFEB
 37408                           fsr0h	equ	0xFEA
 37409                           fsr0l	equ	0xFE9
 37410                           wreg	equ	0xFE8
 37411                           postinc1	equ	0xFE6
 37412                           postdec1	equ	0xFE5
 37413                           plusw1	equ	0xFE3
 37414                           fsr1h	equ	0xFE2
 37415                           fsr1l	equ	0xFE1
 37416                           indf2	equ	0xFDF
 37417                           postinc2	equ	0xFDE
 37418                           postdec2	equ	0xFDD
 37419                           plusw2	equ	0xFDB
 37420                           fsr2h	equ	0xFDA
 37421                           fsr2l	equ	0xFD9
 37422                           status	equ	0xFD8
 37423                           
 37424 ;; *************** function _INTERRUPT_InterruptManager *****************
 37425 ;; Defined at:
 37426 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 37427 ;; Parameters:    Size  Location     Type
 37428 ;;		None
 37429 ;; Auto vars:     Size  Location     Type
 37430 ;;		None
 37431 ;; Return value:  Size  Location     Type
 37432 ;;                  1    wreg      void 
 37433 ;; Registers used:
 37434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37435 ;; Tracked objects:
 37436 ;;		On entry : 0/0
 37437 ;;		On exit  : 0/0
 37438 ;;		Unchanged: 0/0
 37439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37442 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37444 ;;Total ram usage:        8 bytes
 37445 ;; Hardware stack levels used:    1
 37446 ;; Hardware stack levels required when called:    6
 37447 ;; This function calls:
 37448 ;;		_INT1_ISR
 37449 ;;		_INT2_ISR
 37450 ;;		_PIN_MANAGER_IOC
 37451 ;;		_TMR1_ISR
 37452 ;;		_TMR3_ISR
 37453 ;; This function is called by:
 37454 ;;		Interrupt level 2
 37455 ;; This function uses a non-reentrant model
 37456 ;;
 37457                           
 37458                           	psect	intcode
 37459  000008                     __pintcode:
 37460                           	opt stack 0
 37461  000008                     _INTERRUPT_InterruptManager:
 37462                           	opt stack 12
 37463                           
 37464                           ; BSR set to: 15
 37465                           ;incstack = 0
 37466  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 37467  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37468  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37469  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37470  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37471  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37472  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37473  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37474  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 37475                           
 37476                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37477  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37478  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37479  000030  D003               	goto	i2l2497
 37480                           
 37481                           ;interrupt_manager.c: 61: {
 37482                           ;interrupt_manager.c: 62: INT1_ISR();
 37483  000032  EC4D  F03C         	call	_INT1_ISR	;wreg free
 37484                           
 37485                           ;interrupt_manager.c: 63: }
 37486  000036  D01B               	goto	i2l2507
 37487  000038                     i2l2497:
 37488                           
 37489                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37490  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37491  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37492  00003C  D003               	goto	i2l2499
 37493                           
 37494                           ;interrupt_manager.c: 65: {
 37495                           ;interrupt_manager.c: 66: INT2_ISR();
 37496  00003E  EC47  F03C         	call	_INT2_ISR	;wreg free
 37497                           
 37498                           ;interrupt_manager.c: 67: }
 37499  000042  D015               	goto	i2l2507
 37500  000044                     i2l2499:
 37501                           
 37502                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.TMR3IE == 1 && PIR2bi
      +                          ts.TMR3IF == 1)
 37503  000044  BCF2               	btfsc	intcon,6,c	;volatile
 37504  000046  A2A0               	btfss	4000,1,c	;volatile
 37505  000048  D005               	goto	i2l2501
 37506  00004A  A2A1               	btfss	4001,1,c	;volatile
 37507  00004C  D003               	goto	i2l2501
 37508                           
 37509                           ;interrupt_manager.c: 69: {
 37510                           ;interrupt_manager.c: 70: TMR3_ISR();
 37511  00004E  ECA3  F03B         	call	_TMR3_ISR	;wreg free
 37512                           
 37513                           ;interrupt_manager.c: 71: }
 37514  000052  D00D               	goto	i2l2507
 37515  000054                     i2l2501:
 37516                           
 37517                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 37518  000054  BCF2               	btfsc	intcon,6,c	;volatile
 37519  000056  A09D               	btfss	3997,0,c	;volatile
 37520  000058  D005               	goto	i2l2503
 37521  00005A  A09E               	btfss	3998,0,c	;volatile
 37522  00005C  D003               	goto	i2l2503
 37523                           
 37524                           ;interrupt_manager.c: 73: {
 37525                           ;interrupt_manager.c: 74: TMR1_ISR();
 37526  00005E  ECAA  F03B         	call	_TMR1_ISR	;wreg free
 37527                           
 37528                           ;interrupt_manager.c: 75: }
 37529  000062  D005               	goto	i2l2507
 37530  000064                     i2l2503:
 37531                           
 37532                           ;interrupt_manager.c: 76: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37533  000064  B6F2               	btfsc	intcon,3,c	;volatile
 37534  000066  A0F2               	btfss	intcon,0,c	;volatile
 37535  000068  D002               	goto	i2l2507
 37536                           
 37537                           ;interrupt_manager.c: 77: {
 37538                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37539  00006A  EC0C  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37540  00006E                     i2l2507:
 37541  00006E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37542  000072  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37543  000076  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37544  00007A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37545  00007E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37546  000082  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37547  000086  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37548  00008A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37549  00008E  0011               	retfie		f
 37550  000090                     __end_of_INTERRUPT_InterruptManager:
 37551                           	opt stack 0
 37552                           tosu	equ	0xFFF
 37553                           tosh	equ	0xFFE
 37554                           tosl	equ	0xFFD
 37555                           pclatu	equ	0xFFB
 37556                           pclath	equ	0xFFA
 37557                           tblptru	equ	0xFF8
 37558                           tblptrh	equ	0xFF7
 37559                           tblptrl	equ	0xFF6
 37560                           tablat	equ	0xFF5
 37561                           prodh	equ	0xFF4
 37562                           prodl	equ	0xFF3
 37563                           intcon	equ	0xFF2
 37564                           intcon2	equ	0xFF1
 37565                           intcon3	equ	0xFF0
 37566                           indf0	equ	0xFEF
 37567                           postinc0	equ	0xFEE
 37568                           plusw0	equ	0xFEB
 37569                           fsr0h	equ	0xFEA
 37570                           fsr0l	equ	0xFE9
 37571                           wreg	equ	0xFE8
 37572                           postinc1	equ	0xFE6
 37573                           postdec1	equ	0xFE5
 37574                           plusw1	equ	0xFE3
 37575                           fsr1h	equ	0xFE2
 37576                           fsr1l	equ	0xFE1
 37577                           indf2	equ	0xFDF
 37578                           postinc2	equ	0xFDE
 37579                           postdec2	equ	0xFDD
 37580                           plusw2	equ	0xFDB
 37581                           fsr2h	equ	0xFDA
 37582                           fsr2l	equ	0xFD9
 37583                           status	equ	0xFD8
 37584                           
 37585 ;; *************** function _TMR3_ISR *****************
 37586 ;; Defined at:
 37587 ;;		line 159 in file "mcc_generated_files/tmr3.c"
 37588 ;; Parameters:    Size  Location     Type
 37589 ;;		None
 37590 ;; Auto vars:     Size  Location     Type
 37591 ;;		None
 37592 ;; Return value:  Size  Location     Type
 37593 ;;                  1    wreg      void 
 37594 ;; Registers used:
 37595 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37596 ;; Tracked objects:
 37597 ;;		On entry : 0/0
 37598 ;;		On exit  : 0/0
 37599 ;;		Unchanged: 0/0
 37600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37605 ;;Total ram usage:        0 bytes
 37606 ;; Hardware stack levels used:    1
 37607 ;; Hardware stack levels required when called:    2
 37608 ;; This function calls:
 37609 ;;		_TMR3_CallBack
 37610 ;; This function is called by:
 37611 ;;		_INTERRUPT_InterruptManager
 37612 ;; This function uses a non-reentrant model
 37613 ;;
 37614                           
 37615                           	psect	text204
 37616  007746                     __ptext204:
 37617                           	opt stack 0
 37618  007746                     _TMR3_ISR:
 37619                           	opt stack 15
 37620                           
 37621                           ;tmr3.c: 163: PIR2bits.TMR3IF = 0;
 37622                           
 37623                           ;incstack = 0
 37624  007746  92A1               	bcf	4001,1,c	;volatile
 37625                           
 37626                           ;tmr3.c: 166: TMR3H = (timer3ReloadVal >> 8);
 37627  007748  C05F  FFB3         	movff	_timer3ReloadVal+1,4019	;volatile
 37628                           
 37629                           ;tmr3.c: 167: TMR3L = (uint8_t) timer3ReloadVal;
 37630  00774C  C05E  FFB2         	movff	_timer3ReloadVal,4018	;volatile
 37631                           
 37632                           ;tmr3.c: 171: TMR3_CallBack();
 37633  007750  EF73  F03A         	goto	_TMR3_CallBack	;wreg free
 37634  007754                     __end_of_TMR3_ISR:
 37635                           	opt stack 0
 37636                           tosu	equ	0xFFF
 37637                           tosh	equ	0xFFE
 37638                           tosl	equ	0xFFD
 37639                           pclatu	equ	0xFFB
 37640                           pclath	equ	0xFFA
 37641                           tblptru	equ	0xFF8
 37642                           tblptrh	equ	0xFF7
 37643                           tblptrl	equ	0xFF6
 37644                           tablat	equ	0xFF5
 37645                           prodh	equ	0xFF4
 37646                           prodl	equ	0xFF3
 37647                           intcon	equ	0xFF2
 37648                           intcon2	equ	0xFF1
 37649                           intcon3	equ	0xFF0
 37650                           indf0	equ	0xFEF
 37651                           postinc0	equ	0xFEE
 37652                           plusw0	equ	0xFEB
 37653                           fsr0h	equ	0xFEA
 37654                           fsr0l	equ	0xFE9
 37655                           wreg	equ	0xFE8
 37656                           postinc1	equ	0xFE6
 37657                           postdec1	equ	0xFE5
 37658                           plusw1	equ	0xFE3
 37659                           fsr1h	equ	0xFE2
 37660                           fsr1l	equ	0xFE1
 37661                           indf2	equ	0xFDF
 37662                           postinc2	equ	0xFDE
 37663                           postdec2	equ	0xFDD
 37664                           plusw2	equ	0xFDB
 37665                           fsr2h	equ	0xFDA
 37666                           fsr2l	equ	0xFD9
 37667                           status	equ	0xFD8
 37668                           
 37669 ;; *************** function _TMR3_CallBack *****************
 37670 ;; Defined at:
 37671 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 37672 ;; Parameters:    Size  Location     Type
 37673 ;;		None
 37674 ;; Auto vars:     Size  Location     Type
 37675 ;;		None
 37676 ;; Return value:  Size  Location     Type
 37677 ;;                  1    wreg      void 
 37678 ;; Registers used:
 37679 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37680 ;; Tracked objects:
 37681 ;;		On entry : 0/0
 37682 ;;		On exit  : 0/0
 37683 ;;		Unchanged: 0/0
 37684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37689 ;;Total ram usage:        0 bytes
 37690 ;; Hardware stack levels used:    1
 37691 ;; Hardware stack levels required when called:    1
 37692 ;; This function calls:
 37693 ;;		Absolute function
 37694 ;;		_TMR3_DefaultInterruptHandler
 37695 ;;		_handle16sInterrupt
 37696 ;; This function is called by:
 37697 ;;		_TMR3_ISR
 37698 ;; This function uses a non-reentrant model
 37699 ;;
 37700                           
 37701                           	psect	text205
 37702  0074E6                     __ptext205:
 37703                           	opt stack 0
 37704  0074E6                     _TMR3_CallBack:
 37705                           	opt stack 15
 37706                           
 37707                           ;tmr3.c: 177: if(TMR3_InterruptHandler)
 37708                           
 37709                           ;incstack = 0
 37710  0074E6  0101               	movlb	1	; () banked
 37711  0074E8  51FE               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37712  0074EA  11FF               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37713  0074EC  B4D8               	btfsc	status,2,c
 37714  0074EE  0012               	return	
 37715                           
 37716                           ; BSR set to: 1
 37717                           ;tmr3.c: 178: {
 37718                           ;tmr3.c: 179: TMR3_InterruptHandler();
 37719  0074F0  0005               	push	
 37720  0074F2  6EFA               	movwf	pclath,c
 37721  0074F4  51FE               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37722  0074F6  6EFD               	movwf	tosl,c
 37723  0074F8  51FF               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37724  0074FA  6EFE               	movwf	tosh,c
 37725  0074FC  6AFF               	clrf	tosu,c
 37726  0074FE  50FA               	movf	pclath,w,c
 37727  007500  0012               	return		;indir
 37728  007502                     __end_of_TMR3_CallBack:
 37729                           	opt stack 0
 37730                           tosu	equ	0xFFF
 37731                           tosh	equ	0xFFE
 37732                           tosl	equ	0xFFD
 37733                           pclatu	equ	0xFFB
 37734                           pclath	equ	0xFFA
 37735                           tblptru	equ	0xFF8
 37736                           tblptrh	equ	0xFF7
 37737                           tblptrl	equ	0xFF6
 37738                           tablat	equ	0xFF5
 37739                           prodh	equ	0xFF4
 37740                           prodl	equ	0xFF3
 37741                           intcon	equ	0xFF2
 37742                           intcon2	equ	0xFF1
 37743                           intcon3	equ	0xFF0
 37744                           indf0	equ	0xFEF
 37745                           postinc0	equ	0xFEE
 37746                           plusw0	equ	0xFEB
 37747                           fsr0h	equ	0xFEA
 37748                           fsr0l	equ	0xFE9
 37749                           wreg	equ	0xFE8
 37750                           postinc1	equ	0xFE6
 37751                           postdec1	equ	0xFE5
 37752                           plusw1	equ	0xFE3
 37753                           fsr1h	equ	0xFE2
 37754                           fsr1l	equ	0xFE1
 37755                           indf2	equ	0xFDF
 37756                           postinc2	equ	0xFDE
 37757                           postdec2	equ	0xFDD
 37758                           plusw2	equ	0xFDB
 37759                           fsr2h	equ	0xFDA
 37760                           fsr2l	equ	0xFD9
 37761                           status	equ	0xFD8
 37762                           
 37763 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37764 ;; Defined at:
 37765 ;;		line 187 in file "mcc_generated_files/tmr3.c"
 37766 ;; Parameters:    Size  Location     Type
 37767 ;;		None
 37768 ;; Auto vars:     Size  Location     Type
 37769 ;;		None
 37770 ;; Return value:  Size  Location     Type
 37771 ;;                  1    wreg      void 
 37772 ;; Registers used:
 37773 ;;		None
 37774 ;; Tracked objects:
 37775 ;;		On entry : F/1
 37776 ;;		On exit  : F/1
 37777 ;;		Unchanged: F/0
 37778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37783 ;;Total ram usage:        0 bytes
 37784 ;; Hardware stack levels used:    1
 37785 ;; This function calls:
 37786 ;;		Nothing
 37787 ;; This function is called by:
 37788 ;;		_TMR3_Initialize
 37789 ;;		_TMR3_CallBack
 37790 ;; This function uses a non-reentrant model
 37791 ;;
 37792                           
 37793                           	psect	text206
 37794  0078D2                     __ptext206:
 37795                           	opt stack 0
 37796  0078D2                     _TMR3_DefaultInterruptHandler:
 37797                           	opt stack 15
 37798                           
 37799                           ; BSR set to: 1
 37800                           
 37801                           ;incstack = 0
 37802  0078D2  0012               	return		;funcret
 37803  0078D4                     __end_of_TMR3_DefaultInterruptHandler:
 37804                           	opt stack 0
 37805                           tosu	equ	0xFFF
 37806                           tosh	equ	0xFFE
 37807                           tosl	equ	0xFFD
 37808                           pclatu	equ	0xFFB
 37809                           pclath	equ	0xFFA
 37810                           tblptru	equ	0xFF8
 37811                           tblptrh	equ	0xFF7
 37812                           tblptrl	equ	0xFF6
 37813                           tablat	equ	0xFF5
 37814                           prodh	equ	0xFF4
 37815                           prodl	equ	0xFF3
 37816                           intcon	equ	0xFF2
 37817                           intcon2	equ	0xFF1
 37818                           intcon3	equ	0xFF0
 37819                           indf0	equ	0xFEF
 37820                           postinc0	equ	0xFEE
 37821                           plusw0	equ	0xFEB
 37822                           fsr0h	equ	0xFEA
 37823                           fsr0l	equ	0xFE9
 37824                           wreg	equ	0xFE8
 37825                           postinc1	equ	0xFE6
 37826                           postdec1	equ	0xFE5
 37827                           plusw1	equ	0xFE3
 37828                           fsr1h	equ	0xFE2
 37829                           fsr1l	equ	0xFE1
 37830                           indf2	equ	0xFDF
 37831                           postinc2	equ	0xFDE
 37832                           postdec2	equ	0xFDD
 37833                           plusw2	equ	0xFDB
 37834                           fsr2h	equ	0xFDA
 37835                           fsr2l	equ	0xFD9
 37836                           status	equ	0xFD8
 37837                           
 37838 ;; *************** function _handle16sInterrupt *****************
 37839 ;; Defined at:
 37840 ;;		line 88 in file "main.c"
 37841 ;; Parameters:    Size  Location     Type
 37842 ;;		None
 37843 ;; Auto vars:     Size  Location     Type
 37844 ;;		None
 37845 ;; Return value:  Size  Location     Type
 37846 ;;                  1    wreg      void 
 37847 ;; Registers used:
 37848 ;;		wreg, status,2, status,0
 37849 ;; Tracked objects:
 37850 ;;		On entry : F/1
 37851 ;;		On exit  : 0/0
 37852 ;;		Unchanged: 0/0
 37853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37858 ;;Total ram usage:        0 bytes
 37859 ;; Hardware stack levels used:    1
 37860 ;; This function calls:
 37861 ;;		Nothing
 37862 ;; This function is called by:
 37863 ;;		_main
 37864 ;;		_TMR3_CallBack
 37865 ;; This function uses a non-reentrant model
 37866 ;;
 37867                           
 37868                           	psect	text207
 37869  0076B8                     __ptext207:
 37870                           	opt stack 0
 37871  0076B8                     _handle16sInterrupt:
 37872                           	opt stack 15
 37873                           
 37874                           ; BSR set to: 1
 37875                           ;main.c: 90: static volatile uint8_t counterSleepTimeout = 0;
 37876                           ;main.c: 91: if( ++counterSleepTimeout == 75 )
 37877                           
 37878                           ; BSR set to: 1
 37879                           ;incstack = 0
 37880  0076B8  2A45               	incf	handle16sInterrupt@counterSleepTimeout,f,c	;volatile
 37881  0076BA  0E4B               	movlw	75
 37882  0076BC  1845               	xorwf	handle16sInterrupt@counterSleepTimeout,w,c	;volatile
 37883  0076BE  E104               	bnz	i2l2722
 37884                           
 37885                           ; BSR set to: 1
 37886                           ;main.c: 92: {
 37887                           ;main.c: 94: TimeToSend = 1;
 37888  0076C0  0E01               	movlw	1
 37889  0076C2  6F7D               	movwf	_TimeToSend& (0+255),b
 37890                           
 37891                           ; BSR set to: 1
 37892                           ;main.c: 95: counterSleepTimeout = 0;
 37893  0076C4  6A45               	clrf	handle16sInterrupt@counterSleepTimeout,c	;volatile
 37894                           
 37895                           ;main.c: 96: }
 37896  0076C6  0012               	return	
 37897  0076C8                     i2l2722:
 37898                           
 37899                           ; BSR set to: 1
 37900  0076C8  0003               	sleep		;# 
 37901  0076CA  0012               	return		;funcret
 37902  0076CC                     __end_of_handle16sInterrupt:
 37903                           	opt stack 0
 37904                           tosu	equ	0xFFF
 37905                           tosh	equ	0xFFE
 37906                           tosl	equ	0xFFD
 37907                           pclatu	equ	0xFFB
 37908                           pclath	equ	0xFFA
 37909                           tblptru	equ	0xFF8
 37910                           tblptrh	equ	0xFF7
 37911                           tblptrl	equ	0xFF6
 37912                           tablat	equ	0xFF5
 37913                           prodh	equ	0xFF4
 37914                           prodl	equ	0xFF3
 37915                           intcon	equ	0xFF2
 37916                           intcon2	equ	0xFF1
 37917                           intcon3	equ	0xFF0
 37918                           indf0	equ	0xFEF
 37919                           postinc0	equ	0xFEE
 37920                           plusw0	equ	0xFEB
 37921                           fsr0h	equ	0xFEA
 37922                           fsr0l	equ	0xFE9
 37923                           wreg	equ	0xFE8
 37924                           postinc1	equ	0xFE6
 37925                           postdec1	equ	0xFE5
 37926                           plusw1	equ	0xFE3
 37927                           fsr1h	equ	0xFE2
 37928                           fsr1l	equ	0xFE1
 37929                           indf2	equ	0xFDF
 37930                           postinc2	equ	0xFDE
 37931                           postdec2	equ	0xFDD
 37932                           plusw2	equ	0xFDB
 37933                           fsr2h	equ	0xFDA
 37934                           fsr2l	equ	0xFD9
 37935                           status	equ	0xFD8
 37936                           
 37937 ;; *************** function _TMR1_ISR *****************
 37938 ;; Defined at:
 37939 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 37940 ;; Parameters:    Size  Location     Type
 37941 ;;		None
 37942 ;; Auto vars:     Size  Location     Type
 37943 ;;		None
 37944 ;; Return value:  Size  Location     Type
 37945 ;;                  1    wreg      void 
 37946 ;; Registers used:
 37947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37948 ;; Tracked objects:
 37949 ;;		On entry : 0/0
 37950 ;;		On exit  : 0/0
 37951 ;;		Unchanged: 0/0
 37952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37957 ;;Total ram usage:        0 bytes
 37958 ;; Hardware stack levels used:    1
 37959 ;; Hardware stack levels required when called:    5
 37960 ;; This function calls:
 37961 ;;		_TMR1_CallBack
 37962 ;; This function is called by:
 37963 ;;		_INTERRUPT_InterruptManager
 37964 ;; This function uses a non-reentrant model
 37965 ;;
 37966                           
 37967                           	psect	text208
 37968  007754                     __ptext208:
 37969                           	opt stack 0
 37970  007754                     _TMR1_ISR:
 37971                           	opt stack 12
 37972                           
 37973                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 37974                           
 37975                           ;incstack = 0
 37976  007754  909E               	bcf	3998,0,c	;volatile
 37977                           
 37978                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 37979  007756  C05D  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 37980                           
 37981                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 37982  00775A  C05C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 37983                           
 37984                           ;tmr1.c: 171: TMR1_CallBack();
 37985  00775E  EF81  F03A         	goto	_TMR1_CallBack	;wreg free
 37986  007762                     __end_of_TMR1_ISR:
 37987                           	opt stack 0
 37988                           tosu	equ	0xFFF
 37989                           tosh	equ	0xFFE
 37990                           tosl	equ	0xFFD
 37991                           pclatu	equ	0xFFB
 37992                           pclath	equ	0xFFA
 37993                           tblptru	equ	0xFF8
 37994                           tblptrh	equ	0xFF7
 37995                           tblptrl	equ	0xFF6
 37996                           tablat	equ	0xFF5
 37997                           prodh	equ	0xFF4
 37998                           prodl	equ	0xFF3
 37999                           intcon	equ	0xFF2
 38000                           intcon2	equ	0xFF1
 38001                           intcon3	equ	0xFF0
 38002                           indf0	equ	0xFEF
 38003                           postinc0	equ	0xFEE
 38004                           plusw0	equ	0xFEB
 38005                           fsr0h	equ	0xFEA
 38006                           fsr0l	equ	0xFE9
 38007                           wreg	equ	0xFE8
 38008                           postinc1	equ	0xFE6
 38009                           postdec1	equ	0xFE5
 38010                           plusw1	equ	0xFE3
 38011                           fsr1h	equ	0xFE2
 38012                           fsr1l	equ	0xFE1
 38013                           indf2	equ	0xFDF
 38014                           postinc2	equ	0xFDE
 38015                           postdec2	equ	0xFDD
 38016                           plusw2	equ	0xFDB
 38017                           fsr2h	equ	0xFDA
 38018                           fsr2l	equ	0xFD9
 38019                           status	equ	0xFD8
 38020                           
 38021 ;; *************** function _TMR1_CallBack *****************
 38022 ;; Defined at:
 38023 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 38024 ;; Parameters:    Size  Location     Type
 38025 ;;		None
 38026 ;; Auto vars:     Size  Location     Type
 38027 ;;		None
 38028 ;; Return value:  Size  Location     Type
 38029 ;;                  1    wreg      void 
 38030 ;; Registers used:
 38031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38032 ;; Tracked objects:
 38033 ;;		On entry : 0/0
 38034 ;;		On exit  : 0/0
 38035 ;;		Unchanged: 0/0
 38036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38041 ;;Total ram usage:        0 bytes
 38042 ;; Hardware stack levels used:    1
 38043 ;; Hardware stack levels required when called:    4
 38044 ;; This function calls:
 38045 ;;		Absolute function
 38046 ;;		_TMR1_DefaultInterruptHandler
 38047 ;;		_TMR_ISR_lora
 38048 ;; This function is called by:
 38049 ;;		_TMR1_ISR
 38050 ;; This function uses a non-reentrant model
 38051 ;;
 38052                           
 38053                           	psect	text209
 38054  007502                     __ptext209:
 38055                           	opt stack 0
 38056  007502                     _TMR1_CallBack:
 38057                           	opt stack 12
 38058                           
 38059                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 38060                           
 38061                           ;incstack = 0
 38062  007502  0101               	movlb	1	; () banked
 38063  007504  51FC               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38064  007506  11FD               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38065  007508  B4D8               	btfsc	status,2,c
 38066  00750A  0012               	return	
 38067                           
 38068                           ; BSR set to: 1
 38069                           ;tmr1.c: 178: {
 38070                           ;tmr1.c: 179: TMR1_InterruptHandler();
 38071  00750C  0005               	push	
 38072  00750E  6EFA               	movwf	pclath,c
 38073  007510  51FC               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38074  007512  6EFD               	movwf	tosl,c
 38075  007514  51FD               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38076  007516  6EFE               	movwf	tosh,c
 38077  007518  6AFF               	clrf	tosu,c
 38078  00751A  50FA               	movf	pclath,w,c
 38079  00751C  0012               	return		;indir
 38080  00751E                     __end_of_TMR1_CallBack:
 38081                           	opt stack 0
 38082                           tosu	equ	0xFFF
 38083                           tosh	equ	0xFFE
 38084                           tosl	equ	0xFFD
 38085                           pclatu	equ	0xFFB
 38086                           pclath	equ	0xFFA
 38087                           tblptru	equ	0xFF8
 38088                           tblptrh	equ	0xFF7
 38089                           tblptrl	equ	0xFF6
 38090                           tablat	equ	0xFF5
 38091                           prodh	equ	0xFF4
 38092                           prodl	equ	0xFF3
 38093                           intcon	equ	0xFF2
 38094                           intcon2	equ	0xFF1
 38095                           intcon3	equ	0xFF0
 38096                           indf0	equ	0xFEF
 38097                           postinc0	equ	0xFEE
 38098                           plusw0	equ	0xFEB
 38099                           fsr0h	equ	0xFEA
 38100                           fsr0l	equ	0xFE9
 38101                           wreg	equ	0xFE8
 38102                           postinc1	equ	0xFE6
 38103                           postdec1	equ	0xFE5
 38104                           plusw1	equ	0xFE3
 38105                           fsr1h	equ	0xFE2
 38106                           fsr1l	equ	0xFE1
 38107                           indf2	equ	0xFDF
 38108                           postinc2	equ	0xFDE
 38109                           postdec2	equ	0xFDD
 38110                           plusw2	equ	0xFDB
 38111                           fsr2h	equ	0xFDA
 38112                           fsr2l	equ	0xFD9
 38113                           status	equ	0xFD8
 38114                           
 38115 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38116 ;; Defined at:
 38117 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 38118 ;; Parameters:    Size  Location     Type
 38119 ;;		None
 38120 ;; Auto vars:     Size  Location     Type
 38121 ;;		None
 38122 ;; Return value:  Size  Location     Type
 38123 ;;                  1    wreg      void 
 38124 ;; Registers used:
 38125 ;;		None
 38126 ;; Tracked objects:
 38127 ;;		On entry : F/1
 38128 ;;		On exit  : F/1
 38129 ;;		Unchanged: F/0
 38130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38135 ;;Total ram usage:        0 bytes
 38136 ;; Hardware stack levels used:    1
 38137 ;; This function calls:
 38138 ;;		Nothing
 38139 ;; This function is called by:
 38140 ;;		_TMR1_Initialize
 38141 ;;		_TMR1_CallBack
 38142 ;; This function uses a non-reentrant model
 38143 ;;
 38144                           
 38145                           	psect	text210
 38146  0078D4                     __ptext210:
 38147                           	opt stack 0
 38148  0078D4                     _TMR1_DefaultInterruptHandler:
 38149                           	opt stack 15
 38150                           
 38151                           ; BSR set to: 1
 38152                           
 38153                           ;incstack = 0
 38154  0078D4  0012               	return		;funcret
 38155  0078D6                     __end_of_TMR1_DefaultInterruptHandler:
 38156                           	opt stack 0
 38157                           tosu	equ	0xFFF
 38158                           tosh	equ	0xFFE
 38159                           tosl	equ	0xFFD
 38160                           pclatu	equ	0xFFB
 38161                           pclath	equ	0xFFA
 38162                           tblptru	equ	0xFF8
 38163                           tblptrh	equ	0xFF7
 38164                           tblptrl	equ	0xFF6
 38165                           tablat	equ	0xFF5
 38166                           prodh	equ	0xFF4
 38167                           prodl	equ	0xFF3
 38168                           intcon	equ	0xFF2
 38169                           intcon2	equ	0xFF1
 38170                           intcon3	equ	0xFF0
 38171                           indf0	equ	0xFEF
 38172                           postinc0	equ	0xFEE
 38173                           plusw0	equ	0xFEB
 38174                           fsr0h	equ	0xFEA
 38175                           fsr0l	equ	0xFE9
 38176                           wreg	equ	0xFE8
 38177                           postinc1	equ	0xFE6
 38178                           postdec1	equ	0xFE5
 38179                           plusw1	equ	0xFE3
 38180                           fsr1h	equ	0xFE2
 38181                           fsr1l	equ	0xFE1
 38182                           indf2	equ	0xFDF
 38183                           postinc2	equ	0xFDE
 38184                           postdec2	equ	0xFDD
 38185                           plusw2	equ	0xFDB
 38186                           fsr2h	equ	0xFDA
 38187                           fsr2l	equ	0xFD9
 38188                           status	equ	0xFD8
 38189                           
 38190 ;; *************** function _TMR_ISR_lora *****************
 38191 ;; Defined at:
 38192 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38193 ;; Parameters:    Size  Location     Type
 38194 ;;		None
 38195 ;; Auto vars:     Size  Location     Type
 38196 ;;		None
 38197 ;; Return value:  Size  Location     Type
 38198 ;;                  1    wreg      void 
 38199 ;; Registers used:
 38200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38201 ;; Tracked objects:
 38202 ;;		On entry : F/1
 38203 ;;		On exit  : 0/0
 38204 ;;		Unchanged: 0/0
 38205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38210 ;;Total ram usage:        0 bytes
 38211 ;; Hardware stack levels used:    1
 38212 ;; Hardware stack levels required when called:    3
 38213 ;; This function calls:
 38214 ;;		i2_SwTimersInterrupt
 38215 ;;		i2_TMR_SwapTimer
 38216 ;; This function is called by:
 38217 ;;		_TMR_ISR_Lora_Init
 38218 ;;		_TMR1_CallBack
 38219 ;; This function uses a non-reentrant model
 38220 ;;
 38221                           
 38222                           	psect	text211
 38223  006A36                     __ptext211:
 38224                           	opt stack 0
 38225  006A36                     _TMR_ISR_lora:
 38226                           	opt stack 12
 38227                           
 38228                           ; BSR set to: 1
 38229                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38230                           
 38231                           ; BSR set to: 1
 38232                           ;incstack = 0
 38233  006A36  0E01               	movlw	1
 38234  006A38  0100               	movlb	0	; () banked
 38235  006A3A  6FF2               	movwf	_timerOverflow& (0+255),b	;volatile
 38236                           
 38237                           ; BSR set to: 0
 38238                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38239  006A3C  EC0B  F027         	call	i2_SwTimersInterrupt	;wreg free
 38240  006A40  C019  F056         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38241  006A44  C01A  F057         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38242  006A48  C01B  F058         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38243  006A4C  C01C  F059         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38244                           
 38245                           ; BSR set to: 0
 38246                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38247  006A50  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38248  006A52  E117               	bnz	i2l242
 38249  006A54  0458               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38250  006A56  B0D8               	btfsc	status,0,c
 38251  006A58  0012               	return	
 38252                           
 38253                           ; BSR set to: 0
 38254                           ;tmr_lora_addons.c: 66: {
 38255                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38256  006A5A  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38257  006A5C  0800               	sublw	0
 38258  006A5E  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 38259  006A60  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38260  006A62  A0D8               	btfss	status,0,c
 38261  006A64  2AE8               	incf	wreg,f,c
 38262  006A66  0800               	sublw	0
 38263  006A68  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38264                           
 38265                           ; BSR set to: 0
 38266                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38267  006A6A  C0EC  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38268  006A6E  C0ED  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38269  006A72  ECDE  F036         	call	i2_TMR_SwapTimer	;wreg free
 38270  006A76  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38271  006A7A  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38272  006A7E  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38273  006A80  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38274  006A82                     i2l242:
 38275  006A82  0012               	return		;funcret
 38276  006A84                     __end_of_TMR_ISR_lora:
 38277                           	opt stack 0
 38278                           tosu	equ	0xFFF
 38279                           tosh	equ	0xFFE
 38280                           tosl	equ	0xFFD
 38281                           pclatu	equ	0xFFB
 38282                           pclath	equ	0xFFA
 38283                           tblptru	equ	0xFF8
 38284                           tblptrh	equ	0xFF7
 38285                           tblptrl	equ	0xFF6
 38286                           tablat	equ	0xFF5
 38287                           prodh	equ	0xFF4
 38288                           prodl	equ	0xFF3
 38289                           intcon	equ	0xFF2
 38290                           intcon2	equ	0xFF1
 38291                           intcon3	equ	0xFF0
 38292                           indf0	equ	0xFEF
 38293                           postinc0	equ	0xFEE
 38294                           plusw0	equ	0xFEB
 38295                           fsr0h	equ	0xFEA
 38296                           fsr0l	equ	0xFE9
 38297                           wreg	equ	0xFE8
 38298                           postinc1	equ	0xFE6
 38299                           postdec1	equ	0xFE5
 38300                           plusw1	equ	0xFE3
 38301                           fsr1h	equ	0xFE2
 38302                           fsr1l	equ	0xFE1
 38303                           indf2	equ	0xFDF
 38304                           postinc2	equ	0xFDE
 38305                           postdec2	equ	0xFDD
 38306                           plusw2	equ	0xFDB
 38307                           fsr2h	equ	0xFDA
 38308                           fsr2l	equ	0xFD9
 38309                           status	equ	0xFD8
 38310                           
 38311 ;; *************** function i2_TMR_SwapTimer *****************
 38312 ;; Defined at:
 38313 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38314 ;; Parameters:    Size  Location     Type
 38315 ;;  timerVal        2    8[COMRAM] unsigned int 
 38316 ;; Auto vars:     Size  Location     Type
 38317 ;;		None
 38318 ;; Return value:  Size  Location     Type
 38319 ;;                  2    8[COMRAM] unsigned int 
 38320 ;; Registers used:
 38321 ;;		wreg, status,2, status,0, cstack
 38322 ;; Tracked objects:
 38323 ;;		On entry : F/0
 38324 ;;		On exit  : 0/0
 38325 ;;		Unchanged: 0/0
 38326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38331 ;;Total ram usage:        2 bytes
 38332 ;; Hardware stack levels used:    1
 38333 ;; Hardware stack levels required when called:    1
 38334 ;; This function calls:
 38335 ;;		i2_TMR1_ReadTimer
 38336 ;;		i2_TMR1_WriteTimer
 38337 ;; This function is called by:
 38338 ;;		_TMR_ISR_lora
 38339 ;; This function uses a non-reentrant model
 38340 ;;
 38341                           
 38342                           	psect	text212
 38343  006DBC                     __ptext212:
 38344                           	opt stack 0
 38345  006DBC                     i2_TMR_SwapTimer:
 38346                           	opt stack 13
 38347                           
 38348                           ; BSR set to: 0
 38349                           ;sw_timer.c: 114: static uint16_t oldVal;
 38350                           ;sw_timer.c: 115: static uint16_t retVal;
 38351                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38352                           
 38353                           ;incstack = 0
 38354  006DBC  EC48  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38355  006DC0  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38356  006DC4  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38357  006DC8                     i2l10595:
 38358  006DC8  EC48  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38359  006DCC  5040               	movf	TMR_SwapTimer@oldVal,w,c
 38360  006DCE  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38361  006DD0  E103               	bnz	i2u1093_40
 38362  006DD2  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 38363  006DD4  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38364  006DD6  E0F8               	bz	i2l10595
 38365  006DD8                     i2u1093_40:
 38366                           
 38367                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38368  006DD8  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38369  006DDC  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38370  006DE0  EC8F  F03A         	call	i2_TMR1_WriteTimer	;wreg free
 38371                           
 38372                           ;sw_timer.c: 128: oldVal++;
 38373  006DE4  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 38374  006DE6  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 38375                           
 38376                           ;sw_timer.c: 130: retVal = oldVal;
 38377  006DE8  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38378  006DEC  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38379                           
 38380                           ;sw_timer.c: 132: return retVal;
 38381  006DF0  C042  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38382  006DF4  C043  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38383  006DF8  0012               	return		;funcret
 38384  006DFA                     __end_ofi2_TMR_SwapTimer:
 38385                           	opt stack 0
 38386                           tosu	equ	0xFFF
 38387                           tosh	equ	0xFFE
 38388                           tosl	equ	0xFFD
 38389                           pclatu	equ	0xFFB
 38390                           pclath	equ	0xFFA
 38391                           tblptru	equ	0xFF8
 38392                           tblptrh	equ	0xFF7
 38393                           tblptrl	equ	0xFF6
 38394                           tablat	equ	0xFF5
 38395                           prodh	equ	0xFF4
 38396                           prodl	equ	0xFF3
 38397                           intcon	equ	0xFF2
 38398                           intcon2	equ	0xFF1
 38399                           intcon3	equ	0xFF0
 38400                           indf0	equ	0xFEF
 38401                           postinc0	equ	0xFEE
 38402                           plusw0	equ	0xFEB
 38403                           fsr0h	equ	0xFEA
 38404                           fsr0l	equ	0xFE9
 38405                           wreg	equ	0xFE8
 38406                           postinc1	equ	0xFE6
 38407                           postdec1	equ	0xFE5
 38408                           plusw1	equ	0xFE3
 38409                           fsr1h	equ	0xFE2
 38410                           fsr1l	equ	0xFE1
 38411                           indf2	equ	0xFDF
 38412                           postinc2	equ	0xFDE
 38413                           postdec2	equ	0xFDD
 38414                           plusw2	equ	0xFDB
 38415                           fsr2h	equ	0xFDA
 38416                           fsr2l	equ	0xFD9
 38417                           status	equ	0xFD8
 38418                           
 38419 ;; *************** function i2_TMR1_WriteTimer *****************
 38420 ;; Defined at:
 38421 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38422 ;; Parameters:    Size  Location     Type
 38423 ;;  timerVal        2    0[COMRAM] unsigned int 
 38424 ;; Auto vars:     Size  Location     Type
 38425 ;;		None
 38426 ;; Return value:  Size  Location     Type
 38427 ;;                  1    wreg      void 
 38428 ;; Registers used:
 38429 ;;		None
 38430 ;; Tracked objects:
 38431 ;;		On entry : 0/0
 38432 ;;		On exit  : 0/0
 38433 ;;		Unchanged: 0/0
 38434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38439 ;;Total ram usage:        2 bytes
 38440 ;; Hardware stack levels used:    1
 38441 ;; This function calls:
 38442 ;;		Nothing
 38443 ;; This function is called by:
 38444 ;;		i2_TMR_SwapTimer
 38445 ;; This function uses a non-reentrant model
 38446 ;;
 38447                           
 38448                           	psect	text213
 38449  00751E                     __ptext213:
 38450                           	opt stack 0
 38451  00751E                     i2_TMR1_WriteTimer:
 38452                           	opt stack 13
 38453                           
 38454                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38455                           
 38456                           ;incstack = 0
 38457  00751E  A4CD               	btfss	4045,2,c	;volatile
 38458  007520  D007               	goto	i2l1347
 38459                           
 38460                           ;tmr1.c: 123: {
 38461                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38462  007522  90CD               	bcf	4045,0,c	;volatile
 38463                           
 38464                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38465  007524  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38466                           
 38467                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38468  007528  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38469                           
 38470                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38471  00752C  80CD               	bsf	4045,0,c	;volatile
 38472                           
 38473                           ;tmr1.c: 133: }
 38474  00752E  0012               	return	
 38475  007530                     i2l1347:
 38476                           
 38477                           ;tmr1.c: 134: else
 38478                           ;tmr1.c: 135: {
 38479                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 38480  007530  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38481                           
 38482                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 38483  007534  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38484  007538  0012               	return		;funcret
 38485  00753A                     __end_ofi2_TMR1_WriteTimer:
 38486                           	opt stack 0
 38487                           tosu	equ	0xFFF
 38488                           tosh	equ	0xFFE
 38489                           tosl	equ	0xFFD
 38490                           pclatu	equ	0xFFB
 38491                           pclath	equ	0xFFA
 38492                           tblptru	equ	0xFF8
 38493                           tblptrh	equ	0xFF7
 38494                           tblptrl	equ	0xFF6
 38495                           tablat	equ	0xFF5
 38496                           prodh	equ	0xFF4
 38497                           prodl	equ	0xFF3
 38498                           intcon	equ	0xFF2
 38499                           intcon2	equ	0xFF1
 38500                           intcon3	equ	0xFF0
 38501                           indf0	equ	0xFEF
 38502                           postinc0	equ	0xFEE
 38503                           plusw0	equ	0xFEB
 38504                           fsr0h	equ	0xFEA
 38505                           fsr0l	equ	0xFE9
 38506                           wreg	equ	0xFE8
 38507                           postinc1	equ	0xFE6
 38508                           postdec1	equ	0xFE5
 38509                           plusw1	equ	0xFE3
 38510                           fsr1h	equ	0xFE2
 38511                           fsr1l	equ	0xFE1
 38512                           indf2	equ	0xFDF
 38513                           postinc2	equ	0xFDE
 38514                           postdec2	equ	0xFDD
 38515                           plusw2	equ	0xFDB
 38516                           fsr2h	equ	0xFDA
 38517                           fsr2l	equ	0xFD9
 38518                           status	equ	0xFD8
 38519                           
 38520 ;; *************** function i2_SwTimersInterrupt *****************
 38521 ;; Defined at:
 38522 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38523 ;; Parameters:    Size  Location     Type
 38524 ;;		None
 38525 ;; Auto vars:     Size  Location     Type
 38526 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 38527 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 38528 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 38529 ;; Return value:  Size  Location     Type
 38530 ;;                  4   24[COMRAM] unsigned long 
 38531 ;; Registers used:
 38532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38533 ;; Tracked objects:
 38534 ;;		On entry : F/0
 38535 ;;		On exit  : F/0
 38536 ;;		Unchanged: 0/0
 38537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38539 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38541 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38542 ;;Total ram usage:       17 bytes
 38543 ;; Hardware stack levels used:    1
 38544 ;; Hardware stack levels required when called:    2
 38545 ;; This function calls:
 38546 ;;		i2_TMR_GetDeltaTime
 38547 ;; This function is called by:
 38548 ;;		_TMR_ISR_lora
 38549 ;; This function uses a non-reentrant model
 38550 ;;
 38551                           
 38552                           	psect	text214
 38553  004E16                     __ptext214:
 38554                           	opt stack 0
 38555  004E16                     i2_SwTimersInterrupt:
 38556                           	opt stack 12
 38557                           
 38558                           ; BSR set to: 0
 38559                           ;sw_timer.c: 289: uint8_t i;
 38560                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38561                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38562                           
 38563                           ;incstack = 0
 38564  004E16  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38565  004E18  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38566  004E1A  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38567  004E1C  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38568                           
 38569                           ; BSR set to: 0
 38570                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38571  004E1E  EC1E  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 38572  004E22  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38573  004E26  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38574  004E2A  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38575  004E2E  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38576                           
 38577                           ; BSR set to: 0
 38578                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38579  004E32  6A29               	clrf	i2SwTimersInterrupt@i,c
 38580  004E34  D05A               	goto	i2l10625
 38581  004E36                     i2l10613:
 38582                           
 38583                           ; BSR set to: 0
 38584                           ;sw_timer.c: 298: {
 38585                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38586  004E36  5029               	movf	i2SwTimersInterrupt@i,w,c
 38587  004E38  0D08               	mullw	8
 38588  004E3A  0E04               	movlw	low (_swTimers+4)
 38589  004E3C  24F3               	addwf	prodl,w,c
 38590  004E3E  6ED9               	movwf	fsr2l,c
 38591  004E40  0E03               	movlw	high (_swTimers+4)
 38592  004E42  20F4               	addwfc	prodh,w,c
 38593  004E44  6EDA               	movwf	fsr2h,c
 38594  004E46  04DE               	decf	postinc2,w,c
 38595  004E48  E14F               	bnz	i2l10623
 38596                           
 38597                           ; BSR set to: 0
 38598                           ;sw_timer.c: 302: {
 38599                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38600  004E4A  5029               	movf	i2SwTimersInterrupt@i,w,c
 38601  004E4C  0D08               	mullw	8
 38602  004E4E  0E00               	movlw	low _swTimers
 38603  004E50  24F3               	addwf	prodl,w,c
 38604  004E52  6ED9               	movwf	fsr2l,c
 38605  004E54  0E03               	movlw	high _swTimers
 38606  004E56  20F4               	addwfc	prodh,w,c
 38607  004E58  6EDA               	movwf	fsr2h,c
 38608  004E5A  50DE               	movf	postinc2,w,c
 38609  004E5C  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38610  004E5E  50DE               	movf	postinc2,w,c
 38611  004E60  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38612  004E62  50DE               	movf	postinc2,w,c
 38613  004E64  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38614  004E66  50DE               	movf	postinc2,w,c
 38615  004E68  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38616  004E6A  E30D               	bnc	i2l10619
 38617                           
 38618                           ; BSR set to: 0
 38619                           ;sw_timer.c: 304: {
 38620                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38621  004E6C  5029               	movf	i2SwTimersInterrupt@i,w,c
 38622  004E6E  0D08               	mullw	8
 38623  004E70  0E00               	movlw	low _swTimers
 38624  004E72  24F3               	addwf	prodl,w,c
 38625  004E74  6ED9               	movwf	fsr2l,c
 38626  004E76  0E03               	movlw	high _swTimers
 38627  004E78  20F4               	addwfc	prodh,w,c
 38628  004E7A  6EDA               	movwf	fsr2h,c
 38629  004E7C  6ADE               	clrf	postinc2,c
 38630  004E7E  6ADE               	clrf	postinc2,c
 38631  004E80  6ADE               	clrf	postinc2,c
 38632  004E82  6ADD               	clrf	postdec2,c
 38633                           
 38634                           ;sw_timer.c: 306: }
 38635  004E84  D031               	goto	i2l10623
 38636  004E86                     i2l10619:
 38637                           
 38638                           ; BSR set to: 0
 38639                           ;sw_timer.c: 307: else
 38640                           ;sw_timer.c: 308: {
 38641                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38642  004E86  5029               	movf	i2SwTimersInterrupt@i,w,c
 38643  004E88  0D08               	mullw	8
 38644  004E8A  0E00               	movlw	low _swTimers
 38645  004E8C  24F3               	addwf	prodl,w,c
 38646  004E8E  6ED9               	movwf	fsr2l,c
 38647  004E90  0E03               	movlw	high _swTimers
 38648  004E92  20F4               	addwfc	prodh,w,c
 38649  004E94  6EDA               	movwf	fsr2h,c
 38650  004E96  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38651  004E98  5EDE               	subwf	postinc2,f,c
 38652  004E9A  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38653  004E9C  5ADE               	subwfb	postinc2,f,c
 38654  004E9E  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38655  004EA0  5ADE               	subwfb	postinc2,f,c
 38656  004EA2  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38657  004EA4  5ADE               	subwfb	postinc2,f,c
 38658                           
 38659                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38660  004EA6  5029               	movf	i2SwTimersInterrupt@i,w,c
 38661  004EA8  0D08               	mullw	8
 38662  004EAA  0E00               	movlw	low _swTimers
 38663  004EAC  24F3               	addwf	prodl,w,c
 38664  004EAE  6ED9               	movwf	fsr2l,c
 38665  004EB0  0E03               	movlw	high _swTimers
 38666  004EB2  20F4               	addwfc	prodh,w,c
 38667  004EB4  6EDA               	movwf	fsr2h,c
 38668  004EB6  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38669  004EB8  5CDE               	subwf	postinc2,w,c
 38670  004EBA  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38671  004EBC  58DE               	subwfb	postinc2,w,c
 38672  004EBE  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38673  004EC0  58DE               	subwfb	postinc2,w,c
 38674  004EC2  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38675  004EC4  58DE               	subwfb	postinc2,w,c
 38676  004EC6  E210               	bc	i2l10623
 38677                           
 38678                           ; BSR set to: 0
 38679                           ;sw_timer.c: 313: {
 38680                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38681  004EC8  5029               	movf	i2SwTimersInterrupt@i,w,c
 38682  004ECA  0D08               	mullw	8
 38683  004ECC  0E00               	movlw	low _swTimers
 38684  004ECE  24F3               	addwf	prodl,w,c
 38685  004ED0  6ED9               	movwf	fsr2l,c
 38686  004ED2  0E03               	movlw	high _swTimers
 38687  004ED4  20F4               	addwfc	prodh,w,c
 38688  004ED6  6EDA               	movwf	fsr2h,c
 38689  004ED8  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38690  004EDC  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38691  004EE0  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38692  004EE4  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38693  004EE8                     i2l10623:
 38694                           
 38695                           ; BSR set to: 0
 38696  004EE8  2A29               	incf	i2SwTimersInterrupt@i,f,c
 38697  004EEA                     i2l10625:
 38698                           
 38699                           ; BSR set to: 0
 38700  004EEA  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38701  004EEC  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 38702  004EEE  E3A3               	bnc	i2l10613
 38703                           
 38704                           ; BSR set to: 0
 38705                           ;sw_timer.c: 315: }
 38706                           ;sw_timer.c: 316: }
 38707                           ;sw_timer.c: 317: }
 38708                           ;sw_timer.c: 318: }
 38709                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38710  004EF0  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38711  004EF4  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38712  004EF8  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38713  004EFC  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38714                           
 38715                           ; BSR set to: 0
 38716  004F00  0012               	return		;funcret
 38717  004F02                     __end_ofi2_SwTimersInterrupt:
 38718                           	opt stack 0
 38719                           tosu	equ	0xFFF
 38720                           tosh	equ	0xFFE
 38721                           tosl	equ	0xFFD
 38722                           pclatu	equ	0xFFB
 38723                           pclath	equ	0xFFA
 38724                           tblptru	equ	0xFF8
 38725                           tblptrh	equ	0xFF7
 38726                           tblptrl	equ	0xFF6
 38727                           tablat	equ	0xFF5
 38728                           prodh	equ	0xFF4
 38729                           prodl	equ	0xFF3
 38730                           intcon	equ	0xFF2
 38731                           intcon2	equ	0xFF1
 38732                           intcon3	equ	0xFF0
 38733                           indf0	equ	0xFEF
 38734                           postinc0	equ	0xFEE
 38735                           plusw0	equ	0xFEB
 38736                           fsr0h	equ	0xFEA
 38737                           fsr0l	equ	0xFE9
 38738                           wreg	equ	0xFE8
 38739                           postinc1	equ	0xFE6
 38740                           postdec1	equ	0xFE5
 38741                           plusw1	equ	0xFE3
 38742                           fsr1h	equ	0xFE2
 38743                           fsr1l	equ	0xFE1
 38744                           indf2	equ	0xFDF
 38745                           postinc2	equ	0xFDE
 38746                           postdec2	equ	0xFDD
 38747                           plusw2	equ	0xFDB
 38748                           fsr2h	equ	0xFDA
 38749                           fsr2l	equ	0xFD9
 38750                           status	equ	0xFD8
 38751                           
 38752 ;; *************** function i2_TMR_GetDeltaTime *****************
 38753 ;; Defined at:
 38754 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38755 ;; Parameters:    Size  Location     Type
 38756 ;;		None
 38757 ;; Auto vars:     Size  Location     Type
 38758 ;;		None
 38759 ;; Return value:  Size  Location     Type
 38760 ;;                  4    8[COMRAM] unsigned long 
 38761 ;; Registers used:
 38762 ;;		wreg, status,2, status,0, cstack
 38763 ;; Tracked objects:
 38764 ;;		On entry : F/0
 38765 ;;		On exit  : F/0
 38766 ;;		Unchanged: 0/0
 38767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38770 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38771 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38772 ;;Total ram usage:       16 bytes
 38773 ;; Hardware stack levels used:    1
 38774 ;; Hardware stack levels required when called:    1
 38775 ;; This function calls:
 38776 ;;		i2_TMR1_ReadTimer
 38777 ;; This function is called by:
 38778 ;;		i2_SwTimersInterrupt
 38779 ;; This function uses a non-reentrant model
 38780 ;;
 38781                           
 38782                           	psect	text215
 38783  004C3C                     __ptext215:
 38784                           	opt stack 0
 38785  004C3C                     i2_TMR_GetDeltaTime:
 38786                           	opt stack 12
 38787                           
 38788                           ; BSR set to: 0
 38789                           ;sw_timer.c: 90: static uint32_t retVal;
 38790                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38791                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38792                           
 38793                           ; BSR set to: 0
 38794                           ;incstack = 0
 38795  004C3C  EC48  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38796  004C40  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38797  004C44  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38798                           
 38799                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38800  004C48  0100               	movlb	0	; () banked
 38801  004C4A  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 38802  004C4C  E13D               	bnz	i2l9931
 38803                           
 38804                           ; BSR set to: 0
 38805                           ;sw_timer.c: 96: {
 38806                           ;sw_timer.c: 97: timerOverflow = 0;
 38807  004C4E  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 38808                           
 38809                           ; BSR set to: 0
 38810                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38811  004C50  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38812  004C52  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38813  004C54  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38814  004C56  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38815  004C58  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38816  004C5A  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38817  004C5C  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38818  004C5E  A0D8               	btfss	status,0,c
 38819  004C60  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 38820  004C62  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 38821  004C64  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38822  004C66  5036               	movf	_ticksAccounted,w,c	;volatile
 38823  004C68  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38824  004C6A  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38825  004C6C  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38826  004C6E  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38827  004C70  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38828  004C72  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38829  004C74  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38830  004C76  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38831  004C78  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38832  004C7A  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38833  004C7C  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38834  004C7E  503A               	movf	_ticksAdded,w,c	;volatile
 38835  004C80  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38836  004C82  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 38837  004C84  503B               	movf	_ticksAdded+1,w,c	;volatile
 38838  004C86  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38839  004C88  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 38840  004C8A  503C               	movf	_ticksAdded+2,w,c	;volatile
 38841  004C8C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38842  004C8E  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 38843  004C90  503D               	movf	_ticksAdded+3,w,c	;volatile
 38844  004C92  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38845  004C94  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 38846  004C96  0E00               	movlw	0
 38847  004C98  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 38848  004C9A  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 38849  004C9C  0E00               	movlw	0
 38850  004C9E  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 38851  004CA0  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 38852  004CA2  0E01               	movlw	1
 38853  004CA4  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 38854  004CA6  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 38855  004CA8  0E00               	movlw	0
 38856  004CAA  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 38857  004CAC  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 38858                           
 38859                           ; BSR set to: 0
 38860                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38861  004CAE  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38862  004CB2  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38863  004CB6  6A38               	clrf	_ticksAccounted+2,c	;volatile
 38864  004CB8  6A39               	clrf	_ticksAccounted+3,c	;volatile
 38865                           
 38866                           ; BSR set to: 0
 38867                           ;sw_timer.c: 100: ticksAdded = 0;
 38868  004CBA  6A3A               	clrf	_ticksAdded,c	;volatile
 38869  004CBC  6A3B               	clrf	_ticksAdded+1,c	;volatile
 38870  004CBE  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38871  004CC0  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38872                           
 38873                           ; BSR set to: 0
 38874                           ;sw_timer.c: 101: reloadVal = 0;
 38875  004CC2  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 38876  004CC4  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 38877                           
 38878                           ;sw_timer.c: 102: }
 38879  004CC6  D028               	goto	i2l9933
 38880  004CC8                     i2l9931:
 38881                           
 38882                           ; BSR set to: 0
 38883                           ;sw_timer.c: 103: else
 38884                           ;sw_timer.c: 104: {
 38885                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38886  004CC8  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38887  004CCA  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38888  004CCC  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38889  004CCE  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38890  004CD0  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38891  004CD2  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38892  004CD4  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38893  004CD6  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38894  004CD8  5036               	movf	_ticksAccounted,w,c	;volatile
 38895  004CDA  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38896  004CDC  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38897  004CDE  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38898  004CE0  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38899  004CE2  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38900  004CE4  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38901  004CE6  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38902  004CE8  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38903  004CEA  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38904  004CEC  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38905  004CEE  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38906  004CF0  503A               	movf	_ticksAdded,w,c	;volatile
 38907  004CF2  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38908  004CF4  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 38909  004CF6  503B               	movf	_ticksAdded+1,w,c	;volatile
 38910  004CF8  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38911  004CFA  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 38912  004CFC  503C               	movf	_ticksAdded+2,w,c	;volatile
 38913  004CFE  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38914  004D00  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 38915  004D02  503D               	movf	_ticksAdded+3,w,c	;volatile
 38916  004D04  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38917  004D06  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 38918                           
 38919                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38920  004D08  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 38921  004D0A  2636               	addwf	_ticksAccounted,f,c	;volatile
 38922  004D0C  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 38923  004D0E  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 38924  004D10  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 38925  004D12  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 38926  004D14  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 38927  004D16  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 38928  004D18                     i2l9933:
 38929                           
 38930                           ; BSR set to: 0
 38931                           ;sw_timer.c: 107: }
 38932                           ;sw_timer.c: 109: return retVal;
 38933  004D18  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 38934  004D1C  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 38935  004D20  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 38936  004D24  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 38937                           
 38938                           ; BSR set to: 0
 38939  004D28  0012               	return		;funcret
 38940  004D2A                     __end_ofi2_TMR_GetDeltaTime:
 38941                           	opt stack 0
 38942                           tosu	equ	0xFFF
 38943                           tosh	equ	0xFFE
 38944                           tosl	equ	0xFFD
 38945                           pclatu	equ	0xFFB
 38946                           pclath	equ	0xFFA
 38947                           tblptru	equ	0xFF8
 38948                           tblptrh	equ	0xFF7
 38949                           tblptrl	equ	0xFF6
 38950                           tablat	equ	0xFF5
 38951                           prodh	equ	0xFF4
 38952                           prodl	equ	0xFF3
 38953                           intcon	equ	0xFF2
 38954                           intcon2	equ	0xFF1
 38955                           intcon3	equ	0xFF0
 38956                           indf0	equ	0xFEF
 38957                           postinc0	equ	0xFEE
 38958                           plusw0	equ	0xFEB
 38959                           fsr0h	equ	0xFEA
 38960                           fsr0l	equ	0xFE9
 38961                           wreg	equ	0xFE8
 38962                           postinc1	equ	0xFE6
 38963                           postdec1	equ	0xFE5
 38964                           plusw1	equ	0xFE3
 38965                           fsr1h	equ	0xFE2
 38966                           fsr1l	equ	0xFE1
 38967                           indf2	equ	0xFDF
 38968                           postinc2	equ	0xFDE
 38969                           postdec2	equ	0xFDD
 38970                           plusw2	equ	0xFDB
 38971                           fsr2h	equ	0xFDA
 38972                           fsr2l	equ	0xFD9
 38973                           status	equ	0xFD8
 38974                           
 38975 ;; *************** function i2_TMR1_ReadTimer *****************
 38976 ;; Defined at:
 38977 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 38978 ;; Parameters:    Size  Location     Type
 38979 ;;		None
 38980 ;; Auto vars:     Size  Location     Type
 38981 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 38982 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 38983 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 38984 ;; Return value:  Size  Location     Type
 38985 ;;                  2    0[COMRAM] unsigned int 
 38986 ;; Registers used:
 38987 ;;		wreg, status,2
 38988 ;; Tracked objects:
 38989 ;;		On entry : 0/0
 38990 ;;		On exit  : 0/0
 38991 ;;		Unchanged: 0/0
 38992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38994 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38997 ;;Total ram usage:        8 bytes
 38998 ;; Hardware stack levels used:    1
 38999 ;; This function calls:
 39000 ;;		Nothing
 39001 ;; This function is called by:
 39002 ;;		i2_TMR_GetDeltaTime
 39003 ;;		i2_TMR_SwapTimer
 39004 ;; This function uses a non-reentrant model
 39005 ;;
 39006                           
 39007                           	psect	text216
 39008  007490                     __ptext216:
 39009                           	opt stack 0
 39010  007490                     i2_TMR1_ReadTimer:
 39011                           	opt stack 13
 39012                           
 39013                           ;tmr1.c: 108: uint16_t readVal;
 39014                           ;tmr1.c: 109: uint8_t readValHigh;
 39015                           ;tmr1.c: 110: uint8_t readValLow;
 39016                           ;tmr1.c: 112: readValLow = TMR1L;
 39017                           
 39018                           ; BSR set to: 0
 39019                           ;incstack = 0
 39020  007490  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39021                           
 39022                           ;tmr1.c: 113: readValHigh = TMR1H;
 39023  007494  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39024                           
 39025                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39026  007498  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39027  00749A  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39028  00749C  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39029  00749E  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39030  0074A0  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39031                           
 39032                           ;tmr1.c: 117: return readVal;
 39033  0074A4  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39034  0074A8  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39035  0074AC  0012               	return		;funcret
 39036  0074AE                     __end_ofi2_TMR1_ReadTimer:
 39037                           	opt stack 0
 39038                           tosu	equ	0xFFF
 39039                           tosh	equ	0xFFE
 39040                           tosl	equ	0xFFD
 39041                           pclatu	equ	0xFFB
 39042                           pclath	equ	0xFFA
 39043                           tblptru	equ	0xFF8
 39044                           tblptrh	equ	0xFF7
 39045                           tblptrl	equ	0xFF6
 39046                           tablat	equ	0xFF5
 39047                           prodh	equ	0xFF4
 39048                           prodl	equ	0xFF3
 39049                           intcon	equ	0xFF2
 39050                           intcon2	equ	0xFF1
 39051                           intcon3	equ	0xFF0
 39052                           indf0	equ	0xFEF
 39053                           postinc0	equ	0xFEE
 39054                           plusw0	equ	0xFEB
 39055                           fsr0h	equ	0xFEA
 39056                           fsr0l	equ	0xFE9
 39057                           wreg	equ	0xFE8
 39058                           postinc1	equ	0xFE6
 39059                           postdec1	equ	0xFE5
 39060                           plusw1	equ	0xFE3
 39061                           fsr1h	equ	0xFE2
 39062                           fsr1l	equ	0xFE1
 39063                           indf2	equ	0xFDF
 39064                           postinc2	equ	0xFDE
 39065                           postdec2	equ	0xFDD
 39066                           plusw2	equ	0xFDB
 39067                           fsr2h	equ	0xFDA
 39068                           fsr2l	equ	0xFD9
 39069                           status	equ	0xFD8
 39070                           
 39071 ;; *************** function _PIN_MANAGER_IOC *****************
 39072 ;; Defined at:
 39073 ;;		line 103 in file "mcc_generated_files/pin_manager.c"
 39074 ;; Parameters:    Size  Location     Type
 39075 ;;		None
 39076 ;; Auto vars:     Size  Location     Type
 39077 ;;		None
 39078 ;; Return value:  Size  Location     Type
 39079 ;;                  1    wreg      void 
 39080 ;; Registers used:
 39081 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39082 ;; Tracked objects:
 39083 ;;		On entry : 0/0
 39084 ;;		On exit  : 0/0
 39085 ;;		Unchanged: 0/0
 39086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39091 ;;Total ram usage:        0 bytes
 39092 ;; Hardware stack levels used:    1
 39093 ;; Hardware stack levels required when called:    2
 39094 ;; This function calls:
 39095 ;;		_IOCB4_ISR
 39096 ;; This function is called by:
 39097 ;;		_INTERRUPT_InterruptManager
 39098 ;; This function uses a non-reentrant model
 39099 ;;
 39100                           
 39101                           	psect	text217
 39102  007818                     __ptext217:
 39103                           	opt stack 0
 39104  007818                     _PIN_MANAGER_IOC:
 39105                           	opt stack 15
 39106                           
 39107                           ;pin_manager.c: 106: if(IOCBbits.IOCB4 == 1)
 39108                           
 39109                           ;incstack = 0
 39110  007818  B862               	btfsc	3938,4,c	;volatile
 39111                           
 39112                           ;pin_manager.c: 107: {
 39113                           ;pin_manager.c: 108: IOCB4_ISR();
 39114  00781A  EC9D  F03A         	call	_IOCB4_ISR	;wreg free
 39115                           
 39116                           ;pin_manager.c: 109: }
 39117                           ;pin_manager.c: 112: INTCONbits.RBIF = 0;
 39118  00781E  90F2               	bcf	intcon,0,c	;volatile
 39119  007820  0012               	return		;funcret
 39120  007822                     __end_of_PIN_MANAGER_IOC:
 39121                           	opt stack 0
 39122                           tosu	equ	0xFFF
 39123                           tosh	equ	0xFFE
 39124                           tosl	equ	0xFFD
 39125                           pclatu	equ	0xFFB
 39126                           pclath	equ	0xFFA
 39127                           tblptru	equ	0xFF8
 39128                           tblptrh	equ	0xFF7
 39129                           tblptrl	equ	0xFF6
 39130                           tablat	equ	0xFF5
 39131                           prodh	equ	0xFF4
 39132                           prodl	equ	0xFF3
 39133                           intcon	equ	0xFF2
 39134                           intcon2	equ	0xFF1
 39135                           intcon3	equ	0xFF0
 39136                           indf0	equ	0xFEF
 39137                           postinc0	equ	0xFEE
 39138                           plusw0	equ	0xFEB
 39139                           fsr0h	equ	0xFEA
 39140                           fsr0l	equ	0xFE9
 39141                           wreg	equ	0xFE8
 39142                           postinc1	equ	0xFE6
 39143                           postdec1	equ	0xFE5
 39144                           plusw1	equ	0xFE3
 39145                           fsr1h	equ	0xFE2
 39146                           fsr1l	equ	0xFE1
 39147                           indf2	equ	0xFDF
 39148                           postinc2	equ	0xFDE
 39149                           postdec2	equ	0xFDD
 39150                           plusw2	equ	0xFDB
 39151                           fsr2h	equ	0xFDA
 39152                           fsr2l	equ	0xFD9
 39153                           status	equ	0xFD8
 39154                           
 39155 ;; *************** function _IOCB4_ISR *****************
 39156 ;; Defined at:
 39157 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 39158 ;; Parameters:    Size  Location     Type
 39159 ;;		None
 39160 ;; Auto vars:     Size  Location     Type
 39161 ;;		None
 39162 ;; Return value:  Size  Location     Type
 39163 ;;                  1    wreg      void 
 39164 ;; Registers used:
 39165 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39166 ;; Tracked objects:
 39167 ;;		On entry : 0/0
 39168 ;;		On exit  : 0/0
 39169 ;;		Unchanged: 0/0
 39170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39175 ;;Total ram usage:        0 bytes
 39176 ;; Hardware stack levels used:    1
 39177 ;; Hardware stack levels required when called:    1
 39178 ;; This function calls:
 39179 ;;		Absolute function
 39180 ;;		_DIO2_ISR_Lora
 39181 ;;		_IOCB4_DefaultInterruptHandler
 39182 ;; This function is called by:
 39183 ;;		_PIN_MANAGER_IOC
 39184 ;; This function uses a non-reentrant model
 39185 ;;
 39186                           
 39187                           	psect	text218
 39188  00753A                     __ptext218:
 39189                           	opt stack 0
 39190  00753A                     _IOCB4_ISR:
 39191                           	opt stack 15
 39192                           
 39193                           ;pin_manager.c: 124: if(IOCB4_InterruptHandler)
 39194                           
 39195                           ;incstack = 0
 39196  00753A  0101               	movlb	1	; () banked
 39197  00753C  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39198  00753E  11FB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39199  007540  B4D8               	btfsc	status,2,c
 39200  007542  0012               	return	
 39201                           
 39202                           ; BSR set to: 1
 39203                           ;pin_manager.c: 125: {
 39204                           ;pin_manager.c: 126: IOCB4_InterruptHandler();
 39205  007544  0005               	push	
 39206  007546  6EFA               	movwf	pclath,c
 39207  007548  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39208  00754A  6EFD               	movwf	tosl,c
 39209  00754C  51FB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39210  00754E  6EFE               	movwf	tosh,c
 39211  007550  6AFF               	clrf	tosu,c
 39212  007552  50FA               	movf	pclath,w,c
 39213  007554  0012               	return		;indir
 39214  007556                     __end_of_IOCB4_ISR:
 39215                           	opt stack 0
 39216                           tosu	equ	0xFFF
 39217                           tosh	equ	0xFFE
 39218                           tosl	equ	0xFFD
 39219                           pclatu	equ	0xFFB
 39220                           pclath	equ	0xFFA
 39221                           tblptru	equ	0xFF8
 39222                           tblptrh	equ	0xFF7
 39223                           tblptrl	equ	0xFF6
 39224                           tablat	equ	0xFF5
 39225                           prodh	equ	0xFF4
 39226                           prodl	equ	0xFF3
 39227                           intcon	equ	0xFF2
 39228                           intcon2	equ	0xFF1
 39229                           intcon3	equ	0xFF0
 39230                           indf0	equ	0xFEF
 39231                           postinc0	equ	0xFEE
 39232                           plusw0	equ	0xFEB
 39233                           fsr0h	equ	0xFEA
 39234                           fsr0l	equ	0xFE9
 39235                           wreg	equ	0xFE8
 39236                           postinc1	equ	0xFE6
 39237                           postdec1	equ	0xFE5
 39238                           plusw1	equ	0xFE3
 39239                           fsr1h	equ	0xFE2
 39240                           fsr1l	equ	0xFE1
 39241                           indf2	equ	0xFDF
 39242                           postinc2	equ	0xFDE
 39243                           postdec2	equ	0xFDD
 39244                           plusw2	equ	0xFDB
 39245                           fsr2h	equ	0xFDA
 39246                           fsr2l	equ	0xFD9
 39247                           status	equ	0xFD8
 39248                           
 39249 ;; *************** function _DIO2_ISR_Lora *****************
 39250 ;; Defined at:
 39251 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39252 ;; Parameters:    Size  Location     Type
 39253 ;;		None
 39254 ;; Auto vars:     Size  Location     Type
 39255 ;;		None
 39256 ;; Return value:  Size  Location     Type
 39257 ;;                  1    wreg      void 
 39258 ;; Registers used:
 39259 ;;		status,2, status,0
 39260 ;; Tracked objects:
 39261 ;;		On entry : F/1
 39262 ;;		On exit  : F/0
 39263 ;;		Unchanged: 0/0
 39264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39269 ;;Total ram usage:        0 bytes
 39270 ;; Hardware stack levels used:    1
 39271 ;; This function calls:
 39272 ;;		Nothing
 39273 ;; This function is called by:
 39274 ;;		_DIO2_ISR_Lora_Init
 39275 ;;		_IOCB4_ISR
 39276 ;; This function uses a non-reentrant model
 39277 ;;
 39278                           
 39279                           	psect	text219
 39280  007888                     __ptext219:
 39281                           	opt stack 0
 39282  007888                     _DIO2_ISR_Lora:
 39283                           	opt stack 15
 39284                           
 39285                           ; BSR set to: 1
 39286                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39287                           
 39288                           ;incstack = 0
 39289  007888  0100               	movlb	0	; () banked
 39290  00788A  85F0               	bsf	_dioStatus& (0+255),2,b	;volatile
 39291                           
 39292                           ; BSR set to: 0
 39293  00788C  0012               	return		;funcret
 39294  00788E                     __end_of_DIO2_ISR_Lora:
 39295                           	opt stack 0
 39296                           tosu	equ	0xFFF
 39297                           tosh	equ	0xFFE
 39298                           tosl	equ	0xFFD
 39299                           pclatu	equ	0xFFB
 39300                           pclath	equ	0xFFA
 39301                           tblptru	equ	0xFF8
 39302                           tblptrh	equ	0xFF7
 39303                           tblptrl	equ	0xFF6
 39304                           tablat	equ	0xFF5
 39305                           prodh	equ	0xFF4
 39306                           prodl	equ	0xFF3
 39307                           intcon	equ	0xFF2
 39308                           intcon2	equ	0xFF1
 39309                           intcon3	equ	0xFF0
 39310                           indf0	equ	0xFEF
 39311                           postinc0	equ	0xFEE
 39312                           plusw0	equ	0xFEB
 39313                           fsr0h	equ	0xFEA
 39314                           fsr0l	equ	0xFE9
 39315                           wreg	equ	0xFE8
 39316                           postinc1	equ	0xFE6
 39317                           postdec1	equ	0xFE5
 39318                           plusw1	equ	0xFE3
 39319                           fsr1h	equ	0xFE2
 39320                           fsr1l	equ	0xFE1
 39321                           indf2	equ	0xFDF
 39322                           postinc2	equ	0xFDE
 39323                           postdec2	equ	0xFDD
 39324                           plusw2	equ	0xFDB
 39325                           fsr2h	equ	0xFDA
 39326                           fsr2l	equ	0xFD9
 39327                           status	equ	0xFD8
 39328                           
 39329 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39330 ;; Defined at:
 39331 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 39332 ;; Parameters:    Size  Location     Type
 39333 ;;		None
 39334 ;; Auto vars:     Size  Location     Type
 39335 ;;		None
 39336 ;; Return value:  Size  Location     Type
 39337 ;;                  1    wreg      void 
 39338 ;; Registers used:
 39339 ;;		None
 39340 ;; Tracked objects:
 39341 ;;		On entry : F/1
 39342 ;;		On exit  : F/1
 39343 ;;		Unchanged: F/0
 39344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39349 ;;Total ram usage:        0 bytes
 39350 ;; Hardware stack levels used:    1
 39351 ;; This function calls:
 39352 ;;		Nothing
 39353 ;; This function is called by:
 39354 ;;		_PIN_MANAGER_Initialize
 39355 ;;		_IOCB4_ISR
 39356 ;; This function uses a non-reentrant model
 39357 ;;
 39358                           
 39359                           	psect	text220
 39360  0078D6                     __ptext220:
 39361                           	opt stack 0
 39362  0078D6                     _IOCB4_DefaultInterruptHandler:
 39363                           	opt stack 15
 39364                           
 39365                           ; BSR set to: 1
 39366                           
 39367                           ; BSR set to: 0
 39368                           ;incstack = 0
 39369  0078D6  0012               	return		;funcret
 39370  0078D8                     __end_of_IOCB4_DefaultInterruptHandler:
 39371                           	opt stack 0
 39372                           tosu	equ	0xFFF
 39373                           tosh	equ	0xFFE
 39374                           tosl	equ	0xFFD
 39375                           pclatu	equ	0xFFB
 39376                           pclath	equ	0xFFA
 39377                           tblptru	equ	0xFF8
 39378                           tblptrh	equ	0xFF7
 39379                           tblptrl	equ	0xFF6
 39380                           tablat	equ	0xFF5
 39381                           prodh	equ	0xFF4
 39382                           prodl	equ	0xFF3
 39383                           intcon	equ	0xFF2
 39384                           intcon2	equ	0xFF1
 39385                           intcon3	equ	0xFF0
 39386                           indf0	equ	0xFEF
 39387                           postinc0	equ	0xFEE
 39388                           plusw0	equ	0xFEB
 39389                           fsr0h	equ	0xFEA
 39390                           fsr0l	equ	0xFE9
 39391                           wreg	equ	0xFE8
 39392                           postinc1	equ	0xFE6
 39393                           postdec1	equ	0xFE5
 39394                           plusw1	equ	0xFE3
 39395                           fsr1h	equ	0xFE2
 39396                           fsr1l	equ	0xFE1
 39397                           indf2	equ	0xFDF
 39398                           postinc2	equ	0xFDE
 39399                           postdec2	equ	0xFDD
 39400                           plusw2	equ	0xFDB
 39401                           fsr2h	equ	0xFDA
 39402                           fsr2l	equ	0xFD9
 39403                           status	equ	0xFD8
 39404                           
 39405 ;; *************** function _INT2_ISR *****************
 39406 ;; Defined at:
 39407 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 39408 ;; Parameters:    Size  Location     Type
 39409 ;;		None
 39410 ;; Auto vars:     Size  Location     Type
 39411 ;;		None
 39412 ;; Return value:  Size  Location     Type
 39413 ;;                  1    wreg      void 
 39414 ;; Registers used:
 39415 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39416 ;; Tracked objects:
 39417 ;;		On entry : 0/0
 39418 ;;		On exit  : 0/0
 39419 ;;		Unchanged: 0/0
 39420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39425 ;;Total ram usage:        0 bytes
 39426 ;; Hardware stack levels used:    1
 39427 ;; Hardware stack levels required when called:    2
 39428 ;; This function calls:
 39429 ;;		_INT2_CallBack
 39430 ;; This function is called by:
 39431 ;;		_INTERRUPT_InterruptManager
 39432 ;; This function uses a non-reentrant model
 39433 ;;
 39434                           
 39435                           	psect	text221
 39436  00788E                     __ptext221:
 39437                           	opt stack 0
 39438  00788E                     _INT2_ISR:
 39439                           	opt stack 15
 39440                           
 39441                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 39442                           
 39443                           ; BSR set to: 1
 39444                           ;incstack = 0
 39445  00788E  92F0               	bcf	intcon3,1,c	;volatile
 39446                           
 39447                           ;ext_int.c: 95: INT2_CallBack();
 39448  007890  EFAB  F03A         	goto	_INT2_CallBack	;wreg free
 39449  007894                     __end_of_INT2_ISR:
 39450                           	opt stack 0
 39451                           tosu	equ	0xFFF
 39452                           tosh	equ	0xFFE
 39453                           tosl	equ	0xFFD
 39454                           pclatu	equ	0xFFB
 39455                           pclath	equ	0xFFA
 39456                           tblptru	equ	0xFF8
 39457                           tblptrh	equ	0xFF7
 39458                           tblptrl	equ	0xFF6
 39459                           tablat	equ	0xFF5
 39460                           prodh	equ	0xFF4
 39461                           prodl	equ	0xFF3
 39462                           intcon	equ	0xFF2
 39463                           intcon2	equ	0xFF1
 39464                           intcon3	equ	0xFF0
 39465                           indf0	equ	0xFEF
 39466                           postinc0	equ	0xFEE
 39467                           plusw0	equ	0xFEB
 39468                           fsr0h	equ	0xFEA
 39469                           fsr0l	equ	0xFE9
 39470                           wreg	equ	0xFE8
 39471                           postinc1	equ	0xFE6
 39472                           postdec1	equ	0xFE5
 39473                           plusw1	equ	0xFE3
 39474                           fsr1h	equ	0xFE2
 39475                           fsr1l	equ	0xFE1
 39476                           indf2	equ	0xFDF
 39477                           postinc2	equ	0xFDE
 39478                           postdec2	equ	0xFDD
 39479                           plusw2	equ	0xFDB
 39480                           fsr2h	equ	0xFDA
 39481                           fsr2l	equ	0xFD9
 39482                           status	equ	0xFD8
 39483                           
 39484 ;; *************** function _INT2_CallBack *****************
 39485 ;; Defined at:
 39486 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 39487 ;; Parameters:    Size  Location     Type
 39488 ;;		None
 39489 ;; Auto vars:     Size  Location     Type
 39490 ;;		None
 39491 ;; Return value:  Size  Location     Type
 39492 ;;                  1    wreg      void 
 39493 ;; Registers used:
 39494 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39495 ;; Tracked objects:
 39496 ;;		On entry : 0/0
 39497 ;;		On exit  : 0/0
 39498 ;;		Unchanged: 0/0
 39499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39504 ;;Total ram usage:        0 bytes
 39505 ;; Hardware stack levels used:    1
 39506 ;; Hardware stack levels required when called:    1
 39507 ;; This function calls:
 39508 ;;		Absolute function
 39509 ;;		_DIO1_ISR_Lora
 39510 ;;		_INT2_DefaultInterruptHandler
 39511 ;; This function is called by:
 39512 ;;		_INT2_ISR
 39513 ;; This function uses a non-reentrant model
 39514 ;;
 39515                           
 39516                           	psect	text222
 39517  007556                     __ptext222:
 39518                           	opt stack 0
 39519  007556                     _INT2_CallBack:
 39520                           	opt stack 15
 39521                           
 39522                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 39523                           
 39524                           ;incstack = 0
 39525  007556  0101               	movlb	1	; () banked
 39526  007558  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 39527  00755A  11F9               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39528  00755C  B4D8               	btfsc	status,2,c
 39529  00755E  0012               	return	
 39530                           
 39531                           ; BSR set to: 1
 39532                           ;ext_int.c: 105: {
 39533                           ;ext_int.c: 106: INT2_InterruptHandler();
 39534  007560  0005               	push	
 39535  007562  6EFA               	movwf	pclath,c
 39536  007564  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 39537  007566  6EFD               	movwf	tosl,c
 39538  007568  51F9               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39539  00756A  6EFE               	movwf	tosh,c
 39540  00756C  6AFF               	clrf	tosu,c
 39541  00756E  50FA               	movf	pclath,w,c
 39542  007570  0012               	return		;indir
 39543  007572                     __end_of_INT2_CallBack:
 39544                           	opt stack 0
 39545                           tosu	equ	0xFFF
 39546                           tosh	equ	0xFFE
 39547                           tosl	equ	0xFFD
 39548                           pclatu	equ	0xFFB
 39549                           pclath	equ	0xFFA
 39550                           tblptru	equ	0xFF8
 39551                           tblptrh	equ	0xFF7
 39552                           tblptrl	equ	0xFF6
 39553                           tablat	equ	0xFF5
 39554                           prodh	equ	0xFF4
 39555                           prodl	equ	0xFF3
 39556                           intcon	equ	0xFF2
 39557                           intcon2	equ	0xFF1
 39558                           intcon3	equ	0xFF0
 39559                           indf0	equ	0xFEF
 39560                           postinc0	equ	0xFEE
 39561                           plusw0	equ	0xFEB
 39562                           fsr0h	equ	0xFEA
 39563                           fsr0l	equ	0xFE9
 39564                           wreg	equ	0xFE8
 39565                           postinc1	equ	0xFE6
 39566                           postdec1	equ	0xFE5
 39567                           plusw1	equ	0xFE3
 39568                           fsr1h	equ	0xFE2
 39569                           fsr1l	equ	0xFE1
 39570                           indf2	equ	0xFDF
 39571                           postinc2	equ	0xFDE
 39572                           postdec2	equ	0xFDD
 39573                           plusw2	equ	0xFDB
 39574                           fsr2h	equ	0xFDA
 39575                           fsr2l	equ	0xFD9
 39576                           status	equ	0xFD8
 39577                           
 39578 ;; *************** function _DIO1_ISR_Lora *****************
 39579 ;; Defined at:
 39580 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39581 ;; Parameters:    Size  Location     Type
 39582 ;;		None
 39583 ;; Auto vars:     Size  Location     Type
 39584 ;;		None
 39585 ;; Return value:  Size  Location     Type
 39586 ;;                  1    wreg      void 
 39587 ;; Registers used:
 39588 ;;		status,2, status,0
 39589 ;; Tracked objects:
 39590 ;;		On entry : F/1
 39591 ;;		On exit  : F/0
 39592 ;;		Unchanged: 0/0
 39593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39598 ;;Total ram usage:        0 bytes
 39599 ;; Hardware stack levels used:    1
 39600 ;; This function calls:
 39601 ;;		Nothing
 39602 ;; This function is called by:
 39603 ;;		_DIO1_ISR_Lora_Init
 39604 ;;		_INT2_CallBack
 39605 ;; This function uses a non-reentrant model
 39606 ;;
 39607                           
 39608                           	psect	text223
 39609  007894                     __ptext223:
 39610                           	opt stack 0
 39611  007894                     _DIO1_ISR_Lora:
 39612                           	opt stack 15
 39613                           
 39614                           ; BSR set to: 1
 39615                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39616                           
 39617                           ;incstack = 0
 39618  007894  0100               	movlb	0	; () banked
 39619  007896  83F0               	bsf	_dioStatus& (0+255),1,b	;volatile
 39620                           
 39621                           ; BSR set to: 0
 39622  007898  0012               	return		;funcret
 39623  00789A                     __end_of_DIO1_ISR_Lora:
 39624                           	opt stack 0
 39625                           tosu	equ	0xFFF
 39626                           tosh	equ	0xFFE
 39627                           tosl	equ	0xFFD
 39628                           pclatu	equ	0xFFB
 39629                           pclath	equ	0xFFA
 39630                           tblptru	equ	0xFF8
 39631                           tblptrh	equ	0xFF7
 39632                           tblptrl	equ	0xFF6
 39633                           tablat	equ	0xFF5
 39634                           prodh	equ	0xFF4
 39635                           prodl	equ	0xFF3
 39636                           intcon	equ	0xFF2
 39637                           intcon2	equ	0xFF1
 39638                           intcon3	equ	0xFF0
 39639                           indf0	equ	0xFEF
 39640                           postinc0	equ	0xFEE
 39641                           plusw0	equ	0xFEB
 39642                           fsr0h	equ	0xFEA
 39643                           fsr0l	equ	0xFE9
 39644                           wreg	equ	0xFE8
 39645                           postinc1	equ	0xFE6
 39646                           postdec1	equ	0xFE5
 39647                           plusw1	equ	0xFE3
 39648                           fsr1h	equ	0xFE2
 39649                           fsr1l	equ	0xFE1
 39650                           indf2	equ	0xFDF
 39651                           postinc2	equ	0xFDE
 39652                           postdec2	equ	0xFDD
 39653                           plusw2	equ	0xFDB
 39654                           fsr2h	equ	0xFDA
 39655                           fsr2l	equ	0xFD9
 39656                           status	equ	0xFD8
 39657                           
 39658 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39659 ;; Defined at:
 39660 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 39661 ;; Parameters:    Size  Location     Type
 39662 ;;		None
 39663 ;; Auto vars:     Size  Location     Type
 39664 ;;		None
 39665 ;; Return value:  Size  Location     Type
 39666 ;;                  1    wreg      void 
 39667 ;; Registers used:
 39668 ;;		None
 39669 ;; Tracked objects:
 39670 ;;		On entry : F/1
 39671 ;;		On exit  : F/1
 39672 ;;		Unchanged: F/0
 39673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39678 ;;Total ram usage:        0 bytes
 39679 ;; Hardware stack levels used:    1
 39680 ;; This function calls:
 39681 ;;		Nothing
 39682 ;; This function is called by:
 39683 ;;		_EXT_INT_Initialize
 39684 ;;		_INT2_CallBack
 39685 ;; This function uses a non-reentrant model
 39686 ;;
 39687                           
 39688                           	psect	text224
 39689  0078D8                     __ptext224:
 39690                           	opt stack 0
 39691  0078D8                     _INT2_DefaultInterruptHandler:
 39692                           	opt stack 15
 39693                           
 39694                           ; BSR set to: 1
 39695                           
 39696                           ; BSR set to: 0
 39697                           ;incstack = 0
 39698  0078D8  0012               	return		;funcret
 39699  0078DA                     __end_of_INT2_DefaultInterruptHandler:
 39700                           	opt stack 0
 39701                           tosu	equ	0xFFF
 39702                           tosh	equ	0xFFE
 39703                           tosl	equ	0xFFD
 39704                           pclatu	equ	0xFFB
 39705                           pclath	equ	0xFFA
 39706                           tblptru	equ	0xFF8
 39707                           tblptrh	equ	0xFF7
 39708                           tblptrl	equ	0xFF6
 39709                           tablat	equ	0xFF5
 39710                           prodh	equ	0xFF4
 39711                           prodl	equ	0xFF3
 39712                           intcon	equ	0xFF2
 39713                           intcon2	equ	0xFF1
 39714                           intcon3	equ	0xFF0
 39715                           indf0	equ	0xFEF
 39716                           postinc0	equ	0xFEE
 39717                           plusw0	equ	0xFEB
 39718                           fsr0h	equ	0xFEA
 39719                           fsr0l	equ	0xFE9
 39720                           wreg	equ	0xFE8
 39721                           postinc1	equ	0xFE6
 39722                           postdec1	equ	0xFE5
 39723                           plusw1	equ	0xFE3
 39724                           fsr1h	equ	0xFE2
 39725                           fsr1l	equ	0xFE1
 39726                           indf2	equ	0xFDF
 39727                           postinc2	equ	0xFDE
 39728                           postdec2	equ	0xFDD
 39729                           plusw2	equ	0xFDB
 39730                           fsr2h	equ	0xFDA
 39731                           fsr2l	equ	0xFD9
 39732                           status	equ	0xFD8
 39733                           
 39734 ;; *************** function _INT1_ISR *****************
 39735 ;; Defined at:
 39736 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 39737 ;; Parameters:    Size  Location     Type
 39738 ;;		None
 39739 ;; Auto vars:     Size  Location     Type
 39740 ;;		None
 39741 ;; Return value:  Size  Location     Type
 39742 ;;                  1    wreg      void 
 39743 ;; Registers used:
 39744 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39745 ;; Tracked objects:
 39746 ;;		On entry : 0/0
 39747 ;;		On exit  : 0/0
 39748 ;;		Unchanged: 0/0
 39749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39754 ;;Total ram usage:        0 bytes
 39755 ;; Hardware stack levels used:    1
 39756 ;; Hardware stack levels required when called:    2
 39757 ;; This function calls:
 39758 ;;		_INT1_CallBack
 39759 ;; This function is called by:
 39760 ;;		_INTERRUPT_InterruptManager
 39761 ;; This function uses a non-reentrant model
 39762 ;;
 39763                           
 39764                           	psect	text225
 39765  00789A                     __ptext225:
 39766                           	opt stack 0
 39767  00789A                     _INT1_ISR:
 39768                           	opt stack 15
 39769                           
 39770                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 39771                           
 39772                           ; BSR set to: 1
 39773                           ;incstack = 0
 39774  00789A  90F0               	bcf	intcon3,0,c	;volatile
 39775                           
 39776                           ;ext_int.c: 54: INT1_CallBack();
 39777  00789C  EFD3  F03A         	goto	_INT1_CallBack	;wreg free
 39778  0078A0                     __end_of_INT1_ISR:
 39779                           	opt stack 0
 39780                           tosu	equ	0xFFF
 39781                           tosh	equ	0xFFE
 39782                           tosl	equ	0xFFD
 39783                           pclatu	equ	0xFFB
 39784                           pclath	equ	0xFFA
 39785                           tblptru	equ	0xFF8
 39786                           tblptrh	equ	0xFF7
 39787                           tblptrl	equ	0xFF6
 39788                           tablat	equ	0xFF5
 39789                           prodh	equ	0xFF4
 39790                           prodl	equ	0xFF3
 39791                           intcon	equ	0xFF2
 39792                           intcon2	equ	0xFF1
 39793                           intcon3	equ	0xFF0
 39794                           indf0	equ	0xFEF
 39795                           postinc0	equ	0xFEE
 39796                           plusw0	equ	0xFEB
 39797                           fsr0h	equ	0xFEA
 39798                           fsr0l	equ	0xFE9
 39799                           wreg	equ	0xFE8
 39800                           postinc1	equ	0xFE6
 39801                           postdec1	equ	0xFE5
 39802                           plusw1	equ	0xFE3
 39803                           fsr1h	equ	0xFE2
 39804                           fsr1l	equ	0xFE1
 39805                           indf2	equ	0xFDF
 39806                           postinc2	equ	0xFDE
 39807                           postdec2	equ	0xFDD
 39808                           plusw2	equ	0xFDB
 39809                           fsr2h	equ	0xFDA
 39810                           fsr2l	equ	0xFD9
 39811                           status	equ	0xFD8
 39812                           
 39813 ;; *************** function _INT1_CallBack *****************
 39814 ;; Defined at:
 39815 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 39816 ;; Parameters:    Size  Location     Type
 39817 ;;		None
 39818 ;; Auto vars:     Size  Location     Type
 39819 ;;		None
 39820 ;; Return value:  Size  Location     Type
 39821 ;;                  1    wreg      void 
 39822 ;; Registers used:
 39823 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39824 ;; Tracked objects:
 39825 ;;		On entry : 0/0
 39826 ;;		On exit  : 0/0
 39827 ;;		Unchanged: 0/0
 39828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39833 ;;Total ram usage:        0 bytes
 39834 ;; Hardware stack levels used:    1
 39835 ;; Hardware stack levels required when called:    1
 39836 ;; This function calls:
 39837 ;;		Absolute function
 39838 ;;		_DIO0_ISR_Lora
 39839 ;;		_INT1_DefaultInterruptHandler
 39840 ;; This function is called by:
 39841 ;;		_INT1_ISR
 39842 ;; This function uses a non-reentrant model
 39843 ;;
 39844                           
 39845                           	psect	text226
 39846  0075A6                     __ptext226:
 39847                           	opt stack 0
 39848  0075A6                     _INT1_CallBack:
 39849                           	opt stack 15
 39850                           
 39851                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 39852                           
 39853                           ;incstack = 0
 39854  0075A6  505A               	movf	_INT1_InterruptHandler,w,c
 39855  0075A8  105B               	iorwf	_INT1_InterruptHandler+1,w,c
 39856  0075AA  B4D8               	btfsc	status,2,c
 39857  0075AC  0012               	return	
 39858                           
 39859                           ;ext_int.c: 64: {
 39860                           ;ext_int.c: 65: INT1_InterruptHandler();
 39861  0075AE  0005               	push	
 39862  0075B0  6EFA               	movwf	pclath,c
 39863  0075B2  505A               	movf	_INT1_InterruptHandler,w,c
 39864  0075B4  6EFD               	movwf	tosl,c
 39865  0075B6  505B               	movf	_INT1_InterruptHandler+1,w,c
 39866  0075B8  6EFE               	movwf	tosh,c
 39867  0075BA  6AFF               	clrf	tosu,c
 39868  0075BC  50FA               	movf	pclath,w,c
 39869  0075BE  0012               	return		;indir
 39870  0075C0                     __end_of_INT1_CallBack:
 39871                           	opt stack 0
 39872                           tosu	equ	0xFFF
 39873                           tosh	equ	0xFFE
 39874                           tosl	equ	0xFFD
 39875                           pclatu	equ	0xFFB
 39876                           pclath	equ	0xFFA
 39877                           tblptru	equ	0xFF8
 39878                           tblptrh	equ	0xFF7
 39879                           tblptrl	equ	0xFF6
 39880                           tablat	equ	0xFF5
 39881                           prodh	equ	0xFF4
 39882                           prodl	equ	0xFF3
 39883                           intcon	equ	0xFF2
 39884                           intcon2	equ	0xFF1
 39885                           intcon3	equ	0xFF0
 39886                           indf0	equ	0xFEF
 39887                           postinc0	equ	0xFEE
 39888                           plusw0	equ	0xFEB
 39889                           fsr0h	equ	0xFEA
 39890                           fsr0l	equ	0xFE9
 39891                           wreg	equ	0xFE8
 39892                           postinc1	equ	0xFE6
 39893                           postdec1	equ	0xFE5
 39894                           plusw1	equ	0xFE3
 39895                           fsr1h	equ	0xFE2
 39896                           fsr1l	equ	0xFE1
 39897                           indf2	equ	0xFDF
 39898                           postinc2	equ	0xFDE
 39899                           postdec2	equ	0xFDD
 39900                           plusw2	equ	0xFDB
 39901                           fsr2h	equ	0xFDA
 39902                           fsr2l	equ	0xFD9
 39903                           status	equ	0xFD8
 39904                           
 39905 ;; *************** function _DIO0_ISR_Lora *****************
 39906 ;; Defined at:
 39907 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39908 ;; Parameters:    Size  Location     Type
 39909 ;;		None
 39910 ;; Auto vars:     Size  Location     Type
 39911 ;;		None
 39912 ;; Return value:  Size  Location     Type
 39913 ;;                  1    wreg      void 
 39914 ;; Registers used:
 39915 ;;		status,2, status,0
 39916 ;; Tracked objects:
 39917 ;;		On entry : 0/0
 39918 ;;		On exit  : F/0
 39919 ;;		Unchanged: 0/0
 39920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39925 ;;Total ram usage:        0 bytes
 39926 ;; Hardware stack levels used:    1
 39927 ;; This function calls:
 39928 ;;		Nothing
 39929 ;; This function is called by:
 39930 ;;		_DIO0_ISR_Lora_Init
 39931 ;;		_INT1_CallBack
 39932 ;; This function uses a non-reentrant model
 39933 ;;
 39934                           
 39935                           	psect	text227
 39936  0078A0                     __ptext227:
 39937                           	opt stack 0
 39938  0078A0                     _DIO0_ISR_Lora:
 39939                           	opt stack 15
 39940                           
 39941                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 39942                           
 39943                           ;incstack = 0
 39944  0078A0  0100               	movlb	0	; () banked
 39945  0078A2  81F0               	bsf	_dioStatus& (0+255),0,b	;volatile
 39946                           
 39947                           ; BSR set to: 0
 39948  0078A4  0012               	return		;funcret
 39949  0078A6                     __end_of_DIO0_ISR_Lora:
 39950                           	opt stack 0
 39951                           tosu	equ	0xFFF
 39952                           tosh	equ	0xFFE
 39953                           tosl	equ	0xFFD
 39954                           pclatu	equ	0xFFB
 39955                           pclath	equ	0xFFA
 39956                           tblptru	equ	0xFF8
 39957                           tblptrh	equ	0xFF7
 39958                           tblptrl	equ	0xFF6
 39959                           tablat	equ	0xFF5
 39960                           prodh	equ	0xFF4
 39961                           prodl	equ	0xFF3
 39962                           intcon	equ	0xFF2
 39963                           intcon2	equ	0xFF1
 39964                           intcon3	equ	0xFF0
 39965                           indf0	equ	0xFEF
 39966                           postinc0	equ	0xFEE
 39967                           plusw0	equ	0xFEB
 39968                           fsr0h	equ	0xFEA
 39969                           fsr0l	equ	0xFE9
 39970                           wreg	equ	0xFE8
 39971                           postinc1	equ	0xFE6
 39972                           postdec1	equ	0xFE5
 39973                           plusw1	equ	0xFE3
 39974                           fsr1h	equ	0xFE2
 39975                           fsr1l	equ	0xFE1
 39976                           indf2	equ	0xFDF
 39977                           postinc2	equ	0xFDE
 39978                           postdec2	equ	0xFDD
 39979                           plusw2	equ	0xFDB
 39980                           fsr2h	equ	0xFDA
 39981                           fsr2l	equ	0xFD9
 39982                           status	equ	0xFD8
 39983                           
 39984 ;; *************** function _INT1_DefaultInterruptHandler *****************
 39985 ;; Defined at:
 39986 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 39987 ;; Parameters:    Size  Location     Type
 39988 ;;		None
 39989 ;; Auto vars:     Size  Location     Type
 39990 ;;		None
 39991 ;; Return value:  Size  Location     Type
 39992 ;;                  1    wreg      void 
 39993 ;; Registers used:
 39994 ;;		None
 39995 ;; Tracked objects:
 39996 ;;		On entry : 0/0
 39997 ;;		On exit  : 0/0
 39998 ;;		Unchanged: 0/0
 39999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40004 ;;Total ram usage:        0 bytes
 40005 ;; Hardware stack levels used:    1
 40006 ;; This function calls:
 40007 ;;		Nothing
 40008 ;; This function is called by:
 40009 ;;		_EXT_INT_Initialize
 40010 ;;		_INT1_CallBack
 40011 ;; This function uses a non-reentrant model
 40012 ;;
 40013                           
 40014                           	psect	text228
 40015  0078DA                     __ptext228:
 40016                           	opt stack 0
 40017  0078DA                     _INT1_DefaultInterruptHandler:
 40018                           	opt stack 15
 40019                           
 40020                           ; BSR set to: 0
 40021                           ;incstack = 0
 40022  0078DA  0012               	return		;funcret
 40023  0078DC                     __end_of_INT1_DefaultInterruptHandler:
 40024                           	opt stack 0
 40025                           tosu	equ	0xFFF
 40026                           tosh	equ	0xFFE
 40027                           tosl	equ	0xFFD
 40028                           pclatu	equ	0xFFB
 40029                           pclath	equ	0xFFA
 40030                           tblptru	equ	0xFF8
 40031                           tblptrh	equ	0xFF7
 40032                           tblptrl	equ	0xFF6
 40033                           tablat	equ	0xFF5
 40034                           prodh	equ	0xFF4
 40035                           prodl	equ	0xFF3
 40036                           intcon	equ	0xFF2
 40037                           intcon2	equ	0xFF1
 40038                           intcon3	equ	0xFF0
 40039                           indf0	equ	0xFEF
 40040                           postinc0	equ	0xFEE
 40041                           plusw0	equ	0xFEB
 40042                           fsr0h	equ	0xFEA
 40043                           fsr0l	equ	0xFE9
 40044                           wreg	equ	0xFE8
 40045                           postinc1	equ	0xFE6
 40046                           postdec1	equ	0xFE5
 40047                           plusw1	equ	0xFE3
 40048                           fsr1h	equ	0xFE2
 40049                           fsr1l	equ	0xFE1
 40050                           indf2	equ	0xFDF
 40051                           postinc2	equ	0xFDE
 40052                           postdec2	equ	0xFDD
 40053                           plusw2	equ	0xFDB
 40054                           fsr2h	equ	0xFDA
 40055                           fsr2l	equ	0xFD9
 40056                           status	equ	0xFD8
 40057                           tosu	equ	0xFFF
 40058                           tosh	equ	0xFFE
 40059                           tosl	equ	0xFFD
 40060                           pclatu	equ	0xFFB
 40061                           pclath	equ	0xFFA
 40062                           tblptru	equ	0xFF8
 40063                           tblptrh	equ	0xFF7
 40064                           tblptrl	equ	0xFF6
 40065                           tablat	equ	0xFF5
 40066                           prodh	equ	0xFF4
 40067                           prodl	equ	0xFF3
 40068                           intcon	equ	0xFF2
 40069                           intcon2	equ	0xFF1
 40070                           intcon3	equ	0xFF0
 40071                           indf0	equ	0xFEF
 40072                           postinc0	equ	0xFEE
 40073                           plusw0	equ	0xFEB
 40074                           fsr0h	equ	0xFEA
 40075                           fsr0l	equ	0xFE9
 40076                           wreg	equ	0xFE8
 40077                           postinc1	equ	0xFE6
 40078                           postdec1	equ	0xFE5
 40079                           plusw1	equ	0xFE3
 40080                           fsr1h	equ	0xFE2
 40081                           fsr1l	equ	0xFE1
 40082                           indf2	equ	0xFDF
 40083                           postinc2	equ	0xFDE
 40084                           postdec2	equ	0xFDD
 40085                           plusw2	equ	0xFDB
 40086                           fsr2h	equ	0xFDA
 40087                           fsr2l	equ	0xFD9
 40088                           status	equ	0xFD8
 40089                           
 40090                           	psect	text229
 40091  000000                     __ptext229:
 40092                           	opt stack 0
 40093                           tosu	equ	0xFFF
 40094                           tosh	equ	0xFFE
 40095                           tosl	equ	0xFFD
 40096                           pclatu	equ	0xFFB
 40097                           pclath	equ	0xFFA
 40098                           tblptru	equ	0xFF8
 40099                           tblptrh	equ	0xFF7
 40100                           tblptrl	equ	0xFF6
 40101                           tablat	equ	0xFF5
 40102                           prodh	equ	0xFF4
 40103                           prodl	equ	0xFF3
 40104                           intcon	equ	0xFF2
 40105                           intcon2	equ	0xFF1
 40106                           intcon3	equ	0xFF0
 40107                           indf0	equ	0xFEF
 40108                           postinc0	equ	0xFEE
 40109                           plusw0	equ	0xFEB
 40110                           fsr0h	equ	0xFEA
 40111                           fsr0l	equ	0xFE9
 40112                           wreg	equ	0xFE8
 40113                           postinc1	equ	0xFE6
 40114                           postdec1	equ	0xFE5
 40115                           plusw1	equ	0xFE3
 40116                           fsr1h	equ	0xFE2
 40117                           fsr1l	equ	0xFE1
 40118                           indf2	equ	0xFDF
 40119                           postinc2	equ	0xFDE
 40120                           postdec2	equ	0xFDD
 40121                           plusw2	equ	0xFDB
 40122                           fsr2h	equ	0xFDA
 40123                           fsr2l	equ	0xFD9
 40124                           status	equ	0xFD8
 40125                           
 40126                           	psect	rparam
 40127  0000                     tosu	equ	0xFFF
 40128                           tosh	equ	0xFFE
 40129                           tosl	equ	0xFFD
 40130                           pclatu	equ	0xFFB
 40131                           pclath	equ	0xFFA
 40132                           tblptru	equ	0xFF8
 40133                           tblptrh	equ	0xFF7
 40134                           tblptrl	equ	0xFF6
 40135                           tablat	equ	0xFF5
 40136                           prodh	equ	0xFF4
 40137                           prodl	equ	0xFF3
 40138                           intcon	equ	0xFF2
 40139                           intcon2	equ	0xFF1
 40140                           intcon3	equ	0xFF0
 40141                           indf0	equ	0xFEF
 40142                           postinc0	equ	0xFEE
 40143                           plusw0	equ	0xFEB
 40144                           fsr0h	equ	0xFEA
 40145                           fsr0l	equ	0xFE9
 40146                           wreg	equ	0xFE8
 40147                           postinc1	equ	0xFE6
 40148                           postdec1	equ	0xFE5
 40149                           plusw1	equ	0xFE3
 40150                           fsr1h	equ	0xFE2
 40151                           fsr1l	equ	0xFE1
 40152                           indf2	equ	0xFDF
 40153                           postinc2	equ	0xFDE
 40154                           postdec2	equ	0xFDD
 40155                           plusw2	equ	0xFDB
 40156                           fsr2h	equ	0xFDA
 40157                           fsr2l	equ	0xFD9
 40158                           status	equ	0xFD8
 40159                           
 40160                           	psect	temp
 40161  000046                     btemp:
 40162                           	opt stack 0
 40163  000046                     	ds	12
 40164                           tosu	equ	0xFFF
 40165                           tosh	equ	0xFFE
 40166                           tosl	equ	0xFFD
 40167                           pclatu	equ	0xFFB
 40168                           pclath	equ	0xFFA
 40169                           tblptru	equ	0xFF8
 40170                           tblptrh	equ	0xFF7
 40171                           tblptrl	equ	0xFF6
 40172                           tablat	equ	0xFF5
 40173                           prodh	equ	0xFF4
 40174                           prodl	equ	0xFF3
 40175                           intcon	equ	0xFF2
 40176                           intcon2	equ	0xFF1
 40177                           intcon3	equ	0xFF0
 40178                           indf0	equ	0xFEF
 40179                           postinc0	equ	0xFEE
 40180                           plusw0	equ	0xFEB
 40181                           fsr0h	equ	0xFEA
 40182                           fsr0l	equ	0xFE9
 40183                           wreg	equ	0xFE8
 40184                           postinc1	equ	0xFE6
 40185                           postdec1	equ	0xFE5
 40186                           plusw1	equ	0xFE3
 40187                           fsr1h	equ	0xFE2
 40188                           fsr1l	equ	0xFE1
 40189                           indf2	equ	0xFDF
 40190                           postinc2	equ	0xFDE
 40191                           postdec2	equ	0xFDD
 40192                           plusw2	equ	0xFDB
 40193                           fsr2h	equ	0xFDA
 40194                           fsr2l	equ	0xFD9
 40195                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        56
    BSS         1277
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      83
    BANK0           160    136     147
    BANK1           256    125     256
    BANK2           256      0     245
    BANK3           256      0     160
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1658$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[4]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK1[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1658$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1658$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S983$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S983$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6560196
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
           _TMR3_SetInterruptHandler
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          3     3      0  311921
                                            125 BANK0      3     3      0
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      68
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2178
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     200
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     989
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     189
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     589
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     189
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5803720
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2268378
                                            125 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148022
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  663131
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  489385
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  311785
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  157973
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  535291
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  498937
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2934074
                                            132 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  199966
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1035143
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     389
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1498510
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  473506
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  315972
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1008964
                                            125 BANK0      5     5      0
                                            102 BANK1     23    20      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9258
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  162837
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  311785
                                            118 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151121
                                            106 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   43958
                                             52 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37564
                                             52 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  190414
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  173941
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  157986
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           4     0      4    4851
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248062
                                            124 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101368
                                            115 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80839
                                            106 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   66989
                                             92 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26238
                                             52 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19756
                                             32 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           23    20      3    4744
                                             10 BANK0     22    19      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  167548
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   92735
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   45810
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     662
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                 _handle16sInterrupt *
 ---------------------------------------------------------------------------------
 (16) _handle16sInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
   _SysConfigSleep
   _TMR3_SetInterruptHandler
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _handle16sInterrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A0      11       62.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     7D     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      53       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45B      12        0.0%
DATA                 0      0     67B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Aug 08 20:17:12 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 78CE  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 7650  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6A36  
                                   __end_of_AESEncodeLoRa 725A  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 623C  
                                                     l192 76F8  
                                                     l460 152A  
                                                     l453 14A2  
                                                     l382 50EE  
                                                     l447 14DA  
                                                     l466 1714  
                                             ?_RADIO_Init 007D  
                                                     l670 6F7E  
                                                     l479 17E6  
                                                     l592 7102  
                                                     l673 6C68  
                                                     l690 5E10  
                                                     l676 6C7A  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 668E  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 662E  
                                  _ExecuteRxParamSetupReq 428A  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 777A  
                                      __size_of_AESEncode 02DA  
                                         _timer1ReloadVal 005C  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 60FE  
                                   _RADIO_SetLoRaSyncWord 7804  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B16  
                                 __end_of_SwTimersExecute 5844  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00DC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 599C  
                     __end_of_RADIO_SetFrequencyHopPeriod 7804  
                             _RADIO_SetFrequencyHopPeriod 77FA  
                                              _CheckFlags 668E  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 75A6  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                                    l1110 3434  
                                                    l1031 11F4  
                                                    l1204 49EC  
                                                    l2012 5652  
                                                    l1133 4F1C  
                                                    l2014 56D4  
                                                    l1215 47F4  
                                                    l1231 67A2  
                                                    l1223 768C  
                                                    l1127 4360  
                                                    l1151 31A6  
                                                    l1063 27E8  
                                                    l1136 4FAA  
                                                    l2121 010A  
                                                    l1049 26F8  
                                                    l2017 53E8  
                                                    l2041 412C  
                                                    l1146 4FDE  
                                                    l1250 764C  
                                                    l2026 53F8  
                                                    l1091 6986  
                                                    l1083 7354  
                                                    l1244 7432  
                                                    l2133 0262  
                                                    l1238 6FB4  
                                                    l2150 053C  
                                                    l3103 607A  
                                                    l2231 1E74  
                                                    l1079 76A0  
                                                    l2151 0544  
                                                    l2063 4B48  
                                                    l2232 1F1A  
                                                    l1264 6EEA  
                                                    l3113 661C  
                                                    l2241 1F28  
                                                    l2233 1F18  
                                                    l2090 4628  
                                                    l1347 74DC  
                                                    l1099 35F6  
                                                    l2307 6324  
                                                    l2171 0978  
                                         _timer3ReloadVal 005E  
                                                    l2236 1F14  
                                                    l2069 630A  
                                                    l1454 1866  
                                                    l2095 5738  
                                                    l1279 67D4  
                                                    l1297 23E0  
                                                    l2522 2418  
                                                    l2283 1D96  
                                                    l2292 590A  
                                                    l1469 19CE  
                                                    l1717 5C1A  
                                                    l3166 6D74  
                                                    l1718 5C62  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l1746 54AA  
                                                    l2744 6F26  
                                                    l1993 37B2  
                                                    l9587 76B0  
                                                    l9955 623E  
                                        _RADIO_WritePower 5266  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4632  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1196 00A1  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                                    _TMR3 000FB2  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 7556  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5F1E  
                                                    _loRa 0200  
                                                    _main 5ADC  
                                                    _rand 699A  
                          __end_of_UpdateMinMaxChDataRate 5792  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 0046  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00CF  
                                           ComputeMic@key 00CA  
                               __end_of_LORAWAN_RxTimeout 2962  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init 7746  
                                        __end_of_ADC_Read 6F4E  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6A36  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0090  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5574  
                                         _TMR3_Initialize 71E2  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00CF  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 7876  
                                            ___param_bank 000010  
                                              _GetRx1Freq 76CC  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 694C  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 656A  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 78A0  
                                        __end_of_INT2_ISR 7894  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 776E  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12111 65EC  
                                                   l12041 2562  
                                                   l12033 252C  
                                                   l12025 246C  
                                                   l12009 241A  
                                                   l12115 660E  
                                                   l12107 65DC  
                                                   l12035 2536  
                                                   l12109 65E8  
                                                   l12045 2584  
                                                   l12143 4BC0  
                                                   l12207 517E  
                                                   l12047 258E  
                                                   l12039 2558  
                                                   l12303 5312  
                                                   l12137 4B70  
                                                   l12209 5188  
                                                   l12065 2696  
                                                   l12057 268C  
                                                   l13033 1878  
                                                   l13041 18EC  
                                                   l12401 6D54  
                                                   l12321 5DEA  
                                                   l14001 60C2  
                                                   l13201 5564  
                                                   l12147 4C22  
                                                   l12091 603E  
                                                   l13051 193C  
                                                   l13027 1852  
                                                   l12403 6D58  
                                                   l12251 527E  
                                                   l13203 5566  
                                                   l13123 5962  
                                                   l13115 590E  
                                                   l10563 6870  
                                         __end_of___abdiv 68A8  
                                                   l12149 4C24  
                                                   l12173 5110  
                                                   l12181 512C  
                                                   l12165 50F0  
                                                   l12157 50D6  
                                                   l12317 5DC6  
                                                   l13205 5570  
                                                   l13125 5964  
                                                   l13133 597E  
                                                   l13141 5996  
                                                   l14101 2F7E  
                                                   l10581 6896  
                                                   l10573 6882  
                                                   l10557 6866  
                                                   l12343 71C2  
                                                   l12087 602E  
                                                   l13055 195A  
                                                   l13047 1912  
                                                   l13071 19B0  
                                                   l13039 18B4  
                                                   l12407 6D6A  
                                                   l12255 528A  
                                                   l12271 52BE  
                                                   l14015 60E8  
                                                   l13127 596E  
                                                   l13223 1BA8  
                                                   l13215 1B24  
                                                   l13311 1DF6  
                                                   l13151 6B0A  
                                                   l10575 6886  
                                                   l12425 5CEE  
                                                   l12089 603A  
                                                   l12193 5150  
                                                   l12177 511A  
                                                   l10913 56EA  
                                                   l13065 1972  
                                                   l13057 1968  
                                                   l12505 15B6  
                                                   l12441 142A  
                                                   l13321 2FB8  
                                                   l12337 711A  
                                                   l14009 60D6  
                                                   l13137 598E  
                                                   l13241 1C3C  
                                                   l13233 1BEE  
                                                   l13313 1E02  
                                                   l12353 47A2  
                                                   l14105 2F9C  
                                                   l10569 687C  
                                                   l10585 689E  
                                                   l12347 71D2  
                                                   l12099 606C  
                                                   l12195 5154  
                                                   l12179 5122  
                                                   l10923 5782  
                                                   l12283 52E4  
                                                   l12275 52CC  
                                                   l12443 144C  
                                                   l12451 14C0  
                                                   l13243 1C42  
                                                   l13307 1DC0  
                                                   l12355 47A6  
                                                   l12611 742E  
                                                   l14131 00CE  
                                                   l12197 515E  
                                                   l10925 5786  
                                                   l12381 6B24  
                                                   l12269 52B2  
                                                   l12461 1514  
                                                   l12453 14E4  
                                                   l12445 146E  
                                                   l14053 66BA  
                                                   l13253 1C88  
                                                   l13309 1DF4  
                                                   l13237 1C14  
                                                   l12373 4858  
                                                   l12365 483E  
                                                   l14037 635C  
                                                   l10589 68A4  
                                                   l15005 21EC  
                                                   l13095 1AA8  
                                                   l13079 19D2  
                                                   l12279 52D8  
                                                   l13335 2FE6  
                                                   l13327 2FCE  
                                                   l12631 5BF8  
                                                   l13191 427A  
                                                   l13167 417E  
                                                   l13159 4146  
                                                   l13263 1CC6  
                                                   l13239 1C2A  
                                                   l12367 4842  
                                                   l13511 36C6  
                                                   l14071 2E86  
                                                   l14039 6360  
                                                   l14303 05A8  
                                                   l14311 05B4  
                                                   l14231 041C  
                                                   l15007 2206  
                                                   l15015 229E  
                                                   l12385 6B5C  
                                                   l13089 1A70  
                                                   l12297 530A  
                                                   l12465 1520  
                                                   l12449 14AE  
                                                   l13353 3046  
                                                   l14057 66D0  
                                                   l14049 66A4  
                                                   l13185 4234  
                                                   l13177 41E8  
                                                   l13281 1D28  
                                                   l13273 1CFE  
                                                   l13257 1CAE  
                                                   l12641 67C0  
                                                   l13505 3678  
                                                   l14081 2EF4  
                                                   l14073 2E9C  
                                                   l14065 2DC2  
                                                   l14233 0434  
                                                   l14137 010C  
                                                   l15201 648E  
                                                   l15113 4AEC  
                                                   l11915 6D8A  
                                                   l12555 16FC  
                                                   l12547 16CA  
                                                   l12539 1686  
                                                   l12467 1526  
                                                   l13355 305A  
                                                   l13195 54C0  
                                                   l12723 58C2  
                                                   l13291 1D6E  
                                                   l12651 67EC  
                                                   l12643 67C8  
                                                   l13507 368C  
                                                   l12811 677E  
                                                   l13603 43C8  
                                                   l14083 2F0A  
                                                   l14075 2EB2  
                                                   l14403 0810  
                                                   l14331 06AC  
                                                   l14251 045A  
                                                   l14219 0402  
                                                   l14155 019C  
                                                   l15211 649E  
                                                   l15043 5654  
                                                   l15123 4B0E  
                                                   l15027 2342  
                                                   l11941 4DB4  
                                                   l12573 17A0  
                                                   l12549 16D6  
                                                   l12557 171E  
                                                   l13365 307A  
                                                   l13437 6688  
                                                   l12741 2BC8  
                                                   l12717 589C  
                                                   l13277 1D10  
                                                   l13453 6990  
                                                   l12637 67B2  
                                                   l12901 7350  
                                                   l13509 3690  
                                                   l13541 3400  
                                                   l14085 2F20  
                                                   l14077 2EC8  
                                                   l14069 2E72  
                                                   l14093 2F32  
                                                   l14421 08E4  
                                                   l14405 0818  
                                                   l14181 0248  
                                                   l15221 6E52  
                                                   l15061 3FF4  
                                                   l15117 4AF2  
                                                   l15133 4B44  
                                                   l16005 5834  
                                                   l11943 4E04  
                                                   l12399 6D4C  
                                                   l12583 17DC  
                                                   l12487 1570  
                                                   l13359 306A  
                                                   l12751 2BF2  
                                                   l13199 5528  
                                                   l12719 58A2  
                                                   l13711 201C  
                                                   l13615 6AAA  
                                                   l12655 67F6  
                                                   l12831 6FB0  
                                                   l13543 3414  
                                                   l14079 2EDE  
                                                   l14095 2F60  
                                                   l14431 0980  
                                                   l14271 0494  
                                                   l14263 046E  
                                                   l14159 01AC  
                                                   l15207 6498  
                                                   l15143 62DE  
                                                   l15039 5642  
                                                   l16007 5836  
                                                   l11953 71AC  
                                                   l12577 17BC  
                                                   l12569 1790  
                                                   l12497 159A  
                                                   l13393 311C  
                                                   l13369 3090  
                                                   l12753 2BFE  
                                                   l13297 1D9C  
                                                   l13617 6ACA  
                                                   l12649 67E4  
                                                   l12809 6778  
                                                   l13561 3506  
                                                   l14345 072E  
                                                   l14361 074C  
                                                   l14193 02B4  
                                                   l15225 6E58  
                                                   l15241 6BDA  
                                                   l16009 583A  
                                                   l12683 48F4  
                                                   l12771 2C86  
                                                   l12747 2BDE  
                                                   l13563 3510  
                                                   l13555 34AC  
                                                   l14515 0AD8  
                                                   l14267 0486  
                                                   l13811 53F0  
                                                   l13803 53D2  
                                                   l15083 4096  
                                                   l15067 4010  
                                                   l11949 7190  
                                                   l11885 2A5C  
                                                   l12677 48D0  
                                                   l12669 48B8  
                                                   l12757 2C26  
                                                   l14621 0E50  
                                                   l14613 0D4A  
                                                   l13717 2072  
                                                   l13637 1E6C  
                                                   l13901 5424  
                                                   l12933 6F08  
                                                   l13485 35D6  
                                                   l13477 35A6  
                                                   l12845 499E  
                                                   l13557 34B6  
                                                   l13565 3514  
                                                   l14381 07A0  
                                                   l14509 0AA0  
                                                   l15229 6E6A  
                                                   l15237 6BD4  
                                                   l15069 401C  
                                                   l15077 4040  
                                                   l16125 5B52  
                                                   l11983 6810  
                                                   l11887 2A66  
                                                   l12695 4932  
                                                   l12687 4918  
                                                   l13399 318C  
                                                   l12783 2D3E  
                                                   l12767 2C6E  
                                                   l12759 2C4E  
                                                   l14631 1058  
                                                   l14623 0F84  
                                                   l13663 1EDE  
                                                   l13911 5446  
                                                   l12863 4A50  
                                                   l12855 4A36  
                                                   l14471 0A22  
                                                   l14455 09E2  
                                                   l14391 07A6  
                                                   l14359 0734  
                                                   l14199 02C2  
                                                   l14543 2774  
                                                   l14527 26EA  
                                                   l15191 6468  
                                                   l13807 53E0  
                                                   l16135 5B68  
                                                   l15441 46A4  
                                                   l12777 2CF0  
                                                   l14641 1124  
                                                   l13681 1F3A  
                                                   l13905 543A  
                                                   l12873 6EBC  
                                                   l12857 4A3A  
                                                   l13585 431C  
                                                   l14465 09F4  
                                                   l14473 0A28  
                                                   l14369 0788  
                                                   l14561 27DA  
                                                   l15601 624E  
                                                   l14651 11DC  
                                                   l14635 1122  
                                                   l13683 1F42  
                                                   l13923 5460  
                                                   l14491 0A76  
                                                   l14483 0A66  
                                                   l14475 0A2E  
                                                   l14395 07B4  
                                                   l14379 078E  
                                                   l14299 057C  
                                                   l14547 2782  
                                                   l14803 5A8E  
                                                   l15195 646E  
                                                   l11989 6846  
                                                   l15277 5ECE  
                                                   l15429 4666  
                                                   l12789 2DAE  
                                                   l13685 1F50  
                                                   l13589 433E  
                                                   l13861 43E0  
                                                   l13845 3342  
                                                   l14469 0A1C  
                                                   l14581 28A2  
                                                   l14549 279C  
                                                   l15197 6480  
                                                   l14727 3946  
                                                   l15359 3F3E  
                                                   l11999 23F4  
                                                   l12967 4F20  
                                                   l12983 4FAE  
                                                   l12991 4FC4  
                                                   l14671 12B2  
                                                   l13919 5454  
                                                   l13847 334C  
                                                   l13855 7580  
                                                   l14567 27EC  
                                                   l14591 293C  
                                                   l14823 5AC6  
                                                   l14737 398E  
                                                   l14729 395C  
                                                   l15297 3E8E  
                                                   l15481 6706  
                                                   l12993 4FC8  
                                                   l13873 4492  
                                                   l14585 2912  
                                                   l14817 5ABC  
                                                   l13953 4574  
                                                   l12987 4FB8  
                                                   l12979 4FA8  
                                                   l14659 1256  
                                                   l14683 1336  
                                                   l13699 1FA6  
                                                   l12899 7348  
                                                   l13875 4496  
                                                   l14579 289E  
                                                   l14819 5AC2  
                                                   l14763 51F6  
                                                   l14755 51D2  
                                                   l12997 4FDA  
                                                   l14677 1320  
                                                   l14853 3C60  
                                                   l14951 6410  
                                                   l14935 63AA  
                                                   l15479 6702  
                                                   l14687 135E  
                                                   l14767 5210  
                                                   l13959 460A  
                                  __end_of_SysConfigSleep 616E  
                                                   l13897 5416  
                                                   l14777 5240  
                                                   l14875 3ACE  
                                                   l14779 5244  
                                                   l14981 37FC  
                                                   l14973 37A2  
                                                   l14967 3776  
                                                   l14975 37A6  
                                                   l14799 5A74  
                                                   l14887 7324  
                                                   l14997 2132  
                                                   l15995 579A  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                              _FillSubKey 6B1A  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 78AA  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 77C8  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 608C  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 662E  
                                                   u12520 6D9A  
                                                   u13260 14D4  
                                       ??_EnableChannels1 006D  
                                                   u12560 683A  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _T3CON 000FB1  
                                                   u13265 14CA  
                                                   _LATD1 007C61  
                                                   u12730 5FAA  
                                    RxJoinResponse@status 0001  
                                                   u14155 1836  
                                                   _LATD3 007C63  
                                                   u16100 04D2  
                                                   _LATD4 007C64  
                                                   u13365 15CE  
                                                   u12567 6830  
                       __end_of_AckRetransmissionCallback 4B4E  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u13730 2D0C  
                                                   u16130 05A4  
                                                   u13715 2CA4  
                                                   u16028 041A  
                                                   u17005 12C4  
                                                   u15405 44B8  
                                                   u16150 06A6  
                                                   u13591 486E  
                                                   u14480 1BA6  
                                                   u16208 071C  
                                                   u16128 056A  
                                                   u17200 3BEA  
                                                   u15248 53C0  
                                                   u14705 312E  
                                                   u13745 2D2E  
                                                   u17210 3CE6  
                                                   u13755 2D50  
                                                   u17205 3BE0  
                                                   u17215 3CDC  
                                                   u14680 30EA  
                                                   u17240 3A42  
                                                   u15608 4616  
                                                   u15560 4532  
                                                   u15545 618C  
                                                   u17250 3A58  
                                                   u16290 0850  
                                                   u17260 3B54  
                                                   u14764 6976  
                                                   u16428 0A54  
                                                   u17405 37EC  
                                                   u14765 6970  
                                                   u16358 09D0  
                                                   u17190 3BD4  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17415 380E  
                                                   u14695 310C  
                                                   u17255 3A4E  
                                                   u16615 2728  
                                                   u15575 4564  
                                                   u15728 634A  
                                                   u17265 3B4A  
                                                   u15585 4586  
                                                   u17505 2332  
                                                   u17515 235C  
                                                   u17620 4054  
                                                   u18340 6272  
                                                   u17390 37CA  
                                                   u15870 017A  
                                                   u16815 0B5E  
                                                   u15951 029E  
                                                   u17720 4AE6  
                                                   u16825 0BD8  
                                                   u16745 28BC  
                                                   u17490 22F2  
                                                   u16835 0D7E  
                                                   u17635 4086  
                                                   u16845 0DF8  
                                                   u17645 40A8  
                                                   u16870 0FC4  
                                                   u16880 0FE2  
                                                   u16890 10E6  
                                                   u16980 1282  
                                                   u17828 62F8  
                                                   u17748 4B0C  
                                                   u16885 0FD8  
                                                   u17925 644C  
                                                   u16895 10DC  
                                                   u19288 5822  
                                                   u16995 12A2  
                                                   u17788 4B32  
                                                   u19577 6254  
                                                   u19587 7196  
                                         __end_of___lwmod 6D7E  
                                                   i2l242 6A82  
                                           ?_RADIO_RxDone 0001  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR3H 000FB3  
                                                   _TMR1L 000FCE  
                                                   _TMR3L 000FB2  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 782A  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                       __size_of_TMR3_SetInterruptHandler 000A  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 78B6  
                                 ?_SetReceptionNotOkState 0001  
                               ?_TMR3_SetInterruptHandler 0064  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 7762  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                        __end_of_TMR3_ISR 7754  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 00EE  
                          ??_TMR3_DefaultInterruptHandler 0001  
                                 __end_of_PIN_MANAGER_IOC 7822  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6C7E  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0052  
                          LORAWAN_RxDone@frmPayloadLength 017A  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 772A  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 0178  
                                  _UpdateJoinSuccessState 4506  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 77D2  
                                              _ComputeMic 68A8  
                                 __end_of_TMR1_Initialize 7280  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 7842  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4864  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2DB6  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 74CA  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 0169  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 26C4  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 17FA  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 599C  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 00D6  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 76F0  
                                            __end_of_main 5B78  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 69E8  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5F1E  
                                        _SetJoinFailState 72CC  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 758C  
                                    _ExecuteRxTimingSetup 72F0  
                                       __end_of_IOCB4_ISR 7556  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00BE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 784A  
                                               ??_AESCmac 00C3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00E8  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E2  
                                          ??_RADIO_TxDone 00D2  
                                         _TMR3_StartTimer 78A6  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 78BA  
                                   _TMR3_InterruptHandler 01FE  
                       __end_of_LORAWAN_LinkCheckCallback 4136  
                          __end_of_SetReceptionNotOkState 6374  
                             __end_of_UpdateReceiveDelays 6B1A  
                         __end_of_AssembleEncryptionBlock 58F6  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6D7E  
                                              _RxDataDone 78D0  
                                          _EnableChannels 7666  
                                      __size_of_LoRaSleep 0020  
                               ??_PrepareJoinRequestFrame 00D3  
                                          _HALSPICSAssert 78BE  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6C7E  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 76A4  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 56DE  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 562A  
                                _RADIO_FSKPacketSent$1215 00DA  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 7336  
                                                  _T1GCON 000FCC  
                                                  _T3GCON 000FB4  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 351E  
                                 __end_of_TMR3_Initialize 720A  
                  __end_of_LORAWAN_ReceiveWindow2Callback 53FC  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 5334  
                                                  i2l1347 7530  
                                                  i2l2501 0054  
                                                  i2l2503 0064  
                                                  i2l2507 006E  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2722 76C8  
                                                  i2l2497 0038  
                                                  i2l2499 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9931 4CC8  
                                                  i2l9933 4D18  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00D6  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 029E  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 779E  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FE6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 7700  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 608C  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 7358  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 017D  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 78D6  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 78D4  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 70E0  
                                               ??___abdiv 0065  
                                                  ___lmul 5D1A  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 78AE  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 58F6  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 67FE  
                                                  _memset 71B8  
                                                  clear_0 59E4  
                                                  clear_1 59F6  
                                                  clear_2 5A02  
                                                  clear_3 5A0E  
                                                  clear_4 5A1A  
                                                  clear_5 5A26  
                                                  clear_6 5A32  
                                 SwTimerIsRunning@timerId 0064  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 767C  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 78DA  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 78D8  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 78C2  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 008D  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4966  
                                  __end_of_ExecuteLinkAdr 36D0  
                                      ??_ExecuteDutyCycle 0066  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR3_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 6EE0  
                              _LORAWAN_SetChannelIdStatus 6EA8  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007D  
                                           AESEncode@aux2 007C  
                                           AESEncode@aux3 007E  
                                 __end_of_TMR1_WriteTimer 74E6  
                                   __end_of_SwTimerCreate 6242  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00CA  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 751E  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 737A  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DC  
                                          ??_LORAWAN_Send 00DA  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5A38  
                           __end_of_RADIO_FSKPayloadReady 5ADC  
                                          _RADIO_Transmit 2FA6  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 7280  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6BF4  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 0172  
                                          _maxPayloadSize FF6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                                   __end_of_TMR3_CallBack 7502  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 7818  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 73DA  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 4F02  
                              __end_of_handle16sInterrupt 76CC  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 7082  
                                     ??_SYSTEM_Initialize 0066  
                                 __end_of_TMR3_StartTimer 78AA  
                              __end_of_DIO4_ISR_Lora_Init 78CC  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                               ?_TMR3_ISR 0001  
                                _RADIO_WriteConfiguration 1382  
                                    __size_of_readAndSend 0066  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF9B  
                               __size_of_LORAWAN_Mainloop 003A  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 78D8  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 78D6  
                                __end_of_RADIO_WritePower 5334  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 7738  
                                       LORAWAN_RxDone@hdr 017B  
                                            ??_RADIO_DIO0 00E4  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 63DA  
                                         _UpdateFrequency 6E6E  
                                  _AutomaticReplyCallback 73FA  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 016A  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 6FEC  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 7358  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 78CC  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput 78CA  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 77D2  
                                        RADIO_DIO0@opMode 00E7  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0064  
                      __end_of_IncludeMacCommandsResponse 1E0E  
                              _IncludeMacCommandsResponse 1B16  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00DC  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 7690  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 739A  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 3194  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3E80  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00E8  
                                              __pbssBANK1 017D  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 74CA  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 60FE  
                                        ?_TMR3_Initialize 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 7842  
                                              __pnvCOMRAM 005A  
                                    __end_of_RADIO_SetCRC 77FA  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 5266  
                              __end_of_RADIO_RxFSKTimeout 6F84  
                                    __end_of_RADIO_TxDone 3D1E  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 64A4  
                                      __end_of_RADIO_DIO1 6E6E  
                                      __end_of_RADIO_DIO2 6BF4  
                                      __end_of_RADIO_DIO3 7638  
                                      __end_of_RADIO_DIO4 7620  
                                      __end_of_RADIO_DIO5 7608  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A02  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 7490  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 67A6  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                            readAndSend@j 00DE  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 43D2  
                        __end_of_TMR3_SetInterruptHandler 77B4  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0006  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00A8  
                                      EncryptFRMPayload@j 00A9  
                                      EncryptFRMPayload@k 00A7  
                                              ??_TMR1_ISR 002A  
                                              ??_TMR3_ISR 0001  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 7572  
                                        _ValidateRxOffset 767C  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 776E  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A02  
                                                 _AESCmac 17FA  
                                  ComputeMic@bufferLength 00CE  
                                 __size_of_ADC_SelChannel 0018  
                                 __end_of_UpdateDataRange 4A5C  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10613 4E36  
                                                 i2l10623 4EE8  
                                                 i2l10625 4EEA  
                                                 i2l10619 4E86  
                                                 i2l10595 6DC8  
                                    EncryptFRMPayload@dir 0097  
                                      _RADIO_GetPacketSnr 7870  
                                    EncryptFRMPayload@key 009C  
                                   __end_of_UpdateTxPower 783A  
                                     _RADIO_SetIQInverted 77E6  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00EE  
                                     i2_SwTimersInterrupt 4E16  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 72F0  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 7638  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 00CD  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 5E22  
                             PrepareJoinRequestFrame@iCtr 00DB  
                               _IOCB4_SetInterruptHandler 77BE  
                       __end_of_SetCallbackSoftwareTimers 562A  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4A5C  
                             PrepareJoinRequestFrame@mhdr 00D9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00BC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FFA2  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D5  
                                  _InitDefault868Channels 6374  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00D9  
                                   _StopAllSoftwareTimers 69E8  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 6EA8  
                                     AssemblePacket@fCtrl 00D3  
                                                 ___abdiv 6856  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0002  
                                              AESEncode@i 007F  
                                               _AESEncode 23EA  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 777A  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                        ?_TMR3_StartTimer 0001  
                                 __end_of_UpdateDutyCycle 701E  
                                                 ___lldiv 6016  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 65CC  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6D40  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 599C  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 01D8  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2DB6  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00A1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5ADC  
                                                 __ptext1 6242  
                                                 __ptext2 6F18  
                                                 __ptext3 75C0  
                                                 __ptext4 60FE  
                                                 __ptext5 737A  
                                                 __ptext6 71E2  
                                                 __ptext7 78A6  
                                                 __ptext8 77AA  
                                                 __ptext9 725A  
                                    __end_of_LORAWAN_Init 674A  
                                    __end_of_LORAWAN_Join 5C92  
                                    __end_of_LORAWAN_Send 54B8  
                                           _DIO0_ISR_Lora 78A0  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D1E  
                                               _IOCB4_ISR 753A  
                              ExecuteNewChannel@frequency 0073  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A62  
                                   _OSCILLATOR_Initialize 7762  
                          __end_of_UpdateJoinSuccessState 4632  
                                 __size_of_LORAWAN_TxDone 0888  
                              __end_of_RADIO_SetBandwidth 7862  
                                         _RADIO_GetStatus 7876  
                                               _T3CONbits 000FB1  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 7894  
                                             _SwTimerStop 74AE  
                                                 _payload 01C4  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01E8  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 335C  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 7888  
                              __size_of_SYSTEM_Initialize 0020  
                    __end_of_LORAWAN_SetNetworkSessionKey 7164  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 713A  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00CC  
                                    end_of_initialization 5A38  
                                 _CreateAllSoftwareTimers 68FA  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 77C8  
                                   ??_RADIO_FSKPacketSent 00D2  
                                          _GenerateSubkey 4864  
                                   _RADIO_WatchdogTimeout 6C3C  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 67FE  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 3FDE  
                                          ??_SwTimerStart 008D  
                                               i2u1093_40 6DD8  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 783A  
                                   _UpdateChannelIdStatus 475E  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 7792  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 6EE0  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 0094  
                                        _LORAWAN_GetState 7862  
                                    _HALResetPinMakeInput 78C6  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 7852  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 78AE  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6DFA  
                            __end_of_RADIO_SetFSKSyncWord 713A  
                                      LORAWAN_Join@result 00DD  
                                      __end_of_CheckFlags 66EC  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3E80  
                                      _DIO0_ISR_Lora_Init 7792  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 005A  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                            ??_FillSubKey 0069  
                                        RxDataDone@status 0067  
                            SwTimersInterrupt@timeElapsed 0084  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 7232  
                               __size_of_ExecuteDevStatus 000A  
                                _TMR3_SetInterruptHandler 77AA  
                            __end_of_RADIO_WriteFrequency 50BE  
                              __end_of_RADIO_RegisterRead 72CC  
                       __end_of_LORAWAN_GetMaxPayloadSize 6AD0  
                          __end_of_HALResetPinOutputValue 76B8  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 72A6  
                                __end_of_ConfigureRadioTx 6C3C  
                                         _RADIO_RxTimeout 720A  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 351E  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02F4  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6CC0  
                                          _TMR1_ReadTimer 7472  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4966  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 0036  
                                           RADIO_RxDone@i 00E3  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D4  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00F1  
                                      __end_of_GetRx1Freq 76DE  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00CF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 009E  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5EA0  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 771C  
                                         _RADIO_WriteMode 50BE  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D1  
                                      __end_of_FillSubKey 6B64  
                                 _AssembleEncryptionBlock 5844  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF6D  
                                     AESEncodeLoRa@useKey 0084  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 7832  
                                      LORAWAN_Send@buffer 00D7  
                                          __end_of_Random 737A  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 76A4  
                            __end_of_INTERRUPT_Initialize 78B6  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 7870  
                                 __end_of_RADIO_GetStatus 787C  
                                          __end_of___lmul 5DA0  
                                      LORAWAN_Send@result 00DB  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 73BA  
                                           __pidataCOMRAM 7822  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0080  
                                       __size_of_TMR1_ISR 000E  
                                       __size_of_TMR3_ISR 000E  
                                          _ADC_SelChannel 75C0  
                                      __end_of_ComputeMic 68FA  
                                               Random@max 0077  
                                          __end_of_memcpy 6856  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6D02  
                                  __end_of_TMR1_ReadTimer 7490  
                                          __end_of_memset 71E2  
                                         _SPI2_Initialize 779E  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 77F0  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 5196  
                                            _RADIO_TxDone 3B94  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 599C  
                                      _handle16sInterrupt 76B8  
                                          _ConfigureRadio 5B78  
                                      LORAWAN_RxDone@mhdr 016B  
                                      LORAWAN_RxDone@temp 0171  
                                            ??_RxDataDone 0068  
                                      _DIO4_ISR_Lora_Init 78CA  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer 74AE  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 7454  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0066  
                         __size_of_PIN_MANAGER_Initialize 0048  
                           __end_of_TMR_OverrideRemaining 6016  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 75C0  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 009F  
                                            AESCmac@input 00C0  
                        __end_of_LORAWAN_SetDeviceAddress 75F0  
                                         ?_GenerateSubkey 0094  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 7572  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 758C  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                     ?_handle16sInterrupt 0001  
                                __end_of_ValidateRxOffset 7690  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 7852  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 4FE2  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6DBC  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 78B2  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5A3E  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 78C6  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00DD  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 6440  
                          __end_of_AutomaticReplyCallback 7418  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0026  
                                    _macEndDevCmdReplyLen FF94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F2  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BC  
                                 __end_of_RADIO_RxTimeout 7232  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 78D2  
                                ??_SetReceptionNotOkState 00A0  
                                          ??_TMR_ISR_lora 002A  
                                  __end_of_ADC_SelChannel 75D8  
                                         ??_DIO0_ISR_Lora 0001  
                                    ??_handle16sInterrupt 0001  
                                             __pdataBANK1 01C8  
                                       _ValidateDataRange 6F84  
                                      __end_of_ExtractMic 6CC0  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 70E0  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 7418  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor 784A  
                                      _RADIO_RxFSKTimeout 6F4E  
                                                ?_AESCmac 00BC  
                                  __size_of_TMR1_CallBack 001C  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 007B  
                                            AESEncode@key 006C  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 5C06  
                                          _LORAWAN_RxDone 0098  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0AFA  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5D1A  
                  __end_of_LORAWAN_EnterContinuousReceive 656A  
                 __size_of_LORAWAN_EnterContinuousReceive 0062  
                          _LORAWAN_EnterContinuousReceive 6508  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 78D0  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                  __size_of_TMR3_CallBack 001C  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D2A  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 5196  
                 __end_of_UnconfirmedTransmissionCallback 630E  
                __size_of_UnconfirmedTransmissionCallback 0066  
                         _UnconfirmedTransmissionCallback 62A8  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                                 _RADIO_ReceiveStart$1199 009C  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01B4  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 710E  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 7082  
       __end_of_ResetParametersForUnconfirmedTransmission 770E  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 7700  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01F8  
                                               _bandwidth FF8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 66EC  
                                            _LORAWAN_Join 5C06  
                                            _LORAWAN_Send 53FC  
                                  RADIO_FSKPayloadReady@i 00E3  
                                       _ValidateFrequency 674A  
                                               __pnvBANK1 01F8  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 4FE2  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 78BA  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 6FEC  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 6B64  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 335C  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                __size_of_TMR3_Initialize 0028  
                                               _macBuffer 04E0  
                                               _dioStatus 00F0  
                               __end_of_ValidateDataRange 6FB8  
                           RADIO_FSKPayloadReady@irqFlags 00E2  
                                       _SwTimersInterrupt 4B4E  
                                       ??_SwTimersExecute 00DD  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 77BE  
                                           __pmediumconst FE6C  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 77AA  
                                               __ptext100 1B16  
                                               __ptext101 7870  
                                               __ptext110 668E  
                                               __ptext102 58F6  
                               __end_of_ValidateChannelId 7436  
                                               __ptext111 3A02  
                                               __ptext103 4136  
                                               __ptext200 7862  
                                               __ptext120 787C  
                                               __ptext112 0AFA  
                                               __ptext104 5844  
                                               __ptext201 76DE  
                                               __ptext121 7436  
                                               __ptext113 6D02  
                                               __ptext105 54B8  
                                               __ptext210 78D4  
                                               __ptext202 7738  
                                               __ptext130 7842  
                                               __ptext122 2BB6  
                                               __ptext114 73DA  
                                               __ptext106 6C7E  
                                               __ptext211 6A36  
                                               __ptext131 77E6  
                                               __ptext123 7280  
                                               __ptext115 7876  
                                               __ptext107 5E22  
                                               __ptext220 78D6  
                                               __ptext212 6DBC  
                                               __ptext204 7746  
                                               __ptext140 2FA6  
                                               __ptext132 77F0  
                                               __ptext124 771C  
                                               __ptext116 6508  
                                               __ptext108 5F1E  
                                               __ptext221 788E  
                                               __ptext213 751E  
                                               __ptext205 74E6  
                                               __ptext141 1382  
                                               __ptext133 5B78  
                                               __ptext125 5C06  
                                               __ptext117 78D0  
                                               __ptext109 608C  
                                               __ptext222 7556  
                                               __ptext214 4E16  
                                               __ptext206 78D2  
                                               __ptext150 68A8  
                                               __ptext142 5266  
                                               __ptext134 784A  
                                               __ptext126 758C  
                                               __ptext118 7700  
                                               __ptext223 7894  
                                               __ptext215 4C3C  
                                               __ptext207 76B8  
                                               __ptext151 17FA  
                                               __ptext143 64A4  
                                               __ptext135 7852  
                                               __ptext127 662E  
                                               __ptext119 770E  
                                               __ptext224 78D8  
                                               __ptext216 7490  
                                               __ptext208 7754  
                                               __ptext160 5574  
                                               __ptext152 4864  
                                               __ptext144 656A  
                                               __ptext136 77FA  
                                               __ptext128 4F02  
                                               __ptext225 789A  
                                               __ptext217 7818  
                                               __ptext209 7502  
                                               __ptext161 5EA0  
                                               __ptext153 6B1A  
                                               __ptext145 4632  
                                               __ptext137 710E  
                                               __ptext129 6BF4  
                                               __ptext226 75A6  
                                               __ptext218 753A  
                                               __ptext170 7882  
                                               __ptext162 3E80  
                                               __ptext154 7232  
                                               __ptext146 7358  
                                               __ptext138 5DA0  
                                               __ptext227 78A0  
                                               __ptext219 7888  
                                               __ptext171 4FE2  
                                               __ptext163 56DE  
                                               __ptext155 23EA  
                                               __ptext147 699A  
                                               __ptext139 785A  
                                               __ptext228 78DA  
                                               __ptext180 76A4  
                                               __ptext172 65CC  
                                               __ptext164 69E8  
                                               __ptext156 3D1E  
                                               __ptext148 5D1A  
                                               __ptext229 0000  
                                               __ptext181 78C2  
                                               __ptext173 7454  
                                               __ptext165 7804  
                                               __ptext157 2962  
                                               __ptext149 6D40  
                                               __ptext190 4B4E  
                                               __ptext182 78C6  
                                               __ptext174 780E  
                                               __ptext166 386C  
                                               __ptext158 66EC  
                                               __ptext191 4D2A  
                                               __ptext183 36D0  
                                               __ptext175 76F0  
                                               __ptext167 7050  
                                               __ptext159 772A  
                                               __ptext192 7472  
                                               __ptext184 6016  
                                               __ptext176 78BA  
                                               __ptext168 50BE  
                                               __ptext193 6CC0  
                                               __ptext185 74AE  
                                               __ptext177 78BE  
                                               __ptext169 72A6  
                                               __ptext194 6374  
                                               __ptext186 5C92  
                                               __ptext178 6FB8  
                                               __ptext195 63DA  
                                               __ptext187 5F9A  
                                               __ptext179 718E  
                                               __ptext196 71B8  
                                               __ptext188 6D7E  
                                               __ptext197 67FE  
                                               __ptext189 74CA  
                                               __ptext198 68FA  
                                               __ptext199 61D8  
                                       _EncryptFRMPayload 4136  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0084  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 475E  
                                                ?___lwmod 0072  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5DA0  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5574  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0AFA  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 1382  
                                      ?_EncryptFRMPayload 0094  
                                     __end_of_readAndSend 62A8  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 73BA  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 77DC  
                           __end_of_RADIO_SetLoRaSyncWord 780E  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1E0E  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00D5  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4D2A  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00E6  
                                       _DutyCycleCallback 2102  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6DBC  
                                                _ADC_Init 7738  
                                                _ADC_Read 6F18  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00A2  
                                __end_of_LORAWAN_GetState 786A  
                                 __end_ofi2_TMR_SwapTimer 6DFA  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00D2  
                                      AssemblePacket@port 00CA  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2BB6  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6E34  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 78B2  
                                           _SwTimerCreate 61D8  
                          __end_of_InitDefault868Channels 63DA  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 7502  
                               __end_of_ValidateFrequency 67A6  
                                        _SwTimerIsRunning 73DA  
                                        _ExecuteLinkCheck 701E  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 789A  
                                _LORAWAN_SetDeviceAddress 75D8  
                                                _INT2_ISR 788E  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 785A  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00EC  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6D02  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                                        _ExecuteDutyCycle 694C  
                                         _HALDIO5PinValue 7882  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4C3C  
                                __size_of_TMR1_WriteTimer 001C  
                     __size_of_INTERRUPT_InterruptManager 0088  
                              __end_of_DIO2_ISR_Lora_Init 7786  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0096  
                                        GenerateSubkey@k2 0098  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0076  
                              ??_TMR3_SetInterruptHandler 0066  
                                           _TMR3_CallBack 74E6  
                               __end_of_EncryptFRMPayload 428A  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 0170  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 65CC  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0064  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 00E8  
                                    __end_of_IO_pins_init 76F0  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 56DE  
                           EncryptFRMPayload@bufferLength 0096  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 7754  
                                ConfigureRadioTx@dataRate 007A  
                                                _TMR3_ISR 7746  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6AD0  
                         __size_of_SetReceptionNotOkState 0066  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2102  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init 7786  
                               __end_of_DutyCycleCallback 23EA  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 5F9A  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                __size_of_TMR3_StartTimer 0004  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0080  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3B94  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 0174  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 59B0  
                                               copy_data1 59D0  
                                   ?_INTERRUPT_Initialize 0001  
                                     _EncKeySchedule$4148 0068  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 78CE  
                             __end_of_RADIO_SetIQInverted 77F0  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6A84  
                                             _RADIO_Reset 6FB8  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 72A6  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 43D2  
                             __end_ofi2_SwTimersInterrupt 4F02  
                               _LORAWAN_GetMaxPayloadSize 6A84  
                              LORAWAN_RxDone@extractedMic 016C  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0098  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00C2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                   handle16sInterrupt@counterSleepTimeout 0045  
                                          ?_TMR3_CallBack 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 71B8  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 751E  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 6242  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 0056  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5E22  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 00CA  
                                    AssemblePacket@buffer 00CB  
                                        SwTimersExecute@i 00E1  
                                      ??_ValidateDataRate 0064  
                                       ??_TMR3_Initialize 0066  
                                _TMR1_SetInterruptHandler 77B4  
                                  _IOCB4_InterruptHandler 01FA  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 771C  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 770E  
                                   _TMR1_InterruptHandler 01FC  
                                        ??_GenerateSubkey 009A  
                                        _CountfOptsLength 54B8  
                                              _HALSPISend 780E  
                                     ?_ComputeSessionKeys 0094  
                                          _rxWindowOffset FF7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 2FA6  
                                 __size_of_SysConfigSleep 0070  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 7336  
                                           _UpdateTxPower 7832  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 710E  
                                         _allocatedTimers 00EF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 772A  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 786A  
                                                __ptext10 78AA  
                                                __ptext11 6B64  
                                                __ptext20 777A  
                                                __ptext12 7762  
                                                __ptext21 77BE  
                                                __ptext13 739A  
                                                __ptext30 779E  
                                                __ptext22 7786  
                                                __ptext14 776E  
                                                __ptext31 73BA  
                                                __ptext23 7792  
                                                __ptext15 77B4  
                                                __ptext40 4A5C  
                                                __ptext32 713A  
                                                __ptext24 78B2  
                                                __ptext16 78AE  
                                                __ptext41 3FDE  
                                                __ptext33 75D8  
                                                __ptext25 70B2  
                                                __ptext17 786A  
                                                __ptext50 7620  
                                                __ptext42 562A  
                                                __ptext34 7164  
                                                __ptext26 77C8  
                                                __ptext18 78CA  
                                                __ptext51 6BAC  
                                                __ptext43 5334  
                                                __ptext35 6DFA  
                                                __ptext27 77D2  
                                                __ptext19 78CC  
                                                __ptext60 5A3E  
                                                __ptext52 6E34  
                                                __ptext44 6C3C  
                                                __ptext36 5792  
                                                __ptext28 78CE  
                                                __ptext61 26C4  
                                                __ptext53 720A  
                                                __ptext45 6F4E  
                                                __ptext37 2102  
                                                __ptext29 782A  
                                                __ptext70 2DB6  
                                                __ptext62 0098  
                                                __ptext54 70E0  
                                                __ptext46 62A8  
                                                __ptext38 4506  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 72F0  
                                                __ptext63 616E  
                                                __ptext55 6440  
                                                __ptext47 76CC  
                                                __ptext39 73FA  
                                                __ptext80 6FEC  
                                                __ptext72 6AD0  
                                                __ptext64 7572  
                                                __ptext56 7314  
                                                __ptext48 75F0  
                                                __ptext81 4966  
                                                __ptext73 428A  
                                                __ptext65 3194  
                                                __ptext57 3B94  
                                                __ptext49 7608  
                                                __ptext90 7832  
                                                __ptext82 6EA8  
                                                __ptext74 767C  
                                                __ptext66 43D2  
                                                __ptext58 5196  
                                                __ptext91 783A  
                                                __ptext83 7418  
                                                __ptext75 7650  
                                                __ptext67 630E  
                                                __ptext59 6856  
                                                __ptext92 7666  
                                                __ptext84 701E  
                                                __ptext76 335C  
                                                __ptext68 72CC  
                                                __ptext93 67A6  
                                                __ptext85 351E  
                                                __ptext77 674A  
                                                __ptext69 78B6  
                                                __ptext94 475E  
                                                __ptext86 7336  
                                                __ptext78 6F84  
                                                __ptext95 694C  
                                                __ptext87 7690  
                                                __ptext79 6E6E  
                                                __ptext96 77DC  
                                                __ptext88 7638  
                                                __ptext97 53FC  
                                                __ptext89 6EE0  
                                                __ptext98 6A84  
                                                __ptext99 1E0E  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 3FDE  
                                  __end_of_StartReTxTimer 4506  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 630E  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01C8  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 7888  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 009C  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 7436  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 739A  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 753A  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 0096  
                                           _timerOverflow 00F2  
                                            _SwTimerStart 5C92  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00BB  
                                         GenerateSubkey@l 00AB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E16  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E2  
                             __end_of_ValidateChannelMask 6F18  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0090  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 787C  
                                       ??_TMR1_WriteTimer 0066  
                    __end_of_TMR3_DefaultInterruptHandler 78D4  
                   __size_of_TMR3_DefaultInterruptHandler 0002  
                            _TMR3_DefaultInterruptHandler 78D2  
                                              _RADIO_DIO0 6440  
                                              _RADIO_DIO1 6E34  
                                              _RADIO_DIO2 6BAC  
                                              _RADIO_DIO3 7620  
                                              _RADIO_DIO4 7608  
                                              _RADIO_DIO5 75F0  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 78DC  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 78DA  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FF85  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 0094  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FF7D  
                                              _RADIO_Init 386C  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0044  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 78BE  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 2962  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 3194  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5EA0  
                                       _RADIO_TxDone$1211 00DA  
                                      _EXT_INT_Initialize 70B2  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 5F9A  
                                       ??_TMR3_StartTimer 0064  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 7454  
                                         _SwTimersExecute 5792  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 77E6  
                                 ?_PIN_MANAGER_Initialize 0001  
                                         ??_TMR3_CallBack 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 009B  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2092 00BC  
                                     _LORAWAN_TxDone$2093 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 386C  
                               __end_of_RADIO_ReleaseData 7882  
                              _LORAWAN_LinkCheckConfigure 36D0  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 78C2  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001A  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0082  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 7050  
             __end_of_UpdateRetransmissionAckTimeoutState 61D8  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 616E  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                             __size_of_handle16sInterrupt 0014  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$4143 0075  
                                          _AESEncode$4144 0077  
                                          _AESEncode$4145 0079  
                                   __end_of_DIO0_ISR_Lora 78A6  
                                __end_of_SwTimerIsRunning 73FA  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 7050  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                           ?_TMR3_DefaultInterruptHandler 0001  
                                            _rxWindowSize FF85  
                                  __end_of_EncKeySchedule 2BB6  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 789A  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6D40  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 699A  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 7666  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 7650  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3502 00A0  
                        __end_of_INT1_SetInterruptHandler 77DC  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00DE  
                                   __size_of_TMR_ISR_lora 004E  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 788E  
                                    _SystemBlockingWaitMs 718E  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 0094  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 75A6  
                            __end_of_ExecuteRxTimingSetup 7314  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init 76DE  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 6508  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 64A4  
                __end_of_LORAWAN_SetApplicationSessionKey 718E  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 7164  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E2  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 7314  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6BAC  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 7472  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4C3C  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 7818  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00E8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 725A  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 017E  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 26C4  
                             __end_of_RADIO_SetModulation 785A  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00DD  
                                     ?i2_TMR_GetDeltaTime 0009  
